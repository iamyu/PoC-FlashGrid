
































PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.



PL/SQL procedure successfully completed.

PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


SQL*Plus: Release 19.0.0.0.0 - Production on Mon Feb 10 11:31:24 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


SQL*Plus: Release 19.0.0.0.0 - Production on Mon Feb 10 11:31:24 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

Last Successful login time: Mon Feb 10 2020 11:31:19 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  Last Successful login time: Mon Feb 10 2020 11:31:19 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: text

Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: html


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number




Specify the number of days of snapshots to choose from
Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
Entering the number of days (n) will result in the most recent
specifying a number lists all completed snapshots.


(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.



Listing the last day's Completed Snapshots

Listing the last day's Completed Snapshots
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		124  10 Feb 2020 00:00	  1
				125  10 Feb 2020 01:00	  1
				126  10 Feb 2020 02:00	  1
				127  10 Feb 2020 03:00	  1
				128  10 Feb 2020 04:00	  1
				129  10 Feb 2020 05:00	  1
				130  10 Feb 2020 06:00	  1
				131  10 Feb 2020 07:00	  1
Instance     DB Name	  Snap Id	Snap Started	Snap Level
				132  10 Feb 2020 08:00	  1
				133  10 Feb 2020 09:00	  1
------------ ------------ ---------- ------------------ ----------
				134  10 Feb 2020 09:08	  1

				135  10 Feb 2020 09:18	  1
p30db1	     P30DB		124  10 Feb 2020 00:00	  1
				125  10 Feb 2020 01:00	  1
				126  10 Feb 2020 02:00	  1
				127  10 Feb 2020 03:00	  1
				128  10 Feb 2020 04:00	  1
				129  10 Feb 2020 05:00	  1
				130  10 Feb 2020 06:00	  1
				131  10 Feb 2020 07:00	  1
				132  10 Feb 2020 08:00	  1
				133  10 Feb 2020 09:00	  1
				134  10 Feb 2020 09:08	  1
				135  10 Feb 2020 09:18	  1
				136  10 Feb 2020 10:00	  1
				137  10 Feb 2020 10:47	  1
				138  10 Feb 2020 10:58	  1
				139  10 Feb 2020 11:09	  1
				140  10 Feb 2020 11:19	  1
				141  10 Feb 2020 11:21	  1
				142  10 Feb 2020 11:31	  1
				136  10 Feb 2020 10:00	  1
				137  10 Feb 2020 10:47	  1
				138  10 Feb 2020 10:58	  1
				139  10 Feb 2020 11:09	  1

				140  10 Feb 2020 11:19	  1

				141  10 Feb 2020 11:21	  1
				142  10 Feb 2020 11:31	  1
Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 141

End   Snapshot Id specified: 142



Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 141

End   Snapshot Id specified: 142



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_141_142.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.txt


Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_141_142.html.	To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.html

<html lang="en"><head><title>AWR Report for DB: P30DB, Inst: p30db1, Snaps: 141-142</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY report for

</h1>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">DB Name</th><th class="awrbg" scope="col">DB Id</th><th class="awrbg" scope="col">Unique Name</th><th class="awrbg" scope="col">Role</th><th class="awrbg" scope="col">Edition</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">RAC</th><th class="awrbg" scope="col">CDB</th></tr>
<tr><td scope="row" class='awrnc'>P30DB</td><td align="right" class='awrnc'>3393773525</td><td class='awrnc'>p30db</td><td class='awrnc'>PRIMARY</td><td class='awrnc'>EE</td><td class='awrnc'>19.0.0.0.0</td><td class='awrnc'>YES</td><td class='awrnc'>NO</td></tr>
</table>
<p />
<p />
<table border="0" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Inst Num</th><th class="awrbg" scope="col">Startup Time</th></tr>
<tr><td scope="row" class='awrnc'>p30db1</td><td align="right" class='awrnc'>1</td><td class='awrnc'>09-Feb-20 11:12</td></tr>
</table>
<p />
<p />
<table border="0" width="600" class="tdiff" summary="This table displays host information">
<tr><th class="awrbg" scope="col">Host Name</th><th class="awrbg" scope="col">Platform</th><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Memory (GB)</th></tr>
<tr><td scope="row" class='awrnc'>mcracpoc1.example.com</td><td class='awrnc'>Linux x86 64-bit</td><td align="right" class='awrnc'>   8</td><td align="right" class='awrnc'>   4</td><td align="right" class='awrnc'>	1</td><td align="right" class='awrnc'>	 31.40</td></tr>
</table>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays snapshot information">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Snap Id</th><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Sessions</th><th class="awrbg" scope="col">Cursors/Session</th><th class="awrbg" scope="col">Instances</th></tr>
<tr><td scope="row" class='awrnc'>Begin Snap:</td><td align="right" class='awrnc'>141</td><td align="center" class='awrnc'>10-Feb-20 11:21:15</td><td align="right" class='awrnc'>109</td><td align="right" class='awrnc'>	2.3</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>End Snap:</td><td align="right" class='awrc'>142</td><td align="center" class='awrc'>10-Feb-20 11:31:19</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>	1.9</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>Elapsed:</td><td class='awrnc'>&#160;</td><td align="center" class='awrnc'>		   10.07 (mins)</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB Time:</td><td class='awrc'>&#160;</td><td align="center" class='awrc'>	       180.43 (mins)</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>17.92</td><td align="right" class='awrc'>99.00</td><td scope="row" class='awrc'>ADDM:3393773525_1_142</td><td class='awrc'>10-Feb-20 11:21</td><td class='awrc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>17.92</td><td align="right" class='awrnc'>88.94</td><td scope="row" class='awrnc'>ADDM:3393773525_1_142</td><td class='awrnc'>10-Feb-20 11:21</td><td class='awrnc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>17.92</td><td align="right" class='awrc'>25.93</td><td scope="row" class='awrc'>ADDM:3393773525_1_142</td><td class='awrc'>10-Feb-20 11:21</td><td class='awrc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>17.92</td><td align="right" class='awrnc'>5.65</td><td scope="row" class='awrnc'>ADDM:3393773525_1_142</td><td class='awrnc'>10-Feb-20 11:21</td><td class='awrnc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrc'>Undersized SGA</td><td align="right" class='awrc'>17.92</td><td align="right" class='awrc'>3.59</td><td scope="row" class='awrc'>ADDM:3393773525_1_142</td><td class='awrc'>10-Feb-20 11:21</td><td class='awrc'>10-Feb-20 11:31</td></tr>
</table><p />
<p />Load Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays load profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th><th class="awrbg" scope="col">Per Exec</th><th class="awrbg" scope="col">Per Call</th></tr>
<tr><td scope="row" class='awrc'>DB Time(s):</td><td align="right" class='awrc'>	      17.9</td><td align="right" class='awrc'>		     0.1</td><td align="right" class='awrc'>	  0.01</td><td align="right" class='awrc'>     54.95</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU(s):</td><td align="right" class='awrnc'>		1.4</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'>      0.00</td><td align="right" class='awrnc'>	    4.22</td></tr>
<tr><td scope="row" class='awrc'>Background CPU(s):</td><td align="right" class='awrc'> 	      0.6</td><td align="right" class='awrc'>		    0.0</td><td align="right" class='awrc'>	 0.00</td><td align="right" class='awrc'>      0.00</td></tr>
<tr><td scope="row" class='awrnc'>Redo size (bytes):</td><td align="right" class='awrnc'>	  503,031.6</td><td align="right" class='awrnc'>	   2,811.5</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logical read (blocks):</td><td align="right" class='awrc'>	      8,845.0</td><td align="right" class='awrc'>	       49.4</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Block changes:</td><td align="right" class='awrnc'>		1,475.2</td><td align="right" class='awrnc'>		   8.3</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Physical read (blocks):</td><td align="right" class='awrc'>	       3,425.6</td><td align="right" class='awrc'>		19.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Physical write (blocks):</td><td align="right" class='awrnc'> 	    497.7</td><td align="right" class='awrnc'>		     2.8</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO requests:</td><td align="right" class='awrc'>		 3,425.5</td><td align="right" class='awrc'>		  19.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO requests:</td><td align="right" class='awrnc'>	      479.0</td><td align="right" class='awrnc'>	       2.7</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO (MB):</td><td align="right" class='awrc'>		26.8</td><td align="right" class='awrc'>	       0.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO (MB):</td><td align="right" class='awrnc'>		    3.9</td><td align="right" class='awrnc'>		   0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM scan rows:</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Session Logical Read IM:</td><td align="right" class='awrnc'> 	      0.0</td><td align="right" class='awrnc'>		     0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks received:</td><td align="right" class='awrc'>		35.4</td><td align="right" class='awrc'>	       0.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks served:</td><td align="right" class='awrnc'>		26.4</td><td align="right" class='awrnc'>		0.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>User calls:</td><td align="right" class='awrc'>	       0.3</td><td align="right" class='awrc'>		     0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parses (SQL):</td><td align="right" class='awrnc'>		   2.4</td><td align="right" class='awrnc'>		  0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hard parses (SQL):</td><td align="right" class='awrc'> 	      0.0</td><td align="right" class='awrc'>		    0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL Work Area (MB):</td><td align="right" class='awrnc'>		 0.2</td><td align="right" class='awrnc'>		0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logons:</td><td align="right" class='awrc'>		   0.0</td><td align="right" class='awrc'>		 0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>User logons:</td><td align="right" class='awrnc'>		  0.0</td><td align="right" class='awrnc'>		 0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Executes (SQL):</td><td align="right" class='awrc'>	       1,195.1</td><td align="right" class='awrc'>		 6.7</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Rollbacks:</td><td align="right" class='awrnc'>		0.0</td><td align="right" class='awrnc'>	       0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Transactions:</td><td align="right" class='awrc'>	       178.9</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
Instance Efficiency Percentages (Target 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays instance efficiency percentages">
<tr><td scope="row" class='awrc'>Buffer Nowait %:</td><td align="right" class='awrc'>		100.00</td><td class='awrc'>Redo NoWait %:</td><td align="right" class='awrc'>		 100.00</td></tr>
<tr><td scope="row" class='awrnc'>Buffer  Hit	%:</td><td align="right" class='awrnc'> 	   61.27</td><td class='awrnc'>In-memory Sort %:</td><td align="right" class='awrnc'>		100.00</td></tr>
<tr><td scope="row" class='awrc'>Library Hit   %:</td><td align="right" class='awrc'>		100.06</td><td class='awrc'>Soft Parse %:</td><td align="right" class='awrc'>		 99.73</td></tr>
<tr><td scope="row" class='awrnc'>Execute to Parse %:</td><td align="right" class='awrnc'>	      99.80</td><td class='awrnc'>Latch Hit %:</td><td align="right" class='awrnc'>	       99.98</td></tr>
<tr><td scope="row" class='awrc'>Parse CPU to Parse Elapsd %:</td><td align="right" class='awrc'>	     35.71</td><td class='awrc'>% Non-Parse CPU:</td><td align="right" class='awrc'>	       100.00</td></tr>
<tr><td scope="row" class='awrnc'>Flash Cache Hit %:</td><td align="right" class='awrnc'>	      0.00</td></tr>
</table>

<p />Top 10 Foreground Events by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top 10 wait events by total wait time"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Wait Class</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2,066,562</td><td align="right" class='awrc'>9628.3</td><td align="right" class='awrc'>4.66ms</td><td align="right" class='awrc'>88.9</td><td class='awrc'>User I/O</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>831.8</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>7.7</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>916,502</td><td align="right" class='awrc'>501.3</td><td align="right" class='awrc'>546.98us</td><td align="right" class='awrc'>4.6</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>165,883</td><td align="right" class='awrnc'>92.1</td><td align="right" class='awrnc'>555.33us</td><td align="right" class='awrnc'>.9</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>17,523</td><td align="right" class='awrc'>21.4</td><td align="right" class='awrc'>1.22ms</td><td align="right" class='awrc'>.2</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>12,735</td><td align="right" class='awrnc'>8.3</td><td align="right" class='awrnc'>653.81us</td><td align="right" class='awrnc'>.1</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>5,001</td><td align="right" class='awrc'>5.9</td><td align="right" class='awrc'>1.18ms</td><td align="right" class='awrc'>.1</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>3,194</td><td align="right" class='awrnc'>2.3</td><td align="right" class='awrnc'>729.06us</td><td align="right" class='awrnc'>.0</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>428</td><td align="right" class='awrc'>1.7</td><td align="right" class='awrc'>4.01ms</td><td align="right" class='awrc'>.0</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>3,168</td><td align="right" class='awrnc'>.3</td><td align="right" class='awrnc'>104.26us</td><td align="right" class='awrnc'>.0</td><td class='awrnc'>Other</td></tr>
</table><p />
<p />Wait Classes by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays wait class statistics ordered by total wait time"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait Time</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>2,088,918</td><td align="right" class='awrc'>9,635</td><td align="right" class='awrc'>4.61ms</td><td align="right" class='awrc'>89.0</td><td align="right" class='awrc'>15.9</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>832</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>7.7</td><td align="right" class='awrnc'>1.4</td></tr>
<tr><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>122,510</td><td align="right" class='awrc'>667</td><td align="right" class='awrc'>5.44ms</td><td align="right" class='awrc'>6.2</td><td align="right" class='awrc'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>1,121,988</td><td align="right" class='awrnc'>634</td><td align="right" class='awrnc'>565.13us</td><td align="right" class='awrnc'>5.9</td><td align="right" class='awrnc'>1.0</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>74,656</td><td align="right" class='awrc'>136</td><td align="right" class='awrc'>1.82ms</td><td align="right" class='awrc'>1.3</td><td align="right" class='awrc'>0.2</td></tr>
<tr><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4.62ms</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>1,399</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>87.32us</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>520</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74.15us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.76ms</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>526.50us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
</table><p />

Host CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays system load statistics">
<tr><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Load Average Begin</th><th class="awrbg" scope="col">Load Average End</th><th class="awrbg" scope="col">%User</th><th class="awrbg" scope="col">%System</th><th class="awrbg" scope="col">%WIO</th><th class="awrbg" scope="col">%Idle</th></tr>
<tr><td align="right" class='awrc'>    8</td><td align="right" class='awrc'>	4</td><td align="right" class='awrc'>	 1</td><td align="right" class='awrc'>	11.33</td><td align="right" class='awrc'>  14.74</td><td align="right" class='awrc'>  15.5</td><td align="right" class='awrc'>	20.2</td><td align="right" class='awrc'>  46.4</td><td align="right" class='awrc'>  55.7</td></tr>
</table>
<p />
Instance CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays CPU usage and wait statistics">
<tr><th class="awrbg" scope="col">%Total CPU</th><th class="awrbg" scope="col">%Busy CPU</th><th class="awrbg" scope="col">%DB time waiting for CPU (Resource Manager)</th></tr>
<tr><td align="right" class='awrc'>	 27.3</td><td align="right" class='awrc'>      61.6</td><td align="right" class='awrc'>       0.0</td></tr>
</table>
<p />IO Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays IO profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Read+Write Per Second</th><th class="awrbg" scope="col">Read per Second</th><th class="awrbg" scope="col">Write Per Second</th></tr>
<tr><td scope="row" class='awrc'>Total Requests:</td><td align="right" class='awrc'>	       4,235.1</td><td align="right" class='awrc'>	     3,431.1</td><td align="right" class='awrc'>	     804.0</td></tr>
<tr><td scope="row" class='awrnc'>Database Requests:</td><td align="right" class='awrnc'>	    3,904.5</td><td align="right" class='awrnc'>	   3,425.5</td><td align="right" class='awrnc'> 	    479.0</td></tr>
<tr><td scope="row" class='awrc'>Optimized Requests:</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td><td align="right" class='awrc'>		   0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo Requests:</td><td align="right" class='awrnc'>		  324.3</td><td align="right" class='awrnc'>		   0.9</td><td align="right" class='awrnc'>		323.4</td></tr>
<tr><td scope="row" class='awrc'>Total (MB):</td><td align="right" class='awrc'>	      32.5</td><td align="right" class='awrc'>		    27.6</td><td align="right" class='awrc'>		   5.0</td></tr>
<tr><td scope="row" class='awrnc'>Database (MB):</td><td align="right" class='awrnc'>		   30.7</td><td align="right" class='awrnc'>		  26.8</td><td align="right" class='awrnc'>		  3.9</td></tr>
<tr><td scope="row" class='awrc'>Optimized Total (MB):</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo (MB):</td><td align="right" class='awrnc'>		1.8</td><td align="right" class='awrnc'>	       0.7</td><td align="right" class='awrnc'> 	      1.1</td></tr>
<tr><td scope="row" class='awrc'>Database (blocks):</td><td align="right" class='awrc'> 	  3,923.3</td><td align="right" class='awrc'>		3,425.6</td><td align="right" class='awrc'>		497.7</td></tr>
<tr><td scope="row" class='awrnc'>Via Buffer Cache (blocks):</td><td align="right" class='awrnc'>	    3,923.0</td><td align="right" class='awrnc'>	   3,425.6</td><td align="right" class='awrnc'> 	    497.4</td></tr>
<tr><td scope="row" class='awrc'>Direct (blocks):</td><td align="right" class='awrc'>		    0.3</td><td align="right" class='awrc'>		  0.0</td><td align="right" class='awrc'>		0.3</td></tr>
</table>
<p />
Memory Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays memory statistics">
<tr><th class="awrbg" scope="col"> </th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Host Mem (MB):</td><td align="right" class='awrc'>    32,156.0</td><td align="right" class='awrc'>    32,156.0</td></tr>
<tr><td scope="row" class='awrnc'>SGA use (MB):</td><td align="right" class='awrnc'>	 9,664.0</td><td align="right" class='awrnc'>	  9,664.0</td></tr>
<tr><td scope="row" class='awrc'>PGA use (MB):</td><td align="right" class='awrc'>     1,370.6</td><td align="right" class='awrc'>     1,275.3</td></tr>
<tr><td scope="row" class='awrc'>% Host Mem used for SGA+PGA:</td><td align="right" class='awrc'>   34.32</td><td align="right" class='awrc'>	34.02</td></tr>
</table>
<p />
Cache Sizes
<p />
<table border="0" width="600" class="tdiff" summary="This table displays cache sizes and other statistics for
		    different types of cache">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Buffer Cache:</td><td align="right" class='awrnc'>	 8,000M</td><td align="right" class='awrnc'>	 8,000M</td><td class='awrnc'>Std Block Size:</td><td align="right" class='awrnc'>	   8K</td></tr>
<tr><td scope="row" class='awrc'>Shared Pool Size:</td><td align="right" class='awrc'>	   1,063M</td><td align="right" class='awrc'>	  1,065M</td><td class='awrc'>Log Buffer:</td><td align="right" class='awrc'>	 20,612K</td></tr>
<tr><td scope="row" class='awrnc'>In-Memory Area:</td><td align="right" class='awrnc'>	       0M</td><td align="right" class='awrnc'>	       0M</td></tr>
</table>
<p />
Shared Pool Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays shared pool statistics">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Memory Usage %:</td><td align="right" class='awrc'>		90.48</td><td align="right" class='awrc'>	     89.53</td></tr>
<tr><td scope="row" class='awrnc'>% SQL with executions&gt;1:</td><td align="right" class='awrnc'>	      85.90</td><td align="right" class='awrnc'>	    86.23</td></tr>
<tr><td scope="row" class='awrc'>% Memory for SQL w/exec&gt;1:</td><td align="right" class='awrc'>	      90.47</td><td align="right" class='awrc'> 	   90.31</td></tr>
</table>
<p />
<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#21">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#22">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#23">Instance Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#24">IO Stats</a></li>
<li class="awr"><a class="awr" href="#25">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#26">Advisory Statistics</a></li>
<li class="awr"><a class="awr" href="#27">Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#28">Undo Statistics</a></li>
<li class="awr"><a class="awr" href="#29">Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#30">Segment Statistics</a></li>
<li class="awr"><a class="awr" href="#31">Dictionary Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#32">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#33">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#39">Replication Statistics (GoldenGate, XStream)</a></li>
<li class="awr"><a class="awr" href="#34">Advanced Queuing</a></li>
<li class="awr"><a class="awr" href="#6700">Resource Limit Statistics</a></li>
<li class="awr"><a class="awr" href="#37">Shared Server Statistics</a></li>
<li class="awr"><a class="awr" href="#36">Initialization Parameters</a></li>
<li class="awr"><a class="awr" href="#42">Active Session History (ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99995">ADDM Reports</a></li>
</ul>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<p />
<a class="awr" name="21"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1500">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#1600">Operating System Statistics</a></li>
<li class="awr"><a class="awr" href="#1610">Operating System Statistics - Detail</a></li>
<li class="awr"><a class="awr" href="#210">Foreground Wait Class</a></li>
<li class="awr"><a class="awr" href="#100">Foreground Wait Events</a></li>
<li class="awr"><a class="awr" href="#300">Background Wait Events</a></li>
<li class="awr"><a class="awr" href="#7400">Wait Event Histogram</a></li>
<li class="awr"><a class="awr" href="#7405">Wait Event Histogram (up to 64 us)</a></li>
<li class="awr"><a class="awr" href="#7410">Wait Event Histogram (up to 32 ms)</a></li>
<li class="awr"><a class="awr" href="#7420">Wait Event Histogram (up to 2 sec)</a></li>
<li class="awr"><a class="awr" href="#7430">Wait Event Histogram (up to 2 min)</a></li>
<li class="awr"><a class="awr" href="#7440">Wait Event Histogram (up to 1 hr)</a></li>
<li class="awr"><a class="awr" href="#5800">Service Statistics</a></li>
<li class="awr"><a class="awr" href="#5820">Service Wait Class Stats</a></li>
<li class="awr"><a class="awr" href="#5840">Top 10 Channel Waits</a></li>
<li class="awr"><a class="awr" href="#2310">Top Process Types by Wait Class</a></li>
<li class="awr"><a class="awr" href="#2320">Top Process Types by CPU Used</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1500"></a>
<h3 class="awr">Time Model Statistics</h3>
<ul>
<li class="awr">DB Time represents total time in user calls</li>
<li class="awr">DB CPU represents CPU time of foreground processes</li>
<li class="awr">Total CPU Time represents foreground and background processes</li>
<li class="awr">Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic</li>
<li class="awr">Ordered by % of DB time in descending order, followed by Statistic Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays different time model statistics. For each statistic, time and % of DB time are displayed"><tr><th class="awrbg" scope="col">Statistic Name</th><th class="awrbg" scope="col">Time (s)</th><th class="awrbg" scope="col">% of  DB Time</th><th class="awrbg" scope="col">% of Total CPU Time</th></tr>
<tr><td scope="row" class='awrc'>sql execute elapsed time</td><td align="right" class='awrc'>10,825.60</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>831.83</td><td align="right" class='awrnc'>7.68</td><td align="right" class='awrnc'>68.40</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL execution elapsed time</td><td align="right" class='awrc'>33.73</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>connection management call elapsed time</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>repeated bind elapsed time</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>10,825.84</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>background elapsed time</td><td align="right" class='awrnc'>1,029.28</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>background cpu time</td><td align="right" class='awrc'>384.24</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>31.60</td></tr>
<tr><td scope="row" class='awrnc'>total CPU time</td><td align="right" class='awrnc'>1,216.07</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1600"></a>
<h3 class="awr">Operating System Statistics</h3>
<ul>
<li class="awr"> *TIME statistic values are diffed.	 All others display actual values.  End Value is displayed if different </li>
<li class="awr"> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays operating systems statistics. For each statistic, actual value is displayed. If the end value is different, it is also displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>FREE_MEMORY_BYTES</td><td align="right" class='awrc'>4,385,628,160</td><td align="right" class='awrc'>4,645,376,000</td></tr>
<tr><td scope="row" class='awrnc'>INACTIVE_MEMORY_BYTES</td><td align="right" class='awrnc'>2,031,947,776</td><td align="right" class='awrnc'>2,031,779,840</td></tr>
<tr><td scope="row" class='awrc'>BUSY_TIME</td><td align="right" class='awrc'>197,486</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IDLE_TIME</td><td align="right" class='awrnc'>248,144</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IOWAIT_TIME</td><td align="right" class='awrc'>206,699</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NICE_TIME</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SYS_TIME</td><td align="right" class='awrc'>89,859</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>USER_TIME</td><td align="right" class='awrnc'>68,886</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LOAD</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>15</td></tr>
<tr><td scope="row" class='awrnc'>RSRC_MGR_CPU_WAIT_TIME</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PHYSICAL_MEMORY_BYTES</td><td align="right" class='awrc'>33,717,977,088</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPUS</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPU_CORES</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPU_SOCKETS</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GLOBAL_RECEIVE_SIZE_MAX</td><td align="right" class='awrc'>4,194,304</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GLOBAL_SEND_SIZE_MAX</td><td align="right" class='awrnc'>1,048,576</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_DEFAULT</td><td align="right" class='awrc'>87,380</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_MAX</td><td align="right" class='awrnc'>6,291,456</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_MIN</td><td align="right" class='awrc'>4,096</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_DEFAULT</td><td align="right" class='awrnc'>16,384</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_MAX</td><td align="right" class='awrc'>4,194,304</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_MIN</td><td align="right" class='awrnc'>4,096</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1610"></a>
<h3 class="awr">Operating System Statistics - Detail</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays some detailed operating systems statistics. load, % busy , % user, % sys, % idle, % iowait are displayed for begin and end snap time"><tr><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Load</th><th class="awrbg" scope="col">%busy</th><th class="awrbg" scope="col">%user</th><th class="awrbg" scope="col">%sys</th><th class="awrbg" scope="col">%idle</th><th class="awrbg" scope="col">%iowait</th></tr>
<tr><td scope="row" class='awrc'>10-Feb 11:21:15</td><td align="right" class='awrc'>11.33</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>10-Feb 11:31:19</td><td align="right" class='awrnc'>14.74</td><td align="right" class='awrnc'>44.32</td><td align="right" class='awrnc'>15.46</td><td align="right" class='awrnc'>20.16</td><td align="right" class='awrnc'>55.68</td><td align="right" class='awrnc'>46.38</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="210"></a>
<h3 class="awr">Foreground Wait Class</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> ordered by wait time desc, waits desc </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
<li class="awr">Captured Time accounts for	  102.5%  of Total DB time	10,825.84 (s)</li>
<li class="awr">Total FG Wait Time:	       10,262.33 (s)  DB CPU time:	   831.83 (s)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait class statistics"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">%DB time</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>2,066,564</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9,628</td><td align="right" class='awrc'>4.66ms</td><td align="right" class='awrc'>88.94</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>832</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>7.68</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>1,121,370</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>633</td><td align="right" class='awrc'>564.86us</td><td align="right" class='awrc'>5.85</td></tr>
<tr><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>4,141</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>143.43us</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.76ms</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.49ms</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>174.00us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10.42us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Application</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="100"></a>
<h3 class="awr">Foreground Wait Events</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Foreground Wait Events and their wait statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% DB time</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2,066,562</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>9,628</td><td align="right" class='awrc'>4.66ms</td><td align="right" class='awrc'>19.11</td><td align="right" class='awrc'>88.94</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>916,502</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>501</td><td align="right" class='awrnc'>546.98us</td><td align="right" class='awrnc'>8.48</td><td align="right" class='awrnc'>4.63</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>165,883</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>555.33us</td><td align="right" class='awrc'>1.53</td><td align="right" class='awrc'>0.85</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>17,523</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>1.22ms</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.20</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>12,735</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>653.81us</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>5,001</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>1.18ms</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>3,194</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>729.06us</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>428</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>4.01ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>3,168</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>104.26us</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.75ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>443.84us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>156</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>350.96us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>595.68us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>476.43us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.76ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7.29ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.49ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.30ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>276.85us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>582.39us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>917.83us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>368</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>29.38us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>672.92us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>188.71us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>667.33us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.73ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>281.27us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>355.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>watchdog main loop</td><td align="right" class='awrc'>804</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2,412</td><td align="right" class='awrc'>3000.03ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>33.02ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>457.83us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.16ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>176.08us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="300"></a>
<h3 class="awr">Background Wait Events</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait events statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% bg time</th></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>95,209</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>607</td><td align="right" class='awrc'>6.37ms</td><td align="right" class='awrc'>0.88</td><td align="right" class='awrc'>58.94</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>32,717</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>104</td><td align="right" class='awrnc'>3.18ms</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>10.10</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>19,467</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>2.43ms</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>4.59</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>2,338</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>7.24ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>1.64</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>2,818</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>2.94ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.80</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>3,536</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>1.50ms</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.51</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>831</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>5.29ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.43</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>1,812</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>2.12ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.37</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>224</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>12.33ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>280</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>6.88ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.19</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>27.57ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>2,662</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>393.71us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>779</td><td align="right" class='awrc'>58</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1.14ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>189</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.65ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>ASM IO for non-blocking poll</td><td align="right" class='awrc'>21,050</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>31.34us</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>256</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.19ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>10,915</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>27.57us</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>277</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.06ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>266</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>824.60us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>99.00ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6,031</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>30.65us</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6,124</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>27.66us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.70ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>534</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>243.65us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>154</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>818.57us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.30ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>23.76ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>114</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>599.14us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.15ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>878.80us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>209.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>98</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>473.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>838.28us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>4,492</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9.71us</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>843.24us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>125</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>318.28us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>463</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>82.20us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.21ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>684.39us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>618.56us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>539.48us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>97</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>333.71us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.14ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>891.09us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>827</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>35.31us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.48ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.31ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.18ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>344.15us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.84ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.20ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>612</td><td align="right" class='awrnc'>99</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32.06us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>349.33us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>664.71us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.65ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>553.76us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>.97ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>251.66us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8.81ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1,259</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6.49us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>766.30us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.86ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.12ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>551.50us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>.98ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>647.14us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context root latch</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.46ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>606.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: SM -  contention</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>828.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.48ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>647.67us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>384.80us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>127.08us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18.94us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>759.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>110.69us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>223.17us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>561.50us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.05ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rdbms ipc message</td><td align="right" class='awrnc'>209,656</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>13,664</td><td align="right" class='awrnc'>65.17ms</td><td align="right" class='awrnc'>1.94</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10,274</td><td align="right" class='awrc'>684.90 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2,578</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9,664</td><td align="right" class='awrnc'>3748.58ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7,542</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>4,430</td><td align="right" class='awrc'>587.36ms</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" class='awrnc'>926</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1,814</td><td align="right" class='awrnc'>1958.45ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pmon timer</td><td align="right" class='awrc'>403</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,209</td><td align="right" class='awrc'>3000.02ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges remote message</td><td align="right" class='awrnc'>17,566</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,208</td><td align="right" class='awrnc'>68.78ms</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4,024</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,208</td><td align="right" class='awrc'>300.13ms</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7,551</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>1,206</td><td align="right" class='awrnc'>159.78ms</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs yield cpu</td><td align="right" class='awrc'>41,104</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,203</td><td align="right" class='awrc'>29.28ms</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remote message</td><td align="right" class='awrnc'>1,027,311</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,085</td><td align="right" class='awrnc'>1.06ms</td><td align="right" class='awrnc'>9.50</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OFS idle</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>606</td><td align="right" class='awrc'>3000.03ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>346</td><td align="right" class='awrnc'>86</td><td align="right" class='awrnc'>606</td><td align="right" class='awrnc'>1750.39ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>60.43 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>2,246</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>269.00ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>1000.15ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6,051</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>99.81ms</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>3002.64ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pman timer</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>603</td><td align="right" class='awrnc'>2999.68ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>555</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>1081.64ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.01 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>30.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>smon timer</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>300.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Timer</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>600.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>588</td><td align="right" class='awrc'>28.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>588</td><td align="right" class='awrnc'>14.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group idle</td><td align="right" class='awrc'>85,243</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>573</td><td align="right" class='awrc'>6.72ms</td><td align="right" class='awrc'>0.79</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7.04ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>63</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>720.06us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" class='awrnc'>658</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32.83us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>877.05us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Parse Reply</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.21ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7400"></a>
<h3 class="awr">Wait Event Histogram</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (idle events last)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Total Waits</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&lt;128us">&lt;128us</th><th class="awrbg" scope="col" id="&lt;256us">&lt;256us</th><th class="awrbg" scope="col" id="&lt;512us">&lt;512us</th><th class="awrbg" scope="col" id="&gt;=512us">&gt;=512us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6035</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>21.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>61.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.4</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>2664</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>39.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>29.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>7.4</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6127</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>266</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>65.0</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>157</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>79.0</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>832</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>231</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>42.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>3.5</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>84.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>88.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1812</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>36.1</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>465</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>37.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>41.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.4</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>640</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>81.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>2.8</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>3188</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>42.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>43.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>1.9</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>781</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>36.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>22.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>2348</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>98.5</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>32.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>89.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>97</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>3.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>29.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>15.5</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>3532</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>51.4</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>86</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>51.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>31.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>1.2</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>28</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>7.1</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>11.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>57</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>91.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>35.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>46.3</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>95.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>279</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>2822</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>66.4</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>4492</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>93.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>19.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>62.8</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.1M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>64</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>96.9</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>80.0</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>60.0</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>62.5</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>80.0</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>50</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>60.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>75.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TX - allocate ITL entry</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>80.0</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>53.8</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>5116</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>79.4</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>28</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>53.6</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>915.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>59.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>36.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>427</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>12.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>36.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>61.5</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>3473</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>64.7</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>165.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>58.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>37.2</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>127</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>62.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>25.2</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>83</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>17.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>98.4</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current split</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>40.0</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>83.3</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>363</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>48.5</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>70.0</td></tr>
<tr><td scope="row" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>55</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.9</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>824</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.4</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>690</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>34.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>11.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA heap latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context root latch</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>9.1</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>92</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>27.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>20.7</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>133</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>30.1</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>132</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>23.5</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>192</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>27.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>15.1</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>22.2</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>35.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>28.6</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>119</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>27.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>20.2</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>1264</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>94.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>81.5</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>72.2</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>95.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>224</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>63.8</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>25</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>88.0</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQPC idle</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>ASM background timer</td><td align="right" class='awrc'>2246</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>74.1</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>345</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>DIAG idle wait</td><td align="right" class='awrc'>7550</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>97.9</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Timer</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>GCR sleep</td><td align="right" class='awrnc'>4026</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group idle</td><td align="right" class='awrc'>85.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>68.4</td></tr>
<tr><td scope="row" class='awrnc'>OFS idle</td><td align="right" class='awrnc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>555</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>26.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>34.2</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: need buffer</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>116</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>42.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>23.3</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>92.3</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execution Msg</td><td align="right" class='awrc'>45</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>71.1</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Msg Fragment</td><td align="right" class='awrnc'>120</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>8.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>55.8</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Parse Reply</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.3</td></tr>
<tr><td scope="row" class='awrnc'>PX Idle Wait</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" class='awrnc'>661</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>24.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>64.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.5</td></tr>
<tr><td scope="row" class='awrc'>SCM slave idle</td><td align="right" class='awrc'>6053</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>57</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>43.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>52.6</td></tr>
<tr><td scope="row" class='awrc'>Space Manager: slave idle wait</td><td align="right" class='awrc'>2577</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>97.3</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrnc'>42</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>45.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>class slave wait</td><td align="right" class='awrnc'>7543</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>88.3</td></tr>
<tr><td scope="row" class='awrc'>dispatcher timer</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs remote message</td><td align="right" class='awrnc'>1M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>49.2</td></tr>
<tr><td scope="row" class='awrc'>gcs yield cpu</td><td align="right" class='awrc'>41.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>97.9</td></tr>
<tr><td scope="row" class='awrnc'>ges remote message</td><td align="right" class='awrnc'>17.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>93.6</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>604</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>lreg timer</td><td align="right" class='awrnc'>202</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>202</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>pmon timer</td><td align="right" class='awrnc'>402</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>rdbms ipc message</td><td align="right" class='awrc'>209.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>64.8</td></tr>
<tr><td scope="row" class='awrnc'>smon timer</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>wait for unread message on broadcast channel</td><td align="right" class='awrc'>927</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>808</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7405"></a>
<h3 class="awr">Wait Event Histogram (up to 64 us)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds  </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1us  - 64us</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&gt;=64us">&gt;=64us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>5670</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>6.0</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>19.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>61.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>9.4</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>2126</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>39.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>29.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>20.2</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>5809</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>5.2</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>89.2</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>63</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>72.7</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>84.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>88.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>401</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>77.9</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>222</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>37.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>52.3</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>574</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>81.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>10.3</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1338</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>42.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>58.0</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>423</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>36.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>45.8</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>189</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>85.6</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>432</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>87.8</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>84</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>51.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>31.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>2.3</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>46.2</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>57.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>10.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.3</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message to client</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>91.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.8</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>35.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>55.6</td></tr>
<tr><td scope="row" class='awrnc'>asynch descriptor resize</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>95.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>779</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>72.4</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>4419</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>1.6</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>1441</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>92.6</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>3976</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.6</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>33</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.7</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>773</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.5</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>83.3</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>61</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>83.2</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>70.9</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>752</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>8.7</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>77</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>88.8</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>54.5</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>75.0</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>78.9</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>78.8</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>79.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>83.3</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>66.7</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>92.9</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>22</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>81.5</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1257</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>91.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>.6</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.1</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>37</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>83.5</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7410"></a>
<h3 class="awr">Wait Event Histogram (up to 32 ms)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds,	ms is 1024 microseconds (approximately 1 millisecond) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1ms  to 32ms</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms">&lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms">&lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&gt;=32ms">&gt;=32ms</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>89</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>194</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>92.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>52.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>63.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>173</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>35.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>48.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>124</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>21.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>820</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>82.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>1.4</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>96.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>641</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>63.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.7</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>97.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>62</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>98.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>174</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>77.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>2240</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>1.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>47.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>27.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>10.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>3.1</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>28.9K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>10.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>23.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>40.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.8</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>84.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>1806</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>48.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>22.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.3</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>98.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>46.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>92.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>53.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>272</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>40.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>45.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>2.5</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>1862</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>33.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>56.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.4</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>12.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>37.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>19.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.5</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>46.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>53.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2M</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>83.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.8</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>63.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>62</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>3.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>73.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>23.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>37.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>55.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>48.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TX - allocate ITL entry</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>65.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>46.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>4060</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>20.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>46.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>32.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>329.4K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>64.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>29.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>427</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>51.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>30.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>7837</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>38.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>53.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>2248</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>35.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>49.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>61.5K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>62.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>30.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>32</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>74.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>18.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>83</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>49.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>26.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>17.2K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>1.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>43.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>49.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>176</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>51.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>30.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>28</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>49.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>38.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>76</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>89.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context root latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>90.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>79.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>40</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>69.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>31</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>76.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>29</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>84.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>77.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>71.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>79.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>44</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>18.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>64.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>27.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>57.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>93.6K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>35.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>51.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>1.6</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>113</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>36.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>17.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>13.4</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>35.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>52.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>12.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>44.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7420"></a>
<h3 class="awr">Wait Event Histogram (up to 2 sec)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 ms is milliseconds    s is 1024 milliseconds (approximately 1 second) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 64ms  to 2s</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms">&lt;64ms</th><th class="awrbg" scope="col" id="&lt;1/8s">&lt;1/8s</th><th class="awrbg" scope="col" id="&lt;1/4s">&lt;1/4s</th><th class="awrbg" scope="col" id="&lt;1/2s">&lt;1/2s</th><th class="awrbg" scope="col" id="&lt;1s">  &lt;1s</th><th class="awrbg" scope="col" id="&lt;2s">  &lt;2s</th><th class="awrbg" scope="col" id="&gt;=2s">&gt;=2s</th></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>72</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>96.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>266</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>97.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>100</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>15.9K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>1498</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>98.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>86.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7430"></a>
<h3 class="awr">Wait Event Histogram (up to 2 min)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7440"></a>
<h3 class="awr">Wait Event Histogram (up to 1 hr)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5800"></a>
<h3 class="awr">Service Statistics</h3>
<ul>
<li class="awr"> ordered by DB Time</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service statistics. It displays service names and corresponding DB time, DB CPU, Physical reads, logical reads."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">DB Time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">Physical Reads (K)</th><th class="awrbg" scope="col">Logical Reads (K)</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td><td align="right" class='awrc'>10,812</td><td align="right" class='awrc'>830</td><td align="right" class='awrc'>2,066</td><td align="right" class='awrc'>4,561</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>772</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>p30dbXDB</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5820"></a>
<h3 class="awr">Service Wait Class Stats</h3>
<ul>
<li class="awr"> Wait Class info for services in the Service Statistics section.  </li>
<li class="awr"> Total Waits and Time Waited displayed for the following wait	  classes:  User I/O, Concurrency, Administrative, Network </li>
<li class="awr"> Time Waited (Wt Time) in seconds</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service wait class statistics. It displays user I/O total wait, user I/O wait time, concurrency total wait, concurrency wait time, etc."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">User I/O Total Wts</th><th class="awrbg" scope="col">User I/O Wt Time</th><th class="awrbg" scope="col">Concurcy Total Wts</th><th class="awrbg" scope="col">Concurcy Wt Time</th><th class="awrbg" scope="col">Admin Total Wts</th><th class="awrbg" scope="col">Admin Wt Time</th><th class="awrbg" scope="col">Network Total Wts</th><th class="awrbg" scope="col">Network Wt Time</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td>
<td align="right" class='awrc'>2065719</td><td align="right" class='awrc'>9624</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td>
<td align="right" class='awrnc'>22425</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>1409</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>462</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td>
<td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5840"></a>
<h3 class="awr">Top 10 Channel Waits</h3>
<ul>
<li class="awr"> Top 10 Channel Waits by wait time </li>
</ul>
<table border="0" class="tdiff" summary="This table displays top 10 Channel Watis by wait time."><tr><th class="awrbg" scope="col">Channel</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Wait</th></tr>
<tr><td scope="row" class='awrc'>kxfp control signal channel</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>851.29us</td></tr>
<tr><td scope="row" class='awrnc'>obj broadcast channel</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.16ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2310"></a>
<h3 class="awr">Top Process Types by Wait Class</h3>
<ul>
<li class="awr"> This table displays top process types ordered by wait class</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by Wait Class. . This table displays top process types ordered by wait class"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">Wait Class Type</th><th class="awrbg" scope="col">Wait Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>9,689.04</td></tr>
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>636.67</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>609.33</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>121.07</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>47.18</td></tr>
<tr><td scope="row" class='awrnc'>CKPT</td><td scope="row" class='awrnc'>checkpoint</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>5.87</td></tr>
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>5.81</td></tr>
<tr><td scope="row" class='awrnc'>LG</td><td scope="row" class='awrnc'>Log Writer Slave</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>5.37</td></tr>
<tr><td scope="row" class='awrc'>LMON</td><td scope="row" class='awrc'>global enqueue service monitor</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>4.01</td></tr>
<tr><td scope="row" class='awrnc'>IMR</td><td scope="row" class='awrnc'>CGS IMR Slave</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>2.92</td></tr>
<tr><td scope="row" class='awrc'>CKPT</td><td scope="row" class='awrc'>checkpoint</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1.29</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>1.16</td></tr>
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.94</td></tr>
<tr><td scope="row" class='awrnc'>O</td><td scope="row" class='awrnc'>ASM Connection Pool</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.85</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>0.83</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>0.66</td></tr>
<tr><td scope="row" class='awrc'>IMR</td><td scope="row" class='awrc'>CGS IMR Slave</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>0.61</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>0.60</td></tr>
<tr><td scope="row" class='awrc'>MMNL</td><td scope="row" class='awrc'>Manageability Monitor Process 2</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.56</td></tr>
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.56</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2320"></a>
<h3 class="awr">Top Process Types by CPU Used</h3>
<ul>
<li class="awr"> This table displays top process types ordered by CPU time</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by CPU Used. . This table displays top process types ordered by CPU time"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">CPU Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td align="right" class='awrc'>834.88</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td align="right" class='awrnc'>258.48</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td align="right" class='awrc'>52.38</td></tr>
<tr><td scope="row" class='awrnc'>VKTM</td><td scope="row" class='awrnc'>Virtual Keeper of TiMe process</td><td align="right" class='awrnc'>32.21</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td scope="row" class='awrc'>Redo etc.</td><td align="right" class='awrc'>20.77</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td align="right" class='awrnc'>19.43</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td align="right" class='awrc'>7.42</td></tr>
<tr><td scope="row" class='awrnc'>RS*</td><td scope="row" class='awrnc'>GCS RM Slave</td><td align="right" class='awrnc'>6.67</td></tr>
<tr><td scope="row" class='awrc'>GCR</td><td scope="row" class='awrc'>GCR Slaves (LMHB)</td><td align="right" class='awrc'>3.52</td></tr>
<tr><td scope="row" class='awrnc'>IPC0</td><td scope="row" class='awrnc'>IPC Service 0</td><td align="right" class='awrnc'>2.94</td></tr>
<tr><td scope="row" class='awrc'>DIA0</td><td scope="row" class='awrc'>diagnosibility process 0</td><td align="right" class='awrc'>2.32</td></tr>
<tr><td scope="row" class='awrnc'>P</td><td scope="row" class='awrnc'>Parallel query slave</td><td align="right" class='awrnc'>1.69</td></tr>
<tr><td scope="row" class='awrc'>O</td><td scope="row" class='awrc'>ASM Connection Pool</td><td align="right" class='awrc'>1.42</td></tr>
<tr><td scope="row" class='awrnc'>LMHB</td><td scope="row" class='awrnc'>lm heartbeat monitor</td><td align="right" class='awrnc'>1.36</td></tr>
<tr><td scope="row" class='awrc'>LMD0</td><td scope="row" class='awrc'>global enqueue service daemon 0</td><td align="right" class='awrc'>1.35</td></tr>
<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td align="right" class='awrnc'>1.33</td></tr>
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td align="right" class='awrc'>1.15</td></tr>
<tr><td scope="row" class='awrnc'>IMR</td><td scope="row" class='awrnc'>CGS IMR Slave</td><td align="right" class='awrnc'>1.03</td></tr>
<tr><td scope="row" class='awrc'>LMD1</td><td scope="row" class='awrc'>global enqueue service daemon 1</td><td align="right" class='awrc'>1.01</td></tr>
<tr><td scope="row" class='awrnc'>SCM</td><td scope="row" class='awrnc'>DLM Statistics Collection and Management Slave</td><td align="right" class='awrnc'>0.84</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="22"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#400">SQL ordered by Elapsed Time</a></li>
<li class="awr"><a class="awr" href="#500">SQL ordered by CPU Time</a></li>
<li class="awr"><a class="awr" href="#550">SQL ordered by User I/O Wait Time</a></li>
<li class="awr"><a class="awr" href="#600">SQL ordered by Gets</a></li>
<li class="awr"><a class="awr" href="#700">SQL ordered by Reads</a></li>
<li class="awr"><a class="awr" href="#740">SQL ordered by Physical Reads (UnOptimized)</a></li>
<li class="awr"><a class="awr" href="#800">SQL ordered by Executions</a></li>
<li class="awr"><a class="awr" href="#900">SQL ordered by Parse Calls</a></li>
<li class="awr"><a class="awr" href="#1000">SQL ordered by Sharable Memory</a></li>
<li class="awr"><a class="awr" href="#1100">SQL ordered by Version Count</a></li>
<li class="awr"><a class="awr" href="#1150">SQL ordered by Cluster Wait Time</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="400"></a>
<h3 class="awr">SQL ordered by Elapsed Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> % Total DB Time is the Elapsed Time of the SQL statement divided     into the Total Database Time multiplied by 100 </li>
<li class="awr"> %Total - Elapsed Time	as a percentage of Total DB time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   98.3% of Total DB Time (s):		10,826</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total DB Time (s):	   10,826</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by elapsed time"><tr><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Elapsed Time per Exec (s) </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">	SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>8,976.46</td><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>82.92</td><td align="right" class='awrc'>6.29</td><td align="right" class='awrc'>90.87</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,654.85</td><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>15.29</td><td align="right" class='awrnc'>7.38</td><td align="right" class='awrnc'>88.05</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.66</td><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.15</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.15</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>89.57</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.68</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.66</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.13</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.13</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>7.65</td><td align="right" class='awrc'>89.50</td><td scope="row" class='awrc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.12</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.12</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>89.56</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.11</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.11</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>9.29</td><td align="right" class='awrc'>83.87</td><td scope="row" class='awrc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.10</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.10</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.55</td><td align="right" class='awrnc'>89.55</td><td scope="row" class='awrnc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>92.20</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.09</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.54</td><td align="right" class='awrnc'>89.70</td><td scope="row" class='awrnc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.06</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.06</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>7.60</td><td align="right" class='awrc'>89.63</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.02</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.02</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.71</td><td align="right" class='awrnc'>89.43</td><td scope="row" class='awrnc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.00</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.72</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.56</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.83</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.83</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>7.57</td><td align="right" class='awrc'>89.60</td><td scope="row" class='awrc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.82</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.82</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>7.52</td><td align="right" class='awrnc'>89.71</td><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.79</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.79</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>7.51</td><td align="right" class='awrc'>89.81</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.62</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.62</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.68</td><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.53</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.53</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>9.12</td><td align="right" class='awrc'>83.93</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="500"></a>
<h3 class="awr">SQL ordered by CPU Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - CPU Time	as a percentage of Total DB CPU </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   82.9% of Total CPU Time (s): 	    832</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total CPU Time (s):	       832</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by CPU time"><tr><th class="awrbg" scope="col">CPU    Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">CPU per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>564.62</td><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>67.88</td><td align="right" class='awrc'>8,976.46</td><td align="right" class='awrc'>6.29</td><td align="right" class='awrc'>90.87</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>122.17</td><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>14.69</td><td align="right" class='awrnc'>1,654.85</td><td align="right" class='awrnc'>7.38</td><td align="right" class='awrnc'>88.05</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>52.77</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>52.77</td><td align="right" class='awrc'>6.34</td><td align="right" class='awrc'>568.11</td><td align="right" class='awrc'>9.29</td><td align="right" class='awrc'>83.87</td><td scope="row" class='awrc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>51.76</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>51.76</td><td align="right" class='awrnc'>6.22</td><td align="right" class='awrnc'>567.53</td><td align="right" class='awrnc'>9.12</td><td align="right" class='awrnc'>83.93</td><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>43.81</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43.81</td><td align="right" class='awrc'>5.27</td><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>7.71</td><td align="right" class='awrc'>89.43</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.47</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43.47</td><td align="right" class='awrnc'>5.23</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>7.65</td><td align="right" class='awrnc'>89.50</td><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>43.30</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43.30</td><td align="right" class='awrc'>5.21</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>7.62</td><td align="right" class='awrc'>89.57</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.27</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43.27</td><td align="right" class='awrnc'>5.20</td><td align="right" class='awrnc'>568.12</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>89.56</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>43.19</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43.19</td><td align="right" class='awrc'>5.19</td><td align="right" class='awrc'>568.06</td><td align="right" class='awrc'>7.60</td><td align="right" class='awrc'>89.63</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.19</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43.19</td><td align="right" class='awrnc'>5.19</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.66</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>43.14</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43.14</td><td align="right" class='awrc'>5.19</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.66</td><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.13</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43.13</td><td align="right" class='awrnc'>5.18</td><td align="right" class='awrnc'>568.14</td><td align="right" class='awrnc'>7.59</td><td align="right" class='awrnc'>89.68</td><td scope="row" class='awrnc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>43.11</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43.11</td><td align="right" class='awrc'>5.18</td><td align="right" class='awrc'>567.62</td><td align="right" class='awrc'>7.60</td><td align="right" class='awrc'>89.68</td><td scope="row" class='awrc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.01</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43.01</td><td align="right" class='awrnc'>5.17</td><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>7.57</td><td align="right" class='awrnc'>89.60</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>42.90</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>42.90</td><td align="right" class='awrc'>5.16</td><td align="right" class='awrc'>568.10</td><td align="right" class='awrc'>7.55</td><td align="right" class='awrc'>89.55</td><td scope="row" class='awrc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>42.90</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>42.90</td><td align="right" class='awrnc'>5.16</td><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>7.56</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>42.86</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>42.86</td><td align="right" class='awrc'>5.15</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>42.85</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>42.85</td><td align="right" class='awrnc'>5.15</td><td align="right" class='awrnc'>568.00</td><td align="right" class='awrnc'>7.54</td><td align="right" class='awrnc'>89.72</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>42.69</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>42.69</td><td align="right" class='awrc'>5.13</td><td align="right" class='awrc'>567.82</td><td align="right" class='awrc'>7.52</td><td align="right" class='awrc'>89.71</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>42.63</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>42.63</td><td align="right" class='awrnc'>5.13</td><td align="right" class='awrnc'>567.79</td><td align="right" class='awrnc'>7.51</td><td align="right" class='awrnc'>89.81</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>34.45</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>34.45</td><td align="right" class='awrc'>4.14</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>92.20</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="550"></a>
<h3 class="awr">SQL ordered by User I/O Wait Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - User I/O Time as a percentage of Total User I/O Wait time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   99.8% of Total User I/O Wait Time (s):	    9,635</li>
<li class="awr">Captured PL/SQL account for   99.9% of Total User I/O Wait Time (s):	       9,635</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by user I/O time"><tr><th class="awrbg" scope="col">User I/O Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">UIO per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>8,157.07</td><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>84.67</td><td align="right" class='awrc'>8,976.46</td><td align="right" class='awrc'>6.29</td><td align="right" class='awrc'>90.87</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,457.01</td><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>15.12</td><td align="right" class='awrnc'>1,654.85</td><td align="right" class='awrnc'>7.38</td><td align="right" class='awrnc'>88.05</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>523.77</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>523.77</td><td align="right" class='awrc'>5.44</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>92.20</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>509.91</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>509.91</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>567.79</td><td align="right" class='awrnc'>7.51</td><td align="right" class='awrnc'>89.81</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>509.59</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>509.59</td><td align="right" class='awrc'>5.29</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>509.58</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>509.58</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>568.00</td><td align="right" class='awrnc'>7.54</td><td align="right" class='awrnc'>89.72</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>509.49</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>509.49</td><td align="right" class='awrc'>5.29</td><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.68</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>509.41</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>509.41</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>567.82</td><td align="right" class='awrnc'>7.52</td><td align="right" class='awrnc'>89.71</td><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>509.40</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>509.40</td><td align="right" class='awrc'>5.29</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.66</td><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>509.40</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>509.40</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.66</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>509.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>509.18</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>568.06</td><td align="right" class='awrc'>7.60</td><td align="right" class='awrc'>89.63</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>509.06</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>509.06</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>567.62</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.68</td><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>508.92</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>508.92</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>567.83</td><td align="right" class='awrc'>7.56</td><td align="right" class='awrc'>89.62</td><td scope="row" class='awrc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>508.91</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>508.91</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>568.15</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>89.57</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>508.82</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>508.82</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>568.12</td><td align="right" class='awrc'>7.62</td><td align="right" class='awrc'>89.56</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>508.74</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>508.74</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>7.57</td><td align="right" class='awrnc'>89.60</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>508.72</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>508.72</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>568.10</td><td align="right" class='awrc'>7.55</td><td align="right" class='awrc'>89.55</td><td scope="row" class='awrc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>508.45</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>508.45</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>7.65</td><td align="right" class='awrnc'>89.50</td><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>507.98</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>507.98</td><td align="right" class='awrc'>5.27</td><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>7.71</td><td align="right" class='awrc'>89.43</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>476.45</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>476.45</td><td align="right" class='awrnc'>4.95</td><td align="right" class='awrnc'>568.11</td><td align="right" class='awrnc'>9.29</td><td align="right" class='awrnc'>83.87</td><td scope="row" class='awrnc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>476.33</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>476.33</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>567.53</td><td align="right" class='awrc'>9.12</td><td align="right" class='awrc'>83.93</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="600"></a>
<h3 class="awr">SQL ordered by Gets</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - Buffer Gets	as a percentage of Total Buffer Gets </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Buffer Gets:	 5,345,958</li>
<li class="awr">Captured SQL account for   83.8% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by buffer gets"><tr><th class="awrbg" scope="col">Buffer Gets </th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Gets     per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">	%IO</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>3,667,943</td><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>6.01</td><td align="right" class='awrc'>68.61</td><td align="right" class='awrc'>8,976.46</td><td class='awrc'>6.3</td><td class='awrc'>90.9</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>779,591</td><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>7.24</td><td align="right" class='awrnc'>14.58</td><td align="right" class='awrnc'>1,654.85</td><td class='awrnc'>7.4</td><td class='awrnc'>88</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>251,038</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>251,038.00</td><td align="right" class='awrc'>4.70</td><td align="right" class='awrc'>568.09</td><td class='awrc'>6.1</td><td class='awrc'>92.2</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>244,070</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>244,070.00</td><td align="right" class='awrnc'>4.57</td><td align="right" class='awrnc'>568.13</td><td class='awrnc'>7.7</td><td class='awrnc'>89.5</td><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>244,019</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>244,019.00</td><td align="right" class='awrc'>4.56</td><td align="right" class='awrc'>568.02</td><td class='awrc'>7.7</td><td class='awrc'>89.4</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>243,730</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>243,730.00</td><td align="right" class='awrnc'>4.56</td><td align="right" class='awrnc'>568.14</td><td class='awrnc'>7.6</td><td class='awrnc'>89.7</td><td scope="row" class='awrnc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>243,381</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>243,381.00</td><td align="right" class='awrc'>4.55</td><td align="right" class='awrc'>568.13</td><td class='awrc'>7.6</td><td class='awrc'>89.7</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>242,588</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>242,588.00</td><td align="right" class='awrnc'>4.54</td><td align="right" class='awrnc'>568.12</td><td class='awrnc'>7.6</td><td class='awrnc'>89.6</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>242,504</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>242,504.00</td><td align="right" class='awrc'>4.54</td><td align="right" class='awrc'>568.15</td><td class='awrc'>7.6</td><td class='awrc'>89.6</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>242,272</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>242,272.00</td><td align="right" class='awrnc'>4.53</td><td align="right" class='awrnc'>568.15</td><td class='awrnc'>7.6</td><td class='awrnc'>89.7</td><td scope="row" class='awrnc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>240,740</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>240,740.00</td><td align="right" class='awrc'>4.50</td><td align="right" class='awrc'>568.09</td><td class='awrc'>7.5</td><td class='awrc'>89.7</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>240,334</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>240,334.00</td><td align="right" class='awrnc'>4.50</td><td align="right" class='awrnc'>568.00</td><td class='awrnc'>7.5</td><td class='awrnc'>89.7</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>239,978</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>239,978.00</td><td align="right" class='awrc'>4.49</td><td align="right" class='awrc'>567.83</td><td class='awrc'>7.6</td><td class='awrc'>89.6</td><td scope="row" class='awrc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>239,968</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>239,968.00</td><td align="right" class='awrnc'>4.49</td><td align="right" class='awrnc'>567.83</td><td class='awrnc'>7.6</td><td class='awrnc'>89.6</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>239,807</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>239,807.00</td><td align="right" class='awrc'>4.49</td><td align="right" class='awrc'>568.10</td><td class='awrc'>7.6</td><td class='awrc'>89.5</td><td scope="row" class='awrc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>239,799</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>239,799.00</td><td align="right" class='awrnc'>4.49</td><td align="right" class='awrnc'>567.79</td><td class='awrnc'>7.5</td><td class='awrnc'>89.8</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>239,565</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>239,565.00</td><td align="right" class='awrc'>4.48</td><td align="right" class='awrc'>567.62</td><td class='awrc'>7.6</td><td class='awrc'>89.7</td><td scope="row" class='awrc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>239,520</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>239,520.00</td><td align="right" class='awrnc'>4.48</td><td align="right" class='awrnc'>567.82</td><td class='awrnc'>7.5</td><td class='awrnc'>89.7</td><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>239,117</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>239,117.00</td><td align="right" class='awrc'>4.47</td><td align="right" class='awrc'>568.06</td><td class='awrc'>7.6</td><td class='awrc'>89.6</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>225,929</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>225,929.00</td><td align="right" class='awrnc'>4.23</td><td align="right" class='awrnc'>568.11</td><td class='awrnc'>9.3</td><td class='awrnc'>83.9</td><td scope="row" class='awrnc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>221,406</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>221,406.00</td><td align="right" class='awrc'>4.14</td><td align="right" class='awrc'>567.53</td><td class='awrc'>9.1</td><td class='awrc'>83.9</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="700"></a>
<h3 class="awr">SQL ordered by Reads</h3>
<ul>
<li class="awr"> %Total - Physical Reads as a percentage of Total Disk Reads </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Disk Reads:	2,070,440</li>
<li class="awr">Captured SQL account for   99.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by physical reads"><tr><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Reads	  per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>1,754,097</td><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>2.87</td><td align="right" class='awrc'>84.72</td><td align="right" class='awrc'>8,976.46</td><td align="right" class='awrc'>6.29</td><td align="right" class='awrc'>90.87</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>309,317</td><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>2.87</td><td align="right" class='awrnc'>14.94</td><td align="right" class='awrnc'>1,654.85</td><td align="right" class='awrnc'>7.38</td><td align="right" class='awrnc'>88.05</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>114,253</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>114,253.00</td><td align="right" class='awrc'>5.52</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>92.20</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>110,230</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>110,230.00</td><td align="right" class='awrnc'>5.32</td><td align="right" class='awrnc'>568.02</td><td align="right" class='awrnc'>7.71</td><td align="right" class='awrnc'>89.43</td><td scope="row" class='awrnc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,815</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,815.00</td><td align="right" class='awrc'>5.30</td><td align="right" class='awrc'>568.13</td><td align="right" class='awrc'>7.65</td><td align="right" class='awrc'>89.50</td><td scope="row" class='awrc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,796</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,796.00</td><td align="right" class='awrnc'>5.30</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.66</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,732</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,732.00</td><td align="right" class='awrc'>5.30</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,516</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,516.00</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>567.62</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.68</td><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,470</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,470.00</td><td align="right" class='awrc'>5.29</td><td align="right" class='awrc'>568.12</td><td align="right" class='awrc'>7.62</td><td align="right" class='awrc'>89.56</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,424</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,424.00</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>7.56</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,414</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,414.00</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>567.83</td><td align="right" class='awrc'>7.57</td><td align="right" class='awrc'>89.60</td><td scope="row" class='awrc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,364</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,364.00</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>567.79</td><td align="right" class='awrnc'>7.51</td><td align="right" class='awrnc'>89.81</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,287</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,287.00</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>568.00</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.72</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,277</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,277.00</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>567.82</td><td align="right" class='awrnc'>7.52</td><td align="right" class='awrnc'>89.71</td><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,084</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,084.00</td><td align="right" class='awrc'>5.27</td><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.68</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,052</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,052.00</td><td align="right" class='awrnc'>5.27</td><td align="right" class='awrnc'>568.06</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.63</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,010</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,010.00</td><td align="right" class='awrc'>5.27</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.66</td><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>108,938</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>108,938.00</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>568.10</td><td align="right" class='awrnc'>7.55</td><td align="right" class='awrnc'>89.55</td><td scope="row" class='awrnc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>108,859</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>108,859.00</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>7.62</td><td align="right" class='awrc'>89.57</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,552</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,552.00</td><td align="right" class='awrnc'>4.86</td><td align="right" class='awrnc'>568.11</td><td align="right" class='awrnc'>9.29</td><td align="right" class='awrnc'>83.87</td><td scope="row" class='awrnc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,305</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,305.00</td><td align="right" class='awrc'>4.84</td><td align="right" class='awrc'>567.53</td><td align="right" class='awrc'>9.12</td><td align="right" class='awrc'>83.93</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="740"></a>
<h3 class="awr">SQL ordered by Physical Reads (UnOptimized)</h3>
<ul>
<li class="awr"> UnOptimized Read Reqs = Physical Read Reqs -	    (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile) </li>
<li class="awr"> %Opt	- Optimized Reads as percentage of SQL Read Requests </li>
<li class="awr"> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs</li>
<li class="awr">Total Physical Read Requests:	    2,070,369</li>
<li class="awr">Captured SQL account for    5.3% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       2,070,369</li>
<li class="awr">Captured SQL account for    5.3% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by unoptimized read requests"><tr><th class="awrbg" scope="col">UnOptimized Read Reqs</th><th class="awrbg" scope="col">Physical  Read Reqs</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">UnOptimized Reqs per Exec</th><th class="awrbg" scope="col">%Opt</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>114,253</td><td align="right" class='awrc'>114,253</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>114,253.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.52</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>110,230</td><td align="right" class='awrnc'>110,230</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>110,230.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.32</td><td scope="row" class='awrnc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,815</td><td align="right" class='awrc'>109,815</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,815.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.30</td><td scope="row" class='awrc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,796</td><td align="right" class='awrnc'>109,796</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,796.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.30</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,732</td><td align="right" class='awrc'>109,732</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,732.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.30</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,516</td><td align="right" class='awrnc'>109,516</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,516.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.29</td><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,470</td><td align="right" class='awrc'>109,470</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,470.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.29</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,424</td><td align="right" class='awrnc'>109,424</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,424.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.29</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,414</td><td align="right" class='awrc'>109,414</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,414.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.28</td><td scope="row" class='awrc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,364</td><td align="right" class='awrnc'>109,364</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,364.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.28</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,287</td><td align="right" class='awrc'>109,287</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,287.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.28</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,277</td><td align="right" class='awrnc'>109,277</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,277.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.28</td><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,084</td><td align="right" class='awrc'>109,084</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,084.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.27</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>109,052</td><td align="right" class='awrnc'>109,052</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>109,052.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.27</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>109,010</td><td align="right" class='awrc'>109,010</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109,010.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.27</td><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>108,938</td><td align="right" class='awrnc'>108,938</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>108,938.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.26</td><td scope="row" class='awrnc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>108,859</td><td align="right" class='awrc'>108,859</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>108,859.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.26</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,552</td><td align="right" class='awrnc'>100,552</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,552.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.86</td><td scope="row" class='awrnc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,305</td><td align="right" class='awrc'>100,305</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,305.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.84</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>92,540</td><td align="right" class='awrnc'>92,540</td><td align="right" class='awrnc'>610,478</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.47</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="800"></a>
<h3 class="awr">SQL ordered by Executions</h3>
<ul>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Executions:	  722,307</li>
<li class="awr">Captured SQL account for   99.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of executions"><tr><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Rows Processed</th><th class="awrbg" scope="col">Rows per Exec</th><th class="awrbg" scope="col">Elapsed	Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">  %IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>610,493</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>8,976.46</td><td class='awrc'>6.3</td><td class='awrc'>90.9</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>323,094</td><td align="right" class='awrnc'>3.00</td><td align="right" class='awrnc'>1,654.85</td><td class='awrnc'>7.4</td><td class='awrnc'>88</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>331</td><td align="right" class='awrc'>330</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.04</td><td class='awrc'>93.6</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td align="right" class='awrnc'>159</td><td align="right" class='awrnc'>159</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.07</td><td class='awrnc'>74.1</td><td class='awrnc'>16.7</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.24</td><td class='awrc'>11.6</td><td class='awrc'>4.9</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.05</td><td class='awrnc'>20.1</td><td class='awrnc'>66.4</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>43</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.04</td><td class='awrc'>35.8</td><td class='awrc'>28.7</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.02</td><td class='awrnc'>42.6</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td align="right" class='awrc'>25</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.00</td><td class='awrc'>73.2</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select pob.parttype from sys.t...</td></tr>
<tr><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.01</td><td class='awrnc'>84.8</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select ind.type#, ind.property...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="900"></a>
<h3 class="awr">SQL ordered by Parse Calls</h3>
<ul>
<li class="awr">Total Parse Calls:	     1,458</li>
<li class="awr">Captured SQL account for   64.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of parse calls"><tr><th class="awrbg" scope="col">Parse Calls</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total Parses</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>331</td><td align="right" class='awrc'>331</td><td align="right" class='awrc'>22.70</td><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td align="right" class='awrnc'>159</td><td align="right" class='awrnc'>159</td><td align="right" class='awrnc'>10.91</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>6.10</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>2.95</td><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrc'>30</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>2.06</td><td scope="row" class='awrc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>1.71</td><td scope="row" class='awrnc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select pob.parttype from sys.t...</td></tr>
<tr><td align="right" class='awrc'>24</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>1.65</td><td scope="row" class='awrc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select ind.type#, ind.property...</td></tr>
<tr><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>1.51</td><td scope="row" class='awrnc'><a class="awr" href="#5cu0x10yu88sw">5cu0x10yu88sw</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge into sys.wri$_index_usag...</td></tr>
<tr><td align="right" class='awrc'>20</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>1.37</td><td scope="row" class='awrc'><a class="awr" href="#bxpcry2tpc217">bxpcry2tpc217</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ opt_param('parallel...</td></tr>
<tr><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>1.37</td><td scope="row" class='awrnc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select count(*) from ilmobj$ w...</td></tr>
<tr><td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.30</td><td scope="row" class='awrc'><a class="awr" href="#9babjv8yq8ru3">9babjv8yq8ru3</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>BEGIN DBMS_OUTPUT.GET_LINES(:L...</td></tr>
<tr><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>1.23</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>16</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>1.10</td><td scope="row" class='awrc'><a class="awr" href="#fkc81h2686aqc">fkc81h2686aqc</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select pob.parttype from sys.i...</td></tr>
<tr><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>1.03</td><td scope="row" class='awrnc'><a class="awr" href="#94qn6y14kw01g">94qn6y14kw01g</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT NVL(TO_NUMBER(EXTRACT(X...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1000"></a>
<h3 class="awr">SQL ordered by Sharable Memory</h3>
<ul>
<li class="awr">Only Statements with Sharable Memory greater than 1048576 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by amount of shared memory used"><tr><th class="awrbg" scope="col">Sharable Mem (b)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>13,231,793</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>1.18</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrnc'>2,095,564</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.19</td><td scope="row" class='awrnc'><a class="awr" href="#atwuyuvqkf27w">atwuyuvqkf27w</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT /*+ OPT_PARAM('_fix_con...</td></tr>
<tr><td align="right" class='awrc'>1,335,752</td><td align="right" class='awrc'>107,698</td><td align="right" class='awrc'>0.12</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>1,173,463</td><td align="right" class='awrnc'>610,478</td><td align="right" class='awrnc'>0.11</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1100"></a>
<h3 class="awr">SQL ordered by Version Count</h3>
<ul>
<li class="awr">Only Statements with Version Count greater than 20 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by version counts"><tr><th class="awrbg" scope="col">Version Count </th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>40</td><td align="right" class='awrc'>107,698</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>610,478</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1150"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time</h3>
<ul>
<li class="awr"> %Total - Cluster Time	as a percentage of Total Cluster Wait Time </li>
<li class="awr"> %Clu	- Cluster Time	as a percentage of Elapsed Time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time </li>
<li class="awr"> Only SQL with Cluster Wait Time &gt; .005 seconds is reported</li>
<li class="awr">Total Cluster Wait Time (s):		 634</li>
<li class="awr">Captured SQL account for   99.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by cluster wait time"><tr><th class="awrbg" scope="col">Cluster Wait Time (s)</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed Time(s)</th><th class="awrbg" scope="col">%Clu</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>515.52</td><td align="right" class='awrc'>610,478</td><td align="right" class='awrc'>81.30</td><td align="right" class='awrc'>8,976.46</td><td align="right" class='awrc'>5.74</td><td align="right" class='awrc'>6.29</td><td align="right" class='awrc'>90.87</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>115.59</td><td align="right" class='awrnc'>107,698</td><td align="right" class='awrnc'>18.23</td><td align="right" class='awrnc'>1,654.85</td><td align="right" class='awrnc'>6.99</td><td align="right" class='awrnc'>7.38</td><td align="right" class='awrnc'>88.05</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>58.14</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>9.17</td><td align="right" class='awrc'>567.53</td><td align="right" class='awrc'>10.24</td><td align="right" class='awrc'>9.12</td><td align="right" class='awrc'>83.93</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>58.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>9.15</td><td align="right" class='awrnc'>568.11</td><td align="right" class='awrnc'>10.21</td><td align="right" class='awrnc'>9.29</td><td align="right" class='awrnc'>83.87</td><td scope="row" class='awrnc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>31.41</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.95</td><td align="right" class='awrc'>568.10</td><td align="right" class='awrc'>5.53</td><td align="right" class='awrc'>7.55</td><td align="right" class='awrc'>89.55</td><td scope="row" class='awrc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>31.39</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.95</td><td align="right" class='awrnc'>568.02</td><td align="right" class='awrnc'>5.53</td><td align="right" class='awrnc'>7.71</td><td align="right" class='awrnc'>89.43</td><td scope="row" class='awrnc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>31.34</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>568.13</td><td align="right" class='awrc'>5.52</td><td align="right" class='awrc'>7.65</td><td align="right" class='awrc'>89.50</td><td scope="row" class='awrc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>31.08</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.90</td><td align="right" class='awrnc'>567.83</td><td align="right" class='awrnc'>5.47</td><td align="right" class='awrnc'>7.57</td><td align="right" class='awrnc'>89.60</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>31.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.89</td><td align="right" class='awrc'>568.12</td><td align="right" class='awrc'>5.46</td><td align="right" class='awrc'>7.62</td><td align="right" class='awrc'>89.56</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>31.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.89</td><td align="right" class='awrnc'>568.15</td><td align="right" class='awrnc'>5.46</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>89.57</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.99</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.89</td><td align="right" class='awrc'>567.83</td><td align="right" class='awrc'>5.46</td><td align="right" class='awrc'>7.56</td><td align="right" class='awrc'>89.62</td><td scope="row" class='awrc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.95</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.88</td><td align="right" class='awrnc'>568.06</td><td align="right" class='awrnc'>5.45</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.63</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.90</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.87</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>5.44</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.66</td><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.65</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.83</td><td align="right" class='awrnc'>568.13</td><td align="right" class='awrnc'>5.40</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.66</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.65</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.83</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>5.39</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.56</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.82</td><td align="right" class='awrnc'>567.82</td><td align="right" class='awrnc'>5.38</td><td align="right" class='awrnc'>7.52</td><td align="right" class='awrnc'>89.71</td><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.55</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.82</td><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>5.38</td><td align="right" class='awrc'>7.59</td><td align="right" class='awrc'>89.68</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.54</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.82</td><td align="right" class='awrnc'>567.62</td><td align="right" class='awrnc'>5.38</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>89.68</td><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.48</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.81</td><td align="right" class='awrc'>568.00</td><td align="right" class='awrc'>5.37</td><td align="right" class='awrc'>7.54</td><td align="right" class='awrc'>89.72</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.37</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>567.79</td><td align="right" class='awrnc'>5.35</td><td align="right" class='awrnc'>7.51</td><td align="right" class='awrnc'>89.81</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>21.81</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.44</td><td align="right" class='awrc'>568.09</td><td align="right" class='awrc'>3.84</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>92.20</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>70.23</td><td align="right" class='awrnc'>16.81</td><td align="right" class='awrnc'>15.04</td><td scope="row" class='awrnc'><a class="awr" href="#bjck50zs3nc95">bjck50zs3nc95</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into WRH$_SYSSTAT (dbid...</td></tr>
<tr><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>87.81</td><td align="right" class='awrc'>11.65</td><td align="right" class='awrc'>4.87</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>56.94</td><td align="right" class='awrnc'>12.18</td><td align="right" class='awrnc'>32.85</td><td scope="row" class='awrnc'><a class="awr" href="#9gumgzs3rf5cw">9gumgzs3rf5cw</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into WRH$_EVENT_HISTOGR...</td></tr>
<tr><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>29.66</td><td align="right" class='awrc'>56.47</td><td align="right" class='awrc'>3.38</td><td scope="row" class='awrc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>30.22</td><td align="right" class='awrnc'>56.54</td><td align="right" class='awrnc'>3.39</td><td scope="row" class='awrnc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
<tr><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>8.62</td><td align="right" class='awrc'>12.15</td><td align="right" class='awrc'>18.39</td><td scope="row" class='awrc'><a class="awr" href="#8fgdzmkchnn1a">8fgdzmkchnn1a</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT /*+ APPEND LEADING(@&quot;SE...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.57</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>72.19</td><td align="right" class='awrnc'>21.94</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>41.24</td><td align="right" class='awrc'>53.63</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#6s1ku6bs9a8xb">6s1ku6bs9a8xb</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> WITH ash as (SELECT ash.event...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>16.69</td><td align="right" class='awrnc'>20.09</td><td align="right" class='awrnc'>66.41</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>22.80</td><td align="right" class='awrc'>35.82</td><td align="right" class='awrc'>28.69</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>86.56</td><td align="right" class='awrnc'>27.46</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#b0n14dkbkdpbb">b0n14dkbkdpbb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select snap_interval, snapint_...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>3.50</td><td align="right" class='awrc'>95.18</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#dcbt0gjzjwwbs">dcbt0gjzjwwbs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrh$_sga_target_ad...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="07wu9h58t4tgt"></a>07wu9h58t4tgt</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '22';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0hnb5g8vhm4u9"></a>0hnb5g8vhm4u9</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0rjvf5n1k4aba"></a>0rjvf5n1k4aba</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '26';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrnc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="26ka4yp1faxn2"></a>26ka4yp1faxn2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '27';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrnc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,  C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m			using dual								   on (m.obj# = :objn and							  (:pobjn = 0 or							      m.obj# = :pobjn or							 m.obj# in (select obj# 							       from tabpart$								  where bo# = :pobjn and obj# = :objn					     union all									select obj#								   from tabcompart$							      where bo# = :pobjn and obj# = :objn					 union all								    select tsp.obj#							       from tabsubpart$ tsp,  tabcompart$ tcp					   where tsp.pobj# = tcp.obj#							and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				   and tsp.obj# = :objn)))				    when matched then								 update 								    set inserts = decode(:reset,  1,  0,  inserts) + :ins,			       updates = decode(:reset,  1,  0,  updates) + :upd,			      deletes = decode(:reset,	1,  0,	deletes) + :del,			     flags =  decode(:reset,  1,  0,  flags - bitand(flags,  :flag)) + :flag,	     drop_segments = decode(:reset,  1,  0,  drop_segments) + :dropseg, 	    timestamp = :time							 when NOT matched then							      insert (obj#,  inserts,  updates,  deletes,					     timestamp,  flags,  drop_segments) 				  values (:objn,  :ins,  :upd,	:del,  :time,  :flag,  :dropseg)		   where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5cu0x10yu88sw"></a>5cu0x10yu88sw</td><td class='awrnc'><pre_sqltext class="awr">merge into sys.wri$_index_usage iu					     using dual 								   on (iu.obj# = :objn) 						       when matched then							     update									  set iu.total_access_count = iu.total_access_count + :ns,			    iu.total_rows_returned = iu.total_rows_returned + :rr,			  iu.total_exec_count = iu.total_exec_count + :ne,				iu.bucket_0_access_count = iu.bucket_0_access_count + :nsh0,		      iu.bucket_1_access_count = iu.bucket_1_access_count + :nsh1,		    iu.bucket_2_10_access_count = iu.bucket_2_10_access_count + :nsh2_10,	  iu.bucket_2_10_rows_returned = iu.bucket_2_10_rows_returned + 						  :nrh2_10,				     iu.bucket_11_100_access_count = iu.bucket_11_100_access_count +						     :nsh11_100,				iu.bucket_11_100_rows_returned = iu.bucket_11_100_rows_returned +						:nrh11_100,				   iu.bucket_101_1000_access_count = iu.bucket_101_1000_access_count +						   :nsh101_1000,			      iu.bucket_101_1000_rows_returned = iu.bucket_101_1000_rows_returned +					      :nrh101_1000,				 iu.bucket_1000_plus_access_count = iu.bucket_1000_plus_access_count +						 :nsh1000plus,				    iu.bucket_1000_plus_rows_returned = iu.bucket_1000_plus_rows_returned					    + :nrh1000plus,			       last_used = SYSDATE						       when NOT matched then							     insert (iu.obj#,  iu.total_access_count,						    iu.total_rows_returned,							  iu.total_exec_count,								iu.bucket_0_access_count,						      iu.bucket_1_access_count, 						    iu.bucket_2_10_access_count,						  iu.bucket_2_10_rows_returned, 						iu.bucket_11_100_access_count,						      iu.bucket_11_100_rows_returned,						    iu.bucket_101_1000_access_count,						  iu.bucket_101_1000_rows_returned,						iu.bucket_1000_plus_access_count,					      iu.bucket_1000_plus_rows_returned,					    iu.last_used)							 values (:objn,  :ns,  :rr,								 :ne,  :nsh0,  :nsh1,  :nsh2_10,  :nrh2_10,  :nsh11_100,  :nrh11_100,		       :nsh101_1000,  :nrh101_1000,  :nsh1000plus,  :nrh1000plus,			SYSDATE)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5mrhuphq8yfw1"></a>5mrhuphq8yfw1</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5wf99mx0r39xn"></a>5wf99mx0r39xn</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrc'><pre_sqltext class="awr">select ind.type#,	ind.property,	 base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,  sys.obj$	base_obj  where ind.obj#	  = :oid    and ind.dataobj#	  = :doid    and ind.bo#	 = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6s1ku6bs9a8xb"></a>6s1ku6bs9a8xb</td><td class='awrnc'><pre_sqltext class="awr"> WITH ash as  (SELECT ash.event_id,   sum(decode(ash.session_type,  1,  1,  0)) as cnt_fg,   count(*) as cnt_total  FROM  WRH$_ACTIVE_SESSION_HISTORY ash  WHERE  ash.dbid = :dbid  AND ash.instance_number = :inst  AND ash.snap_id &gt; :bid AND ash.snap_id &lt;= :eid  AND  ash.wait_time = 0  GROUP BY ash.event_id  ),   evts as  (SELECT event_id,  sum(w_cnt) as w_cnt,	sum(to_cnt) as to_cnt,	 sum(w_time) as w_time	, sum(w_cnt_fg) as w_cnt_fg,  sum(to_cnt_fg) as to_cnt_fg,   sum(w_time_fg) as w_time_fg  FROM (SELECT es.event_id as event_id,   es.total_waits - nvl(bs.total_waits, 0) as w_cnt,   es.TOTAL_TIMEOUTS - nvl(bs.TOTAL_TIMEOUTS, 0) as to_cnt,	 es.TIME_WAITED_MICRO - nvl(bs.TIME_WAITED_MICRO, 0)  as w_time  , es.total_waits_fg - nvl(bs.total_waits_fg, 0)  as w_cnt_fg,	 es.TOTAL_TIMEOUTS_FG - nvl(bs.TOTAL_TIMEOUTS_FG, 0)  as to_cnt_fg,   es.TIME_WAITED_MICRO_FG - nvl(bs.TIME_WAITED_MICRO_FG, 0)  as w_time_fg  FROM  WRH$_SYSTEM_EVENT es ,  WRH$_SYSTEM_EVENT bs  WHERE  es.dbid = :dbid  AND es.instance_number = :inst  AND es.snap_id = :eid  AND bs.dbid(+) = :dbid AND bs.instance_number(+) = es.instance_number AND bs.snap_id(+) = :bid  AND  es.instance_number = bs.instance_number(+)  AND	es.event_id = bs.event_id(+)  UNION ALL  SELECT x.event_hash as event_id,   0 as w_cnt,  0 as to_cnt,  0 as w_time  , 0 as w_cnt_fg,  0 as to_cnt_fg,  0 as w_time_fg  FROM  X$KEHEVTMAP x  )  GROUP BY event_id  ),   awr_names as  (SELECT e.event_id,  max(e.event_name) as event_name,	     max(e.wait_class_id) as wait_class_id,	      max(e.wait_class) as wait_class,		 max(e.parameter1) as parameter1,	    max(e.parameter2) as parameter2,	       max(e.parameter3) as parameter3	FROM  WRH$_EVENT_NAME e  WHERE e.dbid = :dbid GROUP BY e.event_id  ),	named_events as  (SELECT names.event_id as event_id,   names.event_name as event_name,	 evts.w_cnt as w_cnt,	evts.to_cnt as to_cnt,	 evts.w_time as w_time,   evts.w_cnt_fg as w_cnt_fg,   evts.to_cnt_fg as to_cnt_fg,   evts.w_time_fg as w_time_fg,   names.wait_class_id as wait_class_id,   names.parameter1 as p1,   names.parameter2 as p2,	 names.parameter3 as p3  FROM	evts,  awr_names names	WHERE  evts.event_id = names.event_id  AND  names.wait_class_id &lt;&gt; 2723168908  ),   data as  (SELECT e.event_id as event_id,   e.event_name as event_name,   e.wait_class_id as wait_class_id,   e.p1 as p1,   e.p2 as p2,   e.p3 as p3,	 e.w_cnt as total_w_cnt,   e.to_cnt as total_to_cnt,   e.w_time as total_w_time,   e.w_cnt_fg as fg_w_cnt,   e.to_cnt_fg as fg_to_cnt,	 e.w_time_fg as fg_w_time,   nvl(a.cnt_total, 0) as total_ash_cnt,   nvl(a.cnt_fg, 0) as fg_ash_cnt  FROM   named_events e,  ash a  WHERE  e.event_id  = a.event_id(+)	),   final_query as  (SELECT d.event_name,   d.event_id,   d.p1 as p1,	 case when (p1 is null OR p1 = '0')  then 0 else 1 end as p1valid,   d.p2 as p2,   case when (p2 is null OR p2 = '0')  then 0 else 1 end as p2valid,   d.p3 as p3,   case when (p3 is null OR p3 = '0')  then 0 else 1 end as p3valid,	 nvl(e.keh_id, 0) as keh_evt_id,   c.class# as class_num,   d.wait_class_id as wait_class_id,	c.keh_id as keh_ecl_id,   round(d.total_ash_cnt, 0) as total_ash_cnt,	round(d.fg_ash_cnt, 0) as fg_ash_cnt,	round(d.fg_w_cnt, 0) as fg_w_cnt,   round(d.fg_to_cnt, 0) as fg_to_cnt,   round(d.fg_w_time, 0) as fg_w_time,	round(d.total_w_cnt, 0) as total_w_cnt,   round(d.total_to_cnt, 0) as total_to_cnt,   round(d.total_w_time, 0) as total_w_time	from data d,   X$KEHEVTMAP e ,	X$KEHECLMAP c  where d.event_id = e.event_hash(+)  and d.wait_class_id = c.class_hash  )  SELECT *  FROM   final_query	WHERE  keh_evt_id &gt; 0 OR total_w_time &gt; 0  ORDER BY wait_class_id,  fg_w_time DESC,  event_id </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6x8682kb2y8vd"></a>6x8682kb2y8vd</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '20';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="71v63sn4bfskh"></a>71v63sn4bfskh</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '7';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="72r567f4w1r2z"></a>72r567f4w1r2z</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="8fgdzmkchnn1a"></a>8fgdzmkchnn1a</td><td class='awrnc'><pre_sqltext class="awr">INSERT /*+ APPEND  LEADING(@&quot;SEL$F5BB74E1&quot; &quot;H&quot;@&quot;SEL$2&quot; &quot;A&quot;@&quot;SEL$1&quot;)  USE_NL(@&quot;SEL$F5BB74E1&quot; &quot;A&quot;@&quot;SEL$1&quot;) 	*/ INTO  WRH$_ACTIVE_SESSION_HISTORY  ( snap_id,  dbid,  instance_number ,  sample_id,	sample_time, sample_time_utc,  usecs_per_row ,	session_id,  session_serial#,  session_type ,  flags ,	user_id ,  sql_id,  sql_child_number,  sql_opcode,  force_matching_signature ,	top_level_sql_id,  top_level_sql_opcode ,  sql_plan_hash_value,  sql_full_plan_hash_value ,  sql_adaptive_plan_resolved ,  sql_plan_line_id ,  sql_plan_operation#,  sql_plan_options# ,  sql_exec_id,	sql_exec_start ,  plsql_entry_object_id,  plsql_entry_subprogram_id ,  plsql_object_id,        plsql_subprogram_id ,  qc_instance_id,  qc_session_id,  qc_session_serial#,  px_flags ,	event_id,  seq#,  p1,  p2,  p3 ,  wait_time,  time_waited ,  blocking_session,	blocking_session_serial#,  blocking_inst_id ,  current_obj#,  current_file#,  current_block#,  current_row# ,  top_level_call#,  consumer_group_id,  xid,  remote_instance#,  time_model ,  service_hash,  program,  module,  action,  client_id,  machine,  port,    ecid ,  dbreplay_file_id,  dbreplay_call_counter ,  con_dbid,  per_pdb ,	tm_delta_time,	tm_delta_cpu_time,  tm_delta_db_time,  delta_time,  delta_read_io_requests,  delta_write_io_requests,  delta_read_io_bytes,  delta_write_io_bytes,  delta_interconnect_io_bytes,  pga_allocated,  temp_space_allocated ,  dbop_name,  dbop_exec_id  )  (SELECT /*+ PARAM('_module_action_old_length', 0) */:snap_id,  :dbid,  :instance_number ,  a.sample_id,	a.sample_time, a.sample_time_utc ,  a.usecs_per_row * :disk_filter_ratio ,  a.session_id,  a.session_serial#,  a.session_type ,  decode(a.flags,  0,  to_number(NULL),	a.flags) ,  a.user_id ,  a.sql_id,  a.sql_child_number,  a.sql_opcode,	a.force_matching_signature ,  a.top_level_sql_id,  a.top_level_sql_opcode ,  a.sql_plan_hash_value,  a.sql_full_plan_hash_value ,  a.sql_adaptive_plan_resolved ,  a.sql_plan_line_id ,  a.sql_plan_operation#,  a.sql_plan_options# ,	a.sql_exec_id,	a.sql_exec_start ,  a.plsql_entry_object_id,  a.plsql_entry_subprogram_id ,  a.plsql_object_id,        a.plsql_subprogram_id ,	a.qc_instance_id,  a.qc_session_id,  a.qc_session_serial#,  a.px_flags ,  a.event_id,  a.seq#,	a.p1,  a.p2,  a.p3 ,  a.wait_time,  a.time_waited ,  a.blocking_session,  a.blocking_session_serial#,  a.blocking_inst_id ,  a.current_obj#,  a.current_file#,	a.current_block#,  a.current_row# ,  a.top_level_call#,  a.consumer_group_id,  a.xid,  a.remote_instance# ,  a.time_model ,  a.service_hash ,  substrb(a.program,  1,  64) ,  a.module,  a.action,  a.client_id,  a.machine,  a.port,  a.ecid ,  a.dbreplay_file_id,  a.dbreplay_call_counter ,  a.con_dbid,  a.con_id ,  decode(a.tm_delta_time,  0,  to_number(null),  a.tm_delta_time),  decode(a.tm_delta_time,  0,  to_number(null),  a.tm_delta_cpu_time),  decode(a.tm_delta_time,  0,  to_number(null),  a.tm_delta_db_time),  decode(a.delta_time,  0,  to_number(null),	    a.delta_time),  decode(a.delta_time,  0,  to_number(null),		 decode(a.delta_read_io_requests,  0,  to_number(null), 		 a.delta_read_io_requests)),  decode(a.delta_time,  0,	to_number(null),	   decode(a.delta_write_io_requests,  0,  to_number(null),		    a.delta_write_io_requests)),  decode(a.delta_time,	0,  to_number(null),	       decode(a.delta_read_io_bytes,  0,  to_number(null),		    a.delta_read_io_bytes)),  decode(a.delta_time,  0,	to_number(null),	   decode(a.delta_write_io_bytes,  0,  to_number(null), 		 a.delta_write_io_bytes)),  decode(a.delta_time,  0,  to_number(null),		 decode(a.delta_interconnect_io_bytes,	0,  to_number(null),		      a.delta_interconnect_io_bytes)),	decode(a.pga_allocated,  0,  to_number(null),  a.pga_allocated),  decode(a.pga_allocated,  0,  to_number(null), 	  decode(a.temp_space_allocated,  0,  to_number(null),			a.temp_space_allocated)) ,  a.dbop_name,  a.dbop_exec_id FROM	   x$ash a,	      (SELECT h.sample_addr,  h.sample_id	    FROM   x$kewash h	       WHERE		      ( (h.sample_id &gt;= :begin_flushing) and 		  (h.sample_id &lt;  :latest_sample_id) )	      and (nlssort(h.is_awr_sample, 'nls_sort=BINARY') =		  nlssort('Y',	'nls_sort=BINARY'))	      ) shdr  WHERE (1 = 1)	and shdr.sample_addr	 = a.sample_addr     and shdr.sample_id       = a.sample_id	and nlssort(a.need_awr_sample,	'nls_sort=BINARY') =	     nlssort('Y',  'nls_sort=BINARY')) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="8wrvc2gfamkva"></a>8wrvc2gfamkva</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '25';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="91g7mg52grvpz"></a>91g7mg52grvpz</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '31';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="93dyj9jyyg3mj"></a>93dyj9jyyg3mj</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '10';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="94qn6y14kw01g"></a>94qn6y14kw01g</td><td class='awrnc'><pre_sqltext class="awr">SELECT NVL(TO_NUMBER(EXTRACT(XMLTYPE(:B2 ),  :B1 )),  0) FROM DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9babjv8yq8ru3"></a>9babjv8yq8ru3</td><td class='awrc'><pre_sqltext class="awr">BEGIN DBMS_OUTPUT.GET_LINES(:LINES,  :NUMLINES); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9gumgzs3rf5cw"></a>9gumgzs3rf5cw</td><td class='awrnc'><pre_sqltext class="awr">insert into  WRH$_EVENT_HISTOGRAM  (dbid,  per_pdb,  con_dbid,  snap_id,  instance_number,      event_id,  wait_time_milli,  wait_count ) select  :dbid,  0 per_pdb,   :srcdbid	con_dbid,   :snap_id,  :instance_number,	 d.ksledhash,  s.kslsesmaxdur/1024,	    s.kslsesval  FROM	x$kslseshist_micro   s,   x$ksled   d  WHERE (1 = 1)   and s.kslsesenum = d.indx   and s.kslsesval &gt; 0 </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9yv5dwv8k0awg"></a>9yv5dwv8k0awg</td><td class='awrc'><pre_sqltext class="awr">WITH MONITOR_DATA AS (SELECT INST_ID,  KEY,  NVL2(PX_QCSID,  NULL,  STATUS) STATUS,  FIRST_REFRESH_TIME,  LAST_REFRESH_TIME,  REFRESH_COUNT,  PROCESS_NAME,  SID,	SQL_ID,  SQL_EXEC_START,  SQL_EXEC_ID,	DBOP_NAME,  DBOP_EXEC_ID,  SQL_PLAN_HASH_VALUE,  SQL_FULL_PLAN_HASH_VALUE,  SESSION_SERIAL#,  SQL_TEXT,  PX_SERVER#,  PX_SERVER_GROUP,	PX_SERVER_SET,	PX_QCINST_ID,  PX_QCSID,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) ELSE ELAPSED_TIME END ELAPSED_TIME,  QUEUING_TIME,  CPU_TIME,  APPLICATION_WAIT_TIME,  CONCURRENCY_WAIT_TIME,  CLUSTER_WAIT_TIME,	USER_IO_WAIT_TIME,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN 0 ELSE ELAPSED_TIME - (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) END OTHER_WAIT_TIME,  PLSQL_EXEC_TIME,  JAVA_EXEC_TIME,  FETCHES,	BUFFER_GETS,  IO_INTERCONNECT_BYTES IO_INTER_BYTES,  PHYSICAL_READ_REQUESTS READ_REQS,	PHYSICAL_READ_BYTES READ_BYTES,  PHYSICAL_WRITE_REQUESTS WRITE_REQS,  PHYSICAL_WRITE_BYTES WRITE_BYTES,  NVL(PHYSICAL_READ_BYTES,  0) + NVL(PHYSICAL_WRITE_BYTES,  0) IO_BYTES,  NVL(PHYSICAL_READ_REQUESTS,  0) + NVL(PHYSICAL_WRITE_REQUESTS,  0) IO_REQS,  IO_CELL_UNCOMPRESSED_BYTES IO_UNC_BYTES,	IO_CELL_OFFLOAD_ELIGIBLE_BYTES IO_ELIG_BYTES,  IO_CELL_OFFLOAD_RETURNED_BYTES IO_RET_BYTES,  USER# USERID,  USERNAME,  MODULE,	ACTION,  SERVICE_NAME,	CLIENT_IDENTIFIER,  CLIENT_INFO,  PROGRAM,  PLSQL_OBJECT_ID PL_OID,  PLSQL_SUBPROGRAM_ID PL_PROGID,  PLSQL_ENTRY_OBJECT_ID PL_ENTRY_OID,  PLSQL_ENTRY_SUBPROGRAM_ID PL_ENTRY_PROGID,  PX_MAXDOP MAX_DOP,  PX_IS_CROSS_INSTANCE,  PX_MAXDOP_INSTANCES MAX_DOP_INSTANCES,  PX_SERVERS_REQUESTED SERVERS_REQUESTED,  PX_SERVERS_ALLOCATED SERVERS_ALLOCATED,  ERROR_NUMBER,  ERROR_FACILITY,  ERROR_MESSAGE,  NVL2(OTHER_XML,  'Y',  NULL) HAS_OTHER_XML,	NVL2(BINDS_XML,  'Y',  NULL) HAS_BINDS_XML,  NVL2(RM_CONSUMER_GROUP,  NVL2(RM_LAST_ACTION_TIME,  TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ),	'00/00/0000 00:00:01') || XMLELEMENT( &quot;rminfo&quot;,  XMLATTRIBUTES( RM_LAST_ACTION AS &quot;rmlastact&quot;,  RM_LAST_ACTION_REASON AS &quot;rmlastreason&quot;,	TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ) AS &quot;rmlasttime&quot;,  RM_CONSUMER_GROUP AS &quot;rmcg&quot;)).GETSTRINGVAL(),  '00/00/0000 00:00:00') RM_INFO,  CON_NAME,  CON_ID FROM GV$ALL_SQL_MONITOR MO1 WHERE MO1.INST_ID BETWEEN :B11 AND :B10 AND MO1.SQL_ID = NVL(:B9 ,  MO1.SQL_ID) AND MO1.SQL_EXEC_START = NVL(:B8 ,  MO1.SQL_EXEC_START) AND MO1.SQL_EXEC_ID = NVL(:B7 ,  MO1.SQL_EXEC_ID) OR (MO1.DBOP_NAME = NVL(:B6 ,  MO1.DBOP_NAME) AND MO1.DBOP_EXEC_ID = NVL(:B5 ,  MO1.DBOP_EXEC_ID)) AND ((:B4 = 1 AND MO1.PX_QCSID IS NULL) OR (MO1.PX_SERVER_GROUP = NVL(:B3 ,  MO1.PX_SERVER_GROUP) AND MO1.PX_SERVER_SET = NVL(:B2 ,  MO1.PX_SERVER_SET) AND MO1.PX_SERVER# = NVL(:B1 ,  MO1.PX_SERVER#)))),  MONITOR_AGG AS (SELECT MAX_PX_QCSID,  MAX_KEY,  MAX_INST_ID,  MAX_SESSION_ID,  MAX_SESSION_SERIAL,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,	DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,  MAX_PLAN_HASH_VALUE,	MAX_FULL_PLAN_HASH_VALUE,  MAX_USERID,	MAX_PROGRAM,  MAX_USERNAME,  MAX_MODULE,  MAX_ACTION,  MAX_SERVICE_NAME,  MAX_CLIENT_ID,  MAX_CLIENT_INFO,  MAX_ERROR_NUMBER,  MAX_ERROR_FACILITY,  MAX_ERROR_MESSAGE,	QC_HAS_OTHER_XML,  QC_HAS_BINDS_XML,  MAX_PL_OID,  MAX_PL_PROGID,  MAX_PL_ENTRY_OID,  MAX_PL_ENTRY_PROGID,  MAX_SQL_ID,  MAX_SQL_EXEC_START,  MAX_SQL_EXEC_ID,	MAX_LAST_REFRESH_TIME,	MAX_DBOP_NAME,	MAX_DBOP_EXEC_ID,  CASE WHEN MAX_PL_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_OID AND P.SUBPROGRAM_ID = MAX_PL_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_NAME,  CASE WHEN MAX_PL_ENTRY_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,	NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_ENTRY_OID AND P.SUBPROGRAM_ID = MAX_PL_ENTRY_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_ENTRY_NAME,  MAX_STATUS,	SUM_REFRESH_COUNT,  MIN_FIRST_REFRESH_TIME,  SQLMON_TEXT,  SUM_ELAPSED_TIME,  MAX_ELAPSED_TIME,  MAX_QUEUING_TIME,  SUM_CPU_TIME,  SUM_USER_IO_WAIT_TIME,  SUM_APPLICATION_WAIT_TIME,  SUM_CONCURRENCY_WAIT_TIME,  SUM_CLUSTER_WAIT_TIME,  SUM_PLSQL_EXEC_TIME,  SUM_JAVA_EXEC_TIME,  SUM_OTHER_WAIT_TIME,  SUM_FETCHES,  SUM_BUFFER_GETS,  SUM_READ_REQS,  SUM_READ_BYTES,  SUM_WRITE_REQS,  SUM_WRITE_BYTES,	SUM_IO_BYTES,  SUM_IO_INTER_BYTES,  SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES,  SUM_IO_RET_BYTES,  DECODE(:B14 ,  1,  'db_name',  SYS_CONTEXT('userenv',  'db_unique_name')) DB_UNIQUE_NAME,  DECODE(:B14 ,	1,  'platform_name',  SYS.DBMS_UTILITY.PORT_STRING) PLATFORM_NAME,  DECODE(:B14 ,  1,  'host_name',  SYS_CONTEXT('userenv',  'server_host')) HOST_NAME,  AGG_RM_INFO MAX_RM_INFO,  MAX_CON_NAME,  DECODE(MAX_CON_ID,  0,  NULL,  MAX_CON_ID) MAX_CON_ID FROM (SELECT MAX(PX_QCSID) MAX_PX_QCSID,  MAX(CASE WHEN PX_QCSID IS NULL THEN KEY ELSE NULL END) MAX_KEY,  MAX(CASE WHEN PX_QCSID IS NULL THEN INST_ID ELSE NULL END) MAX_INST_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SID ELSE NULL END) MAX_SESSION_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SESSION_SERIAL# ELSE NULL END) MAX_SESSION_SERIAL,  MAX(MAX_DOP) MAX_PX_DOP,  MAX(MAX_DOP_INSTANCES) MAX_PX_DOP_INSTANCES,  MAX(PX_IS_CROSS_INSTANCE) MAX_PX_IS_CROSS_INSTANCE,  SUM(SERVERS_REQUESTED) SUM_SERVERS_REQUESTED,	SUM(SERVERS_ALLOCATED) SUM_SERVERS_ALLOCATED,  COUNT(DISTINCT INST_ID) DIST_INST_COUNT,  COUNT(DISTINCT PX_SERVER_GROUP) DIST_PX_GROUP_COUNT,  COUNT(DISTINCT PX_SERVER_SET) DIST_PX_SET_COUNT,  MAX(SQL_PLAN_HASH_VALUE) MAX_PLAN_HASH_VALUE,	MAX(SQL_FULL_PLAN_HASH_VALUE) MAX_FULL_PLAN_HASH_VALUE,  MAX(USERID) MAX_USERID,  MAX(PROGRAM) MAX_PROGRAM,  MAX(USERNAME) MAX_USERNAME,  MAX(MODULE) MAX_MODULE,  MAX(ACTION) MAX_ACTION,  MAX(SERVICE_NAME) MAX_SERVICE_NAME,  MAX(CLIENT_IDENTIFIER) MAX_CLIENT_ID,	MAX(CLIENT_INFO) MAX_CLIENT_INFO,  MAX(ERROR_NUMBER) MAX_ERROR_NUMBER,	MAX(ERROR_FACILITY) MAX_ERROR_FACILITY,  MAX(ERROR_MESSAGE) MAX_ERROR_MESSAGE,	MAX(NVL2(PX_QCSID,  HAS_OTHER_XML,  NULL)) QC_HAS_OTHER_XML,  MAX(HAS_BINDS_XML) QC_HAS_BINDS_XML,  MAX(PL_OID) MAX_PL_OID,  MAX(PL_PROGID) MAX_PL_PROGID,  MAX(PL_ENTRY_OID) MAX_PL_ENTRY_OID,  MAX(PL_ENTRY_PROGID) MAX_PL_ENTRY_PROGID,  MAX(SQL_ID) MAX_SQL_ID,  MAX(SQL_EXEC_START) MAX_SQL_EXEC_START,  MAX(SQL_EXEC_ID) MAX_SQL_EXEC_ID,  MAX(LAST_REFRESH_TIME) MAX_LAST_REFRESH_TIME,	MAX(STATUS) MAX_STATUS,  SUM(REFRESH_COUNT) SUM_REFRESH_COUNT,	MIN(FIRST_REFRESH_TIME) MIN_FIRST_REFRESH_TIME,  MAX(DBOP_NAME) MAX_DBOP_NAME,	MAX(DBOP_EXEC_ID) MAX_DBOP_EXEC_ID,  CASE WHEN :B13 = 0 THEN NULL ELSE MAX(SQL_TEXT) END SQLMON_TEXT,  SUM(ELAPSED_TIME) SUM_ELAPSED_TIME,  MAX(ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(QUEUING_TIME) MAX_QUEUING_TIME,  SUM(CPU_TIME) SUM_CPU_TIME,  SUM(USER_IO_WAIT_TIME) SUM_USER_IO_WAIT_TIME,  SUM(APPLICATION_WAIT_TIME) SUM_APPLICATION_WAIT_TIME,  SUM(CONCURRENCY_WAIT_TIME) SUM_CONCURRENCY_WAIT_TIME,	SUM(CLUSTER_WAIT_TIME) SUM_CLUSTER_WAIT_TIME,  SUM(PLSQL_EXEC_TIME) SUM_PLSQL_EXEC_TIME,  SUM(JAVA_EXEC_TIME) SUM_JAVA_EXEC_TIME,  SUM(OTHER_WAIT_TIME) SUM_OTHER_WAIT_TIME,  SUM(FETCHES) SUM_FETCHES,  SUM(BUFFER_GETS) SUM_BUFFER_GETS,  SUM(READ_REQS) SUM_READ_REQS,  SUM(READ_BYTES) SUM_READ_BYTES,  SUM(WRITE_REQS) SUM_WRITE_REQS,  SUM(WRITE_BYTES) SUM_WRITE_BYTES,	NVL(SUM(READ_BYTES),  0) + NVL(SUM(WRITE_BYTES),  0) SUM_IO_BYTES,  SUM(IO_INTER_BYTES) SUM_IO_INTER_BYTES,  SUM(IO_UNC_BYTES) S
UM_IO_UNC_BYTES,  SUM(IO_ELIG_BYTES) SUM_IO_ELIG_BYTES,  SUM(IO_RET_BYTES) SUM_IO_RET_BYTES,  MAX(RM_INFO) AGG_RM_INFO,  MAX(CON_NAME) MAX_CON_NAME,  MAX(CON_ID) MAX_CON_ID FROM MONITOR_DATA) MD),  ASH_DATA AS (SELECT AD0.INST_ID,	AD0.SESSION_ID,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.ACTIVITY_BUCKET_NUM,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.SQL,  AD0.TOP_LEVEL_SQL_ID,  AD0.DBOP_NAME,  AD0.IS_MONITORED_SQL,  AD0.IS_PX_SLAVE,  AD0.BUCKET_ACTIVITY_START,  AD0.ACTIVITY_START,	AD0.BUCKET_ACTIVITY_END,  AD0.ACTIVITY_END,  AD0.ACTIVITY_COUNT,  AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.IMQ_COUNT,  AD0.WAIT_COUNT,  AD0.CPU_COUNT,  AD0.OTHER_SQL_COUNT,  AD0.PX_SERVER_SET,	AD0.PX_DFO_ACTIVITY_COUNT,  AD0.DFO_MOST_ACTIVE_IID,  AD0.DFO_MOST_ACTIVE_SID,	(CASE WHEN AD0.DFO_MOST_ACTIVE_IID = AD0.INST_ID AND AD0.DFO_MOST_ACTIVE_SID = AD0.SESSION_ID AND (((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &gt;= AD0.PX_DOP * 1.05) OR ((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &lt;= AD0.PX_DOP *0.95)) AND (AD0.DFO_DURATION * 100) &gt; :B32 THEN AD0.ACTIVITY_COUNT ELSE NULL END) DFO_MOST_ACTIVE_COUNT,	AD0.BUCKET_DISTINCT_SAMPLES,  AD0.SQL_BUCKET_DISTINCT_SAMPLES,	CASE WHEN AD0.PX_SERVER_GROUP IS NULL AND AD0.IS_PX_SLAVE = 1 THEN 1 ELSE AD0.PX_SERVER_GROUP END PX_SERVER_GROUP,  AD0.PX_STEP_ID,  AD0.PX_DFO_PAIR_TYPE,  AD0.PX_DFO_PAIR_ID,  AD0.PX_STEP_ARG,  AD0.PX_DOP,	CASE WHEN AD0.PX_DOP IS NOT NULL AND AD0.PX_DOP &lt;&gt; AD0.PX_MIN_DOP AND AD0.PX_MIN_DOP != 0 THEN PX_MIN_DOP ELSE NULL END PX_MIN_DOP FROM (SELECT /*+ use_hash(ash) leading(mo) */ ASH.INST_ID,  ASH.IS_PX_SLAVE,  ASH.SESSION_ID,	ASH.PLAN_LINE_ID,  ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,  ASH.ACTIVITY_BUCKET_NUM,  ASH.PLAN_ACTIVITY_BUCKET_NUM,  ASH.SQL,  ASH.TOP_LEVEL_SQL_ID,  ASH.DBOP_NAME,  ASH.IS_MONITORED_SQL,  ASH.BUCKET_ACTIVITY_START,	ASH.ACTIVITY_START,  ASH.BUCKET_ACTIVITY_END,  ASH.ACTIVITY_END,  ASH.ACTIVITY_COUNT,  ASH.ACTIVITY_TYPE,  ASH.OTHER_SQL_ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  MO.PX_SERVER_SET,  ASH.PX_DFO_ACTIVITY_COUNT,	TRUNC(ASH.MOST_ACTIVE_IN_DFO / 10000000000) DFO_MOST_ACTIVE_COUNT,  MOD(TRUNC(ASH.MOST_ACTIVE_IN_DFO / 1000000),  10000) DFO_MOST_ACTIVE_IID,  MOD(ASH.MOST_ACTIVE_IN_DFO,  1000000) DFO_MOST_ACTIVE_SID,  ASH.DFO_DURATION,  ASH.BUCKET_DISTINCT_SAMPLES,  ASH.SQL_BUCKET_DISTINCT_SAMPLES,  MO.PX_SERVER_GROUP,  ASH.PX_STEP_ID,  ASH.PX_DFO_PAIR_TYPE,  ASH.PX_DFO_PAIR_ID,	ASH.PX_STEP_ARG,  ASH.PX_DOP,  ASH.PX_MIN_DOP FROM (SELECT /*+ no_merge */ MD.INST_ID,	MD.SID,  MD.SESSION_SERIAL#,  MD.PX_SERVER_SET,  MD.PX_SERVER_GROUP FROM MONITOR_DATA MD WHERE MD.SID IS NOT NULL OR :B31 = 1) MO,  (SELECT /*+ no_merge */ GVTF.INST_ID,  GVTF.GLOBAL_SAMPLE_ID,  GVTF.IS_PX_SLAVE,  GVTF.SESSION_ID,	GVTF.PLAN_LINE_ID,  GVTF.PLSQL_OBJECT_ID,  GVTF.PLSQL_SUBPROGRAM_ID,  GVTF.ACTIVITY_BUCKET_NUM,  GVTF.PLAN_ACTIVITY_BUCKET_NUM,  GVTF.SQL,  GVTF.TOP_LEVEL_SQL_ID,  GVTF.DBOP_NAME,  GVTF.IS_MONITORED_SQL,  GVTF.BUCKET_ACTIVITY_START,  GVTF.ACTIVITY_START,	GVTF.BUCKET_ACTIVITY_END,  GVTF.ACTIVITY_END,  GVTF.ACTIVITY_COUNT,  GVTF.ACTIVITY_TYPE,  GVTF.OTHER_SQL_ACTIVITY_TYPE,  GVTF.EVENT_NAME,  GVTF.IMQ_COUNT,  GVTF.WAIT_COUNT,  GVTF.CPU_COUNT,  GVTF.OTHER_SQL_COUNT,  MAX(GVTF.PER_SERVER_DFO_COUNT * 10000000000 + GVTF.INST_ID * 1000000 + GVTF.SESSION_ID) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID) MOST_ACTIVE_IN_DFO,  SUM(GVTF.ACTIVITY_COUNT) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID) PX_DFO_ACTIVITY_COUNT,  GVTF.DFO_DURATION,  GVTF.PX_STEP_ID,	GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID,  GVTF.PX_STEP_ARG,  GVTF.PX_DOP,  GVTF.PX_MIN_DOP,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.ACTIVITY_BUCKET_NUM) BUCKET_DISTINCT_SAMPLES,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.SQL,	GVTF.ACTIVITY_BUCKET_NUM) SQL_BUCKET_DISTINCT_SAMPLES FROM TABLE(SYS.GV$(CURSOR( (SELECT USERENV('INSTANCE') INST_ID,  ASH2.GLOBAL_SAMPLE_ID,  CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END ACTIVITY_BUCKET_NUM,  CASE WHEN :B29 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END PLAN_ACTIVITY_BUCKET_NUM,  ASH2.SQL,  ASH2.TOP_LEVEL_SQL_ID,  ASH2.DBOP_NAME,  ASH2.IS_MONITORED_SQL,  ASH2.PLAN_LINE_ID,  ASH2.PLSQL_OBJECT_ID,  ASH2.PLSQL_SUBPROGRAM_ID,  ASH2.ACTIVITY_TYPE,  ASH2.OTHER_SQL_ACTIVITY_TYPE,	ASH2.EVENT_NAME,  ASH2.IS_PX_SLAVE,  ASH2.SESSION_ID,  ASH2.PX_STEP_ID,  ASH2.PX_DFO_PAIR_TYPE,  ASH2.PX_DFO_PAIR_ID,  ASH2.PX_STEP_ARG,  CASE WHEN ASH2.PX_DFO_PAIR_ID IS NOT NULL THEN DECODE(ASH2.PX_DOP,  0,  :B28 ,  ASH2.PX_DOP) ELSE NULL END PX_DOP,  ASH2.PX_MIN_DOP,	:B20 + NUMTODSINTERVAL(:B26 * (ASH2.BUCKET_NUM-1),  'SECOND') BUCKET_ACTIVITY_START,  :B20 + NUMTODSINTERVAL( :B26 * ASH2.BUCKET_NUM - 1,  'SECOND') BUCKET_ACTIVITY_END,  ASH2.ACTIVITY_START,  ASH2.ACTIVITY_END,  ASH2.ACTIVITY_COUNT,  ASH2.IMQ_COUNT,  ASH2.WAIT_COUNT,  ASH2.CPU_COUNT,  ASH2.OTHER_SQL_COUNT,  SUM(ASH2.ACTIVITY_COUNT) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE,  DECODE(ASH2.PX_DFO_PAIR_ID,  NULL,  NULL,  ASH2.SESSION_ID)) PER_SERVER_DFO_COUNT,  CEIL((MAX(ASH2.MAX_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE) - MIN(ASH2.MIN_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE)) * 3600 * 24) DFO_DURATION FROM (SELECT ASH1.BUCKET_NUM,  ASH1.GLOBAL_SAMPLE_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.SESSION_ID,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG,  MAX(ASH1.SQL) SQL,  MAX(ASH1.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(ASH1.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(ASH1.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MIN(SAMPLE_DATE) MIN_SAMPLE_DATE,  MAX(SAMPLE_DATE) MAX_SAMPLE_DATE,  MAX(ASH1.IS_PX_SLAVE) IS_PX_SLAVE,  MAX(ASH1.PX_DOP) PX_DOP,	MIN(ASH1.PX_DOP) PX_MIN_DOP,  MIN(ASH1.SAMPLE_DATE) ACTIVITY_START,  MAX(ASH1.SAMPLE_DATE) ACTIVITY_END,  COUNT(ASH1.SQL) ACTIVITY_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME = 'in memory' THEN 1 ELSE NULL END) IMQ_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE != 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' AND ASH1.ACTIVITY_TYPE != 'Cpu' THEN 1 ELSE NULL END) WAIT_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME IS NULL THEN 1 ELSE NULL END) CPU_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' THEN 1 ELSE NULL END) OTHER_SQL_COUNT,  MAX(ASH1.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(ASH1.DBOP_NAME) DBOP_NAME FROM ( SELECT (CASE WHEN :B27 &gt; 1 THEN (TRUNC(DELTA_TIME_SECONDS/ :B26 ) + 1) ELSE 1 END) BUCKET_NUM,  ASH00.SQL,  ASH00.SAMPLE_DATE,  NVL2(DUP.C2,  TRUNC(DELTA_TIME_SECONDS/ (:B25 )) + 1,  NULL) GLOBAL_SAMPLE_ID,  NVL2(DUP.C2,  NULL,	ASH00.IS_MONITORED_SQL) IS_MONITORED_SQL,  NVL2(DUP.C2,  NULL,	ASH00.IN_INMEMORY_QUERY) IN_INMEMORY_QUERY,  NVL2(DUP.C2,  NULL,  ASH00.WAIT_CLASS) WAIT_CLASS,  NVL2(DUP.C2,  NULL,  ASH00.ACTIVITY_TYPE) ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.OTHER_SQL_ACTIVITY_TYPE) OTHER_SQL_ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,  ASH00.EVENT_NAME) EVENT_NAME,  NVL2(DUP.C2,  NULL,  ASH00.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  NVL2(DUP.C2,  NULL,  ASH00.DBOP_NAME) DBOP_NAME,  NVL2(DUP.C2,  NULL,  ASH00.IS_PX_SLAVE) IS_PX_SLAVE,  NVL2(DUP.C2,  NULL,  ASH00.SESSION_ID) SESSION_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_OBJECT_ID) PLSQL_OBJECT_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_SUBPROGRAM_ID) PLSQL_SUBPROGRAM_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLAN_LINE_ID) PLAN_LINE_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ID) PX_STEP_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ARG) PX_STEP_ARG,  NVL2(DUP.C2,  NULL,  ASH00.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  NVL2(DUP.C2,  NULL,	ASH00.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.PX_DOP) PX_DOP FROM (SELECT 1 C1,  NULL C2 FROM V$DUAL UNI
ON ALL SELECT 1 C1,  1 C2 FROM V$DUAL) DUP,  (SELECT /*+ no_merge */ 1 C1,  ASH000.SAMPLE_DATE,  ASH000.IS_MONITORED_SQL,  ((EXTRACT(SECOND FROM(DELTA_TIME)) + EXTRACT(MINUTE FROM(DELTA_TIME)) * 60 + EXTRACT(HOUR FROM(DELTA_TIME)) * 3600 + EXTRACT(DAY FROM(DELTA_TIME)) * 86400)) DELTA_TIME_SECONDS,  ASH000.IN_INMEMORY_QUERY,	ASH000.WAIT_CLASS,  DECODE(ASH000.IS_MONITORED_SQL,  1,  NVL(ASH000.WAIT_CLASS,  'Cpu'),  DECODE(SQL_ID,  NULL,  'Non SQL',  'Other SQL Execution')) ACTIVITY_TYPE,  NVL(ASH000.WAIT_CLASS,  'Cpu') OTHER_SQL_ACTIVITY_TYPE,  DECODE(:B24 ,  1,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 THEN NVL(ASH000.EVENT,  DECODE(ASH000.IN_INMEMORY_QUERY,  'Y',  'in memory',  ASH000.EVENT)) WHEN ASH000.SQL_ID IS NOT NULL THEN 'sql_id: ' || ASH000.SQL_ID WHEN ASH000.CALL_NAME IS NOT NULL THEN 'call: ' || ASH000.CALL_NAME ELSE 'anonymous: '|| ASH000.EVENT END,	NULL) EVENT_NAME,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 AND (NVL(ASH000.SQL_ID,  :B9 ) = :B9 OR NVL(ASH000.DBOP_NAME,	:B6 ) = :B6 ) THEN 'this' WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.SQL_ID IS NOT NULL AND ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID THEN ASH000.TOP_LEVEL_SQL_ID WHEN ASH000.SQL_ID IS NOT NULL THEN ASH000.SQL_ID ELSE NVL(CALL_NAME,  'anonymous') END SQL,  CASE WHEN ASH000.IS_PX_SLAVE = 0 AND (ASH000.SQL_ID IS NULL OR ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID) THEN ASH000.TOP_LEVEL_SQL_ID END TOP_LEVEL_SQL_ID,  ASH000.DBOP_NAME,  ASH000.IS_PX_SLAVE,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL != 1 THEN 65536 ELSE ASH000.SESSION_ID END SESSION_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_OBJECT_ID,  NULL) PLSQL_OBJECT_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_SUBPROGRAM_ID,  NULL) PLSQL_SUBPROGRAM_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.SQL_PLAN_LINE_ID,  NULL) PLAN_LINE_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ID,  NULL) PX_STEP_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL = 1 AND ASH000.PX_STEP_ID IN (1,  2,  3) THEN ASH000.PX_STEP_ARG ELSE NULL END PX_DFO_PAIR_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 0 OR ASH000.IS_MONITORED_SQL != 1 THEN NULL WHEN ASH000.PX_STEP_ID = 1 THEN 1 WHEN ASH000.PX_STEP_ID IN (2,  3) THEN 0 ELSE NULL END PX_DFO_PAIR_TYPE,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ARG,	NULL) PX_STEP_ARG,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_DOP,  NULL) PX_DOP FROM (SELECT ASH0.*,  CASE WHEN ASH0.IS_TARGET_SQL = 1 OR (ASH0.IS_PX_SLAVE = 1 AND ((NVL(ASH0.TOP_LEVEL_SQL_ID,	ASH0.SQL_ID) IS NOT NULL AND NVL(ASH0.TOP_LEVEL_SQL_ID,  ASH0.SQL_ID) = :B9 ) OR (SQL_ID IS NULL AND :B23 = 'Y'))) THEN 1 ELSE 0 END IS_MONITORED_SQL FROM (SELECT (CASE WHEN (ASH.SQL_ID = :B9 AND ASH.SQL_EXEC_ID = :B7 AND ASH.SQL_EXEC_START = :B8 ) THEN 1 ELSE 0 END) IS_TARGET_SQL,  ASH.SQL_ID,  ASH.SQL_PLAN_LINE_ID,	ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,	ASH.TOP_LEVEL_SQL_ID,  DECODE(ASH.SQL_ID,  NULL,  ASH.TOP_LEVEL_CALL_NAME,  NULL) CALL_NAME,  ASH.EVENT,  ASH.IN_INMEMORY_QUERY,  ASH.WAIT_CLASS,  ASH.SQL_EXEC_ID,  ASH.SQL_EXEC_START,  ASH.DBOP_NAME,  ASH.DBOP_EXEC_ID,  ASH.SESSION_ID,  ASH.SESSION_SERIAL#,  CASE WHEN QC_INSTANCE_ID IS NOT NULL AND (ASH.SESSION_ID != ASH.QC_SESSION_ID OR ASH.SESSION_SERIAL# != ASH.QC_SESSION_SERIAL# OR USERENV('instance') != ASH.QC_INSTANCE_ID) THEN 1 ELSE 0 END IS_PX_SLAVE,  SAMPLE_TIME - CAST(:B20 AS TIMESTAMP) DELTA_TIME,  CAST(FROM_TZ(ASH.SAMPLE_TIME,  DBTIMEZONE) AS DATE) SAMPLE_DATE,  TRUNC(MOD(PX_FLAGS/65536,  32)) PX_STEP_ID,  MOD(PX_FLAGS,  65536) PX_STEP_ARG,  TRUNC(PX_FLAGS/2097152) PX_DOP FROM V$ALL_ACTIVE_SESSION_HISTORY ASH WHERE ((ASH.SESSION_ID = :B19 AND ASH.SESSION_SERIAL# = :B18 AND USERENV('INSTANCE') = :B17 ) OR (ASH.QC_SESSION_ID IS NOT NULL AND ASH.QC_SESSION_ID = :B19 AND ASH.QC_SESSION_SERIAL# = :B18 AND ASH.QC_INSTANCE_ID = :B17 )) AND SAMPLE_TIME BETWEEN :B16 AND :B15 ) ASH0 WHERE (ASH0.SAMPLE_DATE BETWEEN :B20 + 1/24/3600 AND :B22 - 1/24/3600 OR (ASH0.SQL_ID = :B9 AND ASH0.SQL_EXEC_START = :B8 AND ASH0.SQL_EXEC_ID = :B7 ) OR (ASH0.DBOP_NAME = :B6 AND ASH0.DBOP_EXEC_ID = :B5 )) AND (:B21 IS NULL OR ASH0.SQL_PLAN_LINE_ID = :B21 ) AND (ASH0.IS_PX_SLAVE = 0 OR ASH0.SQL_ID IS NOT NULL)) ASH000 ) ASH00 WHERE ASH00.C1 = DUP.C1) ASH1 WHERE ASH1.BUCKET_NUM &gt; 0 AND ASH1.BUCKET_NUM &lt;= :B27 GROUP BY USERENV('INSTANCE'),  ASH1.GLOBAL_SAMPLE_ID,  ASH1.BUCKET_NUM,  ASH1.SESSION_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG) ASH2)))) GVTF WHERE GVTF.INST_ID BETWEEN :B11 AND :B10 ) ASH WHERE ASH.GLOBAL_SAMPLE_ID IS NULL AND ASH.SESSION_ID = MO.SID(+) AND ASH.INST_ID = MO.INST_ID(+)) AD0),  RESPONSE_TIME_DATA AS (SELECT ADH.BUCKET_NUM,  ADH.SQL_ROWNUM,  ADH.SQL,	ADH.TOP_LEVEL_SQL_ID,  ADH.DBOP_NAME,  ADH.PX_ID,  DECODE( ADH.PX_STEP_ID,  NULL,  NULL,  0,  NULL,  1,  'PX Server(s) - Executing Parent DFO',  2,  'PX Server(s) - Executing Child DFO',  3,	'PX Server(s) - Sampling Child DFO',  4,  'PX Server(s) - Joining Group',  5,  'QC - Scheduling Child DFO',  6,  'QC - Scheduling Parent DFO',	7,  'QC - Initializing Objects',  8,  'QC - Flushing Objects',	9,  'QC - Allocating Slaves',  10,  'QC - Initializing Granules',  11,	'PX Server(s) - Parsing Cursor',  12,  'PX Server(s) - Executing Cursor',  13,	'PX Server(s) - Preparing Transaction',  14,  'PX Server(s) - Joining Transaction',  15,  'PX Server(s) - Load Commit',  16,  'PX Server(s) - Aborting Transaction',  17,  'QC - Executing Child DFO',	18,  'QC - Executing Parent DFO',  'PX Step - ' || PX_STEP_ID) PX_STEP_ID,  ADH.PX_STEP_ARG,  ADH.PX_DFO_PAIR_ID,  ADH.PX_DOP,	ADH.PX_MIN_DOP,  ADH.DFO_MOST_ACTIVE_IID,  ADH.DFO_MOST_ACTIVE_SID,  ADH.DFO_MOST_ACTIVE_COUNT,  ADH.ACTIVITY_START,  ADH.ACTIVITY_END,  ADH.ACTIVITY_TYPE,  ADH.OTHER_SQL_ACTIVITY_TYPE,  ADH.EVENT_NAME,  ADH.PLAN_LINE_ID,  ADH.PLSQL_OBJECT_ID,  ADH.PLSQL_SUBPROGRAM_ID,  CASE WHEN PLSQL_ROWNUM = 1 AND ADH.PLSQL_OBJECT_ID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',	'.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = ADH.PLSQL_OBJECT_ID AND P.SUBPROGRAM_ID = ADH.PLSQL_SUBPROGRAM_ID),	'Unavailable') ELSE NULL END PLSQL_NAME,  ADH.ACTIVITY_COUNT,  ADH.BUCKET_ACTIVE_SECONDS,  ADH.BUCKET_IDLE_SECONDS,  (CASE WHEN ADH.IS_MONITORED_SQL = 0 THEN ADH.ACTIVE_SECONDS WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_CPU_HEIGHT &gt;= :B34 THEN DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  (ADH.DFO_PAIR_ACTIVITY_HEIGHT / ADH.DFO_PAIR_CPU_HEIGHT) * ADH.DFO_PAIR_TOTAL_SECONDS,  0) WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  (ADH.DFO_PAIR_ACTIVITY_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT))) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_ACTIVITY_HEIGHT) / ADH.PX_DOP ELSE ADH.ACTIVE_SECONDS END) RESP_TIME,  (CASE WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * (ADH.DFO_PAIR_IDLE_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT)) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_IDLE_HEIGHT) / ADH.PX_DOP ELSE 0 END) DFO_PAIR_IDLE_RESP_TIME,  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  ADH.DFO_PAIR_CPU_HEIGHT,	ADH.DFO_PAIR_IDLE_HEIGHT,  ADH.DFO_PAIR_TOTAL_HEIGHT,  ADH.DFO_PAIR_CPU_ACTIVITY,  ADH.DFO_PAIR_TOTAL_SECONDS FROM (SELECT ADH_1.*,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.PLSQL_OBJECT_ID,  ADH_1.PLSQL_SUBPROGRAM_ID ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) PLSQL_ROWNUM,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.SQL ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) SQL_ROWNUM,  (
CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP - ADH_1.DFO_PAIR_TOTAL_HEIGHT ELSE 0 END) DFO_PAIR_IDLE_HEIGHT,  (CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP ELSE ADH_1.DFO_PAIR_TOTAL_HEIGHT END) DFO_PAIR_TOTAL_HEIGHT_ADJ FROM (SELECT ADH_0.*,  (CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_TOTAL_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_TOTAL_HEIGHT,	(CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_CPU_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_CPU_HEIGHT,  (CASE WHEN ADH_0.PX_DFO_PAIR_ID IS NOT NULL AND ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.ACTIVITY_COUNT * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_ACTIVITY_HEIGHT FROM (SELECT AD3.*,  (SUM(DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  0,	AD3.ACTIVE_SECONDS)) OVER(PARTITION BY DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.BUCKET_NUM),  DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.PX_STEP_ARG))) DFO_PAIR_TOTAL_SECONDS FROM (SELECT AD2.*,  CASE WHEN AD2.IS_MONITORED_SQL = 0 THEN SQL_BUCKET_DISTINCT_SAMPLES * :B25 WHEN AD2.PX_ID IS NULL THEN AD2.ACTIVITY_COUNT * :B25 WHEN AD2.BUCKET_PARALLEL_MON_ACTIVITY &gt; 0 THEN (AD2.ACTIVITY_COUNT * AD2.BUCKET_PARALLEL_MON_SECONDS) / AD2.BUCKET_PARALLEL_MON_ACTIVITY ELSE 0 END ACTIVE_SECONDS,  CASE WHEN AD2.BUCKET_INTERVAL &gt; BUCKET_ACTIVE_SECONDS THEN AD2.BUCKET_INTERVAL - BUCKET_ACTIVE_SECONDS ELSE 0 END BUCKET_IDLE_SECONDS FROM (SELECT AD1.*,  (AD1.BUCKET_SERIAL_MON_ACTIVITY * :B25 ) BUCKET_SERIAL_MON_SECONDS,	(AD1.BUCKET_TOTAL_MON_ACTIVITY - AD1.BUCKET_SERIAL_MON_ACTIVITY) BUCKET_PARALLEL_MON_ACTIVITY,	(AD1.BUCKET_ACTIVE_SECONDS - (AD1.BUCKET_OTHER_ACTIVITY + AD1.BUCKET_SERIAL_MON_ACTIVITY) * :B25 ) BUCKET_PARALLEL_MON_SECONDS,  (AD1.BUCKET_OTHER_ACTIVITY * :B25 ) BUCKET_OTHER_SECONDS,  DECODE(AD1.PX_DFO_PAIR_ID,	NULL,  NULL,  SUM(AD1.ACTIVITY_COUNT) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_TOTAL_ACTIVITY,  DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  SUM(DECODE(AD1.ACTIVITY_TYPE,  'Cpu',  AD1.ACTIVITY_COUNT,  0)) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_CPU_ACTIVITY FROM (SELECT AD01.*,  NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  1,	AD01.ACTIVITY_COUNT,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0) BUCKET_TOTAL_MON_ACTIVITY,  (NVL(SUM(CASE WHEN AD01.IS_MONITORED_SQL = 1 AND AD01.PX_ID IS NULL THEN AD01.ACTIVITY_COUNT ELSE NULL END) OVER(PARTITION BY AD01.BUCKET_NUM),  0)) BUCKET_SERIAL_MON_ACTIVITY,  (NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  0,  AD01.SQL_BUCKET_DISTINCT_SAMPLES,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0)) BUCKET_OTHER_ACTIVITY,  (NVL(AD01.BUCKET_DISTINCT_SAMPLES,  0) * :B25 ) BUCKET_ACTIVE_SECONDS,  DECODE(AD01.BUCKET_NUM,  :B27 ,  MOD(:B32 ,  :B26 ),  :B26 ) BUCKET_INTERVAL FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.PX_ID,	AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.PLAN_LINE_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,	MAX(AD0.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(AD0.SQL) SQL,	MAX(AD0.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(AD0.DBOP_NAME) DBOP_NAME,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,  NULL,  NULL,  AD0.DFO_MOST_ACTIVE_IID)) DFO_MOST_ACTIVE_IID,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,	NULL,  NULL,  AD0.DFO_MOST_ACTIVE_SID)) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT,  MAX(PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MAX(AD0.PX_DOP) PX_DOP,  MIN(AD0.PX_MIN_DOP) PX_MIN_DOP,  MAX(AD0.BUCKET_DISTINCT_SAMPLES) BUCKET_DISTINCT_SAMPLES,	MAX(AD0.SQL_BUCKET_DISTINCT_SAMPLES) SQL_BUCKET_DISTINCT_SAMPLES FROM (SELECT AD00.*,  (CASE WHEN AD00.IS_MONITORED_SQL = 1 AND (AD00.SESSION_ID != :B19 OR AD00.INST_ID != :B17 ) THEN AD00.PX_SERVER_GROUP END) PX_ID FROM ASH_DATA AD00 WHERE :B33 = 1 ) AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.PX_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG ) AD01) AD1) AD2) AD3) ADH_0) ADH_1) ADH) SELECT /*+ no_monitor no_xml_query_rewrite
		 opt_param('_gby_hash_aggregation_enabled',  'false') */ XMLELEMENT( &quot;sql_monitor_report&quot;,  XMLATTRIBUTES(:B59 AS &quot;version&quot;,  TO_CHAR(:B58 ,  :B12 ) AS &quot;sysdate&quot;),  XMLELEMENT( &quot;report_parameters&quot;,  NULL,  CASE WHEN :B57 IS NOT NULL THEN XMLFOREST( :B57 AS &quot;dbop_name&quot;,  :B56 AS &quot;dbop_exec_id&quot;) ELSE XMLFOREST( :B55 AS
&quot;sql_id&quot;,  :B54 AS &quot;sql_exec_id&quot;) END,  XMLFOREST( :B53 AS &quot;session_id&quot;,	:B52 AS &quot;session_serial&quot;,  TO_CHAR(:B51 ,  :B12 ) AS &quot;sql_exec_start&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR(:B50 ,  :B12 ) AS &quot;interval_start&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;interval_end&quot;,  DECODE(:B49 ,  'Y',	:B48 ,	NULL) AS &quot;auto_refresh&quot;,  :B47 AS &quot;base_path&quot;),  CASE WHEN :B23 = 'Y' AND :B46 IS NOT NULL AND NOT (:B4 = 1 AND :B3 IS NULL AND :B2 IS NULL AND :B1 IS NULL) THEN XMLELEMENT( &quot;parallel_filter&quot;,	NULL,  XMLFOREST( DECODE(:B4 ,	1,  'yes',  'no') AS &quot;qc&quot;,  :B3 AS &quot;server_group&quot;,	:B2 AS &quot;server_set&quot;,	:B1 AS &quot;server_number&quot;)) ELSE NULL END),  CASE WHEN :B14 = 1 THEN XMLELEMENT( &quot;derived_parameters_testing&quot;,  NULL,	XMLFOREST(:B11 AS &quot;instance_id_low&quot;,	:B10 AS &quot;instance_id_high&quot;,  :B26 AS &quot;bucket_interval_sec&quot;,  :B32 AS &quot;interval_second&quot;,  :B27 AS &quot;bucket_calc_count&quot;,  :B45 AS &quot;bucket_calc_max_count&quot;,  :B13 AS &quot;sel_sqltext&quot;)) ELSE NULL END,  (SELECT XMLCONCAT( CASE WHEN :B46 IS NULL AND :B67 IS NULL THEN XMLELEMENT( &quot;target&quot;,  XMLATTRIBUTES(:B17 AS &quot;instance_id&quot;,  :B19 AS &quot;session_id&quot;,  :B18 AS &quot;session_serial&quot;,  NVL2(:B6 ,	NULL,  :B9 ) AS &quot;sql_id&quot;,  NVL2(:B6 ,  NULL,	TO_CHAR(:B8 ,  :B12 )) AS &quot;sql_exec_start&quot;,  NVL2(:B6 ,  NULL,  :B7 ) AS &quot;sql_exec_id&quot;,  NVL2(:B6 ,  :B6 ,	NULL) AS &quot;dbop_name&quot;,  NVL2(:B6 ,  :B5 ,  NULL) AS &quot;dbop_exec_id&quot;,	NVL2(:B6 ,  TO_CHAR(:B8 ,  :B12 ),  NULL) AS &quot;dbop_exec_start&quot;,  NVL2(:B6 ,  NULL,  MAX_PLAN_HASH_VALUE) AS &quot;sql_plan_hash&quot;,  NVL2(:B6 ,  NULL,  MAX_FULL_PLAN_HASH_VALUE) AS &quot;sql_full_plan_hash&quot;,  MAGG.DB_UNIQUE_NAME AS &quot;db_unique_name&quot;,  MAGG.PLATFORM_NAME AS &quot;db_platform_name&quot;,  MAGG.HOST_NAME AS &quot;report_host_name&quot;),  NVL2(SUM_SERVERS_REQUESTED,  XMLELEMENT( &quot;servers_requested&quot;,  NULL,  SUM_SERVERS_REQUESTED),  NULL),  NVL2(SUM_SERVERS_ALLOCATED,  XMLELEMENT( &quot;servers_allocated&quot;,	NULL,  SUM_SERVERS_ALLOCATED),	NULL),	NVL2(MAX_USERID,  XMLELEMENT( &quot;user_id&quot;,  NULL,  MAX_USERID),  NULL),  NVL2(MAX_USERNAME,  XMLELEMENT( &quot;user&quot;,  NULL,  MAX_USERNAME),  NULL),  NVL2(MAX_CON_ID,  XMLELEMENT( &quot;con_id&quot;,  NULL,  MAX_CON_ID),  NULL),  NVL2(MAX_CON_NAME,  XMLELEMENT( &quot;con_name&quot;,  NULL,  MAX_CON_NAME),  NULL),  NVL2(MAX_PROGRAM,  XMLELEMENT( &quot;program&quot;,  NULL,  MAX_PROGRAM),  NULL),  NVL2(MAX_MODULE,  XMLELEMENT( &quot;module&quot;,  NULL,  MAX_MODULE),  NULL),  NVL2(MAX_ACTION,  XMLELEMENT( &quot;action&quot;,  NULL,  MAX_ACTION),  NULL),  NVL2(MAX_SERVICE_NAME,  XMLELEMENT( &quot;service&quot;,  NULL,  MAX_SERVICE_NAME),  NULL),  NVL2(MAX_CLIENT_ID,  XMLELEMENT( &quot;client_id&quot;,  NULL,  MAX_CLIENT_ID),  NULL),  NVL2(MAX_CLIENT_INFO,  XMLELEMENT( &quot;client_info&quot;,  NULL,  MAX_CLIENT_INFO),  NULL),  NVL2(MAX_PL_ENTRY_OID,  XMLELEMENT( &quot;plsql_entry_object_id&quot;,  NULL,	MAX_PL_ENTRY_OID),  NULL),  NVL2(MAX_PL_ENTRY_PROGID,  XMLELEMENT( &quot;plsql_entry_subprogram_id&quot;,  NULL,  MAX_PL_ENTRY_PROGID),  NULL),  NVL2(MAX_PL_ENTRY_NAME,  XMLELEMENT( &quot;plsql_entry_name&quot;,  NULL,  MAX_PL_ENTRY_NAME),  NULL),  NVL2(MAX_PL_OID,  XMLELEMENT( &quot;plsql_object_id&quot;,  NULL,  MAX_PL_OID),  NULL),  NVL2(MAX_PL_PROGID,  XMLELEMENT( &quot;plsql_subprogram_id&quot;,  NULL,  MAX_PL_PROGID),  NULL),  NVL2(MAX_PL_NAME,	XMLELEMENT( &quot;plsql_name&quot;,  NULL,  MAX_PL_NAME),  NULL),  CASE WHEN (:B13 = 0 OR :B6 IS NOT NULL) THEN NULL ELSE XMLELEMENT( &quot;sql_fulltext&quot;,  XMLATTRIBUTES( NVL2(:B65 ,  'Y',  :B66 ) AS &quot;is_full&quot;),  NVL2(:B65 ,  :B65 ,  SQLMON_TEXT)) END,  XMLELEMENT( &quot;status&quot;,  NULL,  MAX_STATUS),  XMLELEMENT( &quot;refresh_count&quot;,  NULL,  SUM_REFRESH_COUNT),  XMLELEMENT( &quot;first_refresh_time&quot;,  NULL,  TO_CHAR(MIN_FIRST_REFRESH_TIME,  :B12 )),  XMLELEMENT( &quot;last_refresh_time&quot;,  NULL,  TO_CHAR(:B58 ,  :B12 )),  XMLELEMENT( &quot;duration&quot;,  NULL,  GREATEST(:B64 ,  LEAST(MAX_ELAPSED_TIME/1000000,  1),  CEIL(MAX_QUEUING_TIME/1000000))),  DECODE(MAX_RM_INFO,  '00/00/0000 00:00:00',  NULL,  XMLTYPE(SUBSTR(MAX_RM_INFO,	20))),	CASE WHEN (:B62 = 'Y') THEN XMLELEMENT( &quot;adaptive_plan&quot;,  XMLATTRIBUTES(:B63 AS &quot;is_final&quot;),  :B62 ) ELSE NULL END ) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  DECODE(NVL(SUM_ELAPSED_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  SUM_ELAPSED_TIME)),  DECODE(NVL(MAX_QUEUING_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX_QUEUING_TIME)),  DECODE(NVL(SUM_CPU_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  SUM_CPU_TIME)),  DECODE(NVL(SUM_USER_IO_WAIT_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  SUM_USER_IO_WAIT_TIME)),  DECODE(NVL(SUM_APPLICATION_WAIT_TIME,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  SUM_APPLICATION_WAIT_TIME)),  DECODE(NVL(SUM_CONCURRENCY_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  SUM_CONCURRENCY_WAIT_TIME)),  DECODE(NVL(SUM_CLUSTER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  SUM_CLUSTER_WAIT_TIME)),	DECODE(NVL(SUM_PLSQL_EXEC_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  SUM_PLSQL_EXEC_TIME)),  DECODE(NVL(SUM_JAVA_EXEC_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  SUM_JAVA_EXEC_TIME)),  DECODE(NVL(SUM_OTHER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  SUM_OTHER_WAIT_TIME)),  DECODE(NVL(SUM_FETCHES,  0),	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  SUM_FETCHES)),  DECODE(NVL(SUM_BUFFER_GETS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  SUM_BUFFER_GETS)),  DECODE(NVL(SUM_READ_REQS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  SUM_WRITE_REQS)),  DECODE(NVL(SUM_READ_REQS,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_READ_BYTES,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	SUM_READ_BYTES)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),	SUM_WRITE_REQS)),  DECODE(NVL(SUM_WRITE_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  SUM_WRITE_BYTES)),  DECODE(NVL(SUM_IO_UNC_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  SUM_IO_UNC_BYTES)),  DECODE(NVL(SUM_IO_ELIG_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  SUM_IO_ELIG_BYTES)),  DECODE(NVL(SUM_IO_RET_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  SUM_IO_RET_BYTES)),  CASE WHEN SUM_IO_INTER_BYTES IS NULL OR SUM_IO_BYTES = 0 OR SUM_IO_INTER_BYTES = SUM_IO_BYTES OR NVL(SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE
 XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(SUM_IO_BYTES / DECODE(SUM_IO_INTER_BYTES,	0,  1,	SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(SUM_IO_ELIG_BYTES,  0) = 0 OR SUM_IO_BYTES = 0 OR SUM_IO_UNC_BYTES = SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST(SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES) - SUM_IO_RET_BYTES) / SUM_IO_ELIG_BYTES,  2))) END),	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN SUM(ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME)) ELSE NULL END FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) ELSE NULL END,  NVL2(MAX_ERROR_NUMBER,  XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MAX_ERROR_NUMBER AS &quot;number&quot;,  MAX_ERROR_FACILITY AS &quot;facility&quot;),  MAX_ERROR_MESSAGE),  NULL),  CASE WHEN :B61 = 1 AND MAGG.QC_HAS_BINDS_XML = 'Y' THEN (SELECT XMLTYPE(BINDS_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = :B17 AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END,  CASE WHEN :B60 = 1 AND MAGG.QC_HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = MAGG.MAX_INST_ID AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) FROM MONITOR_AGG MAGG),  CASE WHEN :B44 = 1 THEN (SELECT CASE WHEN AT.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( :B41 AS
&quot;ash_missing_seconds&quot;,  TO_CHAR(AT.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,	TO_CHAR(AT.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AT.ACTIVITY_END - AT.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  AT.ACTIVITY_COUNT AS &quot;count&quot;,  AT.IMQ_COUNT AS &quot;imq_count&quot;,  AT.WAIT_COUNT AS &quot;wait_count&quot;,  AT.CPU_COUNT AS &quot;cpu_count&quot;,  DECODE(AT.OTHER_SQL_COUNT,  0,  NULL,  AT.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AT.ACTIVITY_TOTAL,	AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,	SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,	SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) AT,  (SELECT CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND(( :B22 - :B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  SUM(ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(IMQ_COUNT) IMQ_COUNT,  SUM(WAIT_COUNT) WAIT_COUNT,  SUM(CPU_COUNT) CPU_COUNT,  SUM(OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),	AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,	MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,	MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN AH.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  :B41 AS &quot;ash_missing_seconds&quot;,  TO_CHAR(AH.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(AH.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AH.ACTIVITY_END - AH.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  :B25 AS &quot;sample_interval&quot;,  :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,	ROUND((:B22 - :B20 ) *3600*24) + 1 AS &quot;bucket_duration&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B34 AS &quot;total_cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD2.ACTIVITY_START) ACTIVITY_START,	MAX(AD2.ACTIVITY_END) ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET_XML) ORDER BY AD2.BUCKET_NUM) GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  MAX(AD1.BUCKET_IDLE_SECONDS) BUCKET_IDLE_SECONDS,	XMLAGG( XMLCONCAT( CASE WHEN AD1.DFO_PAIR_IDLE_RESP_TIME != 0 AND DFO_PAIR_ROWNUM = 1 THEN XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( 'Parallel Skew' AS &quot;class&quot;,  AD1.PX_STEP_ARG AS &quot;line&quot;,  AD1.PX_ID AS &quot;px&quot;,	ROUND(AD1.DFO_PAIR_IDLE_RESP_TIME,  2) AS &quot;rt&quot;),  0) ELSE NULL END,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( NVL(AD1.OTHER_SQL,  AD1.RPI) AS &quot;sql&quot;,  AD1.NON_SQL AS &quot;non_sql&quot;,	AD1.CLASS AS &quot;class&quot;,  AD1.OTHER_SQL_CLASS AS &quot;other_sql_class&quot;,  AD1.EVENT AS &quot;event&quot;,  AD1.PLAN_LINE_ID AS &quot;line&quot;,  NVL2(AD1.PLSQL_OBJECT_ID,  AD1.PLSQL_OBJECT_ID||'.'|| AD1.PLSQL_SUBPROGRAM_ID,  NULL) AS &quot;plsql_id&quot;,  AD1.PLSQL_NAME AS &quot;plsql_name&quot;,  CASE WHEN AD1.SQL_ROWNUM = 1 THEN AD1.TOP_LEVEL_SQL_ID END AS &quot;top_sql_id&quot;,	CASE WHEN AD1.DBOP_NAME IS NOT NULL THEN AD1.DBOP_NAME END AS &quot;dbop_name&quot;,  CASE WHEN AD1.DFO_MOST_ACTIVE_IID IS NOT NULL AND :B68 = 'Y' THEN AD1.DFO_MOST_ACTIVE_IID END AS &quot;skew_iid&quot;,  DECODE(AD1.DFO_MOST_ACTIVE_COUNT,  NULL, NULL,  AD1.DFO_MOST_ACTIVE_SID) AS &quot;skew_sid&quot;,  AD1.DFO_MOST_ACTIVE_COUNT AS &quot;skew_count&quot;,  DECODE(AD1.PX_DOP,  :B28 ,  NULL,  AD1.PX_DOP) AS &quot;dop&quot;,  DECODE(AD1.PX_DOP,  AD1.PX_MIN_DOP,	NULL,  AD1.PX_MIN_DOP) AS &quot;min_dop&quot;,	AD1.PX_ID AS &quot;px&quot;,  AD1.PX_STEP_ID AS &quot;step&quot;,  AD1.PX_STEP_ARG AS &quot;arg&quot;,	DECODE(AD1.ACTIVITY_COUNT,  AD1.RESP_TIME,  NULL,  ROUND(AD1.RESP_TIME,  2)) AS &quot;rt&quot;),  AD1.ACTIVITY_COUNT)) ORDER BY AD1.PX_STEP_ID,  AD1.PX_STEP_ARG,  AD1.DFO_PAIR_ROWNUM) ACTIVITY_BUCKET_XML FROM (SELECT AD01.*,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.ACTIVITY_TYPE END CLASS,	CASE WHEN (AD01.ACTIVITY_TYPE = 'Other SQL Execution' OR AD01.ACTIVITY_TYPE = 'Non SQL') THEN AD01.OTHER_SQL_ACTIVITY_TYPE END OTHER_SQL_CLASS,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.EVENT_NAME END EVENT,  CASE WHEN AD01.SQL IN ('this',  'anonymous') THEN NULL ELSE AD01.SQL END RPI,  DECODE(AD01.ACTIVITY_TYPE,  'Other SQL Execution',  SUBSTR(AD01.EVENT_NAME,	9),  NULL) OTHER_SQL,  DECODE(AD01.ACTIVITY_TYPE,  'Non SQL',  AD01.EVENT_NAME,  NULL) NON_SQL,  ROW_NUMBER() OVER(PARTITION BY AD01.BUCKET_NUM,  AD01.PX_DFO_PAIR_ID ORDER BY AD01.ACTIVITY_TYPE,  AD01.EVENT_NAME,  AD01.PLAN_LINE_ID) DFO_PAIR_ROWNUM FROM RESPONSE_TIME_DATA AD01) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,  CASE WHEN :B23 = 'Y' THEN (SELECT XMLELEMENT( &quot;parallel_info&quot;,  XMLATTRIBUTES( :B17 AS &quot;qc_instance_id&quot;,  MAX_PX_QCSID AS &quot;qc_session_id&quot;,  MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MAX_PX_DOP AS &quot;dop&quot;,  MAX_PX_DOP_INSTANCES AS &quot;max_dop_instances&quot;,  DIST_INST_COUNT AS &quot;inst_count&quot;,  DIST_PX_GROUP_COUNT AS &quot;serv
er_group_count&quot;,  DIST_PX_SET_COUNT AS &quot;server_set_count&quot;),  CASE WHEN :B70 = 1 THEN PX_SESSIONS ELSE NULL END,	CASE WHEN :B68 = 'Y' THEN DECODE(:B69 ,  1,  PX_INSTANCES,  NULL) ELSE NULL END) FROM (SELECT MAX_PX_QCSID,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,  DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,	(SELECT XMLELEMENT( &quot;sessions&quot;,  XMLATTRIBUTES(MAX(PX_SESSION.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_SESSION.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_SESSION.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_SESSION.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_SESSION.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,  MAX(PX_SESSION.MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_SESSION.MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PX_SESSION.MAX_BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_SESSION.MAX_ELAPSED_TIME) AS &quot;max_elapsed_time&quot;),  XMLAGG(PX_SESSION.PX_SESSION_XML ORDER BY PX_SERVER_GROUP NULLS FIRST,  PX_SERVER_SET,  PX_SERVER#)) FROM (SELECT PX_SERVER_GROUP,  PX_SERVER_SET,  PX_SERVER#,	MAX(PI.MAX_ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(PI.MAX_IO_REQS) MAX_IO_REQS,  MAX(PI.MAX_IO_BYTES) MAX_IO_BYTES,  MAX(PI.MAX_BUFFER_GETS) MAX_BUFFER_GETS,  SUM(PI.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,  SUM(PI.WAIT_COUNT) WAIT_COUNT,  SUM(PI.CPU_COUNT) CPU_COUNT,	SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  XMLELEMENT( &quot;session&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;,  PROCESS_NAME AS &quot;process_name&quot;,  SID AS &quot;session_id&quot;,  SESSION_SERIAL# AS &quot;session_serial&quot;,  PX_SERVER_GROUP AS &quot;server_group&quot;,  PX_SERVER_SET AS &quot;server_set&quot;,  PX_SERVER# AS &quot;server_num&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MAX(ELAPSED_TIME)),	NULL),	NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MAX(APPLICATION_WAIT_TIME)),  NULL),  NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),	MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),  XMLELEMENT(
&quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),  MAX(OTHER_WAIT_TIME)),  NULL),  NVL2(MAX(FETCHES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MAX(WRITE_BYTES)),	NULL),	NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),	MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),	ROUND(MAX(IO_BYTES) / DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,	ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES), 0),  NVL(MAX(IO_ELIG_BYTES), 0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN SUM(PI.ACTIVITY_COUNT) &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.OTHER_SQL_COUNT)AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),	XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,  PI.EVENT_NAME)) ELSE NULL END,  CASE WHEN :B60 = 1 AND PI.HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = PI.INST_ID AND MON.KEY = PI.KEY AND MON.SID = PI.SID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) PX_SESSION_XML FROM (SELECT MO.HAS_OTHER_XML,  MO.KEY,  MO.INST_ID,  DECODE(MO.PROCESS_NAME,  'ora',  'PX Coordinator',	MO.PROCESS_NAME) PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  MAX(MO.IO_REQS) MAX_IO_REQS,  MAX(MO.IO_BYTES) MAX_IO_BYTES,  MAX(MO.BUFFER_GETS) MAX_BUFFER_GETS,  MAX(MO.ELAPSED_TIME) MAX_ELAPSED_TIME,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.ACTIVITY_COUNT)) ACTIVITY_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.IMQ_COUNT)) IMQ_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.WAIT_COUNT)) WAIT_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.CPU_COUNT)) CPU_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.OTHER_SQL_COUNT)) OTHER_SQL_COUNT,	MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END,	MAX(DECODE(MO.ELAPSED_TIME,  0,  NULL,	MO.ELAPSED_TIME)) ELAPSED_TIME,  MAX(DECODE(MO.QUEUING_TIME,  0,  NULL,  MO.QUEUING_TIME)) QUEUING_TIME,  MAX(DECODE(MO.CPU_TIME,  0,  NULL,  CPU_TIME)) CPU_TIME,  MAX(DECODE(MO.FETCHES,  0,	NULL,  FETCHES)) FETCHES,  MAX(DECODE(MO.BUFFER_GETS,  0,  NULL,  MO.BUFFER_GETS)) BUFFER_GETS,  MAX(DECODE(MO.IO_INTER_BYTES,	0,  NULL,  MO.IO_INTER_BYTES)) IO_INTER_BYTES,	MAX(DECODE(MO.READ_REQS,  0,  NULL,  MO.READ_REQS)) READ_REQS,	MAX(DECODE(MO.READ_BYTES,  0,  NULL,  MO.READ_BYTES)) READ_BYTES,  MAX(DECODE(MO.WRITE_REQS,  0,  NULL,  MO.WRITE_REQS)) WRITE_REQS,  MAX(DECODE(MO.WRITE_BYTES,  0,  NULL,  MO.WRITE_BYTES)) WRITE_BYTES,  MAX(DECODE(MO.IO_BYTES,  0,  NULL,	MO.IO_BYTES)) IO_BYTES,  MAX(DECODE(MO.IO_UNC_BYTES,  0,  NULL,  MO.IO_UNC_BYTES)) IO_UNC_BYTES,  MAX(DECODE(MO.IO_ELIG_BYTES,	0,  NULL,  MO.IO_ELIG_BYTES)) IO_ELIG_BYTES,  MAX(DECODE(MO.IO_RET_BYTES,  0,  NULL,  MO.IO_RET_BYTES)) IO_RET_BYTES,  MAX(DECODE(MO.APPLICATION_WAIT_TIME,  0,  NULL,	MO.APPLICATION_WAIT_TIME)) APPLICATION_WAIT_TIME,  MAX(DECODE(MO.CONCURRENCY_WAIT_TIME,  0,  NULL,  MO.CONCURRENCY_WAIT_TIME)) CONCURRENCY_WAIT_TIME,  MAX(DECODE(MO.CLUSTER_WAIT_TIME,  0,  NULL,  MO.CLUSTER_WAIT_TIME)) CLUSTER_WAIT_TIME,  MAX(DECODE(MO.USER_IO_WAIT_TIME,  0,  NULL,  MO.USER_IO_WAIT_TIME)) USER_IO_WAIT_TIME,  MAX(DECODE(PLSQL_EXEC_TIME,  0,	NULL,  PLSQL_EXEC_TIME)) PLSQL_EXEC_TIME,  MAX(DECODE(MO.JAVA_EXEC_TIME,  0,  NULL,  MO.JAVA_EXEC_TIME)) JAVA_EXEC_TIME,  MAX(DECODE(MO.OTHER_WAIT_TIME,  0,  NULL,  MO.OTHER_WAIT_TIME)) OTHER_WAIT_TIME FROM MONITOR_DATA MO,  (SELECT ASH1.INST_ID,	ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  SUM(ASH1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH1.IMQ_COUNT) IMQ_COUNT,  SUM(ASH1.WAIT_COUNT) WAIT_COUNT,  SUM(ASH1.CPU_COUNT) CPU_COUNT,  SUM(ASH1.OTHER_SQL_COUNT)OTHER_SQL_COUNT,	MIN(ASH1.ACTIVITY_START) ACTIVITY_START,  MAX(ASH1.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH1 GROUP BY ASH1.INST_ID,  ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,	ASH1.EVENT_NAME) ASH0 WHERE MO.INST_ID = ASH0.INST_ID(+) AND MO.SID = ASH0.SESSION_ID(+) AND (:B70 = 1 OR :B69 = 1) GROUP BY MO.INST_ID,  MO.KEY,  MO.HAS_OTHER_XML,  MO.PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) PI WHERE (:B70 = 1) GROUP BY PI.INST_ID,  PI.KEY,  PI.HAS_OTHER_XML,  PI.SID,  PI.PROCESS_NAME,  PI.SESSION_SERIAL#,  PI.PX_SERVER_GROUP,  PI.PX_SERVER_SET,  PI.PX_SERVER#) PX_SESSION) PX_SESSIONS,  (SELECT XMLELEMENT( &quot;instances&quot;,  XMLATTRIBUTES( MAX(PX_INSTANCE.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_INSTANCE.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_INSTANCE.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_INSTANCE.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_INSTANCE.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,	MAX(PX_INSTANCE.ELAPSED_TIME) AS &quot;max_elapsed_time&quot;,	MAX(PX_INSTANCE.BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_INSTANCE.IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_INSTANCE.IO_BYTES) AS &quot;max_io_bytes&quot;),  XMLAGG(PX_INSTANCE.PX_INSTANCES_XML ORDER BY INST_ID)) FROM (SELECT PI.INST_ID,  MAX(PI.ELAPSED_TIME) ELAPSED_TIME,  MAX(PI.IO_REQS) IO_REQS,  MAX(PI.IO_BYTES) IO_BYTES,	MAX(PI.BUFFER_GETS) BUFFER_GETS,  SUM(PI
.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,	SUM(PI.WAIT_COUNT) WAIT_COUNT,	SUM(PI.CPU_COUNT) CPU_COUNT,  SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	XMLELEMENT( &quot;instance&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),	MAX(ELAPSED_TIME)),  NULL),  NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name
&quot;),  MAX(APPLICATION_WAIT_TIME)),	NULL),	NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),	MAX(OTHER_WAIT_TIME)),	NULL),	NVL2(MAX(FETCHES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),	MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),	NULL),	NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),	NULL),	NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),	MAX(WRITE_BYTES)),  NULL),  NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),	0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MAX(IO_BYTES)/ DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),	0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES),  0),  NVL(MAX(IO_ELIG_BYTES),  0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN :B33 = 1 AND SUM(PI.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,	XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;end_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,	PI.EVENT_NAME)) ELSE NULL END) PX_INSTANCES_XML FROM (SELECT MO.INST_ID,  ASH.ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.ACTIVITY_COUNT,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  ASH.ACTIVITY_START,	ASH.ACTIVITY_END,  MO.ELAPSED_TIME,  MO.QUEUING_TIME,  MO.CPU_TIME,  MO.APPLICATION_WAIT_TIME,	MO.CONCURRENCY_WAIT_TIME,  MO.CLUSTER_WAIT_TIME,  MO.USER_IO_WAIT_TIME,  MO.PLSQL_EXEC_TIME,  MO.JAVA_EXEC_TIME,  MO.OTHER_WAIT_TIME,  MO.FETCHES,  MO.BUFFER_GETS,  MO.IO_INTER_BYTES,  MO.IO_BYTES,  MO.READ_REQS,  MO.READ_BYTES,  MO.WRITE_REQS,  MO.WRITE_BYTES,  MO.IO_REQS,  MO.IO_UNC_BYTES,  MO.IO_ELIG_BYTES,  MO.IO_RET_BYTES FROM (SELECT MO0.INST_ID,  SUM(MO0.ELAPSED_TIME) ELAPSED_TIME,  SUM(MO0.QUEUING_TIME) QUEUING_TIME,  SUM(MO0.CPU_TIME) CPU_TIME,  SUM(MO0.FETCHES) FETCHES,  SUM(MO0.BUFFER_GETS) BUFFER_GETS,  SUM(MO0.IO_INTER_BYTES) IO_INTER_BYTES,  SUM(MO0.IO_BYTES) IO_BYTES,  SUM(MO0.READ_REQS) READ_REQS,  SUM(MO0.READ_BYTES) READ_BYTES,  SUM(MO0.WRITE_REQS) WRITE_REQS,	SUM(MO0.WRITE_BYTES) WRITE_BYTES,  SUM(MO0.IO_REQS) IO_REQS,  SUM(MO0.IO_UNC_BYTES) IO_UNC_BYTES,  SUM(MO0.IO_ELIG_BYTES) IO_ELIG_BYTES,  SUM(MO0.IO_RET_BYTES) IO_RET_BYTES,  SUM(MO0.APPLICATION_WAIT_TIME) APPLICATION_WAIT_TIME,  SUM(MO0.CONCURRENCY_WAIT_TIME) CONCURRENCY_WAIT_TIME,  SUM(MO0.CLUSTER_WAIT_TIME) CLUSTER_WAIT_TIME,  SUM(MO0.USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,  SUM(MO0.PLSQL_EXEC_TIME) PLSQL_EXEC_TIME,  SUM(MO0.JAVA_EXEC_TIME) JAVA_EXEC_TIME,  SUM(MO0.OTHER_WAIT_TIME) OTHER_WAIT_TIME FROM MONITOR_DATA MO0 GROUP BY MO0.INST_ID) MO,  (SELECT ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  SUM(ASH0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH0.IMQ_COUNT) IMQ_COUNT,  SUM(ASH0.WAIT_COUNT) WAIT_COUNT,  SUM(ASH0.CPU_COUNT) CPU_COUNT,  SUM(ASH0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH0 GROUP BY ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) ASH,  MONITOR_AGG WHERE MO.INST_ID = ASH.INST_ID(+) AND MONITOR_AGG.DIST_INST_COUNT &gt; 0 ) PI GROUP BY PI.INST_ID)PX_INSTANCE) PX_INSTANCES FROM MONITOR_AGG)) ELSE NULL END,  XPLAN_XML,  CASE WHEN :B43 = 1 THEN (SELECT XMLELEMENT( &quot;plan_monitor&quot;,  XMLATTRIBUTES(MAX(PLI.MAX_LINE_ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PLI.OVERALL_MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PLI.OVERALL_MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PLI.MAX_LINE_IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PLI.MAX_LINE_CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PLI.MAX_LINE_WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PLI.MAX_LINE_OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;),  XMLAGG( XMLELEMENT( &quot;operation&quot;,  XMLATTRIBUTES( PLI.PLAN_LINE_ID AS &quot;id&quot;,  PLI.PARENT_ID AS &quot;parent_id&quot;,  PLI.OPERATION AS &quot;name&quot;,  PLI.OPTIONS AS &quot;options&quot;,	PLI.DEPTH AS &quot;depth&quot;,  PLI.POSITION AS &quot;position&quot;,	PLI.INACTIVE AS &quot;skp&quot;,  PLI.PX_TYPE AS &quot;px_type&quot;),	NVL2(PLI.OBJECT_NAME,  XMLELEMENT( &quot;object&quot;,	XMLATTRIBUTES(PLI.OBJECT_TYPE AS &quot;type&quot;),  XMLFOREST(PLI.OBJECT_OWNER AS &quot;owner&quot;),	XMLFOREST(PLI.OBJECT_NAME AS &quot;name&quot;)),  NULL),  XMLFOREST(PLI.PARTITION_START AS &quot;partition_start&quot;,  PLI.PARTITION_STOP AS &quot;partition_stop&quot;),  CASE WHEN PLI.CARDINALITY IS NULL AND PLI.BYTES IS NULL AND PLI.COST IS NULL AND PLI.TEMP_SPACE IS NULL AND PLI.TIME IS NULL THEN NULL ELSE XMLELEMENT( &quot;optimizer&quot;,  NULL,  NVL2(PLI.CARDINALITY,  XMLFOREST(PLI.CARDINALITY AS &quot;cardinality&quot;),  NULL),  NVL2(PLI.BYTES,  XMLFOREST(PLI.BYTES AS &quot;bytes&quot;),	NULL),	NVL2(PLI.COST,	XMLFOREST(PLI.COST AS &quot;cost&quot;),  NULL),  NVL2(PLI.CPU_COST,  XMLFOREST(PLI.CPU_COST AS &quot;cpu_cost&quot;),	NULL),	NVL2(PLI.IO_COST,  XMLFOREST(PLI.IO_COST AS &quot;io_cost&quot;),  NULL),  NVL2(PLI.TEMP_SPACE,  XMLFOREST(PLI.TEMP_SPACE AS &quot;temp&quot;),  NULL),  NVL2(PLI.TIME,  XMLFOREST(PLI.TIME AS &quot;time&quot;),  NULL)) END,	XMLELEMENT( &quot;stats&quot;,	XMLATTRIBUTES('plan_monitor' AS &quot;type&quot;),  NVL2(PLI.FIR
ST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_active' AS &quot;name&quot;),  TO_CHAR(FIRST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN PLI.FIRST_MOVE_TIME != PLI.FIRST_CHANGE_TIME THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_row' AS &quot;name&quot;),  TO_CHAR(FIRST_CHANGE_TIME,  :B12 )) ELSE NULL END,  NVL2(PLI.LAST_MOVE_TIME,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('last_active' AS &quot;name&quot;),  TO_CHAR(LAST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN (PLI.FIRST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  ROUND((LAST_MOVE_TIME - FIRST_MOVE_TIME) * 3600 * 24)+1) END,	CASE WHEN (PLI.OVERALL_LAST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('from_most_recent' AS &quot;name&quot;),  ROUND((PLI.OVERALL_LAST_MOVE_TIME - PLI.LAST_MOVE_TIME) * 3600 * 24)) END,  NVL2(PLI.LAST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'from_sql_exec_start' AS &quot;name&quot;),  ROUND( (FIRST_MOVE_TIME - :B8 ) * 3600*24)),  NULL),  NVL2(PLI.PERCENT_COMPLETE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('percent_complete' AS &quot;name&quot;),  PLI.PERCENT_COMPLETE),  NULL),  NVL2(PLI.TIME_REMAINING,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('time_left' AS &quot;name&quot;),  PLI.TIME_REMAINING),  NULL),  CASE WHEN PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('starts' AS &quot;name&quot;),  PLI.STARTS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_starts' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_STARTS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(MAX_STARTS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_STARTS/10000000000)) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('dop' AS
&quot;name&quot;),  PLI.DOP) ELSE NULL END,  CASE WHEN NEED_ROWS IS NOT NULL AND PLI.FIRST_MOVE_TIME IS NOT NULL THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cardinality' AS &quot;name&quot;),	PLI.OUTPUT_ROWS) ELSE NULL END,  CASE WHEN PLI.NEED_ROWS IS NOT NULL AND PLI.DOP &gt; 0 AND PLI.MAX_OUTPUT_ROWS IS NOT NULL AND (PLI.FIRST_MOVE_TIME IS NOT NULL) THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_card' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_OUTPUT_ROWS/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_OUTPUT_ROWS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_OUTPUT_ROWS/10000000000)) ELSE NULL END,  CASE WHEN PLI.MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('memory' AS &quot;name&quot;),  PLI.MEM) ELSE NULL END,  CASE WHEN PLI.MAX_MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_memory' AS &quot;name&quot;),	PLI.MAX_MEM) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MIN_MAX_MEM IS NOT NULL AND PLI.MAX_MEM
&gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'min_max_mem' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MIN_MAX_MEM/1000000),  10000),  NULL) AS &quot;iid&quot;,	MOD(MIN_MAX_MEM,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MIN_MAX_MEM/10000000000)) ELSE NULL END,  CASE WHEN PLI.TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('temp' AS &quot;name&quot;),  PLI.TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_temp' AS &quot;name&quot;),  PLI.MAX_TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('spill_count' AS &quot;name&quot;),  PLI.SPILL_COUNT) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_MAX_TEMP IS NOT NULL AND PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_max_temp' AS &quot;name&quot;,  DECODE(:B68 ,	'Y',  MOD(TRUNC(MAX_MAX_TEMP/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_MAX_TEMP,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_MAX_TEMP/10000000000)) ELSE NULL END,  CASE WHEN PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  PLI.READ_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_REQS IS NOT NULL AND PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_read_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',	MOD(TRUNC(PLI.MAX_READ_REQS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_REQS/10000000000)) ELSE NULL END,	CASE WHEN PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  PLI.READ_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_BYTES IS NOT NULL AND PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_read_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_READ_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_BYTES,	1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  PLI.WRITE_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_REQS IS NOT NULL AND PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_REQS/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_REQS/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  PLI.WRITE_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_BYTES IS NOT NULL AND PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_bytes' AS &quot;name&quot;,	DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_BYTES,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('io_inter_bytes' AS &quot;name&quot;),  PLI.IO_INTER_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_io_inter_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_IO_INTER_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_IO_INTER_BYTES, 1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_IO_INTER_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(PLI.IO_BYTES / DECODE(PLI.IO_INTER_BYTES,  0,  1,  PLI.IO_INTER_BYTES),  2)) ELSE NULL END),	NVL2(STAT_GID,	XMLELEMENT( &quot;rwsstats&quot;,  XMLATTRIBUTES( PLI.STAT_GID AS &quot;group_id&quot;),  DECODE(GID_ROWNUM,  1,  (SELECT XMLELEMENT( &quot;metadata&quot;,  NULL,  XMLAGG( XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( ROWNUM AS &quot;id&quot;,  NAME AS &quot;name&quot;,	DESCRIPTION AS &quot;desc&quot;,  TYPE AS &quot;type&quot;,  DECODE(FLAGS,  0,	NULL,  FLAGS) AS &quot;flags&quot;),  NULL) ORDER BY ID)) FROM V$SQL_MONITOR_STATNAME WHERE GROUP_ID = PLI.STAT_GID),  NULL),  NVL2(STAT1_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(1 AS &quot;id&quot;),  STAT1_VALUE),  NULL),  NVL2(STAT2_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(2 AS &quot;id&quot;),  STAT2_VALUE),  NULL),  NVL2(STAT3_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(3 AS &quot;id&quot;),  STAT3_VALUE),  NULL),  NVL2(STAT4_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(4 AS &quot;id&quot;),	STAT4_VALUE),  NULL),  NVL2(STAT5_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(5 AS &quot;id&quot;),  STAT5_VALUE),  NULL),  NVL2(STAT6_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(6 AS &quot;id&quot;),  STAT6_VALUE),  NULL),  NVL2(STAT7_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(7 AS &quot;id&quot;),  STAT7_VALUE),  NULL),  NVL2(STAT8_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(8 AS &quot;id&quot;),	STAT8_VALUE),  NULL),  NVL2(STAT9_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(9 AS &quot;id&quot;),  STAT9_VALUE),  NULL),  NVL2(STAT10_VALUE,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES(10 AS &quot;id&quot;),  STAT10_VALUE),  NULL)),  NULL),  CASE WHEN PLI.LINE_ACTIVITY_COUNT &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(PLI.LINE_ACTIVITY_START,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR(PLI.LINE_ACTIVITY_END,  :B12 ) AS &quot;end_time&quot;,  ROUND((PLI.LINE_ACTIVITY_END - PLI.LINE_ACTIVITY_START) * 3600*24) + 1 AS &quot;duration&quot;,  PLI.LINE_ACTIVITY_COUNT AS &quot;count&quot;,  PLI.LINE_IMQ_COUNT AS &quot;imq_count&quot;,	PLI.LINE_WAIT_COUNT AS &quot;wait_count&quot;,	PLI.LINE_CPU_COUNT AS &quot;cpu_count&quot;,  PLI.LINE_OTHER_SQL_COUNT AS &quot;other_sql_count&quot;,	:B40 AS &quot;cpu_cores&quot;,	:B39 AS &quot;hyperthread&quot;),  PLI.ACTIVITY_TOTAL,	PLI.PLAN_ACTIVITY_HISTO) ELSE NULL END) ORDER BY PLI.PLAN_LINE_ID) ) FROM (SELECT AT.MAX_LINE_ACTIVITY_COUNT,  PM.OVERALL_MAX_IO_REQS,	PM.OVERALL_MAX_IO_BYTES,  AT.MAX_LINE_IMQ_COUNT,  AT.MAX_LINE_CPU_COUNT,  AT.MAX_LINE_WAIT_COUNT,  AT.LINE_OTHER_SQL_COUNT,  AT.MAX_LINE_OTHER_SQL_COUNT,  PM.PLAN_LINE_ID,  PM.PARENT_ID,  PM.OPERATION,  PM.OPTIONS,	PM.DEPTH,  PM.POSITION,  PM.INACTIVE,  CASE WHEN PM.OPERATION = 'PX COORDINATOR' AND :B23 = 'Y' AND (PM.PX_SERVER_SET IS NOT NULL OR AH.PX_SERVER_SET IS NOT NULL) THEN 'QC' WHEN PM.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(PM.PX_SERVER_SET) WHEN AH.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(AH.PX_SERVER_SET) WHEN (:B23 = 'N' OR (PM.LAST_CHANGE_TIME IS NULL AND AT.LINE_ACTIVITY_END IS NULL)) THEN NULL ELSE 'QC' END PX_TYPE,  PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START,  PM.LAST_CHANGE_TIME,  PM.OVERALL_LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END,	AT.OVERALL_LINE_ACTIVITY_END,  LEAST(NVL(AT.LINE_ACTIVITY_START,  PM.FIRST_CHANGE_TIME),  NVL(PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START)) FIRST_MOVE_TIME,	GREATEST(NVL(AT.LINE_ACTIVITY_END,  PM.LAST_CHANGE_TIME),  NVL(PM.LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END)) LAST_MOVE_TIME,  GREATEST(NVL(AT.OVERALL_LINE_ACTIVITY_END,  PM.OVERALL_LAST_CHANGE_TIME),	NVL(PM.OVERALL_LAST_CHANGE_TIME,  AT.OVERALL_LINE_ACTIVITY_END)) OVERALL_LAST_MOVE_TIME,  CASE WHEN PM.STARTS IS NOT NULL AND PM.STARTS &gt; 0 THEN 1 ELSE 0 END HAS_EXECUTED,	PM.OBJECT_NAME,  PM.OBJECT_TYPE,  PM.OBJECT_OWNER,  PM.PARTITION_START,  PM.PARTITION_STOP,  PM.CARDINAL
ITY,  PM.BYTES,  PM.COST,  PM.TEMP_SPACE,  PM.TIME,  PM.CPU_COST,  PM.IO_COST,	LO.PERCENT_COMPLETE,  LO.TIME_REMAINING,  PM.STARTS,  PM.DOP,  PM.MAX_STARTS,  PM.OUTPUT_ROWS,	PM.NEED_ROWS,  PM.MAX_OUTPUT_ROWS,  PM.MEM,  PM.MAX_MEM,  PM.MIN_MAX_MEM,  PM.TEMP,  PM.MAX_TEMP,  PM.SPILL_COUNT,  PM.MAX_MAX_TEMP,  PM.READ_REQS,  PM.MAX_READ_REQS,	PM.READ_BYTES,	PM.MAX_READ_BYTES,  PM.WRITE_REQS,  PM.MAX_WRITE_REQS,	PM.WRITE_BYTES,  PM.MAX_WRITE_BYTES,  PM.IO_INTER_BYTES,  PM.IO_BYTES,	PM.MAX_IO_INTER_BYTES,	AT.LINE_ACTIVITY_COUNT,  AT.LINE_IMQ_COUNT,  AT.LINE_WAIT_COUNT,  AT.LINE_CPU_COUNT,  AT.ACTIVITY_TOTAL,  AH.PLAN_ACTIVITY_HISTO,  PM.STAT_GID,  PM.GID_ROWNUM,  PM.STAT1_VALUE,  PM.STAT2_VALUE,  PM.STAT3_VALUE,  PM.STAT4_VALUE,  PM.STAT5_VALUE,  PM.STAT6_VALUE,  PM.STAT7_VALUE,	PM.STAT8_VALUE,  PM.STAT9_VALUE,  PM.STAT10_VALUE FROM (SELECT AT0.*,  MAX(LINE_ACTIVITY_END) OVER() OVERALL_LINE_ACTIVITY_END,  MAX(LINE_ACTIVITY_COUNT) OVER() MAX_LINE_ACTIVITY_COUNT,  MAX(LINE_IMQ_COUNT) OVER() MAX_LINE_IMQ_COUNT,  MAX(LINE_CPU_COUNT) OVER() MAX_LINE_CPU_COUNT,  MAX(LINE_WAIT_COUNT) OVER() MAX_LINE_WAIT_COUNT,  MAX(LINE_OTHER_SQL_COUNT) OVER() MAX_LINE_OTHER_SQL_COUNT FROM (SELECT AD1.PLAN_LINE_ID,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) LINE_ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) LINE_IMQ_COUNT,  SUM(AD1.WAIT_COUNT) LINE_WAIT_COUNT,  SUM(AD1.OTHER_SQL_COUNT) LINE_OTHER_SQL_COUNT,  SUM(AD1.CPU_COUNT) LINE_CPU_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MAX(AD0.DFO_MOST_ACTIVE_IID) DFO_MOST_ACTIVE_IID,  MAX(AD0.DFO_MOST_ACTIVE_SID) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT FROM ASH_DATA AD0 WHERE AD0.PLAN_LINE_ID IS NOT NULL GROUP BY AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID) AT0) AT,	(SELECT AD2.PLAN_LINE_ID,  MIN(AD2.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD2.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD2.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD2.IMQ_COUNT) IMQ_COUNT,  SUM(AD2.WAIT_COUNT) WAIT_COUNT,  SUM(AD2.CPU_COUNT) CPU_COUNT,  SUM(AD2.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  CASE WHEN :B29 = 1 AND SUM(AD2.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND((:B22 -:B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG(XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),	AD2.ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END PLAN_ACTIVITY_HISTO FROM (SELECT AD1.PLAN_LINE_ID,  AD1.BUCKET_NUM,  MIN(AD1.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(NVL2(AD1.ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT),  NULL) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(NVL2(AD0.ACTIVITY_START,  AD0.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID,	AD1.BUCKET_NUM) AD2 GROUP BY AD2.PLAN_LINE_ID) AH,  (SELECT LO.SQL_PLAN_LINE_ID PLAN_LINE_ID,  DECODE(SUM(LO.TOTALWORK),  0,  NULL,  ROUND(SUM(LO.SOFAR)*100/SUM(LO.TOTALWORK))) PERCENT_COMPLETE,  MAX(LO.TIME_REMAINING) TIME_REMAINING FROM GV$SESSION_LONGOPS LO,  MONITOR_DATA MO WHERE (:B49 = 'Y' OR :B71 = 'DONE (ERROR)') AND LO.SQL_ID = :B9 AND LO.SQL_EXEC_START = :B8 AND LO.SQL_EXEC_ID = :B7 AND LO.INST_ID = MO.INST_ID AND LO.SID = MO.SID GROUP BY LO.SQL_PLAN_LINE_ID) LO,  (SELECT PM0.*,  CASE WHEN PM0.STARTS IS NULL OR PM0.STARTS = 0 OR PM0.OUTPUT_ROWS IS NULL THEN NULL ELSE 1 END NEED_ROWS,  ROW_NUMBER() OVER(PARTITION BY PM0.STAT_GID ORDER BY PM0.PLAN_LINE_ID ) GID_ROWNUM,  MAX(LAST_CHANGE_TIME) OVER() OVERALL_LAST_CHANGE_TIME,  MAX(MAX_IO_REQS) OVER() OVERALL_MAX_IO_REQS,  MAX(MAX_IO_BYTES) OVER() OVERALL_MAX_IO_BYTES FROM (SELECT /*+ leading(mo) use_hash(plm) */ PLM.PLAN_LINE_ID PLAN_LINE_ID,  PLM.PLAN_OPERATION OPERATION,	PLM.PLAN_OPTIONS OPTIONS,  MAX(PLM.PLAN_PARENT_ID) PARENT_ID,  MAX(PLM.PLAN_DEPTH) DEPTH,  MAX(PLM.PLAN_POSITION) POSITION,  MAX(PLM.PLAN_OPERATION_INACTIVE) INACTIVE,  MAX(PLM.PLAN_OBJECT_OWNER) OBJECT_OWNER,  MAX(PLM.PLAN_OBJECT_NAME) OBJECT_NAME,  MAX(PLM.PLAN_OBJECT_TYPE) OBJECT_TYPE,  MAX(PLM.PLAN_COST) COST,  MAX(PLM.PLAN_CARDINALITY) CARDINALITY,  MAX(PLM.PLAN_BYTES) BYTES,  MAX(PLM.PLAN_CPU_COST) CPU_COST,  MAX(PLM.PLAN_IO_COST) IO_COST,  MAX(PLM.PLAN_TEMP_SPACE) TEMP_SPACE,  MAX(PLM.PLAN_TIME) TIME,  MAX(PLM.PLAN_PARTITION_START) PARTITION_START,  MAX(PLM.PLAN_PARTITION_STOP) PARTITION_STOP,  MIN(PLM.FIRST_CHANGE_TIME) FIRST_CHANGE_TIME,	MAX(PLM.LAST_CHANGE_TIME) LAST_CHANGE_TIME,  MIN(PLM.LAST_CHANGE_TIME) MIN_LAST_CHANGE_TIME,  MIN(NVL2(PLM.FIRST_CHANGE_TIME,  MO.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  COUNT(CASE WHEN PLM.PAR IS NOT NULL AND PLM.STARTS IS NOT NULL AND PLM.STARTS &gt; 0 AND PLM.PLAN_LINE_ID != 0 AND PLM.PLAN_OPERATION != 'PX COORDINATOR' THEN 1 ELSE NULL END) DOP,  SUM(PLM.STARTS) STARTS,	MAX(NVL2(PAR,  PLM.STARTS * 10000000000 + PLM.ES,  NULL)) MAX_STARTS,  SUM(PLM.OUTPUT_ROWS) OUTPUT_ROWS,  MAX(NVL2(PAR,  PLM.OUTPUT_ROWS * 10000000000 +PLM.ES,  NULL)) MAX_OUTPUT_ROWS,  SUM(PLM.WORKAREA_MEM) MEM,  SUM(PLM.WORKAREA_MAX_MEM) MAX_MEM,  MIN(NVL2(PAR,  PLM.WORKAREA_MAX_MEM * 10000000000 + PLM.ES,  NULL)) MIN_MAX_MEM,  SUM(PLM.WORKAREA_TEMPSEG) TEMP,  SUM(PLM.WORKAREA_MAX_TEMPSEG) MAX_TEMP,  MAX(NVL2(PAR,  PLM.WORKAREA_MAX_TEMPSEG * 10000000000 + PLM.ES,  NULL)) MAX_MAX_TEMP,  COUNT(PLM.WORKAREA_MAX_TEMPSEG) SPILL_COUNT,  SUM(PLM.PHYSICAL_READ_REQUESTS) READ_REQS,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_READ_REQS,  SUM(PLM.PHYSICAL_READ_BYTES) READ_BYTES,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_READ_BYTES,  SUM(PLM.PHYSICAL_WRITE_REQUESTS) WRITE_REQS,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_REQS,  SUM(PLM.PHYSICAL_WRITE_BYTES) WRITE_BYTES,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_BYTES,  NVL(SUM(PLM.PHYSICAL_READ_BYTES),  0) + NVL(SUM(PLM.PHYSICAL_WRITE_BYTES),  0) IO_BYTES,  SUM(NVL(PLM.PHYSICA
L_READ_REQUESTS,  0) + NVL(PLM.PHYSICAL_WRITE_REQUESTS,  0)) MAX_IO_REQS,  SUM(NVL(PLM.PHYSICAL_READ_BYTES,  0) + NVL(PLM.PHYSICAL_WRITE_BYTES,  0)) MAX_IO_BYTES,  SUM(PLM.IO_INTERCONNECT_BYTES) IO_INTER_BYTES,  MAX(NVL2(PAR,  PLM.IO_INTERCONNECT_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_IO_INTER_BYTES,  MAX(OTHERSTAT_GROUP_ID) STAT_GID,  NVL(DECODE(MAX(OTHERSTAT_1_TYPE),	3,  MAX(OTHERSTAT_1_VALUE),  4,  MAX(OTHERSTAT_1_VALUE),  6,  MIN(OTHERSTAT_1_VALUE),  7,  MIN(OTHERSTAT_1_VALUE),  NULL),  SUM(DECODE(OTHERSTAT_1_TYPE,  1,  OTHERSTAT_1_VALUE,  2,  OTHERSTAT_1_VALUE,  NULL))) STAT1_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_2_TYPE),	3,  MAX(OTHERSTAT_2_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),	4,  MAX(RMAX1 + OTHERSTAT_2_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_2_VALUE),  NULL),  6,  MIN(OTHERSTAT_2_VALUE),  NULL)),	10000000000000000),  SUM(DECODE(OTHERSTAT_2_TYPE,  1,  OTHERSTAT_2_VALUE,  2,  OTHERSTAT_2_VALUE,  NULL))) STAT2_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_3_TYPE),  3,  MAX(OTHERSTAT_3_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_3_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_3_VALUE),  NULL),  6,  MIN(OTHERSTAT_3_VALUE),	NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_3_TYPE,  1,	OTHERSTAT_3_VALUE,  2,	OTHERSTAT_3_VALUE,  NULL))) STAT3_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_4_TYPE),  3,  MAX(OTHERSTAT_4_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_4_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_4_VALUE),  NULL),  6,	MIN(OTHERSTAT_4_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_4_TYPE,  1,  OTHERSTAT_4_VALUE,  2,  OTHERSTAT_4_VALUE,  NULL))) STAT4_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_5_TYPE),  3,  MAX(OTHERSTAT_5_VALUE),	5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_5_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_5_VALUE),  NULL),  6,  MIN(OTHERSTAT_5_VALUE),  NULL)),  10000000000000000),	SUM(DECODE(OTHERSTAT_5_TYPE,  1,  OTHERSTAT_5_VALUE,  2,  OTHERSTAT_5_VALUE,  NULL))) STAT5_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_6_TYPE),  3,	MAX(OTHERSTAT_6_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,	MAX(RMAX1 + OTHERSTAT_6_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_6_VALUE),  NULL),  6,  MIN(OTHERSTAT_6_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_6_TYPE,  1,  OTHERSTAT_6_VALUE,  2,  OTHERSTAT_6_VALUE,  NULL))) STAT6_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_7_TYPE),  3,  MAX(OTHERSTAT_7_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_7_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_7_VALUE),  NULL),  6,  MIN(OTHERSTAT_7_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_7_TYPE,	1,  OTHERSTAT_7_VALUE,	2,  OTHERSTAT_7_VALUE,	NULL))) STAT7_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_8_TYPE),  3,  MAX(OTHERSTAT_8_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_8_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_8_VALUE),	NULL),	6,  MIN(OTHERSTAT_8_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_8_TYPE,  1,  OTHERSTAT_8_VALUE,  2,  OTHERSTAT_8_VALUE,  NULL))) STAT8_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_9_TYPE),  3,  MAX(OTHERSTAT_9_VALUE),  5,	DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_9_VALUE),  7,	MIN(RMAX1 + OTHERSTAT_9_VALUE),  NULL),  6,  MIN(OTHERSTAT_9_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_9_TYPE,  1,  OTHERSTAT_9_VALUE,  2,  OTHERSTAT_9_VALUE,  NULL))) STAT9_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_10_TYPE),  3,  MAX(OTHERSTAT_10_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_10_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_10_VALUE),  NULL),  6,  MIN(OTHERSTAT_10_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_10_TYPE,  1,  OTHERSTAT_10_VALUE,  2,  OTHERSTAT_10_VALUE,  NULL))) STAT10_VALUE FROM (SELECT A.*,  OTHERSTAT_1_VALUE * 10000000000000000 RMAX1,  A.INST_ID * 1000000 + A.SID ES,  DECODE(A.PROCESS_NAME,  'ora',  NULL,  1) PAR FROM GV$ALL_SQL_PLAN_MONITOR A) PLM,  MONITOR_DATA MO WHERE PLM.SQL_ID = :B9 AND PLM.SQL_EXEC_START = :B8 AND PLM.SQL_EXEC_ID = :B7 AND PLM.INST_ID = MO.INST_ID AND PLM.INST_ID BETWEEN :B11 AND :B10 AND PLM.KEY = MO.KEY GROUP BY PLM.PLAN_LINE_ID,	PLM.PLAN_OPERATION,  PLM.PLAN_OPTIONS) PM0) PM WHERE AH.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND AT.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND LO.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND (:B21 IS NULL OR PM.PLAN_LINE_ID = :B21 )) PLI) ELSE NULL END,	CASE WHEN :B42 = 1 THEN DBMS_SQLTUNE.BUILD_STASH_XML( SESSION_ID=&gt;:B19 ,  SESSION_SERIAL=&gt;:B18 ,	SESSION_INST_ID=&gt;:B17 ,  PX_MODE=&gt;'yes',	START_TIME=&gt;:B20 ,  END_TIME=&gt;:B22 ,  MISSING_SECONDS=&gt; :B41 ,  INSTANCE_LOW_FILTER=&gt;:B11 ,  INSTANCE_HIGH_FILTER=&gt;:B10 ,  BUCKET_MAX_COUNT=&gt;NULL,  BUCKET_INTERVAL=&gt;:B26 ,  REPORT_LEVEL=&gt;'typical',  CPU_CORES=&gt;:B40 ,  IS_HYPER=&gt;:B39 ) ELSE NULL END),  (CASE WHEN :B38 = 1 THEN (SELECT XMLELEMENT( &quot;skewed_sessions&quot;,  XMLATTRIBUTES( DECODE(MIN(INST_ID),  NULL,  :B17 ,  MIN(INST_ID)) AS &quot;min_iid&quot;,	DECODE(MAX(INST_ID),  NULL,  :B17 ,  MAX(INST_ID)) AS
&quot;max_iid&quot;),  XMLAGG( XMLELEMENT( &quot;s&quot;,  XMLATTRIBUTES( INST_ID AS &quot;i&quot;),  SESSION_ID) ORDER BY INST_ID,  SESSION_ID)) FROM (SELECT SESS.* FROM (SELECT DECODE(AD.DFO_MOST_ACTIVE_IID,  :B17 ,  NULL,  AD.DFO_MOST_ACTIVE_IID) INST_ID,  AD.DFO_MOST_ACTIVE_SID SESSION_ID FROM ASH_DATA AD WHERE AD.DFO_MOST_ACTIVE_COUNT IS NOT NULL GROUP BY AD.DFO_MOST_ACTIVE_IID,  AD.DFO_MOST_ACTIVE_SID ORDER BY MAX(AD.DFO_MOST_ACTIVE_COUNT) DESC) SESS WHERE ROWNUM &lt;= 100)) ELSE NULL END),  (CASE WHEN :B37 = 1 THEN (SELECT XMLELEMENT( &quot;report_repository_summary&quot;,  CASE WHEN MA.MAX_DBOP_NAME IS NOT NULL THEN XMLELEMENT( &quot;dbop&quot;,  XMLATTRIBUTES('F' AS &quot;detail&quot;,  MA.MAX_DBOP_NAME AS &quot;dbop_name&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,  :B12 ) AS &quot;dbop_exec_start&quot;,  MA.MAX_DBOP_EXEC_ID AS &quot;dbop_exec_id&quot;),  XMLFOREST( MA.MAX_STATUS AS &quot;status&quot;,  TO_CHAR(NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME),  :B12 )AS
&quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 )AS &quot;last_refresh_time&quot;,  MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,  MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,	MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,	MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,  MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,	MA.MAX_PX_DOP AS &quot;dop&quot;,  MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;),  CASE WHEN MA.MAX_ERROR_NUMBER IS NULL THEN NULL ELSE XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MA.MAX_ERROR_NUMBER AS &quot;number&quot;,  MA.MAX_ERROR_FACILITY AS &quot;facility&quot;),  MA.MAX_ERROR_MESSAGE) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME))*86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,  0,  1,  MA.SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,  2))) END) ) ELSE XMLELEMENT( &quot;sql&quot;,  XMLATTRIBUTES( MA.MAX_SQL_ID AS &quot;sql_id&quot;,  TO_CHAR(MA.MAX_SQL_EXEC_START,  :B12 ) AS &quot;sql_exec_start&quot;,	MA.MAX_SQL_EXEC_ID AS &quot;sql_exec_id&quot;),  XMLFOREST(MA.MAX_STATUS AS &quot;status&quot;,  SUBSTR(MA.SQLMON_TEXT,  1,  100) AS &quot;sql_text&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,	:B12 ) AS &quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 ) AS &quot;last_refresh_time&quot;,	MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,	MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,  MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,  MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PLAN_HASH_VALUE AS &quot;plan_hash&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,	MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MA.MAX_PX_DOP AS &quot;dop&quot;,	MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;,  MA.SUM_SERVERS_REQUESTED AS &quot;px_servers_requested&quot;,  MA.SUM_SERVERS_ALLOCATED AS &quot;px_servers_allocated&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('duration' AS &quot;name&quot;),	GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- MA.MAX_SQL_EXEC_START) * 86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME
,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  DECODE(MA.SUM_IO_UNC_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MA.SUM_IO_UNC_BYTES)),  DECODE(MA.SUM_IO_ELIG_BYTES,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MA.SUM_IO_ELIG_BYTES)),  DECODE(MA.SUM_IO_RET_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MA.SUM_IO_RET_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,	0,  1,	MA.SUM_IO_INTER_BYTES),  2)) END,  CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,	0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,	2))) END) ) END) FROM MONITOR_AGG MA) ELSE NULL END) FROM (SELECT CASE WHEN V1.XPLAN_XML IS NULL OR V1.XPLAN_XML.EXISTSNODE('/error') &gt; 0 THEN NULL ELSE V1.XPLAN_XML END XPLAN_XML FROM (SELECT CASE WHEN :B36 = 1 THEN DBMS_XPLAN.BUILD_PLAN_XML( TABLE_NAME=&gt;'gv$all_sql_plan',  PLAN_TAG=&gt;'plan',	FILTER_PREDS=&gt;:B35 ,  FORMAT=&gt;'-PROJECTION +ALIAS +ADAPTIVE') ELSE NULL END XPLAN_XML FROM DUAL) V1) CONST_VIEW</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="a95n8p4vpxmps"></a>a95n8p4vpxmps</td><td class='awrnc'><pre_sqltext class="awr">begin prvt_hdm.execute_slave_actions; end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="amnkmrsjh10nv"></a>amnkmrsjh10nv</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '28';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="atwuyuvqkf27w"></a>atwuyuvqkf27w</td><td class='awrnc'><pre_sqltext class="awr">SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE,  BUCKET_START,	BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END,  SUM(TM_CPU_FIRST_BUCKET_VALUE) TM_CPU_FIRST_BUCKET_VALUE,  SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE,  SUM(TM_DB_FIRST_BUCKET_VALUE) TM_DB_FIRST_BUCKET_VALUE,  SUM(TM_DB_MIDDLE_BUCKETS_VALUE) TM_DB_MIDDLE_BUCKETS_VALUE,	SUM(TM_DB_LAST_BUCKET_VALUE) TM_DB_LAST_BUCKET_VALUE,  SUM(RREQS_FIRST_BUCKET_VALUE) RREQS_FIRST_BUCKET_VALUE,	SUM(RREQS_MIDDLE_BUCKETS_VALUE) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(RREQS_LAST_BUCKET_VALUE) RREQS_LAST_BUCKET_VALUE,  SUM(WREQS_FIRST_BUCKET_VALUE) WREQS_FIRST_BUCKET_VALUE,  SUM(WREQS_MIDDLE_BUCKETS_VALUE) WREQS_MIDDLE_BUCKETS_VALUE,  SUM(WREQS_LAST_BUCKET_VALUE) WREQS_LAST_BUCKET_VALUE,  SUM(RBYTES_FIRST_BUCKET_VALUE) RBYTES_FIRST_BUCKET_VALUE,  SUM(RBYTES_MIDDLE_BUCKETS_VALUE) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(RBYTES_LAST_BUCKET_VALUE) RBYTES_LAST_BUCKET_VALUE,  SUM(WBYTES_FIRST_BUCKET_VALUE) WBYTES_FIRST_BUCKET_VALUE,  SUM(WBYTES_MIDDLE_BUCKETS_VALUE) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(WBYTES_LAST_BUCKET_VALUE) WBYTES_LAST_BUCKET_VALUE,  SUM(IBYTES_FIRST_BUCKET_VALUE) IBYTES_FIRST_BUCKET_VALUE,  SUM(IBYTES_MIDDLE_BUCKETS_VALUE) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(IBYTES_LAST_BUCKET_VALUE) IBYTES_LAST_BUCKET_VALUE,  SUM(CRBYTES_FIRST_BUCKET_VALUE) CRBYTES_FIRST_BUCKET_VALUE,  SUM(CRBYTES_MIDDLE_BUCKETS_VALUE) CRBYTES_MIDDLE_BUCKETS_VALUE,	SUM(CRBYTES_LAST_BUCKET_VALUE) CRBYTES_LAST_BUCKET_VALUE,  SUM(PGA_ALLOC_FIRST_BUCKET_VALUE) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(PGA_ALLOC_MIDDLE_BUCKETS_VALUE) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(PGA_ALLOC_LAST_BUCKET_VALUE) PGA_ALLOC_LAST_BUCKET_VALUE,	SUM(TMP_ALLOC_FIRST_BUCKET_VALUE) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(TMP_ALLOC_MIDDLE_BUCKETS_VALUE) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(TMP_ALLOC_LAST_BUCKET_VALUE) TMP_ALLOC_LAST_BUCKET_VALUE FROM ( SELECT GROUP_TYPE,  BUCKET_START,  TM_BUCKET_START,  TM_BUCKET_END,  BUCKET_END,  TM_GROUP_TYPE,  SUM(GVTF.TM_CPU_FIRST_BUCKET_VALUE) TM_CPU_FIRST_BUCKET_VALUE,  SUM(GVTF.TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE,  SUM(GVTF.TM_DB_FIRST_BUCKET_VALUE) TM_DB_FIRST_BUCKET_VALUE,  SUM(GVTF.TM_DB_MIDDLE_BUCKETS_VALUE) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TM_DB_LAST_BUCKET_VALUE) TM_DB_LAST_BUCKET_VALUE,  SUM(GVTF.RREQS_FIRST_BUCKET_VALUE) RREQS_FIRST_BUCKET_VALUE,	SUM(GVTF.RREQS_MIDDLE_BUCKETS_VALUE) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.RREQS_LAST_BUCKET_VALUE) RREQS_LAST_BUCKET_VALUE,  SUM(GVTF.WREQS_FIRST_BUCKET_VALUE) WREQS_FIRST_BUCKET_VALUE,  SUM(GVTF.WREQS_MIDDLE_BUCKETS_VALUE) WREQS_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.WREQS_LAST_BUCKET_VALUE) WREQS_LAST_BUCKET_VALUE,  SUM(GVTF.RBYTES_FIRST_BUCKET_VALUE) RBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.RBYTES_MIDDLE_BUCKETS_VALUE) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.RBYTES_LAST_BUCKET_VALUE) RBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.WBYTES_FIRST_BUCKET_VALUE) WBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.WBYTES_MIDDLE_BUCKETS_VALUE) WBYTES_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.WBYTES_LAST_BUCKET_VALUE) WBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.IBYTES_FIRST_BUCKET_VALUE) IBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.IBYTES_MIDDLE_BUCKETS_VALUE) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.IBYTES_LAST_BUCKET_VALUE) IBYTES_LAST_BUCKET_VALUE,	SUM(GVTF.CRBYTES_FIRST_BUCKET_VALUE) CRBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.CRBYTES_MIDDLE_BUCKETS_VALUE) CRBYTES_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.CRBYTES_LAST_BUCKET_VALUE) CRBYTES_LAST_BUCKET_VALUE,	SUM(GVTF.PGA_ALLOC_FIRST_BUCKET_VALUE) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(GVTF.PGA_ALLOC_MIDDLE_BUCKETS_VALUE) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.PGA_ALLOC_LAST_BUCKET_VALUE) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(GVTF.TMP_ALLOC_FIRST_BUCKET_VALUE) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(GVTF.TMP_ALLOC_MIDDLE_BUCKETS_VALUE) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TMP_ALLOC_LAST_BUCKET_VALUE) TMP_ALLOC_LAST_BUCKET_VALUE FROM TABLE(SYS.GV$(CURSOR( SELECT INST_ID,  GROUP_TYPE,  BUCKET_START,  TM_BUCKET_START,	TM_BUCKET_END,	BUCKET_END,  TM_GROUP_TYPE,  SUM(TM_DELTA_CPU_TIME * TM_FIRST_BUCKET_RATIO) TM_CPU_FIRST_BUCKET_VALUE,	SUM(TM_DELTA_CPU_TIME * TM_MIDDLE_BUCKETS_RATIO) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(TM_DELTA_CPU_TIME * TM_LAST_BUCKET_RATIO) TM_CPU_LAST_BUCKET_VALUE,	SUM(TM_DELTA_DB_TIME * TM_FIRST_BUCKET_RATIO) TM_DB_FIRST_BUCKET_VALUE,  SUM(TM_DELTA_DB_TIME * TM_MIDDLE_BUCKETS_RATIO) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(TM_DELTA_DB_TIME * TM_LAST_BUCKET_RATIO) TM_DB_LAST_BUCKET_VALUE,  SUM(DELTA_READ_REQUESTS * FIRST_BUCKET_RATIO) RREQS_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_REQUESTS * MIDDLE_BUCKETS_RATIO) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_REQUESTS * LAST_BUCKET_RATIO) RREQS_LAST_BUCKET_VALUE,  SUM(DELTA_WRITE_REQUESTS * FIRST_BUCKET_RATIO) WREQS_FIRST_BUCKET_VALUE,  SUM(DELTA_WRITE_REQUESTS * MIDDLE_BUCKETS_RATIO) WREQS_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_WRITE_REQUESTS * LAST_BUCKET_RATIO) WREQS_LAST_BUCKET_VALUE,  SUM(DELTA_READ_BYTES * FIRST_BUCKET_RATIO) RBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_BYTES * MIDDLE_BUCKETS_RATIO) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_BYTES * LAST_BUCKET_RATIO) RBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_WRITE_BYTES * FIRST_BUCKET_RATIO) WBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_WRITE_BYTES * MIDDLE_BUCKETS_RATIO) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_WRITE_BYTES * LAST_BUCKET_RATIO) WBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * FIRST_BUCKET_RATIO) IBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * MIDDLE_BUCKETS_RATIO) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * LAST_BUCKET_RATIO) IBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_READ_MEM_BYTES * FIRST_BUCKET_RATIO) CRBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_MEM_BYTES * MIDDLE_BUCKETS_RATIO) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_MEM_BYTES * LAST_BUCKET_RATIO) CRBYTES_LAST_BUCKET_VALUE,	SUM(PGA_ALLOCATED * LENGTH_SEG * FIRST_BUCKET_RATIO) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * MIDDLE_BUCKETS_RATIO) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * LAST_BUCKET_RATIO) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * FIRST_BUCKET_RATIO) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * MIDDLE_BUCKETS_RATIO) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,	SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * LAST_BUCKET_RATIO) TMP_ALLOC_LAST_BUCKET_VALUE FROM ( SELECT USERENV('INSTANCE') INST_ID,  ROW_ID,  SID,  SAMPLE_TIME,	CASE WHEN BUCKET_END IS NULL OR BUCKET_START IS NULL THEN NULL WHEN BUCKET_START = TM_BUCKET_START AND BUCKET_START = BUCKET_END THEN 'CO' WHEN BUCKET_START = TM_BUCKET_START THEN 'CM' WHEN BUCKET_START = BUCKET_END THEN 'SO' ELSE 'SM' END GROUP_TYPE,  CASE WHEN TM_BUCKET_START IS NULL OR BUCKET_END IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL WHEN TM_BUCKET_START = BUCKET_END THEN 'O' ELSE 'M' END TM_GROUP_TYPE,  START_SEG,  BUCKET_START,  BUCKET_START_OFFSET,  TM_START_SEG,  CASE WHEN TM_BUCKET_START IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL ELSE TM_BUCKET_START END TM_BUCKET_START,  CASE WHEN TM_BUCKET_START IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL ELSE BUCKET_END END TM_BUCKET_END,  TM_BUCKET_START_OFFSET,  LENGTH_SEG,	TM_LENGTH_SEG,	END_SEG,  BUCKET_END,  BUCKET_END_OFFSET,  CASE WHEN BUCKET_START != BUCKET_END THEN (:B9 - BUCKET_START_OFFSET) / LENGTH_SEG ELSE 1 END FIRST_BUCKET_RATIO,  CASE WHEN BUCKET_END &gt;= BUCKET_START + 2 THEN :B9 / LENGTH_SEG ELSE NULL END MIDDLE_BUCKETS_RATIO,  CASE WHEN BUCKET_START != BUCKET_END THEN BUCKET_END_OFFSET / LENGTH_SEG ELSE NULL END LAST_BUCKET_RATIO,	CASE WHEN TM_BUCKET_START != BUCKET_END THEN (:B9 - TM_BUCKET_START_OFFSET) / TM_LENGTH_SEG ELSE 1 END TM_FIRST_BUCKET_RATIO,  CASE WHEN BUCKET_END &gt;= TM_BUC
KET_START + 2 THEN :B9 / TM_LENGTH_SEG ELSE NULL END TM_MIDDLE_BUCKETS_RATIO,  CASE WHEN TM_BUCKET_START != BUCKET_END THEN BUCKET_END_OFFSET / TM_LENGTH_SEG ELSE NULL END TM_LAST_BUCKET_RATIO,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS DELTA_READ_REQUESTS,  DELTA_WRITE_IO_REQUESTS DELTA_WRITE_REQUESTS,  DELTA_READ_IO_BYTES DELTA_READ_BYTES,  DELTA_WRITE_IO_BYTES DELTA_WRITE_BYTES,  DELTA_INTERCONNECT_IO_BYTES DELTA_INTERCONNECT_BYTES,  DELTA_READ_MEM_BYTES DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,	START_SEG,  TRUNC(START_SEG / :B9 ) BUCKET_START,  MOD(START_SEG,  :B9 ) BUCKET_START_OFFSET,  TM_START_SEG,  TRUNC(TM_START_SEG/:B9 ) TM_BUCKET_START,  MOD(TM_START_SEG,  :B9 ) TM_BUCKET_START_OFFSET,  TRUNC(END_SEG/:B9 ) BUCKET_END,  MOD(END_SEG,  :B9 ) BUCKET_END_OFFSET,  END_SEG,  LENGTH_SEG,  TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,	DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,	SAMPLE_TIME,  TIME_INTERVAL,  CASE WHEN START_SEG &lt; 0 THEN 0 ELSE START_SEG END START_SEG,  CASE WHEN TM_START_SEG &lt; 0 THEN 0 ELSE TM_START_SEG END TM_START_SEG,  CASE WHEN END_SEG &gt; TIME_INTERVAL THEN TIME_INTERVAL ELSE END_SEG END END_SEG,  (LENGTH_SEG - (CASE WHEN START_SEG &lt; 0 THEN -START_SEG ELSE 0 END + CASE WHEN END_SEG &gt; TIME_INTERVAL THEN END_SEG - TIME_INTERVAL ELSE 0 END)) LENGTH_SEG,  (TM_LENGTH_SEG - (CASE WHEN TM_START_SEG &lt; 0 THEN -TM_START_SEG ELSE 0 END + CASE WHEN END_SEG &gt; TIME_INTERVAL THEN END_SEG - TIME_INTERVAL ELSE 0 END)) TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,	DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,  TIME_INTERVAL,  LENGTH_SEG,  TM_LENGTH_SEG,  END_SEG - TM_LENGTH_SEG TM_START_SEG,  END_SEG - LENGTH_SEG START_SEG,  END_SEG,	TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,	DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,	DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,  EXTRACT(SECOND FROM REL_SAMPLE_TIME_INT) + EXTRACT(MINUTE FROM REL_SAMPLE_TIME_INT)*60 + EXTRACT(HOUR FROM REL_SAMPLE_TIME_INT)*3600 + EXTRACT(DAY FROM REL_SAMPLE_TIME_INT)*3600*24 END_SEG,  TIME_INTERVAL,  DELTA_TIME/1000000 LENGTH_SEG,  TM_DELTA_TIME/1000000 TM_LENGTH_SEG,	TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,	DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,	DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROWNUM ROW_ID,  SESSION_ID SID,  CAST(FROM_TZ(SAMPLE_TIME,  DBTIMEZONE) AS DATE) SAMPLE_DATE,  SAMPLE_TIME,  (SAMPLE_TIME - CAST(:B8 AS TIMESTAMP)) REL_SAMPLE_TIME_INT,	TRUNC((:B7 - :B8 ) * 3600 * 24) TIME_INTERVAL,	:B8 AS BND_START_INTERVAL ,  :B7 AS BND_END_INTERVAL ,	TM_DELTA_TIME,	TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ASH0.* FROM V$ACTIVE_SESSION_HISTORY ASH0 WHERE SAMPLE_TIME BETWEEN :B6 AND :B5 AND ( (SESSION_ID = :B2 AND SESSION_SERIAL# = :B1 AND USERENV('INSTANCE') = :B3 ) OR (:B4 = 'yes' AND QC_INSTANCE_ID = :B3 AND QC_SESSION_ID = :B2 AND QC_SESSION_SERIAL# = :B1 ))) ) ASH1 WHERE SAMPLE_DATE &gt;= BND_START_INTERVAL AND SAMPLE_DATE &lt;= BND_END_INTERVAL + 120/3600/24 ) ) WHERE START_SEG &lt;= TIME_INTERVAL ) WHERE (LENGTH_SEG IS NOT NULL AND LENGTH_SEG &gt; 0) OR (TM_LENGTH_SEG IS NOT NULL AND TM_LENGTH_SEG &gt; 0)) ) GROUP BY INST_ID,  GROUP_TYPE,	BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END))) GVTF WHERE INST_ID &gt;= :B11 AND INST_ID &lt;= :B10 GROUP BY GROUP_TYPE,  BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,	TM_BUCKET_END ) GROUP BY GROUPING SETS ( (GROUP_TYPE,  BUCKET_START,  BUCKET_END),  (TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END) )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="b0n14dkbkdpbb"></a>b0n14dkbkdpbb</td><td class='awrc'><pre_sqltext class="awr">select snap_interval,  snapint_num,  retention,  retention_num,  most_recent_snap_id,  most_recent_snap_time,  mrct_snap_time_num,  status_flag,  most_recent_purge_time,	mrct_purge_time_num,  most_recent_split_id,  most_recent_split_time,  swrf_version,  registration_status,  mrct_baseline_id,  topnsql,	mrct_bltmpl_id,  src_dbid,  src_dbname,  t2s_dblink,  flush_type,  snap_align,	mrct_snap_step_tm,  mrct_snap_step_id,	tablespace_name from wrm$_wr_control where dbid = :dbid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="b7tjac76r5nmd"></a>b7tjac76r5nmd</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '4';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhs63jbrb30ru"></a>bhs63jbrb30ru</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '13';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bjck50zs3nc95"></a>bjck50zs3nc95</td><td class='awrc'><pre_sqltext class="awr">insert into  WRH$_SYSSTAT	(dbid,	per_pdb,  con_dbid,  snap_id,  instance_number,  stat_id,  value)  select /*+ use_hash(v$sysstat) */  :dbid,  0 per_pdb,   :srcdbid  con_dbid,	 :snap_id,  :instance_number,  stat_id,  value FROM   v$sysstat    sysstat  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bqwwfnsg2f57w"></a>bqwwfnsg2f57w</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '9';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';

v_hotspot_mb  NUMBER := '8';
WORKLOAD REPOSITORY report for

DB Name 	DB Id	 Unique Name DB Role	      Edition Release	 RAC CDB
v_hotspot_offset_mb NUMBER := '16';
------------ ----------- ----------- ---------------- ------- ---------- --- ---
P30DB	      3393773525 p30db	     PRIMARY	      EE      19.0.0.0.0 YES NO
v_hotspot_modulus  PLS_INTEGER := '3';

Instance     Inst Num Startup Time
------------ -------- ---------------

p30db1		    1 09-Feb-20 11:12

Host Name	 Platform			  CPUs Cores Sockets Memory(GB)
v_sleep_modulus PLS_INTEGER := '0';
---------------- -------------------------------- ---- ----- ------- ----------
mcracpoc1.exampl Linux x86 64-bit		     8	   4	   1	  31.40

	      Snap Id	   Snap Time	  Sessions Curs/Sess Instances
v_sleep_min NUMBER := '.1';
	    --------- ------------------- -------- --------- ---------
Begin Snap:	  141 10-Feb-20 11:21:15       109	 2.3	     2
  End Snap:	  142 10-Feb-20 11:31:19	91	 1.9	     2
v_sleep_max NUMBER := '.5';
   Elapsed:		  10.07 (mins)
   DB Time:		 180.43 (mins)

v_scan_query_pct PLS_INTEGER := '0';
Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name
v_obfuscate VARCHAR(5)	:= 'FALSE';
---------------------------------------- ------- ------ ------------------------
Top SQL Statements			   17.92  99.00 ADDM:3393773525_1_142
"User I/O" wait Class			   17.92  88.94 ADDM:3393773525_1_142

Top Segments by "User I/O" and "Cluster"   17.92  25.93 ADDM:3393773525_1_142
Global Cache Messaging			   17.92   5.65 ADDM:3393773525_1_142
Undersized SGA				   17.92   3.59 ADDM:3393773525_1_142

Load Profile			Per Second   Per Transaction  Per Exec	Per Call
~~~~~~~~~~~~~~~ 	   ---------------   --------------- --------- ---------
	     DB Time(s):	      17.9		 0.1	  0.01	   54.95
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
	      DB CPU(s):	       1.4		 0.0	  0.00	    4.22
      Background CPU(s):	       0.6		 0.0	  0.00	    0.00
      Redo size (bytes):	 503,031.6	     2,811.5
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
  Logical read (blocks):	   8,845.0		49.4
	  Block changes:	   1,475.2		 8.3
 Physical read (blocks):	   3,425.6		19.2

Physical write (blocks):	     497.7		 2.8
       Read IO requests:	   3,425.5		19.2
      Write IO requests:	     479.0		 2.7
	   Read IO (MB):	      26.8		 0.2
v_num_tmp NUMBER := 0;
	  Write IO (MB):	       3.9		 0.0
	   IM scan rows:	       0.0		 0.0
Session Logical Read IM:	       0.0		 0.0

 RAC GC blocks received:	      35.4		 0.2
   RAC GC blocks served:	      26.4		 0.2
	     User calls:	       0.3		 0.0
v_loop_cnt PLS_INTEGER := 0;
	   Parses (SQL):	       2.4		 0.0
      Hard parses (SQL):	       0.0		 0.0
     SQL Work Area (MB):	       0.2		 0.0
		 Logons:	       0.0		 0.0
v_rowcnt PLS_INTEGER := 0;
	    User logons:	       0.0		 0.0
	 Executes (SQL):	   1,195.1		 6.7
	      Rollbacks:	       0.0		 0.0
v_updates_cnt PLS_INTEGER := 0;
	   Transactions:	     178.9

Instance Efficiency Percentages (Target 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
v_selects_cnt PLS_INTEGER := 0;
	    Buffer Nowait %:  100.00	   Redo NoWait %:  100.00
	    Buffer  Hit   %:   61.27	In-memory Sort %:  100.00
	    Library Hit   %:  100.06	    Soft Parse %:   99.73

	 Execute to Parse %:   99.80	     Latch Hit %:   99.98
Parse CPU to Parse Elapsd %:   35.71	 % Non-Parse CPU:  100.00
	  Flash Cache Hit %:	0.00
v_random_access_queries_cnt PLS_INTEGER := 0;

Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					   Total Wait	    Avg   % DB Wait
v_scan_queries_cnt PLS_INTEGER := 0;
Event				     Waits Time (sec)	   Wait   time Class

------------------------------ ----------- ---------- --------- ------ --------
db file sequential read 	 2,066,562     9628.3	 4.66ms   88.9 User I/O
DB CPU						831.8		   7.7
v_do_scan_query BOOLEAN :=FALSE;
gc cr grant 2-way		   916,502	501.3  546.98us    4.6 Cluster
gc current grant 2-way		   165,883	 92.1  555.33us     .9 Cluster
gc current grant read-mostly i	    17,523	 21.4	 1.22ms     .2 Cluster
v_scan_query_quota  BOOLEAN := FALSE;
gc current block 2-way		    12,735	  8.3  653.81us     .1 Cluster
gc cr block 2-way		     5,001	  5.9	 1.18ms     .1 Cluster
gc current block busy		     3,194	  2.3  729.06us     .0 Cluster
v_scan_workload_only BOOLEAN := FALSE;
gc cr grant congested		       428	  1.7	 4.01ms     .0 Cluster
KJC: Wait for msg sends to com	     3,168	   .3  104.26us     .0 Other

v_random_workload_only BOOLEAN := FALSE;
Wait Classes by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
							  Avg		  Avg
					Total Wait	 Wait	% DB   Active

Wait Class		    Waits	Time (sec)	 Time	time Sessions
---------------- ---------------- ---------------- ---------- ------ --------
User I/O		2,088,918	     9,635     4.61ms	89.0	 15.9

DB CPU					       832		 7.7	  1.4
System I/O		  122,510	       667     5.44ms	 6.2	  1.1
Cluster 		1,121,988	       634   565.13us	 5.9	  1.0
v_random_block PLS_INTEGER := 1;
Other			   74,656	       136     1.82ms	 1.3	  0.2
Application		       52		 0     4.62ms	  .0	  0.0
Concurrency		    1,399		 0    87.32us	  .0	  0.0
v_tmp PLS_INTEGER;
Network 		      520		 0    74.15us	  .0	  0.0
Commit				4		 0     5.76ms	  .0	  0.0
Configuration			6		 0   526.50us	  .0	  0.0

v_now PLS_INTEGER;
Host CPU
~~~~~~~~		  Load Average
 CPUs Cores Sockets	Begin	    End     %User   %System	 %WIO	  %Idle
v_brick_wall PLS_INTEGER;
----- ----- ------- --------- --------- --------- --------- --------- ---------
    8	  4	  1	11.33	  14.74      15.5      20.2	 46.4	   55.7

Instance CPU

~~~~~~~~~~~~
	      % of total CPU for Instance:	27.3
	      % of busy  CPU for Instance:	61.6
v_begin_time PLS_INTEGER;
  %DB time waiting for CPU - Resource Mgr:	 0.0

IO Profile		    Read+Write/Second	  Read/Second	 Write/Second
~~~~~~~~~~		    ----------------- --------------- ---------------
v_end_time PLS_INTEGER;
	    Total Requests:	      4,235.1	      3,431.1		804.0
	 Database Requests:	      3,904.5	      3,425.5		479.0
	Optimized Requests:		  0.0		  0.0		  0.0
v_total_time PLS_INTEGER;
	     Redo Requests:		324.3		  0.9		323.4
		Total (MB):		 32.5		 27.6		  5.0
	     Database (MB):		 30.7		 26.8		  3.9
v_begin_cpu_tm PLS_INTEGER;
      Optimized Total (MB):		  0.0		  0.0		  0.0
		 Redo (MB):		  1.8		  0.7		  1.1
	 Database (blocks):	      3,923.3	      3,425.6		497.7
 Via Buffer Cache (blocks):	      3,923.0	      3,425.6		497.4
v_end_cpu_tm PLS_INTEGER;
	   Direct (blocks):		  0.3		  0.0		  0.3

Memory Statistics
~~~~~~~~~~~~~~~~~			Begin	       End
v_total_cpu_tm PLS_INTEGER;
				 ------------ ------------
		  Host Mem (MB):     32,156.0	  32,156.0
		   SGA use (MB):      9,664.0	   9,664.0

		   PGA use (MB):      1,370.6	   1,275.3
    % Host Mem used for SGA+PGA:	34.32	     34.02

Cache Sizes			  Begin        End
v_do_sleeps BOOLEAN := FALSE;
~~~~~~~~~~~		     ---------- ----------
	       Buffer Cache:	 8,000M     8,000M  Std Block Size:	    8K
v_loop_control BOOLEAN := FALSE;
	   Shared Pool Size:	 1,063M     1,065M	Log Buffer:    20,612K
	     In-Memory Area:	     0M 	0M

 Shared Pool Statistics        Begin	End
v_update_quota BOOLEAN := FALSE;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ------  ------
	     Memory Usage %:   90.48   89.53
    % SQL with executions>1:   85.90   86.23
  % Memory for SQL w/exec>1:   90.47   90.31
v_select_only_workload BOOLEAN := FALSE;


Time Model Statistics			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> DB Time represents total time in user calls
v_update_only_workload BOOLEAN := FALSE;
-> DB CPU represents CPU time of foreground processes
-> Total CPU Time represents foreground and background processes
-> Statistics including the word "background" measure background process
v_do_update BOOLEAN := FALSE;
   time, therefore do not contribute to the DB time statistic
-> Ordered by % of DB time in descending order, followed by Statistic Name

v_do_hot_schema BOOLEAN := FALSE;
								% of  % of Total
Statistic Name					     Time (s) DB Time	CPU Time
------------------------------------------ ------------------ ------- ----------
sql execute elapsed time			     10,825.6	100.0
v_stop_immediate BOOLEAN := FALSE;
DB CPU							831.8	  7.7	    68.4
PL/SQL execution elapsed time				 33.7	   .3
parse time elapsed					  0.0	   .0
v_sharing_schema BOOLEAN := FALSE;
connection management call elapsed time 		  0.0	   .0
repeated bind elapsed time				  0.0	   .0
DB time 					     10,825.8
background elapsed time 			      1,029.3
background cpu time					384.2		    31.6
total CPU time					      1,216.1
			  ------------------------------------------------------
v_seed VARCHAR2(128);

Operating System Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> *TIME statistic values are diffed.
   All others display actual values.  End Value is displayed if different
-> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name

Statistic				   Value	End Value
v_home_schema_str VARCHAR2(80);
------------------------- ---------------------- ----------------
FREE_MEMORY_BYTES		   4,385,628,160    4,645,376,000
INACTIVE_MEMORY_BYTES		   2,031,947,776    2,031,779,840
v_scratch VARCHAR2(200) ;
BUSY_TIME				 197,486
IDLE_TIME				 248,144
IOWAIT_TIME				 206,699
NICE_TIME				       0

SYS_TIME				  89,859
USER_TIME				  68,886
LOAD					      11	       15
RSRC_MGR_CPU_WAIT_TIME			       0
v_cpu_pct NUMBER(6, 3);
PHYSICAL_MEMORY_BYTES		  33,717,977,088
NUM_CPUS				       8
NUM_CPU_CORES				       4
NUM_CPU_SOCKETS 			       1
v_my_serial NUMBER(16);
GLOBAL_RECEIVE_SIZE_MAX 	       4,194,304
GLOBAL_SEND_SIZE_MAX		       1,048,576
TCP_RECEIVE_SIZE_DEFAULT		  87,380

TCP_RECEIVE_SIZE_MAX		       6,291,456
TCP_RECEIVE_SIZE_MIN			   4,096
TCP_SEND_SIZE_DEFAULT			  16,384
TCP_SEND_SIZE_MAX		       4,194,304
BEGIN
TCP_SEND_SIZE_MIN			   4,096
			  ------------------------------------------------------


Operating System Statistics - Detail	 DB/Inst: P30DB/p30db1	Snaps: 141-142

Snap Time	    Load    %busy    %user     %sys    %idle  %iowait
--------------- -------- -------- -------- -------- -------- --------
v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
10-Feb 11:21:15     11.3      N/A      N/A	N/A	 N/A	  N/A
10-Feb 11:31:19     14.7     44.3     15.5     20.2	55.7	 46.4
			  ------------------------------------------------------

Foreground Wait Class			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> ordered by wait time desc, waits desc
EXECUTE IMMEDIATE v_home_schema_str;
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
-> Captured Time accounts for	     102.5%  of Total DB time	   10,825.84 (s)
-> Total FG Wait Time:		  10,262.33 (s)  DB CPU time:	      831.83 (s)

				     %Time	Total Wait

Wait Class		       Waits -outs	  Time (s)   Avg wait  %DB time
-------------------- --------------- ----- --------------- ---------- ---------
User I/O		   2,066,564	 0	     9,628     4.66ms	   88.9
DB CPU						       832		    7.7

Cluster 		   1,121,370	 0	       633   564.86us	    5.9
Other			       4,141	 9		 1   143.43us	    0.0
Commit				   4	 0		 0     5.76ms	    0.0
IF ( v_hot_schema_modulus != 0 ) THEN
System I/O			   8	 0		 0     2.49ms	    0.0
Concurrency			   5	 0		 0   174.00us	    0.0
Network 			  38	 0		 0    10.42us	    0.0
Application			   0			 0		    0.0
	v_do_hot_schema := TRUE;
Configuration			   0			 0		    0.0
			  ------------------------------------------------------


END IF;
Foreground Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Only events with Total Wait Time (s) >= .001 are shown

-> ordered by wait time desc, waits desc (idle events last)
IF ( v_sleep_modulus != 0 )	  THEN
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % DB
Event				 Waits -outs Time (s)  Avg wait     /txn   time
	v_do_sleeps := TRUE;
-------------------------- ----------- ----- -------- --------- -------- ------
db file sequential read      2,066,562		9,628	 4.66ms     19.1   88.9
gc cr grant 2-way	       916,502		  501  546.98us      8.5    4.6
END IF;
gc current grant 2-way	       165,883		   92  555.33us      1.5     .9
gc current grant read-most	17,523		   21	 1.22ms      0.2     .2
gc current block 2-way		12,735		    8  653.81us      0.1     .1
gc cr block 2-way		 5,001		    6	 1.18ms      0.0     .1

gc current block busy		 3,194		    2  729.06us      0.0     .0
gc cr grant congested		   428		    2	 4.01ms      0.0     .0
KJC: Wait for msg sends to	 3,168		    0  104.26us      0.0     .0
gc current grant congested	    83		    0	 3.75ms      0.0     .0
latch: enqueue hash chains	   130		    0  443.84us      0.0     .0
latch free			   156		    0  350.96us      0.0     .0
IF ( v_max_loop_iterations &gt; 0 )  THEN
latch: gc element		    91		    0  595.68us      0.0     .0
latch: redo allocation		    49		    0  476.43us      0.0     .0
log file sync			     4		    0	 5.76ms      0.0     .0
gc cr block congested		     3		    0	 7.29ms      0.0     .0
control file sequential re	     8		    0	 2.49ms      0.0     .0
	v_loop_control := TRUE ;
gc current block congested	     6		    0	 3.30ms      0.0     .0
latch: gcs resource hash	    67		    0  276.85us      0.0     .0
IPC send completion sync	    28		    0  582.39us      0.0     .0
gc current grant busy		    12		    0  917.83us      0.0     .0
PX Deq: reap credit		   368	 100	    0	29.38us      0.0     .0
latch: object queue header	    12		    0  672.92us      0.0     .0
END IF;
latch: cache buffers lru c	    38		    0  188.71us      0.0     .0
enq: PS - contention		     9		    0  667.33us      0.0     .0
Disk file Mirror Read		     2		    0	 2.73ms      0.0     .0
PX Deq: Slave Session Stat	    15		    0  281.27us      0.0     .0

PGA memory operation		     4		    0  355.00us      0.0     .0
watchdog main loop		   804		2,412 3000.03ms      0.0
PX Deq: Execution Msg		    45		    1	33.02ms      0.0
PX Deq: Msg Fragment		   120		    0  457.83us      0.0
IF ( v_update_pct = 0 ) 	  THEN
SQL*Net message from clien	    38		    0	 1.16ms      0.0
PX Deq Credit: send blkd	    53		    0  176.08us      0.0
			  ------------------------------------------------------

	v_select_only_workload := TRUE;

Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
END IF;
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg

Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
log file parallel write 	95,209	   0	  607	 6.37ms      0.9   58.9
IF ( v_update_pct = 100 )	  THEN
LGWR any worker group		32,717	   0	  104	 3.18ms      0.3   10.1
db file parallel write		19,467	   0	   47	 2.43ms      0.2    4.6
LGWR all worker groups		 2,338	   0	   17	 7.24ms      0.0    1.6
control file sequential re	 2,818	   0	    8	 2.94ms      0.0     .8
	v_update_only_workload := TRUE;
LGWR worker group ordering	 3,536	   0	    5	 1.50ms      0.0     .5
Disk file Mirror Read		   831	   0	    4	 5.29ms      0.0     .4
IMR slave acknowledgement	 1,812	   0	    4	 2.12ms      0.0     .4
END IF;
log file sequential read	   224	   0	    3	12.33ms      0.0     .3
control file parallel writ	   280	   0	    2	 6.88ms      0.0     .2
Sync ASM rebalance		    54	   0	    1	27.57ms      0.0     .1
ASM file metadata operatio	 2,662	   0	    1  393.71us      0.0     .1

KSV master wait 		   779	  58	    1	 1.14ms      0.0     .1
db file sequential read 	   189	   0	    1	 4.65ms      0.0     .1
ASM IO for non-blocking po	21,050	   0	    1	31.34us      0.2     .1
IF ( v_scan_query_pct = 0 ) 	THEN
gc current block busy		   256	   0	    0	 1.19ms      0.0     .0
PX Deq: reap credit		10,915	 100	    0	27.57us      0.1     .0
gcs log flush sync		   277	   0	    0	 1.06ms      0.0     .0
DFS lock handle 		   266	 100	    0  824.60us      0.0     .0
	v_random_workload_only := TRUE;
enq: TM - contention		     2	   0	    0	99.00ms      0.0     .0
AQ: RAC AQ Network		 6,031	 100	    0	30.65us      0.1     .0
CGS wait for IPC msg		 6,124	 100	    0	27.66us      0.1     .0
END IF;
direct path write temp		    30	   0	    0	 4.70ms      0.0     .0
latch free			   534	   0	    0  243.65us      0.0     .0
DLM cross inst call comple	   154	   0	    0  818.57us      0.0     .0
gc cr block busy		    22	   0	    0	 5.30ms      0.0     .0

oracle thread bootstrap 	     4	   0	    0	23.76ms      0.0     .0
gc cr block 2-way		   114	   0	    0  599.14us      0.0     .0
db file scattered read		    15	   0	    0	 4.15ms      0.0     .0
IF ( v_scan_query_pct = 100 ) 	THEN
enq: CF - contention		    64	  83	    0  878.80us      0.0     .0
Disk file operations I/O	   231	   0	    0  209.00us      0.0     .0
gc current grant busy		    98	   0	    0  473.67us      0.0     .0
library cache lock		    54	   0	    0  838.28us      0.0     .0
	v_scan_workload_only := TRUE;
db file async I/O submit	 4,492	   0	    0	 9.71us      0.0     .0
enq: RO - fast object reus	    50	   0	    0  843.24us      0.0     .0
latch: gcs resource hash	   125	   0	    0  318.28us      0.0     .0
END IF;
IPC group service call		   463	   0	    0	82.20us      0.0     .0
reliable message		    17	   0	    0	 2.21ms      0.0     .0
library cache pin		    54	   0	    0  684.39us      0.0     .0

kjctssqmg: quick message s	    55	 100	    0  618.56us      0.0     .0
gc current grant 2-way		    61	   0	    0  539.48us      0.0     .0
LGWR wait for redo copy 	    97	   0	    0  333.71us      0.0     .0
direct path write		     6	   0	    0	 5.14ms      0.0     .0
v_seconds_to_run := v_seconds_to_run * 100 ;
gc current block 2-way		    34	   0	    0  891.09us      0.0     .0
ksxr poll remote instances	   827	 100	    0	35.31us      0.0     .0
CSS operation: data query	    19	   0	    0	 1.48ms      0.0     .0

enq: WF - contention		    20	   0	    0	 1.31ms      0.0     .0
row cache lock			    22	 100	    0	 1.18ms      0.0     .0
latch: redo allocation		    71	   0	    0  344.15us      0.0     .0
PX Deq: Join ACK		    13	   0	    0	 1.84ms      0.0     .0
CSS operation: data update	    19	   0	    0	 1.20ms      0.0     .0
IPC send completion sync	   612	  99	    0	32.06us      0.0     .0
SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
latch: cache buffers lru c	    54	   0	    0  349.33us      0.0     .0
gc cr disk read 		    28	   0	    0  664.71us      0.0     .0
gc cr multi block mixed 	     6	   0	    0	 2.65ms      0.0     .0
KJC: Wait for msg sends to	    21	   0	    0  553.76us      0.0     .0

enq: PS - contention		    11	  36	    0	  .97ms      0.0     .0
latch: gc element		    41	   0	    0  251.66us      0.0     .0
gc buffer busy release		     1	   0	    0	 8.81ms      0.0     .0
libcache interrupt action	 1,259	   0	    0	 6.49us      0.0     .0
-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');

Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-- DBMS_RANDOM.seed (val =&gt; v_seed);
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg

Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
enq: CO - master slave det	    10	 100	    0  766.30us      0.0     .0
os thread creation		     4	   0	    0	 1.86ms      0.0     .0
v_begin_time := DBMS_UTILITY.GET_TIME();
gc cr grant 2-way		     6	   0	    0	 1.12ms      0.0     .0
ges inquiry response		    10	   0	    0  551.50us      0.0     .0
gc current multi block req	     5	   0	    0	  .98ms      0.0     .0
enq: FB - contention		     7	   0	    0  647.14us      0.0     .0
v_now := v_begin_time ;
latch: MGA shared context	     3	   0	    0	 1.46ms      0.0     .0
enq: HW - contention		     6	   0	    0  606.67us      0.0     .0
enq: SM -  contention		     4	   0	    0  828.00us      0.0     .0
gc index operation		     1	   0	    0	 2.48ms      0.0     .0
v_brick_wall := v_now + v_seconds_to_run ;
latch: enqueue hash chains	     3	   0	    0  647.67us      0.0     .0
latch: messages 		     5	   0	    0  384.80us      0.0     .0
PX Deq: Signal ACK EXT		    13	   0	    0  127.08us      0.0     .0
PGA memory operation		    82	   0	    0	18.94us      0.0     .0
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
enq: TA - contention		     2	   0	    0  759.00us      0.0     .0
PX Deq: Slave Session Stat	    13	   0	    0  110.69us      0.0     .0
latch: ges resource hash l	     6	   0	    0  223.17us      0.0     .0

latch: cache buffers chain	     2	   0	    0  561.50us      0.0     .0
latch: checkpoint queue la	     1	   0	    0	 1.05ms      0.0     .0
----------------------------------------------------------------------------------------------------------------------
rdbms ipc message	       209,656	   5   13,664	65.17ms      1.9
PX Idle Wait			    15	   0   10,274  684.90 s      0.0
Space Manager: slave idle	 2,578	   0	9,664 3748.58ms      0.0
-- The following WHILE loop is the master work loop control
class slave wait		 7,542	  79	4,430  587.36ms      0.1
----------------------------------------------------------------------------------------------------------------------
wait for unread message on	   926	 100	1,814 1958.45ms      0.0
pmon timer			   403	 100	1,209 3000.02ms      0.0
ges remote message		17,566	   0	1,208	68.78ms      0.2
GCR sleep			 4,024	   0	1,208  300.13ms      0.0
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
DIAG idle wait			 7,551	  83	1,206  159.78ms      0.1
gcs yield cpu			41,104	 100	1,203	29.28ms      0.4
gcs remote message	     1,027,311	   0	1,085	 1.06ms      9.5
OFS idle			   202	 100	  606 3000.03ms      0.0

ASM cluster membership cha	   346	  86	  606 1750.39ms      0.0
REPL Capture/Apply: RAC AQ	    10	 100	  604	60.43 s      0.0
ASM background timer		 2,246	   0	  604  269.00ms      0.0
heartbeat redo informer 	   604	   0	  604 1000.15ms      0.0
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
SCM slave idle			 6,051	   0	  604	99.81ms      0.1
lreg timer			   201	 100	  604 3002.64ms      0.0
pman timer			   201	 100	  603 2999.68ms      0.0
PING				   555	  21	  600 1081.64ms      0.0
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
dispatcher timer		    10	 100	  600	60.01 s      0.0
AQPC idle			    20	 100	  600	30.00 s      0.0
Data Guard: Gap Manager 	    10	   0	  600	60.00 s      0.0
smon timer			     2	 100	  600  300.00 s      0.0
Data Guard: Timer		     1	   0	  600  600.00 s      0.0
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
Streams AQ: qmn slave idle	    21	   0	  588	28.00 s      0.0
Streams AQ: qmn coordinato	    42	   0	  588	14.00 s      0.0
LGWR worker group idle		85,243	   0	  573	 6.72ms      0.8
PX Deq: Execute Reply		    13	   0	    0	 7.04ms      0.0
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
PX Deq Credit: send blkd	    63	   0	    0  720.06us      0.0
RMA: IPC0 completion sync	   658	   0	    0	32.83us      0.0
SQL*Net message from clien	    19	   0	    0  877.05us      0.0
PX Deq: Parse Reply		    13	   0	    0	 1.21ms      0.0
			DBMS_LOCK.SLEEP(v_num_tmp);
			  ------------------------------------------------------


Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
		END IF;
	END IF;
-> Units for % of Total Waits:
   us is microseconds

-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    6035	  .4  85.6   7.9   4.0	 1.4	.5    .1
ASM IO for non-blocking p  21.1K    .7	61.8  21.8   6.3   5.2	 2.7   1.1    .4
ASM background starting        1 100.0
ASM file metadata operati   2664  39.7	 1.8  29.1   9.3   5.1	 3.6   4.1   7.4
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
AWR Flush		       3 100.0
CGS wait for IPC msg	    6127	 4.2  84.1   6.5   3.4	 1.1	.6    .1
CSS operation: data query     19					   100.0
CSS operation: data updat     19					   100.0
DFS lock handle 	     266			    .4	 1.1  33.5  65.0
DLM cross inst call compl    157	       9.6   1.3   1.9	 2.5   5.7  79.0
Disk file Mirror Read	     832					   100.0
Disk file operations I/O     231	 1.3  15.2  10.8   5.6	42.0  21.6   3.5
			v_sharing_schema := TRUE ;
GCR CSS group query	      19	84.2  15.8
GCR CSS group update	      18	88.9	    11.1
IMR slave acknowledgement   1812	 4.2  12.7   5.2  19.2	17.6   5.0  36.1
IPC group service call	     465    .2	  .2  10.1  37.2  41.9	 7.1   2.8    .4
IPC send completion sync     640	  .2  81.9   7.7   3.9	 1.6   2.0   2.8
KJC: Wait for msg sends t   3188		    42.0  43.8	 8.8   3.5   1.9
		ELSE
KSV master wait 	     781    .3	10.4  36.0   7.6   5.4	14.2   3.8  22.4
LGWR all worker groups	    2348	  .0	      .0    .3	  .6	.6  98.5
LGWR any worker group	   32.6K    .0	  .3	.0    .2   1.4	 2.8   5.9  89.4
LGWR wait for redo copy       97   3.1	 3.1	     8.2  19.6	29.9  20.6  15.5
			IF ( v_sharing_schema = TRUE ) THEN
LGWR worker group orderin   3532   2.2	 1.3   1.7   7.0  11.3	10.7  14.3  51.4
PGA memory operation	      86   2.3	51.2  31.4  12.8   1.2		     1.2
PX Deq: Join ACK	      13					   100.0
PX Deq: Signal ACK EXT	      13	      53.8		23.1  23.1
				EXECUTE IMMEDIATE v_home_schema_str;
PX Deq: Slave Session Sta     28	21.4   7.1  14.3  10.7	10.7  28.6   7.1
PX Deq: reap credit	   11.3K	 4.3  84.6   6.7   2.8	 1.1	.4    .1
SQL*Net message to client     57  91.2	 5.3	     1.8   1.8
Sync ASM rebalance	      54	35.2   7.4   1.9	 1.9   7.4  46.3
				v_sharing_schema := FALSE;
asynch descriptor resize      21  95.2	 4.8
buffer busy waits	       1		   100.0
control file parallel wri    279					   100.0
control file sequential r   2822	 7.5  18.9   1.2   1.2	 3.0   1.8  66.4
			END IF;
db file async I/O submit    4492  93.2	 2.6   1.2   1.4    .9	  .4	.2    .2
db file parallel write	   19.5K	  .1	.9   6.4   6.2	11.4  12.2  62.8
db file scattered read	      15					   100.0
db file sequential read     2.1M					   100.0
		END IF;
direct path write	       6					   100.0
direct path write temp	      30					   100.0
enq: CF - contention	      64				       3.1  96.9
enq: CO - master slave de     10				      20.0  80.0
	END IF;
enq: DW - contention	       1					   100.0
enq: FB - contention	      10				      40.0  60.0
enq: HW - contention	       8				      37.5  62.5
enq: PS - contention	      20				      20.0  80.0

enq: RO - fast object reu     50				      40.0  60.0
enq: SM -  contention	       4				      25.0  75.0
enq: TA - contention	       2					   100.0
enq: TD - KTF dump entrie      1					   100.0
enq: TM - contention	       2					   100.0
	-- Choose the random block. The v_do_hotspot handler that follows can override.
enq: TX - allocate ITL en      1					   100.0
enq: WF - contention	      20				      20.0  80.0
gc buffer busy release	      13			  23.1	23.1	    53.8
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

gc cr block 2-way	    5116		.0    .1    .4	  .6  19.6  79.4
----------------------------------------------------------------------------------------------------------------------
gc cr block busy	      24					   100.0
gc cr block congested	       3					   100.0
gc cr disk read 	      28				 3.6  42.9  53.6
-- The type of SQL is now determined...execute it in the following section
gc cr grant 2-way	  915.2K		      .4    .9	 3.4  59.3  36.0
gc cr grant congested	     427					   100.0

Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
----------------------------------------------------------------------------------------------------------------------
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)


						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
	IF ( v_do_update != TRUE ) THEN
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
		--
gc cr multi block mixed        6					   100.0
gc current block 2-way	   12.7K		      .3    .7	  .8  36.7  61.5
gc current block busy	    3473		      .2    .5	  .9  33.7  64.7
gc current block congeste      6					   100.0
gc current grant 2-way	  165.6K		      .5   1.0	 3.3  58.1  37.2
		-- Do a SELECT statement
gc current grant busy	     127				12.6  62.2  25.2
gc current grant congeste     83					   100.0
gc current grant read-mos  17.5K		.0    .0    .0	  .1   1.4  98.4
gc current multi block re      4					   100.0
gc current split	       5				      60.0  40.0
		-- Work out scan or random
gc index operation	       6	16.7				    83.3
gcs log flush sync	     363	 6.1   5.0   5.8   7.7	11.6  15.4  48.5
ges inquiry response	      10				      30.0  70.0
ges resource directory to      3 100.0
		IF  ( v_random_workload_only = TRUE ) THEN
kjctssqmg: quick message      55	12.7  16.4	   5.5	 1.8  12.7  50.9
ksxr poll remote instance    824	 1.0  84.7   5.6   5.9	 1.6	.8    .4
latch free		     690	 7.5   1.2   2.5  19.3	34.5  24.1  11.0
latch: MGA heap latch	       2			  50.0	50.0
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
latch: MGA shared context      1			       100.0
latch: MGA shared context      3				33.3  33.3  33.3
latch: cache buffers chai     11	18.2	    27.3  18.2	18.2   9.1   9.1
latch: cache buffers lru      92	13.0   2.2   9.8  27.2	17.4   9.8  20.7
latch: checkpoint queue l      1					   100.0
			v_do_scan_query := FALSE;
latch: enqueue hash chain    133	12.0   3.0   6.0   7.5	18.0  23.3  30.1
			v_scan_query_quota := TRUE ;
latch: gc element	     132	 6.8   4.5   9.8  18.2	19.7  17.4  23.5
latch: gcs resource hash     192	11.5   3.6   5.7  27.1	21.9  15.1  15.1
latch: ges resource hash       6	      16.7		50.0  33.3
		ELSE
latch: messages 	       9	22.2	    11.1  11.1	11.1  22.2  22.2
latch: object queue heade     14	       7.1		28.6  35.7  28.6
latch: redo allocation	     119	10.9	     7.6  16.8	27.7  16.8  20.2
latch: redo writing	       2				50.0  50.0
			IF ( v_scan_workload_only = TRUE ) THEN
latch: undo global data        3			  66.7	      33.3
libcache interrupt action   1264  94.7	 2.7   1.2    .9    .2	  .3
library cache lock	      54	       1.9		      16.7  81.5
library cache pin	      54				 1.9  25.9  72.2
log file parallel write    95.1K					   100.0
log file sequential read     224		.9  15.6   1.3	 9.8   8.5  63.8
log file sync		       4					   100.0
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
oracle thread bootstrap        4					   100.0
os thread creation	       4					   100.0
reliable message	      17					   100.0
row cache lock		      25				      12.0  88.0
undo_retention publish re      2 100.0
AQPC idle		      20					   100.0
				v_do_scan_query := TRUE;
ASM background timer	    2246				16.3   9.7  74.1
ASM cluster membership ch    345					   100.0
DIAG idle wait		    7550		      .1    .7	  .5	.8  97.9
Data Guard: Gap Manager       10					   100.0
Data Guard: Timer	       1					   100.0
GCR sleep		    4026					   100.0
				v_scan_query_quota := FALSE;
LGWR worker group idle	   85.2K   2.8	 2.5   1.4   5.7   7.9	 6.2   5.0  68.4
OFS idle		     201					   100.0
PING			     555		.5  15.3  26.8	15.5   7.6  34.2
			ELSE
PX Deq Credit: need buffe      1				     100.0
PX Deq Credit: send blkd     116	      20.7   3.4   5.2	 5.2  42.2  23.3
PX Deq: Execute Reply	      13				       7.7  92.3
				IF ( v_scan_query_quota = FALSE ) THEN
PX Deq: Execution Msg	      45				      28.9  71.1
PX Deq: Msg Fragment	     120   8.3	  .8   1.7   5.8   5.0	 4.2  18.3  55.8
PX Deq: Parse Reply	      13			   7.7		    92.3
PX Idle Wait		      15					   100.0
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT

Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
-> Ordered by Event (idle events last)

						 % of Total Waits
						v_do_scan_query := TRUE;
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
					ELSE
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
REPL Capture/Apply: RAC A     10					   100.0
RMA: IPC0 completion sync    661	24.7  64.0   5.0   4.2	 1.1	.6    .5
						v_do_scan_query := FALSE;
SCM slave idle		    6053					   100.0
SQL*Net message from clie     57				 3.5  43.9  52.6
Space Manager: slave idle   2577	  .8	.2    .2    .6	  .4	.5  97.3
					END IF;
Streams AQ: qmn coordinat     42				45.2   4.8  50.0
Streams AQ: qmn slave idl     21					   100.0
class slave wait	    7543    .0	 3.3	.4   1.2   3.3	 2.1   1.4  88.3
				ELSE
dispatcher timer	      10					   100.0
gcs remote message	      1M	 1.1   3.2   6.9  10.1	10.9  18.6  49.2
gcs yield cpu		   41.1K	 1.8	.1    .1    .1	  .0	.0  97.9
ges remote message	   17.6K	  .1	.2    .2    .5	 2.0   3.4  93.6
					-- Scan quota has been filled,	force drain some random access SELECTS
heartbeat redo informer      604					   100.0
lreg timer		     202					   100.0
pman timer		     202					   100.0
					v_do_scan_query := FALSE;
pmon timer		     402					   100.0
rdbms ipc message	  209.5K    .0	19.2	.8   2.0   4.4	 3.9   4.9  64.8
smon timer		       2					   100.0
wait for unread message o    927					   100.0
				END IF;
watchdog main loop	     808					   100.0
			  ------------------------------------------------------


			END IF;
Wait Event Histogram (up to 64 us)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
		END IF;
   us is microseconds
-> % of Total Waits: total waits for all wait classes, including Idle

-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)


						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
		IF ( v_do_scan_query != TRUE ) THEN
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    5670			    .4	85.6   7.9   6.0
			SELECT COUNT(c2) INTO v_rowcnt
ASM IO for non-blocking p  19.1K		      .7  61.8	21.8   6.3   9.4
ASM background starting        1		   100.0
			FROM cf1
ASM file metadata operati   2126		.1  39.6   1.8	29.1   9.3  20.2
AWR Flush		       3		   100.0
CGS wait for IPC msg	    5809			   4.2	84.1   6.5   5.2
DLM cross inst call compl     17				 9.6   1.3  89.2
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);
Disk file operations I/O      63			   1.3	15.2  10.8  72.7
GCR CSS group query	      19			  84.2	15.8
GCR CSS group update	      18			  88.9	      11.1

IMR slave acknowledgement    401			   4.2	12.7   5.2  77.9
IPC group service call	     222		      .2    .2	10.1  37.2  52.3
IPC send completion sync     574			    .2	81.9   7.7  10.3
KJC: Wait for msg sends t   1338				      42.0  58.0
			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
KSV master wait 	     423		      .3  10.4	36.0   7.6  45.8
		ELSE
LGWR all worker groups	       2			    .0		.0  99.9
LGWR any worker group	     189		      .0    .3	  .0	.2  99.4
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
LGWR wait for redo copy       14		     3.1   3.1	       8.2  85.6
LGWR worker group orderin    432		.0   2.2   1.3	 1.7   7.0  87.8

PGA memory operation	      84		     2.3  51.2	31.4  12.8   2.3
			v_scan_queries_cnt := v_scan_queries_cnt + 1;
PX Deq: Signal ACK EXT	       7				53.8	    46.2
PX Deq: Slave Session Sta     12			  21.4	 7.1  14.3  57.1
PX Deq: reap credit	   10.8K			   4.3	84.6   6.7   4.3

SQL*Net message to client     56		    91.2   5.3	       1.8   1.8
Sync ASM rebalance	      24			  35.2	 7.4   1.9  55.6
asynch descriptor resize      21		    95.2   4.8
buffer busy waits	       1				     100.0
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
control file sequential r    779			   7.5	18.9   1.2  72.4
db file async I/O submit    4419		.3  92.9   2.6	 1.2   1.4   1.6
db file parallel write	    1441			    .1	  .9   6.4  92.6
				v_scan_query_quota := TRUE;
gc cr block 2-way	       6				  .0	.1  99.9
gc cr grant 2-way	    3976					.4  99.6
gc current block 2-way	      33					.3  99.7
gc current block busy	       7					.2  99.8
			END IF;
gc current grant 2-way	     773					.5  99.5
gc current grant read-mos      3				  .0	.0 100.0
gc index operation	       1			  16.7		    83.3
		END IF;
gcs log flush sync	      61			   6.1	 5.0   5.8  83.2
ges resource directory to      3		   100.0
kjctssqmg: quick message      16			  12.7	16.4	    70.9

ksxr poll remote instance    752			   1.0	84.7   5.6   8.7
latch free		      77			   7.5	 1.2   2.5  88.8
latch: cache buffers chai      5			  18.2	      27.3  54.5
latch: cache buffers lru      23			  13.0	 2.2   9.8  75.0
		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
latch: enqueue hash chain     28			  12.0	 3.0   6.0  78.9
latch: gc element	      28			   6.8	 4.5   9.8  78.8
latch: gcs resource hash      40			  11.5	 3.6   5.7  79.2
	ELSE
latch: ges resource hash       1				16.7	    83.3
latch: messages 	       3			  22.2	      11.1  66.7
latch: object queue heade      1				 7.1	    92.9
latch: redo allocation	      22			  10.9	       7.6  81.5
		--
libcache interrupt action   1257	       2.8  91.9   2.7	 1.2	.9    .6
library cache lock	       1				 1.9	    98.1
log file sequential read      37				  .9  15.6  83.5
		-- Do an UPDATE statement
undo_retention publish re      2		   100.0
			  ------------------------------------------------------

		--

Wait Event Histogram (up to 32 ms)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000

-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
		v_my_serial := v_my_serial + v_loop_cnt ;
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)


						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	       6  99.9	  .1	.0
		--
ASM IO for non-blocking p     89  99.6	  .3	.1    .0    .0
ASM file metadata operati    194  92.6	  .9	.9   2.3   2.7	  .4	.1    .1
CGS wait for IPC msg	       4  99.9	  .0	.0
CSS operation: data query     19	52.6  15.8  31.6
		-- Increment count of UPDATES and set UPDATE quota flag if needed
CSS operation: data updat     19	63.2  31.6	   5.3
DFS lock handle 	     173  35.0	48.5  11.7   3.0   1.9
DLM cross inst call compl    124  21.0	54.1  21.7   2.5    .6
		--
Disk file Mirror Read	     820		    82.6   5.9	 5.3   4.8   1.4
Disk file operations I/O       8  96.5	 2.2	.4    .9
IMR slave acknowledgement    641  63.9	 2.2	.4  24.6   4.3	 1.9   2.0    .7
		v_updates_cnt := v_updates_cnt + 1;
IPC group service call	       2  99.6	  .4
IPC send completion sync      18  97.2	 2.5	.3
KJC: Wait for msg sends t     62  98.1	 1.3	.5    .2    .0

KSV master wait 	     174  77.6	 1.5   1.3   8.8   9.3	 1.3	      .1
LGWR all worker groups	    2240   1.5	  .5   1.9  47.2  27.9	10.3   7.6   3.1
LGWR any worker group	   28.9K  10.6	11.7  23.6  40.1   8.5	 2.7   1.9    .8
LGWR wait for redo copy       15  84.5	10.3   4.1   1.0
		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
LGWR worker group orderin   1806  48.6	11.9  12.5  22.1   3.5	  .8	.4    .3
PGA memory operation	       1  98.8	       1.2
PX Deq: Join ACK	      13	46.2   7.7  38.5   7.7
			v_update_quota := TRUE;
PX Deq: Slave Session Sta      2  92.9	 7.1
PX Deq: reap credit	      12  99.9	  .1	.0	    .0
Sync ASM rebalance	       7  53.7	 9.3   3.7			    33.3
control file parallel wri    272		    40.9  45.2	 6.8   4.7   2.5
		END IF;
control file sequential r   1862  33.6	  .3	.0  56.0   6.5	 1.4   1.8    .4
db file async I/O submit       7  99.8	  .1	.0
db file parallel write	   12.1K  37.2	16.4  19.1  16.3   4.7	 2.8   3.1    .5
	END IF ;
db file scattered read	      15		    46.7  53.3
db file sequential read       2M		    83.2  11.1	 2.4   2.5    .8
direct path write	       6		    66.7  16.7	16.7
direct path write temp	      30		    63.3  30.0	 3.3   3.3
----------------------------------------------------------------------------------------------------------------------
enq: CF - contention	      62   3.1	73.4  23.4
enq: CO - master slave de      8  20.0	70.0  10.0
enq: DW - contention	       1       100.0
enq: FB - contention	       6  40.0	60.0
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
enq: HW - contention	       5  37.5	62.5
enq: PS - contention	      16  20.0	55.0  25.0
enq: RO - fast object reu     30  40.0	48.0   6.0   2.0   4.0
enq: SM -  contention	       3  25.0	25.0  50.0
----------------------------------------------------------------------------------------------------------------------
enq: TA - contention	       2       100.0
enq: TD - KTF dump entrie      1       100.0
enq: TX - allocate ITL en      1	     100.0
enq: WF - contention	      16  20.0	65.0  10.0		 5.0

gc buffer busy release	       7  46.2	 7.7		  23.1	23.1
gc cr block 2-way	    4060  20.6	50.9   8.4  18.8   1.2	  .1
gc cr block busy	      24	 4.2   8.3   8.3  62.5	16.7
gc cr block congested	       3			  66.7	33.3
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
gc cr disk read 	      15  46.4	32.1  21.4
gc cr grant 2-way	  329.4K  64.0	29.9   4.7   1.0    .3	  .0	.0    .0
		--
gc cr grant congested	     427	  .2  11.9  51.8  30.2	 5.9
gc cr multi block mixed        6	33.3  33.3  16.7	16.7
gc current block 2-way	    7837  38.5	53.2   7.0    .9    .3	  .0
gc current block busy	    2248  35.3	49.6  11.5   1.5   1.7	  .5	.0
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
gc current block congeste      6		    83.3  16.7
gc current grant 2-way	   61.5K  62.8	30.8   5.0   1.0    .3	  .0	.0
gc current grant busy	      32  74.8	18.1   3.9   1.6   1.6
		-- so reset flags and counters before continuing
gc current grant congeste     83	      20.5  49.4  26.5	 2.4   1.2
gc current grant read-mos  17.2K   1.6	43.0  49.3   5.1    .8	  .1	.0
gc current multi block re      4	75.0  25.0

Wait Event Histogram (up to 32 ms)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
		--
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)
		v_update_quota := FALSE;

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
		v_updates_cnt := 0;
gc current split	       2  60.0	20.0		  20.0
gc index operation	       5  16.7	33.3	    33.3	      16.7
gcs log flush sync	     176  51.5	12.7  12.4  12.7   9.1	 1.4	.3
ges inquiry response	       7  30.0	70.0
kjctssqmg: quick message      28  49.1	38.2   9.1   1.8   1.8
ksxr poll remote instance      3  99.6	  .2	.1
latch free		      76  89.0	 8.6   2.3    .1
		v_selects_cnt := 0;
latch: MGA shared context      1  66.7		    33.3
latch: cache buffers chai      1  90.9	 9.1
latch: cache buffers lru      19  79.3	17.4   3.3
latch: checkpoint queue l      1	     100.0
latch: enqueue hash chain     40  69.9	20.3   7.5   1.5    .8
	END IF;
latch: gc element	      31  76.5	14.4   3.8   3.8   1.5
latch: gcs resource hash      29  84.9	 7.8   5.7   1.0    .5
latch: messages 	       2  77.8	22.2
latch: object queue heade      4  71.4	14.3   7.1   7.1

latch: redo allocation	      24  79.8	 9.2   8.4   2.5
library cache lock	      44  18.5	64.8  13.0   1.9   1.9
library cache pin	      39  27.8	57.4  14.8
log file parallel write    93.6K		    35.8  51.9	 7.1   3.6   1.6
	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
log file sequential read     113  36.2	  .4	    19.6  10.7	 2.7  17.0  13.4
log file sync		       4	      25.0	  50.0	25.0
oracle thread bootstrap        4				     100.0
os thread creation	       4	     100.0
reliable message	      17	35.3   5.9  52.9   5.9
row cache lock		      22  12.0	44.0  40.0	   4.0
			  ------------------------------------------------------

		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,

Wait Event Histogram (up to 2 sec)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   ms is milliseconds
   s is 1024 milliseconds (approximately 1 second)
-> % of Total Waits: total waits for all wait classes, including Idle
		-- so reset flags and counters
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

		v_scan_query_quota := FALSE;
						 % of Total Waits
				 -----------------------------------------------
			   Waits
			   64ms
		v_scan_queries_cnt := 0;
Event			   to 2s <32ms <64ms <1/8s <1/4s <1/2s	 <1s   <2s  >=2s
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
ASM file metadata operati      2  99.9	  .1
		v_random_access_queries_cnt := 0;
Disk file Mirror Read	      12  98.6	 1.4
IMR slave acknowledgement     13  99.3	  .7
KSV master wait 	       1  99.9	  .1
	END IF;
LGWR all worker groups	      72  96.9	 3.0	.0
LGWR any worker group	     266  99.2	  .7	.1
LGWR worker group orderin     11  99.7	  .3	.1
Sync ASM rebalance	      18  66.7	14.8  16.7   1.9

control file parallel wri      7  97.5	 2.2	.4
control file sequential r     11  99.6	  .4
db file parallel write	     100  99.5	  .5	.0
db file sequential read    15.9K  99.2	  .8	.0    .0
	v_loop_cnt := v_loop_cnt + 1 ;
enq: TM - contention	       2	     100.0
gc cr grant 2-way	       1 100.0	  .0
log file parallel write     1498  98.4	 1.5	.1
log file sequential read      30  86.6	12.5	.9
	v_now := DBMS_UTILITY.GET_TIME();
			  ------------------------------------------------------


Wait Event Histogram (up to 2 min)	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------



Wait Event Histogram (up to 1 hr)	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------


Service Statistics			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> ordered by DB Time
	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN

							   Physical	 Logical
Service Name		      DB Time (s)   DB CPU (s)	  Reads (K)    Reads (K)
---------------------------- ------------ ------------ ------------ ------------
		-- If this is a fixed-iteration count test cycle and we've hit the number of
p30db.example.com		   10,812	   830	      2,066	   4,561
SYS$BACKGROUND				0	     1		  0	     772
SYS$USERS				0	     0		  0	       0
p30dbXDB				0	     0		  0	       0
		-- iterations then set exit flag
			  ------------------------------------------------------

Service Wait Class Stats		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Wait Class info for services in the Service Statistics section.
		v_stop_immediate := TRUE ;
-> Total Waits and Time Waited displayed for the following wait
   classes:  User I/O, Concurrency, Administrative, Network
-> Time Waited (Wt Time) in seconds

Service Name
	END IF;
----------------------------------------------------------------
 User I/O  User I/O  Concurcy  Concurcy     Admin     Admin   Network	Network
Total Wts   Wt Time Total Wts	Wt Time Total Wts   Wt Time Total Wts	Wt Time
END LOOP;
--------- --------- --------- --------- --------- --------- --------- ---------
p30db.example.com
  2065719      9624	    5	      0 	0	  0	   38	      0
SYS$BACKGROUND

    22425	  6	 1409	      0 	0	  0	  462	      0
SYS$USERS
	0	  0	    0	      0 	0	  0	    0	      0
			  ------------------------------------------------------

v_end_time := v_now ;
Top 10 Channel Waits			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top 10 Channel Waits by wait time

Channel
----------------------------------------------------------------
v_now := DBMS_UTILITY.GET_TIME();
	       Total
		Wait
      Waits Time (s)  Avg Wait
----------- -------- ---------
kxfp control signal channel
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	  7	   0  851.29us
obj broadcast channel

	 10	   0	3.16ms
			  ------------------------------------------------------
v_total_time := v_end_time - v_begin_time ;


Top Process Types by Wait Class 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
-> This table displays top process types ordered by wait class

Proce Description		     Wait Class Type  Wait Time (sec
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
----- ------------------------------ ---------------- --------------
      Others (foregrounds + unclassi User I/O		     9,689.0
      Others (foregrounds + unclassi Cluster		       636.7
LG    Log Writer Slave		     System I/O 	       609.3
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
LGWR  Redo etc. 		     Other		       121.1
DBW0  db writer process 0	     System I/O 		47.2

CKPT  checkpoint		     System I/O 		 5.9
RMS0  rac management server	     System I/O 		 5.8
LG    Log Writer Slave		     Other			 5.4
LMON  global enqueue service monitor Other			 4.0
END;</pre_sqltext></td></tr>
IMR   CGS IMR Slave		     User I/O			 2.9
CKPT  checkpoint		     User I/O			 1.3
M     MMON slave class 1	     Other			 1.2
RMS0  rac management server	     Other			  .9
O     ASM Connection Pool	     Other			  .8
<tr><td scope="row" class='awrc'><a class="awr" name="brqrryv4mja36"></a>brqrryv4mja36</td><td class='awrc'><pre_sqltext class="awr">DECLARE
M     MMON slave class 1	     User I/O			  .8
DBW0  db writer process 0	     User I/O			  .7
IMR   CGS IMR Slave		     System I/O 		  .6
M     MMON slave class 1	     Cluster			  .6
v_default_schema_number PLS_INTEGER := '1';
MMNL  Manageability Monitor Process  Other			  .6
      Others (foregrounds + unclassi Other			  .6
			  ------------------------------------------------------


v_update_pct PLS_INTEGER := '15';
Top Process Types by CPU Used		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> This table displays top process types ordered by CPU time

Proces Description		      CPU Time (sec)
------ ------------------------------ --------------
v_max_loop_iterations PLS_INTEGER := '0';
       Others (foregrounds + unclassi	       834.9
LM     global cache service process	       258.5
LG     Log Writer Slave 			52.4
VKTM   Virtual Keeper of TiMe process		32.2
v_seconds_to_run PLS_INTEGER := '600';
LGWR   Redo etc.				20.8
DBW0   db writer process 0			19.4
M      MMON slave class 1			 7.4
RS*    GCS RM Slave				 6.7
GCR    GCR Slaves (LMHB)			 3.5
v_scale PLS_INTEGER := '1048576';
IPC0   IPC Service 0				 2.9
DIA0   diagnosibility process 0 		 2.3
P      Parallel query slave			 1.7
O      ASM Connection Pool			 1.4
v_work_unit PLS_INTEGER := '4' ;
LMHB   lm heartbeat monitor			 1.4
LMD0   global enqueue service daemon		 1.4
LMON   global enqueue service monitor		 1.3
RMS0   rac management server			 1.1
IMR    CGS IMR Slave				 1.0
LMD1   global enqueue service daemon		 1.0
SCM    DLM Statistics Collection and		  .8
			  ------------------------------------------------------


SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.3% of Total DB Time (s):	   10,826
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      10,826

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
	 8,976.5	610,478 	 0.01	82.9	6.3   90.9 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	 1,654.8	107,698 	 0.02	15.3	7.4   88.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	   568.1	      1        568.15	 5.2	7.6   89.7 b7tjac76r5nmd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

v_redo_stress  VARCHAR2(12) := 'LITE';
	   568.1	      1        568.15	 5.2	7.6   89.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_hot_schema_modulus PLS_INTEGER := '0';
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

v_do_hotspot   VARCHAR(7) := 'FALSE';
	   568.1	      1        568.14	 5.2	7.6   89.7 93dyj9jyyg3mj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
v_hotspot_mb  NUMBER := '8';
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_hotspot_offset_mb NUMBER := '16';

	   568.1	      1        568.13	 5.2	7.6   89.7 5wf99mx0r39xn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
v_hotspot_modulus  PLS_INTEGER := '3';
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


	   568.1	      1        568.13	 5.2	7.7   89.5 0hnb5g8vhm4u9
Module: SQL*Plus
v_sleep_modulus PLS_INTEGER := '0';
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
v_sleep_min NUMBER := '.1';
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.1	      1        568.12	 5.2	7.6   89.6 71v63sn4bfskh
Module: SQL*Plus
v_sleep_max NUMBER := '.5';
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
v_scan_query_pct PLS_INTEGER := '0';
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.1	      1        568.11	 5.2	9.3   83.9 df0pz79un9sgm
Module: SQL*Plus
v_obfuscate VARCHAR(5)	:= 'FALSE';
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo

_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.1	      1        568.10	 5.2	7.6   89.5 91g7mg52grvpz

Module: SQL*Plus

SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time

-> Captured SQL account for   98.3% of Total DB Time (s):	   10,826
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      10,826

	Elapsed 		 Elapsed Time
v_num_tmp NUMBER := 0;
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_loop_cnt PLS_INTEGER := 0;

	   568.1	      1        568.09	 5.2	6.1   92.2 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
v_rowcnt PLS_INTEGER := 0;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
v_updates_cnt PLS_INTEGER := 0;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.1	      1        568.09	 5.2	7.5   89.7 8wrvc2gfamkva
v_selects_cnt PLS_INTEGER := 0;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.1	      1        568.06	 5.2	7.6   89.6 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
v_random_access_queries_cnt PLS_INTEGER := 0;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.0	      1        568.02	 5.2	7.7   89.4 brqrryv4mja36
Module: SQL*Plus
v_scan_queries_cnt PLS_INTEGER := 0;
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo

_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.0	      1        568.00	 5.2	7.5   89.7 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

v_scan_workload_only BOOLEAN := FALSE;
	   567.8	      1        567.83	 5.2	7.6   89.6 fvmjqn5q18rmh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
v_random_workload_only BOOLEAN := FALSE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


	   567.8	      1        567.83	 5.2	7.6   89.6 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_random_block PLS_INTEGER := 1;

	   567.8	      1        567.82	 5.2	7.5   89.7 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
v_tmp PLS_INTEGER;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_now PLS_INTEGER;

SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
v_brick_wall PLS_INTEGER;
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time

-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.3% of Total DB Time (s):	   10,826
v_begin_time PLS_INTEGER;
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      10,826

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
v_end_time PLS_INTEGER;
---------------- -------------- ------------- ------ ------ ------ -------------

	   567.8	      1        567.79	 5.2	7.5   89.8 amnkmrsjh10nv
Module: SQL*Plus
v_total_time PLS_INTEGER;
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   567.6	      1        567.62	 5.2	7.6   89.7 0rjvf5n1k4aba
v_begin_cpu_tm PLS_INTEGER;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

v_end_cpu_tm PLS_INTEGER;
	   567.5	      1        567.53	 5.2	9.1   83.9 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_total_cpu_tm PLS_INTEGER;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


			  ------------------------------------------------------


SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
v_do_sleeps BOOLEAN := FALSE;
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
v_loop_control BOOLEAN := FALSE;
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   82.9% of Total CPU Time (s):	       832
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		  832

v_update_quota BOOLEAN := FALSE;
    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
v_select_only_workload BOOLEAN := FALSE;
     564.6	610,478       0.00   67.9    8,976.5	6.3   90.9 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

v_update_only_workload BOOLEAN := FALSE;
     122.2	107,698       0.00   14.7    1,654.8	7.4   88.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
v_do_update BOOLEAN := FALSE;

      52.8	      1      52.77    6.3      568.1	9.3   83.9 df0pz79un9sgm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
v_do_hot_schema BOOLEAN := FALSE;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
v_stop_immediate BOOLEAN := FALSE;

      51.8	      1      51.76    6.2      567.5	9.1   83.9 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
v_sharing_schema BOOLEAN := FALSE;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

v_seed VARCHAR2(128);
      43.8	      1      43.81    5.3      568.0	7.7   89.4 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_home_schema_str VARCHAR2(80);
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      43.5	      1      43.47    5.2      568.1	7.7   89.5 0hnb5g8vhm4u9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      43.3	      1      43.30    5.2      568.1	7.6   89.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      43.3	      1      43.27    5.2      568.1	7.6   89.6 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
v_scratch VARCHAR2(200) ;
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      43.2	      1      43.19    5.2      568.1	7.6   89.6 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      43.2	      1      43.19    5.2      568.1	7.6   89.7 5wf99mx0r39xn
v_cpu_pct NUMBER(6, 3);
Module: SQL*Plus

SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
v_my_serial NUMBER(16);
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time

-> Captured SQL account for   82.9% of Total CPU Time (s):	       832
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		  832

    CPU 		  CPU per	    Elapsed
BEGIN
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=

'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
      43.1	      1      43.14    5.2      568.1	7.6   89.7 b7tjac76r5nmd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
EXECUTE IMMEDIATE v_home_schema_str;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      43.1	      1      43.13    5.2      568.1	7.6   89.7 93dyj9jyyg3mj

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      43.1	      1      43.11    5.2      567.6	7.6   89.7 0rjvf5n1k4aba
Module: SQL*Plus
IF ( v_hot_schema_modulus != 0 ) THEN
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
	v_do_hot_schema := TRUE;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      43.0	      1      43.01    5.2      567.8	7.6   89.6 07wu9h58t4tgt
Module: SQL*Plus
END IF;
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      42.9	      1      42.90    5.2      568.1	7.6   89.5 91g7mg52grvpz
Module: SQL*Plus
IF ( v_sleep_modulus != 0 )	  THEN
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	v_do_sleeps := TRUE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      42.9	      1      42.90    5.2      567.8	7.6   89.6 fvmjqn5q18rmh
END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      42.9	      1      42.86    5.2      568.1	7.5   89.7 8wrvc2gfamkva
Module: SQL*Plus
IF ( v_max_loop_iterations &gt; 0 )  THEN
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
	v_loop_control := TRUE ;

      42.8	      1      42.85    5.2      568.0	7.5   89.7 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
END IF;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU

-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   82.9% of Total CPU Time (s):	       832
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		  832

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
IF ( v_update_pct = 0 ) 	  THEN
---------- ------------ ---------- ------ ---------- ------ ------ -------------

      42.7	      1      42.69    5.1      567.8	7.5   89.7 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
	v_select_only_workload := TRUE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

END IF;
      42.6	      1      42.63    5.1      567.8	7.5   89.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      34.4	      1      34.45    4.1      568.1	6.1   92.2 5mrhuphq8yfw1
IF ( v_update_pct = 100 )	  THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	v_update_only_workload := TRUE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------

END IF;

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.

-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
IF ( v_scan_query_pct = 0 ) 	THEN
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	 99.9% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
	v_random_workload_only := TRUE;
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
   8,157.1	610,478       0.01   84.7    8,976.5	6.3   90.9 bhdvtsvjhgvrh
Module: SQL*Plus
END IF;
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

   1,457.0	107,698       0.01   15.1    1,654.8	7.4   88.0 35dumc2tpr9dv
Module: SQL*Plus

UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     523.8	      1     523.77    5.4      568.1	6.1   92.2 5mrhuphq8yfw1
Module: SQL*Plus
IF ( v_scan_query_pct = 100 ) 	THEN
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
	v_scan_workload_only := TRUE;

     509.9	      1     509.91    5.3      567.8	7.5   89.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
END IF;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


     509.6	      1     509.59    5.3      568.1	7.5   89.7 8wrvc2gfamkva
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

v_seconds_to_run := v_seconds_to_run * 100 ;
     509.6	      1     509.58    5.3      568.0	7.5   89.7 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


     509.5	      1     509.49    5.3      568.1	7.6   89.7 93dyj9jyyg3mj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     509.4	      1     509.41    5.3      567.8	7.5   89.7 26ka4yp1faxn2
Module: SQL*Plus
SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     509.4	      1     509.40    5.3      568.1	7.6   89.7 b7tjac76r5nmd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

-- DBMS_RANDOM.seed (val =&gt; v_seed);
     509.4	      1     509.40    5.3      568.1	7.6   89.7 5wf99mx0r39xn
Module: SQL*Plus

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL

   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
v_begin_time := DBMS_UTILITY.GET_TIME();
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	 99.9% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
v_now := v_begin_time ;
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_brick_wall := v_now + v_seconds_to_run ;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     509.2	      1     509.18    5.3      568.1	7.6   89.6 6x8682kb2y8vd
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

----------------------------------------------------------------------------------------------------------------------
     509.1	      1     509.06    5.3      567.6	7.6   89.7 0rjvf5n1k4aba
Module: SQL*Plus
-- The following WHILE loop is the master work loop control
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
----------------------------------------------------------------------------------------------------------------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     508.9	      1     508.92    5.3      567.8	7.6   89.6 fvmjqn5q18rmh
Module: SQL*Plus
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


     508.9	      1     508.91    5.3      568.1	7.6   89.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     508.8	      1     508.82    5.3      568.1	7.6   89.6 71v63sn4bfskh
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     508.7	      1     508.74    5.3      567.8	7.6   89.6 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     508.7	      1     508.72    5.3      568.1	7.6   89.5 91g7mg52grvpz
			DBMS_LOCK.SLEEP(v_num_tmp);
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		END IF;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     508.5	      1     508.45    5.3      568.1	7.7   89.5 0hnb5g8vhm4u9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
	END IF;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	 99.9% of Total User I/O Wait Time (s):
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
---------- ------------ ---------- ------ ---------- ------ ------ -------------

     508.0	      1     507.98    5.3      568.0	7.7   89.4 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			v_sharing_schema := TRUE ;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     476.5	      1     476.45    4.9      568.1	9.3   83.9 df0pz79un9sgm
		ELSE
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
			IF ( v_sharing_schema = TRUE ) THEN
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     476.3	      1     476.33    4.9      567.5	9.1   83.9 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
				EXECUTE IMMEDIATE v_home_schema_str;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

				v_sharing_schema := FALSE;
			  ------------------------------------------------------


SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
			END IF;
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,345,958
		END IF;
-> Captured SQL account for   83.8% of Total

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
	END IF;
----------- ----------- ------------ ------ ---------- ----- ----- -------------
  3,667,943	610,478 	 6.0   68.6    8,976.5	 6.3  90.9 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


    779,591	107,698 	 7.2   14.6    1,654.8	 7.4	88 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	-- Choose the random block. The v_do_hotspot handler that follows can override.
    251,038	      1    251,038.0	4.7	 568.1	 6.1  92.2 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);
    244,070	      1    244,070.0	4.6	 568.1	 7.7  89.5 0hnb5g8vhm4u9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
    244,019	      1    244,019.0	4.6	 568.0	 7.7  89.4 brqrryv4mja36
Module: SQL*Plus
				-- UPDATE quota has been filled,  force drain some SELECTs
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
				v_do_update := FALSE;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
			END IF;

    243,730	      1    243,730.0	4.6	 568.1	 7.6  89.7 93dyj9jyyg3mj
Module: SQL*Plus
		END IF;
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
	END IF;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    243,381	      1    243,381.0	4.6	 568.1	 7.6  89.7 5wf99mx0r39xn
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
----------------------------------------------------------------------------------------------------------------------
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    242,588	      1    242,588.0	4.5	 568.1	 7.6  89.6 71v63sn4bfskh
Module: SQL*Plus
-- The type of SQL is now determined...execute it in the following section
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
----------------------------------------------------------------------------------------------------------------------
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    242,504	      1    242,504.0	4.5	 568.1	 7.6  89.6 bhs63jbrb30ru
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
	IF ( v_do_update != TRUE ) THEN
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    242,272	      1    242,272.0	4.5	 568.1	 7.6  89.7 b7tjac76r5nmd
Module: SQL*Plus

SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Resources reported for PL/SQL code includes the resources used by all SQL
		--
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
		-- Do a SELECT statement
-> Total Buffer Gets:	    5,345,958
-> Captured SQL account for   83.8% of Total

		-- Work out scan or random
     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
		IF  ( v_random_workload_only = TRUE ) THEN
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)

    240,740	      1    240,740.0	4.5	 568.1	 7.5  89.7 8wrvc2gfamkva
Module: SQL*Plus
			v_do_scan_query := FALSE;
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			v_scan_query_quota := TRUE ;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    240,334	      1    240,334.0	4.5	 568.0	 7.5  89.7 72r567f4w1r2z
Module: SQL*Plus
		ELSE
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			IF ( v_scan_workload_only = TRUE ) THEN
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    239,978	      1    239,978.0	4.5	 567.8	 7.6  89.6 07wu9h58t4tgt
Module: SQL*Plus
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
				v_do_scan_query := TRUE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

				v_scan_query_quota := FALSE;
    239,968	      1    239,968.0	4.5	 567.8	 7.6  89.6 fvmjqn5q18rmh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			ELSE
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

				IF ( v_scan_query_quota = FALSE ) THEN
    239,807	      1    239,807.0	4.5	 568.1	 7.6  89.5 91g7mg52grvpz
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
    239,799	      1    239,799.0	4.5	 567.8	 7.5  89.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    239,565	      1    239,565.0	4.5	 567.6	 7.6  89.7 0rjvf5n1k4aba
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
						v_do_scan_query := TRUE;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    239,520	      1    239,520.0	4.5	 567.8	 7.5  89.7 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
					ELSE
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 141-142
						v_do_scan_query := FALSE;
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
					END IF;
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,345,958
-> Captured SQL account for   83.8% of Total
				ELSE

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
					-- Scan quota has been filled,	force drain some random access SELECTS

    239,117	      1    239,117.0	4.5	 568.1	 7.6  89.6 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
					v_do_scan_query := FALSE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    225,929	      1    225,929.0	4.2	 568.1	 9.3  83.9 df0pz79un9sgm
				END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			END IF;
    221,406	      1    221,406.0	4.1	 567.5	 9.1  83.9 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
		END IF;
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  ------------------------------------------------------



SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time

-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,070,440
-> Captured SQL account for   99.7% of Total

		IF ( v_do_scan_query != TRUE ) THEN
   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
			SELECT COUNT(c2) INTO v_rowcnt
  1,754,097	610,478        2.9   84.7    8,976.5	6.3   90.9 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			FROM cf1
    309,317	107,698        2.9   14.9    1,654.8	7.4   88.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

    114,253	      1  114,253.0    5.5      568.1	6.1   92.2 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;

    110,230	      1  110,230.0    5.3      568.0	7.7   89.4 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
		ELSE
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

    109,815	      1  109,815.0    5.3      568.1	7.7   89.5 0hnb5g8vhm4u9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=

'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
			v_scan_queries_cnt := v_scan_queries_cnt + 1;

    109,796	      1  109,796.0    5.3      568.1	7.6   89.7 5wf99mx0r39xn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=

'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
    109,732	      1  109,732.0    5.3      568.1	7.5   89.7 8wrvc2gfamkva
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
				v_scan_query_quota := TRUE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			END IF;
    109,516	      1  109,516.0    5.3      567.6	7.6   89.7 0rjvf5n1k4aba
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		END IF;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


    109,470	      1  109,470.0    5.3      568.1	7.6   89.6 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	ELSE
    109,424	      1  109,424.0    5.3      567.8	7.6   89.6 fvmjqn5q18rmh
Module: SQL*Plus

SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 141-142
		--
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,070,440
		-- Do an UPDATE statement
-> Captured SQL account for   99.7% of Total

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
		--
----------- ----------- ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,414	      1  109,414.0    5.3      567.8	7.6   89.6 07wu9h58t4tgt
		v_my_serial := v_my_serial + v_loop_cnt ;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,364	      1  109,364.0    5.3      567.8	7.5   89.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		--
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		-- Increment count of UPDATES and set UPDATE quota flag if needed
    109,287	      1  109,287.0    5.3      568.0	7.5   89.7 72r567f4w1r2z
Module: SQL*Plus
		--
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
		v_updates_cnt := v_updates_cnt + 1;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,277	      1  109,277.0    5.3      567.8	7.5   89.7 26ka4yp1faxn2
Module: SQL*Plus
		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			v_update_quota := TRUE;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,084	      1  109,084.0    5.3      568.1	7.6   89.7 93dyj9jyyg3mj
Module: SQL*Plus
		END IF;
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
	END IF ;

    109,052	      1  109,052.0    5.3      568.1	7.6   89.6 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
----------------------------------------------------------------------------------------------------------------------
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,010	      1  109,010.0    5.3      568.1	7.6   89.7 b7tjac76r5nmd
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
----------------------------------------------------------------------------------------------------------------------
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    108,938	      1  108,938.0    5.3      568.1	7.6   89.5 91g7mg52grvpz

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 141-142
		--
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,070,440
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
-> Captured SQL account for   99.7% of Total

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
		-- so reset flags and counters before continuing
----------- ----------- ---------- ------ ---------- ------ ------ -------------

    108,859	      1  108,859.0    5.3      568.1	7.6   89.6 bhs63jbrb30ru
Module: SQL*Plus
		--
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
		v_update_quota := FALSE;

    100,552	      1  100,552.0    4.9      568.1	9.3   83.9 df0pz79un9sgm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    100,305	      1  100,305.0    4.8      567.5	9.1   83.9 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
		v_updates_cnt := 0;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
		v_selects_cnt := 0;
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  ------------------------------------------------------


	END IF;
SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 141-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)

-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,070,369
-> Captured SQL account for    5.3% of Total
-> Total UnOptimized Read Requests:	  2,070,369
	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
-> Captured SQL account for    5.3% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
    114,253	114,253 	 1    114,253.0    0.0	  5.5 5mrhuphq8yfw1
		-- so reset flags and counters
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    110,230	110,230 	 1    110,230.0    0.0	  5.3 brqrryv4mja36
		v_scan_query_quota := FALSE;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    109,815	109,815 	 1    109,815.0    0.0	  5.3 0hnb5g8vhm4u9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

		v_scan_queries_cnt := 0;
    109,796	109,796 	 1    109,796.0    0.0	  5.3 5wf99mx0r39xn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		v_random_access_queries_cnt := 0;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    109,732	109,732 	 1    109,732.0    0.0	  5.3 8wrvc2gfamkva
Module: SQL*Plus
	END IF;
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,516	109,516 	 1    109,516.0    0.0	  5.3 0rjvf5n1k4aba
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
	v_loop_cnt := v_loop_cnt + 1 ;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	v_now := DBMS_UTILITY.GET_TIME();
    109,470	109,470 	 1    109,470.0    0.0	  5.3 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    109,424	109,424 	 1    109,424.0    0.0	  5.3 fvmjqn5q18rmh
Module: SQL*Plus
	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,414	109,414 	 1    109,414.0    0.0	  5.3 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

		-- If this is a fixed-iteration count test cycle and we've hit the number of
SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 141-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
		-- iterations then set exit flag
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,070,369
-> Captured SQL account for    5.3% of Total
-> Total UnOptimized Read Requests:	  2,070,369
		v_stop_immediate := TRUE ;
-> Captured SQL account for    5.3% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
	END IF;
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
END LOOP;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,364	109,364 	 1    109,364.0    0.0	  5.3 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,287	109,287 	 1    109,287.0    0.0	  5.3 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,277	109,277 	 1    109,277.0    0.0	  5.3 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
v_end_time := v_now ;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,084	109,084 	 1    109,084.0    0.0	  5.3 93dyj9jyyg3mj
v_now := DBMS_UTILITY.GET_TIME();
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    109,052	109,052 	 1    109,052.0    0.0	  5.3 6x8682kb2y8vd
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_total_time := v_end_time - v_begin_time ;

    109,010	109,010 	 1    109,010.0    0.0	  5.3 b7tjac76r5nmd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    108,938	108,938 	 1    108,938.0    0.0	  5.3 91g7mg52grvpz
Module: SQL*Plus
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

    108,859	108,859 	 1    108,859.0    0.0	  5.3 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,552	100,552 	 1    100,552.0    0.0	  4.9 df0pz79un9sgm
END;</pre_sqltext></td></tr>

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 141-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
<tr><td scope="row" class='awrnc'><a class="awr" name="bxpcry2tpc217"></a>bxpcry2tpc217</td><td class='awrnc'><pre_sqltext class="awr">select /*+ opt_param('parallel_execution_enabled',
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,070,369
-> Captured SQL account for    5.3% of Total
-> Total UnOptimized Read Requests:	  2,070,369
-> Captured SQL account for    5.3% of Total
				   'false') EXEC_FROM_DBMS_XPLAN */ * from gv$all_sql_plan where 1=0</pre_sqltext></td></tr>
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
Module: SQL*Plus
<tr><td scope="row" class='awrc'><a class="awr" name="dcbt0gjzjwwbs"></a>dcbt0gjzjwwbs</td><td class='awrc'><pre_sqltext class="awr">insert into  wrh$_sga_target_advice  (dbid,  per_pdb,  con_dbid,  snap_id,  instance_number,     SGA_SIZE,  SGA_SIZE_FACTOR,  ESTD_DB_TIME,  ESTD_PHYSICAL_READS)	select	:dbid,	0 per_pdb,   :srcdbid  con_dbid,   :snap_id,  :instance_number,     SGA_SIZE,  SGA_SIZE_FACTOR,  ESTD_DB_TIME,	ESTD_PHYSICAL_READS  FROM   v$sga_target_advice    ta  WHERE (1 = 1) </pre_sqltext></td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td scope="row" class='awrnc'><a class="awr" name="df0pz79un9sgm"></a>df0pz79un9sgm</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
v_default_schema_number PLS_INTEGER := '8';

    100,305	100,305 	 1    100,305.0    0.0	  4.8 bqwwfnsg2f57w
v_update_pct PLS_INTEGER := '15';
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
v_max_loop_iterations PLS_INTEGER := '0';
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
v_seconds_to_run PLS_INTEGER := '600';
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     92,540	 92,540    610,478	    0.2    0.0	  4.5 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )
v_scale PLS_INTEGER := '1048576';

			  ------------------------------------------------------


SQL ordered by Executions		 DB/Inst: P30DB/p30db1	Snaps: 141-142
v_work_unit PLS_INTEGER := '4' ;
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Executions:	     722,307
-> Captured SQL account for   99.6% of Total

					      Elapsed
 Executions   Rows Processed  Rows per Exec   Time (s)	%CPU   %IO    SQL Id
------------ --------------- -------------- ---------- ----- ----- -------------
v_redo_stress  VARCHAR2(12) := 'LITE';
     610,478	     610,493		1.0    8,976.5	 6.3  90.9 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

     107,698	     323,094		3.0    1,654.8	 7.4	88 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
v_hot_schema_modulus PLS_INTEGER := '0';
< :B1 )

	 331		 330		1.0	   0.0	93.6	 0 24djtk7r8fz33
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
v_do_hotspot   VARCHAR(7) := 'FALSE';
2 AND tsn = :3 AND objid = :4

	 159		 159		1.0	   0.1	74.1  16.7 3dbzmtf9ahvzt
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
v_hotspot_mb  NUMBER := '8';
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	  89		  89		1.0	   0.2	11.6   4.9 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
v_hotspot_offset_mb NUMBER := '16';
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	  57		  57		1.0	   0.1	20.1  66.4 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
v_hotspot_modulus  PLS_INTEGER := '3';
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds


	  43		  43		1.0	   0.0	35.8  28.7 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	  30		  30		1.0	   0.0	42.6	 0 f80h0xb1qvbsk
v_sleep_modulus PLS_INTEGER := '0';
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

	  25		  25		1.0	   0.0	73.2	 0 fs4p95w7yg25b
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
bj# and tp.obj# = :oid
v_sleep_min NUMBER := '.1';

	  24		  24		1.0	   0.0	84.8	 0 6n2qqv1brfhpp
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
v_sleep_max NUMBER := '.5';
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

			  ------------------------------------------------------


v_scan_query_pct PLS_INTEGER := '0';
SQL ordered by Parse Calls		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Parse Calls:		1,458
-> Captured SQL account for   64.7% of Total

			    % Total
v_obfuscate VARCHAR(5)	:= 'FALSE';
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
	 331	      331     22.70 24djtk7r8fz33
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :

2 AND tsn = :3 AND objid = :4

	 159	      159     10.91 3dbzmtf9ahvzt

v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

v_update_only_workload BOOLEAN := FALSE;
	  89	       89      6.10 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
v_do_update BOOLEAN := FALSE;
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
v_do_hot_schema BOOLEAN := FALSE;
,:bind3,:step_id)

v_stop_immediate BOOLEAN := FALSE;
	  43	       43      2.95 fn5s5p6hr6702
v_sharing_schema BOOLEAN := FALSE;
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)
v_seed VARCHAR2(128);

	  30	       30      2.06 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

v_home_schema_str VARCHAR2(80);
	  25	       25      1.71 fs4p95w7yg25b
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
bj# and tp.obj# = :oid
v_scratch VARCHAR2(200) ;

	  24	       24      1.65 6n2qqv1brfhpp
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name

 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

v_cpu_pct NUMBER(6, 3);
	  22	       22      1.51 5cu0x10yu88sw
v_my_serial NUMBER(16);
merge into sys.wri$_index_usage iu us
ing dual on (
iu.obj# = :objn) when mat

ched then update

	  20	       20      1.37 bxpcry2tpc217
select /*+ opt_param('parallel_execution_enabled',
BEGIN
 'false') EXEC_FROM_DBMS_XPLAN */ * from gv$all_sql_plan where 1=0

	  20	       20      1.37 gjaap3w3qbf8c

select count(*) from ilmobj$ where rownum = 1

	  19	       19      1.30 9babjv8yq8ru3
Module: SQL*Plus
v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;

	  18	       57      1.23 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
EXECUTE IMMEDIATE v_home_schema_str;
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds


	  16	       16      1.10 fkc81h2686aqc
select pob.parttype from sys.indpart$ ip, sys.partobj$ pob where ip.bo# = pob.o
bj# and ip.obj# = :oid


	  15	       15      1.03 94qn6y14kw01g

SQL ordered by Parse Calls		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Parse Calls:		1,458
-> Captured SQL account for   64.7% of Total

IF ( v_hot_schema_modulus != 0 ) THEN
			    % Total
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
SELECT NVL(TO_NUMBER(EXTRACT(XMLTYPE(:B2 ), :B1 )), 0) FROM DUAL

			  ------------------------------------------------------


	v_do_hot_schema := TRUE;
SQL ordered by Sharable Memory		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Only Statements with Sharable Memory greater than 1048576 are displayed

Sharable Mem (b)  Executions   % Total	  SQL Id
END IF;
---------------- ------------ -------- -------------
      13,231,793	    5	  1.18 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,

FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
IF ( v_sleep_modulus != 0 )	  THEN
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

       2,095,564	    5	  0.19 atwuyuvqkf27w
SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE, BUCKET_START, B
	v_do_sleeps := TRUE;
UCKET_END, TM_GROUP_TYPE, TM_BUCKET_START, TM_BUCKET_END, SUM(TM_CPU_FIRST_BUCKE
T_VALUE) TM_CPU_FIRST_BUCKET_VALUE, SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDD
LE_BUCKETS_VALUE, SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE, SUM(TM
END IF;

       1,335,752      107,698	  0.12 35dumc2tpr9dv
Module: SQL*Plus

UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

       1,173,463      610,478	  0.11 bhdvtsvjhgvrh
IF ( v_max_loop_iterations &gt; 0 )  THEN
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			  ------------------------------------------------------
	v_loop_control := TRUE ;


SQL ordered by Version Count		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Only Statements with Version Count greater than 20 are displayed

 Version
  Count   Executions	 SQL Id
END IF;
-------- ------------ -------------
      40      107,698 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


      40      610,478 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			  ------------------------------------------------------

IF ( v_update_pct = 0 ) 	  THEN

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
	v_select_only_workload := TRUE;
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
END IF;
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    634
-> Captured SQL account for   99.6% of Total


       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
IF ( v_update_pct = 100 )	  THEN
	 515.5	    610,478   81.3    8,976.5	 5.7	6.3   90.9 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	v_update_only_workload := TRUE;
	 115.6	    107,698   18.2    1,654.8	 7.0	7.4   88.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
END IF;
< :B1 )

	  58.1		  1    9.2	567.5	10.2	9.1   83.9 bqwwfnsg2f57w
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
IF ( v_scan_query_pct = 0 ) 	THEN
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  58.0		  1    9.1	568.1	10.2	9.3   83.9 df0pz79un9sgm
Module: SQL*Plus
	v_random_workload_only := TRUE;
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
END IF;
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  31.4		  1    5.0	568.1	 5.5	7.6   89.5 91g7mg52grvpz

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
IF ( v_scan_query_pct = 100 ) 	THEN
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  31.4		  1    5.0	568.0	 5.5	7.7   89.4 brqrryv4mja36
	v_scan_workload_only := TRUE;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
END IF;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


	  31.3		  1    4.9	568.1	 5.5	7.7   89.5 0hnb5g8vhm4u9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_seconds_to_run := v_seconds_to_run * 100 ;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


	  31.1		  1    4.9	567.8	 5.5	7.6   89.6 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  31.0		  1    4.9	568.1	 5.5	7.6   89.6 71v63sn4bfskh

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

-- DBMS_RANDOM.seed (val =&gt; v_seed);
	  31.0		  1    4.9	568.1	 5.5	7.6   89.6 bhs63jbrb30ru
Module: SQL*Plus

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142

-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
v_begin_time := DBMS_UTILITY.GET_TIME();
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    634
-> Captured SQL account for   99.6% of Total
v_now := v_begin_time ;

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
v_brick_wall := v_now + v_seconds_to_run ;
-------------- ------------ ------ ---------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  31.0		  1    4.9	567.8	 5.5	7.6   89.6 fvmjqn5q18rmh

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
----------------------------------------------------------------------------------------------------------------------
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  30.9		  1    4.9	568.1	 5.4	7.6   89.6 6x8682kb2y8vd
Module: SQL*Plus
-- The following WHILE loop is the master work loop control
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
----------------------------------------------------------------------------------------------------------------------
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  30.9		  1    4.9	568.1	 5.4	7.6   89.7 b7tjac76r5nmd
Module: SQL*Plus
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo

_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  30.7		  1    4.8	568.1	 5.4	7.6   89.7 5wf99mx0r39xn
Module: SQL*Plus
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN

	  30.6		  1    4.8	568.1	 5.4	7.5   89.7 8wrvc2gfamkva
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
Module: SQL*Plus
			DBMS_LOCK.SLEEP(v_num_tmp);
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		END IF;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	END IF;
	  30.6		  1    4.8	567.8	 5.4	7.5   89.7 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
	  30.6		  1    4.8	568.1	 5.4	7.6   89.7 93dyj9jyyg3mj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
	  30.5		  1    4.8	567.6	 5.4	7.6   89.7 0rjvf5n1k4aba
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
			v_sharing_schema := TRUE ;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		ELSE
SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
			IF ( v_sharing_schema = TRUE ) THEN
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    634
				EXECUTE IMMEDIATE v_home_schema_str;
-> Captured SQL account for   99.6% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
				v_sharing_schema := FALSE;
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	  30.5		  1    4.8	568.0	 5.4	7.5   89.7 72r567f4w1r2z
Module: SQL*Plus
			END IF;
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		END IF;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  30.4		  1    4.8	567.8	 5.3	7.5   89.8 amnkmrsjh10nv
Module: SQL*Plus
	END IF;
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  21.8		  1    3.4	568.1	 3.8	6.1   92.2 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
	-- Choose the random block. The v_do_hotspot handler that follows can override.
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);
	    .2		  1    0.0	  0.3	70.2   16.8   15.0 bjck50zs3nc95
insert into WRH$_SYSSTAT (dbid, per_pdb, con_dbid, snap_id, instance_number, s
tat_id, value) select /*+ use_hash(v$sysstat) */ :dbid, 0 per_pdb, :srcdbid

con_dbid, :snap_id, :instance_number, stat_id, value FROM v$sysstat syssta
t WHERE (1 = 1)

	    .2		 89    0.0	  0.2	87.8   11.6    4.9 f7xnvp44nukp7
	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	    .2		  1    0.0	  0.3	56.9   12.2   32.9 9gumgzs3rf5cw
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
insert into WRH$_EVENT_HISTOGRAM (dbid, per_pdb, con_dbid, snap_id, instance_n
umber, event_id, wait_time_milli, wait_count ) select :dbid, 0 per_pdb, :s
rcdbid con_dbid, :snap_id, :instance_number, d.ksledhash, s.kslsesmaxdu
r/1024, s.kslsesval FROM x$kslseshist_micro s, x$ksled d WHERE (
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;

	    .1		  1    0.0	  0.3	29.7   56.5    3.4 a95n8p4vpxmps
begin prvt_hdm.execute_slave_actions; end;

	    .1		  1    0.0	  0.3	30.2   56.5    3.4 drktaf71uygnb
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
 inst_id => :bind_inst, end_snap => :bind_snap, t
ime_left_in_secs => :bind_time); END;

	END IF;
	    .0		  2    0.0	  0.3	 8.6   12.1   18.4 8fgdzmkchnn1a
INSERT /*+ APPEND LEADING(@"SEL$F5BB74E1" "H"@"SEL$2" "A"@"SEL$1") USE_NL(@"SE
L$F5BB74E1" "A"@"SEL$1") */ INTO WRH$_ACTIVE_SESSION_HISTORY ( snap_id

, dbid, instance_number , sample_id, sample_time,sample_time_utc, usecs_per_row
, session_id, session_serial#, session_type , flags , user_id , sql_id, sql_chil

	    .0		  5    0.0	  1.6	 0.9   72.2   21.9 fhf8upax5cxsz
----------------------------------------------------------------------------------------------------------------------
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

	    .0		  1    0.0	  0.0	41.2   53.6	.0 6s1ku6bs9a8xb
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
 WITH ash as (SELECT ash.event_id, sum(decode(ash.session_type, 1, 1, 0)) as c
nt_fg, count(*) as cnt_total FROM WRH$_ACTIVE_SESSION_HISTORY ash WHERE ash

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 141-142
----------------------------------------------------------------------------------------------------------------------
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time

-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    634
-> Captured SQL account for   99.6% of Total
	IF  ( v_select_only_workload = TRUE ) THEN

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
		-- handle case where user specified zero pct updates (a SELECT-only workload)
.dbid = :dbid AND ash.instance_number = :inst AND ash.snap_id > :bid AND ash.s
nap_id <= :eid AND ash.wait_time = 0 GROUP BY ash.event_id ), evts as (SEL

	    .0		 57    0.0	  0.1	16.7   20.1   66.4 f3ww8rgva3hrs
		v_do_update := FALSE;
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
		v_update_quota := TRUE ;
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	    .0		 43    0.0	  0.0	22.8   35.8   28.7 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	    .0		  4    0.0	  0.0	86.6   27.5	.0 b0n14dkbkdpbb
	ELSE
select snap_interval, snapint_num, retention, retention_num, most_recent_snap_id
, most_recent_snap_time, mrct_snap_time_num, status_flag, most_recent_purge_time
, mrct_purge_time_num, most_recent_split_id, most_recent_split_time, swrf_versio
n, registration_status, mrct_baseline_id, topnsql, mrct_bltmpl_id, src_dbid, src

	    .0		  1    0.0	  0.1	 3.5   95.2	.0 dcbt0gjzjwwbs
insert into wrh$_sga_target_advice (dbid, per_pdb, con_dbid, snap_id, instance
_number, SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS) selec
t :dbid, 0 per_pdb, :srcdbid con_dbid, :snap_id, :instance_number, SGA_SI
		IF ( v_update_only_workload = TRUE ) THEN
ZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS FROM v$sga_target_advi

			  ------------------------------------------------------


Key Instance Activity Stats		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
			-- handle case where user specified 100% updates
-------------------------------- ------------------ -------------- -------------
db block changes			    891,622	   1,475.2	     8.3
execute count				    722,307	   1,195.1	     6.7
gc cr block receive time			612	       1.0	     0.0
			v_do_update := TRUE;
gc cr blocks received			      5,162	       8.5	     0.1
gc current block receive time		      1,102	       1.8	     0.0
gc current blocks received		     16,228	      26.9	     0.2
logons cumulative				 19	       0.0	     0.0
			v_update_quota := FALSE;
opened cursors cumulative		    830,680	   1,374.4	     7.7
parse count (total)			      1,458	       2.4	     0.0
parse time elapsed				 14	       0.0	     0.0
physical reads				  2,070,440	   3,425.6	    19.2
		ELSE
physical writes 			    300,804	     497.7	     2.8
redo size				304,034,828	 503,031.6	 2,811.5
session cursor cache hits		    829,868	   1,373.0	     7.7
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
session logical reads			  5,345,958	   8,845.0	    49.4
user calls					197	       0.3	     0.0
user commits				    108,139	     178.9	     1.0
workarea executions - optimal			488	       0.8	     0.0
			  ------------------------------------------------------
			-- Work out whether this loop iteration is a SELECT or UPDATE here:


Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by statistic name

			IF ( v_update_quota = FALSE ) THEN
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
ASSM bg: segment fix monitor			  1	       0.0	     0.0
ASSM cbk:blocks examined			538	       0.9	     0.0
				-- Handle case where user has set UPDATE_PCT to a valid value
ASSM cbk:blocks marked full			142	       0.2	     0.0
ASSM gsp:L1 bitmaps examined			429	       0.7	     0.0
ASSM gsp:L2 bitmap full 			 15	       0.0	     0.0
				--
ASSM gsp:L2 bitmaps examined			 40	       0.1	     0.0
ASSM gsp:Search all				 15	       0.0	     0.0
ASSM gsp:Search hint				 20	       0.0	     0.0
ASSM gsp:Search steal				 10	       0.0	     0.0
				-- We are doing updates during this run and quota has not been met yet
ASSM gsp:bump HWM				 10	       0.0	     0.0
ASSM gsp:get free block 			396	       0.7	     0.0
ASSM gsp:get free data block			311	       0.5	     0.0
ASSM gsp:get free index block			 85	       0.1	     0.0
				-- We still vacillate until update quota has been met
ASSM gsp:good hint				391	       0.7	     0.0
ASSM rsv:fill reserve				  1	       0.0	     0.0
ASSM wasted db state change			  2	       0.0	     0.0
Batched IO (bound) vector count 		  0	       0.0	     0.0

Batched IO block miss count		    584,504	     967.1	     5.4
Batched IO buffer defrag count			  0	       0.0	     0.0
Batched IO double miss count		    584,504	     967.1	     5.4
Batched IO same unit count			  0	       0.0	     0.0
				IF ( MOD(v_random_block,  2) = 0 ) THEN
Batched IO single block count		    584,504	     967.1	     5.4
Batched IO vector block count			  0	       0.0	     0.0
Batched IO vector read count			  0	       0.0	     0.0
Block Cleanout Optim referenced 		  6	       0.0	     0.0
					v_do_update := TRUE;
CCursor + sql area evicted			  1	       0.0	     0.0
CPU used by this session		    111,132	     183.9	     1.0
CPU used when call started		     88,150	     145.9	     0.8
CR blocks created				743	       1.2	     0.0
				ELSE
Cached Commit SCN referenced		  1,497,216	   2,477.2	    13.9
Client Advertised Receive Window		133	       0.2	     0.0
Client Advertised Send Window			133	       0.2	     0.0
Client Path Maximum Transmission	  1,245,165	   2,060.2	    11.5
					v_do_update := FALSE;
Client Send Congestion Window			190	       0.3	     0.0
Client Time (usec) Last Ack Rece		  8	       0.0	     0.0
Client Time (usec) Last Data Rec		  8	       0.0	     0.0
Client Time (usec) Last Data Sen		 64	       0.1	     0.0
				END IF;
Client Time (usec) Round Trip Ti	     42,637	      70.5	     0.4
Client Time (usec) Round Trip Ti	     46,093	      76.3	     0.4
Client Total Bytes Acked		    300,578	     497.3	     2.8
			ELSE
Client Total Bytes Received		    116,005	     191.9	     1.1
Client Total Number of Retransmi		  0	       0.0	     0.0
Commit SCN cached				  0	       0.0	     0.0
DBWR checkpoint buffers written 	     18,369	      30.4	     0.2
				-- UPDATE quota has been filled,  force drain some SELECTs
DBWR checkpoints				 20	       0.0	     0.0
DBWR fusion writes				 96	       0.2	     0.0
DBWR object drop buffers written		 20	       0.0	     0.0
DBWR thread checkpoint buffers w		  0	       0.0	     0.0
				v_do_update := FALSE;
DBWR transaction table writes			294	       0.5	     0.0
DBWR undo block writes			     10,179	      16.8	     0.1
DFO trees parallelized				  7	       0.0	     0.0
Effective IO time				  0	       0.0	     0.0
			END IF;
HSC Heap Segment Block Changes		    325,148	     538.0	     3.0
Heap Segment Array Inserts			163	       0.3	     0.0
Heap Segment Array Updates			 11	       0.0	     0.0
Heatmap Blklevel Flush Task Coun		  0	       0.0	     0.0
		END IF;
KTFB alloc req					 97	       0.2	     0.0
KTFB alloc space (block)		 91,881,472	 152,019.7	   849.7
KTFB alloc time (ms)			     14,802	      24.5	     0.1
KTFB apply req					 87	       0.1	     0.0
	END IF;

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans

-------------------------------- ------------------ -------------- -------------
KTFB apply time (ms)			      2,436	       4.0	     0.0
KTFB free req					  0	       0.0	     0.0
KTFB free space (block) 			  0	       0.0	     0.0
----------------------------------------------------------------------------------------------------------------------
KTFB free time (ms)				  0	       0.0	     0.0
LOB table id lookup cache misses		  0	       0.0	     0.0
PX local messages recv'd			 84	       0.1	     0.0
PX local messages sent				 84	       0.1	     0.0
-- The type of SQL is now determined...execute it in the following section
PX remote messages recv'd			 92	       0.2	     0.0
PX remote messages sent 			145	       0.2	     0.0
Parallel operations not downgrad		  7	       0.0	     0.0
Requests to/from client 			 57	       0.1	     0.0
SMON posted for undo segment shr		  0	       0.0	     0.0
----------------------------------------------------------------------------------------------------------------------
SQL*Net roundtrips to/from clien		 38	       0.1	     0.0
TBS Extension: tasks created			  0	       0.0	     0.0
TBS Extension: tasks executed			  0	       0.0	     0.0
active txn count during cleanout		281	       0.5	     0.0

background checkpoints completed		  0	       0.0	     0.0
background checkpoints started			  0	       0.0	     0.0
background timeouts			      5,375	       8.9	     0.1
blocks cleaned out using minact 	    186,082	     307.9	     1.7
	IF ( v_do_update != TRUE ) THEN
branch node splits				  0	       0.0	     0.0
buffer is not pinned count		  4,343,425	   7,186.3	    40.2
buffer is pinned count			  1,552,454	   2,568.6	    14.4
bytes received via SQL*Net from 	     18,772	      31.1	     0.2
		--
bytes sent via SQL*Net to client	      9,949	      16.5	     0.1
calls to get snapshot scn: kcmgs	    837,453	   1,385.6	     7.7
calls to kcmgas 			    208,319	     344.7	     1.9
calls to kcmgcs 			      2,816	       4.7	     0.0
		-- Do a SELECT statement
cell physical IO interconnect by     23,765,771,264   39,320,937.6     219,770.6
change write time			      1,339	       2.2	     0.0
cleanout - number of ktugct call	      1,806	       3.0	     0.0
		-- Work out scan or random
cleanouts and rollbacks - consis		  1	       0.0	     0.0
cleanouts only - consistent read		 28	       0.1	     0.0
cluster key scan block gets			106	       0.2	     0.0
cluster key scans				101	       0.2	     0.0
commit batch/immediate performed		  1	       0.0	     0.0
		IF  ( v_random_workload_only = TRUE ) THEN
commit batch/immediate requested		  1	       0.0	     0.0
commit cleanout failures: block 		  1	       0.0	     0.0
commit cleanout failures: buffer		  0	       0.0	     0.0
commit cleanout failures: callba		  7	       0.0	     0.0
commit cleanout failures: cannot		  1	       0.0	     0.0
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
commit cleanouts			    325,151	     538.0	     3.0
commit cleanouts successfully co	    325,142	     538.0	     3.0
commit immediate performed			  1	       0.0	     0.0
commit immediate requested			  1	       0.0	     0.0
			v_do_scan_query := FALSE;
commit txn count during cleanout		124	       0.2	     0.0
consistent changes			    738,408	   1,221.7	     6.8
consistent gets 			  4,759,381	   7,874.5	    44.0
consistent gets examination		  2,178,427	   3,604.3	    20.1
consistent gets examination (fas	  2,178,106	   3,603.7	    20.1
			v_scan_query_quota := TRUE ;
consistent gets from cache		  4,759,381	   7,874.5	    44.0
consistent gets pin			  2,580,954	   4,270.2	    23.9
consistent gets pin (fastpath)		    801,733	   1,326.5	     7.4
cursor authentications				  2	       0.0	     0.0
		ELSE
cursor reload failures				  0	       0.0	     0.0
			IF ( v_scan_workload_only = TRUE ) THEN
data blocks consistent reads - u		 10	       0.0	     0.0
db block changes			    891,622	   1,475.2	     8.3
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
db block gets				    586,565	     970.5	     5.4
db block gets direct				158	       0.3	     0.0
db block gets from cache		    586,407	     970.2	     5.4

				v_do_scan_query := TRUE;
Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by statistic name

				v_scan_query_quota := FALSE;
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
			ELSE
db block gets from cache (fastpa	    241,644	     399.8	     2.2
deferred (CURRENT) block cleanou	    186,585	     308.7	     1.7
				IF ( v_scan_query_quota = FALSE ) THEN
dirty buffers inspected 		    262,693	     434.6	     2.4
enqueue conversions				229	       0.4	     0.0
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
enqueue releases			    225,517	     373.1	     2.1
enqueue requests			    225,498	     373.1	     2.1
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
enqueue timeouts				 10	       0.0	     0.0
enqueue waits					186	       0.3	     0.0
exchange deadlocks				  3	       0.0	     0.0
execute count				    722,307	   1,195.1	     6.7
fastpath consistent get quota li		  0	       0.0	     0.0
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
file io service time			221,658,110	 366,737.7	 2,049.8
free buffer inspected			  2,118,021	   3,504.3	    19.6
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
free buffer requested			  2,104,492	   3,481.9	    19.5
gc blocks compressed			     15,209	      25.2	     0.1
gc blocks lost					  0	       0.0	     0.0
		END IF;
gc cleanout applied				  0	       0.0	     0.0
gc cleanout saved				  1	       0.0	     0.0
gc cr anti locks created		      9,027	      14.9	     0.1
gc cr anti locks expanded			  5	       0.0	     0.0
gc cr anti locks shrunk 			  5	       0.0	     0.0
gc cr block build time				202	       0.3	     0.0
	END IF ;
gc cr block flush time				 25	       0.0	     0.0
gc cr block receive time			612	       1.0	     0.0
gc cr blocks built			      3,512	       5.8	     0.0
----------------------------------------------------------------------------------------------------------------------
gc cr blocks flushed				 31	       0.1	     0.0
gc cr blocks received			      5,162	       8.5	     0.1
gc cr blocks served			      5,001	       8.3	     0.1
gc cr multiblock grant time			  0	       0.0	     0.0
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
gc cr multiblock grants received		  0	       0.0	     0.0
gc current block flush time			 13	       0.0	     0.0
gc current block pin time			  1	       0.0	     0.0
----------------------------------------------------------------------------------------------------------------------
gc current block receive time		      1,102	       1.8	     0.0
gc current blocks flushed			 16	       0.0	     0.0
gc current blocks pinned			  1	       0.0	     0.0

gc current blocks received		     16,228	      26.9	     0.2
gc current blocks served		     10,949	      18.1	     0.1
gc force cr read cr				 33	       0.1	     0.0
gc force cr read current			  0	       0.0	     0.0
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
gc kbytes saved 			     64,909	     107.4	     0.6
gc kbytes sent				     62,691	     103.7	     0.6
gc local grants 			    989,863	   1,637.8	     9.2
		--
gc merge pi bg					  0	       0.0	     0.0
gc merge pi fg					 27	       0.0	     0.0
gc no change made				  1	       0.0	     0.0
gc read time waited				  0	       0.0	     0.0
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
gc read waits					  0	       0.0	     0.0
gc reader bypass grants 			  6	       0.0	     0.0
gc reader bypass waits				  2	       0.0	     0.0
		-- so reset flags and counters before continuing
gc remote grants			  1,101,131	   1,821.8	    10.2
gc status messages received		  1,091,844	   1,806.5	    10.1
gc status messages sent 		    685,116	   1,133.5	     6.3
		--
gcs affinity lock grants		     11,621	      19.2	     0.1
gcs anti-locks created			      9,027	      14.9	     0.1
gcs data block access records		  2,092,172	   3,461.5	    19.4
		v_update_quota := FALSE;
gcs messages sent			  2,558,277	   4,232.7	    23.7
gcs read-mostly lock failures		     17,454	      28.9	     0.2
gcs read-mostly lock grants		     97,507	     161.3	     0.9
		v_updates_cnt := 0;
gcs stats management (SCM) proce		  1	       0.0	     0.0
ges messages sent			      1,829	       3.0	     0.0

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
		v_selects_cnt := 0;
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
	END IF;
-------------------------------- ------------------ -------------- -------------
global enqueue get time 			488	       0.8	     0.0
global enqueue gets async			  0	       0.0	     0.0

global enqueue gets sync		    116,796	     193.2	     1.1
global enqueue releases 		    116,755	     193.2	     1.1
heap block compress			      6,394	      10.6	     0.1
hot buffers moved to head of LRU	     97,286	     161.0	     0.9
	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
immediate (CR) block cleanout ap		 29	       0.1	     0.0
immediate (CURRENT) block cleano		251	       0.4	     0.0
index crx upgrade (positioned)			  0	       0.0	     0.0
index fast full scans (full)			  1	       0.0	     0.0
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
index fetch by key			      1,379	       2.3	     0.0
index range scans			    720,758	   1,192.5	     6.7
leaf node 90-10 splits				  1	       0.0	     0.0
		-- so reset flags and counters
leaf node splits				 83	       0.1	     0.0
lob reads					180	       0.3	     0.0
lob writes				      3,111	       5.2	     0.0
lob writes unaligned			      3,111	       5.2	     0.0
		v_scan_query_quota := FALSE;
logical read bytes from cache	     43,792,687,104   72,455,865.0     404,966.6
logons cumulative				 19	       0.0	     0.0
		v_scan_queries_cnt := 0;
max cf enq hold time				  0	       0.0	     0.0
messages received			    121,048	     200.3	     1.1
messages sent				    121,047	     200.3	     1.1
min active SCN optimization appl		  0	       0.0	     0.0
		v_random_access_queries_cnt := 0;
no work - consistent read gets		  2,571,126	   4,254.0	    23.8
non-idle wait count			  4,617,599	   7,639.9	    42.7
opened cursors cumulative		    830,680	   1,374.4	     7.7
	END IF;
parse count (describe)				  0	       0.0	     0.0
parse count (failures)				  0	       0.0	     0.0
parse count (hard)				  4	       0.0	     0.0

parse count (total)			      1,458	       2.4	     0.0
parse time cpu					  5	       0.0	     0.0
parse time elapsed				 14	       0.0	     0.0
	v_loop_cnt := v_loop_cnt + 1 ;
physical read IO requests		  2,070,369	   3,425.5	    19.2
physical read bytes		     16,961,044,480   28,062,382.8     156,844.8
physical read total IO requests 	  2,073,749	   3,431.1	    19.2
	v_now := DBMS_UTILITY.GET_TIME();
physical read total bytes	     17,462,680,576   28,892,349.6     161,483.7
physical read total multi block 		438	       0.7	     0.0
physical reads				  2,070,440	   3,425.6	    19.2

physical reads cache			  2,070,440	   3,425.6	    19.2
physical reads cache prefetch			 71	       0.1	     0.0
physical reads direct				  0	       0.0	     0.0
	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
physical reads direct (lob)			  0	       0.0	     0.0
physical reads direct temporary 		  0	       0.0	     0.0
		-- If this is a fixed-iteration count test cycle and we've hit the number of
physical reads prefetch warmup			  0	       0.0	     0.0
physical write IO requests		    289,518	     479.0	     2.7
		-- iterations then set exit flag
physical write bytes		      2,464,186,368    4,077,045.0	22,787.2
physical write total IO requests	    485,934	     804.0	     4.5
		v_stop_immediate := TRUE ;
physical write total bytes	      3,146,974,208    5,206,730.9	29,101.2
	END IF;
physical write total multi block		592	       1.0	     0.0
physical writes 			    300,804	     497.7	     2.8
END LOOP;
physical writes direct				163	       0.3	     0.0
physical writes direct (lob)			  5	       0.0	     0.0

physical writes direct temporary		 96	       0.2	     0.0
physical writes from cache		    300,641	     497.4	     2.8
physical writes non checkpoint		    296,030	     489.8	     2.7
v_end_time := v_now ;
pinned buffers inspected			529	       0.9	     0.0
prefetch warmup blocks aged out 		  0	       0.0	     0.0
prefetched blocks aged out befor		  0	       0.0	     0.0
process last non-idle time			424	       0.7	     0.0
v_now := DBMS_UTILITY.GET_TIME();
recursive calls 			    950,396	   1,572.5	     8.8

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by statistic name
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------

recursive cpu usage			    104,083	     172.2	     1.0
redo KB read				    276,678	     457.8	     2.6
redo blocks checksummed by FG (e	    202,422	     334.9	     1.9
redo blocks written			    657,823	   1,088.4	     6.1
v_total_time := v_end_time - v_begin_time ;
redo blocks written (group 0)		    460,054	     761.2	     4.3
redo blocks written (group 1)		    197,769	     327.2	     1.8
redo entries				    461,524	     763.6	     4.3
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
redo size				304,034,828	 503,031.6	 2,811.5
redo size for direct writes			164	       0.3	     0.0
redo subscn max counts				 82	       0.1	     0.0
redo synch long waits				  0	       0.0	     0.0
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
redo synch time 				  3	       0.0	     0.0
redo synch time (usec)			     23,363	      38.7	     0.2
redo synch time overhead (usec) 	      2,713	       4.5	     0.0
redo synch time overhead count (		  4	       0.0	     0.0
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
redo synch time overhead count (		  0	       0.0	     0.0
redo synch time overhead count (		  0	       0.0	     0.0
redo synch writes				 20	       0.0	     0.0

redo wastage				 22,098,504	  36,562.4	   204.4
redo write active strands		     97,903	     162.0	     0.9
redo write broadcast ack count			  0	       0.0	     0.0
END;</pre_sqltext></td></tr>
redo write broadcast ack time			  0	       0.0	     0.0
redo write finish time			635,076,150    1,050,746.0	 5,872.8
redo write gather time			 23,401,468	  38,718.2	   216.4
redo write info find				  4	       0.0	     0.0
<tr><td scope="row" class='awrc'><a class="awr" name="drktaf71uygnb"></a>drktaf71uygnb</td><td class='awrc'><pre_sqltext class="awr">BEGIN
redo write schedule time		 24,823,569	  41,071.1	   229.6
redo write size count (   4KB)		     58,649	      97.0	     0.5
redo write size count (   8KB)		     32,945	      54.5	     0.3
redo write size count (  16KB)		      3,218	       5.3	     0.0
	  sys.prvt_hdm.auto_execute(
redo write size count (  32KB)			276	       0.5	     0.0
redo write size count ( 128KB)			 79	       0.1	     0.0
redo write size count ( 256KB)			  4	       0.0	     0.0
	    db_id =&gt; :bind_dbid,
redo write size count ( 512KB)			  2	       0.0	     0.0
redo write size count (1024KB)			  0	       0.0	     0.0
redo write size count (inf)			  0	       0.0	     0.0
redo write time 			     63,909	     105.7	     0.6
	    inst_id =&gt; :bind_inst,
redo write time (usec)			639,087,833    1,057,383.4	 5,909.9
redo write total time			648,130,151    1,072,344.1	 5,993.5
	    end_snap =&gt; :bind_snap,
redo write worker delay (usec)		 13,939,858	  23,063.8	   128.9
redo write worker delay count		     95,172	     157.5	     0.9
redo writes				     95,172	     157.5	     0.9
	    time_left_in_secs =&gt; :bind_time);
redo writes (group 0)			     57,280	      94.8	     0.5
redo writes (group 1)			     37,892	      62.7	     0.4
redo writes adaptive all		     95,172	     157.5	     0.9
redo writes adaptive worker		     95,172	     157.5	     0.9
	END;</pre_sqltext></td></tr>
remote Oradebug requests			  0	       0.0	     0.0
rollback changes - undo records 		  2	       0.0	     0.0
rollbacks only - consistent read		  4	       0.0	     0.0
rows fetched via callback			750	       1.2	     0.0
saved cleanouts 				  0	       0.0	     0.0
saved cleanouts successfully com		  0	       0.0	     0.0
securefile allocation bytes		     40,960	      67.8	     0.4
<tr><td scope="row" class='awrnc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrnc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		       equality_preds	 = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds    + decode(bitand(:flag, 2), 0, 0, 1),    nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),	 range_preds	   = range_preds       + decode(bitand(:flag, 8), 0, 0, 1),    like_preds	 = like_preds	     + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	= null_preds	    + decode(bitand(:flag, 32), 0, 0, 1),    flags	       = flags + :flag - bitand(flags, :flag),	   timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
securefile allocation chunks			  5	       0.0	     0.0
securefile bytes non-transformed	     31,412	      52.0	     0.3
securefile direct read bytes			  0	       0.0	     0.0
securefile direct read ops			  0	       0.0	     0.0
securefile direct write bytes		     40,960	      67.8	     0.4
<tr><td scope="row" class='awrc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)    values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
securefile direct write ops			  5	       0.0	     0.0
securefile number of non-transfo		  5	       0.0	     0.0
segment cfs allocations 			  0	       0.0	     0.0

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrnc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrnc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
segment chunks allocation from d		  5	       0.0	     0.0
<tr><td scope="row" class='awrc'><a class="awr" name="fhf8upax5cxsz"></a>fhf8upax5cxsz</td><td class='awrc'><pre_sqltext class="awr">BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref,  :snap_id,  :pr_class,					       :rep_id,  :suc); END;</pre_sqltext></td></tr>
segment dispenser allocations			  5	       0.0	     0.0
segment dispenser load empty			  0	       0.0	     0.0
segment dispenser load tasks			  0	       0.0	     0.0
segment prealloc ops				  3	       0.0	     0.0
segment prealloc tasks				  0	       0.0	     0.0
<tr><td scope="row" class='awrnc'><a class="awr" name="fkc81h2686aqc"></a>fkc81h2686aqc</td><td class='awrnc'><pre_sqltext class="awr">select pob.parttype from sys.indpart$ ip,  sys.partobj$ pob  where ip.bo# = pob.obj# and ip.obj# = :oid</pre_sqltext></td></tr>
segment prealloc time (ms)			258	       0.4	     0.0
segment total chunk allocation			  0	       0.0	     0.0
session cursor cache hits		    829,868	   1,373.0	     7.7
session logical reads			  5,345,958	   8,845.0	    49.4
shared hash latch upgrades - no 	    812,032	   1,343.5	     7.5
<tr><td scope="row" class='awrc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
shared hash latch upgrades - wai		  1	       0.0	     0.0
shared io pool buffer get succes		  5	       0.0	     0.0
sorts (memory)					308	       0.5	     0.0
sorts (rows)				     64,292	     106.4	     0.6
sql area evicted				  1	       0.0	     0.0
<tr><td scope="row" class='awrnc'><a class="awr" name="fs4p95w7yg25b"></a>fs4p95w7yg25b</td><td class='awrnc'><pre_sqltext class="awr">select pob.parttype from sys.tabpart$ tp,  sys.partobj$ pob  where tp.bo# = pob.obj# and tp.obj# = :oid</pre_sqltext></td></tr>
sql area purged 				  1	       0.0	     0.0
summed dirty queue length		  1,317,630	   2,180.0	    12.2
switch current caused by our pin		 72	       0.1	     0.0
switch current to new buffer			 77	       0.1	     0.0
<tr><td scope="row" class='awrc'><a class="awr" name="fvmjqn5q18rmh"></a>fvmjqn5q18rmh</td><td class='awrc'><pre_sqltext class="awr">DECLARE
table fetch by rowid			  2,423,808	   4,010.2	    22.4
table fetch continued row			  0	       0.0	     0.0
table scan blocks gotten		      3,291	       5.5	     0.0
table scan disk non-IMC rows got	    137,733	     227.9	     1.3
table scan rows gotten			    137,733	     227.9	     1.3
v_default_schema_number PLS_INTEGER := '29';
table scans (short tables)			337	       0.6	     0.0
temp space allocated (bytes)			  0	       0.0	     0.0
total cf enq hold time			      2,774	       4.6	     0.0
v_update_pct PLS_INTEGER := '15';
total number of cf enq holders			127	       0.2	     0.0
total number of times SMON poste		  0	       0.0	     0.0
transaction lock background gets		  0	       0.0	     0.0
transaction lock foreground requ		  0	       0.0	     0.0
transaction rollbacks				  1	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
transaction tables consistent re	    734,734	   1,215.6	     6.8
v_max_loop_iterations PLS_INTEGER := '0';
undo change vector size 		119,354,908	 197,475.1	 1,103.7
user calls					197	       0.3	     0.0
user commits				    108,139	     178.9	     1.0
user logons cumulative				  0	       0.0	     0.0
user logouts cumulative 			 19	       0.0	     0.0
workarea executions - optimal			488	       0.8	     0.0
write clones created in backgrou		  0	       0.0	     0.0
write clones created in foregrou		  2	       0.0	     0.0
v_seconds_to_run PLS_INTEGER := '600';
			  ------------------------------------------------------


Instance Activity Stats - Absolute ValuesDB/Inst: P30DB/p30db1	Snaps: 141-142
-> Statistics with absolute values (should not be diffed)

Statistic			     Begin Value       End Value
v_scale PLS_INTEGER := '1048576';
-------------------------------- --------------- ---------------
logons current				     109	      91
opened cursors current			     252	     176
session cursor cache count		  13,537	  13,552
v_work_unit PLS_INTEGER := '4' ;
session pga memory		     687,668,192     597,690,640
session pga memory max		     822,199,232     728,420,592
session uga memory		     927,043,344     895,020,776
session uga memory max		   9,191,755,936   9,365,341,952
v_redo_stress  VARCHAR2(12) := 'LITE';
			  ------------------------------------------------------

Instance Activity Stats - Thread ActivityDB/Inst: P30DB/p30db1	Snaps: 141-142
-> Statistics identified by '(derived)' come from sources other than SYSSTAT
v_hot_schema_modulus PLS_INTEGER := '0';

Statistic				      Total  per Hour
-------------------------------- ------------------ ---------
log switches (derived)				  0	  .00
v_do_hotspot   VARCHAR(7) := 'FALSE';
			  ------------------------------------------------------

IOStat by Function summary		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
v_hotspot_mb  NUMBER := '8';
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> ordered by (Data Read + Write) desc

v_hotspot_offset_mb NUMBER := '16';
		 Reads:  Reqs	 Data	Writes:  Reqs	 Data	 Waits:    Avg
Function Name	   Data per sec per sec    Data per sec per sec   Count    Time
--------------- ------- ------- ------- ------- ------- ------- ------- --------
Buffer Cache Re   15.8G  3415.6 26.687M      0M     0.0      0M    2.1M   4.68ms
v_hotspot_modulus  PLS_INTEGER := '3';
DBWR		     0M     0.0      0M    2.3G   479.1  3.888M       0
LGWR		     0M     0.0      0M    641M   323.6  1.061M     95K   6.39ms
Others		   478M     5.6   .791M     10M     1.0   .017M    2351   4.44ms

Direct Writes	     0M     0.0      0M      0M     0.0      0M       0
TOTAL:		  16.2G  3421.2 27.478M    2.9G   803.7  4.965M    2.2M   4.76ms
			  ------------------------------------------------------

v_sleep_modulus PLS_INTEGER := '0';
IOStat by Filetype summary		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Small Read and Large Read are average service times
v_sleep_min NUMBER := '.1';
-> Ordered by (Data Read + Write) desc

		Reads:	Reqs	Data   Writes:	Reqs	Data	  Small    Large
Filetype Name	  Data per sec per sec	  Data per sec per sec	   Read     Read
v_sleep_max NUMBER := '.5';
-------------- ------- ------- ------- ------- ------- ------- -------- --------
Data File	 15.8G	3416.0 26.687M	  2.3G	 479.1	 3.89M	 4.19ms
Log File	  434M	   0.9	 .718M	  641M	 323.4	1.061M	 3.20ms 1230.91m
v_scan_query_pct PLS_INTEGER := '0';
Control File	   44M	   4.7	 .073M	    8M	   0.9	 .013M	 2.58ms
Temp File	    1M	   0.1	 .002M	    1M	   0.1	 .002M	 3.12ms
TOTAL:		 16.2G	3421.7	27.48M	  2.9G	 803.5	4.965M	 4.18ms 1230.91m
v_obfuscate VARCHAR(5)	:= 'FALSE';
			  ------------------------------------------------------

IOStat by Function/Filetype summary	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024

    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Ordered by (Data Read + Write) desc for each function

  Reads:  Reqs	  Data	 Writes:  Reqs	  Data	  Waits:      Avg

    Data per sec per sec    Data per sec per sec   Count     Time
 ------- ------- ------- ------- ------- ------- ------- ----------
Buffer Cache Reads
   15.7G  3414.3 26.677M      0M     0.0      0M    2.1M     4.68ms
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
 Buffer Cache Reads (Data File)
   15.7G  3414.2 26.676M      0M     0.0      0M    2.1M     4.68ms
 Buffer Cache Reads (Temp File)
      1M     0.1   .002M      0M     0.0      0M      50     3.56ms
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
 DBWR (Data File)
      0M     0.0      0M    2.3G   479.1  3.888M       0
DBWR
      0M     0.0      0M    2.3G   479.1  3.888M       0

 DBWR (Temp File)
      0M     0.0      0M      0M     0.0      0M       0
 LGWR (Log File)
      0M     0.0      0M    641M   323.4  1.061M       0
LGWR
v_num_tmp NUMBER := 0;
      0M     0.0      0M    641M   323.4  1.061M       0
Others
    478M     5.6   .791M     10M     1.0   .017M    2072     4.10ms
 Others (Log File)

    434M     0.9   .718M      0M     0.0      0M      82     2.99ms
 Others (Control File)
     44M     4.7   .073M      9M     0.9   .015M    1990     4.14ms
 Others (Data File)
v_loop_cnt PLS_INTEGER := 0;
      0M     0.0      0M      1M     0.0   .002M       0
 Others (Temp File)
      0M     0.0      0M      0M     0.0      0M       0
 Direct Writes (Data File)
v_rowcnt PLS_INTEGER := 0;
      0M     0.0      0M      0M     0.0      0M       0
Direct Writes
      0M     0.0      0M      0M     0.0      0M       0
TOTAL:
   16.2G  3419.9 27.468M    2.9G   803.5  4.965M    2.1M     4.68ms
v_updates_cnt PLS_INTEGER := 0;
			  ------------------------------------------------------


Tablespace IO Stats			 DB/Inst: P30DB/p30db1	Snaps: 141-142

v_selects_cnt PLS_INTEGER := 0;
		  No data exists for this section of the report.
			  ------------------------------------------------------



File IO Stats				 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
v_random_access_queries_cnt PLS_INTEGER := 0;
			  ------------------------------------------------------


Buffer Pool Statistics			 DB/Inst: P30DB/p30db1	Snaps: 141-142
v_scan_queries_cnt PLS_INTEGER := 0;
-> Standard block size Pools  D: default,  K: keep,  R: recycle
-> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k

							    Free   Writ   Buffer

     Number of Pool	  Buffer     Physical	 Physical   Buff   Comp     Busy
P      Buffers Hit%	    Gets	Reads	   Writes   Wait   Wait    Waits
--- ---------- ---- ------------ ------------ ----------- ------ ------ --------
D      932,000	 61    5,347,151    2,070,749	  300,641      0      0        1
v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
			  ------------------------------------------------------

Checkpoint Activity			 DB/Inst: P30DB/p30db1	Snaps: 141-142
v_scan_workload_only BOOLEAN := FALSE;
-> Total Physical Writes:		       300,804

					  Other    Autotune	 Thread
v_random_workload_only BOOLEAN := FALSE;
       MTTR    Log Size    Log Ckpt    Settings        Ckpt	   Ckpt
     Writes	 Writes      Writes	 Writes      Writes	 Writes
----------- ----------- ----------- ----------- ----------- -----------
	  0	      0 	  0	      0      18,369	      0

			  ------------------------------------------------------


Instance Recovery Stats 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> B: Begin Snapshot,  E: End Snapshot

									    Estd
  Targt  Estd					  Log Ckpt Log Ckpt    Opt   RAC
v_random_block PLS_INTEGER := 1;
  MTTR	 MTTR Recovery	Actual	 Target   Log Sz   Timeout Interval    Log Avail
   (s)	  (s) Estd IOs RedoBlks RedoBlks RedoBlks RedoBlks RedoBlks  Sz(M)  Time
- ----- ----- -------- -------- -------- -------- -------- -------- ------ -----
v_tmp PLS_INTEGER;
B     0    11	 21023	  41449 1.70E+07 1.70E+07      N/A	N/A    N/A     4
E     0    46	 59719	 308547    24189 1.70E+07    24189	N/A    N/A    16
			  ------------------------------------------------------

v_now PLS_INTEGER;
MTTR Advisory				      DB/Inst: P30DB/p30db1  Snap: 142

		  No data exists for this section of the report.
			  ------------------------------------------------------

v_brick_wall PLS_INTEGER;
Buffer Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 142
-> Only rows with estimated physical reads >0 are displayed

-> ordered by Block Size, Buffers For Estimate

				    Est
v_begin_time PLS_INTEGER;
				   Phys      Estimated			Est
    Size for   Size	 Buffers   Read     Phys Reads	   Est Phys %DBtime
v_end_time PLS_INTEGER;
P    Est (M) Factor  (thousands) Factor    (thousands)	  Read Time for Rds
v_total_time PLS_INTEGER;
--- -------- ------ ------------ ------ -------------- ------------ -------
D	 800	 .1	      93    1.2 	29,966		  1 2.0E+05
v_begin_cpu_tm PLS_INTEGER;
D      1,600	 .2	     186    1.1 	27,988		  1 1.9E+05
D      2,400	 .3	     280    1.1 	26,907		  1 1.8E+05
D      3,200	 .4	     373    1.1 	26,292		  1 1.8E+05
v_end_cpu_tm PLS_INTEGER;
D      4,000	 .5	     466    1.0 	25,906		  1 1.7E+05
D      4,800	 .6	     559    1.0 	25,635		  1 1.7E+05
D      5,600	 .7	     652    1.0 	25,433		  1 1.7E+05
D      6,400	 .8	     746    1.0 	25,267		  1 1.7E+05
v_total_cpu_tm PLS_INTEGER;
D      7,200	 .9	     839    1.0 	25,122		  1 1.7E+05
D      8,000	1.0	     932    1.0 	24,994		  1 1.7E+05
D      8,800	1.1	   1,025    1.0 	24,880		  1 1.7E+05
D      9,600	1.2	   1,118    1.0 	24,773		  1 1.7E+05

D     10,400	1.3	   1,212    1.0 	24,666		  1 1.6E+05
D     11,200	1.4	   1,305    1.0 	24,565		  1 1.6E+05
D     12,000	1.5	   1,398    1.0 	24,466		  1 1.6E+05
D     12,800	1.6	   1,491    1.0 	24,376		  1 1.6E+05
v_do_sleeps BOOLEAN := FALSE;
D     13,600	1.7	   1,584    1.0 	24,293		  1 1.6E+05
D     14,400	1.8	   1,678    1.0 	24,210		  1 1.6E+05
D     15,200	1.9	   1,771    1.0 	24,129		  1 1.6E+05
D     16,000	2.0	   1,864    1.0 	24,052		  1 1.6E+05
v_loop_control BOOLEAN := FALSE;
			  ------------------------------------------------------


PGA Aggr Summary			 DB/Inst: P30DB/p30db1	Snaps: 141-142
v_update_quota BOOLEAN := FALSE;
-> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory

PGA Cache Hit %   W/A MB Processed  Extra W/A MB Read/Written
--------------- ------------------ --------------------------
	  100.0 	       134			    0
v_select_only_workload BOOLEAN := FALSE;
			  ------------------------------------------------------

PGA Aggr Target Stats			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> B: Begin Snap   E: End Snap (rows dentified with B or E contain data
v_update_only_workload BOOLEAN := FALSE;
   which is absolute i.e. not diffed over the interval)
-> Auto PGA Target - actual workarea memory target
-> W/A PGA Used    - amount of memory used for all Workareas (manual + auto)
-> %PGA W/A Mem    - percentage of PGA memory allocated to workareas
v_do_update BOOLEAN := FALSE;
-> %Auto W/A Mem   - percentage of workarea memory controlled by Auto Mem Mgmt
-> %Man W/A Mem    - percentage of workarea memory under manual control

v_do_hot_schema BOOLEAN := FALSE;
						%PGA  %Auto   %Man
    PGA Aggr   Auto PGA   PGA Mem    W/A PGA	 W/A	W/A    W/A Global Mem
   Target(M)  Target(M)  Alloc(M)    Used(M)	 Mem	Mem    Mem   Bound(K)
- ---------- ---------- ---------- ---------- ------ ------ ------ ----------
v_stop_immediate BOOLEAN := FALSE;
B      3,215	  1,849    1,370.6	  0.0	  .0	 .0	.0    329,210
E      3,215	  1,924    1,275.3	  0.0	  .0	 .0	.0    329,210
			  ------------------------------------------------------

v_sharing_schema BOOLEAN := FALSE;
PGA Aggr Target Histogram		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Optimal Executions are purely in-memory operations

  Low	  High
Optimal Optimal    Total Execs	Optimal Execs 1-Pass Execs M-Pass Execs
v_seed VARCHAR2(128);
------- ------- -------------- -------------- ------------ ------------
     2K      4K 	   260		  260		 0	      0
    64K    128K 	    47		   47		 0	      0
   128K    256K 	    32		   32		 0	      0
v_home_schema_str VARCHAR2(80);
   256K    512K 	    28		   28		 0	      0
   512K   1024K 	    62		   62		 0	      0
     1M      2M 	    57		   57		 0	      0
     2M      4M 	     2		    2		 0	      0
v_scratch VARCHAR2(200) ;
			  ------------------------------------------------------

PGA Memory Advisory			      DB/Inst: P30DB/p30db1  Snap: 142
-> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value

   where Estd PGA Overalloc Count is 0

				       Estd Extra    Estd P Estd PGA
PGA Target    Size	     W/A MB   W/A MB Read/    Cache Overallo	Estd
v_cpu_pct NUMBER(6, 3);
  Est (MB)   Factr	  Processed Written to Disk   Hit %    Count	Time
---------- ------- ---------------- ---------------- ------ -------- -------
       402     0.1	   17,842.7	     3,213.8   85.0	  61 5.7E+07
       804     0.3	   17,842.7	     3,105.1   85.0	  45 5.7E+07
v_my_serial NUMBER(16);
     1,608     0.5	   17,842.7	     2,123.8   89.0	   0 5.4E+07
     2,411     0.8	   17,842.7	     2,123.8   89.0	   0 5.4E+07
     3,215     1.0	   17,842.7		 0.0  100.0	   0 4.8E+07
     3,858     1.2	   17,842.7		 0.0  100.0	   0 4.8E+07

     4,501     1.4	   17,842.7		 0.0  100.0	   0 4.8E+07
     5,144     1.6	   17,842.7		 0.0  100.0	   0 4.8E+07
     5,787     1.8	   17,842.7		 0.0  100.0	   0 4.8E+07
     6,430     2.0	   17,842.7		 0.0  100.0	   0 4.8E+07
BEGIN
     9,645     3.0	   17,842.7		 0.0  100.0	   0 4.8E+07
    12,860     4.0	   17,842.7		 0.0  100.0	   0 4.8E+07
    19,290     6.0	   17,842.7		 0.0  100.0	   0 4.8E+07
    25,720     8.0	   17,842.7		 0.0  100.0	   0 4.8E+07

			  ------------------------------------------------------


Shared Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 142
-> SP: Shared Pool     Est LC: Estimated Library Cache	 Factr: Factor
v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
-> Note there is often a 1:Many correlation between a single logical object
   in the Library Cache, and the physical number of memory objects associated
   with it.  Therefore comparing the number of Lib Cache objects (e.g. in
EXECUTE IMMEDIATE v_home_schema_str;
   v$librarycache), with the number of Lib Cache Memory Objects is invalid.

				       Est LC Est LC  Est LC Est LC
  Shared    SP	 Est LC 		 Time	Time	Load   Load	  Est LC

    Pool  Size	   Size       Est LC	Saved  Saved	Time   Time	 Mem Obj
 Size(M) Factr	    (M)      Mem Obj	  (s)  Factr	 (s)  Factr	Hits (K)

IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-------- ----- -------- ------------ -------- ------ ------- ------ ------------
-- The following WHILE loop is the master work loop control
   1,280    .9	     21        1,422   83,097	 1.0	 717   10.9	   3,400
   1,312    .9	     50        2,055   83,418	 1.0	 396	6.0	   3,410
----------------------------------------------------------------------------------------------------------------------
   1,344    .9	     82        2,381   83,525	 1.0	 289	4.4	   3,420
   1,376   1.0	    113        3,046   83,623	 1.0	 191	2.9	   3,429
   1,408   1.0	    145        3,982   83,704	 1.0	 110	1.7	   3,438
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
   1,440   1.0	    177        4,812   83,748	 1.0	  66	1.0	   3,445
   1,472   1.0	    208        6,235   83,749	 1.0	  65	1.0	   3,445

   1,504   1.0	    240        7,546   83,750	 1.0	  64	1.0	   3,445
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
   1,536   1.1	    259        8,353   83,750	 1.0	  64	1.0	   3,445
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

   1,568   1.1	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   1,600   1.1	    259        8,353   83,750	 1.0	  64	1.0	   3,445
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
   1,632   1.1	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   1,664   1.2	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   1,696   1.2	    259        8,353   83,750	 1.0	  64	1.0	   3,445
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
   1,728   1.2	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   1,760   1.2	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   1,920   1.3	    259        8,353   83,750	 1.0	  64	1.0	   3,445
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
   2,080   1.4	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   2,240   1.6	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   2,400   1.7	    259        8,353   83,750	 1.0	  64	1.0	   3,445
			v_sharing_schema := TRUE ;
   2,560   1.8	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   2,720   1.9	    259        8,353   83,750	 1.0	  64	1.0	   3,445
   2,880   2.0	    259        8,353   83,750	 1.0	  64	1.0	   3,445
		ELSE
			  ------------------------------------------------------

SGA Target Advisory			      DB/Inst: P30DB/p30db1  Snap: 142

			IF ( v_sharing_schema = TRUE ) THEN
SGA Target   SGA Size	    Est DB     Est Physical
  Size (M)     Factor	  Time (s)	      Reads
---------- ---------- ------------ ----------------
				EXECUTE IMMEDIATE v_home_schema_str;
     2,416	  0.3	   218,248	 29,965,762
     3,624	  0.4	   204,889	 27,988,707
     4,832	  0.5	   193,489	 26,291,588
     6,040	  0.6	   189,720	 25,634,236
				v_sharing_schema := FALSE;
     7,248	  0.8	   187,724	 25,434,281
     8,456	  0.9	   185,618	 25,121,851
     9,664	  1.0	   184,768	 24,994,380
			END IF;
    10,872	  1.1	   183,290	 24,774,429
    12,080	  1.3	   182,218	 24,564,477
    13,288	  1.4	   181,220	 24,466,999
		END IF;
    14,496	  1.5	   180,056	 24,292,038
    15,704	  1.6	   179,484	 24,209,556
    16,912	  1.8	   178,430	 24,052,092
    18,120	  1.9	   178,430	 24,052,092
	END IF;
    19,328	  2.0	   178,430	 24,052,092
			  ------------------------------------------------------


Streams Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 142

		  No data exists for this section of the report.
			  ------------------------------------------------------

	-- Choose the random block. The v_do_hotspot handler that follows can override.
Java Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 142

		  No data exists for this section of the report.
			  ------------------------------------------------------
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

Buffer Wait Statistics			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> ordered by wait time desc, waits desc


Class			 Waits Total Wait Time (s)  Avg Time (ms)
------------------ ----------- ------------------- --------------
undo header		     1			 0		0
	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
			  ------------------------------------------------------


Enqueue Activity			 DB/Inst: P30DB/p30db1	Snaps: 141-142
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
Enqueue Type (Request Reason)
------------------------------------------------------------------------------
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
TM-DML
	END IF;
     108,368	  108,359	    0		2	     0		99.00
CF-Controlfile Transaction
       1,361	    1,361	    0	       64	     0		  .84

RO-Multiple Object Reuse (fast object reuse)
	 140	      140	    0	       50	     0		  .94
WF-AWR Flush
	  20	       20	    0	       20	     0		 1.40
----------------------------------------------------------------------------------------------------------------------
PS-PX Process Reservation
	  54	       54	    0	       20	     0		 1.00
CO-KTUCLO Master Slave enq (master slave det)
	  10		0	   10	       10	     0		 1.00
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
FB-Format Block
	  16	       16	    0	       12	     0		  .75
HW-Segment High Water Mark
	 271	      271	    0		9	     0		  .67
TA-Instance Undo
	   2		2	    0		2	     0		 1.00
DW-In memory Dispenser
----------------------------------------------------------------------------------------------------------------------
	   3		3	    0		1	     0		 2.00
TX-Transaction (allocate ITL entry)
	   1		1	    0		1	     0		 2.00
TD-KTF map table enqueue (KTF dump entries)
	   1		1	    0		1	     0		  .00
TX-Transaction

     108,411	  108,405	    0		0	     0		  N/A
JG-Job Scheduler1
       2,541	    2,541	    0		0	     0		  N/A
JG-Job Scheduler1 (queue lock)
       2,541	    2,541	    0		0	     0		  N/A
SJ-KTSJ Slave Task Cancel (Slave Task Cancel)
	IF  ( v_select_only_workload = TRUE ) THEN
	 423	      424	    0		0	     0		  N/A
DD-ASM Local Disk Group
	 365	      365	    0		0	     0		  N/A
JG-Job Scheduler1 (q mem clnup lck)
		-- handle case where user specified zero pct updates (a SELECT-only workload)
	 242	      242	    0		0	     0		  N/A
BU-Buddy Instance Context (recovery set construct)
	 191	      191	    0		0	     0		  N/A
TT-Tablespace
		v_do_update := FALSE;
	 147	      147	    0		0	     0		  N/A
FP-File Object (global fob contention)
	  82	       82	    0		0	     0		  N/A
		v_update_quota := TRUE ;
TO-Temp Object
	  27	       27	    0		0	     0		  N/A
IS-Instance State
	  20	       20	    0		0	     0		  N/A
	ELSE
SE-Session Migration
	  19	       19	    0		0	     0		  N/A
WT-AWR CDB-Wide Table Lock
	  18	       18	    0		0	     0		  N/A
		IF ( v_update_only_workload = TRUE ) THEN
TH-Threshold Chain (metric threshold evaluation)
	  10	       10	    0		0	     0		  N/A
AF-Advisor Framework (task serialization)
			-- handle case where user specified 100% updates
	   7		7	    0		0	     0		  N/A
DA-Instance DP Array (Slave Process Array)
	   6		6	    0		0	     0		  N/A
MR-Media Recovery
			v_do_update := TRUE;
	   4		4	    0		0	     0		  N/A
PR-Process Startup
	   4		4	    0		0	     0		  N/A

			v_update_quota := FALSE;
Enqueue Activity			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
		ELSE
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
PV-KSV slave startup (syncstart)
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
	   4		4	    0		0	     0		  N/A
AE-Edition Lock (lock)
	   3		3	    0		0	     0		  N/A
CU-Cursor
			IF ( v_update_quota = FALSE ) THEN
	   3		3	    0		0	     0		  N/A
SQ-Sequence Cache
	   3		3	    0		0	     0		  N/A
				-- Handle case where user has set UPDATE_PCT to a valid value
PW-Buffer Cache PreWarm (flush prewarm buffers)
	   2		2	    0		0	     0		  N/A
SH-Active Session History Flushing
	   2		2	    0		0	     0		  N/A
				--
XR-Quiesce / Force Logging (database force logging)
	   2		2	    0		0	     0		  N/A
			  ------------------------------------------------------

				-- We are doing updates during this run and quota has not been met yet

Undo Segment Summary			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Min/Max TR (mins) - Min and Max Tuned Retention (minutes)
				-- We still vacillate until update quota has been met
-> STO - Snapshot Too Old count,  OOS - Out of Space count
-> Undo segment block stats:
-> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed

-> eS - expired   Stolen,   eR - expired   Released,   eU - expired   reUsed

Undo   Num Undo       Number of  Max Qry   Max Tx Min/Max   STO/     uS/uR/uU/
 TS# Blocks (K)    Transactions  Len (s) Concurcy TR (mins) OOS      eS/eR/eU
---- ---------- --------------- -------- -------- --------- ----- --------------
				IF ( MOD(v_random_block,  2) = 0 ) THEN
   2	    9.7 	 67,775      971       12 38.5/38.5 0/0   0/0/0/0/0/0
			  ------------------------------------------------------

Undo Segment Stats			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Most recent 35 Undostat rows, ordered by Time desc

					v_do_update := TRUE;
		Num Undo    Number of Max Qry  Max Tx Tun Ret STO/    uS/uR/uU/
End Time	  Blocks Transactions Len (s)	Concy  (mins) OOS     eS/eR/eU
------------ ----------- ------------ ------- ------- ------- ----- ------------
10-Feb 11:22	   9,686       67,775	  971	   12	   38 0/0   0/0/0/0/0/0
			  ------------------------------------------------------

				ELSE

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
					v_do_update := FALSE;
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
				END IF;
------------------------ -------------- ------ ------ ------ ------------ ------
AQ Background: interrupt	      1    0.0		   0	       21    0.0
AQ Coord jobx_kwsbgsgn l	     20    0.0		   0		0    N/A
			ELSE
AQ Message drive state o	      1    0.0		   0		0    N/A
AQ Sharded master pool l	     20    0.0		   0		0    N/A
AQ deq hash table latch 	      1    0.0		   0		0    N/A
ASM Keyed state latch		     26    0.0		   0		0    N/A
				-- UPDATE quota has been filled,  force drain some SELECTs
ASM allocation			 35,695    0.0		   0		0    N/A
ASM connection state lat	  5,163    0.0		   0		0    N/A
ASM db client latch		    500    0.0		   0		0    N/A
				v_do_update := FALSE;
ASM map headers 		    574    0.0		   0		0    N/A
ASM map load waiting lis	    164    0.0		   0		0    N/A
ASM map operation freeli	     42    0.0		   0		0    N/A
ASM map operation hash t      5,459,597    0.0	  0.2	   0		0    N/A
			END IF;
ASM network background l	  5,812    0.0		   0		0    N/A
ASM network state latch 	    176    0.0		   0		0    N/A
ASM remote client latch 	     10    0.0		   0		0    N/A
		END IF;
AWR Alerted Metric Eleme	  5,422    0.0		   0		0    N/A
Autotask management		     10    0.0		   0		0    N/A
	END IF;
Change Notification Hash	    233    0.0		   0		0    N/A
Column stats entry latch	      1    0.0		   0		0    N/A
Consistent RBA			 95,223    0.0	  0.1	   0		0    N/A

DML lock allocation		217,277    0.0	  0.1	   0		0    N/A
Event Group Locks		     24    0.0		   0		0    N/A
FIB s.o chain latch		    164    0.0		   0		0    N/A
FOB consolidated s.o lis	    164    0.0		   0		0    N/A
----------------------------------------------------------------------------------------------------------------------
File State Object Pool P	      1    0.0		   0		0    N/A
GCS logfile block		      1    0.0		   0		0    N/A
GCS logfile write queue 	      1    0.0		   0		0    N/A
Hang Manager wait event 	     41    0.0		   0	    7,096    0.0
-- The type of SQL is now determined...execute it in the following section
I/O Staticstics latch		      1    0.0		   0		0    N/A
ILM Stats Stripe Latch		      1    0.0		   0		0    N/A
ILM Stats main anchor la	    124    0.0		   0		0    N/A
ILM access tracking exte	      1    0.0		   0		0    N/A
----------------------------------------------------------------------------------------------------------------------
ILM activity tracking la	      1    0.0		   0		0    N/A
IM Global dictionary lat	      1    0.0		   0		0    N/A
IM Global dictionary que	      1    0.0		   0		0    N/A

IM Global dictionary rw 	      1    0.0		   0		0    N/A
IM area sb latch		      1    0.0		   0		0    N/A
IM area scb latch		      1    0.0		   0		0    N/A
	IF ( v_do_update != TRUE ) THEN
IM emb latch			      1    0.0		   0		0    N/A
IM seg hdr latch		      1    0.0		   0		0    N/A
		--
IMFS defer write list		      1    0.0		   0		0    N/A
IMXT hash table latch		      1    0.0		   0		0    N/A
		-- Do a SELECT statement
IPC other latch 		      7    0.0		   0		0    N/A
		-- Work out scan or random
IPC stats buffer allocat	      1    0.0		   0		0    N/A
In memory undo latch		      1    0.0		   0		0    N/A
		IF  ( v_random_workload_only = TRUE ) THEN
JS Sh mem access		    122    0.0		   0		0    N/A
JS broadcast add buf lat	    138    0.0		   0		0    N/A
JS broadcast drop buf la	    138    0.0		   0		0    N/A
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
JS broadcast load blnc l	    138    0.0		   0		0    N/A
JS queue access latch		      1    0.0		   0		0    N/A
JS queue state obj latch	  5,082    0.0		   0		0    N/A
			v_do_scan_query := FALSE;
JS slv state obj latch		      1    0.0		   0		0    N/A
KCNIBR - invalid block r	      1    0.0		   0		0    N/A
KDCStatHash latch		      1    0.0		   0		0    N/A
			v_scan_query_quota := TRUE ;
KDFI Buffer Latch		      1    0.0		   0		0    N/A
KDFI Hash Bucket Latch		      1    0.0		   0		0    N/A
KDFI Hash Elem Latch		      1    0.0		   0		0    N/A
KDMADO action list latch	      1    0.0		   0		0    N/A
		ELSE
KDMADO bll latch		      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
			IF ( v_scan_workload_only = TRUE ) THEN
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
				v_do_scan_query := TRUE;
------------------------ -------------- ------ ------ ------ ------------ ------
KDMADO latch			      1    0.0		   0		0    N/A
KFC FX Hash Latch		      1    0.0		   0		0    N/A
				v_scan_query_quota := FALSE;
KFC Hash Latch			      1    0.0		   0		0    N/A
KFCL LE Freelist		      1    0.0		   0		0    N/A
KFIAS client latch		      1    0.0		   0		0    N/A
KFIAS cluster latch		      1    0.0		   0		0    N/A
			ELSE
KFIAS endpoint latch		      1    0.0		   0		0    N/A
KFIAS node latch		      1    0.0		   0		0    N/A
KFIAS process latch		      1    0.0		   0		0    N/A
KFIAS queue latch		      1    0.0		   0		0    N/A
				IF ( v_scan_query_quota = FALSE ) THEN
KFK SGA Libload latch		  4,704    0.0		   0		0    N/A
KFMD SGA			    346    0.0		   0		0    N/A
KGNFS-NFS:SHM structure 	      1    0.0		   0		0    N/A
KGNFS-NFS:SVR LIST		    203    0.0		   0		0    N/A
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
KJC message pool KGH cal	     10    0.0		   0		0    N/A
KJC message pool free li	 58,950    0.1	  0.0	   0	  160,402    0.1
KJC message pool pending	      1    0.0		   0		0    N/A
KJCT flow control latch       1,896,139    0.1	  0.1	   0		0    N/A
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
KMG MMAN ready and start	    202    0.0		   0		0    N/A
KSFS OFS ctx level paren	      1    0.0		   0		0    N/A
KSFS OFS req layer paren	      1    0.0		   0		0    N/A
KSFS OFS sess layer pare	      1    0.0		   0		0    N/A
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
KSFS Receive and Send Qu	      1    0.0		   0		0    N/A
KSFS id table parent lat	      1    0.0		   0		0    N/A
KSFS ksfs_node latch		      1    0.0		   0		0    N/A
KSFSD name cache parent 	      1    0.0		   0		0    N/A
						v_do_scan_query := TRUE;
KSGL LS Segment latch		      1    0.0		   0		0    N/A
KSGL SGA anchor latch		      1    0.0		   0		0    N/A
KSIPC ASPC anchor latch 	      1    0.0		   0		0    N/A
					ELSE
KSIPC SGA allocation par	    103    0.0		   0		0    N/A
KSIPCGSN Hash Table latc	      1    0.0		   0		0    N/A
KSIPCGSN Namespace latch	      1    0.0		   0		0    N/A
KSK PDB IO STAT 		      1    0.0		   0		0    N/A
						v_do_scan_query := FALSE;
KSRMA SGA anchor latch		      1    0.0		   0		0    N/A
KSRMF SGA anchor latch		      1    0.0		   0		0    N/A
KSWL SGA anchor latch		      1    0.0		   0		0    N/A
KSXR hang analysis phase	    192    0.0		   0		0    N/A
					END IF;
KSXR hang analysis phase	     63    0.0		   0		0    N/A
KTF sga latch			      2    0.0		   0	      261    0.0
KTILM latch			      1    0.0		   0		0    N/A
KTU in-memory txn table 	      1    0.0		   0		0    N/A
				ELSE
KTURMA ODPSCN latch		      1    0.0		   0		0    N/A
KTURMA SGA allocation pa	      1    0.0		   0		0    N/A
KWQMN job cache list lat	     84    0.0		   0		0    N/A
Latch for NonceHistory		      1    0.0		   0		0    N/A
					-- Scan quota has been filled,	force drain some random access SELECTS
Locator state objects po	      1    0.0		   0		0    N/A
Lost write change tracki	      1    0.0		   0		0    N/A
Lsod array latch		     24    0.0		   0		0    N/A
MGA asr alloc latch		     10    0.0		   0		0    N/A
					v_do_scan_query := FALSE;
MGA heap latch			     49    6.1	  1.0	   0		0    N/A
MGA shared context latch	  1,273    0.4	  0.2	   0		0    N/A
				END IF;
MGA shared context root 	     62    9.7	  0.5	   0		0    N/A
MQL Tracking Latch		      0    N/A		   0	       12    0.0
Memory Management Latch 	      0    N/A		   0	      202    0.0
Memory Queue			      1    0.0		   0		0    N/A
			END IF;
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
		END IF;
Memory Queue Subscriber 	      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142

-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0


					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
		IF ( v_do_scan_query != TRUE ) THEN
------------------------ -------------- ------ ------ ------ ------------ ------
Message cache latch		      1    0.0		   0		0    N/A
MinActiveScn Latch		     30    0.0		   0		0    N/A
Mutex				      1    0.0		   0		0    N/A
			SELECT COUNT(c2) INTO v_rowcnt
Mutex Stats			      1    0.0		   0		0    N/A
Nologging Standby SCN Ti	    200    0.0		   0		0    N/A
OS process			    491    0.0		   0		0    N/A
OS process allocation		  1,246    0.0		   0		0    N/A
			FROM cf1
OS process: request allo	     26    0.0		   0		0    N/A
PDB Hash Table Latch		      1    0.0		   0		0    N/A
PDB LRU structure		      1    0.0		   0		0    N/A
PL/SQL warning settings 	     19    0.0		   0		0    N/A
PX hash array latch		      1    0.0		   0		0    N/A
Parent latch for depende	      1    0.0		   0		0    N/A
Parent latch for query h	      1    0.0		   0		0    N/A
Parent latch for segment	      1    0.0		   0		0    N/A
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);
QMT				      1    0.0		   0		0    N/A
Real-time descriptor lat	  7,445    0.0		   0		0    N/A
Report Request stats lat	     45    0.0		   0		0    N/A
Report Request struct la	     15    0.0		   0		0    N/A
Request holder compeltio	      9    0.0		   0		0    N/A
Retry Ht elm latch		      1    0.0		   0		0    N/A
Retry bkt latch 		      1    0.0		   0		0    N/A

SGA IO buffer pool latch	      8    0.0		   0		8    0.0
SGA Logging Bkt Latch		      1    0.0		   0		0    N/A
SGA Logging Log Latch		  2,857    0.0		   0		0    N/A
SGA blob parent 		      1    0.0		   0		0    N/A
SGA bucket locks		      1    0.0		   0		0    N/A
SGA heap locks			      1    0.0		   0		0    N/A
SGA pool locks			      1    0.0		   0		0    N/A
			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
SO private so latch		     42    0.0		   0		4    0.0
SQL memory manager latch	      1    0.0		   0	      201    0.0
SQL memory manager worka	 14,951    0.0		   0		0    N/A
SR Stats Stripe Latch		      1    0.0		   0		0    N/A
		ELSE
Sched IM Job latch		     11    0.0		   0		0    N/A
Sched InMem Job Cache		      1    0.0		   0		0    N/A
Shared B-Tree			     22    0.0		   0		0    N/A
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
Streams Generic 		      1    0.0		   0		0    N/A
Subscriber Ht elm latch 	      1    0.0		   0		0    N/A
Testing 			      1    0.0		   0		0    N/A
Token Manager			      1    0.0		   0		0    N/A

Txn Ht elm latch		      1    0.0		   0		0    N/A
Txn bkt latch			      1    0.0		   0		0    N/A
UM object latch 		      1    0.0		   0		0    N/A
WCR: sync			      1    0.0		   0		0    N/A
			v_scan_queries_cnt := v_scan_queries_cnt + 1;
Write State Object Pool 	      1    0.0		   0		0    N/A
X$KSFQP 			      1    0.0		   0		0    N/A
XDB NFS Security Latch		      1    0.0		   0		0    N/A
XDB unused session pool 	      1    0.0		   0		0    N/A

XDB used session pool		      1    0.0		   0		0    N/A
active checkpoint queue 	 23,332    0.0		   0		0    N/A
active service list		  2,859    0.0		   0	      489    0.0
archive destination		     20    0.0		   0		0    N/A
begin backup scn array		      7    0.0		   0		0    N/A
buffer pool			      1    0.0		   0		0    N/A
business card			     15    0.0		   0		0    N/A
cache buffer handles		     36    0.0		   0		0    N/A
cache buffers chains	     16,528,313    0.0	  0.0	   0	2,127,845    0.1
cache buffers lru chain       2,395,576    0.1	  0.0	   0	2,424,872    0.3
cache table scan latch		     15    0.0		   0	       15    0.0
call allocation 		    230    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
change notification clie	      1    0.0		   0		0    N/A
channel handle pool latc	     53    0.0		   0		0    N/A
channel operations paren	  1,298    0.0		   0		0    N/A
checkpoint queue latch	      1,011,724    0.0	  0.0	   0	  339,012    0.0
client/application info 	     66    0.0		   0		0    N/A
compile environment latc	     24    0.0		   0		0    N/A
corrupted undo seg latch	      7    0.0		   0		0    N/A
cp handoff latch		      1    0.0		   0		0    N/A
cp pool latch			      1    0.0		   0		0    N/A
cp server hash latch		      1    0.0		   0		0    N/A
cp sga latch			     10    0.0		   0		0    N/A
cp srv type state latch 	    604    0.0		   0		0    N/A
cp srv type wait latch		      1    0.0		   0		0    N/A
cr slave free list		      1    0.0		   0		0    N/A
cvmap freelist lock		      1    0.0		   0		0    N/A
deferred cleanup latch		     10    0.0		   0		0    N/A
dispatcher info 		      4    0.0		   0		0    N/A
dml lock allocation		     10    0.0		   0		0    N/A
done queue latch		      1    0.0		   0		0    N/A
dtp latch			     26    0.0		   0		0    N/A
dummy allocation		     57    0.0		   0		0    N/A
eighth spare latch - X p	      1    0.0		   0		0    N/A
eleventh spare latch - c	      1    0.0		   0		0    N/A
enqueue freelist latch		      1    0.0		   0	   16,593    0.0
enqueue hash chains		670,580    0.1	  0.3	   0		1    0.0
enqueues			     57    0.0		   0		0    N/A
error message lists		     33    0.0		   0		0    N/A
fast space usage latch		      5    0.0		   0		0    N/A
fifteenth spare latch - 	      1    0.0		   0		0    N/A
file cache latch		    134    0.0		   0		0    N/A
flash file access latch 	      1    0.0		   0		0    N/A
flashback copy			      1    0.0		   0		0    N/A
fourteenth spare latch -	      1    0.0		   0		0    N/A
fourth Audit Vault latch	      1    0.0		   0		0    N/A
gc element		      9,080,447    0.0	  0.1	   0	  938,812    0.1
gc xid list			     89    0.0		   0		0    N/A
gcs commit scn state		      1    0.0		   0		0    N/A
gcs nodemap pool		 28,171    0.0		   0		0    N/A
gcs opaque info freelist	 38,662    0.0	  0.0	   0		0    N/A
gcs partitioned table ha      5,541,204    0.0	  0.0	   0	  126,667    0.0
gcs pcm hashed value buc	      1    0.0		   0		0    N/A
gcs remaster request que	      2    0.0		   0		0    N/A
gcs resource freelist	      1,570,339    0.1	  0.1	   0	  885,304    0.1
gcs resource hash	      8,483,491    0.0	  0.3	   0	    1,000    2.7
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
gcs resource scan list		      1    0.0		   0		0    N/A
gcs resource timerq list	      1    0.0		   0		0    N/A
		v_updates_cnt := v_updates_cnt + 1;
gcs resource validate li	      1    0.0		   0		0    N/A
gcs shadows freelist		710,046    0.0		   0		0    N/A
ges cached resource list	 74,944    0.0	  0.1	   0	   17,566    0.0

ges deadlock list		    220    0.0		   0		0    N/A
ges domain table		233,317    0.0		   0		0    N/A
ges enqueue table freeli	219,304    0.0	  0.2	   0		0    N/A
		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
ges group table 		233,515    0.0		   0		0    N/A
ges process hash list		  2,974    0.0		   0		0    N/A
ges process parent latch	468,798    0.0		   0		0    N/A
ges process table freeli	     26    0.0		   0		0    N/A
			v_update_quota := TRUE;
ges remote lock freelist	     61    0.0		   0		0    N/A
ges resource hash list		243,277    0.0	  0.5	   0	       11   27.3
ges resource scan list		      1    0.0		   0		0    N/A
		END IF;
ges resource table freel	    216    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
	END IF ;
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0
----------------------------------------------------------------------------------------------------------------------

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
------------------------ -------------- ------ ------ ------ ------------ ------
ges s-lock bitvec freeli	    146    0.0		   0		0    N/A
----------------------------------------------------------------------------------------------------------------------
ges timeout list		    263    0.0		   0	       14    0.0
ges value block free lis	      1    0.0		   0		0    N/A
global tx hash mapping		      1    0.0		   0		0    N/A

granule from data transf	      1    0.0		   0		0    N/A
gws:Sharding global desc	     40    0.0		   0		0    N/A
hash table Sql Plan Find	     13    0.0		   0		0    N/A
hash table column usage 	     20    0.0		   0	       18    0.0
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
hash table expression us	      1    0.0		   0		0    N/A
hash table sql contorl l	      1    0.0		   0		0    N/A
heartbeat check 		      1    0.0		   0	      291    0.0
		--
heartbeat structure mana	      0    N/A		   0	      302    0.0
imc buf hdl lat 		      1    0.0		   0		0    N/A
imc cr clone buf		      1    0.0		   0		0    N/A
imc hash lat			      1    0.0		   0		0    N/A
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
imc sj lat			      1    0.0		   0		0    N/A
imc srchsp lat			      1    0.0		   0		0    N/A
imc-txn-wrk-lat 		      1    0.0		   0		0    N/A
in-memory area latch		      1    0.0		   0		0    N/A
		-- so reset flags and counters before continuing
in-memory columnar segme	      1    0.0		   0		0    N/A
in-memory columnar ts ex	      1    0.0		   0		0    N/A
in-memory global pool la	      1    0.0		   0		0    N/A
		--
interrupt manipulation		     68    0.0		   0		0    N/A
intra txn parallel recov	      1    0.0		   0		0    N/A
io pool granule list		     10    0.0		   0		0    N/A
		v_update_quota := FALSE;
io pool granule metadata	     21    0.0		   0		0    N/A
job workq parent latch		      1    0.0		   0		0    N/A
job_queue_processes para	     10    0.0		   0		0    N/A
k2q global data latch		    404    0.0		   0		0    N/A
		v_updates_cnt := 0;
k2q lock allocation		      1    0.0		   0		0    N/A
kKCN Cqn SGA			      1    0.0		   0		0    N/A
kcb DW scan objtemp hash	      1    0.0		   0		0    N/A
		v_selects_cnt := 0;
kcn buffer chains		      1    0.0		   0		0    N/A
kdlx hb parent latch		      1    0.0		   0		0    N/A
kgb parent			      1    0.0		   0		0    N/A
kgnfs mount latch		      1    0.0		   0		0    N/A
	END IF;
kjbr roi instance map		      1    0.0		   0		0    N/A
kjci objects freelist la	  1,879    0.0		   0		0    N/A

kjci process context lat	  1,405    0.8	  0.0	   0	   28,093    0.0
kjci process list latch 	    806    0.0		   0		0    N/A
kjci request sequence la	    154    0.0		   0		0    N/A
kjcipctx state object fr	     21    0.0		   0		0    N/A
	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
kjoedcso state object fr	     10    0.0		   0		0    N/A
kjoeq omni enqueue hash 	      1    0.0		   0		0    N/A
kjoer owner hash bucket 	      1    0.0		   0		0    N/A
kjpm my inst data		     20    0.0		   0		0    N/A
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
kjsc Request obj freelis	     42    0.0		   0		0    N/A
kjsc Ring Buffer obj fre	     21    0.0		   0		0    N/A
kjsc protect control req	     21    0.0		   0	    6,050    0.0
		-- so reset flags and counters
kjsc protect warm up con	     50    0.0		   0		0    N/A
kjsca pkey obj freelist 	     15    0.0		   0		0    N/A
kjsca protect pkey hash 	  6,500    0.0		   0		0    N/A
		v_scan_query_quota := FALSE;
kjsca protect service ha	     21    0.0		   0		0    N/A
kjscpss state object fre	     21    0.0		   0		0    N/A
kokc descriptor allocati	     22    0.0		   0		0    N/A
		v_scan_queries_cnt := 0;
kpoxft latch			      0    N/A		   0	       19    0.0
krso process			     21    0.0		   0		0    N/A
ksevn object root latch 	    202    0.0		   0		0    N/A
ksfv messages			      1    0.0		   0		0    N/A
		v_random_access_queries_cnt := 0;
ksi resource reuse count	      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
	END IF;
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0


					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
	v_loop_cnt := v_loop_cnt + 1 ;
------------------------ -------------- ------ ------ ------ ------------ ------
ksim group membership ca	    169    0.0		   0		0    N/A
ksim membership request 	      0    N/A		   0	      253    0.0
	v_now := DBMS_UTILITY.GET_TIME();
ksns object latch		      1    0.0		   0		0    N/A
kss move lock			      9    0.0		   0		0    N/A
ksuosstats global area		     48    0.0		   0	      231    0.0
ksutcpistat latch		      1    0.0		   0		0    N/A

ksv allocation latch		     25    0.0		   0		0    N/A
ksv class latch 		 14,391    0.1	  0.1	   0		0    N/A
ksv msg queue latch		    215    0.0		   0	      214    0.0
	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
ksxp shared latch		     26    0.0		   0		0    N/A
ksxp so latch			     26    0.0		   0		0    N/A
		-- If this is a fixed-iteration count test cycle and we've hit the number of
ksz_so allocation latch 	     26    0.0		   0		0    N/A
ktfbn latch			    131    0.0		   0		0    N/A
		-- iterations then set exit flag
ktm adg jrnls			      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
		v_stop_immediate := TRUE ;
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg space			      1    0.0		   0		0    N/A
	END IF;
ktm adg stages			      1    0.0		   0		0    N/A
ktm adg worklink		      1    0.0		   0		0    N/A
END LOOP;
ktm global data 		     11    0.0		   0		0    N/A
ktm prv jrnls			      1    0.0		   0		0    N/A
ktmpj HT ls			      1    0.0		   0		0    N/A
kwqbsn:qsga			     21    0.0		   0		0    N/A

kwslbmdl: metadata latch	     21    0.0		   0		0    N/A
kwslbql: queue latch		      1    0.0		   0		0    N/A
kwslbutl: uncommitted tx	      1    0.0		   0		0    N/A
v_end_time := v_now ;
kwsptQcachLt: queue cach	      1    0.0		   0		0    N/A
kwsptTrncTsksLt: trunc t	      1    0.0		   0		0    N/A
kwsptjobAdPtLt: AdPt lis	     14    0.0		   0		0    N/A
kwsslLat: skiplist latch	      1    0.0		   0		0    N/A
v_now := DBMS_UTILITY.GET_TIME();
kxfxscanrate_latch		      1    0.0		   0		0    N/A
lgwr LWN SCN			 97,577    0.0	  0.0	   0		0    N/A
list of block allocation	     39    0.0		   0		0    N/A
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
loader state object free	     64    0.0		   0		0    N/A
lob segment dispenser la	     11    0.0		   0		0    N/A
lob segment hash table l	     36    0.0		   0		0    N/A

lob segment query latch 	      1    0.0		   0		0    N/A
lock DBA buffer during m	      1    0.0		   0		0    N/A
log write info			      0    N/A		   0	  128,121    3.1
log write worker phase		  7,085    0.0	  0.5	   0		0    N/A
v_total_time := v_end_time - v_begin_time ;
logical standby cache		      1    0.0		   0		0    N/A
logminer context allocat	      1    0.0		   0		0    N/A
logminer local			      1    0.0		   0		0    N/A
logminer work area		      1    0.0		   0		0    N/A
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
longop free list parent 	      1    0.0		   0		0    N/A
managed standby 		     20    0.0		   0		0    N/A
message bitmap latch		      1    0.0		   0		0    N/A
message pool operations 	    627    0.0		   0		0    N/A
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
messages			578,144    0.0	  0.1	   0		0    N/A
msg queue latch 		      1    0.0		   0		0    N/A
multiblock read objects 	    100    0.0		   0		0    N/A
name-service memory obje	     68    0.0		   0		0    N/A
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
name-service namespace b	  3,157    0.0		   0		0    N/A
name-service pending que	     30    0.0		   0		0    N/A
name-service request que	  6,165    0.0		   0		0    N/A

ncodef allocation latch 	     10    0.0		   0		0    N/A
ninth spare latch - X pa	      1    0.0		   0		0    N/A
object queue header free	  1,014    0.0		   0		0    N/A
object queue header oper      5,150,095    0.0	  0.1	   0	   14,639    0.0
END;</pre_sqltext></td></tr>
object queue memory		      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
<tr><td scope="row" class='awrnc'><a class="awr" name="gjaap3w3qbf8c"></a>gjaap3w3qbf8c</td><td class='awrnc'><pre_sqltext class="awr">select count(*) from ilmobj$ where rownum = 1</pre_sqltext></td></tr>
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
</table>
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
<p />
object stats modificatio	      3    0.0		   0		0    N/A
parallel query alloc buf	    157    0.0		   0	       90    0.0
parallel query stats		     37    0.0		   0		0    N/A
parallel txn reco latch 	    636    0.0		   0		0    N/A
<a class="awr" href="#22">Back to SQL Statistics</a>
parameter table manageme	    210    0.0		   0		0    N/A
pdb enqueue hash chains 	      1    0.0		   0		0    N/A
peshm				      1    0.0		   0		0    N/A
pesom_free_list 		      1    0.0		   0		0    N/A
<br /><a class="awr" href="#top">Back to Top</a><p />
pesom_hash_node 		      1    0.0		   0		0    N/A
pkey global statistics		      1    0.0		   0		0    N/A
pmon dead latch 		     10    0.0		   0		0    N/A
post/wait queue 		 26,741    0.0	  0.0	   0	   27,065    0.1
<p />
process allocation		  3,018    0.0		   0		0    N/A
process group creation		     26    0.0		   0		0    N/A
process memory detail		      1    0.0		   0		0    N/A
<a class="awr" name="23"></a>
process pkey statistics 	      1    0.0		   0		0    N/A
process queue			     73    0.0		   0		0    N/A
process queue reference 	  2,485    0.0		   0	      368    0.0
qmn task queue latch		     84    0.0		   0		0    N/A
<h2 class="awr">
quarantine object		     10    0.0		   0		0    N/A
query server freelists		     78    0.0		   0		0    N/A
query server process		    438    0.0		   0		0    N/A
queued dump request		      2    0.0		   0		0    N/A
Instance Activity Statistics
queuing load statistics 	      1    0.0		   0		0    N/A
read-moslty lock queue u	      1    0.0		   0		0    N/A
recovery domain hash buc	    342    0.0		   0		0    N/A
</h2>
redo allocation 		293,793    0.2	  0.2	   0	  461,035    0.4
redo copy			      1    0.0		   0	  461,755    0.1
redo transport task		      1    0.0		   0		0    N/A
redo writing			312,087    0.0	  0.1	   0		0    N/A
<ul>
remote tool request latc	     37    0.0		   0		0    N/A
resmgr group change latc	     28    0.0		   0		0    N/A
resmgr:active threads		     68    0.0		   0	       10    0.0
resmgr:actses change gro	     20    0.0		   0		0    N/A
<li class="awr"><a class="awr" href="#1200">Key Instance Activity Stats</a></li>
resmgr:actses change sta	      1    0.0		   0		0    N/A
resmgr:free threads list	     56    0.0		   0		0    N/A
resmgr:plan CPU method		      1    0.0		   0		0    N/A
resmgr:plan change alloc	      1    0.0		   0		0    N/A
<li class="awr"><a class="awr" href="#1250">Instance Activity Stats</a></li>
resmgr:plan change latch	      1    0.0		   0		0    N/A
resmgr:resource group CP	     21    0.0		   0		0    N/A
resmgr:schema config		     19    0.0		   0	       10    0.0
resmgr:session queuing		      1    0.0		   0		0    N/A
<li class="awr"><a class="awr" href="#1300">Instance Activity Stats - Absolute Values</a></li>
row cache objects		      1    0.0		   0		0    N/A
rt rmv count latch		      0    N/A		   0	      302    0.0
second Audit Vault latch	      1    0.0		   0		0    N/A
segmented array pool		    164    0.0		   0		0    N/A
<li class="awr"><a class="awr" href="#1400">Instance Activity Stats - Thread Activity</a></li>
sequence cache			    115    0.0		   0		0    N/A
service drain list		    604    0.0		   0		0    N/A
session allocation		108,363    0.0	  0.0	   0	  108,294    0.0
session idle bit		217,002    0.0	  0.0	   0		0    N/A
</ul>
session queue latch		      1    0.0		   0		0    N/A
session state list latch	     57    0.0		   0		0    N/A
session statistics		     57    0.0		   0		0    N/A
session switching		     33    0.0		   0		0    N/A
<a class="awr" href="#top">Back to Top</a><p />
session timer			    201    0.0		   0		0    N/A
seventh spare latch - X 	      1    0.0		   0		0    N/A
sga hash table parent la	      1    0.0		   0		0    N/A
shard latch			      1    0.0		   0		0    N/A
<a class="awr" name="1200"></a>
shardgroup list latch		      4    0.0		   0		0    N/A
shared pool			  8,594    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
<h3 class="awr">Key Instance Activity Stats</h3>
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
<ul>
shared pool sim alloc		      1    0.0		   0		0    N/A
shared pool simulator		     11    0.0		   0		0    N/A
shared server configurat	    202    0.0		   0		0    N/A
sim partition latch		      1    0.0		   0		0    N/A
simulator hash latch		762,413    0.0		   0		0    N/A
simulator lru latch		      1    0.0		   0	  511,123    0.0
sixth spare latch - X pa	      1    0.0		   0		0    N/A
sort extent pool		    232    0.0		   0		0    N/A
<li class="awr"> Ordered by statistic name</li>
space background task la	  1,456   44.4	  0.8	   0	      396    3.0
state object free list		      2    0.0		   0		0    N/A
statistics aggregation		    145    0.0		   0		0    N/A
subscriber Ht bkt		      1    0.0		   0		0    N/A
</ul>
tablespace key chain		      1    0.0		   0		0    N/A
temp lob duration state 	     20    0.0		   0		0    N/A
tenth spare latch - X pa	      1    0.0		   0		0    N/A
test excl. parent l0		      1    0.0		   0		0    N/A
test excl. parent2 l0		      1    0.0		   0		0    N/A
test excl. parent2 lmid 	      1    0.0		   0		0    N/A
<table border="0" class="tdiff" summary="This table displays Key Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
test mixed exclusive		      1    0.0		   0		0    N/A
test mode exclusive		      1    0.0		   0		0    N/A
test open exclusive		      1    0.0		   0		0    N/A
test pdb exclusive		      1    0.0		   0		0    N/A
test shared parent2 lmid	      1    0.0		   0		0    N/A
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>891,622</td><td align="right" class='awrc'>1,475.21</td><td align="right" class='awrc'>8.25</td></tr>
thirteenth spare latch -	      1    0.0		   0		0    N/A
threshold alerts latch		     20    0.0		   0		0    N/A
transaction allocation		     93    0.0		   0		0    N/A
twelfth spare latch - ch	      1    0.0		   0		0    N/A
twenty-fifth spare latch	      1    0.0		   0		0    N/A
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>722,307</td><td align="right" class='awrnc'>1,195.07</td><td align="right" class='awrnc'>6.68</td></tr>
twenty-first spare latch	      1    0.0		   0		0    N/A
twenty-fourth spare latc	      1    0.0		   0		0    N/A
twenty-second spare latc	      1    0.0		   0		0    N/A
twenty-third spare latch	      1    0.0		   0		0    N/A
undo global data		343,230    0.0	  0.3	   0		0    N/A
virtual circuit buffers 	      1    0.0		   0		0    N/A
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>612</td><td align="right" class='awrc'>1.01</td><td align="right" class='awrc'>0.01</td></tr>
virtual circuit holder		      1    0.0		   0		0    N/A
virtual circuit queues		      1    0.0		   0		0    N/A
			  ------------------------------------------------------


<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>5,162</td><td align="right" class='awrnc'>8.54</td><td align="right" class='awrnc'>0.05</td></tr>
Latch Sleep Breakdown			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> ordered by misses desc

				       Get				   Spin
Latch Name			  Requests	 Misses      Sleeps	   Gets
-------------------------- --------------- ------------ ----------- -----------
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>1,102</td><td align="right" class='awrc'>1.82</td><td align="right" class='awrc'>0.01</td></tr>
cache buffers lru chain 	 2,395,576	  3,185 	 94	  3,093
gc element			 9,080,447	  1,687 	137	  1,555
KJCT flow control latch 	 1,896,139	  1,630 	 89	  1,546
gcs resource freelist		 1,570,339	    958 	 98	    867
gcs resource hash		 8,483,491	    820 	211	    628
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>16,228</td><td align="right" class='awrnc'>26.85</td><td align="right" class='awrnc'>0.15</td></tr>
redo allocation 		   293,793	    708 	126	    588
space background task latc	     1,456	    646 	504	    184
enqueue hash chains		   670,580	    573 	150	    440
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
cache buffers chains		16,528,313	    444 	  7	    437
object queue header operat	 5,150,095	    168 	 16	    154
messages			   578,144	    142 	 10	    133
ASM map operation hash tab	 5,459,597	    139 	 24	    116
ges enqueue table freelist	   219,304	     78 	 15	     63
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>830,680</td><td align="right" class='awrnc'>1,374.38</td><td align="right" class='awrnc'>7.68</td></tr>
KJC message pool free list	    58,950	     37 	  1	     36
redo writing			   312,087	     33 	  2	     31
checkpoint queue latch		 1,011,724	     22 	  1	     21
ges resource hash list		   243,277	     13 	  6	      7
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>1,458</td><td align="right" class='awrc'>2.41</td><td align="right" class='awrc'>0.01</td></tr>
DML lock allocation		   217,277	     11 	  1	     10
ges cached resource lists	    74,944	     10 	  1	      9
undo global data		   343,230	     10 	  3	      7
Consistent RBA			    95,223	      8 	  1	      7
ksv class latch 		    14,391	      8 	  1	      7
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
MGA shared context root la		62	      6 	  3	      3
MGA shared context latch	     1,273	      5 	  1	      4
MGA heap latch				49	      3 	  3	      1
log write worker phase		     7,085	      2 	  1	      1
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>2,070,440</td><td align="right" class='awrc'>3,425.58</td><td align="right" class='awrc'>19.15</td></tr>


Latch Miss Sources			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> only latches with sleeps are shown
-> ordered by name, sleeps desc

<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>300,804</td><td align="right" class='awrnc'>497.69</td><td align="right" class='awrnc'>2.78</td></tr>
						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
ASM map operation hash t kffmTranslate			  0	    16	      9
ASM map operation hash t kffmDoDone_1			  0	     8	     15
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>304,034,828</td><td align="right" class='awrc'>503,031.62</td><td align="right" class='awrc'>2,811.52</td></tr>
DML lock allocation	 ktaiam 			  0	     1	      0
KJC message pool free li kjcspfmbq: free vector of	  0	     1	      0
KJCT flow control latch  kjctcsnd: send normal mess	  0	    61	     61
KJCT flow control latch  kjcts_sedeqv3: dequeue a v	  0	    10	      3
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>829,868</td><td align="right" class='awrnc'>1,373.03</td><td align="right" class='awrnc'>7.67</td></tr>
KJCT flow control latch  kjctr_releasetkt: change t	  0	     7	      1
KJCT flow control latch  kjcts_sqenq: queue a messa	  0	     7	     10
KJCT flow control latch  kjctr_updatetkt: update ti	  0	     4	     11
MGA shared context latch ksm_mga_detach_whr2		  0	     1	      0
MGA shared context root  ksm_mga_detach_whr1		  0	     3	      3
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>5,345,958</td><td align="right" class='awrc'>8,844.99</td><td align="right" class='awrc'>49.44</td></tr>
cache buffers chains	 kcbgtcr: slow path excl	  0	     4	      1
cache buffers chains	 kcbzgb: scan from tail now	  0	     2	      0
cache buffers chains	 kcbbic2			  0	     1	      0
cache buffers chains	 kcbchg: change complete	  0	     1	      0
cache buffers chains	 kcbgtcr: convert latch 	  0	     1	      0
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>197</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>0.00</td></tr>
cache buffers lru chain  kcbzgb_2			  0	    80	     40
cache buffers lru chain  kcbzgws			  0	    14	      0
checkpoint queue latch	 kcbklbc_cql			  0	     1	      0
gc element		 kclnfndnewm			  0	   102	     37
gc element		 kclulb 			  0	    16	     43
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>108,139</td><td align="right" class='awrc'>178.92</td><td align="right" class='awrc'>1.00</td></tr>
gc element		 KCLUNLNK			  0	     4	     14
gc element		 kclplz_1			  0	     4	      1
gc element		 kclfwrite1			  0	     3	      6
gc element		 kclplz 			  0	     3	      0
gc element		 kclnfnds			  0	     2	     28
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>488</td><td align="right" class='awrnc'>0.81</td><td align="right" class='awrnc'>0.00</td></tr>
gc element		 kclrwrite			  0	     2	      7
gc element		 kclrwrite_1			  0	     2	      0
gc element		 kclnfndx			  0	     1	      1
gcs resource freelist	 kjbralc: check freelist no	  0	    70	      0
</table><p />
gcs resource freelist	 kjbralc add resource		  0	    15	     80
gcs resource freelist	 kjbrralc: reserve allocati	  0	     8	      9
gcs resource freelist	 kjbrfr_bg2			  0	     5	      9
gcs resource hash	 kjbcropen			  0	   105	     35
<hr align="left" width="20%" /><p />
gcs resource hash	 kclfwrite1			  0	    57	      6
gcs resource hash	 kjbopen			  0	    14	     13
gcs resource hash	 kjbassume			  0	    12	     24
gcs resource hash	 kjbmpopen			  0	     8	     20
gcs resource hash	 kclpdc 			  0	     6	     33
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
gcs resource hash	 kjbclose_remaster		  0	     5	     33
gcs resource hash	 kclrwrite			  0	     2	      4
gcs resource hash	 kjblocalobj_nolock		  0	     1	      2
gcs resource hash	 kjbmpclose			  0	     1	     27
<br /><a class="awr" href="#top">Back to Top</a><p />
ges cached resource list kjrm2c: move resource to c	  0	     1	      1
ges enqueue table freeli kjlalc: lock allocation	  0	    15	      6
ges resource hash list	 kjlmfnd: search for lockp	  0	     3	      0
ges resource hash list	 kjrmas1: lookup master nod	  0	     2	      0
<a class="awr" name="1250"></a>
ges resource hash list	 kjakcai: search for resp b	  0	     1	      2
ksv class latch 	 ksvclsl: checkpool		  0	     1	      0
log write worker phase	 kcrfw_slave_phase_enter	  0	     1	      0
messages		 ksarcv 			  0	     5	      2
messages		 ksarcv: after wait		  0	     3	      1
<h3 class="awr">Instance Activity Stats</h3>
messages		 ksaamb: after wakeup		  0	     2	      7
mostly latch-free SCN	 kcsnew_scn_rba 		  0	     1	      0
object queue header oper kcbo_unlink_q			  0	    14	      8
object queue header oper kcbo_link_q			  0	     2	      5
<ul>
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	   101	      0
redo allocation 	 kcrfw_post: more space 	  0	    12	     33
redo allocation 	 kcrfw_redo_write: before w	  0	     7	     35
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     6	     58

<li class="awr"> Ordered by statistic name</li>
Latch Miss Sources			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> only latches with sleeps are shown
-> ordered by name, sleeps desc

						     NoWait		 Waiter
</ul>
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
redo writing		 kcrfw_post: rba scn pair	  0	     2	      0
space background task la ktsj_grab_task 		  0	   345	    484
space background task la ktsj_detach_task		  0	   113	     20
space background task la ktsj_smco_purgeexpired 	  0	    38	      0
<table border="0" class="tdiff" summary="This table displays Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
space background task la ktsj_smco_movetasks		  0	     7	      0
space background task la ktsjCreateTask 		  0	     1	      0
undo global data	 ktudba: KSLBEGIN		  0	     2	      0
undo global data	 ktudnx:child			  0	     1	      1
unknown latch		 ksqgtl3			  0	    61	     59
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
unknown latch		 ksqcmi: if lk mode not req	  0	    41	      6
unknown latch		 ksqcmi: if lk mode request	  0	    25	     12
unknown latch		 ksqrcl 			  0	    22	     73
unknown latch		 kghfre 			  0	     3	      3
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>538</td><td align="right" class='awrnc'>0.89</td><td align="right" class='awrnc'>0.00</td></tr>
unknown latch		 ksqcnl 			  0	     1	      0
			  ------------------------------------------------------

Mutex Sleep Summary			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>142</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td></tr>


Parent Latch Statistics 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>429</td><td align="right" class='awrnc'>0.71</td><td align="right" class='awrnc'>0.00</td></tr>

		  No data exists for this section of the report.
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>

Child Latch Statistics			 DB/Inst: P30DB/p30db1	Snaps: 141-142

<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td></tr>
		  No data exists for this section of the report.
			  ------------------------------------------------------


<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
Segments by Logical Reads		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Logical Reads:       5,345,958
-> Captured Segments account for   77.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
Owner			Name
-------------------- ----------
		     Subobject	Obj.				 Logical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
CF1				TABLE	   73481      73483	 119,216    2.23
USER16		     IOPS
I_CF1				INDEX	   73484      73484	 118,992    2.23
USER1		     IOPS
I_CF1				INDEX	   73408      73408	 117,888    2.21
USER29		     IOPS
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
I_CF1				INDEX	   73551      73551	 116,560    2.18
USER2		     IOPS
CF1				TABLE	   73409      73415	 115,712    2.16
			  ------------------------------------------------------

Segments by Physical Reads		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>396</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>0.00</td></tr>
-> Total Physical Reads:       2,070,440
-> Captured Segments account for   99.7% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>311</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- ----------
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>85</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>391</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>584,504</td><td align="right" class='awrnc'>967.07</td><td align="right" class='awrnc'>5.41</td></tr>
<tr><td scope="row" class='awrc'>Batched IO buffer defrag count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO double miss count</td><td align="right" class='awrnc'>584,504</td><td align="right" class='awrnc'>967.07</td><td align="right" class='awrnc'>5.41</td></tr>
<tr><td scope="row" class='awrc'>Batched IO same unit count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO single block count</td><td align="right" class='awrnc'>584,504</td><td align="right" class='awrnc'>967.07</td><td align="right" class='awrnc'>5.41</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector block count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector read count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Block Cleanout Optim referenced</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CCursor + sql area evicted</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CPU used by this session</td><td align="right" class='awrc'>111,132</td><td align="right" class='awrc'>183.87</td><td align="right" class='awrc'>1.03</td></tr>
<tr><td scope="row" class='awrnc'>CPU used when call started</td><td align="right" class='awrnc'>88,150</td><td align="right" class='awrnc'>145.85</td><td align="right" class='awrnc'>0.82</td></tr>
<tr><td scope="row" class='awrc'>CR blocks created</td><td align="right" class='awrc'>743</td><td align="right" class='awrc'>1.23</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Cached Commit SCN referenced</td><td align="right" class='awrnc'>1,497,216</td><td align="right" class='awrnc'>2,477.17</td><td align="right" class='awrnc'>13.85</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Receive Window</td><td align="right" class='awrc'>133</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Send Window</td><td align="right" class='awrnc'>133</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrc'>1,245,165</td><td align="right" class='awrc'>2,060.15</td><td align="right" class='awrc'>11.51</td></tr>
<tr><td scope="row" class='awrnc'>Client Send Congestion Window</td><td align="right" class='awrnc'>190</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Received</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrnc'>42,637</td><td align="right" class='awrnc'>70.54</td><td align="right" class='awrnc'>0.39</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrc'>46,093</td><td align="right" class='awrc'>76.26</td><td align="right" class='awrc'>0.43</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Acked</td><td align="right" class='awrnc'>300,578</td><td align="right" class='awrnc'>497.31</td><td align="right" class='awrnc'>2.78</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Received</td><td align="right" class='awrc'>116,005</td><td align="right" class='awrc'>191.93</td><td align="right" class='awrc'>1.07</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Commit SCN cached</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>18,369</td><td align="right" class='awrnc'>30.39</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>96</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	 114,172    5.51
USER1		     IOPS
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
CF1				TABLE	   73402      73404	 110,168    5.32
USER2		     IOPS
CF1				TABLE	   73409      73415	 109,730    5.30
USER3		     IOPS
CF1				TABLE	   73413      73416	 109,720    5.30
<tr><td scope="row" class='awrnc'>DBWR thread checkpoint buffers written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
USER25		     IOPS
CF1				TABLE	   73527      73522	 109,655    5.30
			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>DBWR transaction table writes</td><td align="right" class='awrc'>294</td><td align="right" class='awrc'>0.49</td><td align="right" class='awrc'>0.00</td></tr>
Segments by Physical Read Requests	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Physical Read Requests:       2,070,369
-> Captured Segments account for   99.7% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
<tr><td scope="row" class='awrnc'>DBWR undo block writes</td><td align="right" class='awrnc'>10,179</td><td align="right" class='awrnc'>16.84</td><td align="right" class='awrnc'>0.09</td></tr>

		     Tablespace
Owner			Name
-------------------- ----------
<tr><td scope="row" class='awrc'>DFO trees parallelized</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
		     Subobject	Obj.			       Phys Read
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
<tr><td scope="row" class='awrnc'>Effective IO time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	 114,172    5.51
USER1		     IOPS
CF1				TABLE	   73402      73404	 110,168    5.32
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>325,148</td><td align="right" class='awrc'>537.96</td><td align="right" class='awrc'>3.01</td></tr>
USER2		     IOPS
CF1				TABLE	   73409      73415	 109,730    5.30
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>163</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>0.00</td></tr>
USER3		     IOPS
CF1				TABLE	   73413      73416	 109,720    5.30
USER25		     IOPS
CF1				TABLE	   73527      73522	 109,655    5.30
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
			  ------------------------------------------------------

Segments by UnOptimized Reads		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total UnOptimized Read Requests:	  2,070,369
<tr><td scope="row" class='awrnc'>Heatmap Blklevel Flush Task Count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-> Captured Segments account for   99.7% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
<tr><td scope="row" class='awrc'>KTFB alloc req</td><td align="right" class='awrc'>97</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
Owner			Name
-------------------- ----------
		     Subobject	Obj.			     UnOptimized
<tr><td scope="row" class='awrnc'>KTFB alloc space (block)</td><td align="right" class='awrnc'>91,881,472</td><td align="right" class='awrnc'>152,019.71</td><td align="right" class='awrnc'>849.66</td></tr>
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	 114,172    5.51
<tr><td scope="row" class='awrc'>KTFB alloc time (ms)</td><td align="right" class='awrc'>14,802</td><td align="right" class='awrc'>24.49</td><td align="right" class='awrc'>0.14</td></tr>
USER1		     IOPS
CF1				TABLE	   73402      73404	 110,168    5.32
USER2		     IOPS
CF1				TABLE	   73409      73415	 109,730    5.30
<tr><td scope="row" class='awrnc'>KTFB apply req</td><td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
USER3		     IOPS
CF1				TABLE	   73413      73416	 109,720    5.30
USER25		     IOPS
CF1				TABLE	   73527      73522	 109,655    5.30
<tr><td scope="row" class='awrc'>KTFB apply time (ms)</td><td align="right" class='awrc'>2,436</td><td align="right" class='awrc'>4.03</td><td align="right" class='awrc'>0.02</td></tr>
			  ------------------------------------------------------

Segments by Optimized Reads		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
<tr><td scope="row" class='awrnc'>KTFB free req</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>KTFB free space (block)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Segments by Direct Physical Reads	 DB/Inst: P30DB/p30db1	Snaps: 141-142

<tr><td scope="row" class='awrnc'>KTFB free time (ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
		  No data exists for this section of the report.
			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>LOB table id lookup cache misses</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Segments by Physical Writes		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Physical Writes:	  300,804
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
-> Captured Segments account for   96.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  17,692    5.88
USER1		     IOPS
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.00</td></tr>
CF1				TABLE	   73402      73404	  15,422    5.13
USER2		     IOPS
CF1				TABLE	   73409      73415	  15,417    5.13
USER13		     IOPS
CF1				TABLE	   73458      73466	  15,364    5.11
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
USER10		     IOPS
CF1				TABLE	   73453      73455	  15,360    5.11
			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td></tr>
Segments by Physical Write Requests	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Physical Write Requests:	  289,518
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			      Phys Write
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  17,666    6.10
<tr><td scope="row" class='awrnc'>TBS Extension: tasks created</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
USER2		     IOPS
CF1				TABLE	   73409      73415	  15,335    5.30
USER1		     IOPS
<tr><td scope="row" class='awrc'>TBS Extension: tasks executed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
CF1				TABLE	   73402      73404	  15,329    5.29
USER13		     IOPS
CF1				TABLE	   73458      73466	  15,280    5.28
USER10		     IOPS
CF1				TABLE	   73453      73455	  15,279    5.28
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>281</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>0.00</td></tr>
			  ------------------------------------------------------

Segments by Direct Physical Writes	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Direct Physical Writes:	     163
<tr><td scope="row" class='awrc'>background checkpoints completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
-> Captured Segments account for   41.1% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
<tr><td scope="row" class='awrnc'>background checkpoints started</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- ----------
		     Subobject	Obj.				  Direct
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
<tr><td scope="row" class='awrc'>background timeouts</td><td align="right" class='awrc'>5,375</td><td align="right" class='awrc'>8.89</td><td align="right" class='awrc'>0.05</td></tr>
SYS		     SYSAUX
WRH$_ACTIVE_SESSION_ 773525_131 TABLE	   74322      74322	      62   38.04
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P312 LOB P	   74332      74332	       5    3.07
<tr><td scope="row" class='awrnc'>blocks cleaned out using minact</td><td align="right" class='awrnc'>186,082</td><td align="right" class='awrnc'>307.88</td><td align="right" class='awrnc'>1.72</td></tr>
			  ------------------------------------------------------

Segments by Table Scans 		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
<tr><td scope="row" class='awrc'>branch node splits</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
			  ------------------------------------------------------

<tr><td scope="row" class='awrnc'>buffer is not pinned count</td><td align="right" class='awrnc'>4,343,425</td><td align="right" class='awrnc'>7,186.28</td><td align="right" class='awrnc'>40.17</td></tr>
<tr><td scope="row" class='awrc'>buffer is pinned count</td><td align="right" class='awrc'>1,552,454</td><td align="right" class='awrc'>2,568.57</td><td align="right" class='awrc'>14.36</td></tr>
<tr><td scope="row" class='awrnc'>bytes received via SQL*Net from client</td><td align="right" class='awrnc'>18,772</td><td align="right" class='awrnc'>31.06</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>bytes sent via SQL*Net to client</td><td align="right" class='awrc'>9,949</td><td align="right" class='awrc'>16.46</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrnc'>837,453</td><td align="right" class='awrnc'>1,385.58</td><td align="right" class='awrnc'>7.74</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgas</td><td align="right" class='awrc'>208,319</td><td align="right" class='awrc'>344.67</td><td align="right" class='awrc'>1.93</td></tr>
Segments by DB Blocks Changes		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> % of Capture shows % of DB Block Changes for each top segment compared
-> with total DB Block Changes for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

<tr><td scope="row" class='awrnc'>calls to kcmgcs</td><td align="right" class='awrnc'>2,816</td><td align="right" class='awrnc'>4.66</td><td align="right" class='awrnc'>0.03</td></tr>
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				DB Block    % of
Object Name	       Name	Type	    Obj#   Dataobj#	 Changes Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  17,968    5.50
USER1		     IOPS
CF1				TABLE	   73402      73404	  17,296    5.30
USER3		     IOPS
<tr><td scope="row" class='awrc'>cell physical IO interconnect bytes</td><td align="right" class='awrc'>23,765,771,264</td><td align="right" class='awrc'>39,320,937.56</td><td align="right" class='awrc'>219,770.58</td></tr>
CF1				TABLE	   73413      73416	  17,232    5.28
USER7		     IOPS
CF1				TABLE	   73433      73436	  17,200    5.27
USER13		     IOPS
CF1				TABLE	   73458      73466	  17,184    5.26
<tr><td scope="row" class='awrnc'>change write time</td><td align="right" class='awrnc'>1,339</td><td align="right" class='awrnc'>2.22</td><td align="right" class='awrnc'>0.01</td></tr>
			  ------------------------------------------------------


Segments by Row Lock Waits		 DB/Inst: P30DB/p30db1	Snaps: 141-142

<tr><td scope="row" class='awrc'>cleanout - number of ktugct calls</td><td align="right" class='awrc'>1,806</td><td align="right" class='awrc'>2.99</td><td align="right" class='awrc'>0.02</td></tr>
		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by ITL Waits			 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrnc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-> % of Capture shows % of ITL waits for each top segment compared
-> with total ITL waits for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

<tr><td scope="row" class='awrc'>cleanouts only - consistent read gets</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				     ITL    % of
Object Name	       Name	Type	    Obj#   Dataobj#	   Waits Capture
<tr><td scope="row" class='awrnc'>cluster key scan block gets</td><td align="right" class='awrnc'>106</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
WRH$_EVENT_HISTOGRAM 3773525_79 INDEX	   74109      74109	       1  100.00
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>cluster key scans</td><td align="right" class='awrc'>101</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.00</td></tr>

Segments by Buffer Busy Waits		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
<tr><td scope="row" class='awrnc'>commit batch/immediate performed</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
			  ------------------------------------------------------

Segments by Global Cache Buffer Busy	 DB/Inst: P30DB/p30db1	Snaps: 141-142

<tr><td scope="row" class='awrc'>commit batch/immediate requested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
		  No data exists for this section of the report.
			  ------------------------------------------------------


<tr><td scope="row" class='awrnc'>commit cleanout failures: block lost</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Segments by CR Blocks Received		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total CR Blocks Received:	       5,162
-> Captured Segments account for   98.3% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

<tr><td scope="row" class='awrc'>commit cleanout failures: buffer being written</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
		     Tablespace
Owner			Name
-------------------- ----------
								   CR
		     Subobject	Obj.				 Blocks
<tr><td scope="row" class='awrnc'>commit cleanout failures: callback failure</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER8		     IOPS
CF1				TABLE	   73443      73446	   1,038   20.11
USER1		     IOPS
<tr><td scope="row" class='awrc'>commit cleanout failures: cannot pin</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
CF1				TABLE	   73402      73404	     532   10.31
USER13		     IOPS
CF1				TABLE	   73458      73466	     464    8.99
USER20		     IOPS
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>325,151</td><td align="right" class='awrnc'>537.97</td><td align="right" class='awrnc'>3.01</td></tr>
CF1				TABLE	   73501      73506	     363    7.03
USER2		     IOPS
CF1				TABLE	   73409      73415	     346    6.70
			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>325,142</td><td align="right" class='awrc'>537.95</td><td align="right" class='awrc'>3.01</td></tr>
Segments by Current Blocks Received	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Current Blocks Received:	   16,228
-> Captured Segments account for   99.1% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

		     Tablespace
Owner			Name
-------------------- ----------
								 Current
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER8		     IOPS
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.00</td></tr>
CF1				TABLE	   73443      73446	   2,790   17.19
USER1		     IOPS
CF1				TABLE	   73402      73404	   1,776   10.94
USER2		     IOPS
CF1				TABLE	   73409      73415	   1,425    8.78
<tr><td scope="row" class='awrc'>consistent changes</td><td align="right" class='awrc'>738,408</td><td align="right" class='awrc'>1,221.71</td><td align="right" class='awrc'>6.83</td></tr>
USER13		     IOPS
CF1				TABLE	   73458      73466	   1,421    8.76
USER20		     IOPS
CF1				TABLE	   73501      73506	   1,065    6.56
			  ------------------------------------------------------
<tr><td scope="row" class='awrnc'>consistent gets</td><td align="right" class='awrnc'>4,759,381</td><td align="right" class='awrnc'>7,874.49</td><td align="right" class='awrnc'>44.01</td></tr>

Segments by Global Cache Remote Grants	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Global Cache Remote Grants:	   1,101,131
-> Captured Segments account for   99.7% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
<tr><td scope="row" class='awrc'>consistent gets examination</td><td align="right" class='awrc'>2,178,427</td><td align="right" class='awrc'>3,604.25</td><td align="right" class='awrc'>20.14</td></tr>

		     Tablespace
Owner			Name
-------------------- ----------
								      GC
<tr><td scope="row" class='awrnc'>consistent gets examination (fastpath)</td><td align="right" class='awrnc'>2,178,106</td><td align="right" class='awrnc'>3,603.72</td><td align="right" class='awrnc'>20.14</td></tr>
		     Subobject	Obj.				  Remote
Object Name	       Name	Type	    Obj#   Dataobj#	  Grants  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER8		     IOPS
<tr><td scope="row" class='awrc'>consistent gets from cache</td><td align="right" class='awrc'>4,759,381</td><td align="right" class='awrc'>7,874.49</td><td align="right" class='awrc'>44.01</td></tr>
CF1				TABLE	   73443      73446	 100,769    9.15
USER9		     IOPS
CF1				TABLE	   73439      73445	 100,764    9.15
USER3		     IOPS
CF1				TABLE	   73413      73416	  55,268    5.02
<tr><td scope="row" class='awrnc'>consistent gets pin</td><td align="right" class='awrnc'>2,580,954</td><td align="right" class='awrnc'>4,270.24</td><td align="right" class='awrnc'>23.87</td></tr>
USER22		     IOPS
CF1				TABLE	   73514      73510	  55,208    5.01
USER2		     IOPS
CF1				TABLE	   73409      73415	  55,186    5.01
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>consistent gets pin (fastpath)</td><td align="right" class='awrc'>801,733</td><td align="right" class='awrc'>1,326.48</td><td align="right" class='awrc'>7.41</td></tr>


Dictionary Cache Stats			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Pct Misses"  should be very low (< 2% in most cases)
<tr><td scope="row" class='awrnc'>cursor authentications</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-> "Final Usage" is the number of cache entries being used

				   Get	  Pct	 Scan	Pct	 Mod	  Final
Cache			      Requests	 Miss	 Reqs  Miss	Reqs	  Usage
<tr><td scope="row" class='awrc'>cursor reload failures</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
------------------------- ------------ ------ ------- ----- -------- ----------
dc_awr_control			    17	 23.5	    0	N/A	   0	      1
dc_global_oids			 1,099	  0.0	    0	N/A	   0	    152
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
dc_histogram_data		    13	  0.0	    0	N/A	   0	  3,227
dc_histogram_defs		    80	  0.0	    0	N/A	   0	  3,449
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>891,622</td><td align="right" class='awrc'>1,475.21</td><td align="right" class='awrc'>8.25</td></tr>
dc_objects			 1,650	  0.1	    0	N/A	   0	  1,969
dc_props			   494	  0.0	    0	N/A	   0	      3
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>586,565</td><td align="right" class='awrnc'>970.48</td><td align="right" class='awrnc'>5.42</td></tr>
dc_rollback_segments		   958	  0.0	    0	N/A	   0	    320
dc_segments			   120	  6.7	    0	N/A	  12	    565
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>158</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.00</td></tr>
dc_sequences			     8	 25.0	    0	N/A	   8	      4
dc_tablespaces			   143	  0.0	    0	N/A	   0	      7
dc_users			    40	  0.0	    0	N/A	   0	    186
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>586,407</td><td align="right" class='awrnc'>970.22</td><td align="right" class='awrnc'>5.42</td></tr>
outstanding_alerts		     2	100.0	    0	N/A	   0	      3
			  ------------------------------------------------------

Dictionary Cache Stats (RAC)		 DB/Inst: P30DB/p30db1	Snaps: 141-142

<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>241,644</td><td align="right" class='awrc'>399.80</td><td align="right" class='awrc'>2.23</td></tr>
		  No data exists for this section of the report.
			  ------------------------------------------------------

Library Cache Activity			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> "Pct Misses"  should be very low
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>186,585</td><td align="right" class='awrnc'>308.71</td><td align="right" class='awrnc'>1.73</td></tr>

			 Get	Pct	       Pin    Pct	      Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations
--------------- ------------ ------ -------------- ------ ---------- --------
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>262,693</td><td align="right" class='awrc'>434.63</td><td align="right" class='awrc'>2.43</td></tr>
BODY			  28	0.0	       228    0.0	   0	    0
EDITION 		   3	0.0		 6    0.0	   0	    0
INDEX			   4	0.0		 0    N/A	   0	    0
SQL AREA		 427	1.4	   722,907   -0.1	   1	    1
SQL AREA BUILD		   3  100.0		 0    N/A	   0	    0
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>229</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.00</td></tr>
SQL AREA STATS		   4   75.0		 4   75.0	   0	    0
TABLE/PROCEDURE 	  15	0.0	     1,606    0.0	   0	    0
TRIGGER 		   3	0.0		 3    0.0	   0	    0
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>225,517</td><td align="right" class='awrc'>373.12</td><td align="right" class='awrc'>2.09</td></tr>

Library Cache Activity (RAC)		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		    GES Lock	  GES Pin      GES Pin	 GES Inval GES Invali-
Namespace	    Requests	 Requests     Releases	  Requests     dations
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>225,498</td><td align="right" class='awrnc'>373.09</td><td align="right" class='awrnc'>2.09</td></tr>
--------------- ------------ ------------ ------------ ----------- -----------
BODY			   0	      207	   207		 0	     0
EDITION 		   3		3	     3		 0	     0
TABLE/PROCEDURE 	 199	    1,427	 1,427		 0	     0
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
TRIGGER 		   0		3	     3		 0	     0
			  ------------------------------------------------------


Memory Dynamic Components		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>186</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td></tr>
-> Min/Max sizes since instance startup
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
-> ordered by Component

		 Begin Snap	Current 	Min	    Max   Oper Last Op
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Component	  Size (Mb)   Size (Mb)   Size (Mb)   Size (Mb)  Count Typ/Mod
--------------- ----------- ----------- ----------- ----------- ------ -------
ASM Buffer Cach 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 16K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 2K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 32K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 4K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 8K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT buffer	   8,000.00    8,000.00    8,000.00    8,000.00      0 INI/
Data Transfer C 	.00	    .00 	.00	    .00      0 STA/
In Memory RO Ex 	.00	    .00 	.00	    .00      0 STA/
In Memory RW Ex 	.00	    .00 	.00	    .00      0 STA/
In-Memory Area		.00	    .00 	.00	    .00      0 STA/
KEEP buffer cac 	.00	    .00 	.00	    .00      0 STA/
PGA Target	   3,232.00    3,232.00    3,232.00    3,232.00      0 STA/
RECYCLE buffer		.00	    .00 	.00	    .00      0 STA/
SGA Target	   9,664.00    9,664.00    9,664.00    9,664.00      0 STA/
Shared IO Pool	     128.00	 128.00      128.00	 128.00      0 STA/
java pool		.00	    .00 	.00	    .00      0 STA/
large pool	      64.00	  64.00       64.00	  64.00      0 STA/
memoptimize buf 	.00	    .00 	.00	    .00      0 STA/
shared pool	   1,440.00    1,440.00    1,440.00    1,440.00      0 STA/
streams pool		.00	    .00 	.00	    .00      0 STA/
unified pga poo 	.00	    .00 	.00	    .00      0 STA/
			  ------------------------------------------------------

Memory Resize Operations Summary	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Memory Resize Ops			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Process Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> B: Begin Snap   E: End Snap
-> All rows below contain absolute values (i.e. not diffed over the interval)
-> Max Alloc is Maximum PGA Allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by Begin/End snapshot, Alloc (MB) desc
-> Top 10 containers by Alloc (MB) at end snapshot time are displayed

							     Hist
				     Avg  Std Dev     Max     Max
		Alloc	   Used    Alloc    Alloc   Alloc   Alloc    Num    Num
   Category	 (MB)	   (MB)     (MB)     (MB)    (MB)    (MB)   Proc  Alloc
 - -------- --------- --------- -------- -------- ------- ------- ------ ------
B Freeable     143.9	    .0	    4.2      7.1      28     N/A     34     34
  Other        680.0	   N/A	    5.3      8.7      54      54    128    128
  PL/SQL	18.6	  16.8	     .2       .4       2       3    110    109
  SQL		16.1	  14.7	     .3       .4       1      11     61     53
  Total        858.7	  31.5	   10.0     16.7      84      68    333    324
E Freeable     140.4	    .0	    5.0      7.5      28     N/A     28     28
  Other        603.5	   N/A	    5.5      9.5      53      53    110    110
  PL/SQL	 9.6	   7.9	     .1       .4       2       3     92     91
  SQL		 9.9	   8.7	     .2       .3       1      11     42     34
  Total        763.4	  16.7	   10.8     17.8      83      67    272    263
			  ------------------------------------------------------

SGA Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 141-142

						      End Size (Bytes)
SGA regions			Begin Size (Bytes)	(if different)
------------------------------ ------------------- -------------------
Database Buffers		     8,522,825,728
Fixed Size				12,445,928
Redo Buffers				21,106,688
Variable Size			     1,577,058,304
			       -------------------
sum				    10,133,436,648
			  ------------------------------------------------------

SGA breakdown difference by Pool and NameDB/Inst: P30DB/p30db1	Snaps: 141-142
-> ordered by Pool, Name
-> N/A value for Begin MB or End MB indicates the size of that Pool/Name was
   insignificant, or zero in that snapshot

Pool   Name				    Begin MB	     End MB  % Diff
------ ------------------------------ -------------- -------------- -------
large  PX msg pool				15.0	       15.0    0.00
large  free memory				48.6	       48.6    0.00
shared ASH buffers				16.0	       16.0    0.00
shared KGLH0					44.4	       44.4   -0.03
shared KJSC rnb slots				22.6	       14.5  -35.57
shared SO private sga				28.7	       28.7    0.00
shared SQLA				       267.8	      268.0    0.07
shared db_block_hash_buckets			32.0	       32.0    0.00
shared free memory			       101.2	      111.6   10.26
shared gc name table				32.0	       32.0    0.00
shared gcs resources			       271.0	      271.0    0.00
shared gcs resv res hash bucket 		48.0	       48.0    0.00
shared gcs shadows			       147.8	      147.8    0.00
shared ges big msg buffers			26.3	       26.3    0.00
shared ksunfy_meta 1				25.0	       25.0    0.00
shared row cache				  .0		 .0    0.00
       buffer_cache			     8,000.0	    8,000.0    0.00
       fixed_sga				11.9	       11.9    0.00
       log_buffer				20.1	       20.1    0.00
       shared_io_pool			       128.0	      128.0    0.00
			  ------------------------------------------------------


Replication System Resource Usage	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication SGA Usage			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------


GoldenGate Capture			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Capture Rate 		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Reader 		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Server 		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator Rate	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Reader and Server Rate  DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------


XStream Capture 			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Capture Rate			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Reader			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Server			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator Rate		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Reader and Server Rate	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------


Table Statistics by DML Operations	 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Table Statistics by Conflict Resolutions DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Large Transaction Statistics DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Long Running Transaction StatisticsDB/Inst: P30DB/p30db1  Snaps: 1

		  No data exists for this section of the report.
			  ------------------------------------------------------


Advanced Queue CPU/IO Usage		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffered Queues 			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffered Queue Subscribers		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------

Rule Set				 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>722,307</td><td align="right" class='awrnc'>1,195.07</td><td align="right" class='awrnc'>6.68</td></tr>

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues			 DB/Inst: P30DB/p30db1	Snaps: 141-142

<tr><td scope="row" class='awrc'>fastpath consistent get quota limit</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues Rate			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------
<tr><td scope="row" class='awrnc'>file io service time</td><td align="right" class='awrnc'>221,658,110</td><td align="right" class='awrnc'>366,737.72</td><td align="right" class='awrnc'>2,049.75</td></tr>

Persistent Queue Subscribers		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>2,118,021</td><td align="right" class='awrc'>3,504.31</td><td align="right" class='awrc'>19.59</td></tr>


Resource Limit Stats			      DB/Inst: P30DB/p30db1  Snap: 142
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>2,104,492</td><td align="right" class='awrnc'>3,481.92</td><td align="right" class='awrnc'>19.46</td></tr>
-> Only rows with Current or Maximum Utilization > 80% of Limit are shown
-> For "UNLIMITED" resources, rows whose Current or Maximum Utilization
   exceeds 2*Initial Allocation are shown
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>15,209</td><td align="right" class='awrc'>25.16</td><td align="right" class='awrc'>0.14</td></tr>
-> Ordered by Resource Name

				  Current      Maximum	   Initial
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Resource Name			Utilization  Utilization Allocation   Limit
------------------------------ ------------ ------------ ---------- ----------
ges_cache_ress			      3,116	   3,531	  0  UNLIMITED
			  ------------------------------------------------------

Shared Servers Activity 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>gc cleanout applied</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
-> Values represent averages for all samples

   Avg Total   Avg Active    Avg Total	 Avg Active    Avg Total   Avg Active
 Connections  Connections Shared Srvrs Shared Srvrs  Dispatchers  Dispatchers
------------ ------------ ------------ ------------ ------------ ------------
<tr><td scope="row" class='awrnc'>gc cleanout saved</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
	   0		0	     1		  0	       1	    0
			  ------------------------------------------------------

Shared Servers Rates			 DB/Inst: P30DB/p30db1	Snaps: 141-142

  Common     Disp			 Common       Disp     Server
<tr><td scope="row" class='awrc'>gc cr anti locks created</td><td align="right" class='awrc'>9,027</td><td align="right" class='awrc'>14.94</td><td align="right" class='awrc'>0.08</td></tr>
   Queue    Queue   Server    Server	  Queue      Queue	Total	  Server
 Per Sec  Per Sec Msgs/Sec    KB/Sec	  Total      Total	 Msgs  Total(KB)
-------- -------- -------- --------- ---------- ---------- ---------- ----------
       0	0	 0	 0.0	      0 	 0	    0	       0
			  ------------------------------------------------------

<tr><td scope="row" class='awrnc'>gc cr anti locks expanded</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>612</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>3,512</td><td align="right" class='awrc'>5.81</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>5,162</td><td align="right" class='awrc'>8.54</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>5,001</td><td align="right" class='awrnc'>8.27</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grant time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grants received</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block flush time</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block pin time</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>1,102</td><td align="right" class='awrc'>1.82</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>16,228</td><td align="right" class='awrnc'>26.85</td><td align="right" class='awrnc'>0.15</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>10,949</td><td align="right" class='awrc'>18.12</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read current</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>64,909</td><td align="right" class='awrnc'>107.39</td><td align="right" class='awrnc'>0.60</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>62,691</td><td align="right" class='awrc'>103.72</td><td align="right" class='awrc'>0.58</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>989,863</td><td align="right" class='awrnc'>1,637.75</td><td align="right" class='awrnc'>9.15</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi bg</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read time waited</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read waits</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>1,101,131</td><td align="right" class='awrnc'>1,821.84</td><td align="right" class='awrnc'>10.18</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>1,091,844</td><td align="right" class='awrc'>1,806.48</td><td align="right" class='awrc'>10.10</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>685,116</td><td align="right" class='awrnc'>1,133.54</td><td align="right" class='awrnc'>6.34</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>11,621</td><td align="right" class='awrc'>19.23</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>9,027</td><td align="right" class='awrnc'>14.94</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access records</td><td align="right" class='awrc'>2,092,172</td><td align="right" class='awrc'>3,461.54</td><td align="right" class='awrc'>19.35</td></tr>
<tr><td scope="row" class='awrnc'>gcs messages sent</td><td align="right" class='awrnc'>2,558,277</td><td align="right" class='awrnc'>4,232.72</td><td align="right" class='awrnc'>23.66</td></tr>
Shared Servers Utilization		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>gcs read-mostly lock failures</td><td align="right" class='awrc'>17,454</td><td align="right" class='awrc'>28.88</td><td align="right" class='awrc'>0.16</td></tr>
-> Statistics are combined for all servers
-> Incoming and Outgoing Net % are included in %Busy

  Total Server			  Incoming  Outgoing
<tr><td scope="row" class='awrnc'>gcs read-mostly lock grants</td><td align="right" class='awrnc'>97,507</td><td align="right" class='awrnc'>161.33</td><td align="right" class='awrnc'>0.90</td></tr>
      Time (s)	  %Busy    %Idle     Net %     Net %
-------------- -------- -------- --------- ---------
	   605	    0.0    100.0       0.0	 0.0
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>gcs stats management (SCM) process posts</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>

Shared Servers Common Queue		 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>1,829</td><td align="right" class='awrnc'>3.03</td><td align="right" class='awrnc'>0.02</td></tr>
			  ------------------------------------------------------

Shared Servers Dispatchers		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by %Busy, descending
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>488</td><td align="right" class='awrc'>0.81</td><td align="right" class='awrc'>0.00</td></tr>
-> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue
-> Name suffixes:
     "(N)" - dispatcher started between begin and end snapshots
     "(R)" - dispatcher re-started between begin and end snapshots
<tr><td scope="row" class='awrnc'>global enqueue gets async</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

	      Avg Total Disp			    Total Total Queue  Avg Queue
Name	    Conns   Time (s)	%Busy	 %Idle	   Queued    Wait (s)  Wait (ms)
------- --------- ---------- -------- -------- ---------- ----------- ----------
<tr><td scope="row" class='awrc'>global enqueue gets sync</td><td align="right" class='awrc'>116,796</td><td align="right" class='awrc'>193.24</td><td align="right" class='awrc'>1.08</td></tr>
D000	      0.0	 605	  0.0	 100.0		0	    0
			  ------------------------------------------------------


<tr><td scope="row" class='awrnc'>global enqueue releases</td><td align="right" class='awrnc'>116,755</td><td align="right" class='awrnc'>193.17</td><td align="right" class='awrnc'>1.08</td></tr>
Modified Parameters			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> This section shows all the modified initialization parameters that
were in effect during the entire snapshot interval
-> End Value is displayed only if the parameter value was modified within
<tr><td scope="row" class='awrc'>heap block compress</td><td align="right" class='awrc'>6,394</td><td align="right" class='awrc'>10.58</td><td align="right" class='awrc'>0.06</td></tr>
the snapshot interval

								End value
Parameter Name		      Begin value			(if different)
<tr><td scope="row" class='awrnc'>hot buffers moved to head of LRU</td><td align="right" class='awrnc'>97,286</td><td align="right" class='awrnc'>160.96</td><td align="right" class='awrnc'>0.90</td></tr>
----------------------------- --------------------------------- --------------
_ipddb_enable		      TRUE
audit_file_dest 	      /u01/app/oracle/admin/p30db/adump
audit_trail		      DB
cluster_database	      TRUE
<tr><td scope="row" class='awrc'>immediate (CR) block cleanout applications</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
compatible		      19.0.0
control_files		      +DATA/P30DB/CONTROLFILE/current.2
<tr><td scope="row" class='awrnc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>251</td><td align="right" class='awrnc'>0.42</td><td align="right" class='awrnc'>0.00</td></tr>
db_block_size		      8192
db_create_file_dest	      +DATA
db_domain		      example.com
db_name 		      p30db
db_recovery_file_dest	      +FRA
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
db_recovery_file_dest_size    274877906944
diagnostic_dest 	      /u01/app/oracle
dispatchers		      (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 	      1
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
listener_networks
local_listener		       (ADDRESS=(PROTOCOL=TCP)(HOST=192
nls_language		      AMERICAN
nls_territory		      AMERICA
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>1,379</td><td align="right" class='awrc'>2.28</td><td align="right" class='awrc'>0.01</td></tr>
open_cursors		      300
pga_aggregate_target	      3371171840
processes		      640
remote_listener 	       mcracpoc-scan.example.com:1521
remote_login_passwordfile     EXCLUSIVE
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>720,758</td><td align="right" class='awrnc'>1,192.51</td><td align="right" class='awrnc'>6.67</td></tr>
sga_target		      10133438464
thread			      1
undo_tablespace 	      UNDOTBS1
<tr><td scope="row" class='awrc'>leaf node 90-10 splits</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
			  ------------------------------------------------------


Modified Multi-Valued Parameters	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> This section only displays parameters that have more than one value
->'(NULL)' indicates a missing parameter value
-> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot

<tr><td scope="row" class='awrnc'>leaf node splits</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
								End value
<tr><td scope="row" class='awrc'>lob reads</td><td align="right" class='awrc'>180</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0.00</td></tr>
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
control_files		      +DATA/P30DB/CONTROLFILE/current.2
<tr><td scope="row" class='awrnc'>lob writes</td><td align="right" class='awrnc'>3,111</td><td align="right" class='awrnc'>5.15</td><td align="right" class='awrnc'>0.03</td></tr>
			      +FRA/P30DB/CONTROLFILE/current.25
			  ------------------------------------------------------

Top SQL with Top Events 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>lob writes unaligned</td><td align="right" class='awrc'>3,111</td><td align="right" class='awrc'>5.15</td><td align="right" class='awrc'>0.03</td></tr>
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
<tr><td scope="row" class='awrnc'>logical read bytes from cache</td><td align="right" class='awrnc'>43,792,687,104</td><td align="right" class='awrnc'>72,455,865.03</td><td align="right" class='awrnc'>404,966.64</td></tr>
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		      927	   76.50
db file sequential read 	 69.74 TABLE ACCESS - BY INDEX ROWID BAT   69.74
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


gc cr grant 2-way		  4.04 TABLE ACCESS - BY INDEX ROWID BAT    4.04
<tr><td scope="row" class='awrnc'>max cf enq hold time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>


CPU + Wait for CPU		  2.64 TABLE ACCESS - BY INDEX ROWID BAT    1.90

	  35dumc2tpr9dv 	   203653710		      162	   13.44
<tr><td scope="row" class='awrc'>messages received</td><td align="right" class='awrc'>121,048</td><td align="right" class='awrc'>200.28</td><td align="right" class='awrc'>1.12</td></tr>
db file sequential read 	 11.54 UPDATE				   11.54
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  ------------------------------------------------------
<tr><td scope="row" class='awrnc'>messages sent</td><td align="right" class='awrnc'>121,047</td><td align="right" class='awrnc'>200.27</td><td align="right" class='awrnc'>1.12</td></tr>

Top SQL with Top Row Sources		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
<tr><td scope="row" class='awrc'>min active SCN optimization applied on CR</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>2,571,126</td><td align="right" class='awrnc'>4,253.98</td><td align="right" class='awrnc'>23.78</td></tr>
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>4,617,599</td><td align="right" class='awrc'>7,639.91</td><td align="right" class='awrc'>42.70</td></tr>
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>830,680</td><td align="right" class='awrnc'>1,374.38</td><td align="right" class='awrnc'>7.68</td></tr>
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		      927	   76.50
TABLE ACCESS - BY INDEX ROWID BATCHED	   75.76 db file sequential read   69.74
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>

	  35dumc2tpr9dv 	   203653710		      162	   13.44
UPDATE					   13.19 db file sequential read   11.54
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
<tr><td scope="row" class='awrnc'>parse count (failures)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
< :B1 )

			  ------------------------------------------------------

Top Sessions				 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>1,458</td><td align="right" class='awrnc'>2.41</td><td align="right" class='awrnc'>0.01</td></tr>
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
       21, 3407       4.78 db file sequential read		4.53
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
USER2		     sqlplus@mcracp...m (TNS V1-V3)	  55/60 [ 91%]	      4

       25,47220       4.78 db file sequential read		4.29
USER26		     sqlplus@mcracp...m (TNS V1-V3)	  52/60 [ 86%]	      6

<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>2,070,369</td><td align="right" class='awrc'>3,425.47</td><td align="right" class='awrc'>19.15</td></tr>
      144,54909       4.78 db file sequential read		3.96
USER8		     sqlplus@mcracp...m (TNS V1-V3)	  48/60 [ 79%]	      3

      145, 3457       4.78 db file sequential read		3.63
USER29		     sqlplus@mcracp...m (TNS V1-V3)	  44/60 [ 73%]	      3
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>16,961,044,480</td><td align="right" class='awrnc'>28,062,382.81</td><td align="right" class='awrnc'>156,844.84</td></tr>

      269,20925       4.78 db file sequential read		4.37
USER10		     sqlplus@mcracp...m (TNS V1-V3)	  53/60 [ 88%]	      2

			  ------------------------------------------------------

Top Blocking Sessions			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Blocking session activity percentages are calculated with respect to
      waits on enqueues, latches and "buffer busy" only
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>2,073,749</td><td align="right" class='awrc'>3,431.06</td><td align="right" class='awrc'>19.18</td></tr>
-> '% Activity' represents the load on the database caused by
      a particular blocking session
-> '# Samples Active' shows the number of ASH samples in which the
      blocking session was found active.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the blocking session was found active.

<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>17,462,680,576</td><td align="right" class='awrnc'>28,892,349.63</td><td align="right" class='awrnc'>161,483.65</td></tr>
 Blocking Sid (Inst) % Activity Event Caused			  % Event
-------------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>438</td><td align="right" class='awrc'>0.72</td><td align="right" class='awrc'>0.00</td></tr>
   620,32310(	  1)	   1.15 LGWR any worker group		     0.99
SYS		     oracle@mcracpo...le.com (LG00)	  41/60 [ 68%]	      0

			  ------------------------------------------------------

<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>2,070,440</td><td align="right" class='awrnc'>3,425.58</td><td align="right" class='awrnc'>19.15</td></tr>
Top PL/SQL Procedures			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>2,070,440</td><td align="right" class='awrc'>3,425.58</td><td align="right" class='awrc'>19.15</td></tr>
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>71</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td></tr>
PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       13.85
   SQL								       13.85
			  ------------------------------------------------------

<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Top Events				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

<tr><td scope="row" class='awrc'>physical reads direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
<tr><td scope="row" class='awrnc'>physical reads prefetch warmup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
db file sequential read 	    User I/O	    FOREGROUND
     81.29	16.32
log file parallel write 	    System I/O	    BACKGROUND
      5.44	 1.09
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>289,518</td><td align="right" class='awrc'>479.01</td><td align="right" class='awrc'>2.68</td></tr>
CPU + Wait for CPU		    CPU 	    FOREGROUND
      4.29	 0.86
gc cr grant 2-way		    Cluster	    FOREGROUND
      4.04	 0.81
CPU + Wait for CPU		    CPU 	    BACKGROUND
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>2,464,186,368</td><td align="right" class='awrnc'>4,077,044.97</td><td align="right" class='awrnc'>22,787.21</td></tr>
      1.98	 0.40
			  ------------------------------------------------------

Top Event P1/P2/P3 Values		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>485,934</td><td align="right" class='awrc'>803.99</td><td align="right" class='awrc'>4.49</td></tr>
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>3,146,974,208</td><td align="right" class='awrnc'>5,206,730.93</td><td align="right" class='awrnc'>29,101.20</td></tr>
Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>592</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>0.01</td></tr>
db file sequential read 	 81.29		  "2","24977969","1"	   0.08
file#			   block#		      blocks

log file parallel write 	  5.44			"2","12","2"	   1.48
files			   blocks		      requests
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>300,804</td><td align="right" class='awrnc'>497.69</td><td align="right" class='awrnc'>2.78</td></tr>

			  ------------------------------------------------------

Top DB Objects				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top DB Objects by DB Time with respect to Application, Cluster,
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>163</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
	  73458       4.78 db file sequential read		4.53
USER13.CF1 (TABLE)				      IOPS
	  73486       4.78 db file sequential read		4.45
USER17.CF1 (TABLE)				      IOPS
	  73481       4.70 db file sequential read		4.53
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>300,641</td><td align="right" class='awrnc'>497.42</td><td align="right" class='awrnc'>2.78</td></tr>
USER16.CF1 (TABLE)				      IOPS
	  73514       4.70 db file sequential read		4.20
USER22.CF1 (TABLE)				      IOPS
	  73527       4.70 db file sequential read		4.20
USER25.CF1 (TABLE)				      IOPS
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>296,030</td><td align="right" class='awrc'>489.79</td><td align="right" class='awrc'>2.74</td></tr>
			  ------------------------------------------------------

Activity Over Time			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Analysis period is divided into smaller time slots as indicated
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>529</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>0.00</td></tr>
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
<tr><td scope="row" class='awrc'>prefetch warmup blocks aged out before use</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
<tr><td scope="row" class='awrnc'>prefetched blocks aged out before use</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-------------------- -------- ------------------------------ -------- -------
11:21:15   (3.8 min)	  501 db file sequential read		  405	33.39
			      CPU + Wait for CPU		   36	 2.97
			      log file parallel write		   27	 2.23
11:25:00   (5.0 min)	  625 db file sequential read		  518	42.70
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>424</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>0.00</td></tr>
			      log file parallel write		   33	 2.72
			      CPU + Wait for CPU		   31	 2.56
11:30:00   (1.3 min)	   87 db file sequential read		   63	 5.19
			      CPU + Wait for CPU		    9	 0.74
<tr><td scope="row" class='awrnc'>recursive calls</td><td align="right" class='awrnc'>950,396</td><td align="right" class='awrnc'>1,572.45</td><td align="right" class='awrnc'>8.79</td></tr>
			      log file parallel write		    6	 0.49
			  ------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_1_142'
<tr><td scope="row" class='awrc'>recursive cpu usage</td><td align="right" class='awrc'>104,083</td><td align="right" class='awrc'>172.21</td><td align="right" class='awrc'>0.96</td></tr>
	  --------------------------------------------

Analysis Period
---------------
AWR snapshot range from 141 to 142.
<tr><td scope="row" class='awrnc'>redo KB read</td><td align="right" class='awrnc'>276,678</td><td align="right" class='awrnc'>457.77</td><td align="right" class='awrnc'>2.56</td></tr>
Time period starts at 10-FEB-20 11.21.15 AM
Time period ends at 10-FEB-20 11.31.20 AM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
<tr><td scope="row" class='awrc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrc'>202,422</td><td align="right" class='awrc'>334.91</td><td align="right" class='awrc'>1.87</td></tr>
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
<tr><td scope="row" class='awrnc'>redo blocks written</td><td align="right" class='awrnc'>657,823</td><td align="right" class='awrnc'>1,088.38</td><td align="right" class='awrnc'>6.08</td></tr>
-----------------------------------
Total database time was 10826 seconds.
The average number of active sessions was 17.89.
<tr><td scope="row" class='awrc'>redo blocks written (group 0)</td><td align="right" class='awrc'>460,054</td><td align="right" class='awrc'>761.17</td><td align="right" class='awrc'>4.25</td></tr>

Summary of Findings
-------------------
<tr><td scope="row" class='awrnc'>redo blocks written (group 1)</td><td align="right" class='awrnc'>197,769</td><td align="right" class='awrnc'>327.21</td><td align="right" class='awrnc'>1.83</td></tr>
   Description				     Active Sessions	  Recommendation
s
<tr><td scope="row" class='awrc'>redo entries</td><td align="right" class='awrc'>461,524</td><td align="right" class='awrc'>763.60</td><td align="right" class='awrc'>4.27</td></tr>
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
<tr><td scope="row" class='awrnc'>redo size</td><td align="right" class='awrnc'>304,034,828</td><td align="right" class='awrnc'>503,031.62</td><td align="right" class='awrnc'>2,811.52</td></tr>
1  Top SQL Statements			     17.72 | 99 	  2
2  "User I/O" wait Class		     15.91 | 88.94	  0
<tr><td scope="row" class='awrc'>redo size for direct writes</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
3  Top Segments by "User I/O" and "Cluster"  4.64 | 25.93	  5
4  Global Cache Messaging		     1.01 | 5.65	  1
5  Undersized SGA			     .64 | 3.59 	  1


<tr><td scope="row" class='awrnc'>redo subscn max counts</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
<tr><td scope="row" class='awrc'>redo synch long waits</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 17.74 active sessions, 99% of total activity.
-------------------------------------------------------
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 15.07 active sessions, 84.21% of total activity.
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>23,363</td><td align="right" class='awrc'>38.65</td><td align="right" class='awrc'>0.22</td></tr>
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>2,713</td><td align="right" class='awrnc'>4.49</td><td align="right" class='awrnc'>0.03</td></tr>
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  8ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      execution.
<tr><td scope="row" class='awrc'>redo synch time overhead count ( 32ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 610478 times and
      had an average elapsed time of 0.014 seconds.

<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
   Recommendation 2: SQL Tuning
   Estimated benefit is 2.65 active sessions, 14.79% of total activity.
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>22,098,504</td><td align="right" class='awrc'>36,562.41</td><td align="right" class='awrc'>204.35</td></tr>
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>97,903</td><td align="right" class='awrnc'>161.98</td><td align="right" class='awrnc'>0.91</td></tr>
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
<tr><td scope="row" class='awrc'>redo write broadcast ack count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
<tr><td scope="row" class='awrnc'>redo write broadcast ack time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 107698 times and
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>635,076,150</td><td align="right" class='awrc'>1,050,746.02</td><td align="right" class='awrc'>5,872.78</td></tr>
      had an average elapsed time of 0.015 seconds.


Finding 2: "User I/O" wait Class
Impact is 15.94 active sessions, 88.94% of total activity.
----------------------------------------------------------
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>23,401,468</td><td align="right" class='awrnc'>38,718.19</td><td align="right" class='awrnc'>216.40</td></tr>
Wait class "User I/O" was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.65 active sessions, 25.93% of total activity.
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>24,823,569</td><td align="right" class='awrnc'>41,071.08</td><td align="right" class='awrnc'>229.55</td></tr>
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

   Recommendation 1: Segment Tuning
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>58,649</td><td align="right" class='awrc'>97.04</td><td align="right" class='awrc'>0.54</td></tr>
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER13.CF1" with
      object ID 73458.
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>32,945</td><td align="right" class='awrnc'>54.51</td><td align="right" class='awrnc'>0.30</td></tr>
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 108781
      physical reads, 15364 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>3,218</td><td align="right" class='awrc'>5.32</td><td align="right" class='awrc'>0.03</td></tr>
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER17.CF1" with
      object ID 73486.
      Related Object
	 Database object with ID 73486.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109233
      physical reads, 15127 physical writes and 0 direct reads.
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>276</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>0.00</td></tr>

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER16.CF1" with
      object ID 73481.
      Related Object
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
	 Database object with ID 73481.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114172
      physical reads, 17692 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER22.CF1" with
      object ID 73514.
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      Related Object
	 Database object with ID 73514.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109399
      physical reads, 15155 physical writes and 0 direct reads.
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
<tr><td scope="row" class='awrc'>redo write size count (inf)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      Investigate application logic involving I/O on TABLE "USER25.CF1" with
      object ID 73527.
      Related Object
	 Database object with ID 73527.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
<tr><td scope="row" class='awrnc'>redo write time</td><td align="right" class='awrnc'>63,909</td><td align="right" class='awrnc'>105.74</td><td align="right" class='awrnc'>0.59</td></tr>
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID "bhdvtsvjhgvrh" is responsible for 93% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109655
<tr><td scope="row" class='awrc'>redo write time (usec)</td><td align="right" class='awrc'>639,087,833</td><td align="right" class='awrc'>1,057,383.43</td><td align="right" class='awrc'>5,909.87</td></tr>
      physical reads, 15187 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
<tr><td scope="row" class='awrnc'>redo write total time</td><td align="right" class='awrnc'>648,130,151</td><td align="right" class='awrnc'>1,072,344.13</td><td align="right" class='awrnc'>5,993.49</td></tr>
      Impact is 15.91 active sessions, 88.94% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.01 active sessions, 5.65% of total activity.
--------------------------------------------------------
<tr><td scope="row" class='awrc'>redo write worker delay (usec)</td><td align="right" class='awrc'>13,939,858</td><td align="right" class='awrc'>23,063.77</td><td align="right" class='awrc'>128.91</td></tr>
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is 1.01 active sessions, 5.65% of total activity.
   -------------------------------------------------------------------
<tr><td scope="row" class='awrnc'>redo write worker delay count</td><td align="right" class='awrnc'>95,172</td><td align="right" class='awrnc'>157.46</td><td align="right" class='awrnc'>0.88</td></tr>
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 80% of Cluster wait
<tr><td scope="row" class='awrc'>redo writes</td><td align="right" class='awrc'>95,172</td><td align="right" class='awrc'>157.46</td><td align="right" class='awrc'>0.88</td></tr>
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
<tr><td scope="row" class='awrnc'>redo writes (group 0)</td><td align="right" class='awrnc'>57,280</td><td align="right" class='awrnc'>94.77</td><td align="right" class='awrnc'>0.53</td></tr>
      Impact is 1.05 active sessions, 5.85% of total activity.


Finding 5: Undersized SGA
Impact is .64 active sessions, 3.59% of total activity.
-------------------------------------------------------
<tr><td scope="row" class='awrc'>redo writes (group 1)</td><td align="right" class='awrc'>37,892</td><td align="right" class='awrc'>62.69</td><td align="right" class='awrc'>0.35</td></tr>
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter "sga_target" was "9664 M" during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .11 active sessions, .64% of total activity.
<tr><td scope="row" class='awrnc'>redo writes adaptive all</td><td align="right" class='awrnc'>95,172</td><td align="right" class='awrnc'>157.46</td><td align="right" class='awrnc'>0.88</td></tr>
   -----------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter "sga_target" to
      10872 M.

   Symptoms That Led to the Finding:
<tr><td scope="row" class='awrc'>redo writes adaptive worker</td><td align="right" class='awrc'>95,172</td><td align="right" class='awrc'>157.46</td><td align="right" class='awrc'>0.88</td></tr>
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 15.91 active sessions, 88.94% of total activity.

<tr><td scope="row" class='awrnc'>remote Oradebug requests</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
<tr><td scope="row" class='awrc'>rollback changes - undo records applied</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
	  ----------------------

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
<tr><td scope="row" class='awrnc'>rollbacks only - consistent read gets</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class "Network" was not consuming significant database time.
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>750</td><td align="right" class='awrc'>1.24</td><td align="right" class='awrc'>0.01</td></tr>
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.
<tr><td scope="row" class='awrnc'>saved cleanouts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

RAC Statistics  DB/Inst: P30DB/p30db1	Snaps: 141-142

				Begin	End
				----- -----
	   Number of Instances:     2	  2
<tr><td scope="row" class='awrc'>saved cleanouts successfully completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
	       Number of LMS's:     2	  2
      Number of realtime LMS's:     2	  2  (0 priority changes)


Global Cache Load Profile
~~~~~~~~~~~~~~~~~~~~~~~~~		   Per Second	    Per Transaction
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>40,960</td><td align="right" class='awrnc'>67.77</td><td align="right" class='awrnc'>0.38</td></tr>
				      ---------------	    ---------------
  Global Cache blocks received: 		35.39		       0.20
    Global Cache blocks served: 		26.39		       0.15
     GCS/GES messages received: 	     4,456.19		      24.91
	 GCS/GES messages sent: 	     5,369.28		      30.01
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
	    DBWR Fusion writes: 		 0.16		       0.00
 Estd Interconnect traffic (KB) 	     2,413.28


Global Cache Efficiency Percentages (Target local+remote 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>31,412</td><td align="right" class='awrnc'>51.97</td><td align="right" class='awrnc'>0.29</td></tr>
Buffer access -  local cache %:   60.87
Buffer access - remote cache %:    0.40
Buffer access - 	disk %:   38.73
Global Cache Locality	     %:   47.34


<tr><td scope="row" class='awrc'>securefile direct read bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Global Cache and Enqueue Services - Workload Characteristics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Avg global cache cr block receive time (us):		1,185.6
     Avg global cache current block receive time (us):		  679.1
<tr><td scope="row" class='awrnc'>securefile direct read ops</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
			       Avg LMS process busy %:		   10.3

	    Avg global cache cr block build time (us):		  575.2
      Global cache log flushes for cr blocks served %:		    0.6
	    Avg global cache cr block flush time (us):		7,812.5

<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>40,960</td><td align="right" class='awrc'>67.77</td><td align="right" class='awrc'>0.38</td></tr>
	 Avg global cache current block pin time (us):	       10,000.0
 Global cache log flushes for current blocks served %:		    0.3
       Avg global cache current block flush time (us):		3,714.3

		     Avg global enqueue get time (us):		   41.8
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>

Global Cache and Enqueue Services - Messaging Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Avg message sent queue time (us):		1,118.1
	     Avg message sent queue time on ksxp (us):		  951.6
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
	  Avg message received kernel queue time (us):		   26.9
		 Avg message received queue time (us):		   11.1
		    Avg GCS message process time (us):		   41.6
		    Avg GES message process time (us):		   34.1

			    % of direct sent messages:		  45.49
			  % of indirect sent messages:		  54.35
			% of flow controlled messages:		   0.17
	  -------------------------------------------------------------

Cluster Interconnect
-> if Public/Source at End snap is different a '*' is displayed
~~~~~~~~~~~~~~~~~~~~
				    Begin			    End
	     --------------------------------------------------   -------
Interface    IP Address      Pub Source 			  Pub Src
----------   --------------- --- ------------------------------   --- ---
fg-priv:1    169.254.22.248  N

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
Cluster reconfiguration count			 0	    0.0 	 0.0
Domain reconfiguration count			 0	    0.0 	 0.0
Global Enqueue S-optim Broadcasts		84	    0.1 	 0.0
Global Enqueue S-optim S-lock get	     6,443	   10.7 	 0.1
Global Enqueue S-optim anti-locks		12	    0.0 	 0.0
KA local message waits				 0	    0.0 	 0.0
KA local messages received			 0	    0.0 	 0.0
KA messages received actual			 0	    0.0 	 0.0
KA messages received logical			 0	    0.0 	 0.0
KA requests failed				 0	    0.0 	 0.0
KA requests succeeded				 0	    0.0 	 0.0
Pseudo reconfiguration count			 0	    0.0 	 0.0
Pseudo rm reconfig count			 0	    0.0 	 0.0
acks for commit broadcast(actual)	    32,773	   54.2 	 0.3
acks for commit broadcast(logical	    58,527	   96.8 	 0.5
broadcast msgs on commit(actual)	    67,013	  110.9 	 0.6
broadcast msgs on commit(logical)	    95,058	  157.3 	 0.9
broadcast msgs on commit(wasted)	    33,894	   56.1 	 0.3
dynamically allocated gcs resourc		 0	    0.0 	 0.0
dynamically allocated gcs shadows		 0	    0.0 	 0.0
flow control messages received			 0	    0.0 	 0.0
flow control messages sent			 0	    0.0 	 0.0
gcs assume cvt					 0	    0.0 	 0.0
gcs assume no cvt			     3,927	    6.5 	 0.0
gcs ast to fg				   684,867	1,133.1 	 6.3
gcs ast xid					 3	    0.0 	 0.0
gcs bidless ast to lms				 0	    0.0 	 0.0
gcs blocked converts			    11,138	   18.4 	 0.1
gcs blocked cr converts 		     4,788	    7.9 	 0.0
gcs compatible basts				11	    0.0 	 0.0
gcs compatible cr basts (global)		12	    0.0 	 0.0
gcs compatible cr basts (local) 	     8,231	   13.6 	 0.1
gcs cr basts to PIs				 0	    0.0 	 0.0
gcs cr requests to slave			 0	    0.0 	 0.0
gcs cr serve without current lock		 0	    0.0 	 0.0
gcs dbwr flush pi msgs			   158,967	  263.0 	 1.5
gcs dbwr write request msgs			96	    0.2 	 0.0
gcs error msgs					 0	    0.0 	 0.0
gcs flash read serve requests to		 0	    0.0 	 0.0
gcs force cr block only 			 0	    0.0 	 0.0
gcs force cr grant				 0	    0.0 	 0.0
gcs force cr no current 			 0	    0.0 	 0.0
gcs forward cr to pinged instance		 0	    0.0 	 0.0
gcs grant ast				   684,867	1,133.1 	 6.3
gcs grant request in partial open		 0	    0.0 	 0.0
gcs immediate (compatible) conver	     6,945	   11.5 	 0.1
gcs immediate (null) converts		   234,398	  387.8 	 2.2
gcs immediate cr (compatible) con		 0	    0.0 	 0.0
gcs immediate cr (null) converts	 1,323,542	2,189.8 	12.2
gcs lms flush pi msgs				 0	    0.0 	 0.0
gcs lms write request msgs		       221	    0.4 	 0.0
gcs msgs process time(ms)		    66,551	  110.1 	 0.6
gcs msgs received			 1,599,154	2,645.8 	14.8
gcs new served by master		       205	    0.3 	 0.0
gcs out-of-order msgs				 3	    0.0 	 0.0
gcs pings refused			       892	    1.5 	 0.0
gcs pkey conflicts retry			 0	    0.0 	 0.0
gcs queued converts				 0	    0.0 	 0.0
gcs read-mostly failure unmount d		 0	    0.0 	 0.0
gcs reader bypass N->Xw ping loca		 0	    0.0 	 0.0

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
gcs reader bypass N->Xw ping remo		 0	    0.0 	 0.0
gcs reader bypass grant X on assu		 0	    0.0 	 0.0
gcs reader bypass grant ast			 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>segment cfs allocations</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
gcs reader bypass grant fg ast			 0	    0.0 	 0.0
gcs reader bypass grant immediate		 6	    0.0 	 0.0
gcs recovery claim msgs 			 0	    0.0 	 0.0
gcs refuse xid					 2	    0.0 	 0.0
gcs refuse xid to fg				 2	    0.0 	 0.0
gcs refuse xid to lms				 0	    0.0 	 0.0
gcs refuse xid to master			 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
gcs regular cr					 0	    0.0 	 0.0
gcs resources for dynamic sga			 0	    0.0 	 0.0
gcs retry convert request			 0	    0.0 	 0.0
gcs shadows for dynamic sga			 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
gcs share recovery bast 			 0	    0.0 	 0.0
gcs side channel msgs actual		     4,683	    7.7 	 0.0
gcs side channel msgs logical		 1,114,104	1,843.3 	10.3
<tr><td scope="row" class='awrc'>segment dispenser load empty</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
gcs stale cr					 5	    0.0 	 0.0
gcs undo cr					 0	    0.0 	 0.0
gcs write notification msgs			 0	    0.0 	 0.0
gcs writes refused				 0	    0.0 	 0.0
ges msgs process time(ms)			80	    0.1 	 0.0
<tr><td scope="row" class='awrnc'>segment dispenser load tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
ges msgs received			     2,346	    3.9 	 0.0
ges remote lock allocation			22	    0.0 	 0.0
global posts dropped				 0	    0.0 	 0.0
global posts queue time 			 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
global posts queued				 0	    0.0 	 0.0
global posts requested				 0	    0.0 	 0.0
global posts sent				 0	    0.0 	 0.0
implicit batch messages received	    21,423	   35.4 	 0.2
<tr><td scope="row" class='awrnc'>segment prealloc tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
implicit batch messages sent		    27,894	   46.2 	 0.3
lmd msg send time(ms)				 0	    0.0 	 0.0
lms(s) msg send time(ms)			 0	    0.0 	 0.0
messages flow controlled		     4,189	    6.9 	 0.0
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>258</td><td align="right" class='awrc'>0.43</td><td align="right" class='awrc'>0.00</td></tr>
messages queue sent actual		   163,962	  271.3 	 1.5
messages queue sent logical		   206,832	  342.2 	 1.9
<tr><td scope="row" class='awrnc'>segment total chunk allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
messages received actual		   886,306	1,466.4 	 8.2
messages received logical		 1,601,500	2,649.7 	14.8
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>829,868</td><td align="right" class='awrc'>1,373.03</td><td align="right" class='awrc'>7.67</td></tr>
messages sent directly			 1,150,356	1,903.3 	10.6
messages sent indirectly		 1,374,495	2,274.1 	12.7
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>5,345,958</td><td align="right" class='awrnc'>8,844.99</td><td align="right" class='awrnc'>49.44</td></tr>
messages sent not implicit batche	    10,176	   16.8 	 0.1
messages sent pbatched			 1,196,430	1,979.5 	11.1
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>812,032</td><td align="right" class='awrc'>1,343.52</td><td align="right" class='awrc'>7.51</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>308</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.00</td></tr>
msgs causing lmd to send msgs			 0	    0.0 	 0.0
msgs causing lms(s) to send msgs		 0	    0.0 	 0.0
msgs received kernel queue time (   43,127,199,320 7.135480E+07    398,812.6
msgs received queue time (ms)		    17,702	   29.3 	 0.2
msgs received queued			 1,601,500	2,649.7 	14.8
msgs sent queue time (ms)		   336,035	  556.0 	 3.1
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>64,292</td><td align="right" class='awrc'>106.37</td><td align="right" class='awrc'>0.59</td></tr>
msgs sent queue time on ksxp (ms)	 1,251,759	2,071.1 	11.6
msgs sent queued			   300,546	  497.3 	 2.8
msgs sent queued on ksxp		 1,315,422	2,176.4 	12.2
number of broadcasted resources 		 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
number of directly freed master r		 0	    0.0 	 0.0
number of ges deadlock detected 		 0	    0.0 	 0.0
number of lock borrowed by LMD			 0	    0.0 	 0.0
number of received ODPS messages		 0	    0.0 	 0.0
number of received RBA messages 		 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
number of resource borrowed by LM		 0	    0.0 	 0.0
number of sent ODPS messages			 0	    0.0 	 0.0
number of sent RBA messages			 0	    0.0 	 0.0

<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>1,317,630</td><td align="right" class='awrnc'>2,180.04</td><td align="right" class='awrnc'>12.18</td></tr>
Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
process batch messages received 	    75,140	  124.3 	 0.7
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>72</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.00</td></tr>
process batch messages sent		    89,497	  148.1 	 0.8
receiver cycle time			   250,432	  414.3 	 2.3
receiver loop count			 1,044,871	1,728.8 	 9.7
			  ------------------------------------------------------

<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>

Global CR Server Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

Statistic				    Total
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>2,423,808</td><td align="right" class='awrc'>4,010.24</td><td align="right" class='awrc'>22.41</td></tr>
------------------------------ ------------------
CR Block Requests			    3,506
CURRENT Block Requests			    1,492
Data Block Requests			    3,506
Undo Block Requests				0
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
TX Block Requests			    1,474
Current Results 			    4,997
Private results 				1
Zero Results					0
Disk Read Results				0
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>3,291</td><td align="right" class='awrc'>5.45</td><td align="right" class='awrc'>0.03</td></tr>
Fail Results					0
Fairness Down Converts			    3,445
Light Works				    1,523
Flushes 				       32
Builds					    3,506
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>137,733</td><td align="right" class='awrnc'>227.88</td><td align="right" class='awrnc'>1.27</td></tr>
Errors						0
			  ------------------------------------------------------

Global Current Server Statistics	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Pins    = CURRENT Block Pin Operations
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>137,733</td><td align="right" class='awrc'>227.88</td><td align="right" class='awrc'>1.27</td></tr>
-> Flushes = Redo Flush before CURRENT Block Served Operations

Statistic	  Total % <100us   % <1ms  % <10ms % <100ms    % <1s   % <10s
---------- ------------ -------- -------- -------- -------- -------- --------
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>337</td><td align="right" class='awrnc'>0.56</td><td align="right" class='awrnc'>0.00</td></tr>
Pins		      2    50.00	     50.00
Flushes 	     35 		     82.86    17.14
			  ------------------------------------------------------

Global Cache Transfer Statistics	 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>temp space allocated (bytes)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested (Congst) - Block Transfer impacted by Remote System Load
-> ordered by CR + Current Blocks Received desc

<tr><td scope="row" class='awrnc'>total cf enq hold time</td><td align="right" class='awrnc'>2,774</td><td align="right" class='awrnc'>4.59</td><td align="right" class='awrnc'>0.03</td></tr>
			       CR			  Current
		 ----------------------------- -----------------------------
Inst Block	   Blocks      %      %      %	 Blocks      %	    %	   %
  No Class	 Received  Immed   Busy Congst Received  Immed	 Busy Congst
---- ----------- -------- ------ ------ ------ -------- ------ ------ ------
   2 data block     5,089   99.7     .2     .1	 16,157   78.9	 21.1	  .0
   2 Others	       40   97.5    2.5     .0	     71    9.9	 90.1	  .0
   2 undo header       32   50.0   50.0     .0	      2     .0	100.0	  .0
			  ------------------------------------------------------

Global Cache Transfer Times (us)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Avg Time - average time of all blocks (Immed,Busy,Congst) in us
-> Immed, Busy, Congst -  Average times in us
-> ordered by CR + Current Blocks Received desc

		    CR Avg Time (us)	     Current Avg Time (us)
	      --------------------------- ---------------------------
Inst Block
  No Class	 All  Immed   Busy Congst    All  Immed   Busy Congst
---- -------- ------ ------ ------ ------ ------ ------ ------ ------
   2 data blo	1184   1172   4840   7293    689    655    813	 3298
   2 others	 497	414   3755    N/A    607    375    633	  N/A
   2 undo hea	3471	395   6548    N/A    427    N/A    427	  N/A
   2 undo blo	 N/A	N/A    N/A    N/A    N/A    N/A    N/A	  N/A
			  ------------------------------------------------------

Global Cache Transfer (Immediate)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> % of Blocks Received requiring 2 or 3 hops
-> ordered by CR + Current Blocks Received desc

				   CR			    Current
		      --------------------------- ---------------------------
 Src Block     Blocks  Immed Blks	%	%  Immed Blks	    %	    %
Inst Class	 Lost	 Received    2hop    3hop    Received	 2hop	 3hop
---- -------- ------- ----------- ------- ------- ----------- ------- -------
   2 data blo		    5,074   100.0     0.0      12,745	100.0	  0.0
   2 others		       39   100.0     0.0	    7	100.0	  0.0
   2 undo hea		       16   100.0     0.0	  N/A	  N/A	  N/A
   2 undo blo		      N/A     N/A     N/A	  N/A	  N/A	  N/A
			  ------------------------------------------------------

Global Cache Times (Immediate)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Blocks Lost, 2-hop and 3-hop Average times in (us)
-> ordered by CR + Current Blocks Received desc
<tr><td scope="row" class='awrc'>total number of cf enq holders</td><td align="right" class='awrc'>127</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td></tr>

		       CR Avg Time (us)   Current Avg Time (us)
		     -------------------- --------------------
 Src Block	Lost
Inst Class	Time  Immed   2hop   3hop  Immed   2hop   3hop
---- -------- ------ ------ ------ ------ ------ ------ ------
   2 data blo	       1172   1172    N/A    655    655    N/A
   2 others		414    414    N/A    375    375    N/A
<tr><td scope="row" class='awrnc'>total number of times SMON posted</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
   2 undo hea		395    395    N/A    N/A    N/A    N/A
   2 undo blo		N/A    N/A    N/A    N/A    N/A    N/A
			  ------------------------------------------------------

Interconnect Ping Latency Statistics	 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>transaction lock background gets</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
-> Ping latency of the roundtrip of a message from this instance to -> target in
-> The target instance is identified by an instance number.
-> Average and standard deviation of ping latency is given in microseconds
-> for message sizes of 500 bytes and 8K.
<tr><td scope="row" class='awrnc'>transaction lock foreground requests</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-> Note that latency of a message from the instance to itself is used as
-> control, since message latency can include wait for CPU

   Target 500B Pin Avg La      Stddev  8K Ping Avg La	   Stddev
 Instance    Count 500B m    500B msg	 Count 8K msg	   8K msg
<tr><td scope="row" class='awrc'>transaction rollbacks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
--------- -------- ------ ----------- -------- ------ -----------
	1	55    726	  .36	    60	  711	      .33
	2	55    806	  .25	    60	  873	      .37
			  ------------------------------------------------------
<tr><td scope="row" class='awrnc'>transaction tables consistent read rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

Interconnect Throughput by Client	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Throughput of interconnect usage by major consumers
-> All throughput numbers are megabytes per second

<tr><td scope="row" class='awrc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrc'>734,734</td><td align="right" class='awrc'>1,215.63</td><td align="right" class='awrc'>6.79</td></tr>
			Send	 Receive
Used By 	  Mbytes/sec  Mbytes/sec
---------------- ----------- -----------
Global Cache		 .23	     .34
Parallel Query		 .00	     .00
<tr><td scope="row" class='awrnc'>undo change vector size</td><td align="right" class='awrnc'>119,354,908</td><td align="right" class='awrnc'>197,475.05</td><td align="right" class='awrnc'>1,103.72</td></tr>
DB Locks		1.28	     .84
DB Streams		 N/A	     N/A
Other			 .00	     .00
			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>user calls</td><td align="right" class='awrc'>197</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>0.00</td></tr>
Interconnect Device Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Throughput and errors of interconnect devices (at OS level)
-> All throughput numbers are megabytes per second

Device Name	IP Address	 Public Source
<tr><td scope="row" class='awrnc'>user commits</td><td align="right" class='awrnc'>108,139</td><td align="right" class='awrnc'>178.92</td><td align="right" class='awrnc'>1.00</td></tr>
--------------- ---------------- ------ -------------------------------
				  Send	   Send
       Send	Send	 Send	Buffer	Carrier
 Mbytes/sec   Errors  Dropped  Overrun	   Lost
----------- -------- -------- -------- --------
<tr><td scope="row" class='awrc'>user logons cumulative</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
			       Receive	Receive
    Receive  Receive  Receive	Buffer	  Frame
 Mbytes/sec   Errors  Dropped  Overrun	 Errors
----------- -------- -------- -------- --------
fg-priv:1	169.254.22.248	 NO
<tr><td scope="row" class='awrnc'>user logouts cumulative</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
	.00	   0	    0	     0	      0
	.00	   0	    0	     0	      0
			  ------------------------------------------------------

Dynamic Remastering Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>488</td><td align="right" class='awrc'>0.81</td><td align="right" class='awrc'>0.00</td></tr>
-> Times are in seconds
-> Affinity objects - Affinity objects mastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot

							per    Begin	  End
<tr><td scope="row" class='awrnc'>write clones created in background</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Name					Total	Remaster Op	Snap	 Snap
-------------------------------- ------------ ------------- -------- --------
affinity objects					N/A	   1	    1
read-mostly objects					N/A	   1	    1
affinity objects (other inst)				N/A	   5	    5
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
read-mostly objects (persistent)			N/A	   1	    1
			  ------------------------------------------------------

End of Report
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1300"></a>
<h3 class="awr">Instance Activity Stats - Absolute Values</h3>
<ul>
<li class="awr"> Statistics with absolute values (should not be diffed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays absolute values of instance-related features. For each instance, activity begin value and end value are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Begin Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>logons current</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>91</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors current</td><td align="right" class='awrnc'>252</td><td align="right" class='awrnc'>176</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache count</td><td align="right" class='awrc'>13,537</td><td align="right" class='awrc'>13,552</td></tr>
<tr><td scope="row" class='awrnc'>session pga memory</td><td align="right" class='awrnc'>687,668,192</td><td align="right" class='awrnc'>597,690,640</td></tr>
<tr><td scope="row" class='awrc'>session pga memory max</td><td align="right" class='awrc'>822,199,232</td><td align="right" class='awrc'>728,420,592</td></tr>
<tr><td scope="row" class='awrnc'>session uga memory</td><td align="right" class='awrnc'>927,043,344</td><td align="right" class='awrnc'>895,020,776</td></tr>
<tr><td scope="row" class='awrc'>session uga memory max</td><td align="right" class='awrc'>9,191,755,936</td><td align="right" class='awrc'>9,365,341,952</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1400"></a>
<h3 class="awr">Instance Activity Stats - Thread Activity</h3>
<ul>
<li class="awr"> Statistics identified by '(derived)' come from sources other than SYSSTAT</li>
</ul>
<table border="0" class="tdiff" summary="This table displays thread activity stats in the instance. For each activity , total number of activity and activity per hour are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Hour</th></tr>
<tr><td scope="row" class='awrc'>log switches (derived)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="24"></a>
<h2 class="awr">
IO Stats
</h2>
<ul>
<li class="awr"><a class="awr" href="#8760">IOStat by Function summary</a></li>
<li class="awr"><a class="awr" href="#8770">IOStat by Filetype summary</a></li>
<li class="awr"><a class="awr" href="#8780">IOStat by Function/Filetype summary</a></li>
<li class="awr"><a class="awr" href="#1700">Tablespace IO Stats</a></li>
<li class="awr"><a class="awr" href="#1800">File IO Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8760"></a>
<h3 class="awr">IOStat by Function summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the IO Statistics for different functions. IO stats includes amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td scope="row" class='awrc'>Buffer Cache Reads</td><td align="right" class='awrc'>15.8G</td><td align="right" class='awrc'>3415.57</td><td align="right" class='awrc'>26.687M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.1M</td><td align="right" class='awrc'>4.68ms</td></tr>
<tr><td scope="row" class='awrnc'>DBWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.3G</td><td align="right" class='awrnc'>479.11</td><td align="right" class='awrnc'>3.888M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>641M</td><td align="right" class='awrc'>323.59</td><td align="right" class='awrc'>1.061M</td><td align="right" class='awrc'>95K</td><td align="right" class='awrc'>6.39ms</td></tr>
<tr><td scope="row" class='awrnc'>Others</td><td align="right" class='awrnc'>478M</td><td align="right" class='awrnc'>5.59</td><td align="right" class='awrnc'>.791M</td><td align="right" class='awrnc'>10M</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>.017M</td><td align="right" class='awrnc'>2351</td><td align="right" class='awrnc'>4.44ms</td></tr>
<tr><td scope="row" class='awrc'>Direct Writes</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TOTAL:</td><td align="right" class='awrnc'>16.2G</td><td align="right" class='awrnc'>3421.16</td><td align="right" class='awrnc'>27.478M</td><td align="right" class='awrnc'>2.9G</td><td align="right" class='awrnc'>803.68</td><td align="right" class='awrnc'>4.965M</td><td align="right" class='awrnc'>2.2M</td><td align="right" class='awrnc'>4.76ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8770"></a>
<h3 class="awr">IOStat by Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Small Read and Large Read are average service times </li>
<li class="awr"> Ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IO Statistics for different file types, such as data files, control files, log files and temp files. IO Statistics include amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Small Read</th><th class="awrbg" scope="col">Large Read</th></tr>
<tr><td scope="row" class='awrc'>Data File</td><td align="right" class='awrc'>15.8G</td><td align="right" class='awrc'>3416.01</td><td align="right" class='awrc'>26.687M</td><td align="right" class='awrc'>2.3G</td><td align="right" class='awrc'>479.09</td><td align="right" class='awrc'>3.89M</td><td align="right" class='awrc'>4.19ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Log File</td><td align="right" class='awrnc'>434M</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>.718M</td><td align="right" class='awrnc'>641M</td><td align="right" class='awrnc'>323.42</td><td align="right" class='awrnc'>1.061M</td><td align="right" class='awrnc'>3.20ms</td><td align="right" class='awrnc'>1230.91ms</td></tr>
<tr><td scope="row" class='awrc'>Control File</td><td align="right" class='awrc'>44M</td><td align="right" class='awrc'>4.67</td><td align="right" class='awrc'>.073M</td><td align="right" class='awrc'>8M</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>.013M</td><td align="right" class='awrc'>2.58ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Temp File</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>3.12ms</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TOTAL:</td><td align="right" class='awrc'>16.2G</td><td align="right" class='awrc'>3421.68</td><td align="right" class='awrc'>27.48M</td><td align="right" class='awrc'>2.9G</td><td align="right" class='awrc'>803.51</td><td align="right" class='awrc'>4.965M</td><td align="right" class='awrc'>4.18ms</td><td align="right" class='awrc'>1230.91ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8780"></a>
<h3 class="awr">IOStat by Function/Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Ordered by (Data Read + Write) desc for each function</li>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function/Filetype summary. . 'Data' columns suffixed with M,G,T,P are in multiples of 1024 other columns suffixed with K,M,G,T,P are in multiples of 1000. Ordered by (Data Read + Write) desc for each function"><tr><th class="awrbg" scope="col">Function/File Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs	 per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time	</th></tr>
<tr><td scope="row" class='awrc'>
Buffer Cache Reads
</td><td align="right" class='awrc'>15.7G</td><td align="right" class='awrc'>3414.32</td><td align="right" class='awrc'>26.677M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.1M</td><td align="right" class='awrc'>4.68ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Buffer Cache Reads (Data File)
</td><td align="right" class='awrnc'>15.7G</td><td align="right" class='awrnc'>3414.24</td><td align="right" class='awrnc'>26.676M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.1M</td><td align="right" class='awrnc'>4.68ms</td></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Temp File)
</td><td align="right" class='awrc'>1M</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>.002M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>3.56ms</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.3G</td><td align="right" class='awrnc'>479.07</td><td align="right" class='awrnc'>3.888M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
DBWR
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.3G</td><td align="right" class='awrc'>479.11</td><td align="right" class='awrc'>3.888M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 LGWR (Log File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>641M</td><td align="right" class='awrc'>323.42</td><td align="right" class='awrc'>1.061M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
LGWR
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>641M</td><td align="right" class='awrnc'>323.42</td><td align="right" class='awrnc'>1.061M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Others
</td><td align="right" class='awrc'>478M</td><td align="right" class='awrc'>5.58</td><td align="right" class='awrc'>.791M</td><td align="right" class='awrc'>10M</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>.017M</td><td align="right" class='awrc'>2072</td><td align="right" class='awrc'>4.10ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Log File)
</td><td align="right" class='awrnc'>434M</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>.718M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>2.99ms</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Control File)
</td><td align="right" class='awrc'>44M</td><td align="right" class='awrc'>4.67</td><td align="right" class='awrc'>.073M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>1990</td><td align="right" class='awrc'>4.14ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Data File)
Report written to awr.txt
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Temp File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Direct Writes (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
SQL> <tr><td scope="row" class='awrc'>
SQL> SQL> Direct Writes
SQL> SQL> SQL> </td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
SQL> <tr><td scope="row" class='awrnc'>
TOTAL:
</td><td align="right" class='awrnc'>16.2G</td><td align="right" class='awrnc'>3419.90</td><td align="right" class='awrnc'>27.468M</td><td align="right" class='awrnc'>2.9G</td><td align="right" class='awrnc'>803.51</td><td align="right" class='awrnc'>4.965M</td><td align="right" class='awrnc'>2.1M</td><td align="right" class='awrnc'>4.68ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1700"></a>
<h3 class="awr">Tablespace IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1800"></a>
<h3 class="awr">File IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="25"></a>
<h2 class="awr">
Buffer Pool Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1900">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#1910">Checkpoint Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1900"></a>
<h3 class="awr">Buffer Pool Statistics</h3>
<ul>
<li class="awr"> Standard block size Pools  D: default,  K: keep,  R: recycle </li>
<li class="awr"> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer pool statistics for different types of buffers, such as default, keep, and recycle. Statistics include number of buffers, % Pool hit, buffer gets, physical reads, physical writes, free buffer wait, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Number of Buffers</th><th class="awrbg" scope="col">Pool Hit%</th><th class="awrbg" scope="col">Buffer Gets</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Free Buff Wait</th><th class="awrbg" scope="col">Writ Comp Wait</th><th class="awrbg" scope="col">Buffer Busy Waits</th></tr>
<tr><td scope="row" class='awrc'>D</td><td align="right" class='awrc'>932,000</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>5,347,151</td><td align="right" class='awrc'>2,070,749</td><td align="right" class='awrc'>300,641</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />

<a class="awr" name="1910"></a>



<h3 class="awr">Checkpoint Activity</h3>
<ul>
<li class="awr">Total Physical Writes:			    300,804</li>
</ul>
<table border="0" class="tdiff" summary="This table displays checkpoint activity statistics. Statistics include MTTR writes, log size writes, autotune checkpoint writes, etc."><tr><th class="awrbg" scope="col">MTTR Writes</th><th class="awrbg" scope="col">Log Size Writes</th><th class="awrbg" scope="col">Log Ckpt Writes</th><th class="awrbg" scope="col">Other Settings Writes</th><th class="awrbg" scope="col">Autotune Ckpt Writes</th><th class="awrbg" scope="col">Thread Ckpt Writes</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>18,369</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="26"></a>
<h2 class="awr">
Advisory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2000">Instance Recovery Stats</a></li>
<li class="awr"><a class="awr" href="#2010">MTTR Advisory</a></li>
<li class="awr"><a class="awr" href="#2100">Buffer Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#2400">PGA Aggr Summary</a></li>
<li class="awr"><a class="awr" href="#2600">PGA Aggr Target Stats</a></li>
<li class="awr"><a class="awr" href="#2700">PGA Aggr Target Histogram</a></li>
<li class="awr"><a class="awr" href="#2800">PGA Memory Advisory</a></li>
<li class="awr"><a class="awr" href="#5500">Shared Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#6900">SGA Target Advisory</a></li>
<li class="awr"><a class="awr" href="#7100">Streams Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#5700">Java Pool Advisory</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2000"></a>
<h3 class="awr">Instance Recovery Stats</h3>
<ul>
<li class="awr"> B: Begin Snapshot,  E: End Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays instance recovery statistics at begin and end snapshot. It displays target MTTR, estimated MTTR, recovery estimated IO per second, redo blocks, target redo blocks, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Targt MTTR  (s) </th><th class="awrbg" scope="col">Estd MTTR (s)</th><th class="awrbg" scope="col">Recovery Estd IOs</th><th class="awrbg" scope="col">Actual  RedoBlks</th><th class="awrbg" scope="col">Target	RedoBlks</th><th class="awrbg" scope="col">Log Sz  RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Timeout RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Interval RedoBlks</th><th class="awrbg" scope="col">Opt Log Sz(M)</th><th class="awrbg" scope="col">Estd RAC Avail Time</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>21023</td><td align="right" class='awrc'>41449</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>59719</td><td align="right" class='awrnc'>308547</td><td align="right" class='awrnc'>24189</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>24189</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>16</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2010"></a>
<h3 class="awr">MTTR Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />

<a class="awr" href="#26">Back to Advisory Statistics</a>
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
<br /><a class="awr" href="#top">Back to Top</a><p />
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

<a class="awr" name="2100"></a>
'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report
<h3 class="awr">Buffer Pool Advisory</h3>

<ul>
<li class="awr"> Only rows with estimated physical reads &gt;0 are displayed </li>
<li class="awr"> ordered by Block Size, Buffers For Estimate</li>
</ul>

Type Specified:  text

<table border="0" class="tdiff" summary="This table displays MTTR advisory. It displays size for estimate, dirty limit, estimated cache writes, estimated cache write factor, estimated total write, estimated total IO per second, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Size for Est (M)</th><th class="awrbg" scope="col">Size Factor</th><th class="awrbg" scope="col">Buffers (thousands)</th><th class="awrbg" scope="col">Est Phys Read Factor</th><th class="awrbg" scope="col">Estimated Phys Reads (thousands)</th><th class="awrbg" scope="col">Est Phys Read Time</th><th class="awrbg" scope="col">Est %DBtime for Rds</th></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>800</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>29,966</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>200615.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>1,600</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>186</td><td align="right" class='awrnc'>1.12</td><td align="right" class='awrnc'>27,988</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>187313.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>2,400</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>280</td><td align="right" class='awrc'>1.08</td><td align="right" class='awrc'>26,907</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>180050.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>3,200</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>373</td><td align="right" class='awrnc'>1.05</td><td align="right" class='awrnc'>26,292</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>175910.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>4,000</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>466</td><td align="right" class='awrc'>1.04</td><td align="right" class='awrc'>25,906</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>173314.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>4,800</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>559</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>25,635</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>171495.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>5,600</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>652</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>25,433</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>170140.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>6,400</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>746</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>25,267</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>169023.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>7,200</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>839</td><td align="right" class='awrc'>1.01</td><td align="right" class='awrc'>25,122</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>168044.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>8,000</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>932</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>24,994</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>167188.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>8,800</td><td align="right" class='awrc'>1.10</td><td align="right" class='awrc'>1,025</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>24,880</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>166418.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>9,600</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>1,118</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>24,773</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>165701.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>10,400</td><td align="right" class='awrc'>1.30</td><td align="right" class='awrc'>1,212</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>24,666</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>164979.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>11,200</td><td align="right" class='awrnc'>1.40</td><td align="right" class='awrnc'>1,305</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>24,565</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>164303.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>12,000</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>1,398</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>24,466</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>163638.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>12,800</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>1,491</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>24,376</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>163033.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>13,600</td><td align="right" class='awrc'>1.70</td><td align="right" class='awrc'>1,584</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>24,293</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>162471.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>14,400</td><td align="right" class='awrnc'>1.80</td><td align="right" class='awrnc'>1,678</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>24,210</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>161912.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>15,200</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>1,771</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>24,129</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>161371.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>16,000</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>1,864</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>24,052</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>160850.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2400"></a>
<h3 class="awr">PGA Aggr Summary</h3>
<ul>
<li class="awr"> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate summary. It includes PGA cache hits, total wait time, average time for each class of buffer wait and WorkArea data processed."><tr><th class="awrbg" scope="col">PGA Cache Hit %</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Extra W/A MB Read/Written</th></tr>
<tr><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>134</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2600"></a>
<h3 class="awr">PGA Aggr Target Stats</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap (rows dentified with B or E contain data	 which is absolute i.e. not diffed over the interval) </li>
<li class="awr"> Auto PGA Target - actual workarea memory target </li>
<li class="awr"> W/A PGA Used	 - amount of memory used for all Workareas (manual + auto) </li>
<li class="awr"> %PGA W/A Mem	 - percentage of PGA memory allocated to workareas </li>
<li class="awr"> %Auto W/A Mem	 - percentage of workarea memory controlled by Auto Mem Mgmt </li>
<li class="awr"> %Man W/A Mem	 - percentage of workarea memory under manual control</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target statistics for begin and end snapshot. Statistics include PGA aggregate target, auto PGA target, PGA memory allocation, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">PGA Aggr Target(M)</th><th class="awrbg" scope="col">Auto PGA Target(M)</th><th class="awrbg" scope="col">PGA Mem  Alloc(M) </th><th class="awrbg" scope="col">W/A PGA  Used(M) </th><th class="awrbg" scope="col">%PGA W/A Mem</th><th class="awrbg" scope="col">%Auto W/A Mem</th><th class="awrbg" scope="col">%Man W/A Mem</th><th class="awrbg" scope="col">Global Mem Bound(K)</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>3,215</td><td align="right" class='awrc'>1,849</td><td align="right" class='awrc'>1,370.63</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>329,210</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>1,924</td><td align="right" class='awrnc'>1,275.33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>329,210</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2700"></a>
<h3 class="awr">PGA Aggr Target Histogram</h3>
<ul>
<li class="awr"> Optimal Executions are purely in-memory operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target histograms."><tr><th class="awrbg" scope="col">  Low Optimal</th><th class="awrbg" scope="col">  High Optimal</th><th class="awrbg" scope="col">Total Execs</th><th class="awrbg" scope="col">Optimal Execs</th><th class="awrbg" scope="col">1-Pass Execs</th><th class="awrbg" scope="col">M-Pass Execs</th></tr>
<tr><td class='awrc'>2K</td><td class='awrc'>4K</td><td align="right" class='awrc'>260</td><td align="right" class='awrc'>260</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>64K</td><td class='awrnc'>128K</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>128K</td><td class='awrc'>256K</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>256K</td><td class='awrnc'>512K</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>512K</td><td class='awrc'>1024K</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>1M</td><td class='awrnc'>2M</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>2M</td><td class='awrc'>4M</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2800"></a>
<h3 class="awr">PGA Memory Advisory</h3>
<ul>
<li class="awr"> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value    where Estd PGA Overalloc Count is 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA memory advisory for different estimated PGA target sizes. It displays size factor, Workarea MB processed, estimated PGA cache hit, estimated extra Workarea MB read written to disk, etc., for each target size."><tr><th class="awrbg" scope="col">PGA Target Est (MB)</th><th class="awrbg" scope="col">Size Factr</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Estd Extra	 W/A MB Read/	Written to Disk </th><th class="awrbg" scope="col">Estd PGA Cache Hit %</th><th class="awrbg" scope="col">Estd PGA Overalloc Count</th><th class="awrbg" scope="col">Estd Time</th></tr>
<tr><td align="right" scope="row" class='awrc'>402</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>3,213.77</td><td align="right" class='awrc'>85.00</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>57,184,270</td></tr>
<tr><td align="right" scope="row" class='awrnc'>804</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>3,105.07</td><td align="right" class='awrnc'>85.00</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>56,889,080</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,608</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>2,123.80</td><td align="right" class='awrc'>89.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>54,224,176</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,411</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>2,123.80</td><td align="right" class='awrnc'>89.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>54,224,176</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,215</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,858</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,501</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrnc'>5,144</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrc'>5,787</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,430</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,645</td><td align="right" class='awrc'>3.00</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,860</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,290</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>17,842.68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>48,456,451</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,720</td><td align="right" class='awrnc'>8.00</td><td align="right" class='awrnc'>17,842.68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>48,456,451</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5500"></a>
<h3 class="awr">Shared Pool Advisory</h3>
<ul>
<li class="awr"> SP: Shared Pool     Est LC: Estimated Library Cache   Factr: Factor </li>
<li class="awr"> Note there is often a 1:Many correlation between a single logical object    in the Library Cache, and the physical number of memory objects associated    with it.  Therefore comparing the number of Lib Cache objects (e.g. in     v$librarycache), with the number of Lib Cache Memory Objects is invalid.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared pool advisory. Size factor, estimated library cache size, estimated library cache memory object and other info is displayed for different shared pool sizes"><tr><th class="awrbg" scope="col">Shared Pool Size(M)</th><th class="awrbg" scope="col">SP Size Factr</th><th class="awrbg" scope="col">Est LC Size (M)</th><th class="awrbg" scope="col">Est LC Mem Obj</th><th class="awrbg" scope="col">Est LC Time Saved (s)</th><th class="awrbg" scope="col">Est LC Time Saved Factr</th><th class="awrbg" scope="col">Est LC Load Time (s)</th><th class="awrbg" scope="col">Est LC Load Time Factr</th><th class="awrbg" scope="col">Est LC Mem Obj Hits (K)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1,280</td><td align="right" class='awrc'>0.89</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>1,422</td><td align="right" class='awrc'>83,097</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>717</td><td align="right" class='awrc'>10.86</td><td align="right" class='awrc'>3,400</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,312</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>2,055</td><td align="right" class='awrnc'>83,418</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>396</td><td align="right" class='awrnc'>6.00</td><td align="right" class='awrnc'>3,410</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,344</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>82</td><td align="right" class='awrc'>2,381</td><td align="right" class='awrc'>83,525</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>289</td><td align="right" class='awrc'>4.38</td><td align="right" class='awrc'>3,420</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,376</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>113</td><td align="right" class='awrnc'>3,046</td><td align="right" class='awrnc'>83,623</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>191</td><td align="right" class='awrnc'>2.89</td><td align="right" class='awrnc'>3,429</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,408</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>3,982</td><td align="right" class='awrc'>83,704</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>1.67</td><td align="right" class='awrc'>3,438</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,440</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>4,812</td><td align="right" class='awrnc'>83,748</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,472</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>208</td><td align="right" class='awrc'>6,235</td><td align="right" class='awrc'>83,749</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>65</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,504</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>7,546</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,536</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,568</td><td align="right" class='awrnc'>1.09</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,600</td><td align="right" class='awrc'>1.11</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,632</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,664</td><td align="right" class='awrc'>1.16</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,696</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,728</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,760</td><td align="right" class='awrnc'>1.22</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,920</td><td align="right" class='awrc'>1.33</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,080</td><td align="right" class='awrnc'>1.44</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,240</td><td align="right" class='awrc'>1.56</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,400</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,560</td><td align="right" class='awrc'>1.78</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,720</td><td align="right" class='awrnc'>1.89</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>8,353</td><td align="right" class='awrnc'>83,750</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>3,445</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,880</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>259</td><td align="right" class='awrc'>8,353</td><td align="right" class='awrc'>83,750</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>3,445</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6900"></a>
<h3 class="awr">SGA Target Advisory</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA target advisory for different SGA target sizes. It displays SGA size factor, estimated DB time and estimated physical reads for different SGA target sizes."><tr><th class="awrbg" scope="col">SGA Target Size (M)</th><th class="awrbg" scope="col">SGA Size Factor</th><th class="awrbg" scope="col">Est DB Time (s)</th><th class="awrbg" scope="col">Est Physical Reads</th></tr>
<tr><td align="right" scope="row" class='awrc'>2,416</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>218,248</td><td align="right" class='awrc'>29,965,762</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,624</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>204,889</td><td align="right" class='awrnc'>27,988,707</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,832</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>193,489</td><td align="right" class='awrc'>26,291,588</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,040</td><td align="right" class='awrnc'>0.63</td><td align="right" class='awrnc'>189,720</td><td align="right" class='awrnc'>25,634,236</td></tr>
<tr><td align="right" scope="row" class='awrc'>7,248</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>187,724</td><td align="right" class='awrc'>25,434,281</td></tr>
<tr><td align="right" scope="row" class='awrnc'>8,456</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>185,618</td><td align="right" class='awrnc'>25,121,851</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,664</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>184,768</td><td align="right" class='awrc'>24,994,380</td></tr>
<tr><td align="right" scope="row" class='awrnc'>10,872</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>183,290</td><td align="right" class='awrnc'>24,774,429</td></tr>
<tr><td align="right" scope="row" class='awrc'>12,080</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>182,218</td><td align="right" class='awrc'>24,564,477</td></tr>
<tr><td align="right" scope="row" class='awrnc'>13,288</td><td align="right" class='awrnc'>1.38</td><td align="right" class='awrnc'>181,220</td><td align="right" class='awrnc'>24,466,999</td></tr>
<tr><td align="right" scope="row" class='awrc'>14,496</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>180,056</td><td align="right" class='awrc'>24,292,038</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15,704</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>179,484</td><td align="right" class='awrnc'>24,209,556</td></tr>
<tr><td align="right" scope="row" class='awrc'>16,912</td><td align="right" class='awrc'>1.75</td><td align="right" class='awrc'>178,430</td><td align="right" class='awrc'>24,052,092</td></tr>
<tr><td align="right" scope="row" class='awrnc'>18,120</td><td align="right" class='awrnc'>1.88</td><td align="right" class='awrnc'>178,430</td><td align="right" class='awrnc'>24,052,092</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,328</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>178,430</td><td align="right" class='awrc'>24,052,092</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7100"></a>
<h3 class="awr">Streams Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5700"></a>
<h3 class="awr">Java Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="27"></a>
<h2 class="awr">
Wait Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2300">Buffer Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#3000">Enqueue Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2300"></a>
<h3 class="awr">Buffer Wait Statistics</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer wait statistics. Statistics include waits, total wait time and average time for each class of buffer wait."><tr><th class="awrbg" scope="col">Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Time (ms)</th></tr>
<tr><td scope="row" class='awrc'>undo header</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3000"></a>
<h3 class="awr">Enqueue Activity</h3>
<ul>
<li class="awr"> only enqueues with requests are shown	</li>
<li class="awr"> Enqueue stats gathered prior to 10g should not be compared with 10g data </li>
<li class="awr"> ordered by Wait Time desc, Waits desc, Requests desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays enqueue activity statistics. Requests, success gets, failed gets, waits, wait time and average wait time are displayed for each enqueue type."><tr><th class="awrbg" scope="col">Enqueue Type (Request Reason)</th><th class="awrbg" scope="col">Requests</th><th class="awrbg" scope="col">Succ Gets</th><th class="awrbg" scope="col">Failed Gets</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Wt Time (s)</th><th class="awrbg" scope="col">Av Wt Time(ms)</th></tr>
<tr><td scope="row" class='awrc'>TM-DML</td>
<td align="right" class='awrc'>108,368</td><td align="right" class='awrc'>108,359</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>99.00</td></tr>
<tr><td scope="row" class='awrnc'>CF-Controlfile Transaction</td>
<td align="right" class='awrnc'>1,361</td><td align="right" class='awrnc'>1,361</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.84</td></tr>
<tr><td scope="row" class='awrc'>RO-Multiple Object Reuse (fast object reuse)</td>
<td align="right" class='awrc'>140</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.94</td></tr>
<tr><td scope="row" class='awrnc'>WF-AWR Flush</td>
<td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.40</td></tr>
<tr><td scope="row" class='awrc'>PS-PX Process Reservation</td>
<td align="right" class='awrc'>54</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>CO-KTUCLO Master Slave enq (master slave det)</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>FB-Format Block</td>
<td align="right" class='awrc'>16</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.75</td></tr>
<tr><td scope="row" class='awrnc'>HW-Segment High Water Mark</td>
<td align="right" class='awrnc'>271</td><td align="right" class='awrnc'>271</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.67</td></tr>
<tr><td scope="row" class='awrc'>TA-Instance Undo</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>DW-In memory Dispenser</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.00</td></tr>
<tr><td scope="row" class='awrc'>TX-Transaction (allocate ITL entry)</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.00</td></tr>
<tr><td scope="row" class='awrnc'>TD-KTF map table enqueue (KTF dump entries)</td>
<td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>TX-Transaction</td>
<td align="right" class='awrc'>108,411</td><td align="right" class='awrc'>108,405</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1</td>
<td align="right" class='awrnc'>2,541</td><td align="right" class='awrnc'>2,541</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1 (queue lock)</td>
<td align="right" class='awrc'>2,541</td><td align="right" class='awrc'>2,541</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SJ-KTSJ Slave Task Cancel (Slave Task Cancel)</td>
<td align="right" class='awrnc'>423</td><td align="right" class='awrnc'>424</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DD-ASM Local Disk Group</td>
<td align="right" class='awrc'>365</td><td align="right" class='awrc'>365</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1 (q mem clnup lck)</td>
<td align="right" class='awrnc'>242</td><td align="right" class='awrnc'>242</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>BU-Buddy Instance Context (recovery set construct)</td>
<td align="right" class='awrc'>191</td><td align="right" class='awrc'>191</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TT-Tablespace</td>
<td align="right" class='awrnc'>147</td><td align="right" class='awrnc'>147</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FP-File Object (global fob contention)</td>
<td align="right" class='awrc'>82</td><td align="right" class='awrc'>82</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TO-Temp Object</td>
<td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IS-Instance State</td>
<td align="right" class='awrc'>20</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SE-Session Migration</td>
<td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>WT-AWR CDB-Wide Table Lock</td>
<td align="right" class='awrc'>18</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TH-Threshold Chain (metric threshold evaluation)</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AF-Advisor Framework (task serialization)</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DA-Instance DP Array (Slave Process Array)</td>
<td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MR-Media Recovery</td>
<td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PR-Process Startup</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PV-KSV slave startup (syncstart)</td>
<td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AE-Edition Lock (lock)</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CU-Cursor</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQ-Sequence Cache</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PW-Buffer Cache PreWarm (flush prewarm buffers)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SH-Active Session History Flushing</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XR-Quiesce / Force Logging (database force logging)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="28"></a>
<h2 class="awr">
Undo Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3300">Undo Segment Summary</a></li>
<li class="awr"><a class="awr" href="#3400">Undo Segment Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3300"></a>
<h3 class="awr">Undo Segment Summary</h3>
<ul>
<li class="awr"> Min/Max TR (mins) - Min and Max Tuned Retention (minutes) </li>
<li class="awr"> STO - Snapshot Too Old count,	OOS - Out of Space count </li>
<li class="awr"> Undo segment block stats: </li>
<li class="awr"> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed </li>
<li class="awr"> eS - expired	Stolen,   eR - expired	 Released,   eU - expired   reUsed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays undo segment summary. It displays undo tablespace number, number of undo blocks, number of transactions, max query length, etc."><tr><th class="awrbg" scope="col">Undo TS#</th><th class="awrbg" scope="col">Num Undo Blocks (K)</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concurcy</th><th class="awrbg" scope="col">Min/Max TR (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">	uS/uR/uU/    eS/eR/eU</th></tr>
<tr><td align="right" scope="row" class='awrc'>2</td><td align="right" class='awrc'>9.69</td><td align="right" class='awrc'>67,775</td><td align="right" class='awrc'>971</td><td align="right" class='awrc'>12</td><td class='awrc'>38.5/38.5</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3400"></a>
<h3 class="awr">Undo Segment Stats</h3>
<ul>
<li class="awr"> Most recent 35 Undostat rows, ordered by Time desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the 35 most recent Undostat rows."><tr><th class="awrbg" scope="col">End Time</th><th class="awrbg" scope="col">Num Undo Blocks</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concy</th><th class="awrbg" scope="col">Tun Ret (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">  uS/uR/uU/   eS/eR/eU</th></tr>
<tr><td scope="row" class='awrc'>10-Feb 11:22</td><td align="right" class='awrc'>9,686</td><td align="right" class='awrc'>67,775</td><td align="right" class='awrc'>971</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>38</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="29"></a>
<h2 class="awr">
Latch Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3500">Latch Activity</a></li>
<li class="awr"><a class="awr" href="#3600">Latch Sleep Breakdown</a></li>
<li class="awr"><a class="awr" href="#3700">Latch Miss Sources</a></li>
<li class="awr"><a class="awr" href="#7500">Mutex Sleep Summary</a></li>
<li class="awr"><a class="awr" href="#3800">Parent Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#3900">Child Latch Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3500"></a>
<h3 class="awr">Latch Activity</h3>
<ul>
<li class="awr"> &quot;Get Requests&quot;, &quot;Pct Get Miss&quot; and &quot;Avg Slps/Miss&quot; are statistics for	 willing-to-wait latch get requests </li>
<li class="awr"> &quot;NoWait Requests&quot;, &quot;Pct NoWait Miss&quot; are for no-wait latch get requests </li>
<li class="awr"> &quot;Pct Misses&quot; for both should be very close to 0.0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch statistics. Get requests, % get miss, wait time, noWait requests are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Get Miss</th><th class="awrbg" scope="col">Avg Slps /Miss</th><th class="awrbg" scope="col">Wait Time (s)</th><th class="awrbg" scope="col">NoWait Requests</th><th class="awrbg" scope="col">Pct NoWait Miss</th></tr>
<tr><td scope="row" class='awrc'>AQ Background: interrupt command latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>AQ Coord jobx_kwsbgsgn latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ Message drive state object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQ Sharded master pool latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ deq hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM Keyed state latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM allocation</td><td align="right" class='awrc'>35,695</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM connection state latch</td><td align="right" class='awrnc'>5,163</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM db client latch</td><td align="right" class='awrc'>500</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map headers</td><td align="right" class='awrnc'>574</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map load waiting list</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation freelist</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>



<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>5,459,597</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM network background latch</td><td align="right" class='awrnc'>5,812</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM network state latch</td><td align="right" class='awrc'>176</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM remote client latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Alerted Metric Element list</td><td align="right" class='awrc'>5,422</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Autotask management</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Change Notification Hash table latch</td><td align="right" class='awrc'>233</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Column stats entry latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>95,223</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>217,277</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Event Group Locks</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FIB s.o chain latch</td><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FOB consolidated s.o list latch</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>File State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCS logfile block</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCS logfile write queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hang Manager wait event statistics</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,096</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>I/O Staticstics latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM Stats main anchor latch</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM access tracking extent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM activity tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary rw latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM area sb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM area scb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM emb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM seg hdr latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMFS defer write list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMXT hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC other latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC stats buffer allocation latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>In memory undo latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS Sh mem access</td><td align="right" class='awrc'>122</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast add buf latch</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast drop buf latch</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast load blnc latch</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>



<tr><td scope="row" class='awrc'>JS queue access latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS queue state obj latch</td><td align="right" class='awrnc'>5,082</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS slv state obj latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KCNIBR - invalid block range tree</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDCStatHash latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Buffer Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Hash Bucket Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Hash Elem Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO action list latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO bll latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFC FX Hash Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFC Hash Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFCL LE Freelist</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS client latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS cluster latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS endpoint latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS process latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFK SGA Libload latch</td><td align="right" class='awrc'>4,704</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFMD SGA</td><td align="right" class='awrnc'>346</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KGNFS-NFS:SHM structure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KGNFS-NFS:SVR LIST</td><td align="right" class='awrnc'>203</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool KGH calls</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>58,950</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>160,402</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool pending avail list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJCT flow control latch</td><td align="right" class='awrnc'>1,896,139</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KMG MMAN ready and startup request latch</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS ctx level parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS req layer parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS sess layer parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS Receive and Send Queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS id table parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS ksfs_node latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFSD name cache parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSGL LS Segment latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSGL SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPC ASPC anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPC SGA allocation parent latch</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPCGSN Hash Table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPCGSN Namespace latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSK PDB IO STAT</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSRMA SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSRMF SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSWL SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSXR hang analysis phase 1 latch</td><td align="right" class='awrc'>192</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR hang analysis phase 2 latch</td><td align="right" class='awrnc'>63</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTF sga latch</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>261</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTILM latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTU in-memory txn table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTURMA ODPSCN latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTURMA SGA allocation parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KWQMN job cache list latch</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Latch for NonceHistory</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Locator state objects pool parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Lost write change tracking</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Lsod array latch</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA asr alloc latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA heap latch</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>6.12</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context latch</td><td align="right" class='awrc'>1,273</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context root latch</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>9.68</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MQL Tracking Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Memory Management Latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #3</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #4</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Subscriber</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Message cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MinActiveScn Latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Mutex</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Mutex Stats</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Nologging Standby SCN Time Map cache</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process</td><td align="right" class='awrnc'>491</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process allocation</td><td align="right" class='awrc'>1,246</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process: request allocation</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PDB Hash Table Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PDB LRU structure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL warning settings</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX hash array latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for dependency tracking</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for query hash table access</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for segments scanning</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>QMT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Real-time descriptor latch</td><td align="right" class='awrc'>7,445</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Report Request stats latch</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Report Request struct latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Request holder compeltion list latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Retry Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Retry bkt latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA IO buffer pool latch</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SGA Logging Bkt Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA Logging Log Latch</td><td align="right" class='awrc'>2,857</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA blob parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA bucket locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA heap locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA pool locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SO private so latch</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL memory manager latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL memory manager workarea list latch</td><td align="right" class='awrnc'>14,951</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SR Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sched IM Job latch</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sched InMem Job Cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Shared B-Tree</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams Generic</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Subscriber Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Testing</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Token Manager</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Txn Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Txn bkt latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>UM object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>WCR: sync</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Write State Object Pool Parent Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>X$KSFQP</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB NFS Security Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB unused session pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB used session pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>active checkpoint queue latch</td><td align="right" class='awrnc'>23,332</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>active service list</td><td align="right" class='awrc'>2,859</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>489</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>archive destination</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>begin backup scn array</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>business card</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cache buffer handles</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>16,528,313</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,127,845</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers lru chain</td><td align="right" class='awrnc'>2,395,576</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2,424,872</td><td align="right" class='awrnc'>0.29</td></tr>
<tr><td scope="row" class='awrc'>cache table scan latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>call allocation</td><td align="right" class='awrnc'>230</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>change notification client cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>channel handle pool latch</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>channel operations parent latch</td><td align="right" class='awrc'>1,298</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>1,011,724</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>339,012</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>client/application info</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>compile environment latch</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>corrupted undo seg latch</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp handoff latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp pool latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp server hash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp sga latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp srv type state latch</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp srv type wait latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cr slave free list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cvmap freelist lock</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>deferred cleanup latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dispatcher info</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dml lock allocation</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>done queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dtp latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dummy allocation</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>eighth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>eleventh spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enqueue freelist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,593</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enqueue hash chains</td><td align="right" class='awrc'>670,580</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enqueues</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>error message lists</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fast space usage latch</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fifteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>file cache latch</td><td align="right" class='awrnc'>134</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>flash file access latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>flashback copy</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fourteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fourth Audit Vault latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc element</td><td align="right" class='awrc'>9,080,447</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>938,812</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>gc xid list</td><td align="right" class='awrnc'>89</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs commit scn state</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs nodemap pool</td><td align="right" class='awrnc'>28,171</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs opaque info freelist</td><td align="right" class='awrc'>38,662</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs partitioned table hash</td><td align="right" class='awrnc'>5,541,204</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>126,667</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs pcm hashed value bucket hash</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remaster request queue</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>1,570,339</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>885,304</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>8,483,491</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,000</td><td align="right" class='awrnc'>2.70</td></tr>
<tr><td scope="row" class='awrc'>gcs resource scan list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource timerq list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource validate list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows freelist</td><td align="right" class='awrnc'>710,046</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges cached resource lists</td><td align="right" class='awrc'>74,944</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17,566</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges deadlock list</td><td align="right" class='awrnc'>220</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges domain table</td><td align="right" class='awrc'>233,317</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>219,304</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges group table</td><td align="right" class='awrc'>233,515</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>2,974</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process parent latch</td><td align="right" class='awrc'>468,798</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process table freelist</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock freelist</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>243,277</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>27.27</td></tr>
<tr><td scope="row" class='awrc'>ges resource scan list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource table freelist</td><td align="right" class='awrnc'>216</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges s-lock bitvec freelist</td><td align="right" class='awrc'>146</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges timeout list</td><td align="right" class='awrnc'>263</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges value block free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>global tx hash mapping</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>granule from data transfer cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gws:Sharding global descriptor latch</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table Sql Plan Finding latch</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table column usage latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>hash table expression usage tracking latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table sql contorl latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat check</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>291</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat structure management</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>302</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>imc buf hdl lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc cr clone buf</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc hash lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc sj lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc srchsp lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc-txn-wrk-lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory area latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory columnar segment hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory columnar ts extent map chunk latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory global pool latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>interrupt manipulation</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>intra txn parallel recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>io pool granule list</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>io pool granule metadata list</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>job workq parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>job_queue_processes parameter latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>k2q global data latch</td><td align="right" class='awrc'>404</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>k2q lock allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kKCN Cqn SGA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kcb DW scan objtemp hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kcn buffer chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kdlx hb parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kgb parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kgnfs mount latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjbr roi instance map</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci objects freelist latch</td><td align="right" class='awrnc'>1,879</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci process context latch</td><td align="right" class='awrc'>1,405</td><td align="right" class='awrc'>0.78</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,093</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjci process list latch</td><td align="right" class='awrnc'>806</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci request sequence latch</td><td align="right" class='awrc'>154</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjcipctx state object freelist latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoedcso state object freelist latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoeq omni enqueue hash bucket latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoer owner hash bucket</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjpm my inst data</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc Request obj freelist latch</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc Ring Buffer obj freelist latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc protect control request queue</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6,050</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjsc protect warm up context</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca pkey obj freelist latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsca protect pkey hash table bucket</td><td align="right" class='awrnc'>6,500</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca protect service hash table bucket</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjscpss state object freelist latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kokc descriptor allocation latch</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kpoxft latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>krso process</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksevn object root latch</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksfv messages</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksi resource reuse count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksim group membership cache</td><td align="right" class='awrc'>169</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksim membership request latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>253</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksns object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kss move lock</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksuosstats global area</td><td align="right" class='awrc'>48</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksutcpistat latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv allocation latch</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv class latch</td><td align="right" class='awrnc'>14,391</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv msg queue latch</td><td align="right" class='awrc'>215</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>214</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxp shared latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxp so latch</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksz_so allocation latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktfbn latch</td><td align="right" class='awrc'>131</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg jrnls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg lookuptable level 1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg lookuptable level 2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg space</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg stages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg worklink</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm global data</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm prv jrnls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktmpj HT ls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwqbsn:qsga</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbmdl: metadata latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbql: queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbutl: uncommitted txn latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptQcachLt: queue cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptTrncTsksLt: trunc task latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptjobAdPtLt: AdPt list latch</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsslLat: skiplist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kxfxscanrate_latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>97,577</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>list of block allocation</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>loader state object freelist</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment dispenser latch</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment hash table latch</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment query latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock DBA buffer during media recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log write info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>128,121</td><td align="right" class='awrc'>3.11</td></tr>
<tr><td scope="row" class='awrnc'>log write worker phase</td><td align="right" class='awrnc'>7,085</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logical standby cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer context allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer local</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer work area</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>longop free list parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>managed standby</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>message bitmap latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>message pool operations parent latch</td><td align="right" class='awrnc'>627</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>578,144</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>msg queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>multiblock read objects</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service memory objects</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service namespace bucket</td><td align="right" class='awrc'>3,157</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service pending queue</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service request queue</td><td align="right" class='awrc'>6,165</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ncodef allocation latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ninth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object queue header freelist</td><td align="right" class='awrnc'>1,014</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object queue header operation</td><td align="right" class='awrc'>5,150,095</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14,639</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>object queue memory</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object stats modification</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parallel query alloc buffer</td><td align="right" class='awrnc'>157</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parallel query stats</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parallel txn reco latch</td><td align="right" class='awrnc'>636</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parameter table management</td><td align="right" class='awrc'>210</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pdb enqueue hash chains</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>peshm</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pesom_free_list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pesom_hash_node</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pkey global statistics</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pmon dead latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>post/wait queue</td><td align="right" class='awrnc'>26,741</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>27,065</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>process allocation</td><td align="right" class='awrc'>3,018</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process group creation</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process memory detail</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process pkey statistics list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process queue</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process queue reference</td><td align="right" class='awrnc'>2,485</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>368</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>qmn task queue latch</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>quarantine object</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>query server freelists</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>query server process</td><td align="right" class='awrnc'>438</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>queued dump request</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>queuing load statistics</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>read-moslty lock queue under pkey</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>recovery domain hash bucket</td><td align="right" class='awrnc'>342</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>redo allocation</td><td align="right" class='awrc'>293,793</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>461,035</td><td align="right" class='awrc'>0.36</td></tr>
<tr><td scope="row" class='awrnc'>redo copy</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>461,755</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>redo transport task</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>redo writing</td><td align="right" class='awrnc'>312,087</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote tool request latch</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr group change latch</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:active threads</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:actses change group</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:actses change state</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:free threads list</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan CPU method</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan change alloc latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan change latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:resource group CPU method</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:schema config</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:session queuing</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache objects</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>rt rmv count latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>302</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>second Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>segmented array pool</td><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sequence cache</td><td align="right" class='awrc'>115</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>service drain list</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session allocation</td><td align="right" class='awrc'>108,363</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>108,294</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>session idle bit</td><td align="right" class='awrnc'>217,002</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session state list latch</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session statistics</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session switching</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session timer</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>seventh spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga hash table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shard latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shardgroup list latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>8,594</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared pool sim alloc</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool simulator</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared server configuration</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sim partition latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>simulator hash latch</td><td align="right" class='awrc'>762,413</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>simulator lru latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>511,123</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>sixth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sort extent pool</td><td align="right" class='awrnc'>232</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>space background task latch</td><td align="right" class='awrc'>1,456</td><td align="right" class='awrc'>44.37</td><td align="right" class='awrc'>0.78</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>396</td><td align="right" class='awrc'>3.03</td></tr>
<tr><td scope="row" class='awrnc'>state object free list</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>statistics aggregation</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>subscriber Ht bkt</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tablespace key chain</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>temp lob duration state obj allocation</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tenth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent l0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent2 l0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent2 lmid cln</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test mixed exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test mode exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test open exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test pdb exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test shared parent2 lmid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thirteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>threshold alerts latch</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>transaction allocation</td><td align="right" class='awrnc'>93</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twelfth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fifth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-first spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fourth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-second spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-third spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>343,230</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit buffers</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit holder</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit queues</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3600"></a>
<h3 class="awr">Latch Sleep Breakdown</h3>
<ul>
<li class="awr"> ordered by misses desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch sleep statistics. Get requests, misses, sleeps, spin gets are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Misses</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Spin Gets</th></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>2,395,576</td><td align="right" class='awrc'>3,185</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>3,093</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>9,080,447</td><td align="right" class='awrnc'>1,687</td><td align="right" class='awrnc'>137</td><td align="right" class='awrnc'>1,555</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>1,896,139</td><td align="right" class='awrc'>1,630</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1,546</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource freelist</td><td align="right" class='awrnc'>1,570,339</td><td align="right" class='awrnc'>958</td><td align="right" class='awrnc'>98</td><td align="right" class='awrnc'>867</td></tr>
<tr><td scope="row" class='awrc'>gcs resource hash</td><td align="right" class='awrc'>8,483,491</td><td align="right" class='awrc'>820</td><td align="right" class='awrc'>211</td><td align="right" class='awrc'>628</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>293,793</td><td align="right" class='awrnc'>708</td><td align="right" class='awrnc'>126</td><td align="right" class='awrnc'>588</td></tr>
<tr><td scope="row" class='awrc'>space background task latch</td><td align="right" class='awrc'>1,456</td><td align="right" class='awrc'>646</td><td align="right" class='awrc'>504</td><td align="right" class='awrc'>184</td></tr>
<tr><td scope="row" class='awrnc'>enqueue hash chains</td><td align="right" class='awrnc'>670,580</td><td align="right" class='awrnc'>573</td><td align="right" class='awrnc'>150</td><td align="right" class='awrnc'>440</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>16,528,313</td><td align="right" class='awrc'>444</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>437</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>5,150,095</td><td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>154</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>578,144</td><td align="right" class='awrc'>142</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>133</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation hash table</td><td align="right" class='awrnc'>5,459,597</td><td align="right" class='awrnc'>139</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>116</td></tr>
<tr><td scope="row" class='awrc'>ges enqueue table freelist</td><td align="right" class='awrc'>219,304</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>63</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>58,950</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>36</td></tr>
<tr><td scope="row" class='awrc'>redo writing</td><td align="right" class='awrc'>312,087</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>31</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>1,011,724</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>21</td></tr>
<tr><td scope="row" class='awrc'>ges resource hash list</td><td align="right" class='awrc'>243,277</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>7</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>217,277</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>10</td></tr>
<tr><td scope="row" class='awrc'>ges cached resource lists</td><td align="right" class='awrc'>74,944</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>9</td></tr>
<tr><td scope="row" class='awrnc'>undo global data</td><td align="right" class='awrnc'>343,230</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>7</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>95,223</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>7</td></tr>
<tr><td scope="row" class='awrnc'>ksv class latch</td><td align="right" class='awrnc'>14,391</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>7</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context root latch</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context latch</td><td align="right" class='awrnc'>1,273</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4</td></tr>
<tr><td scope="row" class='awrc'>MGA heap latch</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>log write worker phase</td><td align="right" class='awrnc'>7,085</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3700"></a>
<h3 class="awr">Latch Miss Sources</h3>
<ul>
<li class="awr"> only latches with sleeps are shown </li>
<li class="awr"> ordered by name, sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch miss sources. Place where latch was requested, no-wait misses, sleeps, waiter sleeps are displayed for each missed latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Where</th><th class="awrbg" scope="col">NoWait Misses</th><th class="awrbg" scope="col">   Sleeps</th><th class="awrbg" scope="col">Waiter Sleeps</th></tr>
<tr><td class='awrc'>ASM map operation hash table</td><td class='awrc'>kffmTranslate</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>9</td></tr>
<tr><td class='awrnc'>ASM map operation hash table</td><td class='awrnc'>kffmDoDone_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>15</td></tr>
<tr><td class='awrc'>DML lock allocation</td><td class='awrc'>ktaiam</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>KJC message pool free list</td><td class='awrnc'>kjcspfmbq: free vector of msg buffers</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctcsnd: send normal message</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>61</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sedeqv3: dequeue a vector of msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_releasetkt: change ticket allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sqenq: queue a message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>10</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_updatetkt: update ticket info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>11</td></tr>
<tr><td class='awrnc'>MGA shared context latch</td><td class='awrnc'>ksm_mga_detach_whr2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>MGA shared context root latch</td><td class='awrc'>ksm_mga_detach_whr1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: slow path excl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbzgb: scan from tail nowait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbbic2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbchg: change complete</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: convert latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbzgb_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>80</td><td align="right" class='awrc'>40</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbzgws</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>checkpoint queue latch</td><td class='awrc'>kcbklbc_cql</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclnfndnewm</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>102</td><td align="right" class='awrnc'>37</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclulb</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>43</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>KCLUNLNK</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>14</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclplz_1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclplz</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclnfnds</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>28</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclrwrite</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>7</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclrwrite_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfndx</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbralc: check freelist nowait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbralc add resource</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>80</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbrralc: reserve allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>9</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbrfr_bg2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>9</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbcropen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>105</td><td align="right" class='awrnc'>35</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclfwrite1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbopen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>13</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbassume</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>24</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbmpopen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>20</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclpdc</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>33</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbclose_remaster</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>33</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclrwrite</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjblocalobj_nolock</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpclose</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>27</td></tr>
<tr><td class='awrnc'>ges cached resource lists</td><td class='awrnc'>kjrm2c: move resource to cache</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>ges enqueue table freelist</td><td class='awrc'>kjlalc: lock allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjlmfnd: search for lockp by rename and inst id</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjrmas1: lookup master node</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjakcai: search for resp by resname</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>ksv class latch</td><td class='awrc'>ksvclsl: checkpool</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>log write worker phase</td><td class='awrnc'>kcrfw_slave_phase_enter</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksarcv</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv: after wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksaamb: after wakeup</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>7</td></tr>
<tr><td class='awrnc'>mostly latch-free SCN</td><td class='awrnc'>kcsnew_scn_rba</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_unlink_q</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>8</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_link_q</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>5</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_gen: redo allocation 1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>101</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_post: more space</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>33</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_write: before write</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>35</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>58</td></tr>
<tr><td class='awrc'>redo writing</td><td class='awrc'>kcrfw_post: rba scn pair</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_grab_task</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>345</td><td align="right" class='awrnc'>484</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_detach_task</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>113</td><td align="right" class='awrc'>20</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_smco_purgeexpired</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_smco_movetasks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsjCreateTask</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktudba: KSLBEGIN</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>undo global data</td><td class='awrnc'>ktudnx:child</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqgtl3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>59</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqcmi: if lk mode not requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcmi: if lk mode requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>12</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqrcl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>73</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>kghfre</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqcnl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7500"></a>
<h3 class="awr">Mutex Sleep Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3800"></a>
<h3 class="awr">Parent Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3900"></a>
<h3 class="awr">Child Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="30"></a>
<h2 class="awr">
Segment Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4000">Segments by Logical Reads</a></li>
<li class="awr"><a class="awr" href="#4100">Segments by Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4104">Segments by Physical Read Requests</a></li>
<li class="awr"><a class="awr" href="#4108">Segments by UnOptimized Reads</a></li>
<li class="awr"><a class="awr" href="#4106">Segments by Optimized Reads</a></li>
<li class="awr"><a class="awr" href="#4110">Segments by Direct Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4120">Segments by Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4124">Segments by Physical Write Requests</a></li>
<li class="awr"><a class="awr" href="#4130">Segments by Direct Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4140">Segments by Table Scans</a></li>
<li class="awr"><a class="awr" href="#4150">Segments by DB Blocks Changes</a></li>
<li class="awr"><a class="awr" href="#4200">Segments by Row Lock Waits</a></li>
<li class="awr"><a class="awr" href="#4300">Segments by ITL Waits</a></li>
<li class="awr"><a class="awr" href="#4400">Segments by Buffer Busy Waits</a></li>
<li class="awr"><a class="awr" href="#4450">Segments by Global Cache Buffer Busy</a></li>
<li class="awr"><a class="awr" href="#4500">Segments by CR Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4600">Segments by Current Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4605">Segments by Global Cache Remote Grants</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4000"></a>
<h3 class="awr">Segments by Logical Reads</h3>
<ul>
<li class="awr">Total Logical Reads:	   5,345,958</li>
<li class="awr">Captured Segments account for	77.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by logical reads. Owner, tablespace name, object type, logical read, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>119,216</td><td align="right" class='awrc'>2.23</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73484</td><td align="right" class='awrnc'>73484</td><td align="right" class='awrnc'>118,992</td><td align="right" class='awrnc'>2.23</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>117,888</td><td align="right" class='awrc'>2.21</td></tr>
<tr><td class='awrnc'>USER29</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73551</td><td align="right" class='awrnc'>73551</td><td align="right" class='awrnc'>116,560</td><td align="right" class='awrnc'>2.18</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>115,712</td><td align="right" class='awrc'>2.16</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4100"></a>
<h3 class="awr">Segments by Physical Reads</h3>
<ul>
<li class="awr">Total Physical Reads:	    2,070,440</li>
<li class="awr">Captured Segments account for	99.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical reads. Owner, tablespace name, object type, physical reads, etc. are displayed for each segment "><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	 Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>114,172</td><td align="right" class='awrc'>5.51</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>110,168</td><td align="right" class='awrnc'>5.32</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>109,730</td><td align="right" class='awrc'>5.30</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>109,720</td><td align="right" class='awrnc'>5.30</td></tr>
<tr><td class='awrc'>USER25</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73527</td><td align="right" class='awrc'>73522</td><td align="right" class='awrc'>109,655</td><td align="right" class='awrc'>5.30</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4104"></a>
<h3 class="awr">Segments by Physical Read Requests</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    2,070,369</li>
<li class="awr">Captured Segments account for	99.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical read requests. Owner, tablespace name, object type, physical read requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Read Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>114,172</td><td align="right" class='awrc'>5.51</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>110,168</td><td align="right" class='awrnc'>5.32</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>109,730</td><td align="right" class='awrc'>5.30</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>109,720</td><td align="right" class='awrnc'>5.30</td></tr>
<tr><td class='awrc'>USER25</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73527</td><td align="right" class='awrc'>73522</td><td align="right" class='awrc'>109,655</td><td align="right" class='awrc'>5.30</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4108"></a>
<h3 class="awr">Segments by UnOptimized Reads</h3>
<ul>
<li class="awr">Total UnOptimized Read Requests:       2,070,369</li>
<li class="awr">Captured Segments account for	99.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by unoptimized reads. Owner, tablespace name, object type, unoptimized reads, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">UnOptimized Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>114,172</td><td align="right" class='awrc'>5.51</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>110,168</td><td align="right" class='awrnc'>5.32</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>109,730</td><td align="right" class='awrc'>5.30</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>109,720</td><td align="right" class='awrnc'>5.30</td></tr>
<tr><td class='awrc'>USER25</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73527</td><td align="right" class='awrc'>73522</td><td align="right" class='awrc'>109,655</td><td align="right" class='awrc'>5.30</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4106"></a>
<h3 class="awr">Segments by Optimized Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4110"></a>
<h3 class="awr">Segments by Direct Physical Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4120"></a>
<h3 class="awr">Segments by Physical Writes</h3>
<ul>
<li class="awr">Total Physical Writes:	       300,804</li>
<li class="awr">Captured Segments account for	96.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical writes. Owner, tablespace name, object type, physical writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>17,692</td><td align="right" class='awrc'>5.88</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>15,422</td><td align="right" class='awrnc'>5.13</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>15,417</td><td align="right" class='awrc'>5.13</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>15,364</td><td align="right" class='awrnc'>5.11</td></tr>
<tr><td class='awrc'>USER10</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73453</td><td align="right" class='awrc'>73455</td><td align="right" class='awrc'>15,360</td><td align="right" class='awrc'>5.11</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4124"></a>
<h3 class="awr">Segments by Physical Write Requests</h3>
<ul>
<li class="awr">Total Physical Write Requests:	       289,518</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical write requests. Owner, tablespace name, object type, physical write requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Write Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>17,666</td><td align="right" class='awrc'>6.10</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>15,335</td><td align="right" class='awrnc'>5.30</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>15,329</td><td align="right" class='awrc'>5.29</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>15,280</td><td align="right" class='awrnc'>5.28</td></tr>
<tr><td class='awrc'>USER10</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73453</td><td align="right" class='awrc'>73455</td><td align="right" class='awrc'>15,279</td><td align="right" class='awrc'>5.28</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4130"></a>
<h3 class="awr">Segments by Direct Physical Writes</h3>
<ul>
<li class="awr">Total Direct Physical Writes:		  163</li>
<li class="awr">Captured Segments account for	41.1% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by direct physical writes. Owner, tablespace name, object type, direct writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Direct Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_131</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>38.04</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000007451C00009$$</td><td class='awrnc'>SYS_LOB_P312</td><td class='awrnc'>LOB PARTITION</td><td align="right" class='awrnc'>74332</td><td align="right" class='awrnc'>74332</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>3.07</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4140"></a>
<h3 class="awr">Segments by Table Scans</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4150"></a>
<h3 class="awr">Segments by DB Blocks Changes</h3>
<ul>
<li class="awr"> % of Capture shows % of DB Block Changes for each top segment compared  </li>
<li class="awr"> with total DB Block Changes for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by DB blocks changes. Owner, tablespace name, object type, db block changes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">DB Block Changes</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>17,968</td><td align="right" class='awrc'>5.50</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>17,296</td><td align="right" class='awrnc'>5.30</td></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>17,232</td><td align="right" class='awrc'>5.28</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>17,200</td><td align="right" class='awrnc'>5.27</td></tr>
<tr><td class='awrc'>USER13</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>17,184</td><td align="right" class='awrc'>5.26</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4200"></a>
<h3 class="awr">Segments by Row Lock Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4300"></a>
<h3 class="awr">Segments by ITL Waits</h3>
<ul>
<li class="awr"> % of Capture shows % of ITL waits for each top segment compared  </li>
<li class="awr"> with total ITL waits for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by ITL waits. Owner, tablespace name, object type, ITL waits, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">ITL Waits</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74109</td><td align="right" class='awrc'>74109</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4400"></a>
<h3 class="awr">Segments by Buffer Busy Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4450"></a>
<h3 class="awr">Segments by Global Cache Buffer Busy</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4500"></a>
<h3 class="awr">Segments by CR Blocks Received</h3>
<ul>
<li class="awr">Total CR Blocks Received:	    5,162</li>
<li class="awr">Captured Segments account for	98.3% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by CR blocks received. Owner, tablespace name, object type, CR blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">CR    Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER8</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>1,038</td><td align="right" class='awrc'>20.11</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>532</td><td align="right" class='awrnc'>10.31</td></tr>
<tr><td class='awrc'>USER13</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>464</td><td align="right" class='awrc'>8.99</td></tr>
<tr><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>363</td><td align="right" class='awrnc'>7.03</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>346</td><td align="right" class='awrc'>6.70</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4600"></a>
<h3 class="awr">Segments by Current Blocks Received</h3>
<ul>
<li class="awr">Total Current Blocks Received:		16,228</li>
<li class="awr">Captured Segments account for	99.1% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by current blocks received. Owner, tablespace name, object type, Current blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Current Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER8</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>2,790</td><td align="right" class='awrc'>17.19</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>1,776</td><td align="right" class='awrnc'>10.94</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>1,425</td><td align="right" class='awrc'>8.78</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>1,421</td><td align="right" class='awrnc'>8.76</td></tr>
<tr><td class='awrc'>USER20</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>1,065</td><td align="right" class='awrc'>6.56</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4605"></a>
<h3 class="awr">Segments by Global Cache Remote Grants</h3>
<ul>
<li class="awr">Total Global Cache Remote Grants:	1,101,131</li>
<li class="awr">Captured Segments account for	99.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by gc remote grants. Owner, tablespace name, object type, gc remote grants, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Remote Grants</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER8</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>100,769</td><td align="right" class='awrc'>9.15</td></tr>
<tr><td class='awrnc'>USER9</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73439</td><td align="right" class='awrnc'>73445</td><td align="right" class='awrnc'>100,764</td><td align="right" class='awrnc'>9.15</td></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>55,268</td><td align="right" class='awrc'>5.02</td></tr>
<tr><td class='awrnc'>USER22</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73514</td><td align="right" class='awrnc'>73510</td><td align="right" class='awrnc'>55,208</td><td align="right" class='awrnc'>5.01</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>55,186</td><td align="right" class='awrc'>5.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="31"></a>
<h2 class="awr">
Dictionary Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4700">Dictionary Cache Stats</a></li>
<li class="awr"><a class="awr" href="#4800">Dictionary Cache Stats (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4700"></a>
<h3 class="awr">Dictionary Cache Stats</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low (&lt; 2% in most cases) </li>
<li class="awr"> &quot;Final Usage&quot; is the number of cache entries being used</li>
</ul>
<table border="0" class="tdiff" summary="This table displays dictionary cache statistics. Get requests, % misses, scan requests, final usage, etc. are displayed for each cache"><tr><th class="awrbg" scope="col">Cache</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Scan Reqs</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Mod Reqs</th><th class="awrbg" scope="col">Final Usage</th></tr>
<tr><td scope="row" class='awrc'>dc_awr_control</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>23.53</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_global_oids</td><td align="right" class='awrnc'>1,099</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>152</td></tr>
<tr><td scope="row" class='awrc'>dc_histogram_data</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3,227</td></tr>
<tr><td scope="row" class='awrnc'>dc_histogram_defs</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3,449</td></tr>
<tr><td scope="row" class='awrc'>dc_objects</td><td align="right" class='awrc'>1,650</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,969</td></tr>
<tr><td scope="row" class='awrnc'>dc_props</td><td align="right" class='awrnc'>494</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td></tr>
<tr><td scope="row" class='awrc'>dc_rollback_segments</td><td align="right" class='awrc'>958</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>320</td></tr>
<tr><td scope="row" class='awrnc'>dc_segments</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>6.67</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>565</td></tr>
<tr><td scope="row" class='awrc'>dc_sequences</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>25.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>4</td></tr>
<tr><td scope="row" class='awrnc'>dc_tablespaces</td><td align="right" class='awrnc'>143</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td></tr>
<tr><td scope="row" class='awrc'>dc_users</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>186</td></tr>
<tr><td scope="row" class='awrnc'>outstanding_alerts</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4800"></a>
<h3 class="awr">Dictionary Cache Stats (RAC)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="32"></a>
<h2 class="awr">
Library Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4900">Library Cache Activity</a></li>
<li class="awr"><a class="awr" href="#5000">Library Cache Activity (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4900"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Get requests, % misses, pin request, % miss, reloads, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>228</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>EDITION</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA</td><td align="right" class='awrnc'>427</td><td align="right" class='awrnc'>1.41</td><td align="right" class='awrnc'>722,907</td><td align="right" class='awrnc'>-0.06</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA BUILD</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA STATS</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>75.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>75.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1,606</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5000"></a>
<h3 class="awr">Library Cache Activity (RAC)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Ges lock requests, GES pin requests, GES pin releases, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>EDITION</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>199</td><td align="right" class='awrc'>1,427</td><td align="right" class='awrc'>1,427</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="33"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8500">Memory Dynamic Components</a></li>
<li class="awr"><a class="awr" href="#8600">Memory Resize Operations Summary</a></li>
<li class="awr"><a class="awr" href="#8650">Memory Resize Ops</a></li>
<li class="awr"><a class="awr" href="#7300">Process Memory Summary</a></li>
<li class="awr"><a class="awr" href="#5900">SGA Memory Summary</a></li>
<li class="awr"><a class="awr" href="#6100">SGA breakdown difference by Pool and Name</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8500"></a>
<h3 class="awr">Memory Dynamic Components</h3>
<ul>
<li class="awr"> Min/Max sizes since instance startup </li>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory dynamic component statistics. Begin snap size, current size, min size, etc. are displayed for each component"><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Begin Snap Size (Mb)</th><th class="awrbg" scope="col">Current Size (Mb)</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Oper Count</th><th class="awrbg" scope="col">Last Op Typ/Mod</th></tr>
<tr><td scope="row" class='awrc'>ASM Buffer Cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 16K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 2K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 32K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 4K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 8K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>0</td><td class='awrc'>INI/</td></tr>
<tr><td scope="row" class='awrnc'>Data Transfer Cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In Memory RO Extension Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>In Memory RW Extension Area</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In-Memory Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>KEEP buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>PGA Target</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>RECYCLE buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>SGA Target</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>Shared IO Pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>java pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>large pool</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>memoptimize buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>streams pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>unified pga pool</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8600"></a>
<h3 class="awr">Memory Resize Operations Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8650"></a>
<h3 class="awr">Memory Resize Ops</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7300"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap  </li>
<li class="awr"> All rows below contain absolute values (i.e. not diffed over the interval) </li>
<li class="awr"> Max Alloc is Maximum PGA Allocation size at snapshot time  </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by Begin/End snapshot, Alloc (MB) desc </li>
<li class="awr"> Top 10 containers by Alloc (MB) at end snapshot time are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays process memory summary. Allocation, used, average allocation, etc. are displayed for different category of process memory."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>143.94</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.23</td><td align="right" class='awrc'>7.14</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>34</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>680.05</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.31</td><td align="right" class='awrnc'>8.74</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>128</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>18.57</td><td align="right" class='awrc'>16.79</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>109</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>16.13</td><td align="right" class='awrnc'>14.72</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>53</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>858.68</td><td align="right" class='awrc'>31.52</td><td align="right" class='awrc'>9.98</td><td align="right" class='awrc'>16.66</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>333</td><td align="right" class='awrc'>324</td></tr>
<tr><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>140.38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.01</td><td align="right" class='awrnc'>7.53</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>603.54</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>9.49</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>110</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>9.60</td><td align="right" class='awrnc'>7.93</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>91</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>9.86</td><td align="right" class='awrc'>8.75</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>34</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>763.37</td><td align="right" class='awrnc'>16.68</td><td align="right" class='awrnc'>10.84</td><td align="right" class='awrnc'>17.75</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>272</td><td align="right" class='awrnc'>263</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5900"></a>
<h3 class="awr">SGA Memory Summary</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA memory summary. For each SGA region, begin size and end size is displayed."><tr><th class="awrbg" scope="col">SGA regions</th><th class="awrbg" scope="col">Begin Size (Bytes)</th><th class="awrbg" scope="col">End Size (Bytes) (if different)</th></tr>
<tr><td scope="row" class='awrc'>Database Buffers</td><td align="right" class='awrc'>8,522,825,728</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Fixed Size</td><td align="right" class='awrnc'>12,445,928</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Redo Buffers</td><td align="right" class='awrc'>21,106,688</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Variable Size</td><td align="right" class='awrnc'>1,577,058,304</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6100"></a>
<h3 class="awr">SGA breakdown difference by Pool and Name</h3>
<ul>
<li class="awr"> ordered by Pool, Name	</li>
<li class="awr"> N/A value for Begin MB or End MB indicates the size of that Pool/Name was    insignificant, or zero in that snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA breakdown difference. For each pool name, begin and end size are displayed."><tr><th class="awrbg" scope="col">Pool</th><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Begin MB</th><th class="awrbg" scope="col">End MB</th><th class="awrbg" scope="col">% Diff</th></tr>
<tr><td class='awrc'>large</td><td class='awrc'>PX msg pool</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>large</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ASH buffers</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KGLH0</td><td align="right" class='awrnc'>44.41</td><td align="right" class='awrnc'>44.40</td><td align="right" class='awrnc'>-0.03</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>KJSC rnb slots</td><td align="right" class='awrc'>22.58</td><td align="right" class='awrc'>14.55</td><td align="right" class='awrc'>-35.57</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>SO private sga</td><td align="right" class='awrnc'>28.74</td><td align="right" class='awrnc'>28.74</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>SQLA</td><td align="right" class='awrc'>267.81</td><td align="right" class='awrc'>267.99</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>db_block_hash_buckets</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>free memory</td><td align="right" class='awrc'>101.21</td><td align="right" class='awrc'>111.59</td><td align="right" class='awrc'>10.26</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gc name table</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs resources</td><td align="right" class='awrc'>271.02</td><td align="right" class='awrc'>271.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs resv res hash bucket</td><td align="right" class='awrnc'>48.00</td><td align="right" class='awrnc'>48.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs shadows</td><td align="right" class='awrc'>147.83</td><td align="right" class='awrc'>147.83</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>ges big msg buffers</td><td align="right" class='awrnc'>26.29</td><td align="right" class='awrnc'>26.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ksunfy_meta 1</td><td align="right" class='awrc'>25.03</td><td align="right" class='awrc'>25.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>row cache</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>buffer_cache</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>fixed_sga</td><td align="right" class='awrnc'>11.87</td><td align="right" class='awrnc'>11.87</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>log_buffer</td><td align="right" class='awrc'>20.13</td><td align="right" class='awrc'>20.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>shared_io_pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="39"></a>
<h2 class="awr">
Replication Statistics (GoldenGate, XStream)
</h2>
<ul>
<li class="awr"><a class="awr" href="#9000">Replication System Resource Usage</a></li>
<li class="awr"><a class="awr" href="#9010">Replication SGA Usage</a></li>
<li class="awr"><a class="awr" href="#9020">GoldenGate Capture</a></li>
<li class="awr"><a class="awr" href="#9030">GoldenGate Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9040">GoldenGate Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9041">GoldenGate Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9042">GoldenGate Apply Server</a></li>
<li class="awr"><a class="awr" href="#9051">GoldenGate Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9050">GoldenGate Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9060">XStream Capture</a></li>
<li class="awr"><a class="awr" href="#9070">XStream Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9080">XStream Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9081">XStream Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9082">XStream Apply Server</a></li>
<li class="awr"><a class="awr" href="#9091">XStream Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9090">XStream Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9100">Table Statistics by DML Operations</a></li>
<li class="awr"><a class="awr" href="#9110">Table Statistics by Conflict Resolutions</a></li>
<li class="awr"><a class="awr" href="#9120">Replication Large Transaction Statistics</a></li>
<li class="awr"><a class="awr" href="#9130">Replication Long Running Transaction Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9000"></a>
<h3 class="awr">Replication System Resource Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9010"></a>
<h3 class="awr">Replication SGA Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9020"></a>
<h3 class="awr">GoldenGate Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9030"></a>
<h3 class="awr">GoldenGate Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9040"></a>
<h3 class="awr">GoldenGate Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9041"></a>
<h3 class="awr">GoldenGate Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9042"></a>
<h3 class="awr">GoldenGate Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9051"></a>
<h3 class="awr">GoldenGate Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9050"></a>
<h3 class="awr">GoldenGate Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9060"></a>
<h3 class="awr">XStream Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9070"></a>
<h3 class="awr">XStream Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9080"></a>
<h3 class="awr">XStream Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9081"></a>
<h3 class="awr">XStream Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9082"></a>
<h3 class="awr">XStream Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9091"></a>
<h3 class="awr">XStream Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9090"></a>
<h3 class="awr">XStream Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9100"></a>
<h3 class="awr">Table Statistics by DML Operations</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9110"></a>
<h3 class="awr">Table Statistics by Conflict Resolutions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9120"></a>
<h3 class="awr">Replication Large Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9130"></a>
<h3 class="awr">Replication Long Running Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="34"></a>
<h2 class="awr">
Advanced Queuing
</h2>
<ul>
<li class="awr"><a class="awr" href="#6150">Advanced Queue CPU/IO Usage</a></li>
<li class="awr"><a class="awr" href="#6400">Buffered Queues</a></li>
<li class="awr"><a class="awr" href="#6500">Buffered Queue Subscribers</a></li>
<li class="awr"><a class="awr" href="#6600">Rule Set</a></li>
<li class="awr"><a class="awr" href="#7600">Persistent Queues</a></li>
<li class="awr"><a class="awr" href="#7610">Persistent Queues Rate</a></li>
<li class="awr"><a class="awr" href="#7700">Persistent Queue Subscribers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6150"></a>
<h3 class="awr">Advanced Queue CPU/IO Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6400"></a>
<h3 class="awr">Buffered Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6500"></a>
<h3 class="awr">Buffered Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6600"></a>
<h3 class="awr">Rule Set</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7600"></a>
<h3 class="awr">Persistent Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7610"></a>
<h3 class="awr">Persistent Queues Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7700"></a>
<h3 class="awr">Persistent Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="6700"></a>
<h3 class="awr">Resource Limit Stats</h3>
<ul>
<li class="awr"> Only rows with Current or Maximum Utilization &gt; 80% of Limit are shown  </li>
<li class="awr"> For &quot;UNLIMITED&quot; resources, rows whose Current or Maximum Utilization    exceeds 2*Initial Allocation are shown </li>
<li class="awr"> Ordered by Resource Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays resource limit statistics. Current utilization, maximum utilization, initial allocation and limit are displayed for each resource name"><tr><th class="awrbg" scope="col">Resource Name</th><th class="awrbg" scope="col">Current	 Utilization</th><th class="awrbg" scope="col">Maximum	 Utilization</th><th class="awrbg" scope="col">  Initial Allocation</th><th class="awrbg" scope="col">	Limit</th></tr>
<tr><td scope="row" class='awrc'>ges_cache_ress</td><td align="right" class='awrc'>3,116</td><td align="right" class='awrc'>3,531</td><td class='awrc'>0</td><td class='awrc'>UNLIMITED</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="37"></a>
<h2 class="awr">
Shared Server Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8710">Shared Servers Activity</a></li>
<li class="awr"><a class="awr" href="#8720">Shared Servers Rates</a></li>
<li class="awr"><a class="awr" href="#8730">Shared Servers Utilization</a></li>
<li class="awr"><a class="awr" href="#8740">Shared Servers Common Queue</a></li>
<li class="awr"><a class="awr" href="#8750">Shared Servers Dispatchers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8710"></a>
<h3 class="awr">Shared Servers Activity</h3>
<ul>
<li class="awr"> Values represent averages for all samples</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers activity statistics. It displays average total connections, average active connections, average total shared servers, etc."><tr><th class="awrbg" scope="col">Avg Total Connections</th><th class="awrbg" scope="col">Avg Active Connections</th><th class="awrbg" scope="col">Avg Total Shared Srvrs</th><th class="awrbg" scope="col">Avg Active Shared Srvrs</th><th class="awrbg" scope="col">Avg Total Dispatchers</th><th class="awrbg" scope="col">Avg Active Dispatchers</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8720"></a>
<h3 class="awr">Shared Servers Rates</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers rate statistics. It displays common queue per second, disp queue per second, server messages per second, common queue total, etc."><tr><th class="awrbg" scope="col">Common Queue Per Sec</th><th class="awrbg" scope="col">Disp Queue Per Sec</th><th class="awrbg" scope="col">Server Msgs/Sec</th><th class="awrbg" scope="col">Server KB/Sec</th><th class="awrbg" scope="col">Common Queue Total</th><th class="awrbg" scope="col">Disp Queue Total</th><th class="awrbg" scope="col">Server Total Msgs</th><th class="awrbg" scope="col">Server Total(KB)</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8730"></a>
<h3 class="awr">Shared Servers Utilization</h3>
<ul>
<li class="awr"> Statistics are combined for all servers </li>
<li class="awr"> Incoming and Outgoing Net % are included in %Busy</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers utilization statistics. It displays total server time second, % busy, % idle, incoming net %, outgoing net %, etc."><tr><th class="awrbg" scope="col">Total Server Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Incoming Net %</th><th class="awrbg" scope="col">Outgoing Net %</th></tr>
<tr><td align="right" class='awrc'>605</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8740"></a>
<h3 class="awr">Shared Servers Common Queue</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8750"></a>
<h3 class="awr">Shared Servers Dispatchers</h3>
<ul>
<li class="awr"> Ordered by %Busy, descending </li>
<li class="awr"> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue </li>
<li class="awr"> Name suffixes:       &quot;(N)&quot; - dispatcher started between begin and end snapshots	&quot;(R)&quot; - dispatcher re-started between begin and end snapshots</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers dispatcher statistics. Average connections, total dispatch time, % busy, % idle, total queued, total queued wait, etc. are displayed for each dispatcher"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Avg Conns</th><th class="awrbg" scope="col">Total Disp Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Total Queued</th><th class="awrbg" scope="col">Total Queue Wait (s)</th><th class="awrbg" scope="col">Avg Queue Wait (ms)</th></tr>
<tr><td scope="row" class='awrc'>D000</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="36"></a>
<h2 class="awr">
Initialization Parameters
</h2>
<ul>
<li class="awr"><a class="awr" href="#6800">Modified Parameters</a></li>
<li class="awr"><a class="awr" href="#6850">Modified Multi-Valued Parameters</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6800"></a>
<h3 class="awr">Modified Parameters</h3>
<ul>
<li class="awr"> This section shows all the modified initialization parameters that  were in effect during the entire snapshot interval </li>
<li class="awr"> End Value is displayed only if the parameter value was modified within the snapshot interval</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of the modified initialization parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>TRUE</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>DB</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>TRUE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>19.0.0</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>8192</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>+DATA</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>example.com</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>p30db</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>+FRA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>274877906944</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>listener_networks</td><td class='awrnc'>&#160;&#160;</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>local_listener</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>AMERICAN</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>AMERICA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>300</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>3371171840</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>640</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>10133438464</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_tablespace</td><td class='awrc'>UNDOTBS1</td><td class='awrc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6850"></a>
<h3 class="awr">Modified Multi-Valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more than one value </li>
<li class="awr">'(NULL)' indicates a missing parameter value </li>
<li class="awr"> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot'</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of multi-valued parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>control_files</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="42"></a>
<h2 class="awr">
Active Session History (ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9990">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9989">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9993">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9992">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9991">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9988">Top Events</a></li>
<li class="awr"><a class="awr" href="#9994">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9987">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9986">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9990"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>927</td><td align="right" class='awrc'>76.50</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>69.74</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>69.74</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">927</div></td><td align="right" class='awrnc'><div class="hidden">76.50453421269579554822753503709810387469</div></td>
<td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>4.04</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>4.04</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">927</div></td><td align="right" class='awrc'><div class="hidden">76.50453421269579554822753503709810387469</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.64</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.90</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>162</td><td align="right" class='awrnc'>13.44</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>11.54</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>11.54</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9989"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>927</td><td align="right" class='awrc'>76.50</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>75.76</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>69.74</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>162</td><td align="right" class='awrnc'>13.44</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>13.19</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>11.54</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9993"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>21, 3407</td><td align="right" class='awrc'>4.78</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.53</td>
<td class='awrc'>USER2</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>55/60 [ 91%]</td><td align="right" class='awrc'>4</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,47220</td><td align="right" class='awrnc'>4.78</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.29</td>
<td class='awrnc'>USER26</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>52/60 [ 86%]</td><td align="right" class='awrnc'>6</td></tr>
<tr><td align="right" scope="row" class='awrc'>144,54909</td><td align="right" class='awrc'>4.78</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>3.96</td>
<td class='awrc'>USER8</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>48/60 [ 79%]</td><td align="right" class='awrc'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>145, 3457</td><td align="right" class='awrnc'>4.78</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>3.63</td>
<td class='awrnc'>USER29</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>44/60 [ 73%]</td><td align="right" class='awrnc'>3</td></tr>
<tr><td align="right" scope="row" class='awrc'>269,20925</td><td align="right" class='awrc'>4.78</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.37</td>
<td class='awrc'>USER10</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>53/60 [ 88%]</td><td align="right" class='awrc'>2</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9992"></a>
<h3 class="awr">Top Blocking Sessions</h3>
<ul>
<li class="awr"> Blocking session activity percentages are calculated with respect to	     waits on enqueues, latches and &quot;buffer busy&quot; only  </li>
<li class="awr"> '% Activity' represents the load on the database caused by	   a particular blocking session </li>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the	blocking session was found active. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the blocking session was found active.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top sessions that are blocking other sessions."><tr><th class="awrbg" scope="col">Blocking Sid (Inst)</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event Caused</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>620,32310(     1)</td><td align="right" class='awrc'>1.15</td><td class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>0.99</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (LG00)</td><td align="right" class='awrc'>41/60 [ 68%]</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9991"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>13.85</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>13.85</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9988"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>81.29</td><td align="right" class='awrc'>16.32</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td class='awrnc'>System I/O</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>5.44</td><td align="right" class='awrnc'>1.09</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>4.29</td><td align="right" class='awrc'>0.86</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td class='awrnc'>Cluster</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>4.04</td><td align="right" class='awrnc'>0.81</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>1.98</td><td align="right" class='awrc'>0.40</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9994"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>81.29</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24977969&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.08</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>5.44</td><td align="right" class='awrnc'>&quot;2&quot;,&quot;12&quot;,&quot;2&quot;</td><td align="right" class='awrnc'>1.48</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9987"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73458</td><td align="right" class='awrc'>4.78</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.53</td>
<td class='awrc'>USER13.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73486</td><td align="right" class='awrnc'>4.78</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.45</td>
<td class='awrnc'>USER17.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73481</td><td align="right" class='awrc'>4.70</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.53</td>
<td class='awrc'>USER16.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73514</td><td align="right" class='awrnc'>4.70</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.20</td>
<td class='awrnc'>USER22.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73527</td><td align="right" class='awrc'>4.70</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.20</td>
<td class='awrc'>USER25.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9986"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>11:21:15   (3.8 min)</td><td align="right" class='awrc'>501</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>405</td><td align="right" class='awrc'>33.39</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">11:21:15   (3.8 min)</div></td><td align="right" class='awrnc'><div class="hidden">501</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>2.97</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">11:21:15   (3.8 min)</div></td><td align="right" class='awrc'><div class="hidden">501</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>2.23</td></tr>
<tr><td align="right" class='awrnc'>11:25:00   (5.0 min)</td><td align="right" class='awrnc'>625</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>518</td><td align="right" class='awrnc'>42.70</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">11:25:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">625</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>2.72</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">11:25:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">625</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>2.56</td></tr>
<tr><td align="right" class='awrc'>11:30:00   (1.3 min)</td><td align="right" class='awrc'>87</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>63</td><td align="right" class='awrc'>5.19</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">11:30:00   (1.3 min)</div></td><td align="right" class='awrnc'><div class="hidden">87</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.74</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">11:30:00   (1.3 min)</div></td><td align="right" class='awrc'><div class="hidden">87</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99995"></a>
<h2>ADDM Task ADDM:3393773525_1_142</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_1_142&apos;
	  --------------------------------------------

Analysis Period
---------------
AWR snapshot range from 141 to 142.
Time period starts at 10-FEB-20 11.21.15 AM
Time period ends at 10-FEB-20 11.31.20 AM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 10826 seconds.
The average number of active sessions was 17.89.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     17.72 | 99 	  2
2  &quot;User I/O&quot; wait Class		       15.91 | 88.94	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.64 | 25.93	      5
4  Global Cache Messaging		     1.01 | 5.65	  1
5  Undersized SGA			     .64 | 3.59 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 17.74 active sessions, 99% of total activity.
-------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 15.07 active sessions, 84.21% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 610478 times and
      had an average elapsed time of 0.014 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 2.65 active sessions, 14.79% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 107698 times and
      had an average elapsed time of 0.015 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 15.94 active sessions, 88.94% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.65 active sessions, 25.93% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER13.CF1&quot; with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 108781
      physical reads, 15364 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER17.CF1&quot; with
      object ID 73486.
      Related Object
	 Database object with ID 73486.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109233
      physical reads, 15127 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER16.CF1&quot; with
      object ID 73481.
      Related Object
	 Database object with ID 73481.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114172
      physical reads, 17692 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER22.CF1&quot; with
      object ID 73514.
      Related Object
	 Database object with ID 73514.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109399
      physical reads, 15155 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER25.CF1&quot; with
      object ID 73527.
      Related Object
	 Database object with ID 73527.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 93% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109655
      physical reads, 15187 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 15.91 active sessions, 88.94% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.01 active sessions, 5.65% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is 1.01 active sessions, 5.65% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 80% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.05 active sessions, 5.85% of total activity.


Finding 5: Undersized SGA
Impact is .64 active sessions, 3.59% of total activity.
-------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter &quot;sga_target&quot; was &quot;9664 M&quot; during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .11 active sessions, .64% of total activity.
   -----------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter &quot;sga_target&quot; to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 15.91 active sessions, 88.94% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="9997"></a>
<a class="awr" name="9997"></a><h3 class="awr">RAC Statistics</h3>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about RAC instances">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Number of Instances:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>	 2</td></tr>
<tr><td scope="row" class='awrc'>Number of LMS's:</td><td align="right" class='awrc'>	 2</td><td align="right" class='awrc'>	  2</td></tr>
<tr><td scope="row" class='awrnc'>Number of realtime LMS's:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>    2</td><td class='awrnc'> (0 priority changes)</td></tr>
</table><p />
Global Cache Load Profile
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about global cache load
		     profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks received:</td><td align="right" class='awrnc'>		    35.39</td><td align="right" class='awrnc'>		       0.20</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks served:</td><td align="right" class='awrc'>		26.39</td><td align="right" class='awrc'>		  0.15</td></tr>
<tr><td scope="row" class='awrnc'>GCS/GES messages received:</td><td align="right" class='awrnc'>	      4,456.19</td><td align="right" class='awrnc'>		   24.91</td></tr>
<tr><td scope="row" class='awrc'>GCS/GES messages sent:</td><td align="right" class='awrc'>		5,369.28</td><td align="right" class='awrc'>		    30.01</td></tr>
<tr><td scope="row" class='awrnc'>DBWR Fusion writes:</td><td align="right" class='awrnc'>		   0.16</td><td align="right" class='awrnc'>		     0.00</td></tr>
<tr><td scope="row" class='awrc'>Estd Interconnect traffic (KB)</td><td align="right" class='awrc'>		2,413.28</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
Global Cache Efficiency Percentages (Target local+remote 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays global cache efficiency percentages">
<tr><td scope="row" class='awrnc'>Buffer access -  local cache %:</td><td align="right" class='awrnc'>	60.87</td></tr>
<tr><td scope="row" class='awrc'>Buffer access - remote cache %:</td><td align="right" class='awrc'>   0.40</td></tr>
<tr><td scope="row" class='awrnc'>Buffer access -	  disk %:</td><td align="right" class='awrnc'>	38.73</td></tr>
<tr><td scope="row" class='awrc'>Global Cache Locality	      %:</td><td align="right" class='awrc'>  47.34</td></tr>
</table><p />
Global Cache and Enqueue Services - Workload Characteristics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays workload characteristics for global
		    cache and enqueue services">
<tr><td scope="row" class='awrnc'>Avg global cache cr block receive time (us):</td><td align="right" class='awrnc'>	    1,185.6</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache current block receive time (us):</td><td align="right" class='awrc'>		 679.1</td></tr>
<tr><td scope="row" class='awrnc'>Avg LMS process busy %:</td><td align="right" class='awrnc'>		  10.3</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block build time (us):</td><td align="right" class='awrc'> 	  575.2</td></tr>
<tr><td scope="row" class='awrnc'>Global cache log flushes for cr blocks served %:</td><td align="right" class='awrnc'> 	    0.6</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block flush time (us):</td><td align="right" class='awrc'> 	7,812.5</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block pin time (us):</td><td align="right" class='awrnc'>	    10,000.0</td></tr>
<tr><td scope="row" class='awrc'>Global cache log flushes for current blocks served %:</td><td align="right" class='awrc'>	       0.3</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block flush time (us):</td><td align="right" class='awrnc'>	       3,714.3</td></tr>
<tr><td scope="row" class='awrc'>Avg global enqueue get time (us):</td><td align="right" class='awrc'>		  41.8</td></tr>
</table><p />
Global Cache and Enqueue Services - Messaging Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays messaging statistics for Global Cache
		    and Enqueue Services">
<tr><td scope="row" class='awrnc'>Avg message sent queue time (us):</td><td align="right" class='awrnc'>	 1,118.1</td></tr>
<tr><td scope="row" class='awrc'>Avg message sent queue time on ksxp (us):</td><td align="right" class='awrc'>		 951.6</td></tr>
<tr><td scope="row" class='awrnc'>Avg message received kernel queue time (us):</td><td align="right" class='awrnc'>	       26.9</td></tr>
<tr><td scope="row" class='awrc'>Avg message received queue time (us):</td><td align="right" class='awrc'>	      11.1</td></tr>
<tr><td scope="row" class='awrnc'>Avg GCS message process time (us):</td><td align="right" class='awrnc'>	     41.6</td></tr>
<tr><td scope="row" class='awrc'>Avg GES message process time (us):</td><td align="right" class='awrc'> 	   34.1</td></tr>
<tr><td scope="row" class='awrnc'>% of direct sent messages:</td><td align="right" class='awrnc'>   45.49</td></tr>
<tr><td scope="row" class='awrc'>% of indirect sent messages:</td><td align="right" class='awrc'>   54.35</td></tr>
<tr><td scope="row" class='awrnc'>% of flow controlled messages:</td><td align="right" class='awrnc'>	 0.17</td></tr>
</table><p />
<hr />
<p />Cluster Interconnect<p />
<ul>
<li class="awr"> if Public/Source at End snap is different a '*' is displayed</li>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect. . if Public/Source at End snap is different a '*' is displayed"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 2" id="End">End</th>
</tr><tr>
<th class="awrbg" scope="col">Interface</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Src">Src</th></tr>
<tr><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End Pub" class='awrclb'>&#160;</td><td headers="End Src" class='awrcrb'>&#160;</td></tr>
</table><p />
<a class="awr" name="top"></a>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5100"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global messaging statistics. Total, per second, per transaction values are displayed for each statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>Cluster reconfiguration count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Domain reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>6,443</td><td align="right" class='awrnc'>10.66</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA local message waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA local messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA messages received actual</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA messages received logical</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA requests failed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA requests succeeded</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Pseudo reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Pseudo rm reconfig count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>32,773</td><td align="right" class='awrnc'>54.22</td><td align="right" class='awrnc'>0.30</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>58,527</td><td align="right" class='awrc'>96.83</td><td align="right" class='awrc'>0.54</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>67,013</td><td align="right" class='awrnc'>110.87</td><td align="right" class='awrnc'>0.62</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>95,058</td><td align="right" class='awrc'>157.28</td><td align="right" class='awrc'>0.88</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>33,894</td><td align="right" class='awrnc'>56.08</td><td align="right" class='awrnc'>0.31</td></tr>
<tr><td scope="row" class='awrc'>dynamically allocated gcs resources</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>dynamically allocated gcs shadows</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs assume cvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs assume no cvt</td><td align="right" class='awrnc'>3,927</td><td align="right" class='awrnc'>6.50</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gcs ast to fg</td><td align="right" class='awrc'>684,867</td><td align="right" class='awrc'>1,133.13</td><td align="right" class='awrc'>6.33</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast xid</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>11,138</td><td align="right" class='awrnc'>18.43</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>4,788</td><td align="right" class='awrc'>7.92</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>8,231</td><td align="right" class='awrnc'>13.62</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gcs cr basts to PIs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs cr requests to slave</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs cr serve without current lock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>158,967</td><td align="right" class='awrnc'>263.01</td><td align="right" class='awrnc'>1.47</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs error msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs flash read serve requests to slave</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr no current</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs forward cr to pinged instance</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>684,867</td><td align="right" class='awrnc'>1,133.13</td><td align="right" class='awrnc'>6.33</td></tr>
<tr><td scope="row" class='awrc'>gcs grant request in partial open</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>6,945</td><td align="right" class='awrnc'>11.49</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>234,398</td><td align="right" class='awrc'>387.82</td><td align="right" class='awrc'>2.17</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>1,323,542</td><td align="right" class='awrc'>2,189.83</td><td align="right" class='awrc'>12.24</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms flush pi msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>66,551</td><td align="right" class='awrnc'>110.11</td><td align="right" class='awrnc'>0.62</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>1,599,154</td><td align="right" class='awrc'>2,645.83</td><td align="right" class='awrc'>14.79</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>205</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>892</td><td align="right" class='awrnc'>1.48</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs pkey conflicts retry</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly failure unmount db</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass N-&gt;Xw ping local</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass N-&gt;Xw ping remote</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant X on assume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant ast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant fg ast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs recovery claim msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to master</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs regular cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs resources for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs retry convert request</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs share recovery bast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>4,683</td><td align="right" class='awrnc'>7.75</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>1,114,104</td><td align="right" class='awrc'>1,843.31</td><td align="right" class='awrc'>10.30</td></tr>
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>2,346</td><td align="right" class='awrc'>3.88</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts dropped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts queue time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts queued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts sent</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>21,423</td><td align="right" class='awrnc'>35.44</td><td align="right" class='awrnc'>0.20</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>27,894</td><td align="right" class='awrc'>46.15</td><td align="right" class='awrc'>0.26</td></tr>
<tr><td scope="row" class='awrnc'>lmd msg send time(ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lms(s) msg send time(ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>4,189</td><td align="right" class='awrnc'>6.93</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>163,962</td><td align="right" class='awrc'>271.28</td><td align="right" class='awrc'>1.52</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>206,832</td><td align="right" class='awrnc'>342.21</td><td align="right" class='awrnc'>1.91</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>886,306</td><td align="right" class='awrc'>1,466.41</td><td align="right" class='awrc'>8.20</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>1,601,500</td><td align="right" class='awrnc'>2,649.71</td><td align="right" class='awrnc'>14.81</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>1,150,356</td><td align="right" class='awrc'>1,903.29</td><td align="right" class='awrc'>10.64</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>1,374,495</td><td align="right" class='awrnc'>2,274.13</td><td align="right" class='awrnc'>12.71</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>10,176</td><td align="right" class='awrc'>16.84</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>1,196,430</td><td align="right" class='awrnc'>1,979.52</td><td align="right" class='awrnc'>11.06</td></tr>
<tr><td scope="row" class='awrc'>msgs causing lmd to send msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>msgs causing lms(s) to send msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>43,127,199,320</td><td align="right" class='awrc'>71,354,802.36</td><td align="right" class='awrc'>398,812.63</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>17,702</td><td align="right" class='awrnc'>29.29</td><td align="right" class='awrnc'>0.16</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>1,601,500</td><td align="right" class='awrc'>2,649.71</td><td align="right" class='awrc'>14.81</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>336,035</td><td align="right" class='awrnc'>555.98</td><td align="right" class='awrnc'>3.11</td></tr>
Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db


<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>1,251,759</td><td align="right" class='awrc'>2,071.06</td><td align="right" class='awrc'>11.58</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>300,546</td><td align="right" class='awrnc'>497.26</td><td align="right" class='awrnc'>2.78</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>1,315,422</td><td align="right" class='awrc'>2,176.39</td><td align="right" class='awrc'>12.16</td></tr>
<tr><td scope="row" class='awrnc'>number of broadcasted resources</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of directly freed master res</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of ges deadlock detected</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of lock borrowed by LMD</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of received ODPS messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of received RBA messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of resource borrowed by LMD</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of sent ODPS messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of sent RBA messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>75,140</td><td align="right" class='awrc'>124.32</td><td align="right" class='awrc'>0.69</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>89,497</td><td align="right" class='awrnc'>148.07</td><td align="right" class='awrnc'>0.83</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>250,432</td><td align="right" class='awrc'>414.34</td><td align="right" class='awrc'>2.32</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>1,044,871</td><td align="right" class='awrnc'>1,728.76</td><td align="right" class='awrnc'>9.66</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5200"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global CR served statistics. For each statistics, total value is shown"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th></tr>
<tr><td scope="row" class='awrc'>CR Block Requests</td><td align="right" class='awrc'>3,506</td></tr>
<tr><td scope="row" class='awrnc'>CURRENT Block Requests</td><td align="right" class='awrnc'>1,492</td></tr>
<tr><td scope="row" class='awrc'>Data Block Requests</td><td align="right" class='awrc'>3,506</td></tr>
<tr><td scope="row" class='awrnc'>Undo Block Requests</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TX Block Requests</td><td align="right" class='awrc'>1,474</td></tr>
<tr><td scope="row" class='awrnc'>Current Results</td><td align="right" class='awrnc'>4,997</td></tr>
<tr><td scope="row" class='awrc'>Private results</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>Zero Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Disk Read Results</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>Fail Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Fairness Down Converts</td><td align="right" class='awrc'>3,445</td></tr>
<tr><td scope="row" class='awrnc'>Light Works</td><td align="right" class='awrnc'>1,523</td></tr>
<tr><td scope="row" class='awrc'>Flushes</td><td align="right" class='awrc'>32</td></tr>
<tr><td scope="row" class='awrnc'>Builds</td><td align="right" class='awrnc'>3,506</td></tr>
<tr><td scope="row" class='awrc'>Errors</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5300"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
<li class="awr"> Pins	 = CURRENT Block Pin Operations </li>
<li class="awr"> Flushes = Redo Flush before CURRENT Block Served Operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global current served statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td scope="row" class='awrc'>Pins</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Flushes</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>82.86</td><td align="right" class='awrnc'>17.14</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="7"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#5400">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#5450">Global Cache Transfer Times (us)</a></li>
<li class="awr"><a class="awr" href="#5460">Global Cache Transfer (Immediate)</a></li>
<li class="awr"><a class="awr" href="#5470">Global Cache Times (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5400"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested (Congst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer stats. CR, blocks received, % immediate, % busy, % congestion are displayed for each instance and block class"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CR">CR</th>
<th class="awrbg" colspan=" 4" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CR Blocks|Received" class='awrclb'>5,089</td><td align="right" headers="CR %|Immed" class='awrc'>99.71</td><td align="right" headers="CR %|Busy" class='awrc'>0.24</td><td align="right" headers="CR %|Congst" class='awrc'>0.06</td><td align="right" headers="Current Blocks|Received" class='awrclb'>16,157</td><td align="right" headers="Current %|Immed" class='awrc'>78.88</td><td align="right" headers="Current %|Busy" class='awrc'>21.08</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.04</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>Others</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>40</td><td align="right" headers="CR %|Immed" class='awrnc'>97.50</td><td align="right" headers="CR %|Busy" class='awrnc'>2.50</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>71</td><td align="right" headers="Current %|Immed" class='awrnc'>9.86</td><td align="right" headers="Current %|Busy" class='awrnc'>90.14</td><td align="right" headers="Current %|Congst" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" headers="CR Blocks|Received" class='awrclb'>32</td><td align="right" headers="CR %|Immed" class='awrc'>50.00</td><td align="right" headers="CR %|Busy" class='awrc'>50.00</td><td align="right" headers="CR %|Congst" class='awrc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrclb'>2</td><td align="right" headers="Current %|Immed" class='awrc'>0.00</td><td align="right" headers="Current %|Busy" class='awrc'>100.00</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5450"></a>
<h3 class="awr">Global Cache Transfer Times (us)</h3>
<ul>
<li class="awr"> Avg Time - average time of all blocks (Immed,Busy,Congst) in us </li>
<li class="awr"> Immed, Busy, Congst -	Average times in us </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer time statistics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1184</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1172</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>4840</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>7293</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>689</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>655</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>813</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>3298</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>497</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>414</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>3755</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>607</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>375</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>633</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>3471</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>395</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6548</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>427</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>427</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5460"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> % of Blocks Received requiring 2 or 3 hops </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CR">CR</th>
<th class="awrbg" colspan=" 3" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Blocks Lost</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>5,074</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>12,745</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>39</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>7</td><td align="right" headers="Current %|2hop" class='awrnc'>100.00</td><td align="right" headers="Current %|3hop" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>16</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="CR %|2hop" class='awrnc'>&#160;</td><td align="right" headers="CR %|3hop" class='awrnc'>&#160;</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrnc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5470"></a>
<h3 class="awr">Global Cache Times (Immediate)</h3>
<ul>
<li class="awr"> Blocks Lost, 2-hop and 3-hop Average times in (us) </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache times (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Lost Time</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>1172</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>1172</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>655</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>655</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>414</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>414</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>375</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>375</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>395</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>395</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#7800">Interconnect Latency Stats</a></li>
<li class="awr"><a class="awr" href="#7900">Interconnect Throughput by Client</a></li>
<li class="awr"><a class="awr" href="#8000">Interconnect Device Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7800"></a>
<h3 class="awr">Interconnect Ping Latency Statistics</h3>
<ul>
<li class="awr"> Ping latency of the roundtrip of a message from this instance to </li>
<li class="awr"> target instances.  </li>
<li class="awr"> The target instance is identified by an instance number. </li>
<li class="awr"> Average and standard deviation of ping latency is given in microseconds </li>
<li class="awr"> for message sizes of 500 bytes and 8K. </li>
<li class="awr"> Note that latency of a message from the instance to itself is used as </li>
<li class="awr"> control, since message latency can include wait for CPU</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IC ping latency statistics"><tr><th class="awrbg" scope="col">Target Instance</th><th class="awrbg" scope="col">500B Ping Count</th><th class="awrbg" scope="col">Avg Latency 500B msg</th><th class="awrbg" scope="col">Stddev 500B msg</th><th class="awrbg" scope="col">8K Ping Count</th><th class="awrbg" scope="col">Avg Latency 8K msg</th><th class="awrbg" scope="col">Stddev 8K msg</th></tr>
<tr><td align="right" class='awrc'>1</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>726</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>711</td><td align="right" class='awrc'>0.33</td></tr>
<tr><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>806</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>873</td><td align="right" class='awrnc'>0.37</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7900"></a>
<h3 class="awr">Interconnect Throughput by Client</h3>
<ul>
<li class="awr"> Throughput of interconnect usage by major consumers </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect throughput by client statistics"><tr><th class="awrbg" scope="col">Used By</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Receive Mbytes/sec</th></tr>
<tr><td scope="row" class='awrc'>Global Cache</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.34</td></tr>
<tr><td scope="row" class='awrnc'>Parallel Query</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DB Locks</td><td align="right" class='awrc'>1.28</td><td align="right" class='awrc'>0.84</td></tr>
<tr><td scope="row" class='awrnc'>DB Streams</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8000"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Throughput and errors of interconnect devices (at OS level) </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect device statistics. IP address, public, source, etc. are displayed for each device"><tr><th class="awrbg" scope="col">Device Name</th><th class="awrbg" scope="col">IP Address</th><th class="awrbg" scope="col">Public</th><th class="awrbg" scope="col">Source</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Send Errors</th><th class="awrbg" scope="col">Send Dropped</th><th class="awrbg" scope="col">Send Buffer Overrun</th><th class="awrbg" scope="col">Send Carrier Lost</th><th class="awrbg" scope="col">Receive Mbytes/sec</th><th class="awrbg" scope="col">Receive Errors</th><th class="awrbg" scope="col">Receive Dropped</th><th class="awrbg" scope="col">Receive Buffer Overrun</th><th class="awrbg" scope="col">Receive Frame Errors</th></tr>
<tr><td scope="row" class='awrc'>fg-priv:1</td><td class='awrc'>169.254.22.248</td><td class='awrc'>NO</td><td class='awrc'>&#160;</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8790"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Times are in seconds </li>
<li class="awr"> Affinity objects - Affinity objects mastered at the begin/end snapshot </li>
<li class="awr"> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Times are in seconds. Affinity objects - Affinity objects mastered at the begin/end snapshot. Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Remaster Op</th><th class="awrbg" scope="col">Begin Snap</th><th class="awrbg" scope="col">End Snap</th></tr>
<tr><td scope="row" class='awrc'>affinity objects</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>read-mostly objects</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>affinity objects (other inst)</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>5</td></tr>
<tr><td scope="row" class='awrnc'>read-mostly objects (persistent)</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>




Report written to awr.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0





Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
		    70	08 Feb 2020 10:44    1
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
		    83	08 Feb 2020 19:00    1
		    84	08 Feb 2020 20:00    1
		    85	08 Feb 2020 21:00    1
		    86	08 Feb 2020 22:00    1
		    87	08 Feb 2020 23:00    1
		    88	09 Feb 2020 00:00    1
		    89	09 Feb 2020 01:00    1
		    90	09 Feb 2020 02:00    1
		    91	09 Feb 2020 03:00    1
		    92	09 Feb 2020 04:00    1
		    93	09 Feb 2020 05:00    1
		    94	09 Feb 2020 06:00    1
		    95	09 Feb 2020 07:00    1
		    96	09 Feb 2020 08:00    1
		    97	09 Feb 2020 09:00    1
		    98	09 Feb 2020 10:00    1
		    99	09 Feb 2020 11:20    1
		   100	09 Feb 2020 11:30    1
		   101	09 Feb 2020 11:33    1
		   102	09 Feb 2020 11:43    1
		   103	09 Feb 2020 11:46    1
		   104	09 Feb 2020 11:56    1
		   105	09 Feb 2020 11:58    1
		   106	09 Feb 2020 12:08    1
		   107	09 Feb 2020 13:00    1
		   108	09 Feb 2020 14:00    1
		   109	09 Feb 2020 14:09    1
		   110	09 Feb 2020 14:19    1
		   111	09 Feb 2020 14:52    1
		   112	09 Feb 2020 15:02    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		   113	09 Feb 2020 16:00    1
		   114	09 Feb 2020 17:00    1
		   115	09 Feb 2020 18:00    1
		   116	09 Feb 2020 19:00    1
		   117	09 Feb 2020 20:00    1
		   118	09 Feb 2020 20:30    1
		   119	09 Feb 2020 20:40    1
		   120	09 Feb 2020 20:47    1
		   121	09 Feb 2020 20:57    1
		   122	09 Feb 2020 22:00    1
		   123	09 Feb 2020 23:00    1
		   124	10 Feb 2020 00:00    1
		   125	10 Feb 2020 01:00    1
		   126	10 Feb 2020 02:00    1
		   127	10 Feb 2020 03:00    1
		   128	10 Feb 2020 04:00    1
		   129	10 Feb 2020 05:00    1
		   130	10 Feb 2020 06:00    1
		   131	10 Feb 2020 07:00    1
		   132	10 Feb 2020 08:00    1
		   133	10 Feb 2020 09:00    1
		   134	10 Feb 2020 09:08    1
		   135	10 Feb 2020 09:18    1
		   136	10 Feb 2020 10:00    1
		   137	10 Feb 2020 10:47    1
		   138	10 Feb 2020 10:58    1
		   139	10 Feb 2020 11:09    1
		   140	10 Feb 2020 11:19    1
		   141	10 Feb 2020 11:21    1
		   142	10 Feb 2020 11:31    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 141

End   Snapshot Id specified: 142



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_141_142.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.txt

WORKLOAD REPOSITORY REPORT (RAC)

Database Summary
~~~~~~~~~~~~~~~~
				   Database					   Snapshot Ids     Number of Instances     Number of Hosts	Report Total (minutes)
-----------------------------------------------------------------------------	-----------------   ------------------	 ------------------   ------------------------
	 Id Name      Unique Name Role		   Edition RAC CDB Block Size	   Begin      End   In Report	 Total	 In Report    Total	  DB time Elapsed time
----------- --------- ----------- ---------------- ------- --- --- ----------	-------- --------   --------- --------	 --------- --------   ----------- ------------
 3393773525 P30DB     p30db	  PRIMARY	   EE	   YES NO	 8192	     141      142	    2	     2		 2	  2	   304.11	 10.07
Database Instances Included In Report
-> Listed in order of instance number, I#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
																      Avg Active
  I# Instance  Host	  Startup	  Begin Snap Time End Snap Time   Release	  Elapsed Time(min) DB time(min) Up Time(hrs)	Sessions Platform
---- --------- ---------- --------------- --------------- --------------- --------------- ----------------- ------------ ------------ ---------- ---------------
   1 p30db1    mcracpoc1. 09-Feb-20 11:12 10-Feb-20 11:21 10-Feb-20 11:31 19.0.0.0.0		      10.07	  180.43	24.31	   17.92 Linux x86 64-bi
   2 p30db2    mcracpoc2. 09-Feb-20 11:12 10-Feb-20 11:21 10-Feb-20 11:31 19.0.0.0.0		      10.07	  123.68	24.31	   12.29 Linux x86 64-bi

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name		       Begin Snap Time End Snap Time
---------------------------------------- ------- ------ ------------------------------ --------------- ---------------
Top SQL Statements			   30.21  98.81 ADDM:3393773525_142	       10-Feb-20 11:21 10-Feb-20 11:31
"User I/O" wait Class			   30.21  89.42 ADDM:3393773525_142	       10-Feb-20 11:21 10-Feb-20 11:31
Top Segments by "User I/O" and "Cluster"   30.21  15.49 ADDM:3393773525_142	       10-Feb-20 11:21 10-Feb-20 11:31
Global Cache Messaging			   30.21   5.39 ADDM:3393773525_142	       10-Feb-20 11:21 10-Feb-20 11:31
Cache Sizes
-> All values are in Megabytes
-> Listed in order of instance number, I#
-> End values displayed only if different from Begin values
~~~~~~~~~~~
	 Memory Target	       Sga Target	    DB Cache	      Shared Pool	   Large Pool	       Java Pool	  Streams Pool	       PGA Target
       -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------
  I#	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End   Log Buffer
----   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   ----------
   1			      9,664		  8,000 	      1,440		     64 						      3,232		     19.4
   2			      9,664		  7,840 	      1,600		     64 						      3,232		     19.4
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~
 Avg			      9,664		  7,920 	      1,520		     64 						      3,232		     19.4
 Min			      9,664		  7,840 	      1,440		     64 						      3,232		     19.4
 Max			      9,664		  8,000 	      1,600		     64 						      3,232		     19.4

OS Statistics By Instance		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Listed in order of instance number, I#
-> End values are diplayed only if different from begin values

	      CPU		Load			  % CPU 				  Time (s)			 Memory 	    End Values
       -----------------   -------------   ----------------------------------	--------------------------------------------   ----------   -------------------------
  I#   #CPUs #Core #Sckt    Begin    End   % Busy  % Usr  % Sys  % WIO	% Idl		  Busy		 Idle	       Total	       MB   #CPU #Cor #Sck Memory (M)
----   ----- ----- -----   ------ ------   ------ ------ ------ ------ ------	-------------- -------------- --------------   ----------   ---- ---- ---- ----------
   1	   8	 4     1     11.3   14.7     44.3   15.5   20.2   46.4	 55.7	       1,974.9	      2,481.4	     4,456.3	 32,156.0
   2	   8	 4     1      6.5    8.7     36.7   12.6   17.1   47.8	 63.3	       1,624.2	      2,802.4	     4,426.6	 32,156.0
 ~~~										~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum										       3,599.0	      5,283.9	     8,882.9
			  --------------------------------------------------------------------------------------------------------------------


Time Model				 DB/Inst: P30DB/p30db1	Snaps: 141-142

					 SQL Exec		     Hard Parse
  I#	DB time (s)	DB CPU (s)	  Ela (s)  Parse Ela (s)	Ela (s) PL/SQL Ela (s)	 Java Ela (s)	 bg time (s)	 bg CPU (s)
---- -------------- -------------- -------------- -------------- -------------- -------------- -------------- -------------- --------------
   1	   10,825.8	     831.8	 10,825.6	     0.0	    0.0 	  33.7		  0.0	     1,029.3	      384.2
   2	    7,420.7	     566.4	  7,420.4	     0.2	    0.1 	  22.3		  0.0	       958.4	      415.6
 ~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	   18,246.6	   1,398.2	 18,246.0	     0.2	    0.1 	  56.0		  0.0	     1,987.7	      799.9
 Avg	    9,123.3	     699.1	  9,123.0	     0.1	    0.1 	  28.0		  0.0	       993.8	      399.9
 Std	    2,407.8	     187.7	  2,407.8	     0.1	    0.1 	   8.1		  0.0		50.1	       22.2
			  --------------------------------------------------------------------------------------------------------------------

Time Model - % of DB time		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]

							      % DB time 							      % bg time
		      ----------------------------------------------------------------------------------------- 		   --------------
	    % Total													 % Total
  I#	    DB time	      DB CPU   SQL Exec Ela	 Parse Ela     Hard Parse     PL/SQL Ela       Java Ela 	 bg time	   bg CPU
---- --------------   -------------- -------------- -------------- -------------- -------------- --------------   --------------   --------------
   1	       59.3		 7.7	      100.0	       0.0	      0.0	     0.0	    0.0 	    51.8	     37.3
   2	       40.7		 7.6	      100.0	       0.0	      0.0	     0.0	    0.0 	    48.2	     43.4
 ~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
 Avg	       50.0		 7.7	      100.0	       0.0	      0.0	     0.0	    0.0 	    50.0	     40.3
			  --------------------------------------------------------------------------------------------------------------------


Foreground Wait Classes -  % of Total DB timeDB/Inst: P30DB/p30db1  Snaps: 141
-> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time

	  User I/O	 Sys I/O	 Other	      Applic	    Commit	 Network      Concurcy	      Config	   Cluster	   Admin     Scheduler	      DB CPU
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------
	      89.4	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 0.0	       5.5	     N/A	   N/A		 7.7
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes 		 DB/Inst: P30DB/p30db1	Snaps: 141-142

  I#   User I/O(s)    Sys I/O(s)      Other(s)	  Applic (s)	Commit (s)   Network (s)  Concurcy (s)	  Config (s)   Cluster (s)     Admin (s) Scheduler (s)	  DB CPU (s)	    DB time
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- --------------
   1	   9,628.3	     0.0	   0.6		 0.0	       0.0	     0.0	   0.0		 0.0	     633.4	     N/A	   N/A	       831.8	   10,825.8
   2	   6,687.9	     0.3	   0.6		 0.0	       0.0	     0.0	   0.0		 0.0	     371.1	     N/A	   N/A	       566.4	    7,420.7
 ~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	  16,316.2	     0.3	   1.2		 0.0	       0.1	     0.0	   0.0		 0.0	   1,004.5	     0.0	   0.0	     1,398.2	   18,246.6
 Avg	   8,158.1	     0.2	   0.6		 0.0	       0.0	     0.0	   0.0		 0.0	     502.2	     N/A	   N/A	       699.1	    9,123.3
 Std	   2,079.2	     0.2	   0.0		 0.0	       0.0	     0.0	   0.0		 0.0	     185.5	     N/A	   N/A	       187.7	    2,407.8
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes -  % of DB time  DB/Inst: P30DB/p30db1	Snaps: 141-142
-> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time

										      % DB time
       -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
																						       % Total
  I#	    User I/O	   Sys I/O	   Other	Applic	      Commit	   Network	Concurcy	Config	     Cluster	     Admin     Scheduler	DB CPU	       DB time
----   ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------	 -------------
   1		88.9	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 5.9	       N/A	     N/A	   7.7		  59.3
   2		90.1	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 5.0	       N/A	     N/A	   7.6		  40.7
 ~~~   ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~
 Avg		89.5	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 5.4	       N/A	     N/A	   7.7
			  --------------------------------------------------------------------------------------------------------------------


Top Timed Events			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time '	       : Per-instance 'Wait Time Avg ' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			3,697,981	0.0	  16,317.23   4.41ms	89.43	    4.38ms     4.10ms	  4.66ms   395.31us    2
		  DB CPU					      N/A	N/A	   1,398.24		 7.66						       2
       System I/O log file parallel write			  171,479	0.0	   1,146.88   6.69ms	 6.29	    6.73ms     6.37ms	  7.08ms   503.28us    2
       Cluster	  gc cr grant 2-way				1,495,746	0.0	     803.99 537.52us	 4.41	  534.76us   522.53us	546.99us    17.30us    2
       Other	  LGWR any worker group 			   52,829	0.0	     185.30   3.51ms	 1.02	    3.61ms     3.18ms	  4.04ms   612.41us    2
       Cluster	  gc current grant 2-way			  271,799	0.0	     148.19 545.22us	 0.81	  542.35us   529.37us	555.33us    18.35us    2
       System I/O db file parallel write			   38,957	0.0	      97.02   2.49ms	 0.53	    2.49ms     2.43ms	  2.55ms    91.14us    2
       Other	  LGWR all worker groups			    4,528	0.0	      33.86   7.48ms	 0.19	    7.48ms     7.24ms	  7.73ms   344.20us    2
       Cluster	  gc current grant read-mostly invalidatio	   17,523	0.0	      21.37   1.22ms	 0.12	    1.22ms     1.22ms	  1.22ms	       2
       System I/O control file sequential read			    5,966	0.0	      16.71   2.80ms	 0.09	    2.81ms     2.68ms	  2.93ms   179.83us    2

   1   User I/O   db file sequential read			2,066,753	0.0	   9,629.16   4.66ms	88.95
		  DB CPU					      N/A	N/A	     831.83		 7.68
       System I/O log file parallel write			   95,221	0.0	     606.72   6.37ms	 5.60
       Cluster	  gc cr grant 2-way				  916,508	0.0	     501.32 546.99us	 4.63
       Other	  LGWR any worker group 			   32,728	0.0	     104.01   3.18ms	 0.96
       Cluster	  gc current grant 2-way			  165,944	0.0	      92.15 555.33us	 0.85
       System I/O db file parallel write			   19,467	0.0	      47.23   2.43ms	 0.44
       Cluster	  gc current grant read-mostly invalidatio	   17,523	0.0	      21.37   1.22ms	 0.20
       Other	  LGWR all worker groups			    2,337	0.0	      16.92   7.24ms	 0.16
       Cluster	  gc current block 2-way			   12,767	0.0	       8.36 654.47us	 0.08

   2   User I/O   db file sequential read			1,631,228	0.0	   6,688.07   4.10ms	90.13
		  DB CPU					      N/A	N/A	     566.40		 7.63
       System I/O log file parallel write			   76,258	0.0	     540.17   7.08ms	 7.28
       Cluster	  gc cr grant 2-way				  579,238	0.0	     302.67 522.53us	 4.08
       Other	  LGWR any worker group 			   20,101	0.0	      81.29   4.04ms	 1.10
       Cluster	  gc current grant 2-way			  105,855	0.0	      56.04 529.37us	 0.76
       System I/O db file parallel write			   19,490	0.0	      49.79   2.55ms	 0.67
       Other	  LGWR all worker groups			    2,191	0.0	      16.93   7.73ms	 0.23
       System I/O control file sequential read			    3,140	0.0	       8.41   2.68ms	 0.11
       User I/O   Disk file Mirror Read 			      852	0.0	       6.79   7.97ms	 0.09
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Foreground Events		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Foreground Activity is captured in release 11g and above
-> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			3,697,700	0.0	  16,315.99   4.41ms	89.42	    4.38ms     4.10ms	  4.66ms   395.30us    2
		  DB CPU					      N/A	N/A	   1,398.24		 7.66						       2
       Cluster	  gc cr grant 2-way				1,495,731	0.0	     803.97 537.51us	 4.41	  534.75us   522.52us	546.98us    17.30us    2
       Cluster	  gc current grant 2-way			  271,713	0.0	     148.14 545.21us	 0.81	  542.34us   529.34us	555.33us    18.38us    2
       Cluster	  gc current grant read-mostly invalidatio	   17,523	0.0	      21.37   1.22ms	 0.20	    1.22ms     1.22ms	  1.22ms	       1
       Cluster	  gc current block 2-way			   21,380	0.0	      13.84 647.15us	 0.08	  645.57us   637.33us	653.81us    11.65us    2
       Cluster	  gc cr block 2-way				    8,499	0.0	      10.25   1.21ms	 0.06	    1.21ms     1.18ms	  1.25ms    52.04us    2
       Cluster	  gc current block busy 			    5,475	0.0	       3.87 706.16us	 0.02	  701.58us   674.09us	729.06us    38.87us    2
       Cluster	  gc cr grant congested 			      613	0.0	       2.41   3.92ms	 0.01	    3.87ms     3.72ms	  4.01ms   209.91us    2
       Other	  KJC: Wait for msg sends to complete		    4,372	0.0	       0.47 108.09us	 0.00	  111.21us   104.26us	118.16us     9.83us    2

   1   User I/O   db file sequential read			2,066,562	0.0	   9,628.27   4.66ms	88.94
		  DB CPU					      N/A	N/A	     831.83		 7.68
       Cluster	  gc cr grant 2-way				  916,502	0.0	     501.31 546.98us	 4.63
       Cluster	  gc current grant 2-way			  165,883	0.0	      92.12 555.33us	 0.85
       Cluster	  gc current grant read-mostly invalidatio	   17,523	0.0	      21.37   1.22ms	 0.20
       Cluster	  gc current block 2-way			   12,735	0.0	       8.33 653.81us	 0.08
       Cluster	  gc cr block 2-way				    5,001	0.0	       5.88   1.18ms	 0.05
       Cluster	  gc current block busy 			    3,194	0.0	       2.33 729.06us	 0.02
       Cluster	  gc cr grant congested 			      428	0.0	       1.72   4.01ms	 0.02
       Other	  KJC: Wait for msg sends to complete		    3,168	0.0	       0.33 104.26us	 0.00

   2   User I/O   db file sequential read			1,631,138	0.0	   6,687.72   4.10ms	90.12
		  DB CPU					      N/A	N/A	     566.40		 7.63
       Cluster	  gc cr grant 2-way				  579,229	0.0	     302.66 522.52us	 4.08
       Cluster	  gc current grant 2-way			  105,830	0.0	      56.02 529.34us	 0.75
       Cluster	  gc current block 2-way			    8,645	0.0	       5.51 637.33us	 0.07
       Cluster	  gc cr block 2-way				    3,498	0.0	       4.37   1.25ms	 0.06
       Cluster	  gc current block busy 			    2,281	0.0	       1.54 674.09us	 0.02
       Cluster	  gc cr grant congested 			      185	0.0	       0.69   3.72ms	 0.01
       Other	  reliable message					1	0.0	       0.34 336.61ms	 0.00
       System I/O control file sequential read			      136	0.0	       0.32   2.32ms	 0.00
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Background Events		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> % of bg time: % of background elapsed time
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   System I/O log file parallel write			  171,464	0.0	   1,146.81   6.69ms	57.70	    6.73ms     6.37ms	  7.08ms   503.21us    2
		  background cpu time				      N/A	N/A	     799.85		40.24						       2
       Other	  LGWR any worker group 			   52,810	0.0	     185.26   3.51ms	 9.32	    3.61ms     3.18ms	  4.04ms   612.63us    2
       System I/O db file parallel write			   38,957	0.0	      97.02   2.49ms	 4.88	    2.49ms     2.43ms	  2.55ms    91.14us    2
       Other	  LGWR all worker groups			    4,529	0.0	      33.86   7.48ms	 1.70	    7.48ms     7.24ms	  7.73ms   343.97us    2
       System I/O control file sequential read			    5,822	0.0	      16.37   2.81ms	 0.82	    2.82ms     2.70ms	  2.94ms   169.27us    2
       User I/O   Disk file Mirror Read 			    1,649	0.0	      11.02   6.68ms	 0.55	    6.69ms     5.29ms	  8.10ms     1.99ms    2
       Other	  LGWR worker group ordering			    6,588	0.0	       9.33   1.42ms	 0.47	    1.41ms     1.32ms	  1.50ms   124.29us    2
       Other	  IMR slave acknowledgement msg 		    3,633	0.0	       9.00   2.48ms	 0.45	    2.48ms     2.12ms	  2.84ms   507.74us    2
       System I/O log file sequential read			      523	0.0	       7.21  13.79ms	 0.36	   13.61ms    12.33ms	 14.89ms     1.81ms    2

   1   System I/O log file parallel write			   95,209	0.0	     606.66   6.37ms	58.94
		  background cpu time				      N/A	N/A	     384.24		37.33
       Other	  LGWR any worker group 			   32,717	0.0	     103.99   3.18ms	10.10
       System I/O db file parallel write			   19,467	0.0	      47.23   2.43ms	 4.59
       Other	  LGWR all worker groups			    2,338	0.0	      16.93   7.24ms	 1.64
       System I/O control file sequential read			    2,818	0.0	       8.27   2.94ms	 0.80
       Other	  LGWR worker group ordering			    3,536	0.0	       5.30   1.50ms	 0.51
       User I/O   Disk file Mirror Read 			      831	0.0	       4.39   5.29ms	 0.43
       Other	  IMR slave acknowledgement msg 		    1,812	0.0	       3.84   2.12ms	 0.37
       System I/O log file sequential read			      224	0.0	       2.76  12.33ms	 0.27

   2   System I/O log file parallel write			   76,255	0.0	     540.15   7.08ms	56.36
		  background cpu time				      N/A	N/A	     415.61		43.36
       Other	  LGWR any worker group 			   20,093	0.0	      81.27   4.04ms	 8.48
       System I/O db file parallel write			   19,490	0.0	      49.79   2.55ms	 5.20
       Other	  LGWR all worker groups			    2,191	0.0	      16.93   7.73ms	 1.77
       System I/O control file sequential read			    3,004	0.0	       8.10   2.70ms	 0.85
       User I/O   Disk file Mirror Read 			      818	0.0	       6.62   8.10ms	 0.69
       Other	  IMR slave acknowledgement msg 		    1,821	0.0	       5.16   2.84ms	 0.54
       System I/O log file sequential read			      299	0.0	       4.45  14.89ms	 0.46
       Other	  LGWR worker group ordering			    3,052	0.0	       4.04   1.32ms	 0.42
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
User I/O   db file sequential read			 3,697,700	 0.0	   16,315.99   4.41ms	 89.42	     4.38ms	4.10ms	   4.66ms   395.30us
Cluster    gc cr grant 2-way				 1,495,731	 0.0	      803.97 537.51us	  4.41	   534.75us   522.52us	 546.98us    17.30us
Cluster    gc current grant 2-way			   271,713	 0.0	      148.14 545.21us	  0.81	   542.34us   529.34us	 555.33us    18.38us
Cluster    gc current grant read-mostly invalidatio	    17,523	 0.0	       21.37   1.22ms	  0.12	     1.22ms	1.22ms	   1.22ms
Cluster    gc current block 2-way			    21,380	 0.0	       13.84 647.15us	  0.08	   645.57us   637.33us	 653.81us    11.65us
Cluster    gc cr block 2-way				     8,499	 0.0	       10.25   1.21ms	  0.06	     1.21ms	1.18ms	   1.25ms    52.04us
Cluster    gc current block busy			     5,475	 0.0		3.87 706.16us	  0.02	   701.58us   674.09us	 729.06us    38.87us
Cluster    gc cr grant congested			       613	 0.0		2.41   3.92ms	  0.01	     3.87ms	3.72ms	   4.01ms   209.91us
Other	   KJC: Wait for msg sends to complete		     4,372	 0.0		0.47 108.09us	  0.00	   111.21us   104.26us	 118.16us     9.83us
Cluster    gc current grant congested			       117	 0.0		0.44   3.75ms	  0.00	     3.75ms	3.75ms	   3.75ms    38.09ns
Other	   reliable message					 1	 0.0		0.34 336.61ms	  0.00	   336.61ms   336.61ms	 336.61ms
System I/O control file sequential read 		       144	 0.0		0.34   2.33ms	  0.00	     2.41ms	2.32ms	   2.49ms   119.01us
User I/O   Disk file Mirror Read				36	 0.0		0.17   4.67ms	  0.00	     3.76ms	2.73ms	   4.78ms     1.45ms
Other	   latch: enqueue hash chains			       178	 0.0		0.07 415.48us	  0.00	   391.26us   338.69us	 443.84us    74.35us
Cluster    gc current grant busy			       124	 0.0		0.07 562.02us	  0.00	   720.86us   523.89us	 917.83us   278.56us
Other	   latch free					       206	 0.0		0.07 335.91us	  0.00	   319.95us   288.94us	 350.96us    43.86us
Other	   latch: gc element				       113	 0.0		0.06 551.75us	  0.00	   482.86us   370.05us	 595.68us   159.55us
Commit	   log file sync					 9	 0.0		0.06   6.74ms	  0.00	     6.64ms	5.76ms	   7.53ms     1.25ms
Cluster    gc cr block busy					 7	 0.0		0.05   7.08ms	  0.00	     7.08ms	7.08ms	   7.08ms
Other	   latch: redo allocation				73	 0.0		0.04 511.53us	  0.00	   529.82us   476.43us	 583.21us    75.50us
Cluster    gc cr block congested				 5	 0.0		0.03   5.97ms	  0.00	     5.64ms	3.99ms	   7.29ms     2.33ms
Other	   IPC send completion sync				49	 0.0		0.03 592.22us	  0.00	   593.86us   582.39us	 605.33us    16.22us
Other	   latch: gcs resource hash				97	 0.0		0.03 270.10us	  0.00	   265.94us   255.03us	 276.85us    15.43us
Cluster    gc current block congested				 8	 0.0		0.03   3.15ms	  0.00	     3.00ms	2.70ms	   3.30ms   422.61us
Other	   PX Deq: reap credit				       578     100.0		0.02  27.00us	  0.00	    26.10us    22.83us	  29.38us     4.63us
Other	   PX Deq: Slave Session Stats				30	 0.0		0.01 481.50us	  0.00	   481.50us   281.27us	 681.73us   283.17us
Other	   enq: WF - contention 				13	 0.0		0.01 878.69us	  0.00	   878.69us   878.69us	 878.69us
Other	   enq: PS - contention 				16	 0.0		0.01 652.19us	  0.00	   650.02us   632.71us	 667.33us    24.48us
Applicatio SQL*Net break/reset to client		       120	 0.0		0.01  82.08us	  0.00	    82.08us    82.08us	  82.08us
Concurrenc row cache lock					10     100.0		0.01	.98ms	  0.00	      .98ms	 .98ms	    .98ms
Other	   latch: cache buffers lru chain			50	 0.0		0.01 188.08us	  0.00	   187.40us   186.08us	 188.71us     1.86us
Other	   latch: object queue header operation 		15	 0.0		0.01 607.00us	  0.00	   508.13us   343.33us	 672.92us   233.05us
User I/O   direct path write					 1	 0.0		0.01   7.75ms	  0.00	     7.75ms	7.75ms	   7.75ms
Concurrenc latch: cache buffers chains				11	 0.0		0.01 682.27us	  0.00	   639.92us   174.00us	   1.11ms   658.91us
Cluster    gc cr multi block mixed				 8	 0.0		0.01 921.00us	  0.00	   921.00us   921.00us	 921.00us
Other	   CSS initialization					 2	 0.0		0.01   3.19ms	  0.00	     3.19ms	3.19ms	   3.19ms
Cluster    gc buffer busy release				 1	 0.0		0.01   6.07ms	  0.00	     6.07ms	6.07ms	   6.07ms
Cluster    gc current multi block request			 5	 0.0		0.01   1.04ms	  0.00	     1.04ms	1.04ms	   1.04ms
Concurrenc library cache lock					 5	 0.0		0.00 880.00us	  0.00	   880.00us   880.00us	 880.00us
Other	   PGA memory operation 			       147	 0.0		0.00  29.15us	  0.00	   187.52us    20.03us	 355.00us   236.86us
Concurrenc library cache pin					 5	 0.0		0.00 749.80us	  0.00	   749.80us   749.80us	 749.80us
User I/O   Disk file operations I/O				14	 0.0		0.00 236.21us	  0.00	   236.21us   236.21us	 236.21us
Other	   DLM cross inst call completion			11	 0.0		0.00 298.55us	  0.00	   298.55us   298.55us	 298.55us
Other	   enq: FB - contention 				 3	 0.0		0.00   1.08ms	  0.00	     1.08ms	1.08ms	   1.08ms
Other	   enq: AF - task serialization 			 1	 0.0		0.00   3.13ms	  0.00	     3.13ms	3.13ms	   3.13ms
Network    SQL*Net message to client			       195	 0.0		0.00  14.00us	  0.00	    12.64us    10.42us	  14.87us     3.14us
Other	   CSS operation: action				 2	 0.0		0.00 867.50us	  0.00	   867.50us   867.50us	 867.50us
Other	   CSS operation: query 				 6	 0.0		0.00 176.00us	  0.00	   176.00us   176.00us	 176.00us
Applicatio enq: TM - contention 				 1	 0.0		0.00 756.00us	  0.00	   756.00us   756.00us	 756.00us
Other	   latch: messages					 4	 0.0		0.00 177.00us	  0.00	   177.00us   177.00us	 177.00us
Other	   latch: ges resource hash list			 1	 0.0		0.00 480.00us	  0.00	   480.00us   480.00us	 480.00us
Other	   latch: undo global data				 2	 0.0		0.00 191.00us	  0.00	   191.00us   191.00us	 191.00us
User I/O   ASM IO for non-blocking poll 			 3	 0.0		0.00  18.67us	  0.00	    18.67us    18.67us	  18.67us
Network    IPC group service call				 5	 0.0		0.00   8.80us	  0.00	     8.80us	8.80us	   8.80us
Other	   AWR Flush						 6	 0.0		0.00   5.33us	  0.00	     5.33us	5.33us	   5.33us
Other	   asynch descriptor resize				 1     100.0		0.00   9.00us	  0.00	     9.00us	9.00us	   9.00us
Other	   ges resource directory to be unfrozen		 1	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us
Idle	   watchdog main loop				     1,612	 0.0	    4,836.03 3000.02m	 26.50	  3000.02ms  3000.02ms	3000.03ms     5.97us
Idle	   SQL*Net message from client			       195	 0.0	      600.14 3077.62m	  3.29	  1911.70ms	1.16ms	3822.24ms  2701.92ms
Idle	   PX Deq: Execution Msg				90	 0.0		2.16  24.04ms	  0.01	    24.04ms    15.06ms	  33.02ms    12.70ms
Foreground Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   PX Deq Credit: send blkd				54	 0.0		0.82  15.11ms	  0.00	   403.26ms   176.08us	 806.35ms   570.05ms
Idle	   PX Deq: Msg Fragment 			       240	 0.0		0.12 503.22us	  0.00	   503.22us   457.83us	 548.62us    64.20us
Idle	   PX Deq Credit: need buffer				 6	 0.0		0.00 557.17us	  0.00	   557.17us   557.17us	 557.17us
			  --------------------------------------------------------------------------------------------------------------------

Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
System I/O log file parallel write			   171,464	 0.0	    1,146.81   6.69ms	  0.58	     6.73ms	6.37ms	   7.08ms   503.21us
Other	   LGWR any worker group			    52,810	 0.0	      185.26   3.51ms	  0.09	     3.61ms	3.18ms	   4.04ms   612.63us
System I/O db file parallel write			    38,957	 0.0	       97.02   2.49ms	  0.05	     2.49ms	2.43ms	   2.55ms    91.14us
Other	   LGWR all worker groups			     4,529	 0.0	       33.86   7.48ms	  0.02	     7.48ms	7.24ms	   7.73ms   343.97us
System I/O control file sequential read 		     5,822	 0.0	       16.37   2.81ms	  0.01	     2.82ms	2.70ms	   2.94ms   169.27us
User I/O   Disk file Mirror Read			     1,649	 0.0	       11.02   6.68ms	  0.01	     6.69ms	5.29ms	   8.10ms     1.99ms
Other	   LGWR worker group ordering			     6,588	 0.0		9.33   1.42ms	  0.00	     1.41ms	1.32ms	   1.50ms   124.29us
Other	   IMR slave acknowledgement msg		     3,633	 0.0		9.00   2.48ms	  0.00	     2.48ms	2.12ms	   2.84ms   507.74us
System I/O log file sequential read			       523	 0.0		7.21  13.79ms	  0.00	    13.61ms    12.33ms	  14.89ms     1.81ms
System I/O control file parallel write			       599	 0.0		4.40   7.34ms	  0.00	     7.31ms	6.88ms	   7.74ms   612.52us
Other	   Sync ASM rebalance				       108	 0.0		2.90  26.81ms	  0.00	    26.81ms    26.04ms	  27.57ms     1.08ms
Other	   ASM file metadata operation			     5,675	 0.0		2.37 417.03us	  0.00	   415.67us   393.71us	 437.63us    31.06us
Other	   KSV master wait				     1,736	52.0		2.08   1.20ms	  0.00	     1.19ms	1.14ms	   1.24ms    73.31us
User I/O   db file sequential read			       279	 0.0		1.23   4.41ms	  0.00	     4.27ms	3.90ms	   4.65ms   535.88us
User I/O   ASM IO for non-blocking poll 		    41,684	 0.0		1.18  28.21us	  0.00	    28.18us    25.02us	  31.34us     4.47us
Cluster    gc cr block 2-way				     1,572	 0.0		0.81 514.43us	  0.00	   553.47us   507.81us	 599.14us    64.58us
Other	   PX Deq: reap credit				    22,081     100.0		0.61  27.75us	  0.00	    27.74us    27.57us	  27.92us   245.46ns
Other	   gcs log flush sync				       614	 0.0		0.52 846.07us	  0.00	   864.87us   672.51us	   1.06ms   272.05us
Other	   DFS lock handle				       560     100.0		0.41 736.26us	  0.00	   740.47us   656.33us	 824.60us   118.98us
Other	   DLM cross inst call completion		       466	 0.0		0.38 811.04us	  0.00	   812.95us   807.32us	 818.57us     7.96us
Other	   AQ: RAC AQ Network				    12,066     100.0		0.36  29.81us	  0.00	    29.81us    28.98us	  30.65us     1.19us
Cluster    gc cr block busy					46	 0.0		0.34   7.36ms	  0.00	     7.27ms	5.30ms	   9.25ms     2.80ms
Other	   CGS wait for IPC msg 			    12,252     100.0		0.33  27.21us	  0.00	    27.21us    26.76us	  27.66us   632.52ns
Cluster    gc current block busy			       271	 0.0		0.31   1.15ms	  0.00	   848.95us   511.07us	   1.19ms   477.84us
User I/O   direct path write temp				60	 0.0		0.28   4.72ms	  0.00	     4.72ms	4.70ms	   4.74ms    24.37us
Other	   latch free					     1,063	 0.0		0.27 253.89us	  0.00	   253.94us   243.65us	 264.23us    14.55us
Other	   oracle thread bootstrap				 9	 0.0		0.21  23.72ms	  0.00	    23.72ms    23.69ms	  23.76ms    49.64us
Applicatio enq: TM - contention 				 3	 0.0		0.20  66.21ms	  0.00	    49.81ms   624.00us	  99.00ms    69.56ms
Other	   reliable message					47	 0.0		0.18   3.93ms	  0.00	     3.55ms	2.21ms	   4.90ms     1.91ms
User I/O   db file scattered read				31	 0.0		0.13   4.10ms	  0.00	     4.10ms	4.05ms	   4.15ms    70.45us
User I/O   Disk file operations I/O			       548	 0.0		0.12 215.12us	  0.00	   214.29us   209.00us	 219.58us     7.48us
Concurrenc library cache lock				       135	 0.0		0.10 777.47us	  0.00	   787.60us   736.93us	 838.28us    71.67us
Other	   enq: CF - contention 			       109	78.9		0.10 903.72us	  0.00	   908.98us   878.80us	 939.16us    42.68us
Concurrenc library cache pin				       135	 0.0		0.09 701.24us	  0.00	   698.44us   684.39us	 712.48us    19.86us
System I/O db file async I/O submit			     9,848	 0.0		0.09   9.20us	  0.00	     9.24us	8.77us	   9.71us   663.55ns
Applicatio enq: RO - fast object reuse			       100	 0.0		0.08 844.72us	  0.00	   844.72us   843.24us	 846.20us     2.09us
Network    IPC group service call			       925	 0.0		0.08  81.85us	  0.00	    81.85us    81.49us	  82.20us   501.70ns
User I/O   direct path write					11	 0.0		0.06   5.49ms	  0.00	     5.53ms	5.14ms	   5.92ms   553.69us
Other	   PX Deq: Join ACK					30	 0.0		0.06   1.87ms	  0.00	     1.86ms	1.84ms	   1.89ms    33.38us
Other	   latch: gcs resource hash			       177	 0.0		0.06 314.85us	  0.00	   312.45us   306.62us	 318.28us     8.25us
Cluster    gc current grant busy			       115	 0.0		0.06 480.40us	  0.00	   496.42us   473.67us	 519.18us    32.18us
Concurrenc row cache lock					40     100.0		0.05   1.33ms	  0.00	     1.35ms	1.18ms	   1.52ms   240.64us
Other	   CSS operation: data query				38	 0.0		0.05   1.39ms	  0.00	     1.39ms	1.30ms	   1.48ms   131.86us
Other	   ksxr poll remote instances			     1,601     100.0		0.05  31.81us	  0.00	    31.69us    28.07us	  35.31us     5.12us
Cluster    gc current grant 2-way				86	 0.0		0.05 576.43us	  0.00	   603.04us   539.48us	 666.60us    89.89us
Other	   LGWR wait for redo copy			       136	 0.0		0.05 335.66us	  0.00	   337.11us   333.71us	 340.51us     4.81us
Other	   CSS operation: data update				39	 0.0		0.04   1.06ms	  0.00	     1.07ms   936.75us	   1.20ms   186.00us
Other	   IPC send completion sync			     1,225	98.6		0.04  33.53us	  0.00	    33.53us    32.06us	  35.00us     2.08us
Cluster    gc current block 2-way				43	 0.0		0.04 868.84us	  0.00	   837.93us   784.78us	 891.09us    75.17us
Other	   latch: redo allocation			       104	 0.0		0.03 336.23us	  0.00	   331.67us   319.18us	 344.15us    17.66us
Other	   kjctssqmg: quick message send wait			56     100.0		0.03 622.84us	  0.00	   738.28us   618.56us	 858.00us   169.31us
Other	   latch: cache buffers lru chain			96	 0.0		0.03 353.49us	  0.00	   354.08us   349.33us	 358.83us     6.72us
Other	   ges inquiry response 				40	 0.0		0.03 749.63us	  0.00	   683.58us   551.50us	 815.67us   186.79us
Other	   enq: WF - contention 				21	 0.0		0.03   1.33ms	  0.00	     1.47ms	1.31ms	   1.63ms   219.84us
Other	   KJC: Wait for msg sends to complete			60	20.0		0.03 432.23us	  0.00	   460.28us   366.79us	 553.76us   132.21us
Other	   enq: PS - contention 				28	28.6		0.02 774.39us	  0.00	   809.39us   646.06us	    .97ms   230.99us
Cluster    gc cr multi block mixed				 9	 0.0		0.02   2.13ms	  0.00	     1.86ms	1.08ms	   2.65ms     1.11ms
Cluster    gc cr disk read					28	 0.0		0.02 664.71us	  0.00	   664.71us   664.71us	 664.71us
Other	   os thread creation					 9	 0.0		0.02   2.03ms	  0.00	     2.02ms	1.86ms	   2.17ms   224.08us
Concurrenc libcache interrupt action by LCK		     2,347	 0.0		0.02   7.52us	  0.00	     7.60us	6.49us	   8.71us     1.57us
Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Cluster    gc cr grant 2-way					15	 0.0		0.01	.96ms	  0.00	      .99ms   854.33us	   1.12ms   190.92us
Other	   latch: gc element					48	 0.0		0.01 236.85us	  0.00	   200.90us   150.14us	 251.66us    71.78us
Cluster    gc buffer busy release				 1	 0.0		0.01   8.81ms	  0.00	     8.81ms	8.81ms	   8.81ms
Other	   enq: CO - master slave det				10     100.0		0.01 766.30us	  0.00	   766.30us   766.30us	 766.30us
Other	   enq: FB - contention 				11	 0.0		0.01 639.91us	  0.00	   637.20us   627.25us	 647.14us    14.07us
Cluster    gc current multi block request			 6	 0.0		0.01	.99ms	  0.00	     1.01ms	 .98ms	   1.05ms    49.07us
Concurrenc latch: MGA shared context root latch 		 5	 0.0		0.01   1.17ms	  0.00	     1.10ms   748.00us	   1.46ms   502.28us
Other	   enq: SM -  contention				 6	 0.0		0.01	.97ms	  0.00	     1.04ms   828.00us	   1.25ms   295.22us
Other	   PGA memory operation 			       217	 0.0		0.01  23.87us	  0.00	    22.90us    18.94us	  26.87us     5.61us
Other	   enq: TA - contention 				 4	 0.0		0.00   1.20ms	  0.00	     1.20ms   759.00us	   1.65ms   628.97us
Other	   PX Deq: Slave Session Stats				30	 0.0		0.00 156.67us	  0.00	   151.26us   110.69us	 191.82us    57.37us
Other	   latch: ges resource hash list			13	 0.0		0.00 360.92us	  0.00	   351.08us   223.17us	 479.00us   180.90us
Configurat enq: HW - contention 				 7	 0.0		0.00 629.14us	  0.00	   685.33us   606.67us	 764.00us   111.25us
Commit	   log file sync					 1	 0.0		0.00   4.23ms	  0.00	     4.23ms	4.23ms	   4.23ms
Other	   PX Deq: Signal ACK EXT				30	 0.0		0.00  96.47us	  0.00	   100.07us    73.06us	 127.08us    38.20us
Cluster    gc index operation					 1	 0.0		0.00   2.48ms	  0.00	     2.48ms	2.48ms	   2.48ms
Other	   latch: messages					 8	 0.0		0.00 301.25us	  0.00	   273.40us   162.00us	 384.80us   157.54us
Other	   enq: DW - contention 				 2     100.0		0.00   1.19ms	  0.00	     1.19ms	 .95ms	   1.43ms   335.17us
Other	   latch: enqueue hash chains				 3	 0.0		0.00 647.67us	  0.00	   647.67us   647.67us	 647.67us
Configurat latch: redo writing					 3	 0.0		0.00 625.33us	  0.00	   818.00us   240.00us	   1.40ms   817.42us
Concurrenc latch: cache buffers chains				 4	 0.0		0.00 447.75us	  0.00	   447.75us   334.00us	 561.50us   160.87us
Other	   latch: checkpoint queue latch			 3	 0.0		0.00 479.67us	  0.00	   622.00us   195.00us	   1.05ms   603.87us
Other	   enq: TD - KTF dump entries				 2	 0.0		0.00 602.00us	  0.00	   602.00us   512.00us	 692.00us   127.28us
Concurrenc row cache mutex					 5	 0.0		0.00 161.80us	  0.00	   161.80us   161.80us	 161.80us
Concurrenc latch: MGA shared context latch			 2	 0.0		0.00 311.00us	  0.00	   311.00us   139.00us	 483.00us   243.24us
Other	   GCR CSS group query					38	 0.0		0.00  14.76us	  0.00	    14.76us    13.95us	  15.58us     1.15us
Other	   GCR CSS group update 				36	 0.0		0.00  15.56us	  0.00	    15.56us    14.94us	  16.17us   864.24ns
Other	   latch: kjci process context latch			 2	 0.0		0.00 267.00us	  0.00	   267.00us   267.00us	 267.00us
Other	   latch: object queue header operation 		 2	 0.0		0.00 208.50us	  0.00	   208.50us   208.50us	 208.50us
Cluster    gc current split					 1	 0.0		0.00 392.00us	  0.00	   392.00us   392.00us	 392.00us
Concurrenc latch: MGA heap latch				 2	 0.0		0.00 141.00us	  0.00	   141.00us   141.00us	 141.00us
Other	   asynch descriptor resize				37     100.0		0.00   6.49us	  0.00	     6.52us	6.29us	   6.75us   328.30ns
Cluster    gc buffer busy acquire				 2	 0.0		0.00 104.50us	  0.00	   104.50us   104.50us	 104.50us
Network    SQL*Net message to client				35	 0.0		0.00   5.23us	  0.00	     5.22us	5.13us	   5.32us   134.91ns
Other	   latch: undo global data				 1	 0.0		0.00 119.00us	  0.00	   119.00us   119.00us	 119.00us
Concurrenc buffer busy waits					 1	 0.0		0.00  44.00us	  0.00	    44.00us    44.00us	  44.00us
Other	   ges resource directory to be unfrozen		 7	 0.0		0.00   5.14us	  0.00	     5.17us	5.00us	   5.33us   235.70ns
Other	   undo_retention publish retry 			 4	 0.0		0.00   6.25us	  0.00	     6.25us	6.00us	   6.50us   353.55ns
Other	   AWR Flush						 3	 0.0		0.00   4.33us	  0.00	     4.33us	4.33us	   4.33us
Other	   ASM background starting				 1	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us
Idle	   rdbms ipc message				   403,760	 5.5	   27,347.13  67.73ms	 13.76	    67.83ms    65.17ms	  70.49ms     3.76ms
Idle	   PX Idle Wait 					30	 0.0	   20,549.12 684.97 s	 10.34	   684.97 s   684.90 s	 685.04 s    93.33ms
Idle	   Space Manager: slave idle wait		     5,141	 0.0	   19,293.07 3752.79m	  9.71	  3752.80ms  3748.58ms	3757.02ms     5.96ms
Idle	   class slave wait				    15,185	78.6	    8,617.04 567.47ms	  4.34	   567.60ms   547.85ms	 587.36ms    27.94ms
Idle	   wait for unread message on broadcast cha	     1,852     100.1	    3,628.07 1959.00m	  1.83	  1959.00ms  1958.45ms	1959.55ms   776.46us
Idle	   ges remote message				    35,083	 0.0	    2,416.47  68.88ms	  1.22	    68.88ms    68.78ms	  68.98ms   143.72us
Idle	   GCR sleep					     8,049	 0.0	    2,415.59 300.11ms	  1.22	   300.11ms   300.09ms	 300.13ms    21.91us
Idle	   pmon timer					       805     100.0	    2,414.97 2999.96m	  1.21	  2999.96ms  2999.90ms	3000.02ms    89.99us
Idle	   DIAG idle wait				    15,137	82.8	    2,412.75 159.39ms	  1.21	   159.40ms   159.02ms	 159.78ms   537.77us
Idle	   gcs yield cpu				    81,731     100.0	    2,408.28  29.47ms	  1.21	    29.47ms    29.28ms	  29.66ms   269.22us
Idle	   gcs remote message				 2,348,801	 0.0	    2,142.07 911.98us	  1.08	   928.01us   800.07us	   1.06ms   180.93us
Idle	   LGWR worker group idle			   152,014	 0.0	    1,218.58   8.02ms	  0.61	     8.20ms	6.72ms	   9.67ms     2.09ms
Idle	   ASM cluster membership changes		       692	84.5	    1,211.26 1750.38m	  0.61	  1750.38ms  1750.38ms	1750.39ms     9.30us
Idle	   lreg timer					       404	99.8	    1,210.07 2995.21m	  0.61	  2995.25ms  2987.86ms	3002.64ms    10.45ms
Idle	   Streams AQ: waiting for time management		 0	 N/A	    1,210.01		  0.61
Idle	   OFS idle					       403     100.0	    1,209.01 3000.03m	  0.61	  3000.03ms  3000.02ms	3000.03ms     3.25us
Idle	   REPL Capture/Apply: RAC AQ qmn coordinat		20     100.0	    1,208.70  60.43 s	  0.61	    60.43 s    60.43 s	  60.44 s    12.44ms
Idle	   ASM background timer 			     4,689	 0.0	    1,208.34 257.70ms	  0.61	   258.15ms   247.30ms	 269.00ms    15.35ms
Idle	   heartbeat redo informer			     1,208	 0.0	    1,208.17 1000.14m	  0.61	  1000.14ms  1000.13ms	1000.15ms    11.88us
Idle	   SCM slave idle				    12,125	 0.0	    1,208.14  99.64ms	  0.61	    99.64ms    99.47ms	  99.81ms   235.47us
Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   pman timer					       402     100.0	    1,205.87 2999.68m	  0.61	  2999.68ms  2999.68ms	2999.68ms     6.09us
Idle	   PING 					     1,096	21.5	    1,200.61 1095.45m	  0.60	  1095.63ms  1081.64ms	1109.62ms    19.79ms
Idle	   shared server idle wait				 0	 N/A	    1,200.23		  0.60
Idle	   dispatcher timer					20     100.0	    1,200.12  60.01 s	  0.60	    60.01 s    60.01 s	  60.01 s   381.70us
Idle	   VKRM Idle						 0	 N/A	    1,200.09		  0.60
Idle	   AQPC idle						40     100.0	    1,200.03  30.00 s	  0.60	    30.00 s    30.00 s	  30.00 s   189.12us
Idle	   Data Guard: Gap Manager				20	 0.0	    1,200.01  60.00 s	  0.60	    60.00 s    60.00 s	  60.00 s    91.78us
Idle	   smon timer						 4     100.0	    1,200.00 300.00 s	  0.60	   300.00 s   300.00 s	 300.00 s    92.98us
Idle	   Data Guard: Timer					 2	 0.0	    1,200.00 600.00 s	  0.60	   600.00 s   600.00 s	 600.00 s    16.97us
Idle	   Streams AQ: qmn coordinator idle wait		84	 0.0	    1,176.04  14.00 s	  0.59	    14.00 s    14.00 s	  14.00 s     4.95us
Idle	   Streams AQ: qmn slave idle wait			42	 0.0	    1,176.04  28.00 s	  0.59	    28.00 s    28.00 s	  28.00 s   269.37ns
Idle	   PX Deq: Execute Reply			       131	 0.0		0.29   2.20ms	  0.00	     4.36ms	1.67ms	   7.04ms     3.80ms
Idle	   PX Deq Credit: send blkd			       123	 0.0		0.10 790.28us	  0.00	   792.03us   720.06us	 864.00us   101.78us
Idle	   RMA: IPC0 completion sync			     1,315	 0.0		0.04  28.82us	  0.00	    28.82us    24.81us	  32.83us     5.66us
Idle	   PX Deq: Parse Reply					30	 0.0		0.04   1.17ms	  0.00	     1.18ms	1.14ms	   1.21ms    55.03us
Idle	   SQL*Net message from client				36	 0.0		0.03	.97ms	  0.00	      .97ms   877.05us	   1.07ms   134.48us
Idle	   PX Deq Credit: need buffer				 1	 0.0		0.00 439.00us	  0.00	   439.00us   439.00us	 439.00us
Idle	   heartbeat monitor sleep				 1	 0.0		0.00   4.00us	  0.00	     4.00us	4.00us	   4.00us
			  --------------------------------------------------------------------------------------------------------------------

Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
AQ: RAC AQ Network	   12.1K					    0.4     85.8      8.2      3.8	1.2	 0.4	  0.1	0.0(2)
ASM IO for non-blocking p  41.7K				   0.8	   64.8     20.3      5.9      4.6	2.4	 0.9	  0.3	   0.1	 0.0(2)   0.0(1)
ASM background starting        1				 100.0
ASM file metadata operati   5677			  0.1	  37.4	    1.7     29.7     10.0      5.6	2.9	 4.4	  0.7	   1.2	    2.5      3.4      0.4   0.0(2)	0.1
AWR Flush		       9				 100.0
CGS wait for IPC msg	   12.3K					    5.5     82.7      6.9      3.3	1.0	 0.5	  0.1	0.0(3)
CSS initialization	       2					   50.0 									    50.0
CSS operation: action	       2												100.0
CSS operation: data query     38											 2.6	 50.0	  21.1	   26.3
CSS operation: data updat     39											 2.6	 59.0	  35.9		     2.6
CSS operation: query	       6				  83.3									  16.7
DFS lock handle 	     560								       0.2	0.5	35.0	 52.9	   8.4	    2.1      0.9
DLM cross inst call compl    482						     6.6      1.0      1.2	1.5	 8.1	 59.1	  20.7	    1.2      0.4
Disk file Mirror Read	    1683														   62.6     22.3      6.2      6.2	2.6	 0.2
Disk file operations I/O     563				   0.4	    2.7     14.0      7.6      4.8     45.8	20.8	  2.7	   0.4	    0.7      0.2
GCR CSS group query	      38					   81.6     15.8      2.6
GCR CSS group update	      36					   91.7 	      5.6      2.8
IMR slave acknowledgement   3630					    5.3     13.3      6.0     19.8     16.0	 4.3	  1.5	   0.4	   19.0      8.9      2.1      2.4	1.0	 0.1
IPC group service call	     934				   0.5	    0.6     12.2     38.5     37.9	7.0	 2.6	  0.4	   0.2
IPC send completion sync    1275					    0.9     82.9      6.4      3.2	1.9	 2.1	  2.2	   0.4
KJC: Wait for msg sends t   4432					 0.0(2)      0.1     44.2     41.7	8.4	 3.3	  1.4	   0.6	    0.2      0.1
KSV master wait 	    1738				   0.3	   10.8     31.4      6.0      6.3     16.1	 4.1	  1.0	   2.4	    9.4     11.0      1.2		0.1
LGWR all worker groups	    4555					 0.0(1) 	   0.0(2)      0.2	0.4	 0.4	  0.4	   1.3	   36.8     42.4      7.9      6.4	3.7	 0.1
LGWR any worker group	   52.7K				0.0(2)	    0.3      0.1      0.4      1.8	3.2	 6.1	 11.7	  22.6	   37.5      8.8      3.9      2.4	1.0	 0.1   0.0(1)
LGWR wait for redo copy      136				   3.7	    3.7      0.7      6.6     22.1     24.3	22.1	  9.6	   6.6	    0.7
LGWR worker group orderin   6580		       0.0(3)	   2.3	    1.4      1.8      7.0     11.2     12.7	15.2	 11.3	  10.6	   22.2      3.0      0.7      0.3	0.2   0.0(3)
PGA memory operation	     362				  20.4	   51.7     18.8      6.4      1.4	0.3		  0.6	   0.6
PX Deq: Join ACK	      30												 43.3	  20.0	   26.7     10.0
PX Deq: Signal ACK EXT	      30					    3.3     56.7      3.3      3.3     20.0	13.3
PX Deq: Slave Session Sta     60					   16.7     11.7      6.7     13.3     10.0	25.0	 10.0	   6.7
PX Deq: reap credit	   22.7K					    4.9     83.8      6.9      2.8	1.0	 0.4	  0.1	0.0(5)		  0.0(2)
SQL*Net break/reset to cl    120				  28.3	   20.0 	      3.3     33.3     10.8	 2.5	  0.8	   0.8
SQL*Net message to client    230			  0.9	  89.6	    3.5      2.2      1.7      1.7				   0.4
Sync ASM rebalance	     108					   34.3      8.3      1.9		0.9	 8.3	 10.2	   2.8					       13.9	16.7	  2.8
asynch descriptor resize      38				  86.8	   13.2
buffer busy waits	       1							    100.0
control file parallel wri    598														   26.6     58.2      7.5      5.2	1.8	 0.7
control file sequential r   5958					    9.0     16.4      1.3      1.0	3.5	 1.7	  0.3	0.0(1)	   58.2      5.6      1.4      1.4	0.3
db file async I/O submit    9846			  0.6	  92.6	    2.5      1.4      1.2      0.9	0.5	 0.2	  0.1	0.0(4)
db file parallel write	   38.9K					    0.1      0.8      5.6      5.7     11.0	12.9	 17.3	  20.6	   15.7      3.9      2.4      3.3	0.7   0.0(6)		0.0(1)
db file scattered read	      31														   48.4     51.6
db file sequential read     3.7M														   85.6      9.8      2.0      2.0	0.6 0.0(122)   0.0(2)
direct path write	      12														   66.7     16.7     16.7
direct path write temp	      60														   55.0     40.0      1.7      3.3
enq: AF - task serializat      1														  100.0
enq: CF - contention	     108											 3.7	 71.3	  22.2	    2.8
enq: CO - master slave de     10											20.0	 70.0	  10.0
enq: DW - contention	       2												 50.0	  50.0
enq: FB - contention	      18											27.8	 72.2
enq: HW - contention	       9											33.3	 66.7
enq: PS - contention	      44						     2.3	       2.3	4.5	36.4	 36.4	  15.9	    2.3
enq: RO - fast object reu    100											41.0	 41.0	  12.0	    3.0      3.0
enq: SM -  contention	       6											16.7	 33.3	  50.0
enq: TA - contention	       4												 75.0		   25.0
enq: TD - KTF dump entrie      2												100.0
enq: TM - contention	       4												 50.0								50.0
enq: TX - allocate ITL en      1													 100.0
enq: WF - contention	      34											23.5	 55.9	  14.7	    2.9 	      2.9
gc buffer busy acquire	       2					   50.0 			       50.0
gc buffer busy release	      25					    4.0 	      4.0     20.0     12.0		  4.0	   4.0		    32.0     20.0
Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
gc cr block 2-way	   10.1K						  0.0(1)      0.1      0.3	0.6	24.6	 49.6	   7.1	   16.4      1.3      0.1
gc cr block busy	      56												  1.8	  12.5	    7.1     50.0     17.9      8.9	1.8
gc cr block congested	       5													  20.0		    60.0     20.0
gc cr disk read 	      28										3.6	42.9	 32.1	  21.4
gc cr grant 2-way	    1.5M							      0.4      0.7	3.1	60.5	 29.9	   4.2	    0.9      0.3 0.0(436)   0.0(5)   0.0(1)
gc cr grant congested	     612												  0.2	  13.4	   53.8     26.8      5.9
gc cr multi block mixed       17												 47.1	  41.2	    5.9 	      5.9
gc current block 2-way	   21.4K							      0.2      0.5	0.7	37.6	 53.4	   6.4	    0.9      0.3   0.0(6)
gc current block busy	    5792							      0.2      0.5	0.7	34.9	 51.3	   9.0	    1.2      1.6      0.5      0.1
gc current block congeste      8													  12.5	   75.0     12.5
gc current grant 2-way	  271.3K							      0.4      0.8	3.1	59.1	 31.0	   4.4	    0.9      0.3  0.0(92)   0.0(3)
gc current grant busy	     244								       0.4     10.2	61.5	 20.5	   4.1	    1.2      2.0
gc current grant congeste    116													  18.1	   54.3     23.3      3.4      0.9
gc current grant read-mos  17.5K						  0.0(2)   0.0(1)   0.0(7)	0.1	 1.4	 43.0	  49.3	    5.1      0.8      0.1   0.0(5)
gc current multi block re     13												 61.5	  38.5
gc current retry	       1								     100.0
gc current split	      12											50.0	 25.0	   8.3		    16.7
gc index operation	      13					    7.7 					15.4	 38.5		   15.4 	     15.4      7.7
gcs log flush sync	     713					    6.5      4.2      6.0      7.4     11.9	15.7	 13.0	  11.5	   10.7     11.8      1.1      0.1
ges inquiry response	      40											15.0	 70.0	  12.5	    2.5
ges resource directory to      8				 100.0
kjctssqmg: quick message      56					   12.5     16.1	       5.4	1.8	12.5	 39.3	   8.9	    1.8      1.8
ksxr poll remote instance   1594					    1.8     84.6      6.6      5.0	1.4	 0.6	  0.1	   0.1
latch free		    1266					    5.8      1.0      2.8     21.5     35.2	23.1	  8.2	   2.0	    0.2      0.2
latch: MGA heap latch	       2								      50.0     50.0
latch: MGA shared context      2									       50.0	50.0
latch: MGA shared context      5									       20.0	20.0	 40.0		   20.0
latch: cache buffers chai     26					   19.2     11.5     23.1     11.5     11.5	 3.8	 11.5		    7.7
latch: cache buffers lru     146					   12.3      2.1      8.2     21.9     20.5	13.7	 17.1	   4.1
latch: checkpoint queue l      2					   50.0 							  50.0
latch: enqueue hash chain    181					   12.2      3.9      5.5     10.5     16.0	24.9	 18.2	   6.6	    1.7      0.6
latch: gc element	     161					    6.2      3.7      9.9     19.3     21.7	18.0	 12.4	   3.1	    4.3      1.2
latch: gcs resource hash     274					   10.6      3.6      9.1     26.6     21.9	13.1	  8.8	   4.4	    1.1      0.7
latch: ges resource hash      14					    7.1      7.1	      14.3     28.6	28.6	  7.1	   7.1
latch: kjci process conte      2							     50.0			50.0
latch: messages 	      12					   16.7 	      8.3     16.7     25.0	16.7	 16.7
latch: object queue heade     17						     5.9		       29.4	35.3	 17.6	   5.9	    5.9
latch: redo allocation	     174					   12.6      2.3      8.6     17.2     24.7	16.7	  7.5	   7.5	    2.3 	      0.6
latch: redo writing	       3									       33.3	33.3		  33.3
latch: undo global data        3								      66.7		33.3
libcache interrupt action   2362			  2.5	  92.6	    2.1      1.2      0.9      0.2	0.3   0.0(1)   0.0(1)	0.0(1)
library cache lock	     140						     0.7			0.7	17.9	 65.7	  12.9	    1.4      0.7
library cache pin	     140										0.7	21.4	 62.9	  15.0
log file parallel write   171.3K														   31.3     55.8      7.1      3.9	1.7	 0.2   0.0(8)
log file sequential read     523						     1.7     15.1      1.9     12.8	 7.5	  0.8		   19.1      5.2      2.3     15.3     17.6	 0.8
log file sync		      10													  10.0	   10.0     50.0     30.0
oracle thread bootstrap        9																	     100.0
os thread creation	       9													  66.7	   33.3
reliable message	      48												 25.0	  22.9	   45.8      2.1				 2.1		   2.1
row cache lock		      55											 5.5	 34.5	  58.2		     1.8
row cache mutex 	       5									      100.0
undo_retention publish re      4				  75.0	   25.0
			  --------------------------------------------------------------------------------------------------------------------


System Statistics			 DB/Inst: P30DB/p30db1	Snaps: 141-142

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	       Reads	    Reads	Writes	   Size (k)	 Changes	Calls	     Execs	 Parses     Logons	   Txns
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   5,345,958	2,070,440      300,804	    296,909	 891,622	  197	   722,307	  1,458 	19	108,139
   2	   5,252,362	1,633,034      256,076	    235,923	 711,639	  300	   574,126	  1,450 	21	 85,851
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	  10,598,320	3,703,474      556,880	    532,832    1,603,261	  497	 1,296,433	  2,908 	40	193,990
 Avg	   5,299,160	1,851,737      278,440	    266,416	 801,631	  249	   648,217	  1,454 	20	 96,995
 Std	      66,182	  309,293	31,627	     43,124	 127,267	   73	   104,780	      6 	 1	 15,760
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Second		 DB/Inst: P30DB/p30db1	Snaps: 141-142

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	     Reads/s	  Reads/s     Writes/s	 Size (k)/s    Changes/s      Calls/s	   Execs/s     Parses/s   Logons/s	 Txns/s
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	    8,844.99	  3,425.6	 497.7	      491.2	 1,475.2	  0.3	   1,195.1	    2.4       0.03	  178.9
   2	    8,690.27	  2,701.9	 423.7	      390.3	 1,177.4	  0.5	     949.9	    2.4       0.03	  142.0
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   17,535.26	  6,127.5	 921.4	      881.6	 2,652.6	  0.8	   2,145.0	    4.8       0.07	  321.0
 Avg	    8,767.63	  3,063.8	 460.7	      440.8	 1,326.3	  0.4	   1,072.5	    2.4       0.03	  160.5
 Std	      109.41	    511.7	  52.3	       71.3	   210.6	  0.1	     173.4	    0.0       0.00	   26.1
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Transaction	 DB/Inst: P30DB/p30db1	Snaps: 141-142

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	    Reads/tx	 Reads/tx    Writes/tx	Size (k)/tx   Changes/tx     Calls/tx	  Execs/tx    Parses/tx  Logons/tx
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ----------
   1	       49.44	     19.1	   2.8		2.7	     8.2	  0.0	       6.7	    0.0       0.00
   2	       61.18	     19.0	   3.0		2.7	     8.3	  0.0	       6.7	    0.0       0.00
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~
 Avg	       55.31	     19.1	   2.9		2.7	     8.3	  0.0	       6.7	    0.0       0.00
			  --------------------------------------------------------------------------------------------------------------------


SysStat and Global Messaging  - RAC	 DB/Inst: P30DB/p30db1	Snaps: 141-142

	   Blocks Received	      Blocks Served	       CPU (seconds)						Messages				       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir	  Lost	  Failure
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	    16,228	 5,162	      10,949	   5,001	  N/A	       0	2,690,998	   2,346      3,243,393       1,829    1,150,356   1,374,495	     0		0
   2	    10,961	 5,002	      16,255	   5,165	  N/A	       0	3,243,764	   1,835      2,691,944       2,340	 742,230     826,947	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	    27,189	10,164	      27,204	  10,166	    0	       0	5,934,762	   4,181      5,935,337       4,169    1,892,586   2,201,442	     0		0
 Avg	    13,595	 5,082	      13,602	   5,083	  N/A	       0	2,967,381	   2,091      2,967,669       2,085	 946,293   1,100,721	     0		0
 Std	     3,724	   113	       3,752	     116	  N/A	       0	  390,865	     361	389,933 	361	 288,589     387,175	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Sec)- RACDB/Inst: P30DB/p30db1  Snaps: 141-1

     Blocks Received Per Second   Blocks Served per Second   CPU seconds per Second				     Messages Per Second				  GC Blks     GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent    GES Sent  Sent Direct  Sent Indir	Lost/s	   Fail/s
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	     26.85	  8.54	       18.12	    8.27	  N/A	    0.00	 4,452.31	    3.88       5,366.26        3.03	 1,903.3    2,274.13	     0		0
   2	     18.14	  8.28	       26.89	    8.55	  N/A	    0.00	 5,366.95	    3.04       4,453.94        3.87	 1,228.1    1,368.22	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	     44.99	 16.82	       45.01	   16.82	 0.00	    0.00	 9,819.26	    6.92       9,820.20        6.90	 3,131.3    3,642.35	     0		0
 Avg	     22.49	  8.41	       22.50	    8.41	  N/A	    0.00	 4,909.63	    3.46       4,910.10        3.45	 1,565.7    1,821.17	     0		0
 Std	      6.16	  0.19		6.21	    0.19	  N/A	    0.00	   646.75	    0.60	 645.11        0.60	   477.5      640.57	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Tx)- RACDB/Inst: P30DB/p30db1  Snaps: 141-14

	Blocks Received per Tx	      Blocks Served	    CPU (seconds) per Tx				Messages per Transaction			       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   ------	--------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir   Lost/T	 Fail/Tx
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   ------	--------
   1	      0.15	  0.05		0.10	    0.05	  N/A	    0.00	    24.88	    0.02	  29.99        0.02	    10.6       12.71	  0.0	     0.0
   2	      0.13	  0.06		0.19	    0.06	  N/A	    0.00	    37.78	    0.02	  31.36        0.03	     8.6	9.63	  0.0	     0.0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~	~~~~~~~~
 Avg	      0.14	  0.05		0.15	    0.05	  N/A	    0.00	    31.33	    0.02	  30.67        0.02	     9.6       11.17	  0.0	     0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Efficiency Percentages	 DB/Inst: P30DB/p30db1	Snaps: 141-142

	       Buffer Access
       -----------------------------
  I#	   Local % Remote %   Disk %	Locality %
----   ----------- -------- --------   -----------
   1	     60.87     0.40    38.73	     47.34
   2	     68.60     0.30    31.09	     58.49
			  --------------------------------------------------------------------------------------------------------------------

Global Latency Characteristics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

				CR Blocks				  CU Blocks
		 ---------------------------------------   ---------------------------------------
	GE Get	   Receive     Build	 Flush Log Flush     Receive	   Pin	   Flush Log Flush
  I# Time (us)	 Time (us) Time (us) Time (us) CR Srvd %   Time (us) Time (us) Time (us) CU Srvd %
---- ---------	 --------- --------- --------- ---------   --------- --------- --------- ---------
   1	    42	      1186	 575	  7813	     0.6	 679	 10000	    3714       0.3
   2	    34	      1082	 481	  4667	     0.6	 652	   N/A	    3462       0.3
			  --------------------------------------------------------------------------------------------------------------------

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

	     Queue Time (us)	    Process Time (us)	      % Messages Sent
       --------------------------   -----------------	--------------------------
  I#	   Sent  on ksxp Received   GCS msgs GES msgs	  Direct Indirect Flow Ctr
----   -------- -------- --------   -------- --------	-------- -------- --------
   1	   1118      952       11	  42	   34	    45.5     54.3      0.2
   2	    896      919       12	  35	   35	    47.3     52.7      0.0
			  --------------------------------------------------------------------------------------------------------------------


Global CR Server Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

			   Block Requests					   Results			 Fairness      Light		   Total
       -----------------------------------------------------   ----------------------------------------------	----------   --------	--------------------------
  I#		CR	    CU	      Data     Undo	  TX	   Current Private	 Zero  Dsk Rd	 Fail	 Down Conv	Works	   Flushes     Builds Erro
----   ----------- ----------- ----------- -------- --------   ----------- ------- ---------- ------- -------	----------   --------	---------- ---------- ----
   1	     3,506	 1,492	     3,506	  0    1,474	     4,997	 1	    0	    0	    0	     3,445	1,523		32	3,506	 0
   2	     5,092	   103	     5,092	  0	  34	     5,163	 1	    3	   28	    0	     5,049	1,863		30	5,092	 0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~ ~~~~~~~ ~~~~~~~~~~ ~~~~~~~ ~~~~~~~	~~~~~~~~~~   ~~~~~~~~	~~~~~~~~~~ ~~~~~~~~~~ ~~~~
 Sum	     8,598	 1,595	     8,598	  0    1,508	    10,160	 2	    3	   28	    0	     8,494	3,386		62	8,598	 0
 Avg	     4,299	   798	     4,299	  0	 754	     5,080	 1	    2	   14	    0	     4,247	1,693		31	4,299	 0
 Std	     1,121	   982	     1,121	  0    1,018	       117	 0	    2	   20	    0	     1,134	  240		 1	1,121	 0
			  --------------------------------------------------------------------------------------------------------------------

Global Current Server Statistics	 DB/Inst: P30DB/p30db1	Snaps: 141-142

  I#	    Pins % <100us   % <1ms  % <10ms % <100ms	% <1s	% <10s	   Flushes % <100us   % <1ms  % <10ms % <100ms	  % <1s   % <10s
---- ----------- -------- -------- -------- -------- -------- -------- ----------- -------- -------- -------- -------- -------- --------
   1	       2    50.00     0.00    50.00	0.00	 0.00	  0.00		35     0.00	0.00	82.86	 17.14	   0.00     0.00
   2	       0     0.00     0.00     0.00	0.00	 0.00	  0.00		52     0.00	0.00	94.23	  5.77	   0.00     0.00
 ~~~ ~~~~~~~~~~~						       ~~~~~~~~~~~
 Sum	       2								87
 Avg	       1								44
 Std	       1								12
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Transfer Statistics	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested  (Cngst) - Block Transfer impacted by Remote System Load
-> All - average time of All blocks (Immed,Busy,Cngst) in us
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block		       CR Blocks		       Current Blocks		       CR Avg Time (us) 	  Current Avg Time (us)
---------   ------------   --------------------------------   --------------------------------	 ---------------------------   ---------------------------
Dest  Src   Class	      Received %Immed  %Busy %Cngst	 Received %Immed  %Busy %Cngst	    All  Immed	 Busy  Cngst	  All  Immed   Busy  Cngst
---- ----   ------------   ----------- ------ ------ ------   ----------- ------ ------ ------	 ------ ------ ------ ------   ------ ------ ------ ------
   1	2   data block		 5,089	 99.7	 0.2	0.1	   16,157   78.9   21.1    0.0	   1184   1172	 4840	7293	  689	 655	813   3298
	2   others		    40	 97.5	 2.5	0.0	       71    9.9   90.1    0.0	    497    414	 3755	 N/A	  607	 375	633    N/A
	2   undo header 	    32	 50.0	50.0	0.0		2    0.0  100.0    0.0	   3471    395	 6548	 N/A	  427	 N/A	427    N/A

   2	1   data block		 3,509	 99.8	 0.2	0.1	   10,933   79.0   20.9    0.0	   1261   1250	 6755	3995	  661	 638	747   2700
	1   undo header 	 1,474	 98.2	 1.8	0.0		1    0.0  100.0    0.0	    657    506	 9097	 N/A	  364	 N/A	364    N/A
	1   others		    18	100.0	 0.0	0.0	       40   40.0   60.0    0.0	    516    516	  N/A	 N/A	  504	 557	468    N/A
			  --------------------------------------------------------------------------------------------------------------------

Global Cache Transfer (Immediate)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block	     Lost Blocks	 Immediate CR Blocks	     Immediate Current Blocks	   Immed CR Avg Time (us)   Immed Current Avg Time (us)
---------   ------------   --------------   ----------------------------   ----------------------------   -----------------------   -----------------------
Dest  Src   Class	     Count Time(u      Received  %2-hop   %3-hop      Received	%2-hop	 %3-hop     Total   2-hop   3-hop     Total   2-hop   3-hop
---- ----   ------------   ------- ------   ----------- ------- --------   ----------- ------- --------   ------- ------- -------   ------- ------- -------
   1	2   data block		 0    N/A	  5,074   100.0      0.0	12,745	 100.0	    0.0      1172    1172     N/A	655	655	N/A
	2   others		 0    N/A	     39   100.0      0.0	     7	 100.0	    0.0       414     414     N/A	375	375	N/A
	2   undo header 	 0    N/A	     16   100.0      0.0	     0	   N/A	    N/A       395     395     N/A	N/A	N/A	N/A
	2   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A

   2	1   data block		 0    N/A	  3,501   100.0      0.0	 8,641	 100.0	    0.0      1250    1250     N/A	638	638	N/A
	1   undo header 	 0    N/A	  1,448   100.0      0.0	     0	   N/A	    N/A       506     506     N/A	N/A	N/A	N/A
	1   others		 0    N/A	     18   100.0      0.0	    16	 100.0	    0.0       516     516     N/A	557	557	N/A
	1   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A
			  --------------------------------------------------------------------------------------------------------------------


Cluster Interconnect			 DB/Inst: P30DB/p30db1	Snaps: 141-142

					 Begin					  End (if different from Begin)
		  --------------------------------------------------   --------------------------------------------------
  I# NAME	  IP Address	  Pub Source			       IP Address      Pub Source
---- ----------   --------------- --- ------------------------------   --------------- --- ------------------------------
   1 fg-priv:1	  169.254.22.248  N
   2 fg-priv:1	  169.254.31.173  N
			  --------------------------------------------------------------------------------------------------------------------

Ping Statistics 			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Latency of the roundtrip of a message from  Src Instance to the Target instances

 Instance#	       500 bytes		    8 Kbytes
-----------   --------------------------   --------------------------
		    Ping    Avg      Std	 Ping	 Avg	  Std
 Src Target	   Count Time(us)    Dev	Count Time(us)	  Dev
---- ------   ---------- -------- ------   ---------- -------- ------
   1	  1	      55      726    0.4	   60	   711	  0.3
	  2	      55      806    0.3	   60	   873	  0.4

   2	  1	      55      826    0.5	   60	   948	  0.7
	  2	      55      444    0.2	   60	   458	  0.2
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142

				   Sent (MB)							     Received (MB)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	    928.7      136.0	    2.0      773.3	  1.0	    16.3	727.8	   208.1	1.2	 506.6	      1.0	10.9
   2	    728.2      208.3	    1.2      506.8	  1.0	    10.9	929.6	   136.2	2.0	 774.1	      1.0	16.3
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	  1,656.9      344.3	    3.3    1,280.1	  2.0	    27.2      1,657.5	   344.3	3.3    1,280.6	      2.0	27.2
 Avg	    828.5      172.2	    1.6      640.0	  1.0	    13.6	828.7	   172.2	1.6	 640.3	      1.0	13.6
 Std	    141.7	51.1	    0.6      188.4	  0.0	     3.8	142.7	    50.8	0.6	 189.1	      0.0	 3.8
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 141-1

				  Sent (MB/s)							    Received (MB/s)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	      1.5	 0.2	    0.0        1.3	  0.0	     0.0	  1.2	     0.3	0.0	   0.8	      0.0	 0.0
   2	      1.2	 0.3	    0.0        0.8	  0.0	     0.0	  1.5	     0.2	0.0	   1.3	      0.0	 0.0
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	      2.7	 0.6	    0.0        2.1	  0.0	     0.0	  2.7	     0.6	0.0	   2.1	      0.0	 0.0
 Avg	      1.4	 0.3	    0.0        1.1	  0.0	     0.0	  1.4	     0.3	0.0	   1.1	      0.0	 0.0
 Std	      0.2	 0.1	    0.0        0.3	  0.0	     0.0	  0.2	     0.1	0.0	   0.3	      0.0	 0.0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> null means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	  4,829.6    4,526,207	     0	     0	     0	     0	       3,901.4	  4,797,153	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	  1,383.0    2,737,436	     0	     0	     0	     0	       1,271.2	  3,282,515	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.3	   763	     0	     0	     0	     0		   0.1		670	  0	  0	  0	  0
       fg-pub:1   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:4   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      2.0	 3,067	     0	     0	     0	     0		   1.2	      3,109	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     28.9	74,055	     0	     0	     0	     0		  28.9	     74,055	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	  3,955.7    4,872,655	     0	     0	     0	     0	       4,769.7	  4,447,789	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	  1,266.1    3,105,598	     0	     0	     0	     0	       1,385.0	  2,946,120	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.1	   670	     0	     0	     0	     0		   0.3		766	  0	  0	  0	  0
       fg-pub:1   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      2.0	 3,079	     0	     0	     0	     0		   1.2	      3,113	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      5.2	32,049	     0	     0	     0	     0		   5.2	     32,049	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							 11,472.9   15,355,579	     0	     0	     0	     0	      11,364.1	 15,587,339	  0	  0	  0	  0
 Avg							    674.9      903,269	     0	     0	     0	     0		 668.5	    916,902	  0	  0	  0	  0
 Std							  1,473.6    1,723,077	     0	     0	     0	     0	       1,455.8	  1,731,410	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 141-1
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> Blank  means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	      8.0	 7,489	     0	     0	     0	     0		   6.5	      7,937	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	      2.3	 4,529	     0	     0	     0	     0		   2.1	      5,431	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	     1	     0	     0	     0	     0		   0.0		  1	  0	  0	  0	  0
       fg-pub:1   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:4   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   123	     0	     0	     0	     0		   0.0		123	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	      6.5	 8,062	     0	     0	     0	     0		   7.9	      7,359	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	      2.1	 5,138	     0	     0	     0	     0		   2.3	      4,874	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	     1	     0	     0	     0	     0		   0.0		  1	  0	  0	  0	  0
       fg-pub:1   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	    53	     0	     0	     0	     0		   0.0		 53	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							     19.0	25,406	     0	     0	     0	     0		  18.8	     25,790	  0	  0	  0	  0
 Avg							      1.1	 1,494	     0	     0	     0	     0		   1.1	      1,517	  0	  0	  0	  0
 Std							      2.4	 2,851	     0	     0	     0	     0		   2.4	      2,865	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Dynamic Remastering Statistics		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Affinity Objects - Affinity objects remastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot

				   Counts per Ops					 Time per Ops (seconds) 			 Affinity Objects		  Read Mostly Objects
		---------------------------------------------------   -----------------------------------------------------------   -------------------------	--------------------------------------
     Remaster	  Remastered Replay Locks Replay Locks	  Resources														    Begin
  I#	  Ops	     Objects	 Received	  Sent	    Cleaned    Remaster    Freeze   Cleanup    Replay  Fixwrite      Sync	   Begin	  End	       Begin (persistent)	   End
---- --------	------------ ------------ ------------ ------------   --------- --------- --------- --------- --------- ---------   ------------ ------------	------------ ------------ ------------
   1	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       1	    1		   1		1	     1
   2	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       5	    5		   1		1	     1
 ~~~ ~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~   ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~   ~~~~~~~~~~~~ ~~~~~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~
 Avg	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       3	    3		   1		1	     1
 Max				      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       5	    5		   1		1	     1
			  --------------------------------------------------------------------------------------------------------------------


SQL ordered by Elapsed Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Captured SQL account for   98.3% of Total DB Time (s):	   18,247
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      18,247

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	  Elapsed (s)	  CPU (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	DB time   DB CPU  IO Wait     Gets    Reads  Cluster	Execs
-------------	------------- ----------- ----------- -------------- ------------ ------------ ----------- ------------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	    15,146.58	   949.58   13,828.20	   6,581,630	3,138,036    1,095,455	    827.73    1,095,430 	   0.01        0.00	   0.01 	   6.0		2.9	     1.0	0.00	   83.0     67.9      0.8     62.1     84.7	82.3	 84.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     2,767.21	   203.04    2,462.01	   1,399,058	  553,553      579,768	    172.87	193,256 	   0.01        0.00	   0.01 	   7.2		2.9	     3.0	0.00	   15.2     14.5      0.2     13.2     14.9	17.2	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

5q1jyzmr30cf9	       568.57	    45.32      507.38	     276,356	  123,135	     1	     34.18	      1 	 568.57       45.32	 507.38      276,356.0	  123,135.0	     1.0       34.18	    3.1      3.2      0.0      2.6	3.3	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5yrdyuwb16swu	       568.52	    45.09      508.78	     277,964	  124,030	     1	     32.82	      1 	 568.52       45.09	 508.78      277,964.0	  124,030.0	     1.0       32.82	    3.1      3.2      0.0      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	       568.42	    45.12      508.60	     273,596	  123,883	     1	     33.06	      1 	 568.42       45.12	 508.60      273,596.0	  123,883.0	     1.0       33.06	    3.1      3.2      0.0      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

cjr4y9wb6w69d	       568.41	    33.30      546.17	     301,309	  134,333	     1	      1.33	      1 	 568.41       33.30	 546.17      301,309.0	  134,333.0	     1.0	1.33	    3.1      2.4      0.0      2.8	3.6	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	       568.40	    45.02      507.81	     274,142	  123,922	     1	     33.64	      1 	 568.40       45.02	 507.81      274,142.0	  123,922.0	     1.0       33.64	    3.1      3.2      0.0      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bz8m3my689x30	       568.34	    44.98      508.05	     273,136	  123,673	     1	     33.65	      1 	 568.34       44.98	 508.05      273,136.0	  123,673.0	     1.0       33.65	    3.1      3.2      0.0      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	       568.32	    33.12      546.28	     299,678	  134,152	     1	      1.29	      1 	 568.32       33.12	 546.28      299,678.0	  134,152.0	     1.0	1.29	    3.1      2.4      0.0      2.8	3.6	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

d3r94djtpj7r9	       568.30	    44.79      508.30	     274,280	  123,953	     1	     33.26	      1 	 568.30       44.79	 508.30      274,280.0	  123,953.0	     1.0       33.26	    3.1      3.2      0.0      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by CPU Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Captured SQL account for   83.0% of Total CPU Time (s):	     1,398
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		1,398

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	    CPU (s)   Elapsed (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs       CPU (s)	Elapsed (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	 DB CPU  DB time  IO Wait     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     949.58	15,146.58   13,828.20	   6,581,630	3,138,036    1,095,455	    827.73    1,095,430 	 0.00	       0.01	   0.01 	   6.0		2.9	     1.0	0.00	   67.9     83.0     84.7     62.1     84.7	82.3	 84.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     203.04	 2,767.21    2,462.01	   1,399,058	  553,553      579,768	    172.87	193,256 	 0.00	       0.01	   0.01 	   7.2		2.9	     3.0	0.00	   14.5     15.2     15.1     13.2     14.9	17.2	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

df0pz79un9sgm	      52.77	   568.11      476.45	     225,929	  100,552	     1	     58.00	      1 	52.77	     568.11	 476.45      225,929.0	  100,552.0	     1.0       58.00	    3.8      3.1      2.9      2.1	2.7	 5.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

bqwwfnsg2f57w	      51.76	   567.53      476.33	     221,406	  100,305	     1	     58.14	      1 	51.76	     567.53	 476.33      221,406.0	  100,305.0	     1.0       58.14	    3.7      3.1      2.9      2.1	2.7	 5.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

32m2a739zbzz3	      45.38	   568.02      507.77	     274,056	  124,024	     1	     33.58	      1 	45.38	     568.02	 507.77      274,056.0	  124,024.0	     1.0       33.58	    3.2      3.1      3.1      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	      45.32	   568.57      507.38	     276,356	  123,135	     1	     34.18	      1 	45.32	     568.57	 507.38      276,356.0	  123,135.0	     1.0       34.18	    3.2      3.1      3.1      2.6	3.3	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	      45.12	   568.42      508.60	     273,596	  123,883	     1	     33.06	      1 	45.12	     568.42	 508.60      273,596.0	  123,883.0	     1.0       33.06	    3.2      3.1      3.1      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

1zv2tsmss11cb	      45.11	   568.25      507.23	     275,473	  123,445	     1	     34.08	      1 	45.11	     568.25	 507.23      275,473.0	  123,445.0	     1.0       34.08	    3.2      3.1      3.1      2.6	3.3	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5yrdyuwb16swu	      45.09	   568.52      508.78	     277,964	  124,030	     1	     32.82	      1 	45.09	     568.52	 508.78      277,964.0	  124,030.0	     1.0       32.82	    3.2      3.1      3.1      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	      45.02	   568.40      507.81	     274,142	  123,922	     1	     33.64	      1 	45.02	     568.40	 507.81      274,142.0	  123,922.0	     1.0       33.64	    3.2      3.1      3.1      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by User I/O Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	      16,330
-> Captured PL/SQL account for	 99.8% of Total User I/O Wait Time (s): 	 16,330

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	 IOWait (s)   Elapsed (s)     CPU (s)		Gets	    Reads	  Rows Cluster (s)	  Execs    IOWait (s)	Elapsed (s)	CPU (s) 	  Gets	      Reads	    Rows Cluster (s)	IO Wait  DB time   DB CPU     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	  13,828.20	15,146.58      949.58	   6,581,630	3,138,036    1,095,455	    827.73    1,095,430 	 0.01	       0.01	   0.00 	   6.0		2.9	     1.0	0.00	   84.7     83.0     67.9     62.1     84.7	82.3	 84.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	   2,462.01	 2,767.21      203.04	   1,399,058	  553,553      579,768	    172.87	193,256 	 0.01	       0.01	   0.00 	   7.2		2.9	     3.0	0.00	   15.1     15.2     14.5     13.2     14.9	17.2	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

5yrdyuwb16swu	     508.78	   568.52	45.09	     277,964	  124,030	     1	     32.82	      1        508.78	     568.52	  45.09      277,964.0	  124,030.0	     1.0       32.82	    3.1      3.1      3.2      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	     508.60	   568.42	45.12	     273,596	  123,883	     1	     33.06	      1        508.60	     568.42	  45.12      273,596.0	  123,883.0	     1.0       33.06	    3.1      3.1      3.2      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	     507.81	   568.40	45.02	     274,142	  123,922	     1	     33.64	      1        507.81	     568.40	  45.02      274,142.0	  123,922.0	     1.0       33.64	    3.1      3.1      3.2      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

32m2a739zbzz3	     507.77	   568.02	45.38	     274,056	  124,024	     1	     33.58	      1        507.77	     568.02	  45.38      274,056.0	  124,024.0	     1.0       33.58	    3.1      3.1      3.2      2.6	3.3	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	     507.38	   568.57	45.32	     276,356	  123,135	     1	     34.18	      1        507.38	     568.57	  45.32      276,356.0	  123,135.0	     1.0       34.18	    3.1      3.1      3.2      2.6	3.3	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

1zv2tsmss11cb	     507.23	   568.25	45.11	     275,473	  123,445	     1	     34.08	      1        507.23	     568.25	  45.11      275,473.0	  123,445.0	     1.0       34.08	    3.1      3.1      3.2      2.6	3.3	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

df0pz79un9sgm	     476.45	   568.11	52.77	     225,929	  100,552	     1	     58.00	      1        476.45	     568.11	  52.77      225,929.0	  100,552.0	     1.0       58.00	    2.9      3.1      3.8      2.1	2.7	 5.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

bqwwfnsg2f57w	     476.33	   567.53	51.76	     221,406	  100,305	     1	     58.14	      1        476.33	     567.53	  51.76      221,406.0	  100,305.0	     1.0       58.14	    2.9      3.1      3.7      2.1	2.7	 5.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Gets (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Buffer Gets:	   10,598,320
-> Captured SQL account for   81.4% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id		  Gets	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	    Gets	Reads	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	   Gets    Reads  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	-------------- ------------ ------------- ----------- ----------- ------------ ----------- ------------   -------------- ------------ ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     6,581,630	  3,138,036	15,146.58      949.58	13,828.20    1,095,455	    827.73    1,095,430 	     6.0	  2.9	       0.01	   0.00        0.01	     1.0	0.00	   62.1     84.7     83.0     67.9     84.7	82.3	 84.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     1,399,058	    553,553	 2,767.21      203.04	 2,462.01      579,768	    172.87	193,256 	     7.2	  2.9	       0.01	   0.00        0.01	     3.0	0.00	   13.2     14.9     15.2     14.5     15.1	17.2	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

5pj6mtazkhmdd	       580,996		  1	     1.48	 1.41	     0.01	     1	      0.00	      1        580,996.0	  1.0	       1.48	   1.41        0.01	     1.0	0.00	    5.5      0.0      0.0      0.1	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

3kqrku32p6sfn	       580,976		  0	     1.73	 1.66	     0.00	     0	      0.00	      1        580,976.0	  0.0	       1.73	   1.66        0.00	     0.0	0.00	    5.5      0.0      0.0      0.1	0.0	 0.0	  0.0
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ

cjr4y9wb6w69d	       301,309	    134,333	   568.41	33.30	   546.17	     1	      1.33	      1        301,309.0    134,333.0	     568.41	  33.30      546.17	     1.0	1.33	    2.8      3.6      3.1      2.4	3.3	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	       299,678	    134,152	   568.32	33.12	   546.28	     1	      1.29	      1        299,678.0    134,152.0	     568.32	  33.12      546.28	     1.0	1.29	    2.8      3.6      3.1      2.4	3.3	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5yrdyuwb16swu	       277,964	    124,030	   568.52	45.09	   508.78	     1	     32.82	      1        277,964.0    124,030.0	     568.52	  45.09      508.78	     1.0       32.82	    2.6      3.3      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

g679149chxm60	       276,829	    123,822	   568.00	45.01	   507.95	     1	     33.04	      1        276,829.0    123,822.0	     568.00	  45.01      507.95	     1.0       33.04	    2.6      3.3      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5q1jyzmr30cf9	       276,356	    123,135	   568.57	45.32	   507.38	     1	     34.18	      1        276,356.0    123,135.0	     568.57	  45.32      507.38	     1.0       34.18	    2.6      3.3      3.1      3.2	3.1	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

1zv2tsmss11cb	       275,473	    123,445	   568.25	45.11	   507.23	     1	     34.08	      1        275,473.0    123,445.0	     568.25	  45.11      507.23	     1.0       34.08	    2.6      3.3      3.1      3.2	3.1	 3.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Reads (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Disk Reads:	   3,703,474
-> Captured SQL account for   99.7% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Reads	       Gets   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	 Reads		 Gets	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	  Reads     Gets  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	------------ -------------- ------------- ----------- ----------- ------------ ----------- ------------   ------------ -------------- ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   3,138,036	  6,581,630	15,146.58      949.58	13,828.20    1,095,455	    827.73    1,095,430 	   2.9		  6.0	       0.01	   0.00        0.01	     1.0	0.00	   84.7     62.1     83.0     67.9     84.7	82.3	 84.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     553,553	  1,399,058	 2,767.21      203.04	 2,462.01      579,768	    172.87	193,256 	   2.9		  7.2	       0.01	   0.00        0.01	     3.0	0.00	   14.9     13.2     15.2     14.5     15.1	17.2	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

cjr4y9wb6w69d	     134,333	    301,309	   568.41	33.30	   546.17	     1	      1.33	      1      134,333.0	    301,309.0	     568.41	  33.30      546.17	     1.0	1.33	    3.6      2.8      3.1      2.4	3.3	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	     134,152	    299,678	   568.32	33.12	   546.28	     1	      1.29	      1      134,152.0	    299,678.0	     568.32	  33.12      546.28	     1.0	1.29	    3.6      2.8      3.1      2.4	3.3	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5yrdyuwb16swu	     124,030	    277,964	   568.52	45.09	   508.78	     1	     32.82	      1      124,030.0	    277,964.0	     568.52	  45.09      508.78	     1.0       32.82	    3.3      2.6      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

32m2a739zbzz3	     124,024	    274,056	   568.02	45.38	   507.77	     1	     33.58	      1      124,024.0	    274,056.0	     568.02	  45.38      507.77	     1.0       33.58	    3.3      2.6      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

d3r94djtpj7r9	     123,953	    274,280	   568.30	44.79	   508.30	     1	     33.26	      1      123,953.0	    274,280.0	     568.30	  44.79      508.30	     1.0       33.26	    3.3      2.6      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	     123,922	    274,142	   568.40	45.02	   507.81	     1	     33.64	      1      123,922.0	    274,142.0	     568.40	  45.02      507.81	     1.0       33.64	    3.3      2.6      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	     123,883	    273,596	   568.42	45.12	   508.60	     1	     33.06	      1      123,883.0	    273,596.0	     568.42	  45.12      508.60	     1.0       33.06	    3.3      2.6      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

g679149chxm60	     123,822	    276,829	   568.00	45.01	   507.95	     1	     33.04	      1      123,822.0	    276,829.0	     568.00	  45.01      507.95	     1.0       33.04	    3.3      2.6      3.1      3.2	3.1	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by UnOptimized Read Requests (Global)DB/Inst: P30DB/p30db1	Snaps:
-> Total Physical Read Requests:       3,703,331
-> Captured SQL account for    3.5% of Total
-> Total UnOptimized Read Requests:	  3,703,331
-> Captured SQL account for    3.5% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

								       Total													 Per Execution									    Percentage of Total
		------------------------------------------------------------------------------------------------------------------   -----------------------------------------------------------------------------------------------------   -----------------------------------------------------------------
   SQL Id	 UnOptimized	 Requests	 Reads	 Elapsed (s)	 CPU (s)  IOWait (s)	     Rows Cluster (s)	     Execs    UnOptimized     Requests	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)   UnOptimized Requests  Reads DB time DB CPU IO Wait Cluster  Execs
-------------	------------ ------------ ------------ ------------- ----------- ----------- ------------ ----------- ------------   ------------ ------------ ------------ ------------- ----------- ----------- ------------ -----------   ----------- -------- ------ ------- ------ ------- ------- ------
cjr4y9wb6w69d	     134,333	  134,333      134,333	      568.41	   33.30      546.17		1	 1.33		 1	134,333.0    134,333.0	  134,333.0	   568.41	33.30	   546.17	   1.0	      1.33	     3.6      3.6    3.6     3.1    2.4     3.3     0.1    0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	     134,152	  134,152      134,152	      568.32	   33.12      546.28		1	 1.29		 1	134,152.0    134,152.0	  134,152.0	   568.32	33.12	   546.28	   1.0	      1.29	     3.6      3.6    3.6     3.1    2.4     3.3     0.1    0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5yrdyuwb16swu	     124,030	  124,030      124,030	      568.52	   45.09      508.78		1	32.82		 1	124,030.0    124,030.0	  124,030.0	   568.52	45.09	   508.78	   1.0	     32.82	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

32m2a739zbzz3	     124,024	  124,024      124,024	      568.02	   45.38      507.77		1	33.58		 1	124,024.0    124,024.0	  124,024.0	   568.02	45.38	   507.77	   1.0	     33.58	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

d3r94djtpj7r9	     123,953	  123,953      123,953	      568.30	   44.79      508.30		1	33.26		 1	123,953.0    123,953.0	  123,953.0	   568.30	44.79	   508.30	   1.0	     33.26	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	     123,922	  123,922      123,922	      568.40	   45.02      507.81		1	33.64		 1	123,922.0    123,922.0	  123,922.0	   568.40	45.02	   507.81	   1.0	     33.64	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	     123,883	  123,883      123,883	      568.42	   45.12      508.60		1	33.06		 1	123,883.0    123,883.0	  123,883.0	   568.42	45.12	   508.60	   1.0	     33.06	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

g679149chxm60	     123,822	  123,822      123,822	      568.00	   45.01      507.95		1	33.04		 1	123,822.0    123,822.0	  123,822.0	   568.00	45.01	   507.95	   1.0	     33.04	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

26cgg6g31fq8p	     123,819	  123,819      123,819	      568.11	   44.91      509.05		1	32.44		 1	123,819.0    123,819.0	  123,819.0	   568.11	44.91	   509.05	   1.0	     32.44	     3.3      3.3    3.3     3.1    3.2     3.1     3.2    0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bz8m3my689x30	     123,673	  123,673      123,673	      568.34	   44.98      508.05		1	33.65		 1	123,673.0    123,673.0	  123,673.0	   568.34	44.98	   508.05	   1.0	     33.65	     3.3      3.3    3.3     3.1    3.2     3.1     3.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Executions (Global)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Executions:	   1,296,433
-> Captured SQL account for   99.5% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Execs   Elapsed (s)     CPU (s)	IOWait (s)	     Gets	 Reads	       Rows Cluster (s)     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	  Execs  DB time   DB CPU  IO Wait     Gets    Reads  Cluster
-------------	------------ ------------- ----------- ----------- -------------- ------------ ------------ -----------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,095,430	 15,146.58	949.58	 13,828.20	6,581,630    3,138,036	  1,095,455	 827.73 	   0.01        0.00	   0.01 	   6.0		2.9	     1.0	0.00	   84.5     83.0     67.9     84.7     62.1	84.7	 82.3
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     193,256	  2,767.21	203.04	  2,462.01	1,399,058      553,553	    579,768	 172.87 	   0.01        0.00	   0.01 	   7.2		2.9	     3.0	0.00	   14.9     15.2     14.5     15.1     13.2	14.9	 17.2
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

24djtk7r8fz33		 331	      0.04	  0.03	      0.00	      682	     0		330	   0.00 	   0.00        0.00	   0.00 	   2.1		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

3dbzmtf9ahvzt		 312	      0.15	  0.11	      0.03	    1,887	     4		312	   0.00 	   0.00        0.00	   0.00 	   6.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

f7xnvp44nukp7		 181	      0.49	  0.06	      0.04	      791	    10		181	   0.41 	   0.00        0.00	   0.00 	   4.4		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

fn5s5p6hr6702		 121	      0.10	  0.03	      0.02	      846	     5		121	   0.05 	   0.00        0.00	   0.00 	   7.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

f80h0xb1qvbsk		  92	      0.04	  0.02	      0.00	       42	     0		 92	   0.00 	   0.00        0.00	   0.00 	   0.5		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

f3ww8rgva3hrs		  57	      0.05	  0.01	      0.03	      191	     4		 57	   0.01 	   0.00        0.00	   0.00 	   3.4		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

fs4p95w7yg25b		  47	      0.00	  0.00	      0.00	      188	     0		 47	   0.00 	   0.00        0.00	   0.00 	   4.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
bj# and tp.obj# = :oid

6n2qqv1brfhpp		  46	      0.01	  0.01	      0.00	      368	     0		 46	   0.00 	   0.00        0.00	   0.00 	   8.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Cluster Wait Time (Global)DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Total Cluster Wait Time (s): 	  1,006
-> Captured SQL account for   99.6% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	Cluster (s)   Elapsed (s)     CPU (s)  IOWait (s)	    Gets	Reads	      Rows	  Execs   Cluster (s)	Elapsed (s)	CPU (s)  IOWait (s)	      Gets	  Reads 	Rows	Cluster  DB time   DB CPU     Gets  IO Wait    Reads	Execs
-------------	----------- ------------- ----------- ----------- -------------- ------------ ------------ ------------   ----------- ------------- ----------- ----------- -------------- ------------ ------------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     827.73	15,146.58      949.58	13,828.20      6,581,630    3,138,036	 1,095,455    1,095,430 	 0.00	       0.01	   0.00        0.01	       6.0	    2.9 	 1.0	   82.3     83.0     67.9     84.7     62.1	84.7	 84.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     172.87	 2,767.21      203.04	 2,462.01      1,399,058      553,553	   579,768	193,256 	 0.00	       0.01	   0.00        0.01	       7.2	    2.9 	 3.0	   17.2     15.2     14.5     15.1     13.2	14.9	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

bqwwfnsg2f57w	      58.14	   567.53	51.76	   476.33	 221,406      100,305		 1	      1 	58.14	     567.53	  51.76      476.33	 221,406.0    100,305.0 	 1.0	    5.8      3.1      3.7      2.9	2.1	 2.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

df0pz79un9sgm	      58.00	   568.11	52.77	   476.45	 225,929      100,552		 1	      1 	58.00	     568.11	  52.77      476.45	 225,929.0    100,552.0 	 1.0	    5.8      3.1      3.8      2.9	2.1	 2.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5q1jyzmr30cf9	      34.18	   568.57	45.32	   507.38	 276,356      123,135		 1	      1 	34.18	     568.57	  45.32      507.38	 276,356.0    123,135.0 	 1.0	    3.4      3.1      3.2      3.1	2.6	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

1zv2tsmss11cb	      34.08	   568.25	45.11	   507.23	 275,473      123,445		 1	      1 	34.08	     568.25	  45.11      507.23	 275,473.0    123,445.0 	 1.0	    3.4      3.1      3.2      3.1	2.6	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

bz8m3my689x30	      33.65	   568.34	44.98	   508.05	 273,136      123,673		 1	      1 	33.65	     568.34	  44.98      508.05	 273,136.0    123,673.0 	 1.0	    3.3      3.1      3.2      3.1	2.6	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	      33.64	   568.40	45.02	   507.81	 274,142      123,922		 1	      1 	33.64	     568.40	  45.02      507.81	 274,142.0    123,922.0 	 1.0	    3.3      3.1      3.2      3.1	2.6	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

32m2a739zbzz3	      33.58	   568.02	45.38	   507.77	 274,056      124,024		 1	      1 	33.58	     568.02	  45.38      507.77	 274,056.0    124,024.0 	 1.0	    3.3      3.1      3.2      3.1	2.6	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bzs4fu7kk84h3	      33.50	   568.23	44.84	   508.22	 272,003      123,415		 1	      1 	33.50	     568.23	  44.84      508.22	 272,003.0    123,415.0 	 1.0	    3.3      3.1      3.2      3.1	2.6	 3.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
ASSM bg: segment fix monitor						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM cbk:blocks examined						  1,157 	   1.9		0.0		1.0	      0.1	    0.9 	  1.0
ASSM cbk:blocks marked full						    273 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
ASSM gsp:L1 bitmaps examined						    947 	   1.6		0.0		0.8	      0.1	    0.7 	  0.9
ASSM gsp:L2 bitmap full 						     28 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:L2 bitmaps examined						    168 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
ASSM gsp:Search all							     28 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search hint							     25 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search steal							     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:bump HWM							     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:get free block 						    884 	   1.5		0.0		0.7	      0.1	    0.7 	  0.8
ASSM gsp:get free data block						    713 	   1.2		0.0		0.6	      0.1	    0.5 	  0.7
ASSM gsp:get free index block						    171 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
ASSM gsp:good hint							    769 	   1.3		0.0		0.6	      0.0	    0.6 	  0.6
ASSM rsv:fill reserve							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM wasted db state change						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Batched IO (bound) vector count 					      6 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO block miss count					      1,043,577        1,726.6		5.4	      863.3	    146.7	  759.6 	967.1
Batched IO double miss count					      1,043,553        1,726.6		5.4	      863.3	    146.8	  759.5 	967.1
Batched IO same unit count						     15 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO single block count					      1,043,556        1,726.6		5.4	      863.3	    146.8	  759.5 	967.1
Batched IO vector block count						      6 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO vector read count						      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Block Cleanout Optim referenced 					     28 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
CCursor + sql area evicted						      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
CPU used by this session						200,908 	 332.4		1.0	      166.2	     25.0	  148.5 	183.9
CPU used when call started						147,976 	 244.8		0.8	      122.4	     33.1	   99.0 	145.8
CR blocks created							  1,763 	   2.9		0.0		1.5	      0.3	    1.2 	  1.7
Cached Commit SCN referenced					      2,813,428        4,654.9	       14.5	    2,327.5	    211.7	2,177.7       2,477.2
Client Advertised Receive Window					    231 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
Client Advertised Send Window						    231 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
Client Path Maximum Transmission Unit(MTU)			      1,265,465        2,093.7		6.5	    1,046.9	  1,433.0	   33.6       2,060.2
Client Send Congestion Window						    330 	   0.5		0.0		0.3	      0.1	    0.2 	  0.3
Client Time (usec) Last Ack Received					     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Received					     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Sent					    106 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
Client Time (usec) Round Trip Time					 82,534 	 136.6		0.4	       68.3	      3.2	   66.0 	 70.5
Client Time (usec) Round Trip Time Variance				 92,481 	 153.0		0.5	       76.5	      0.3	   76.3 	 76.8
Client Total Bytes Acked						510,723 	 845.0		2.6	      422.5	    105.8	  347.7 	497.3
Client Total Bytes Received						200,521 	 331.8		1.0	      165.9	     36.8	  139.8 	191.9
DB time 							      1,920,732        3,177.9		9.9	    1,589.0	    420.8	1,291.4       1,886.5
DBWR checkpoint buffers written 					 39,506 	  65.4		0.2	       32.7	      3.2	   30.4 	 35.0
DBWR checkpoints							     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
DBWR fusion writes							    357 	   0.6		0.0		0.3	      0.2	    0.2 	  0.4
DBWR object drop buffers written					     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
DBWR transaction table writes						    561 	   0.9		0.0		0.5	      0.0	    0.4 	  0.5
DBWR undo block writes							 19,553 	  32.4		0.1	       16.2	      0.9	   15.5 	 16.8
DFO trees parallelized							     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
HSC Heap Segment Block Changes						583,693 	 965.7		3.0	      482.9	     77.9	  427.8 	538.0
Heap Segment Array Inserts						    328 	   0.5		0.0		0.3	      0.0	    0.3 	  0.3
Heap Segment Array Updates						     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
KTFB alloc req								    168 	   0.3		0.0		0.1	      0.0	    0.1 	  0.2
KTFB alloc space (block)					    164,364,288      271,945.7	      847.3	  135,972.9	 22,693.7     119,926.0     152,019.7
KTFB alloc time (ms)							 53,391 	  88.3		0.3	       44.2	     27.8	   24.5 	 63.8
KTFB apply req								    155 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
KTFB apply time (ms)							  4,259 	   7.0		0.0		3.5	      0.7	    3.0 	  4.0
PX local messages recv'd						    224 	   0.4		0.0		0.2	      0.1	    0.1 	  0.2
PX local messages sent							    224 	   0.4		0.0		0.2	      0.1	    0.1 	  0.2
PX remote messages recv'd						    237 	   0.4		0.0		0.2	      0.1	    0.2 	  0.2
PX remote messages sent 						    237 	   0.4		0.0		0.2	      0.1	    0.2 	  0.2

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Parallel operations not downgraded					     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Requests to/from client 						    227 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
SQL*Net roundtrips to/from client					    195 	   0.3		0.0		0.2	      0.1	    0.1 	  0.3
active txn count during cleanout					    475 	   0.8		0.0		0.4	      0.1	    0.3 	  0.5
application wait time							     29 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
background timeouts							 10,741 	  17.8		0.1		8.9	      0.0	    8.9 	  8.9
blocks cleaned out using minact 					317,811 	 525.8		1.6	      262.9	     63.6	  218.0 	307.9
buffer is not pinned count					      8,882,803       14,696.9	       45.8	    7,348.4	    229.3	7,186.3       7,510.6
buffer is pinned count						      2,801,854        4,635.8	       14.4	    2,317.9	    354.5	2,067.2       2,568.6
bytes received via SQL*Net from client					412,619 	 682.7		2.1	      341.3	    438.8	   31.1 	651.6
bytes sent via SQL*Net to client					 41,917 	  69.4		0.2	       34.7	     25.8	   16.5 	 52.9
calls to get snapshot scn: kcmgss				      1,504,337        2,489.0		7.8	    1,244.5	    199.5	1,103.4       1,385.6
calls to kcmgas 							374,549 	 619.7		1.9	      309.9	     49.2	  275.0 	344.7
calls to kcmgcs 							  5,385 	   8.9		0.0		4.5	      0.3	    4.3 	  4.7
cell physical IO interconnect bytes				 43,115,065,856   71,335,204.0	  222,254.1    35,667,602.0   5,166,596.7  32,014,266.5  39,320,937.6
change write time							  2,305 	   3.8		0.0		1.9	      0.4	    1.6 	  2.2
cleanout - number of ktugct calls					  3,886 	   6.4		0.0		3.2	      0.3	    3.0 	  3.4
cleanouts and rollbacks - consistent read gets				      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
cleanouts only - consistent read gets					     50 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
cluster key scan block gets						    213 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
cluster key scans							    203 	   0.3		0.0		0.2	      0.0	    0.2 	  0.2
cluster wait time							100,593 	 166.4		0.5	       83.2	     30.6	   61.6 	104.9
commit batch/immediate performed					      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit batch/immediate requested					      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: block lost					     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: callback failure				     26 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: cannot pin					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanouts							583,515 	 965.4		3.0	      482.7	     78.1	  427.5 	538.0
commit cleanouts successfully completed 				583,473 	 965.4		3.0	      482.7	     78.2	  427.4 	538.0
commit immediate performed						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit immediate requested						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit txn count during cleanout					    248 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
concurrency wait time							     30 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
consistent changes						      1,738,278        2,876.0		9.0	    1,438.0	    305.9	1,221.7       1,654.3
consistent gets 						      9,540,946       15,785.8	       49.2	    7,892.9	     26.0	7,874.5       7,911.3
consistent gets examination					      4,884,494        8,081.6	       25.2	    4,040.8	    617.3	3,604.3       4,477.3
consistent gets examination (fastpath)				      4,883,964        8,080.7	       25.2	    4,040.3	    617.5	3,603.7       4,477.0
consistent gets from cache					      9,540,946       15,785.8	       49.2	    7,892.9	     26.0	7,874.5       7,911.3
consistent gets pin						      4,656,452        7,704.2	       24.0	    3,852.1	    591.3	3,434.0       4,270.2
consistent gets pin (fastpath)					      1,473,944        2,438.7		7.6	    1,219.3	    151.5	1,112.2       1,326.5
cursor authentications							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
data blocks consistent reads - undo records applied			     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
db block changes						      1,603,261        2,652.6		8.3	    1,326.3	    210.6	1,177.4       1,475.2
db block gets							      1,057,362        1,749.4		5.5	      874.7	    135.4	  779.0 	970.5
db block gets direct							    297 	   0.5		0.0		0.2	      0.0	    0.2 	  0.3
db block gets from cache					      1,057,065        1,748.9		5.4	      874.5	    135.4	  778.7 	970.2
db block gets from cache (fastpath)					436,956 	 723.0		2.3	      361.5	     54.2	  323.2 	399.8
deferred (CURRENT) block cleanout applications				318,828 	 527.5		1.6	      263.8	     63.6	  218.8 	308.7
dirty buffers inspected 						494,112 	 817.5		2.5	      408.8	     36.6	  382.9 	434.6
enqueue conversions							    472 	   0.8		0.0		0.4	      0.0	    0.4 	  0.4
enqueue releases							406,986 	 673.4		2.1	      336.7	     51.5	  300.2 	373.1
enqueue requests							406,953 	 673.3		2.1	      336.7	     51.5	  300.2 	373.1
enqueue timeouts							     11 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
enqueue waits								    335 	   0.6		0.0		0.3	      0.0	    0.2 	  0.3
exchange deadlocks							      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
execute count							      1,296,433        2,145.0		6.7	    1,072.5	    173.4	  949.9       1,195.1
file io service time						  4,110,432,092    6,800,886.8	   21,188.9	3,400,443.4   4,290,307.7     366,737.7   6,434,149.1
file io wait time						 28,571,508,238   47,272,367.7	  147,283.4    23,636,183.9  10,299,607.2  16,353,261.8  30,919,105.9
free buffer inspected						      3,785,243        6,262.8	       19.5	    3,131.4	    527.4	2,758.5       3,504.3
free buffer requested						      3,764,723        6,228.8	       19.4	    3,114.4	    519.7	2,746.9       3,481.9

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
gc blocks compressed							 35,406 	  58.6		0.2	       29.3	      5.8	   25.2 	 33.4
gc cleanout saved							     14 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr anti locks created						 17,842 	  29.5		0.1	       14.8	      0.2	   14.6 	 14.9
gc cr anti locks expanded						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc cr anti locks shrunk 						     54 	   0.1		0.0		0.0	      0.1	    0.0 	  0.1
gc cr block build time							    447 	   0.7		0.0		0.4	      0.1	    0.3 	  0.4
gc cr block flush time							     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc cr block receive time						  1,153 	   1.9		0.0		1.0	      0.1	    0.9 	  1.0
gc cr blocks built							  8,604 	  14.2		0.0		7.1	      1.8	    5.8 	  8.4
gc cr blocks flushed							     59 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc cr blocks received							 10,164 	  16.8		0.1		8.4	      0.2	    8.3 	  8.5
gc cr blocks served							 10,166 	  16.8		0.1		8.4	      0.2	    8.3 	  8.5
gc cr multiblock grants received					      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc current block flush time						     31 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc current block pin time						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc current block receive time						  1,817 	   3.0		0.0		1.5	      0.5	    1.2 	  1.8
gc current blocks flushed						     43 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks pinned						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc current blocks received						 27,189 	  45.0		0.1	       22.5	      6.2	   18.1 	 26.8
gc current blocks served						 27,204 	  45.0		0.1	       22.5	      6.2	   18.1 	 26.9
gc force cr read cr							     52 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc kbytes saved 							144,764 	 239.5		0.7	      119.8	     17.5	  107.4 	132.1
gc kbytes sent								154,196 	 255.1		0.8	      127.6	     33.7	  103.7 	151.4
gc local grants 						      1,955,515        3,235.5	       10.1	    1,617.7	     28.3	1,597.7       1,637.7
gc merge pi fg								     55 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc no change made							     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass grants 						     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc reader bypass waits							     13 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc remote grants						      1,786,565        2,955.9		9.2	    1,478.0	    486.3	1,134.1       1,821.8
gc status messages received					      1,777,138        2,940.3		9.2	    1,470.2	    475.6	1,133.8       1,806.5
gc status messages sent 					      1,777,244        2,940.5		9.2	    1,470.3	    476.2	1,133.5       1,807.0
gcs affinity lock failures						  3,913 	   6.5		0.0		6.5	      N/A	    6.5 	  6.5
gcs affinity lock grants						290,191 	 480.1		1.5	      240.1	    312.3	   19.2 	460.9
gcs anti-locks created							 17,794 	  29.4		0.1	       14.7	      0.3	   14.5 	 14.9
gcs data block access records					      3,743,811        6,194.2	       19.3	    3,097.1	    515.4	2,732.7       3,461.5
gcs messages sent						      4,158,093        6,879.7	       21.4	    3,439.8	  1,121.3	2,647.0       4,232.7
gcs read-mostly lock failures						 17,454 	  28.9		0.1	       28.9	      N/A	   28.9 	 28.9
gcs read-mostly lock grants						 97,507 	 161.3		0.5	      161.3	      N/A	  161.3 	161.3
gcs stats management (SCM) process posts				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges messages sent							  4,169 	   6.9		0.0		3.4	      0.6	    3.0 	  3.9
global enqueue get time 						    823 	   1.4		0.0		0.7	      0.2	    0.6 	  0.8
global enqueue gets sync						216,133 	 357.6		1.1	      178.8	     20.4	  164.4 	193.2
global enqueue releases 						215,908 	 357.2		1.1	      178.6	     20.6	  164.1 	193.2
heap block compress							 12,616 	  20.9		0.1	       10.4	      0.2	   10.3 	 10.6
hot buffers moved to head of LRU					194,510 	 321.8		1.0	      160.9	      0.1	  160.9 	161.0
immediate (CR) block cleanout applications				     55 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
immediate (CURRENT) block cleanout applications 			    478 	   0.8		0.0		0.4	      0.0	    0.4 	  0.4
in call idle wait time						      9,966,675       16,490.2	       51.4	    8,245.1	     23.2	8,228.7       8,261.5
index crx upgrade (positioned)						     60 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
index fast full scans (full)						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
index fetch by key							552,111 	 913.5		2.8	      456.7	    642.7	    2.3 	911.2
index range scans						      1,842,965        3,049.2		9.5	    1,524.6	    469.7	1,192.5       1,856.7
leaf node 90-10 splits							     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
leaf node splits							    167 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
lob reads								    370 	   0.6		0.0		0.3	      0.0	    0.3 	  0.3
lob writes								  6,280 	  10.4		0.0		5.2	      0.1	    5.1 	  5.2
lob writes unaligned							  6,280 	  10.4		0.0		5.2	      0.1	    5.1 	  5.2
logical read bytes from cache					 86,818,897,920  143,644,640.0	  447,543.2    71,822,320.0	895,968.0  71,188,774.9  72,455,865.0
logons cumulative							     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
messages received							222,109 	 367.5		1.1	      183.7	     23.4	  167.2 	200.3

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
messages sent								222,108 	 367.5		1.1	      183.7	     23.4	  167.2 	200.3
no work - consistent read gets					      4,631,571        7,663.1	       23.9	    3,831.5	    597.4	3,409.1       4,254.0
non-idle wait count						      7,900,608       13,071.8	       40.7	    6,535.9	  1,561.3	5,431.9       7,639.9
non-idle wait time						      1,887,771        3,123.4		9.7	    1,561.7	    385.0	1,289.4       1,834.0
opened cursors cumulative					      1,490,824        2,466.6		7.7	    1,233.3	    199.5	1,092.2       1,374.4
parse count (hard)							     22 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse count (total)							  2,908 	   4.8		0.0		2.4	      0.0	    2.4 	  2.4
parse time cpu								     11 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse time elapsed							     26 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
physical read IO requests					      3,703,331        6,127.3	       19.1	    3,063.6	    511.7	2,701.8       3,425.5
physical read bytes						 30,338,859,008   50,196,570.5	  156,393.9    25,098,285.3   4,191,866.9  22,134,187.7  28,062,382.8
physical read total IO requests 				      3,710,606        6,139.3	       19.1	    3,069.7	    511.1	2,708.3       3,431.1
physical read total bytes					 31,513,375,232   52,139,847.4	  162,448.5    26,069,923.7   3,991,513.0  23,247,497.8  28,892,349.6
physical read total multi block requests				  1,033 	   1.7		0.0		0.9	      0.2	    0.7 	  1.0
physical reads							      3,703,474        6,127.5	       19.1	    3,063.8	    511.7	2,701.9       3,425.6
physical reads cache						      3,703,474        6,127.5	       19.1	    3,063.8	    511.7	2,701.9       3,425.6
physical reads cache prefetch						    143 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
physical write IO requests						534,337 	 884.1		2.8	      442.0	     52.3	  405.1 	479.0
physical write bytes						  4,561,960,960    7,547,906.1	   23,516.5	3,773,953.1	428,636.7   3,470,861.1   4,077,045.0
physical write total IO requests					886,281        1,466.4		4.6	      733.2	    100.1	  662.4 	804.0
physical write total bytes					  5,791,047,680    9,581,467.8	   29,852.3	4,790,733.9	588,308.6   4,374,736.9   5,206,730.9
physical write total multi block requests				  1,136 	   1.9		0.0		0.9	      0.1	    0.9 	  1.0
physical writes 							556,880 	 921.4		2.9	      460.7	     52.3	  423.7 	497.7
physical writes direct							    307 	   0.5		0.0		0.3	      0.0	    0.2 	  0.3
physical writes direct (lob)						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
physical writes direct temporary tablespace				    192 	   0.3		0.0		0.2	      0.0	    0.2 	  0.2
physical writes from cache						556,573 	 920.9		2.9	      460.4	     52.3	  423.5 	497.4
physical writes non checkpoint						548,122 	 906.9		2.8	      453.4	     51.4	  417.1 	489.8
pinned buffers inspected						  1,079 	   1.8		0.0		0.9	      0.0	    0.9 	  0.9
process last non-idle time						  1,029 	   1.7		0.0		0.9	      0.2	    0.7 	  1.0
recursive calls 						      1,706,400        2,823.3		8.8	    1,411.6	    227.4	1,250.8       1,572.4
recursive cpu usage							188,258 	 311.5		1.0	      155.7	     23.3	  139.3 	172.2
redo KB read								625,392        1,034.7		3.2	      517.4	     84.3	  457.8 	577.0
redo blocks checksummed by FG (exclusive)				362,964 	 600.5		1.9	      300.3	     49.0	  265.6 	334.9
redo blocks written						      1,180,246        1,952.8		6.1	      976.4	    158.4	  864.4       1,088.4
redo blocks written (group 0)						839,921        1,389.7		4.3	      694.8	     93.8	  628.5 	761.2
redo blocks written (group 1)						340,325 	 563.1		1.8	      281.5	     64.6	  235.9 	327.2
redo entries								833,230        1,378.6		4.3	      689.3	    105.1	  615.0 	763.6
redo size							    545,619,736      902,744.6	    2,812.6	  451,372.3	 73,057.3     399,712.9     503,031.6
redo size for direct writes						    284 	   0.5		0.0		0.2	      0.1	    0.2 	  0.3
redo subscn max counts							    142 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
redo synch time 							      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo synch time (usec)							 65,434 	 108.3		0.3	       54.1	     21.9	   38.7 	 69.6
redo synch time overhead (usec) 					  3,369 	   5.6		0.0		2.8	      2.4	    1.1 	  4.5
redo synch time overhead count (  2ms)					     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo synch writes							     36 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
redo wastage							     39,507,596       65,366.5	      203.7	   32,683.3	  5,485.9      28,804.1      36,562.4
redo write active strands						175,269 	 290.0		0.9	      145.0	     24.0	  128.0 	162.0
redo write finish time						  1,195,598,479    1,978,155.1	    6,163.2	  989,077.5	 87,212.4     927,409.1   1,050,746.0
redo write gather time						     40,159,655       66,445.4	      207.0	   33,222.7	  7,771.8      27,727.2      38,718.2
redo write info find							     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write schedule time					     42,579,543       70,449.1	      219.5	   35,224.6	  8,268.2      29,378.0      41,071.1
redo write size count (   4KB)						107,447 	 177.8		0.6	       88.9	     11.5	   80.7 	 97.0
redo write size count (   8KB)						 57,723 	  95.5		0.3	       47.8	      9.6	   41.0 	 54.5
redo write size count (  16KB)						  5,343 	   8.8		0.0		4.4	      1.3	    3.5 	  5.3
redo write size count (  32KB)						    709 	   1.2		0.0		0.6	      0.2	    0.5 	  0.7
redo write size count ( 128KB)						    164 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
redo write size count ( 256KB)						      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write size count ( 512KB)						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write time 							120,301 	 199.0		0.6	       99.5	      8.8	   93.3 	105.7

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
redo write time (usec)						  1,203,010,313    1,990,418.2	    6,201.4	  995,209.1	 87,927.8     933,034.8   1,057,383.4
redo write total time						  1,218,691,484    2,016,363.2	    6,282.2	1,008,181.6	 90,739.5     944,019.0   1,072,344.1
redo write worker delay (usec)					     23,604,228       39,053.9	      121.7	   19,526.9	  5,001.8      15,990.1      23,063.8
redo write worker delay count						171,395 	 283.6		0.9	      141.8	     22.2	  126.1 	157.5
redo writes								171,395 	 283.6		0.9	      141.8	     22.2	  126.1 	157.5
redo writes (group 0)							105,218 	 174.1		0.5	       87.0	     10.9	   79.3 	 94.8
redo writes (group 1)							 66,177 	 109.5		0.3	       54.7	     11.2	   46.8 	 62.7
redo writes adaptive all						171,395 	 283.6		0.9	      141.8	     22.2	  126.1 	157.5
redo writes adaptive worker						171,395 	 283.6		0.9	      141.8	     22.2	  126.1 	157.5
rollback changes - undo records applied 				      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
rollbacks only - consistent read gets					     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
rows fetched via callback						551,082 	 911.8		2.8	      455.9	    643.0	    1.2 	910.5
securefile allocation bytes						 81,920 	 135.5		0.4	       67.8	      0.0	   67.8 	 67.8
securefile allocation chunks						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
securefile bytes non-transformed					 63,321 	 104.8		0.3	       52.4	      0.6	   52.0 	 52.8
securefile direct write bytes						 81,920 	 135.5		0.4	       67.8	      0.0	   67.8 	 67.8
securefile direct write ops						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
securefile number of non-transformed flushes				     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment chunks allocation from dispenser				     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment dispenser allocations						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc ops							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc time (ms)						    320 	   0.5		0.0		0.3	      0.2	    0.1 	  0.4
session connect time							    640 	   1.1		0.0		1.1	      N/A	    1.1 	  1.1
session cursor cache hits					      1,489,171        2,463.9		7.7	    1,231.9	    199.5	1,090.8       1,373.0
session logical reads						     10,598,320       17,535.3	       54.6	    8,767.6	    109.4	8,690.3       8,845.0
shared hash latch upgrades - no wait				      1,440,672        2,383.6		7.4	    1,191.8	    214.5	1,040.1       1,343.5
shared hash latch upgrades - wait					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
shared io pool buffer get success					     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
sorts (memory)								    640 	   1.1		0.0		0.5	      0.0	    0.5 	  0.5
sorts (rows)								127,230 	 210.5		0.7	      105.3	      1.6	  104.1 	106.4
sql area evicted							     11 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
sql area purged 							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
summed dirty queue length					      2,559,132        4,234.2	       13.2	    2,117.1	     89.0	2,054.1       2,180.0
switch current caused by our pin					    146 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
switch current to new buffer						    161 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
table fetch by rowid						      4,894,827        8,098.6	       25.2	    4,049.3	     55.3	4,010.2       4,088.4
table fetch continued row						      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
table scan blocks gotten						  7,149 	  11.8		0.0		5.9	      0.7	    5.4 	  6.4
table scan disk non-IMC rows gotten					341,100 	 564.4		1.8	      282.2	     76.8	  227.9 	336.5
table scan rows gotten							341,100 	 564.4		1.8	      282.2	     76.8	  227.9 	336.5
table scans (short tables)						    679 	   1.1		0.0		0.6	      0.0	    0.6 	  0.6
total cf enq hold time							  6,134 	  10.1		0.0		5.1	      0.7	    4.6 	  5.6
total number of cf enq holders						    292 	   0.5		0.0		0.2	      0.0	    0.2 	  0.3
transaction rollbacks							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
transaction tables consistent reads - undo records applied	      1,730,729        2,863.5		8.9	    1,431.8	    305.7	1,215.6       1,647.9
undo change vector size 					    213,928,632      353,951.5	    1,102.8	  176,975.7	 28,990.4     156,476.4     197,475.1
user I/O wait time						      1,635,017        2,705.2		8.4	    1,352.6	    344.6	1,108.9       1,596.3
user calls								    497 	   0.8		0.0		0.4	      0.1	    0.3 	  0.5
user commits								193,990 	 321.0		1.0	      160.5	     26.1	  142.0 	178.9
user logons cumulative							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
user logouts cumulative 						     33 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
workarea executions - optimal						  1,070 	   1.8		0.0		0.9	      0.1	    0.8 	  1.0
write clones created in foreground					     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Messaging Statistics (Global)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Global Enqueue S-optim Broadcasts sent					    108 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
Global Enqueue S-optim S-lock gets					 16,987 	  28.1		0.1	       14.1	      4.8	   10.7 	 17.4
Global Enqueue S-optim anti-locks crea					     54 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
acks for commit broadcast(actual)					 64,126 	 106.1		0.3	       53.0	      1.7	   51.9 	 54.2
acks for commit broadcast(logical)					125,458 	 207.6		0.6	      103.8	      9.8	   96.8 	110.7
broadcast msgs on commit(actual)					125,663 	 207.9		0.6	      104.0	      9.8	   97.0 	110.9
broadcast msgs on commit(logical)					171,181 	 283.2		0.9	      141.6	     22.2	  125.9 	157.3
broadcast msgs on commit(wasted)					 57,196 	  94.6		0.3	       47.3	     12.4	   38.6 	 56.1
gcs assume no cvt							 13,614 	  22.5		0.1	       11.3	      6.7	    6.5 	 16.0
gcs ast to fg							      1,776,654        2,939.5		9.2	    1,469.8	    476.1	1,133.1       1,806.4
gcs ast xid								      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs bidless ast to lms							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs blocked converts							 23,661 	  39.1		0.1	       19.6	      1.6	   18.4 	 20.7
gcs blocked cr converts 						 10,170 	  16.8		0.1		8.4	      0.7	    7.9 	  8.9
gcs compatible basts							     18 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (global)					     31 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (local) 					 21,384 	  35.4		0.1	       17.7	      5.8	   13.6 	 21.8
gcs dbwr flush pi msgs							261,743 	 433.1		1.3	      216.5	     65.7	  170.0 	263.0
gcs dbwr write request msgs						    357 	   0.6		0.0		0.3	      0.2	    0.2 	  0.4
gcs force cr block only 						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs grant ast							      1,776,656        2,939.5		9.2	    1,469.8	    476.1	1,133.1       1,806.4
gcs immediate (compatible) converts					 14,781 	  24.5		0.1	       12.2	      1.0	   11.5 	 13.0
gcs immediate (null) converts						498,528 	 824.8		2.6	      412.4	     34.8	  387.8 	437.0
gcs immediate cr (compatible) converts					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs immediate cr (null) converts				      2,819,996        4,665.8	       14.5	    2,332.9	    202.3	2,189.8       2,475.9
gcs lms write request msgs						    301 	   0.5		0.0		0.2	      0.2	    0.1 	  0.4
gcs msgs process time(ms)						156,982 	 259.7		0.8	      129.9	     27.9	  110.1 	149.6
gcs msgs received						      4,157,624        6,878.9	       21.4	    3,439.5	  1,122.4	2,645.8       4,233.1
gcs new served by master						    420 	   0.7		0.0		0.3	      0.0	    0.3 	  0.4
gcs out-of-order msgs							      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs pings refused							  2,833 	   4.7		0.0		2.3	      1.2	    1.5 	  3.2
gcs reader bypass grant immediate					     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gcs refuse xid								      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs refuse xid to fg							      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs side channel msgs actual						  9,092 	  15.0		0.0		7.5	      0.3	    7.3 	  7.7
gcs side channel msgs logical					      1,815,933        3,004.5		9.4	    1,502.3	    482.3	1,161.2       1,843.3
gcs stale cr								     51 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
ges msgs process time(ms)						    144 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
ges msgs received							  4,181 	   6.9		0.0		3.5	      0.6	    3.0 	  3.9
ges remote lock allocation						     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
implicit batch messages received					 49,318 	  81.6		0.3	       40.8	      7.6	   35.4 	 46.2
implicit batch messages sent						 49,317 	  81.6		0.3	       40.8	      7.6	   35.4 	 46.2
messages flow controlled						  4,903 	   8.1		0.0		4.1	      4.1	    1.2 	  6.9
messages queue sent actual						307,491 	 508.8		1.6	      254.4	     23.9	  237.5 	271.3
messages queue sent logical						356,164 	 589.3		1.8	      294.6	     67.3	  247.1 	342.2
messages received actual					      2,202,572        3,644.2	       11.4	    1,822.1	    503.0	1,466.4       2,177.8
messages received logical					      4,161,805        6,885.9	       21.5	    3,442.9	  1,121.8	2,649.7       4,236.1
messages sent directly						      1,892,586        3,131.3		9.8	    1,565.7	    477.5	1,228.1       1,903.3
messages sent indirectly					      2,201,442        3,642.3	       11.3	    1,821.2	    640.6	1,368.2       2,274.1
messages sent not implicit batched					 11,664 	  19.3		0.1		9.6	     10.2	    2.5 	 16.8
messages sent pbatched						      1,910,502        3,161.0		9.8	    1,580.5	    564.3	1,181.5       1,979.5
msgs received kernel queue time (ns)				118,076,282,620  195,361,386.3	  608,672.0    97,680,693.1  37,230,431.8  71,354,802.4 1.2400658E+08
msgs received queue time (ms)						 47,958 	  79.3		0.2	       39.7	     14.7	   29.3 	 50.1
msgs received queued						      4,161,805        6,885.9	       21.5	    3,442.9	  1,121.8	2,649.7       4,236.1
msgs sent queue time (ms)						538,370 	 890.7		2.8	      445.4	    156.4	  334.8 	556.0
msgs sent queue time on ksxp (ms)				      2,066,537        3,419.1	       10.7	    1,709.6	    511.2	1,348.1       2,071.1
msgs sent queued							526,288 	 870.8		2.7	      435.4	     87.5	  373.5 	497.3
msgs sent queued on ksxp					      2,201,852        3,643.0	       11.4	    1,821.5	    501.9	1,466.6       2,176.4
process batch messages received 					156,236 	 258.5		0.8	      129.2	      7.0	  124.3 	134.2
process batch messages sent						170,428 	 282.0		0.9	      141.0	     10.0	  133.9 	148.1

Global Messaging Statistics (Global)	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
receiver cycle time							565,503 	 935.6		2.9	      467.8	     75.6	  414.3 	521.3
receiver loop count						      2,383,869        3,944.2	       12.3	    1,972.1	    344.1	1,728.8       2,215.4
			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Absolute Values)	 DB/Inst: P30DB/p30db1	Snaps: 141-142

	    Sessions		   Open Cursors 	    Session Cached Cursors
       -----------------   ---------------------------	 ---------------------------
  I#	  Begin      End	    Begin	   End		  Begin 	 End
----   -------- --------   -------------- ------------	 -------------- ------------
   1	    109       91	      252	   176		 13,537       13,552
   2	    102       90	      195	   143		 13,761       13,863
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~	 ~~~~~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    211      181	      447	   319		 27,298       27,415
 Avg	    106       91	      224	   160		 13,649       13,708
 Std	      5        1	       40	    23		    158 	 220
			  --------------------------------------------------------------------------------------------------------------------

IO Profile (Global)			 DB/Inst: P30DB/p30db1	Snaps: 141-142

Statistic			  Read+Write/s	      Reads/s	    Writes/s
------------------------------ --------------- -------------- --------------
Total Requests			      7,605.28	     6,138.98	    1,466.30
Database Requests		      7,010.97	     6,126.94	      884.03
Optimized Requests			  0.00		 0.00		0.00
Redo Requests				283.56		  N/A	      283.56
Total (MB)				 58.86		49.72		9.14
Database (MB)				 55.07		47.87		7.20
Optimized Total (MB)			  0.00		 0.00		0.00
Redo (MB)				  0.86		  N/A		0.86
Database (blocks)		      7,048.50	     6,127.18	      921.32
Via Buffer Cache (blocks)	      7,047.99	     6,127.18	      920.82
Direct (blocks) 			  0.51		 0.00		0.51
			  --------------------------------------------------------------------------------------------------------------------

IOStat by Function			 DB/Inst: P30DB/p30db1	Snaps: 141-142

					   Requests						 MB
		       ------------------------------------------------   ------------------------------------------------
															      Waits:	Avg
  I# Function Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s     Count	Time
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   ------- --------
   * Total		  4,586,955    7,588.84    6,123.34    1,465.51 	35,502	     58.74	 49.60	      9.13	3.9M   4.53ms
     Buffer Cache Re	  3,693,887    6,111.32    6,111.32	   0.00 	28,864	     47.75	 47.75	      0.00	3.7M   4.43ms
     DBWR		    534,200	 883.80        0.00	 883.80 	 4,349	      7.20	  0.00	      7.20	   0
     LGWR		    350,333	 579.61        0.00	 579.61 	 1,150	      1.90	  0.00	      1.90    171.3K   6.71ms
     Others		      8,445	  13.97       11.88	   2.09 	 1,138	      1.88	  1.85	      0.03	5019   4.26ms
     Direct Writes		 90	   0.15        0.14	   0.01 	     1	      0.00	  0.00	      0.00	  65   3.54ms

   1 Total		  2,553,516    4,224.64    3,421.00	 803.64 	19,609	     32.44	 27.48	      4.96	2.2M   4.76ms
     Buffer Cache Re	  2,064,390    3,415.41    3,415.41	   0.00 	16,130	     26.69	 26.69	      0.00	2.1M   4.68ms
     DBWR		    289,578	 479.09        0.00	 479.09 	 2,350	      3.89	  0.00	      3.89	   0
     LGWR		    195,577	 323.57        0.00	 323.57 	   641	      1.06	  0.00	      1.06	 95K   6.39ms
     Others		      3,967	   6.56        5.59	   0.98 	   488	      0.81	  0.79	      0.02	2351   4.44ms
     Direct Writes		  4	   0.01        0.00	   0.01 	     0	      0.00	  0.00	      0.00	   0

   2 Total		  2,033,439    3,364.20    2,702.34	 661.86 	15,893	     26.29	 22.13	      4.17	1.7M   4.25ms
     Buffer Cache Re	  1,629,497    2,695.91    2,695.91	   0.00 	12,734	     21.07	 21.07	      0.00	1.6M   4.12ms
     DBWR		    244,622	 404.71        0.00	 404.71 	 1,999	      3.31	  0.00	      3.31	   0
     Others		      4,478	   7.41        6.30	   1.11 	   650	      1.08	  1.06	      0.02	2668   4.10ms
     LGWR		    154,756	 256.03        0.00	 256.03 	   509	      0.84	  0.00	      0.84     76.2K   7.10ms
     Direct Writes		 86	   0.14        0.14	   0.01 	     1	      0.00	  0.00	      0.00	  65   3.54ms
			  --------------------------------------------------------------------------------------------------------------------

IOStat by File Type			 DB/Inst: P30DB/p30db1	Snaps: 141-142

					   Requests						 MB				Service Time
		       ------------------------------------------------   ------------------------------------------------   -----------------
																Small	 Large
  I# Filetype Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s	 Read	  Read
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   -------- --------
   * Total		  4,587,333    7,589.47    6,124.20    1,465.27 	35,505	     58.74	 49.61	      9.13     3.93ms 1384.99m
     Data File		  4,228,527    6,995.85    6,112.03	 883.82 	33,213	     54.95	 47.75	      7.20     3.94ms
     Log File		    351,454	 581.46        2.15	 579.31 	 2,177	      3.60	  1.70	      1.90     5.08ms 1384.99m
     Control File	      7,149	  11.83        9.85	   1.98 	   111	      0.18	  0.15	      0.03     2.43ms
     Temp File			203	   0.34        0.17	   0.17 	     4	      0.01	  0.00	      0.00     3.12ms

   1 Total		  2,553,725    4,224.99    3,421.51	 803.47 	19,610	     32.44	 27.48	      4.96     4.18ms 1230.91m
     Data File		  2,354,215    3,894.91    3,415.85	 479.06 	18,481	     30.58	 26.69	      3.89     4.19ms
     Log File		    196,027	 324.31        0.91	 323.40 	 1,075	      1.78	  0.72	      1.06     3.20ms 1230.91m
     Control File	      3,380	   5.59        4.67	   0.92 	    52	      0.09	  0.07	      0.01     2.58ms
     Temp File			103	   0.17        0.08	   0.09 	     2	      0.00	  0.00	      0.00     3.12ms

   2 Total		  2,033,608    3,364.48    2,702.68	 661.80 	15,895	     26.30	 22.13	      4.17     3.62ms 1498.41m
     Data File		  1,874,312    3,100.94    2,696.18	 404.76 	14,732	     24.37	 21.06	      3.31     3.62ms
     Log File		    155,427	 257.14        1.24	 255.91 	 1,102	      1.82	  0.98	      0.84     6.49ms 1498.41m
     Control File	      3,769	   6.24        5.18	   1.06 	    59	      0.10	  0.08	      0.02     2.30ms
     Temp File			100	   0.17        0.08	   0.08 	     2	      0.00	  0.00	      0.00     3.12ms
			  --------------------------------------------------------------------------------------------------------------------


Segment Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   76.9% of Total Logical Reads:      10,598,320
-> Captured Segments account for   99.7% of Total Physical Reads:	3,703,474
-> Captured Segments account for   99.7% of Total Physical Read Requests:	3,703,331
-> Captured Segments account for   99.7% of Total UnOptimized Read Requests:	   3,703,331
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	       1
-> Captured Segments account for   92.9% of Total Physical Writes:	   556,880
-> Captured Segments account for   96.1% of Total Physical Write Requests:	   534,337
-> Captured Segments account for   35.8% of Total Direct Physical Writes:	      307
-> Captured Segments account for    0.0% of Total Table Scans:		     5
-> Captured Segments account for   84.0% of Total CR Blocks Received:	       10,164
-> Captured Segments account for   99.1% of Total Current Blocks Received:	    27,189
-> Captured Segments account for   84.0% of Total CR Blocks Served:	     10,166
-> Captured Segments account for   99.0% of Total Current Blocks Served:	  27,204
-> Captured Segments account for   99.7% of Total Global Cache Remote Grants:	    1,786,565
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
db block changes	 USER14     IOPS       CF1			       TABLE	  73470      73474	 21,328    N/A	   20.7
			 USER11     IOPS       CF1			       TABLE	  73449      73456	 21,232    N/A	   20.6
			 USER6	    IOPS       CF1			       TABLE	  73431      73435	 20,992    N/A	   20.4
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 19,696    N/A	   19.1
			 USER32     IOPS       CF1			       TABLE	  73562      73567	 19,680    N/A	   19.1
gc cr blocks received	 USER8	    IOPS       CF1			       TABLE	  73443      73446	  1,038   10.2	   35.9
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	    532    5.2	   18.4
			 USER13     IOPS       CF1			       TABLE	  73458      73466	    464    4.6	   16.0
			 USER5	    IOPS       CF1			       TABLE	  73418      73426	    442    4.3	   15.3
			 USER11     IOPS       CF1			       TABLE	  73449      73456	    419    4.1	   14.5
gc cr blocks served	 USER8	    IOPS       CF1			       TABLE	  73443      73446	  1,038   10.2	   35.9
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	    532    5.2	   18.4
			 USER13     IOPS       CF1			       TABLE	  73458      73466	    464    4.6	   16.0
			 USER5	    IOPS       CF1			       TABLE	  73418      73426	    442    4.3	   15.3
			 USER11     IOPS       CF1			       TABLE	  73449      73456	    419    4.1	   14.5
gc cu blocks received	 USER8	    IOPS       CF1			       TABLE	  73443      73446	  2,790   10.3	   30.9
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  1,776    6.5	   19.7
			 USER14     IOPS       CF1			       TABLE	  73470      73474	  1,566    5.8	   17.3
			 USER11     IOPS       CF1			       TABLE	  73449      73456	  1,480    5.4	   16.4
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	  1,425    5.2	   15.8
gc cu blocks served	 USER8	    IOPS       CF1			       TABLE	  73443      73446	  2,790   10.3	   30.9
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  1,776    6.5	   19.7
			 USER14     IOPS       CF1			       TABLE	  73470      73474	  1,566    5.8	   17.3
			 USER11     IOPS       CF1			       TABLE	  73449      73456	  1,480    5.4	   16.4
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	  1,425    5.2	   15.8
gc remote grants	 USER8	    IOPS       CF1			       TABLE	  73443      73446	100,769    5.6	   25.9
			 USER9	    IOPS       CF1			       TABLE	  73439      73445	100,764    5.6	   25.9
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 62,568    3.5	   16.1
			 USER18     IOPS       CF1			       TABLE	  73492      73497	 62,251    3.5	   16.0
			 USER6	    IOPS       CF1			       TABLE	  73431      73435	 62,196    3.5	   16.0
itl waits		 SYS	    SYSAUX     WRH$_EVENT_HISTOGRAM 3773525_79 INDEX	  74109      74109	      1    N/A	  100.0
logical reads		 SYS	    SYSTEM     USER$			       TABLE	     22 	10	549,584    5.2	   49.1
			 USER14     IOPS       I_CF1			       INDEX	  73475      73475	142,656    1.3	   12.8
			 USER14     IOPS       CF1			       TABLE	  73470      73474	142,384    1.3	   12.7
			 USER11     IOPS       I_CF1			       INDEX	  73457      73457	142,016    1.3	   12.7
			 USER11     IOPS       CF1			       TABLE	  73449      73456	141,664    1.3	   12.7
physical reads		 USER14     IOPS       CF1			       TABLE	  73470      73474	134,255    3.6	   21.0
			 USER11     IOPS       CF1			       TABLE	  73449      73456	134,090    3.6	   20.9
			 USER24     IOPS       CF1			       TABLE	  73520      73529	124,038    3.3	   19.4
			 USER12     IOPS       CF1			       TABLE	  73464      73460	123,926    3.3	   19.4
			 USER19     IOPS       CF1			       TABLE	  73485      73498	123,900    3.3	   19.4
physical read requests	 USER14     IOPS       CF1			       TABLE	  73470      73474	134,255    3.6	   21.0
			 USER11     IOPS       CF1			       TABLE	  73449      73456	134,090    3.6	   20.9
			 USER24     IOPS       CF1			       TABLE	  73520      73529	124,038    3.3	   19.4
			 USER12     IOPS       CF1			       TABLE	  73464      73460	123,926    3.3	   19.4
			 USER19     IOPS       CF1			       TABLE	  73485      73498	123,900    3.3	   19.4
physical writes 	 USER6	    IOPS       CF1			       TABLE	  73431      73435	 21,648    N/A	   21.7
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 21,640    N/A	   21.6
			 USER15     IOPS       CF1			       TABLE	  73472      73477	 21,622    N/A	   21.6
			 USER16     IOPS       CF1			       TABLE	  73481      73483	 17,692    N/A	   17.7
			 USER14     IOPS       CF1			       TABLE	  73470      73474	 17,352    N/A	   17.4
physical writes direct	 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 773525_131 TABLE	  74322      74322	    105    N/A	   95.5
			 SYS	    SYSAUX     SYS_LOB0000007451C00 S_LOB_P312 LOB P	  74332      74332	      5    N/A	    4.5
physical write requests  USER6	    IOPS       CF1			       TABLE	  73431      73435	 21,464    4.0	   21.6
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 21,451    4.0	   21.6
			 USER15     IOPS       CF1			       TABLE	  73472      73477	 21,405    4.0	   21.6
			 USER16     IOPS       CF1			       TABLE	  73481      73483	 17,666    3.3	   17.8
			 USER14     IOPS       CF1			       TABLE	  73470      73474	 17,181    3.2	   17.3
			  --------------------------------------------------------------------------------------------------------------------

Library Cache Activity			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Summarized for all instances in the report
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-	  GES Lock	GES Pin      GES Pin   GES Inval GES Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations	  Requests     Requests     Releases	Requests     dations
--------------- ------------ ------ -------------- ------ ---------- -------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0		 2	      2 	   2	       0	   0
BODY			  67	0.0	       523    0.0	   0	    0		 0	    481 	 481	       0	   0
DBLINK			   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
EDITION 		   8	0.0		16    0.0	   0	    0		 8	      8 	   8	       0	   0
INDEX			   7	0.0		 3    0.0	   0	    0		 3	      3 	   3	       0	   0
QUEUE			  60	0.0		60    0.0	   0	    0		60	     60 	  60	       0	   0
SCHEMA			   1	0.0		 0    N/A	   0	    0		 1	      0 	   0	       0	   0
SQL AREA		 924	2.2	 1,297,770    0.0	   3	    3		 0	      0 	   0	       0	   0
SQL AREA BUILD		  19  100.0		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
SQL AREA STATS		  22   86.4		22   86.4	   0	    0		 0	      0 	   0	       0	   0
TABLE/PROCEDURE 	  78	0.0	     3,521    0.1	   0	    0	       448	  3,093        3,093	       0	   0
TRANSFORMATION		  60	0.0		60    0.0	   0	    0		60	     60 	  60	       0	   0
TRIGGER 		  10	0.0		10    0.0	   0	    0		 0	     10 	  10	       0	   0
			  --------------------------------------------------------------------------------------------------------------------


PGA Aggregate Target Statistics 	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> all stats are reported in MegaBytes

	  PGA Aggr Target	   Auto PGA Target	      PGA Mem Alloc		Auto Workareas		 Manual Workarea	   Global Mem Bound
       ---------------------   -----------------------	 -----------------------   -----------------------   -----------------------   -----------------------
  I#	    Begin	 End	      Begin	   End		Begin	     End	  Begin        End	    Begin	 End	      Begin	   End
----   ---------- ----------   ------------ ----------	 ------------ ----------   ------------ ----------   ------------ ----------   ------------ ----------
   1	  3,215.0    3,215.0	    1,848.7    1,923.9	      1,370.6	 1,275.3	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
   2	  3,215.0    3,215.0	    1,892.8    1,946.1	      1,281.5	 1,217.5	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
			  --------------------------------------------------------------------------------------------------------------------


Process Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> B: Begin Snap   E: End Snap I#: Instance number
-> Max Alloc is Maximum PGA allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by instance, Begin/End snapshot, Alloc (MB)

							     Hist
					Avg Std Dev    Max    Max
		     Alloc     Used   Alloc   Alloc  Alloc  Alloc   Num   Num
  I#   Category       (MB)     (MB)    (MB)    (MB)   (MB)   (MB)  Proc Alloc
---- - ---------- -------- -------- ------- ------- ------ ------ ----- -----
   1 B Freeable      143.9	 .0	4.2	7.1	28    N/A    34    34
       Other	     680.0	N/A	5.3	8.7	54     54   128   128
       PL/SQL	      18.6     16.8	 .2	 .4	 2	3   110   109
       SQL	      16.1     14.7	 .3	 .4	 1     11    61    53
       Total	     858.7     31.5    10.0    16.7	84     68   333   324
     E Freeable      140.4	 .0	5.0	7.5	28    N/A    28    28
       Other	     603.5	N/A	5.5	9.5	53     53   110   110
       PL/SQL	       9.6	7.9	 .1	 .4	 2	3    92    91
       SQL	       9.9	8.7	 .2	 .3	 1     11    42    34
       Total	     763.4     16.7    10.8    17.8	83     67   272   263
   2 B Freeable      119.7	 .0	3.6	6.4	26    N/A    33    33
       Other	     621.4	N/A	5.1	8.5	49     49   121   121
       PL/SQL	      15.8     13.6	 .2	 .4	 3	4   103   102
       SQL	      12.7     11.4	 .2	 .4	 2     17    53    45
       Total	     769.5     25.0	9.2    15.7	80     70   310   301
     E Freeable      120.6	 .0	4.0	6.4	26    N/A    30    30
       Other	     564.7	N/A	5.2	9.0	49     49   109   109
       PL/SQL	       9.6	7.5	 .1	 .5	 3	4    91    90
       SQL	      10.6	9.5	 .3	 .4	 2     17    41    33
       Total	     705.6     17.0	9.6    16.4	80     70   271   262
			  --------------------------------------------------------------------------------------------------------------------


init.ora Parameters			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> '*' indicates same value across all instances

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
_ipddb_enable			* TRUE
audit_file_dest 		* /u01/app/oracle/admin/p30db/adump
audit_trail			* DB
cluster_database		* TRUE
compatible			* 19.0.0
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581, +FRA/
db_block_size			* 8192
db_create_file_dest		* +DATA
db_domain			* example.com
db_name 			* p30db
db_recovery_file_dest		* +FRA
db_recovery_file_dest_size	* 274877906944
diagnostic_dest 		* /u01/app/oracle
dispatchers			* (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 		1 1
				2 2
listener_networks		*
local_listener			1  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522
				2  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522
nls_language			* AMERICAN
nls_territory			* AMERICA
open_cursors			* 300
pga_aggregate_target		* 3371171840
processes			* 640
remote_listener 		*  mcracpoc-scan.example.com:1521
remote_login_passwordfile	* EXCLUSIVE
sga_target			* 10133438464
thread				1 1
				2 2
undo_tablespace 		1 UNDOTBS1
				2 UNDOTBS2
			  --------------------------------------------------------------------------------------------------------------------


init.ora Multi-valued Parameters	 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> This section only displays parameters that have more one value
-> '*' indicates same value across all instances
-> '(NULL)' indicates that the	parameter value was not set
-> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581
				* +FRA/P30DB/CONTROLFILE/current.257.1031594583
			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Events 		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1570	   77.21
db file sequential read 	 70.33 TABLE ACCESS - BY INDEX ROWID BAT   70.33
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


gc cr grant 2-way		  4.03 TABLE ACCESS - BY INDEX ROWID BAT    4.03


CPU + Wait for CPU		  2.70 TABLE ACCESS - BY INDEX ROWID BAT    1.82

	  35dumc2tpr9dv 	   203653710		      259	   12.82
db file sequential read 	 11.30 UPDATE				   11.30
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Row Sources		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1570	   77.21
TABLE ACCESS - BY INDEX ROWID BATCHED	   76.33 db file sequential read   70.33
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      259	   12.82
UPDATE					   12.62 db file sequential read   11.30
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top Sessions				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
       21, 3407       2.85 db file sequential read		2.70
USER2		     sqlplus@mcracp...m (TNS V1-V3)	  55/60 [ 91%]	      4

       21,10782       2.85 db file sequential read		2.50
USER6		     sqlplus@mcracp...m (TNS V1-V3)	  51/60 [ 84%]	      3

       23,53862       2.85 db file sequential read		2.70
USER30		     sqlplus@mcracp...m (TNS V1-V3)	  55/60 [ 91%]	      3

       25,47220       2.85 db file sequential read		2.55
USER26		     sqlplus@mcracp...m (TNS V1-V3)	  52/60 [ 86%]	      6

      142,54857       2.85 db file sequential read		2.36
USER15		     sqlplus@mcracp...m (TNS V1-V3)	  48/60 [ 79%]	      6

			  --------------------------------------------------------------------------------------------------------------------

Top Blocking Sessions			 DB/Inst: P30DB/p30db1	Snaps: 141-142

		  No data exists for this section of the report.
			  --------------------------------------------------------------------------------------------------------------------

Top PL/SQL Procedures			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       13.16
   SQL								       13.16
			  --------------------------------------------------------------------------------------------------------------------

Top Events				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     81.63	27.52
log file parallel write 	    System I/O	    BACKGROUND
      5.11	 1.72
CPU + Wait for CPU		    CPU 	    FOREGROUND
      4.42	 1.49
gc cr grant 2-way		    Cluster	    FOREGROUND
      4.03	 1.36
CPU + Wait for CPU		    CPU 	    BACKGROUND
      2.16	 0.73
			  --------------------------------------------------------------------------------------------------------------------

Top Event P1/P2/P3 Values		 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 81.63		  "2","24977969","1"	   0.05
file#			   block#		      blocks

log file parallel write 	  5.11			"2","12","2"	   1.42
files			   blocks		      requests

			  --------------------------------------------------------------------------------------------------------------------

Top DB Objects				 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available.

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------------
	  73458       2.85 db file sequential read		2.70
USER13.CF1 (TABLE)				      IOPS
	  73470       2.85 db file sequential read		2.80
USER14.CF1 (TABLE)				      IOPS
	  73486       2.85 db file sequential read		2.65
USER17.CF1 (TABLE)				      IOPS
	  73481       2.80 db file sequential read		2.70
USER16.CF1 (TABLE)				      IOPS
	  73514       2.80 db file sequential read		2.50
USER22.CF1 (TABLE)				      IOPS
			  --------------------------------------------------------------------------------------------------------------------

Activity Over Time			 DB/Inst: P30DB/p30db1	Snaps: 141-142
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
11:21:15   (3.8 min)	  826 db file sequential read		  668	32.81
			      CPU + Wait for CPU		   65	 3.19
			      log file parallel write		   40	 1.96
11:25:00   (5.0 min)	1,048 db file sequential read		  877	43.07
			      CPU + Wait for CPU		   56	 2.75
			      log file parallel write		   51	 2.50
11:30:00   (1.3 min)	  162 db file sequential read		  117	 5.75
			      CPU + Wait for CPU		   13	 0.64
			      log file parallel write		   13	 0.64
			  --------------------------------------------------------------------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_142'
	  ------------------------------------------

Analysis Period
---------------
AWR snapshot range from 141 to 142.
Time period starts at 10-FEB-20 11.21.15 AM
Time period ends at 10-FEB-20 11.31.20 AM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 18247 seconds.
The average number of active sessions was 30.16.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     29.8 | 98.81	  2
2  "User I/O" wait Class		     26.97 | 89.42	  0
3  Top Segments by "User I/O" and "Cluster"  4.67 | 15.49	  5
4  Global Cache Messaging		     1.62 | 5.39	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 29.85 active sessions, 98.81% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  59.49	    ADDM:3393773525_1_142
    2	    p30db2  40.51	    ADDM:3393773525_2_142

   Recommendation 1: SQL Tuning
   Estimated benefit is 25.56 active sessions, 84.75% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 1095430 times and
      had an average elapsed time of 0.013 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 4.24 active sessions, 14.06% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 193256 times and
      had an average elapsed time of 0.014 seconds.


Finding 2: "User I/O" wait Class
Impact is 27.01 active sessions, 89.42% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  59.01	    ADDM:3393773525_1_142
    2	    p30db2  40.99	    ADDM:3393773525_2_142

   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.68 active sessions, 15.49% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  79.86	    ADDM:3393773525_1_142
    2	    p30db2  20.14	    ADDM:3393773525_2_142

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 3.12% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER13.CF1" with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 108781
      physical reads, 15364 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .94 active sessions, 3.12% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER14.CF1" with
      object ID 73470.
      Related Object
	 Database object with ID 73470.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 134255
      physical reads, 17352 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .94 active sessions, 3.12% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER17.CF1" with
      object ID 73486.
      Related Object
	 Database object with ID 73486.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109233
      physical reads, 15127 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 3.07% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER16.CF1" with
      object ID 73481.
      Related Object
	 Database object with ID 73481.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114172
      physical reads, 17692 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 3.07% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER22.CF1" with
      object ID 73514.
      Related Object
	 Database object with ID 73514.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109399
      physical reads, 15155 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 26.97 active sessions, 89.42% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.63 active sessions, 5.39% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  62.26	    ADDM:3393773525_1_142
    2	    p30db2  37.74	    ADDM:3393773525_2_142

   Recommendation 1: Application Analysis
   Estimated benefit is 1.62 active sessions, 5.39% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 85% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.66 active sessions, 5.5% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    1	    p30db1  mcracpoc1.example.com  17.92	    59.33
    2	    p30db2  mcracpoc2.example.com  12.29	    40.67

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

End of Report
Report written to awr_rac.txt
SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  html







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
		    70	08 Feb 2020 10:44    1
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
		    83	08 Feb 2020 19:00    1
		    84	08 Feb 2020 20:00    1
		    85	08 Feb 2020 21:00    1
		    86	08 Feb 2020 22:00    1
		    87	08 Feb 2020 23:00    1
		    88	09 Feb 2020 00:00    1
		    89	09 Feb 2020 01:00    1
		    90	09 Feb 2020 02:00    1
		    91	09 Feb 2020 03:00    1
		    92	09 Feb 2020 04:00    1
		    93	09 Feb 2020 05:00    1
		    94	09 Feb 2020 06:00    1
		    95	09 Feb 2020 07:00    1
		    96	09 Feb 2020 08:00    1
		    97	09 Feb 2020 09:00    1
		    98	09 Feb 2020 10:00    1
		    99	09 Feb 2020 11:20    1
		   100	09 Feb 2020 11:30    1
		   101	09 Feb 2020 11:33    1
		   102	09 Feb 2020 11:43    1
		   103	09 Feb 2020 11:46    1
		   104	09 Feb 2020 11:56    1
		   105	09 Feb 2020 11:58    1
		   106	09 Feb 2020 12:08    1
		   107	09 Feb 2020 13:00    1
		   108	09 Feb 2020 14:00    1
		   109	09 Feb 2020 14:09    1
		   110	09 Feb 2020 14:19    1
		   111	09 Feb 2020 14:52    1
		   112	09 Feb 2020 15:02    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		   113	09 Feb 2020 16:00    1
		   114	09 Feb 2020 17:00    1
		   115	09 Feb 2020 18:00    1
		   116	09 Feb 2020 19:00    1
		   117	09 Feb 2020 20:00    1
		   118	09 Feb 2020 20:30    1
		   119	09 Feb 2020 20:40    1
		   120	09 Feb 2020 20:47    1
		   121	09 Feb 2020 20:57    1
		   122	09 Feb 2020 22:00    1
		   123	09 Feb 2020 23:00    1
		   124	10 Feb 2020 00:00    1
		   125	10 Feb 2020 01:00    1
		   126	10 Feb 2020 02:00    1
		   127	10 Feb 2020 03:00    1
		   128	10 Feb 2020 04:00    1
		   129	10 Feb 2020 05:00    1
		   130	10 Feb 2020 06:00    1
		   131	10 Feb 2020 07:00    1
		   132	10 Feb 2020 08:00    1
		   133	10 Feb 2020 09:00    1
		   134	10 Feb 2020 09:08    1
		   135	10 Feb 2020 09:18    1
		   136	10 Feb 2020 10:00    1
		   137	10 Feb 2020 10:47    1
		   138	10 Feb 2020 10:58    1
		   139	10 Feb 2020 11:09    1
		   140	10 Feb 2020 11:19    1
		   141	10 Feb 2020 11:21    1
		   142	10 Feb 2020 11:31    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 141

End   Snapshot Id specified: 142



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_141_142.html.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.html

<html lang="en"><head><title>AWR RAC Report for DB: P30DB, Snaps: 141-142</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY REPORT (RAC)

</h1>
<p />Database Summary<p />
<ul>
</ul>
<table border="0" class="tdiff" summary="Database Summary"><tr>
<th class="awrbg" colspan=" 8" id="Database">Database</th>
<th class="awrbg" colspan=" 2" id="SnapshotIds">Snapshot Ids</th>
<th class="awrbg" colspan=" 2" id="NumberofInstances">Number of Instances</th>
<th class="awrbg" colspan=" 2" id="NumberofHosts">Number of Hosts</th>
<th class="awrbg" colspan=" 2" id="ReportTotal(minutes)">Report Total (minutes)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Id">Id</th><th class="awrbg" scope="col" id="Name">Name</th><th class="awrbg" scope="col" id="UniqueName">Unique Name</th><th class="awrbg" scope="col" id="Role">Role</th><th class="awrbg" scope="col" id="Edition">Edition</th><th class="awrbg" scope="col" id="RAC">RAC</th><th class="awrbg" scope="col" id="CDB">CDB</th><th class="awrbg" scope="col" id="BlockSize">Block Size</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="Elapsedtime">Elapsed time</th></tr>
<tr><td align="right" headers="Database Id" class='awrclb'>3393773525</td><td headers="Database Name" class='awrc'>P30DB</td><td headers="Database UniqueName" class='awrc'>p30db</td><td headers="Database Role" class='awrc'>PRIMARY</td><td headers="Database Edition" class='awrc'>EE</td><td headers="Database RAC" class='awrc'>YES</td><td headers="Database CDB" class='awrc'>NO</td><td align="right" headers="Database BlockSize" class='awrc'>8192</td><td align="right" headers="SnapshotIds Begin" class='awrclb'>141</td><td align="right" headers="SnapshotIds End" class='awrc'>142</td><td align="right" headers="NumberofInstances InReport" class='awrclb'>2</td><td align="right" headers="NumberofInstances Total" class='awrc'>2</td><td align="right" headers="NumberofHosts InReport" class='awrclb'>2</td><td align="right" headers="NumberofHosts Total" class='awrc'>2</td><td align="right" headers="ReportTotal(minutes) DBtime" class='awrclb'>304.11</td><td align="right" headers="ReportTotal(minutes) Elapsedtime" class='awrcrb'>10.07</td></tr>
</table><p />
<p />Database Instances Included In Report<p />
<ul>
<li class="awr"> Listed in order of instance number, I#</li>
</ul>
<table border="0" class="tdiff" summary="Database Instances Included In Report. . Listed in order of instance number, I#"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Host</th><th class="awrbg" scope="col">Startup</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">Elapsed Time(min)</th><th class="awrbg" scope="col">DB time(min)</th><th class="awrbg" scope="col">Up Time(hrs)</th><th class="awrbg" scope="col">Avg Active Sessions</th><th class="awrbg" scope="col">Platform</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>p30db1</td><td class='awrc'>mcracpoc1.example.com</td><td class='awrc'>09-Feb-20 11:12</td><td class='awrc'>10-Feb-20 11:21</td><td class='awrc'>10-Feb-20 11:31</td><td class='awrc'>19.0.0.0.0</td><td align="right" class='awrc'>10.07</td><td align="right" class='awrc'>180.43</td><td align="right" class='awrc'>24.31</td><td align="right" class='awrc'>17.92</td><td class='awrc'>Linux x86 64-bit</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>p30db2</td><td class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>09-Feb-20 11:12</td><td class='awrnc'>10-Feb-20 11:21</td><td class='awrnc'>10-Feb-20 11:31</td><td class='awrnc'>19.0.0.0.0</td><td align="right" class='awrnc'>10.07</td><td align="right" class='awrnc'>123.68</td><td align="right" class='awrnc'>24.31</td><td align="right" class='awrnc'>12.29</td><td class='awrnc'>Linux x86 64-bit</td></tr>
</table><p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>30.21</td><td align="right" class='awrc'>98.81</td><td scope="row" class='awrc'>ADDM:3393773525_142</td><td class='awrc'>10-Feb-20 11:21</td><td class='awrc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>30.21</td><td align="right" class='awrnc'>89.42</td><td scope="row" class='awrnc'>ADDM:3393773525_142</td><td class='awrnc'>10-Feb-20 11:21</td><td class='awrnc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>30.21</td><td align="right" class='awrc'>15.49</td><td scope="row" class='awrc'>ADDM:3393773525_142</td><td class='awrc'>10-Feb-20 11:21</td><td class='awrc'>10-Feb-20 11:31</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>30.21</td><td align="right" class='awrnc'>5.39</td><td scope="row" class='awrnc'>ADDM:3393773525_142</td><td class='awrnc'>10-Feb-20 11:21</td><td class='awrnc'>10-Feb-20 11:31</td></tr>
</table><p />
<p />Cache Sizes<p />
<ul>
<li class="awr"> All values are in Megabytes </li>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values displayed only if different from Begin values</li>
</ul>
<table border="0" class="tdiff" summary="Cache Sizes. . All values are in Megabytes. Listed in order of instance number, I#. End values displayed only if different from Begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="MemoryTarget">Memory Target</th>
<th class="awrbg" colspan=" 2" id="SgaTarget">Sga Target</th>
<th class="awrbg" colspan=" 2" id="DBCache">DB Cache</th>
<th class="awrbg" colspan=" 2" id="SharedPool">Shared Pool</th>
<th class="awrbg" colspan=" 2" id="LargePool">Large Pool</th>
<th class="awrbg" colspan=" 2" id="JavaPool">Java Pool</th>
<th class="awrbg" colspan=" 2" id="StreamsPool">Streams Pool</th>
<th class="awrbg" colspan=" 2" id="PGATarget">PGA Target</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col">Log Buffer</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="MemoryTarget Begin" class='awrclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrclb'>8,000</td><td align="right" headers="DBCache End" class='awrc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrclb'>1,440</td><td align="right" headers="SharedPool End" class='awrc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrclb'>64</td><td align="right" headers="LargePool End" class='awrc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrclb'>3,232</td><td align="right" headers="PGATarget End" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="MemoryTarget Begin" class='awrnclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrnc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrnclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrnc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrnclb'>7,840</td><td align="right" headers="DBCache End" class='awrnc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrnclb'>1,600</td><td align="right" headers="SharedPool End" class='awrnc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrnclb'>64</td><td align="right" headers="LargePool End" class='awrnc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrnc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrnc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrnclb'>3,232</td><td align="right" headers="PGATarget End" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>9,664</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>7,920</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>1,520</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>64</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3,232</td><td align="right" class='awrcrbt'>&#160;</td><td align="right" class='awrct'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Min</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>9,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7,840</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,440</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3,232</td><td align="right" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Max</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>9,664</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>8,000</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>1,600</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>64</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>3,232</td><td align="right" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
</table><p />

<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#12010">OS Statistics</a></li>
<li class="awr"><a class="awr" href="#629">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#621">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#639">Global Activity Load Profile</a></li>
<li class="awr"><a class="awr" href="#605">Global Cache and Enqueue Statistics Summary</a></li>
<li class="awr"><a class="awr" href="#12033">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#12034">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#607">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#608">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#622">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#623">Global Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#630">I/O Statistics</a></li>
<li class="awr"><a class="awr" href="#12083">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#633">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#638">Supplemental Information</a></li>
<li class="awr"><a class="awr" href="#43">Active Session History(ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99994">ADDM Reports</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<a class="awr" name="12010"></a>
<h3 class="awr">OS Statistics By Instance</h3>
<ul>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values are diplayed only if different from begin values</li>
</ul>
<table border="0" class="tdiff" summary="OS Statistics By Instance. . Listed in order of instance number, I#. End values are diplayed only if different from begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="CPU">CPU</th>
<th class="awrbg" colspan=" 2" id="Load">Load</th>
<th class="awrbg" colspan=" 5" id="%CPU">% CPU</th>
<th class="awrbg" colspan=" 3" id="Time(s)">Time (s)</th>
<th class="awrbg" colspan=" 1" id="Memory">Memory</th>
<th class="awrbg" colspan=" 4" id="EndValues">End Values</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="%Busy">% Busy</th><th class="awrbg" scope="col" id="%Usr">% Usr</th><th class="awrbg" scope="col" id="%Sys">% Sys</th><th class="awrbg" scope="col" id="%WIO">% WIO</th><th class="awrbg" scope="col" id="%Idl">% Idl</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Idle">Idle</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="MB">MB</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Memory(M)">Memory (M)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="CPU #CPUs" class='awrclb'>8</td><td align="right" headers="CPU #Cores" class='awrc'>4</td><td align="right" headers="CPU #Sckts" class='awrc'>1</td><td align="right" headers="Load Begin" class='awrclb'>11.33</td><td align="right" headers="Load End" class='awrc'>14.74</td><td align="right" headers="%CPU %Busy" class='awrclb'>44.32</td><td align="right" headers="%CPU %Usr" class='awrc'>15.46</td><td align="right" headers="%CPU %Sys" class='awrc'>20.16</td><td align="right" headers="%CPU %WIO" class='awrc'>46.38</td><td align="right" headers="%CPU %Idl" class='awrc'>55.68</td><td align="right" headers="Time(s) Busy" class='awrclb'>1,974.86</td><td align="right" headers="Time(s) Idle" class='awrc'>2,481.44</td><td align="right" headers="Time(s) Total" class='awrc'>4,456.30</td><td align="right" headers="Memory MB" class='awrclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="CPU #CPUs" class='awrnclb'>8</td><td align="right" headers="CPU #Cores" class='awrnc'>4</td><td align="right" headers="CPU #Sckts" class='awrnc'>1</td><td align="right" headers="Load Begin" class='awrnclb'>6.48</td><td align="right" headers="Load End" class='awrnc'>8.67</td><td align="right" headers="%CPU %Busy" class='awrnclb'>36.69</td><td align="right" headers="%CPU %Usr" class='awrnc'>12.60</td><td align="right" headers="%CPU %Sys" class='awrnc'>17.13</td><td align="right" headers="%CPU %WIO" class='awrnc'>47.82</td><td align="right" headers="%CPU %Idl" class='awrnc'>63.31</td><td align="right" headers="Time(s) Busy" class='awrnclb'>1,624.16</td><td align="right" headers="Time(s) Idle" class='awrnc'>2,802.44</td><td align="right" headers="Time(s) Total" class='awrnc'>4,426.60</td><td align="right" headers="Memory MB" class='awrnclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrnclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrnc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrnc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclbt'>3,599.02</td><td align="right" class='awrct'>5,283.88</td><td align="right" class='awrct'>8,882.90</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="629"></a>
<h2 class="awr">
Time Model Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12014">Time Model</a></li>
<li class="awr"><a class="awr" href="#12015">Time Model - % of DB time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12014"></a>
<h3 class="awr">Time Model</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Time Model"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">DB time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">SQL Exec Ela (s)</th><th class="awrbg" scope="col">Parse Ela (s)</th><th class="awrbg" scope="col">Hard Parse Ela (s)</th><th class="awrbg" scope="col">PL/SQL Ela (s)</th><th class="awrbg" scope="col">Java Ela (s)</th><th class="awrbg" scope="col">bg time (s)</th><th class="awrbg" scope="col">bg CPU (s)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>10,825.84</td><td align="right" class='awrc'>831.83</td><td align="right" class='awrc'>10,825.60</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>33.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1,029.28</td><td align="right" class='awrc'>384.24</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>7,420.72</td><td align="right" class='awrnc'>566.40</td><td align="right" class='awrnc'>7,420.41</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>22.28</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>958.42</td><td align="right" class='awrnc'>415.61</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>18,246.56</td><td align="right" class='awrct'>1,398.24</td><td align="right" class='awrct'>18,246.00</td><td align="right" class='awrct'>0.18</td><td align="right" class='awrct'>0.10</td><td align="right" class='awrct'>56.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,987.69</td><td align="right" class='awrct'>799.85</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>9,123.28</td><td align="right" class='awrnc'>699.12</td><td align="right" class='awrnc'>9,123.00</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>28.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>993.85</td><td align="right" class='awrnc'>399.93</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>2,407.79</td><td align="right" class='awrc'>187.69</td><td align="right" class='awrc'>2,407.83</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>8.09</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>50.11</td><td align="right" class='awrc'>22.19</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12015"></a>
<h3 class="awr">Time Model - % of DB time</h3>
<ul>
<li class="awr"> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]</li>
</ul>
<table border="0" class="tdiff" summary="Time Model - % of DB time. . % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 6" id="%DBtime">% DB time</th>
<td>&#160;</td><th class="awrbg" colspan=" 1" id="%bgtime">% bg time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">% Total DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="SQLExecEla">SQL Exec Ela</th><th class="awrbg" scope="col" id="ParseEla">Parse Ela</th><th class="awrbg" scope="col" id="HardParse">Hard Parse</th><th class="awrbg" scope="col" id="PL/SQLEla">PL/SQL Ela</th><th class="awrbg" scope="col" id="JavaEla">Java Ela</th><th class="awrbg" scope="col">% Total bg time</th><th class="awrbg" scope="col" id="bgCPU">bg CPU</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>59.33</td><td align="right" headers="%DBtime DBCPU" class='awrclb'>7.68</td><td align="right" headers="%DBtime SQLExecEla" class='awrc'>100.00</td><td align="right" headers="%DBtime ParseEla" class='awrc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrc'>0.00</td><td align="right" class='awrc'>51.78</td><td align="right" headers="%bgtime bgCPU" class='awrcbb'>37.33</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>40.67</td><td align="right" headers="%DBtime DBCPU" class='awrnclb'>7.63</td><td align="right" headers="%DBtime SQLExecEla" class='awrnc'>100.00</td><td align="right" headers="%DBtime ParseEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrnc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrnc'>0.00</td><td align="right" class='awrnc'>48.22</td><td align="right" headers="%bgtime bgCPU" class='awrncbb'>43.36</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrclbt'>7.66</td><td align="right" class='awrct'>100.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrcbbt'>40.35</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="621"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12011">Foreground Wait Classes -	% of Total DB time</a></li>
<li class="awr"><a class="awr" href="#12012">Foreground Wait Classes</a></li>
<li class="awr"><a class="awr" href="#12013">Foreground Wait Classes -	% of DB time </a></li>
<li class="awr"><a class="awr" href="#12050">Top Timed Events</a></li>
<li class="awr"><a class="awr" href="#12051">Top Timed Foreground Events</a></li>
<li class="awr"><a class="awr" href="#12052">Top Timed Background Events</a></li>
<li class="awr"><a class="awr" href="#12053">Foreground Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12054">Background Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12055">Wait Event Histogram (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12011"></a>
<h3 class="awr">Foreground Wait Classes -  % of Total DB time</h3>
<ul>
<li class="awr"> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of Total DB time. . Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time"><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">User I/O</th><th class="awrbg" scope="col">Sys I/O</th><th class="awrbg" scope="col">Other</th><th class="awrbg" scope="col">Applic</th><th class="awrbg" scope="col">Commit</th><th class="awrbg" scope="col">Network</th><th class="awrbg" scope="col">Concurcy</th><th class="awrbg" scope="col">Config</th><th class="awrbg" scope="col">Cluster</th><th class="awrbg" scope="col">Admin</th><th class="awrbg" scope="col">Scheduler</th><th class="awrbg" scope="col">DB CPU</th></tr>
<tr><td class='awrc'>&#160;</td><td align="right" class='awrc'>89.42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.50</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>7.66</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12012"></a>
<h3 class="awr">Foreground Wait Classes</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">User I/O(s)</th><th class="awrbg" scope="col">Sys I/O(s)</th><th class="awrbg" scope="col">Other(s)</th><th class="awrbg" scope="col">Applic (s)</th><th class="awrbg" scope="col">Commit (s)</th><th class="awrbg" scope="col">Network (s)</th><th class="awrbg" scope="col">Concurcy (s)</th><th class="awrbg" scope="col">Config (s)</th><th class="awrbg" scope="col">Cluster (s)</th><th class="awrbg" scope="col">Admin (s)</th><th class="awrbg" scope="col">Scheduler (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>9,628.28</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.59</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>633.42</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>831.83</td><td align="right" class='awrc'>10,825.84</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>6,687.90</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.61</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>371.05</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>566.40</td><td align="right" class='awrnc'>7,420.72</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>16,316.17</td><td align="right" class='awrct'>0.34</td><td align="right" class='awrct'>1.20</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.06</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,004.47</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,398.24</td><td align="right" class='awrct'>18,246.56</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>8,158.09</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>502.23</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>699.12</td><td align="right" class='awrnc'>9,123.28</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>2,079.16</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>185.52</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>187.69</td><td align="right" class='awrc'>2,407.79</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12013"></a>
<h3 class="awr">Foreground Wait Classes -  % of DB time </h3>
<ul>
<li class="awr"> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of DB time . . % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 12" id="%DBtime">% DB time</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="UserI/O">User I/O</th><th class="awrbg" scope="col" id="SysI/O">Sys I/O</th><th class="awrbg" scope="col" id="Other">Other</th><th class="awrbg" scope="col" id="Applic">Applic</th><th class="awrbg" scope="col" id="Commit">Commit</th><th class="awrbg" scope="col" id="Network">Network</th><th class="awrbg" scope="col" id="Concurcy">Concurcy</th><th class="awrbg" scope="col" id="Config">Config</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Admin">Admin</th><th class="awrbg" scope="col" id="Scheduler">Scheduler</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col">% Total DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="%DBtime UserI/O" class='awrclb'>88.94</td><td align="right" headers="%DBtime SysI/O" class='awrc'>0.00</td><td align="right" headers="%DBtime Other" class='awrc'>0.01</td><td align="right" headers="%DBtime Applic" class='awrc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrc'>0.00</td><td align="right" headers="%DBtime Network" class='awrc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrc'>0.00</td><td align="right" headers="%DBtime Config" class='awrc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrc'>5.85</td><td align="right" headers="%DBtime Admin" class='awrc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrcrb'>7.68</td><td align="right" class='awrc'>59.33</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="%DBtime UserI/O" class='awrnclb'>90.12</td><td align="right" headers="%DBtime SysI/O" class='awrnc'>0.00</td><td align="right" headers="%DBtime Other" class='awrnc'>0.01</td><td align="right" headers="%DBtime Applic" class='awrnc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrnc'>0.00</td><td align="right" headers="%DBtime Network" class='awrnc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrnc'>0.00</td><td align="right" headers="%DBtime Config" class='awrnc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrnc'>5.00</td><td align="right" headers="%DBtime Admin" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrnc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrncrb'>7.63</td><td align="right" class='awrnc'>40.67</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>89.53</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>5.43</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrcrbt'>7.66</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12050"></a>
<h3 class="awr">Top Timed Events</h3>
<ul>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time ' 	     : Per-instance 'Wait Time Avg ' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Events. . Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time ' : Per-instance 'Wait Time Avg ' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>3,697,981</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16,317.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.41ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>89.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.10ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>395.31us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,398.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>171,479</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,146.88</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.69ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>6.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>503.28us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,495,746</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>803.99</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>537.52us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.41</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>534.76us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>522.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>546.99us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>17.30us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>52,829</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>185.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.51ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>612.41us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>271,799</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>148.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>545.22us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>542.35us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>529.37us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>555.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>18.35us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>38,957</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>97.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.49ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.49ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>91.14us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>4,528</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>33.86</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.48ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.19</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>344.20us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>17,523</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>21.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.12</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>5,966</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>16.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.80ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.93ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>179.83us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,066,753</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,629.16</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.66ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>88.95</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>831.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>95,221</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>606.72</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>916,508</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>501.32</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>546.99us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>32,728</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>104.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.18ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.96</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>165,944</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>92.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>555.33us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>19,467</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>47.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>17,523</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>21.37</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>2,337</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16.92</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.16</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>12,767</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.36</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>654.47us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>1,631,228</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>6,688.07</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>566.40</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>76,258</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>540.17</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>7.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>579,238</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>302.67</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>522.53us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>20,101</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>81.29</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>105,855</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>56.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>529.37us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.76</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>19,490</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>49.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.55ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>2,191</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>16.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.73ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>3,140</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.41</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>852</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.79</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.97ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12051"></a>
<h3 class="awr">Top Timed Foreground Events</h3>
<ul>
<li class="awr"> Foreground Activity is captured in release 11g and above </li>
<li class="awr"> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Foreground Events. . Foreground Activity is captured in release 11g and above. For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>3,697,700</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16,315.99</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.41ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>89.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.10ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>395.30us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,398.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,495,731</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>803.97</td><td align="right" headers="WaitTime AvgWait" class='awrc'>537.51us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.41</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>534.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>522.52us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>546.98us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>17.30us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>271,713</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>148.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>545.21us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>542.34us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>529.34us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>555.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>18.38us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>17,523</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>21.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>1</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>21,380</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>13.84</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>647.15us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>645.57us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>637.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>653.81us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>11.65us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>8,499</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>10.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>52.04us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>5,475</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.87</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>706.16us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>701.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>674.09us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>729.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>38.87us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrclb'>613</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.41</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.72ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>209.91us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>4,372</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>108.09us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>111.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>104.26us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>118.16us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>9.83us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,066,562</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,628.27</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.66ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>88.94</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>831.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>916,502</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>501.31</td><td align="right" headers="WaitTime AvgWait" class='awrc'>546.98us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>165,883</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>92.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>555.33us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>17,523</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>21.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>12,735</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.33</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>653.81us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>5,001</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.88</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.18ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>3,194</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.33</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>729.06us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrclb'>428</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.72</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>3,168</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.33</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>104.26us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>1,631,138</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>6,687.72</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.12</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>566.40</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>579,229</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>302.66</td><td align="right" headers="WaitTime AvgWait" class='awrc'>522.52us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>105,830</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>56.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>529.34us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.75</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>8,645</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.51</td><td align="right" headers="WaitTime AvgWait" class='awrc'>637.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>3,498</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.37</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.25ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>2,281</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.54</td><td align="right" headers="WaitTime AvgWait" class='awrc'>674.09us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>185</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.69</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.72ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>336.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>136</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.32</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12052"></a>
<h3 class="awr">Top Timed Background Events</h3>
<ul>
<li class="awr"> % of bg time: % of background elapsed time </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Background Events. . % of bg time: % of background elapsed time. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>171,464</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,146.81</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.69ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>57.70</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>503.21us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>799.85</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>40.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>52,810</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>185.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.51ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>9.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>612.63us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>38,957</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>97.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.49ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.88</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.49ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>91.14us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>4,529</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>33.86</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.48ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.70</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>343.97us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>5,822</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>16.37</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.81ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.82</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.82ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>169.27us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>1,649</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>11.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.29ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>1.99ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>6,588</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9.33</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.42ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.47</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.50ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>124.29us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>3,633</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.48ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.45</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.84ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>507.74us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>523</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>13.79ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>13.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>1.81ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>95,209</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>606.66</td><td align="right" headers="WaitTime AvgWait" class='awrct'>6.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>58.94</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>384.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>37.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>32,717</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>103.99</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.18ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>10.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>19,467</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>47.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.59</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>2,338</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16.93</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>2,818</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.80</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>3,536</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.50ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>831</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.29ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>1,812</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.84</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.12ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.37</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>224</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.76</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>12.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>76,255</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>540.15</td><td align="right" headers="WaitTime AvgWait" class='awrct'>7.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>56.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>415.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>43.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>20,093</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>81.27</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>8.48</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>19,490</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>49.79</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.55ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>2,191</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16.93</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.73ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>3,004</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.70ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>818</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.69</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>1,821</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.84ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.54</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>299</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.45</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.89ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.46</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>3,052</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12053"></a>
<h3 class="awr">Foreground Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>3,697,700</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16,315.99</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.41ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>89.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.10ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>395.30us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,495,731</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>803.97</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>537.51us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.41</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>534.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>522.52us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>546.98us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>17.30us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>271,713</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>148.14</td><td align="right" headers="WaitTime AvgWait" class='awrc'>545.21us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>542.34us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>529.34us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>555.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>18.38us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>17,523</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>21.37</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.12</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>21,380</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>13.84</td><td align="right" headers="WaitTime AvgWait" class='awrc'>647.15us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>645.57us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>637.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>653.81us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>11.65us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>8,499</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>10.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>52.04us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>5,475</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.87</td><td align="right" headers="WaitTime AvgWait" class='awrc'>706.16us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>701.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>674.09us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>729.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>38.87us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>613</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.41</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.72ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>209.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrclb'>4,372</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>108.09us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>111.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>104.26us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>118.16us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>9.83us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>117</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.44</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>38.09ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>336.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>336.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>336.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>336.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>144</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.49ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>119.01us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.17</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.73ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.78ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.45ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrnclb'>178</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>415.48us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>391.26us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>338.69us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>443.84us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>74.35us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>124</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>562.02us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>720.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>523.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>917.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>278.56us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>206</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>335.91us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>319.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>288.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>350.96us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>43.86us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>113</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>551.75us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>482.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>370.05us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>595.68us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>159.55us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.74ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.53ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.25ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrnclb'>73</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>511.53us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>529.82us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>476.43us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>583.21us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>75.50us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.97ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.33ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>49</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>592.22us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>593.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>582.39us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>605.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>16.22us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrclb'>97</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>270.10us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>265.94us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>255.03us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>276.85us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>15.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>422.61us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>578</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>26.10us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>22.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.38us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>4.63us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>30</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>481.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>481.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>281.27us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>681.73us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>283.17us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrclb'>13</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>878.69us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>878.69us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>878.69us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>878.69us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>652.19us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>650.02us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>632.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>667.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>24.48us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>SQL*Net break/reset to client</td><td align="right" headers="Event Waits" class='awrclb'>120</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>82.08us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>82.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>82.08us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>82.08us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.98ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>50</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>188.08us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>187.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>186.08us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>188.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.86us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>15</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>607.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>508.13us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>343.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>672.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>233.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>682.27us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>639.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>174.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>658.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>921.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>921.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>921.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>921.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS initialization</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache lock</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>880.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>880.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>880.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>880.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>147</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.15us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>187.52us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>20.03us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>355.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>236.86us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache pin</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>749.80us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>749.80us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>749.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>749.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>236.21us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>236.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>236.21us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>236.21us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>298.55us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>298.55us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>298.55us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>298.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.13ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>195</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>12.64us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>10.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.87us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.14us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>867.50us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>867.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>867.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>867.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: query</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>176.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>176.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>176.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>176.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>756.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>756.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>756.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>756.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: messages</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>177.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>177.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>177.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>177.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>480.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>480.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>480.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>480.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>191.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>191.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>191.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>191.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>18.67us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>18.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>18.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>18.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.80us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>8.80us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>8.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>watchdog main loop</td><td align="right" headers="Event Waits" class='awrnclb'>1,612</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4,836.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3000.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>26.50</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3000.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>195</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>600.14</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3077.62ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1911.70ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3822.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2701.92ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execution Msg</td><td align="right" headers="Event Waits" class='awrnclb'>90</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>24.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>24.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>15.06ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>33.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>12.70ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrclb'>54</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.82</td><td align="right" headers="WaitTime AvgWait" class='awrc'>15.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>403.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>176.08us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>806.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>570.05ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Msg Fragment</td><td align="right" headers="Event Waits" class='awrnclb'>240</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>503.22us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>503.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>457.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>548.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>64.20us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: need buffer</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>557.17us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>557.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>557.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>557.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12054"></a>
<h3 class="awr">Background Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%bgtime">%bg time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>171,464</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,146.81</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.69ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.58</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>503.21us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>52,810</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>185.26</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.51ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>612.63us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>38,957</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>97.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.49ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.49ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>91.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>4,529</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>33.86</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.48ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>343.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>5,822</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.81ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.82ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>169.27us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>1,649</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>11.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.68ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.29ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>8.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.99ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>6,588</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.33</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.42ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.50ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>124.29us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>3,633</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.48ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.84ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>507.74us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>523</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>7.21</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.79ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>12.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.81ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>599</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.40</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.34ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.31ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.88ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>612.52us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrclb'>108</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.90</td><td align="right" headers="WaitTime AvgWait" class='awrc'>26.81ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>26.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>26.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>27.57ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.08ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>5,675</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.37</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>417.03us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>415.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>393.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>437.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>31.06us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrclb'>1,736</td><td align="right" headers="Event %Timeouts" class='awrc'>52.02</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.20ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>73.31us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>279</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.41ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.90ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>535.88us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>41,684</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.18</td><td align="right" headers="WaitTime AvgWait" class='awrc'>28.21us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>28.18us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>25.02us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>31.34us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>4.47us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,572</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.81</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>514.43us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>553.47us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>507.81us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>599.14us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>64.58us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>22,081</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.61</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>27.74us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>27.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>27.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>245.46ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrnclb'>614</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>846.07us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>864.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>672.51us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>272.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DFS lock handle</td><td align="right" headers="Event Waits" class='awrclb'>560</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.41</td><td align="right" headers="WaitTime AvgWait" class='awrc'>736.26us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>740.47us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>656.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>824.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>118.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrnclb'>466</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.38</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>811.04us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>812.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>807.32us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>818.57us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>7.96us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AQ: RAC AQ Network</td><td align="right" headers="Event Waits" class='awrclb'>12,066</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.36</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.81us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.81us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>28.98us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>30.65us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.19us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>46</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.80ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CGS wait for IPC msg</td><td align="right" headers="Event Waits" class='awrclb'>12,252</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.33</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.21us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>27.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>26.76us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>27.66us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>632.52ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>271</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.31</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>848.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>511.07us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>477.84us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write temp</td><td align="right" headers="Event Waits" class='awrclb'>60</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.72ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.72ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>24.37us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>1,063</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>253.89us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>253.94us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>243.65us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>264.23us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.55us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>oracle thread bootstrap</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.21</td><td align="right" headers="WaitTime AvgWait" class='awrc'>23.72ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>23.72ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>23.69ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>23.76ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>49.64us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>66.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>49.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>624.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>99.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>69.56ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>47</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.18</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.93ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.55ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.21ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.90ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.91ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrnclb'>31</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.13</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.10ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>70.45us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>548</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>215.12us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>214.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>209.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>219.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.48us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>135</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>777.47us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>787.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>736.93us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>838.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>71.67us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrclb'>109</td><td align="right" headers="Event %Timeouts" class='awrc'>78.90</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>903.72us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>908.98us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>878.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>939.16us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>42.68us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache pin</td><td align="right" headers="Event Waits" class='awrnclb'>135</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>701.24us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>698.44us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>684.39us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>712.48us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>19.86us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file async I/O submit</td><td align="right" headers="Event Waits" class='awrclb'>9,848</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.20us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.24us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.77us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>663.55ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrnclb'>100</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>844.72us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>844.72us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>843.24us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>846.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.09us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrclb'>925</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>81.85us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>81.85us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>81.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>82.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>501.70ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.49ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>553.69us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.87ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.84ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>33.38us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrnclb'>177</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>314.85us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>312.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>306.62us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>318.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>8.25us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>115</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>480.40us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>496.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>473.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>519.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>32.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.52ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>240.64us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data query</td><td align="right" headers="Event Waits" class='awrclb'>38</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.39ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.39ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.48ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>131.86us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ksxr poll remote instances</td><td align="right" headers="Event Waits" class='awrnclb'>1,601</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>31.81us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>31.69us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.07us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>35.31us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.12us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>86</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>576.43us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>603.04us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>539.48us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>666.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>89.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR wait for redo copy</td><td align="right" headers="Event Waits" class='awrnclb'>136</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>335.66us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>337.11us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>333.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>340.51us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.81us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data update</td><td align="right" headers="Event Waits" class='awrclb'>39</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.06ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>936.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>186.00us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,225</td><td align="right" headers="Event %Timeouts" class='awrnc'>98.61</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>33.53us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>33.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>32.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>35.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.08us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>43</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>868.84us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>837.93us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>784.78us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>891.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>75.17us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrnclb'>104</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>336.23us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>331.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>319.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>344.15us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>17.66us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" headers="Event Waits" class='awrclb'>56</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>622.84us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>738.28us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>618.56us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>858.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>169.31us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrnclb'>96</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>353.49us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>354.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>349.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>358.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.72us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrclb'>40</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>749.63us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>683.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>551.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>815.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>186.79us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>21</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.47ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.63ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>219.84us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrclb'>60</td><td align="right" headers="Event %Timeouts" class='awrc'>20.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>432.23us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>460.28us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>366.79us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>553.76us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>132.21us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrnclb'>28</td><td align="right" headers="Event %Timeouts" class='awrnc'>28.57</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>774.39us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>809.39us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>646.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.97ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>230.99us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.11ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr disk read</td><td align="right" headers="Event Waits" class='awrnclb'>28</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>664.71us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>664.71us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>664.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>664.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>os thread creation</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>224.08us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>libcache interrupt action by LCK</td><td align="right" headers="Event Waits" class='awrnclb'>2,347</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.52us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>8.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.57us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>15</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>.96ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>854.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>190.92us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrnclb'>48</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>236.85us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>200.90us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>150.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>251.66us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>71.78us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.81ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.81ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.81ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CO - master slave det</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>766.30us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>766.30us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>766.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>766.30us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>639.91us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>637.20us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>627.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>647.14us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>14.07us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.99ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>49.07us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: MGA shared context root latch</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.17ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>748.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>502.28us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: SM -  contention</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.97ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>828.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>295.22us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrclb'>217</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>23.87us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>22.90us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>18.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>26.87us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.61us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TA - contention</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.20ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>759.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>628.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>156.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>151.26us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>110.69us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>191.82us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>57.37us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>360.92us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>351.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>223.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>479.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>180.90us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>629.14us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>685.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>606.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>764.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>111.25us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.23ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.23ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>96.47us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>100.07us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>73.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>127.08us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>38.20us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc index operation</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.48ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.48ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.48ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: messages</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>301.25us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>273.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>162.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>384.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>157.54us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: DW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.19ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>335.17us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>647.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>647.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>647.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>647.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>latch: redo writing</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>625.33us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>818.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>240.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>817.42us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>447.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>447.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>334.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>561.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>160.87us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: checkpoint queue latch</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>479.67us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>622.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>195.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>603.87us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TD - KTF dump entries</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>602.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>602.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>512.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>692.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>127.28us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache mutex</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>161.80us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>161.80us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>161.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>161.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: MGA shared context latch</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>311.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>311.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>139.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>483.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>243.24us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>GCR CSS group query</td><td align="right" headers="Event Waits" class='awrnclb'>38</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.76us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>14.76us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>13.95us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>15.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.15us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>GCR CSS group update</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>15.56us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>15.56us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>16.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>864.24ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: kjci process context latch</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>267.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>267.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>267.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>267.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>208.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>208.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>208.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>208.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current split</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>392.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>392.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>392.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>392.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: MGA heap latch</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>141.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>141.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>141.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>141.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrnclb'>37</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.49us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.52us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>328.30ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy acquire</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>104.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>104.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>104.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>104.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>35</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.23us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.13us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.32us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>134.91ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>119.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>119.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>119.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>119.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>44.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>44.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>44.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>44.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.14us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>235.70ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>undo_retention publish retry</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM background starting</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>rdbms ipc message</td><td align="right" headers="Event Waits" class='awrclb'>403,760</td><td align="right" headers="Event %Timeouts" class='awrc'>5.53</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>27,347.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>67.73ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>13.76</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>67.83ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>65.17ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>70.49ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.76ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Idle Wait</td><td align="right" headers="Event Waits" class='awrnclb'>30</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>20,549.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>684.97 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>10.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>684.97 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>684.90 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>685.04 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>93.33ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Space Manager: slave idle wait</td><td align="right" headers="Event Waits" class='awrclb'>5,141</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19,293.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3752.79ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>9.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3752.80ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3748.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3757.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.96ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>class slave wait</td><td align="right" headers="Event Waits" class='awrnclb'>15,185</td><td align="right" headers="Event %Timeouts" class='awrnc'>78.58</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8,617.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>567.47ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>567.60ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>547.85ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>587.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>27.94ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>wait for unread message on broadcast channel</td><td align="right" headers="Event Waits" class='awrclb'>1,852</td><td align="right" headers="Event %Timeouts" class='awrc'>100.05</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3,628.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1959.00ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.83</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1959.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1958.45ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1959.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>776.46us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ges remote message</td><td align="right" headers="Event Waits" class='awrnclb'>35,083</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,416.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>68.88ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>68.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>68.78ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>68.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>143.72us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>GCR sleep</td><td align="right" headers="Event Waits" class='awrclb'>8,049</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,415.59</td><td align="right" headers="WaitTime AvgWait" class='awrc'>300.11ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>300.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>300.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>300.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>21.91us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>pmon timer</td><td align="right" headers="Event Waits" class='awrnclb'>805</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,414.97</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2999.96ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2999.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2999.90ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>89.99us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>DIAG idle wait</td><td align="right" headers="Event Waits" class='awrclb'>15,137</td><td align="right" headers="Event %Timeouts" class='awrc'>82.84</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,412.75</td><td align="right" headers="WaitTime AvgWait" class='awrc'>159.39ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>159.40ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>159.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>159.78ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>537.77us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs yield cpu</td><td align="right" headers="Event Waits" class='awrnclb'>81,731</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.99</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,408.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.47ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>29.47ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>29.28ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>269.22us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>gcs remote message</td><td align="right" headers="Event Waits" class='awrclb'>2,348,801</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,142.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>911.98us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>928.01us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>800.07us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>180.93us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>LGWR worker group idle</td><td align="right" headers="Event Waits" class='awrnclb'>152,014</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,218.58</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.02ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>8.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.72ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.09ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ASM cluster membership changes</td><td align="right" headers="Event Waits" class='awrclb'>692</td><td align="right" headers="Event %Timeouts" class='awrc'>84.54</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,211.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1750.38ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1750.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1750.38ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1750.39ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>9.30us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>lreg timer</td><td align="right" headers="Event Waits" class='awrnclb'>404</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.75</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,210.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2995.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2995.25ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2987.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3002.64ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>10.45ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: waiting for time management or cleanup tasks</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,210.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>OFS idle</td><td align="right" headers="Event Waits" class='awrnclb'>403</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,209.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3000.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3000.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3000.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.25us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,208.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.43 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.43 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.43 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.44 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>12.44ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM background timer</td><td align="right" headers="Event Waits" class='awrnclb'>4,689</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,208.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>257.70ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>258.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>247.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>269.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>15.35ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>heartbeat redo informer</td><td align="right" headers="Event Waits" class='awrclb'>1,208</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,208.17</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1000.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1000.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1000.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>11.88us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SCM slave idle</td><td align="right" headers="Event Waits" class='awrnclb'>12,125</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,208.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>99.64ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>99.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>99.47ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>99.81ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>235.47us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pman timer</td><td align="right" headers="Event Waits" class='awrclb'>402</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,205.87</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.68ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.09us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PING</td><td align="right" headers="Event Waits" class='awrnclb'>1,096</td><td align="right" headers="Event %Timeouts" class='awrnc'>21.53</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1095.45ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1095.63ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1081.64ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1109.62ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>19.79ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>shared server idle wait</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>dispatcher timer</td><td align="right" headers="Event Waits" class='awrnclb'>20</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>60.01 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>381.70us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>VKRM Idle</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>AQPC idle</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>30.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>189.12us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Gap Manager</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>91.78us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>smon timer</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>300.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>300.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>300.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>300.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>92.98us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Timer</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>600.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>16.97us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>84</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,176.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.59</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.95us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" headers="Event Waits" class='awrclb'>42</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,176.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>28.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.59</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>269.37ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrnclb'>131</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.20ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.80ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrclb'>123</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>790.28us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>792.03us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>720.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>864.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>101.78us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,315</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>28.82us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.82us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>24.81us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>32.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.66us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.17ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>55.03us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.97ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.97ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>877.05us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>134.48us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: need buffer</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>439.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>439.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>439.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>439.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat monitor sleep</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12055"></a>
<h3 class="awr">Wait Event Histogram (Global)</h3>
<ul>
<li class="awr"> When % of Total Waits is  0.0 the count is displayed in parenthesis</li>
</ul>
<table border="0" class="tdiff" summary="This table displays wait event histogram information"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 22" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us"> &lt;8us</th><th class="awrbg" scope="col" id="&lt;16us"> &lt;16us</th><th class="awrbg" scope="col" id="&lt;32us"> &lt;32us</th><th class="awrbg" scope="col" id="&lt;64us"> &lt;64us</th><th class="awrbg" scope="col" id="&lt;128us"> &lt;128us</th><th class="awrbg" scope="col" id="&lt;256us"> &lt;256us</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms"> &lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms"> &lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms"> &lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms"> &lt;64ms</th><th class="awrbg" scope="col" id="&lt;128ms"> &lt;128ms</th><th class="awrbg" scope="col" id="&lt;256ms"> &lt;256ms</th><th class="awrbg" scope="col" id="&lt;512ms"> &lt;512ms</th><th class="awrbg" scope="col" id="&lt;1s"> &lt;1s</th><th class="awrbg" scope="col" id="&gt;=1s"> &gt;=1s</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>12.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>41.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>64.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>20.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>5677</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>37.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>29.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>12.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>82.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>39</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>59.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>35.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>560</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>35.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>52.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>482</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>59.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>1683</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>62.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>22.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>563</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>45.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group query</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>81.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group update</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>91.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>3630</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>934</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>37.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>1275</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>82.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>4432</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>44.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1738</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>31.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>4555</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>36.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>42.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>52.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>136</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>22.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>24.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>22.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>6580</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>362</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>20.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>51.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>43.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>56.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>60</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>22.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>120</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>28.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>230</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>89.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>34.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>86.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>598</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>26.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>58.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>5958</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>58.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>9846</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>38.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>31</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>48.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>51.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>3.7M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>85.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(122)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>60</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>55.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: AF - task serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>71.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: DW - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>72.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>44</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>100</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>41.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>41.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: SM -  contention</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TX - allocate ITL entry</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>55.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy acquire</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>25</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>32.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>10.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>49.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>32.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>1.5M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>60.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>29.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(436)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>612</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>26.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>47.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>41.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>21.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>37.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>53.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>5792</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>34.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>51.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>271.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>59.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>31.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(92)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>244</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>61.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>116</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>54.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>17.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>43.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>49.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>61.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current retry</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>713</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>39.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1594</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>1266</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>21.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>35.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA heap latch</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context root latch</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>26</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>146</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>181</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>161</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>274</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>26.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: kjci process context latch</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>29.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>35.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>174</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>24.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>2362</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>140</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>65.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>140</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>62.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>171.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>31.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>55.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(8)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>523</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>19.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>48</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>22.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>45.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>55</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>34.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>58.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache mutex</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="639"></a>
<h2 class="awr">
Global Activity Load Profile
</h2>
<ul>
<li class="awr"><a class="awr" href="#12016">System Statistics</a></li>
<li class="awr"><a class="awr" href="#12017">System Statistics - Per Second</a></li>
<li class="awr"><a class="awr" href="#12018">System Statistics - Per Transaction</a></li>
<li class="awr"><a class="awr" href="#12030">SysStat and Global Messaging  - RAC</a></li>
<li class="awr"><a class="awr" href="#12031">SysStat and Global Messaging (per Sec)- RAC</a></li>
<li class="awr"><a class="awr" href="#12032">SysStat and Global Messaging (per Tx)- RAC</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12016"></a>
<h3 class="awr">System Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Redo Size (k)</th><th class="awrbg" scope="col">Block Changes</th><th class="awrbg" scope="col">User Calls</th><th class="awrbg" scope="col">Execs</th><th class="awrbg" scope="col">Parses</th><th class="awrbg" scope="col">Logons</th><th class="awrbg" scope="col">Txns</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>5,345,958</td><td align="right" class='awrc'>2,070,440</td><td align="right" class='awrc'>300,804</td><td align="right" class='awrc'>296,909</td><td align="right" class='awrc'>891,622</td><td align="right" class='awrc'>197</td><td align="right" class='awrc'>722,307</td><td align="right" class='awrc'>1,458</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>108,139</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>5,252,362</td><td align="right" class='awrnc'>1,633,034</td><td align="right" class='awrnc'>256,076</td><td align="right" class='awrnc'>235,923</td><td align="right" class='awrnc'>711,639</td><td align="right" class='awrnc'>300</td><td align="right" class='awrnc'>574,126</td><td align="right" class='awrnc'>1,450</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>85,851</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>10,598,320</td><td align="right" class='awrct'>3,703,474</td><td align="right" class='awrct'>556,880</td><td align="right" class='awrct'>532,832</td><td align="right" class='awrct'>1,603,261</td><td align="right" class='awrct'>497</td><td align="right" class='awrct'>1,296,433</td><td align="right" class='awrct'>2,908</td><td align="right" class='awrct'>40</td><td align="right" class='awrct'>193,990</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>5,299,160</td><td align="right" class='awrnc'>1,851,737</td><td align="right" class='awrnc'>278,440</td><td align="right" class='awrnc'>266,416</td><td align="right" class='awrnc'>801,631</td><td align="right" class='awrnc'>249</td><td align="right" class='awrnc'>648,217</td><td align="right" class='awrnc'>1,454</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>96,995</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>66,182</td><td align="right" class='awrc'>309,293</td><td align="right" class='awrc'>31,627</td><td align="right" class='awrc'>43,124</td><td align="right" class='awrc'>127,267</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>104,780</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>15,760</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12017"></a>
<h3 class="awr">System Statistics - Per Second</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Second"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/s</th><th class="awrbg" scope="col">Physical Reads/s</th><th class="awrbg" scope="col">Physical Writes/s</th><th class="awrbg" scope="col">Redo Size (k)/s</th><th class="awrbg" scope="col">Block Changes/s</th><th class="awrbg" scope="col">User Calls/s</th><th class="awrbg" scope="col">Execs/s</th><th class="awrbg" scope="col">Parses/s</th><th class="awrbg" scope="col">Logons/s</th><th class="awrbg" scope="col">Txns/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>8,844.99</td><td align="right" class='awrc'>3,425.58</td><td align="right" class='awrc'>497.69</td><td align="right" class='awrc'>491.24</td><td align="right" class='awrc'>1,475.21</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>1,195.07</td><td align="right" class='awrc'>2.41</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>178.92</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>8,690.27</td><td align="right" class='awrnc'>2,701.93</td><td align="right" class='awrnc'>423.69</td><td align="right" class='awrnc'>390.34</td><td align="right" class='awrnc'>1,177.44</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>949.92</td><td align="right" class='awrnc'>2.40</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>142.04</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>17,535.26</td><td align="right" class='awrct'>6,127.51</td><td align="right" class='awrct'>921.38</td><td align="right" class='awrct'>881.59</td><td align="right" class='awrct'>2,652.64</td><td align="right" class='awrct'>0.82</td><td align="right" class='awrct'>2,144.99</td><td align="right" class='awrct'>4.81</td><td align="right" class='awrct'>0.07</td><td align="right" class='awrct'>320.96</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>8,767.63</td><td align="right" class='awrnc'>3,063.76</td><td align="right" class='awrnc'>460.69</td><td align="right" class='awrnc'>440.79</td><td align="right" class='awrnc'>1,326.32</td><td align="right" class='awrnc'>0.41</td><td align="right" class='awrnc'>1,072.49</td><td align="right" class='awrnc'>2.41</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>160.48</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>109.41</td><td align="right" class='awrc'>511.70</td><td align="right" class='awrc'>52.32</td><td align="right" class='awrc'>71.35</td><td align="right" class='awrc'>210.55</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>173.35</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>26.07</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12018"></a>
<h3 class="awr">System Statistics - Per Transaction</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Transaction"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/tx</th><th class="awrbg" scope="col">Physical Reads/tx</th><th class="awrbg" scope="col">Physical Writes/tx</th><th class="awrbg" scope="col">Redo Size (k)/tx</th><th class="awrbg" scope="col">Block Changes/tx</th><th class="awrbg" scope="col">User Calls/tx</th><th class="awrbg" scope="col">Execs/tx</th><th class="awrbg" scope="col">Parses/tx</th><th class="awrbg" scope="col">Logons/tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>49.44</td><td align="right" class='awrc'>19.15</td><td align="right" class='awrc'>2.78</td><td align="right" class='awrc'>2.75</td><td align="right" class='awrc'>8.25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.68</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>61.18</td><td align="right" class='awrnc'>19.02</td><td align="right" class='awrnc'>2.98</td><td align="right" class='awrnc'>2.75</td><td align="right" class='awrnc'>8.29</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>6.69</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>55.31</td><td align="right" class='awrct'>19.08</td><td align="right" class='awrct'>2.88</td><td align="right" class='awrct'>2.75</td><td align="right" class='awrct'>8.27</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>6.68</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12030"></a>
<h3 class="awr">SysStat and Global Messaging  - RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging  - RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceived">Blocks Received</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)">CPU (seconds)</th>
<th class="awrbg" colspan=" 6" id="Messages">Messages</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost">Lost</th><th class="awrbg" scope="col" id="Failure">Failure</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceived GCCurrent" class='awrclb'>16,228</td><td align="right" headers="BlocksReceived GCCR" class='awrc'>5,162</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>10,949</td><td align="right" headers="BlocksServed GCCR" class='awrc'>5,001</td><td align="right" headers="CPU(seconds) GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrc'>0</td><td align="right" headers="Messages GCSReceived" class='awrclb'>2,690,998</td><td align="right" headers="Messages GESReceived" class='awrc'>2,346</td><td align="right" headers="Messages GCSSent" class='awrc'>3,243,393</td><td align="right" headers="Messages GESSent" class='awrc'>1,829</td><td align="right" headers="Messages SentDirect" class='awrc'>1,150,356</td><td align="right" headers="Messages SentIndir" class='awrc'>1,374,495</td><td align="right" headers="GCBlks Lost" class='awrclb'>0</td><td align="right" headers="GCCR Failure" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceived GCCurrent" class='awrnclb'>10,961</td><td align="right" headers="BlocksReceived GCCR" class='awrnc'>5,002</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>16,255</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>5,165</td><td align="right" headers="CPU(seconds) GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrnc'>0</td><td align="right" headers="Messages GCSReceived" class='awrnclb'>3,243,764</td><td align="right" headers="Messages GESReceived" class='awrnc'>1,835</td><td align="right" headers="Messages GCSSent" class='awrnc'>2,691,944</td><td align="right" headers="Messages GESSent" class='awrnc'>2,340</td><td align="right" headers="Messages SentDirect" class='awrnc'>742,230</td><td align="right" headers="Messages SentIndir" class='awrnc'>826,947</td><td align="right" headers="GCBlks Lost" class='awrnclb'>0</td><td align="right" headers="GCCR Failure" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>27,189</td><td align="right" class='awrct'>10,164</td><td align="right" class='awrclbt'>27,204</td><td align="right" class='awrct'>10,166</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>5,934,762</td><td align="right" class='awrct'>4,181</td><td align="right" class='awrct'>5,935,337</td><td align="right" class='awrct'>4,169</td><td align="right" class='awrct'>1,892,586</td><td align="right" class='awrct'>2,201,442</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>13,595</td><td align="right" class='awrnc'>5,082</td><td align="right" class='awrnclb'>13,602</td><td align="right" class='awrnc'>5,083</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2,967,381</td><td align="right" class='awrnc'>2,091</td><td align="right" class='awrnc'>2,967,669</td><td align="right" class='awrnc'>2,085</td><td align="right" class='awrnc'>946,293</td><td align="right" class='awrnc'>1,100,721</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>3,724</td><td align="right" class='awrc'>113</td><td align="right" class='awrclb'>3,752</td><td align="right" class='awrc'>116</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>390,865</td><td align="right" class='awrc'>361</td><td align="right" class='awrc'>389,933</td><td align="right" class='awrc'>361</td><td align="right" class='awrc'>288,589</td><td align="right" class='awrc'>387,175</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12031"></a>
<h3 class="awr">SysStat and Global Messaging (per Sec)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Sec)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedPerSecond">Blocks Received Per Second</th>
<th class="awrbg" colspan=" 2" id="BlocksServedperSecond">Blocks Served per Second</th>
<th class="awrbg" colspan=" 2" id="CPUsecondsperSecond">CPU seconds per Second</th>
<th class="awrbg" colspan=" 6" id="MessagesPerSecond">Messages Per Second</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent</th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/s">Lost/s</th><th class="awrbg" scope="col" id="Fail/s">Fail/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrclb'>26.85</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrc'>8.54</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrclb'>18.12</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrc'>8.27</td><td align="right" headers="CPUsecondsperSecond GC" class='awrclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrclb'>4,452.31</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrc'>3.88</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrc'>5,366.26</td><td align="right" headers="MessagesPerSecond GESSent" class='awrc'>3.03</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrc'>1,903.29</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrc'>2,274.13</td><td align="right" headers="GCBlks Lost/s" class='awrclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrnclb'>18.14</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrnc'>8.28</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrnclb'>26.89</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrnc'>8.55</td><td align="right" headers="CPUsecondsperSecond GC" class='awrnclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrnclb'>5,366.95</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrnc'>3.04</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrnc'>4,453.94</td><td align="right" headers="MessagesPerSecond GESSent" class='awrnc'>3.87</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrnc'>1,228.05</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrnc'>1,368.22</td><td align="right" headers="GCBlks Lost/s" class='awrnclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>44.99</td><td align="right" class='awrct'>16.82</td><td align="right" class='awrclbt'>45.01</td><td align="right" class='awrct'>16.82</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>9,819.26</td><td align="right" class='awrct'>6.92</td><td align="right" class='awrct'>9,820.20</td><td align="right" class='awrct'>6.90</td><td align="right" class='awrct'>3,131.34</td><td align="right" class='awrct'>3,642.35</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>22.49</td><td align="right" class='awrnc'>8.41</td><td align="right" class='awrnclb'>22.50</td><td align="right" class='awrnc'>8.41</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>4,909.63</td><td align="right" class='awrnc'>3.46</td><td align="right" class='awrnc'>4,910.10</td><td align="right" class='awrnc'>3.45</td><td align="right" class='awrnc'>1,565.67</td><td align="right" class='awrnc'>1,821.17</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>6.16</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrclb'>6.21</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>646.75</td><td align="right" class='awrc'>0.60</td><td align="right" class='awrc'>645.11</td><td align="right" class='awrc'>0.60</td><td align="right" class='awrc'>477.46</td><td align="right" class='awrc'>640.57</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12032"></a>
<h3 class="awr">SysStat and Global Messaging (per Tx)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Tx)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedperTx">Blocks Received per Tx</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)perTx">CPU (seconds) per Tx</th>
<th class="awrbg" colspan=" 6" id="MessagesperTransaction">Messages per Transaction</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/Tx">Lost/Tx</th><th class="awrbg" scope="col" id="Fail/Tx">Fail/Tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrclb'>0.15</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrc'>0.05</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>0.10</td><td align="right" headers="BlocksServed GCCR" class='awrc'>0.05</td><td align="right" headers="CPU(seconds)perTx GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrclb'>24.88</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrc'>0.02</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrc'>29.99</td><td align="right" headers="MessagesperTransaction GESSent" class='awrc'>0.02</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrc'>10.64</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrc'>12.71</td><td align="right" headers="GCBlks Lost/Tx" class='awrclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrcbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrnclb'>0.13</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrnc'>0.06</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>0.19</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>0.06</td><td align="right" headers="CPU(seconds)perTx GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrnclb'>37.78</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrnc'>0.02</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrnc'>31.36</td><td align="right" headers="MessagesperTransaction GESSent" class='awrnc'>0.03</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrnc'>8.65</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrnc'>9.63</td><td align="right" headers="GCBlks Lost/Tx" class='awrnclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrncbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>0.14</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrclbt'>0.15</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>31.33</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>30.67</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>9.64</td><td align="right" class='awrct'>11.17</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrcbbt'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="605"></a>
<h2 class="awr">
Global Cache and Enqueue Statistics Summary
</h2>
<ul>
<li class="awr"><a class="awr" href="#12019">Global Cache Efficiency Percentages</a></li>
<li class="awr"><a class="awr" href="#12020">Global Latency Characteristics</a></li>
<li class="awr"><a class="awr" href="#12021">Global Messaging Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12019"></a>
<h3 class="awr">Global Cache Efficiency Percentages</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Cache Efficiency Percentages"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="BufferAccess">Buffer Access</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Local%">Local %</th><th class="awrbg" scope="col" id="Remote%">Remote %</th><th class="awrbg" scope="col" id="Disk%">Disk %</th><th class="awrbg" scope="col">Locality %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BufferAccess Local%" class='awrclb'>60.87</td><td align="right" headers="BufferAccess Remote%" class='awrc'>0.40</td><td align="right" headers="BufferAccess Disk%" class='awrcrb'>38.73</td><td align="right" class='awrc'>47.34</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BufferAccess Local%" class='awrnclb'>68.60</td><td align="right" headers="BufferAccess Remote%" class='awrnc'>0.30</td><td align="right" headers="BufferAccess Disk%" class='awrncrb'>31.09</td><td align="right" class='awrnc'>58.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12020"></a>
<h3 class="awr">Global Latency Characteristics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Latency Characteristics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CUBlocks">CU Blocks</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">GE Get Time (us)</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Build|Time(us)">Build Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CRSrvd%">Log Flush CR Srvd %</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Pin|Time(us)">Pin Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CUSrvd%">Log Flush CU Srvd %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>42</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrclb'>1186</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrc'>575</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrc'>7813</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrc'>0.64</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrclb'>679</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrc'>10000</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrc'>3714</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrcrb'>0.32</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>34</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrnclb'>1082</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrnc'>481</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrnc'>4667</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrnc'>0.58</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrnclb'>652</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrnc'>&#160;</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrnc'>3462</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrncrb'>0.32</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12021"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="QueueTime(us)">Queue Time (us)</th>
<th class="awrbg" colspan=" 2" id="ProcessTime(us)">Process Time (us)</th>
<th class="awrbg" colspan=" 3" id="%MessagesSent">% Messages Sent</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Sent">Sent</th><th class="awrbg" scope="col" id="onksxp">on ksxp</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="GCSmsgs">GCS msgs</th><th class="awrbg" scope="col" id="GESmsgs">GES msgs</th><th class="awrbg" scope="col" id="Direct">Direct</th><th class="awrbg" scope="col" id="Indirect">Indirect</th><th class="awrbg" scope="col" id="FlowCtrl">Flow Ctrl</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="QueueTime(us) Sent" class='awrclb'>1118</td><td align="right" headers="QueueTime(us) onksxp" class='awrc'>952</td><td align="right" headers="QueueTime(us) Received" class='awrc'>11</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrclb'>42</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrc'>34</td><td align="right" headers="%MessagesSent Direct" class='awrclb'>45.49</td><td align="right" headers="%MessagesSent Indirect" class='awrc'>54.35</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrcrb'>0.17</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="QueueTime(us) Sent" class='awrnclb'>896</td><td align="right" headers="QueueTime(us) onksxp" class='awrnc'>919</td><td align="right" headers="QueueTime(us) Received" class='awrnc'>12</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrnclb'>35</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrnc'>35</td><td align="right" headers="%MessagesSent Direct" class='awrnclb'>47.28</td><td align="right" headers="%MessagesSent Indirect" class='awrnc'>52.68</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrncrb'>0.05</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12033"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global CR Server Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 5" id="BlockRequests">Block Requests</th>
<th class="awrbg" colspan=" 5" id="Results">Results</th>
<th class="awrbg" colspan=" 1" id="Fairness">Fairness</th>
<th class="awrbg" colspan=" 1" id="Light">Light</th>
<th class="awrbg" colspan=" 3" id="Total">Total</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="CR">CR</th><th class="awrbg" scope="col" id="CU">CU</th><th class="awrbg" scope="col" id="Data">Data</th><th class="awrbg" scope="col" id="Undo">Undo</th><th class="awrbg" scope="col" id="TX">TX</th><th class="awrbg" scope="col" id="Current">Current</th><th class="awrbg" scope="col" id="Private">Private</th><th class="awrbg" scope="col" id="Zero">Zero</th><th class="awrbg" scope="col" id="DskRd">Dsk Rd</th><th class="awrbg" scope="col" id="Fail">Fail</th><th class="awrbg" scope="col" id="DownConv">Down Conv</th><th class="awrbg" scope="col" id="Works">Works</th><th class="awrbg" scope="col" id="Flushes">Flushes</th><th class="awrbg" scope="col" id="Builds">Builds</th><th class="awrbg" scope="col" id="Errors">Errors</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlockRequests CR" class='awrclb'>3,506</td><td align="right" headers="BlockRequests CU" class='awrc'>1,492</td><td align="right" headers="BlockRequests Data" class='awrc'>3,506</td><td align="right" headers="BlockRequests Undo" class='awrc'>0</td><td align="right" headers="BlockRequests TX" class='awrc'>1,474</td><td align="right" headers="Results Current" class='awrclb'>4,997</td><td align="right" headers="Results Private" class='awrc'>1</td><td align="right" headers="Results Zero" class='awrc'>0</td><td align="right" headers="Results DskRd" class='awrc'>0</td><td align="right" headers="Results Fail" class='awrc'>0</td><td align="right" headers="Fairness DownConv" class='awrclb'>3,445</td><td align="right" headers="Light Works" class='awrclb'>1,523</td><td align="right" headers="Total Flushes" class='awrclb'>32</td><td align="right" headers="Total Builds" class='awrc'>3,506</td><td align="right" headers="Total Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlockRequests CR" class='awrnclb'>5,092</td><td align="right" headers="BlockRequests CU" class='awrnc'>103</td><td align="right" headers="BlockRequests Data" class='awrnc'>5,092</td><td align="right" headers="BlockRequests Undo" class='awrnc'>0</td><td align="right" headers="BlockRequests TX" class='awrnc'>34</td><td align="right" headers="Results Current" class='awrnclb'>5,163</td><td align="right" headers="Results Private" class='awrnc'>1</td><td align="right" headers="Results Zero" class='awrnc'>3</td><td align="right" headers="Results DskRd" class='awrnc'>28</td><td align="right" headers="Results Fail" class='awrnc'>0</td><td align="right" headers="Fairness DownConv" class='awrnclb'>5,049</td><td align="right" headers="Light Works" class='awrnclb'>1,863</td><td align="right" headers="Total Flushes" class='awrnclb'>30</td><td align="right" headers="Total Builds" class='awrnc'>5,092</td><td align="right" headers="Total Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>8,598</td><td align="right" class='awrct'>1,595</td><td align="right" class='awrct'>8,598</td><td align="right" class='awrct'>0</td><td align="right" class='awrct'>1,508</td><td align="right" class='awrclbt'>10,160</td><td align="right" class='awrct'>2</td><td align="right" class='awrct'>3</td><td align="right" class='awrct'>28</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>8,494</td><td align="right" class='awrclbt'>3,386</td><td align="right" class='awrclbt'>62</td><td align="right" class='awrct'>8,598</td><td align="right" class='awrcrbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>4,299</td><td align="right" class='awrnc'>798</td><td align="right" class='awrnc'>4,299</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>754</td><td align="right" class='awrnclb'>5,080</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>4,247</td><td align="right" class='awrnclb'>1,693</td><td align="right" class='awrnclb'>31</td><td align="right" class='awrnc'>4,299</td><td align="right" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1,121</td><td align="right" class='awrc'>982</td><td align="right" class='awrc'>1,121</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,018</td><td align="right" class='awrclb'>117</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1,134</td><td align="right" class='awrclb'>240</td><td align="right" class='awrclb'>1</td><td align="right" class='awrc'>1,121</td><td align="right" class='awrcrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12034"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Current Server Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Pins</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th><th class="awrbg" scope="col">Flushes</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>82.86</td><td align="right" class='awrc'>17.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>94.23</td><td align="right" class='awrnc'>5.77</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrct'>87</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>44</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="607"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12035">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#12036">Global Cache Transfer (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12035"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested  (Cngst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> All - average time of All blocks (Immed,Busy,Cngst) in us </li>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer Statistics. . Immediate (Immed) - Block Transfer NOT impacted by Remote Processing Delays. Busy (Busy) - Block Transfer impacted by Remote Contention. Congested (Cngst) - Block Transfer impacted by Remote System Load. All - average time of All blocks (Immed,Busy,Cngst) in us. Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CurrentBlocks">Current Blocks</th>
<th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="CRBlocks Received" class='awrclb'>5,089</td><td align="right" headers="CRBlocks %Immed" class='awrc'>99.71</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.24</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.06</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>16,157</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>78.88</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>21.08</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.04</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1184</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1172</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>4840</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>7293</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>689</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>655</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>813</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>3298</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="CRBlocks Received" class='awrnclb'>40</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>97.50</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>2.50</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>71</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>9.86</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>90.14</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>497</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>414</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>3755</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>607</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>375</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>633</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrclb'>32</td><td align="right" headers="CRBlocks %Immed" class='awrc'>50.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>50.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>2</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>100.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>3471</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>395</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6548</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>427</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>427</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclbt'>2</td><td align="right" headers="Instance# Src" class='awrnct'>1</td><td headers="Block Class" class='awrnclbt'>data block</td><td align="right" headers="CRBlocks Received" class='awrnclbt'>3,509</td><td align="right" headers="CRBlocks %Immed" class='awrnct'>99.77</td><td align="right" headers="CRBlocks %Busy" class='awrnct'>0.17</td><td align="right" headers="CRBlocks %Cngst" class='awrnct'>0.06</td><td align="right" headers="CurrentBlocks Received" class='awrnclbt'>10,933</td><td align="right" headers="CurrentBlocks %Immed" class='awrnct'>79.04</td><td align="right" headers="CurrentBlocks %Busy" class='awrnct'>20.95</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnct'>0.02</td><td align="right" headers="CRAvgTime(us) All" class='awrnclbt'>1261</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnct'>1250</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnct'>6755</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnct'>3995</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclbt'>661</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnct'>638</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnct'>747</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrbt'>2700</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrclb'>1,474</td><td align="right" headers="CRBlocks %Immed" class='awrc'>98.24</td><td align="right" headers="CRBlocks %Busy" class='awrc'>1.76</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>1</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>100.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>657</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>506</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>9097</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>364</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>364</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="CRBlocks Received" class='awrnclb'>18</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>40</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>40.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>60.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>516</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>516</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>504</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>557</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>468</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12036"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer (Immediate). . Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 2" id="LostBlocks">Lost Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCRBlocks">Immediate CR Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCurrentBlocks">Immediate Current Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmedCRAvgTime(us)">Immed CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="ImmedCurrentAvgTime(us)">Immed Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Count">Count</th><th class="awrbg" scope="col" id="Time(us)">Time(us)</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>5,074</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>12,745</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>1172</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>1172</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>655</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>655</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>39</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>7</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>414</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>414</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>375</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>375</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>16</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>395</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>395</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="LostBlocks Count" class='awrclbt'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrct'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclbt'>3,501</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclbt'>8,641</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclbt'>1250</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrct'>1250</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrct'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclbt'>638</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrct'>638</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>1,448</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>506</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>506</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>18</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>16</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>516</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>516</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>557</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>557</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="608"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12040">Cluster Interconnect</a></li>
<li class="awr"><a class="awr" href="#12045">Ping Statistics</a></li>
<li class="awr"><a class="awr" href="#12041">Interconnect Client Statistics</a></li>
<li class="awr"><a class="awr" href="#12042">Interconnect Client Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12043">Interconnect Device Statistics</a></li>
<li class="awr"><a class="awr" href="#12044">Interconnect Device Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12078">Dynamic Remastering Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12040"></a>
<h3 class="awr">Cluster Interconnect</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 3" id="End(ifdifferentfromBegin)">End (if different from Begin)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrnclb'>169.254.31.173</td><td headers="Begin Pub" class='awrnc'>N</td><td headers="Begin Source" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrnclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12045"></a>
<h3 class="awr">Ping Statistics</h3>
<ul>
<li class="awr"> Latency of the roundtrip of a message from  Src Instance to the Target instances</li>
</ul>
<table border="0" class="tdiff" summary="Ping Statistics. . Latency of the roundtrip of a message from Src Instance to the Target instances"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 3" id="500bytes">500 bytes</th>
<th class="awrbg" colspan=" 3" id="8Kbytes">8 Kbytes</th>
</tr><tr>
<th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Target">Target</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th></tr>
<tr><td align="right" headers="Instance# Src" class='awrclb'>1</td><td align="right" headers="Instance# Target" class='awrc'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrc'>726</td><td align="right" headers="500bytes Std|Dev" class='awrc'>0.36</td><td align="right" headers="8Kbytes Ping|Count" class='awrclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrc'>711</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrb'>0.33</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>806</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.25</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>873</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.37</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrclbt'>2</td><td align="right" headers="Instance# Target" class='awrct'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclbt'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrct'>826</td><td align="right" headers="500bytes Std|Dev" class='awrct'>0.55</td><td align="right" headers="8Kbytes Ping|Count" class='awrclbt'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrct'>948</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrbt'>0.65</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>444</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.20</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>458</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.21</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12041"></a>
<h3 class="awr">Interconnect Client Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB)">Sent (MB)</th>
<th class="awrbg" colspan=" 6" id="Received(MB)">Received (MB)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB) Total" class='awrclb'>928.67</td><td align="right" headers="Sent(MB) Cache" class='awrc'>136.04</td><td align="right" headers="Sent(MB) IPQ" class='awrc'>2.04</td><td align="right" headers="Sent(MB) DLM" class='awrc'>773.28</td><td align="right" headers="Sent(MB) PNG" class='awrc'>1.01</td><td align="right" headers="Sent(MB) Misc" class='awrc'>16.30</td><td align="right" headers="Received(MB) Total" class='awrclb'>727.82</td><td align="right" headers="Received(MB) Cache" class='awrc'>208.09</td><td align="right" headers="Received(MB) IPQ" class='awrc'>1.22</td><td align="right" headers="Received(MB) DLM" class='awrc'>506.56</td><td align="right" headers="Received(MB) PNG" class='awrc'>1.01</td><td align="right" headers="Received(MB) Misc" class='awrcrb'>10.94</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB) Total" class='awrnclb'>728.23</td><td align="right" headers="Sent(MB) Cache" class='awrnc'>208.29</td><td align="right" headers="Sent(MB) IPQ" class='awrnc'>1.22</td><td align="right" headers="Sent(MB) DLM" class='awrnc'>506.77</td><td align="right" headers="Sent(MB) PNG" class='awrnc'>1.01</td><td align="right" headers="Sent(MB) Misc" class='awrnc'>10.94</td><td align="right" headers="Received(MB) Total" class='awrnclb'>929.64</td><td align="right" headers="Received(MB) Cache" class='awrnc'>136.24</td><td align="right" headers="Received(MB) IPQ" class='awrnc'>2.04</td><td align="right" headers="Received(MB) DLM" class='awrnc'>774.05</td><td align="right" headers="Received(MB) PNG" class='awrnc'>1.01</td><td align="right" headers="Received(MB) Misc" class='awrncrb'>16.30</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>1,656.90</td><td align="right" class='awrct'>344.33</td><td align="right" class='awrct'>3.26</td><td align="right" class='awrct'>1,280.05</td><td align="right" class='awrct'>2.02</td><td align="right" class='awrct'>27.24</td><td align="right" class='awrclbt'>1,657.46</td><td align="right" class='awrct'>344.33</td><td align="right" class='awrct'>3.26</td><td align="right" class='awrct'>1,280.61</td><td align="right" class='awrct'>2.02</td><td align="right" class='awrcrbt'>27.24</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>828.45</td><td align="right" class='awrnc'>172.17</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>640.03</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>13.62</td><td align="right" class='awrnclb'>828.73</td><td align="right" class='awrnc'>172.16</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>640.31</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrncrb'>13.62</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>141.73</td><td align="right" class='awrc'>51.08</td><td align="right" class='awrc'>0.58</td><td align="right" class='awrc'>188.45</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.79</td><td align="right" class='awrclb'>142.71</td><td align="right" class='awrc'>50.81</td><td align="right" class='awrc'>0.58</td><td align="right" class='awrc'>189.15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>3.78</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12042"></a>
<h3 class="awr">Interconnect Client Statistics (per Second)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics (per Second)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB/s)">Sent (MB/s)</th>
<th class="awrbg" colspan=" 6" id="Received(MB/s)">Received (MB/s)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB/s) Total" class='awrclb'>1.54</td><td align="right" headers="Sent(MB/s) Cache" class='awrc'>0.23</td><td align="right" headers="Sent(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrc'>1.28</td><td align="right" headers="Sent(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrc'>0.03</td><td align="right" headers="Received(MB/s) Total" class='awrclb'>1.20</td><td align="right" headers="Received(MB/s) Cache" class='awrc'>0.34</td><td align="right" headers="Received(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrc'>0.84</td><td align="right" headers="Received(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrcrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB/s) Total" class='awrnclb'>1.20</td><td align="right" headers="Sent(MB/s) Cache" class='awrnc'>0.34</td><td align="right" headers="Sent(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrnc'>0.84</td><td align="right" headers="Sent(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrnc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrnclb'>1.54</td><td align="right" headers="Received(MB/s) Cache" class='awrnc'>0.23</td><td align="right" headers="Received(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrnc'>1.28</td><td align="right" headers="Received(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrncrb'>0.03</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>2.74</td><td align="right" class='awrct'>0.57</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>2.12</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrclbt'>2.74</td><td align="right" class='awrct'>0.57</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>2.12</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrcrbt'>0.05</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1.37</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnclb'>1.37</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrncrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0.23</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrclb'>0.24</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12043"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> null means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics. . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. null means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>4,829.56</td><td align="right" headers="Sent Packets" class='awrc'>4,526,207</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>3,901.39</td><td align="right" headers="Received Packets" class='awrc'>4,797,153</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1,382.99</td><td align="right" headers="Sent Packets" class='awrnc'>2,737,436</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1,271.24</td><td align="right" headers="Received Packets" class='awrnc'>3,282,515</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.26</td><td align="right" headers="Sent Packets" class='awrnc'>763</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.14</td><td align="right" headers="Received Packets" class='awrnc'>670</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.23</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.22</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:4</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.02</td><td align="right" headers="Sent Packets" class='awrnc'>3,067</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.16</td><td align="right" headers="Received Packets" class='awrnc'>3,109</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>28.90</td><td align="right" headers="Sent Packets" class='awrc'>74,055</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>28.90</td><td align="right" headers="Received Packets" class='awrc'>74,055</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>3,955.70</td><td align="right" headers="Sent Packets" class='awrnc'>4,872,655</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>4,769.68</td><td align="right" headers="Received Packets" class='awrnc'>4,447,789</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1,266.13</td><td align="right" headers="Sent Packets" class='awrc'>3,105,598</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>1,384.98</td><td align="right" headers="Received Packets" class='awrc'>2,946,120</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.14</td><td align="right" headers="Sent Packets" class='awrc'>670</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.26</td><td align="right" headers="Received Packets" class='awrc'>766</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.21</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.12</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.02</td><td align="right" headers="Sent Packets" class='awrnc'>3,079</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.16</td><td align="right" headers="Received Packets" class='awrnc'>3,113</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>5.20</td><td align="right" headers="Sent Packets" class='awrc'>32,049</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>5.20</td><td align="right" headers="Received Packets" class='awrc'>32,049</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>11,472.92</td><td align="right" class='awrnct'>15,355,579</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>11,364.12</td><td align="right" class='awrnct'>15,587,339</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>674.88</td><td align="right" class='awrc'>903,269</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>668.48</td><td align="right" class='awrc'>916,902</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,473.64</td><td align="right" class='awrnc'>1,723,077</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>1,455.79</td><td align="right" class='awrnc'>1,731,410</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12044"></a>
<h3 class="awr">Interconnect Device Statistics (per Second)</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> Blank	means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics (per Second). . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. Blank means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>7.99</td><td align="right" headers="Sent Packets" class='awrc'>7,489</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>6.45</td><td align="right" headers="Received Packets" class='awrc'>7,937</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.29</td><td align="right" headers="Sent Packets" class='awrnc'>4,529</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>2.10</td><td align="right" headers="Received Packets" class='awrnc'>5,431</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>1</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>1</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.23</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.22</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:4</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.05</td><td align="right" headers="Sent Packets" class='awrc'>123</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.05</td><td align="right" headers="Received Packets" class='awrc'>123</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>6.54</td><td align="right" headers="Sent Packets" class='awrnc'>8,062</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>7.89</td><td align="right" headers="Received Packets" class='awrnc'>7,359</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>2.09</td><td align="right" headers="Sent Packets" class='awrc'>5,138</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>2.29</td><td align="right" headers="Received Packets" class='awrc'>4,874</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>1</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>1</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.21</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.12</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.01</td><td align="right" headers="Sent Packets" class='awrc'>53</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.01</td><td align="right" headers="Received Packets" class='awrc'>53</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>18.98</td><td align="right" class='awrnct'>25,406</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>18.80</td><td align="right" class='awrnct'>25,790</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>1.12</td><td align="right" class='awrc'>1,494</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1.11</td><td align="right" class='awrc'>1,517</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>2.44</td><td align="right" class='awrnc'>2,851</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2.41</td><td align="right" class='awrnc'>2,865</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12078"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Affinity Objects - Affinity objects remastered at the begin/end snapshot  </li>
<li class="awr"> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Affinity Objects - Affinity objects remastered at the begin/end snapshot . Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CountsperOps">Counts per Ops</th>
<th class="awrbg" colspan=" 6" id="TimeperOps(seconds)">Time per Ops (seconds)</th>
<th class="awrbg" colspan=" 2" id="AffinityObjects">Affinity Objects</th>
<th class="awrbg" colspan=" 3" id="ReadMostlyObjects">Read Mostly Objects</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Remaster Ops</th><th class="awrbg" scope="col" id="Remastered|Objects">Remastered Objects</th><th class="awrbg" scope="col" id="ReplayLocks|Received">Replay Locks Received</th><th class="awrbg" scope="col" id="ReplayLocks|Sent">Replay Locks Sent</th><th class="awrbg" scope="col" id="Resources|Cleaned">Resources Cleaned</th><th class="awrbg" scope="col" id="Remaster">Remaster</th><th class="awrbg" scope="col" id="Freeze">Freeze</th><th class="awrbg" scope="col" id="Cleanup">Cleanup</th><th class="awrbg" scope="col" id="Replay">Replay</th><th class="awrbg" scope="col" id="Fixwrite">Fixwrite</th><th class="awrbg" scope="col" id="Sync">Sync</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="Begin|(persistent)">Begin (persistent)</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrclb'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrc'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrc'>&#160;</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrclb'>&#160;</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrc'>&#160;</td><td align="right" headers="AffinityObjects Begin" class='awrclb'>1</td><td align="right" headers="AffinityObjects End" class='awrc'>1</td><td align="right" headers="ReadMostlyObjects Begin" class='awrclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrc'>1</td><td align="right" headers="ReadMostlyObjects End" class='awrcrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrnclb'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrnc'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrnc'>&#160;</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrnclb'>&#160;</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrnc'>&#160;</td><td align="right" headers="AffinityObjects Begin" class='awrnclb'>5</td><td align="right" headers="AffinityObjects End" class='awrnc'>5</td><td align="right" headers="ReadMostlyObjects Begin" class='awrnclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrnc'>1</td><td align="right" headers="ReadMostlyObjects End" class='awrncrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3</td><td align="right" class='awrct'>3</td><td align="right" class='awrclbt'>1</td><td align="right" class='awrct'>1</td><td align="right" class='awrcrbt'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Max</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>5</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnclb'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrncrb'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="622"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12060">SQL ordered by Elapsed Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12061">SQL ordered by CPU Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12066">SQL ordered by User I/O Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12062">SQL ordered by Gets (Global)</a></li>
<li class="awr"><a class="awr" href="#12063">SQL ordered by Reads (Global)</a></li>
<li class="awr"><a class="awr" href="#12081">SQL ordered by UnOptimized Read Requests (Global)</a></li>
<li class="awr"><a class="awr" href="#12065">SQL ordered by Executions (Global)</a></li>
<li class="awr"><a class="awr" href="#12064">SQL ordered by Cluster Wait Time (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12060"></a>
<h3 class="awr">SQL ordered by Elapsed Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   98.3% of Total DB Time (s):		18,247</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total DB Time (s):	   18,247</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Elapsed Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>15,146.58</td><td align="right" headers="Total CPU(s)" class='awrc'>949.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>13,828.20</td><td align="right" headers="Total Gets" class='awrc'>6,581,630</td><td align="right" headers="Total Reads" class='awrc'>3,138,036</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Cluster(s)" class='awrc'>827.73</td><td align="right" headers="Total Execs" class='awrc'>1,095,430</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>83.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.85</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>62.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.73</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>82.27</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.50</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>2,767.21</td><td align="right" headers="Total CPU(s)" class='awrnc'>203.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>2,462.01</td><td align="right" headers="Total Gets" class='awrnc'>1,399,058</td><td align="right" headers="Total Reads" class='awrnc'>553,553</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Cluster(s)" class='awrnc'>172.87</td><td align="right" headers="Total Execs" class='awrnc'>193,256</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.24</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>15.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.15</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.95</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>17.18</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.91</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.57</td><td align="right" headers="Total CPU(s)" class='awrc'>45.32</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.38</td><td align="right" headers="Total Gets" class='awrc'>276,356</td><td align="right" headers="Total Reads" class='awrc'>123,135</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>34.18</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.32</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.38</td><td align="right" headers="PerExecution Gets" class='awrc'>276,356.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,135.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>34.18</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.32</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.40</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.52</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.09</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.78</td><td align="right" headers="Total Gets" class='awrnc'>277,964</td><td align="right" headers="Total Reads" class='awrnc'>124,030</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>32.82</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.52</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.78</td><td align="right" headers="PerExecution Gets" class='awrnc'>277,964.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>124,030.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>32.82</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.62</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.26</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.42</td><td align="right" headers="Total CPU(s)" class='awrc'>45.12</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.60</td><td align="right" headers="Total Gets" class='awrc'>273,596</td><td align="right" headers="Total Reads" class='awrc'>123,883</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.06</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.42</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.60</td><td align="right" headers="PerExecution Gets" class='awrc'>273,596.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,883.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.06</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>33.30</td><td align="right" headers="Total IOWait(s)" class='awrnc'>546.17</td><td align="right" headers="Total Gets" class='awrnc'>301,309</td><td align="right" headers="Total Reads" class='awrnc'>134,333</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>1.33</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>33.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>546.17</td><td align="right" headers="PerExecution Gets" class='awrnc'>301,309.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,333.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>1.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.38</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.84</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.63</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.40</td><td align="right" headers="Total CPU(s)" class='awrc'>45.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.81</td><td align="right" headers="Total Gets" class='awrc'>274,142</td><td align="right" headers="Total Reads" class='awrc'>123,922</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.64</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.40</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.81</td><td align="right" headers="PerExecution Gets" class='awrc'>274,142.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,922.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.34</td><td align="right" headers="Total CPU(s)" class='awrnc'>44.98</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.05</td><td align="right" headers="Total Gets" class='awrnc'>273,136</td><td align="right" headers="Total Reads" class='awrnc'>123,673</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.65</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.34</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>44.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.05</td><td align="right" headers="PerExecution Gets" class='awrnc'>273,136.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,673.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.32</td><td align="right" headers="Total CPU(s)" class='awrc'>33.12</td><td align="right" headers="Total IOWait(s)" class='awrc'>546.28</td><td align="right" headers="Total Gets" class='awrc'>299,678</td><td align="right" headers="Total Reads" class='awrc'>134,152</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>1.29</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>33.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>546.28</td><td align="right" headers="PerExecution Gets" class='awrc'>299,678.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,152.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>1.29</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.37</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.83</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.62</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.30</td><td align="right" headers="Total CPU(s)" class='awrnc'>44.79</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.30</td><td align="right" headers="Total Gets" class='awrnc'>274,280</td><td align="right" headers="Total Reads" class='awrnc'>123,953</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.26</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.30</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>44.79</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.30</td><td align="right" headers="PerExecution Gets" class='awrnc'>274,280.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,953.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.26</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.31</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12061"></a>
<h3 class="awr">SQL ordered by CPU Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   83.0% of Total CPU Time (s): 	  1,398</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total CPU Time (s):	     1,398</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by CPU Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>949.58</td><td align="right" headers="Total Elapsed(s)" class='awrc'>15,146.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>13,828.20</td><td align="right" headers="Total Gets" class='awrc'>6,581,630</td><td align="right" headers="Total Reads" class='awrc'>3,138,036</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Cluster(s)" class='awrc'>827.73</td><td align="right" headers="Total Execs" class='awrc'>1,095,430</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>67.91</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>83.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.68</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>62.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.73</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>82.27</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.50</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>203.04</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2,767.21</td><td align="right" headers="Total IOWait(s)" class='awrnc'>2,462.01</td><td align="right" headers="Total Gets" class='awrnc'>1,399,058</td><td align="right" headers="Total Reads" class='awrnc'>553,553</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Cluster(s)" class='awrnc'>172.87</td><td align="right" headers="Total Execs" class='awrnc'>193,256</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.24</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>14.52</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.17</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.95</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>17.18</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.91</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>52.77</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.11</td><td align="right" headers="Total IOWait(s)" class='awrc'>476.45</td><td align="right" headers="Total Gets" class='awrc'>225,929</td><td align="right" headers="Total Reads" class='awrc'>100,552</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>58.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>52.77</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.11</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>476.45</td><td align="right" headers="PerExecution Gets" class='awrc'>225,929.00</td><td align="right" headers="PerExecution Reads" class='awrc'>100,552.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>58.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>3.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.92</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>5.76</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>51.76</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.53</td><td align="right" headers="Total IOWait(s)" class='awrnc'>476.33</td><td align="right" headers="Total Gets" class='awrnc'>221,406</td><td align="right" headers="Total Reads" class='awrnc'>100,305</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>58.14</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>51.76</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.53</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>476.33</td><td align="right" headers="PerExecution Gets" class='awrnc'>221,406.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>100,305.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>58.14</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>3.70</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.92</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.09</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.71</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>5.78</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>45.38</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.77</td><td align="right" headers="Total Gets" class='awrc'>274,056</td><td align="right" headers="Total Reads" class='awrc'>124,024</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.58</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>45.38</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.77</td><td align="right" headers="PerExecution Gets" class='awrc'>274,056.00</td><td align="right" headers="PerExecution Reads" class='awrc'>124,024.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.58</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>3.25</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>45.32</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.57</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.38</td><td align="right" headers="Total Gets" class='awrnc'>276,356</td><td align="right" headers="Total Reads" class='awrnc'>123,135</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.18</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>45.32</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.57</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.38</td><td align="right" headers="PerExecution Gets" class='awrnc'>276,356.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,135.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.18</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>3.24</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.32</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.40</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>45.12</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.42</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.60</td><td align="right" headers="Total Gets" class='awrc'>273,596</td><td align="right" headers="Total Reads" class='awrc'>123,883</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.06</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>45.12</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.42</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.60</td><td align="right" headers="PerExecution Gets" class='awrc'>273,596.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,883.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>3.23</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>45.11</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.23</td><td align="right" headers="Total Gets" class='awrnc'>275,473</td><td align="right" headers="Total Reads" class='awrnc'>123,445</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.08</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>45.11</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.23</td><td align="right" headers="PerExecution Gets" class='awrnc'>275,473.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,445.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.08</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>3.23</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.39</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>45.09</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.78</td><td align="right" headers="Total Gets" class='awrc'>277,964</td><td align="right" headers="Total Reads" class='awrc'>124,030</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>32.82</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>45.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.78</td><td align="right" headers="PerExecution Gets" class='awrc'>277,964.00</td><td align="right" headers="PerExecution Reads" class='awrc'>124,030.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>32.82</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>3.22</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.26</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>45.02</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="Total Gets" class='awrnc'>274,142</td><td align="right" headers="Total Reads" class='awrnc'>123,922</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>45.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="PerExecution Gets" class='awrnc'>274,142.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,922.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>3.22</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12066"></a>
<h3 class="awr">SQL ordered by User I/O Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   99.8% of Total User I/O Wait Time (s):	   16,330</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total User I/O Wait Time (s):	      16,330</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by User I/O Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>13,828.20</td><td align="right" headers="Total Elapsed(s)" class='awrc'>15,146.58</td><td align="right" headers="Total CPU(s)" class='awrc'>949.58</td><td align="right" headers="Total Gets" class='awrc'>6,581,630</td><td align="right" headers="Total Reads" class='awrc'>3,138,036</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Cluster(s)" class='awrc'>827.73</td><td align="right" headers="Total Execs" class='awrc'>1,095,430</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>84.68</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>83.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.91</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>62.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.73</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>82.27</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.50</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>2,462.01</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2,767.21</td><td align="right" headers="Total CPU(s)" class='awrnc'>203.04</td><td align="right" headers="Total Gets" class='awrnc'>1,399,058</td><td align="right" headers="Total Reads" class='awrnc'>553,553</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Cluster(s)" class='awrnc'>172.87</td><td align="right" headers="Total Execs" class='awrnc'>193,256</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.24</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>15.08</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.52</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.95</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>17.18</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.91</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>508.78</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="Total CPU(s)" class='awrc'>45.09</td><td align="right" headers="Total Gets" class='awrc'>277,964</td><td align="right" headers="Total Reads" class='awrc'>124,030</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>32.82</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>508.78</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.09</td><td align="right" headers="PerExecution Gets" class='awrc'>277,964.00</td><td align="right" headers="PerExecution Reads" class='awrc'>124,030.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>32.82</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>3.12</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.26</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>508.60</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.42</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.12</td><td align="right" headers="Total Gets" class='awrnc'>273,596</td><td align="right" headers="Total Reads" class='awrnc'>123,883</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.06</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>508.60</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.42</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.12</td><td align="right" headers="PerExecution Gets" class='awrnc'>273,596.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,883.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.23</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.29</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>507.81</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.40</td><td align="right" headers="Total CPU(s)" class='awrc'>45.02</td><td align="right" headers="Total Gets" class='awrc'>274,142</td><td align="right" headers="Total Reads" class='awrc'>123,922</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.64</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>507.81</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.40</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.02</td><td align="right" headers="PerExecution Gets" class='awrc'>274,142.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,922.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.64</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>3.11</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>507.77</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.02</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.38</td><td align="right" headers="Total Gets" class='awrnc'>274,056</td><td align="right" headers="Total Reads" class='awrnc'>124,024</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.58</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>507.77</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.38</td><td align="right" headers="PerExecution Gets" class='awrnc'>274,056.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>124,024.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.58</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.25</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>507.38</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="Total CPU(s)" class='awrc'>45.32</td><td align="right" headers="Total Gets" class='awrc'>276,356</td><td align="right" headers="Total Reads" class='awrc'>123,135</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>34.18</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>507.38</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.32</td><td align="right" headers="PerExecution Gets" class='awrc'>276,356.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,135.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>34.18</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>3.11</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.24</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.32</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.40</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>507.23</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.11</td><td align="right" headers="Total Gets" class='awrnc'>275,473</td><td align="right" headers="Total Reads" class='awrnc'>123,445</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.08</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>507.23</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.11</td><td align="right" headers="PerExecution Gets" class='awrnc'>275,473.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,445.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.08</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.23</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.39</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>476.45</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.11</td><td align="right" headers="Total CPU(s)" class='awrc'>52.77</td><td align="right" headers="Total Gets" class='awrc'>225,929</td><td align="right" headers="Total Reads" class='awrc'>100,552</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>58.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>476.45</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.11</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>52.77</td><td align="right" headers="PerExecution Gets" class='awrc'>225,929.00</td><td align="right" headers="PerExecution Reads" class='awrc'>100,552.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>58.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.92</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.77</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>5.76</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>476.33</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.53</td><td align="right" headers="Total CPU(s)" class='awrnc'>51.76</td><td align="right" headers="Total Gets" class='awrnc'>221,406</td><td align="right" headers="Total Reads" class='awrnc'>100,305</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>58.14</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>476.33</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.53</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>51.76</td><td align="right" headers="PerExecution Gets" class='awrnc'>221,406.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>100,305.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>58.14</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.92</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.70</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.09</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.71</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>5.78</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12062"></a>
<h3 class="awr">SQL ordered by Gets (Global)</h3>
<ul>
<li class="awr">Total Buffer Gets:	10,598,320</li>
<li class="awr">Captured SQL account for   81.4% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Gets (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Gets" class='awrclb'>6,581,630</td><td align="right" headers="Total Reads" class='awrc'>3,138,036</td><td align="right" headers="Total Elapsed(s)" class='awrc'>15,146.58</td><td align="right" headers="Total CPU(s)" class='awrc'>949.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>13,828.20</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Cluster(s)" class='awrc'>827.73</td><td align="right" headers="Total Execs" class='awrc'>1,095,430</td><td align="right" headers="PerExecution Gets" class='awrclb'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.86</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>62.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.73</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>83.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>82.27</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.50</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Gets" class='awrnclb'>1,399,058</td><td align="right" headers="Total Reads" class='awrnc'>553,553</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2,767.21</td><td align="right" headers="Total CPU(s)" class='awrnc'>203.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>2,462.01</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Cluster(s)" class='awrnc'>172.87</td><td align="right" headers="Total Execs" class='awrnc'>193,256</td><td align="right" headers="PerExecution Gets" class='awrnclb'>7.24</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.86</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>13.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.95</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>17.18</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.91</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total Gets" class='awrclb'>580,996</td><td align="right" headers="Total Reads" class='awrc'>1</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.48</td><td align="right" headers="Total CPU(s)" class='awrc'>1.41</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>580,996.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.48</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>1.41</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>5.48</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.10</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td><td align="right" headers="Total Gets" class='awrnclb'>580,976</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>1.73</td><td align="right" headers="Total CPU(s)" class='awrnc'>1.66</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>580,976.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>1.73</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>1.66</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>5.48</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total Gets" class='awrclb'>301,309</td><td align="right" headers="Total Reads" class='awrc'>134,333</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.41</td><td align="right" headers="Total CPU(s)" class='awrc'>33.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>546.17</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>1.33</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>301,309.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,333.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.41</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>33.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>546.17</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>1.33</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.84</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.38</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total Gets" class='awrnclb'>299,678</td><td align="right" headers="Total Reads" class='awrnc'>134,152</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>33.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>546.28</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>1.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>299,678.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,152.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>33.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>546.28</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>1.29</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.83</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.37</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total Gets" class='awrclb'>277,964</td><td align="right" headers="Total Reads" class='awrc'>124,030</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="Total CPU(s)" class='awrc'>45.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.78</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>32.82</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>277,964.00</td><td align="right" headers="PerExecution Reads" class='awrc'>124,030.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.78</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>32.82</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.62</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.26</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td><td align="right" headers="Total Gets" class='awrnclb'>276,829</td><td align="right" headers="Total Reads" class='awrnc'>123,822</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.00</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.95</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>276,829.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,822.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.95</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.04</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.28</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total Gets" class='awrclb'>276,356</td><td align="right" headers="Total Reads" class='awrc'>123,135</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="Total CPU(s)" class='awrc'>45.32</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.38</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>34.18</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>276,356.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,135.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.32</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.38</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>34.18</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.32</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.40</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td><td align="right" headers="Total Gets" class='awrnclb'>275,473</td><td align="right" headers="Total Reads" class='awrnc'>123,445</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.11</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.23</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.08</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>275,473.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,445.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.11</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.23</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.08</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.39</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12063"></a>
<h3 class="awr">SQL ordered by Reads (Global)</h3>
<ul>
<li class="awr">Total Disk Reads:	3,703,474</li>
<li class="awr">Captured SQL account for   99.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Reads (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Reads" class='awrclb'>3,138,036</td><td align="right" headers="Total Gets" class='awrc'>6,581,630</td><td align="right" headers="Total Elapsed(s)" class='awrc'>15,146.58</td><td align="right" headers="Total CPU(s)" class='awrc'>949.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>13,828.20</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Cluster(s)" class='awrc'>827.73</td><td align="right" headers="Total Execs" class='awrc'>1,095,430</td><td align="right" headers="PerExecution Reads" class='awrclb'>2.86</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>84.73</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>62.10</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>83.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>82.27</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.50</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Reads" class='awrnclb'>553,553</td><td align="right" headers="Total Gets" class='awrnc'>1,399,058</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2,767.21</td><td align="right" headers="Total CPU(s)" class='awrnc'>203.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>2,462.01</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Cluster(s)" class='awrnc'>172.87</td><td align="right" headers="Total Execs" class='awrnc'>193,256</td><td align="right" headers="PerExecution Reads" class='awrnclb'>2.86</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.24</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>14.95</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.20</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>17.18</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.91</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total Reads" class='awrclb'>134,333</td><td align="right" headers="Total Gets" class='awrc'>301,309</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.41</td><td align="right" headers="Total CPU(s)" class='awrc'>33.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>546.17</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>1.33</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>134,333.00</td><td align="right" headers="PerExecution Gets" class='awrc'>301,309.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.41</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>33.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>546.17</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>1.33</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>3.63</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.84</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.38</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total Reads" class='awrnclb'>134,152</td><td align="right" headers="Total Gets" class='awrnc'>299,678</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>33.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>546.28</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>1.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>134,152.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>299,678.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>33.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>546.28</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>1.29</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>3.62</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.83</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.37</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total Reads" class='awrclb'>124,030</td><td align="right" headers="Total Gets" class='awrc'>277,964</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="Total CPU(s)" class='awrc'>45.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.78</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>32.82</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>124,030.00</td><td align="right" headers="PerExecution Gets" class='awrc'>277,964.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.78</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>32.82</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>3.35</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.26</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total Reads" class='awrnclb'>124,024</td><td align="right" headers="Total Gets" class='awrnc'>274,056</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.02</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.38</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.77</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.58</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>124,024.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>274,056.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.38</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.77</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.58</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>3.35</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.25</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td><td align="right" headers="Total Reads" class='awrclb'>123,953</td><td align="right" headers="Total Gets" class='awrc'>274,280</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="Total CPU(s)" class='awrc'>44.79</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.30</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.26</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>123,953.00</td><td align="right" headers="PerExecution Gets" class='awrc'>274,280.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>44.79</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.30</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.26</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>3.35</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total Reads" class='awrnclb'>123,922</td><td align="right" headers="Total Gets" class='awrnc'>274,142</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.02</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>123,922.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>274,142.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.64</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>3.35</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total Reads" class='awrclb'>123,883</td><td align="right" headers="Total Gets" class='awrc'>273,596</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.42</td><td align="right" headers="Total CPU(s)" class='awrc'>45.12</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.60</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.06</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>123,883.00</td><td align="right" headers="PerExecution Gets" class='awrc'>273,596.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.42</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.60</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.06</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>3.35</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td><td align="right" headers="Total Reads" class='awrnclb'>123,822</td><td align="right" headers="Total Gets" class='awrnc'>276,829</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.00</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.95</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>123,822.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>276,829.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.95</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.04</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>3.34</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.28</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12081"></a>
<h3 class="awr">SQL ordered by UnOptimized Read Requests (Global)</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    3,703,331</li>
<li class="awr">Captured SQL account for    3.5% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       3,703,331</li>
<li class="awr">Captured SQL account for    3.5% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by UnOptimized Read Requests (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 9" id="Total">Total</th>
<th class="awrbg" colspan=" 8" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 8" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>134,333</td><td align="right" headers="Total Requests" class='awrc'>134,333</td><td align="right" headers="Total Reads" class='awrc'>134,333</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.41</td><td align="right" headers="Total CPU(s)" class='awrc'>33.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>546.17</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>1.33</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>134,333.00</td><td align="right" headers="PerExecution Requests" class='awrc'>134,333.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,333.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.41</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>33.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>546.17</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>1.33</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.63</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.63</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.38</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>134,152</td><td align="right" headers="Total Requests" class='awrnc'>134,152</td><td align="right" headers="Total Reads" class='awrnc'>134,152</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>33.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>546.28</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>1.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>134,152.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>134,152.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,152.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>33.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>546.28</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>1.29</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.62</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.62</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.37</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.13</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>124,030</td><td align="right" headers="Total Requests" class='awrc'>124,030</td><td align="right" headers="Total Reads" class='awrc'>124,030</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="Total CPU(s)" class='awrc'>45.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.78</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>32.82</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>124,030.00</td><td align="right" headers="PerExecution Requests" class='awrc'>124,030.00</td><td align="right" headers="PerExecution Reads" class='awrc'>124,030.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.52</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.78</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>32.82</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.35</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.26</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>124,024</td><td align="right" headers="Total Requests" class='awrnc'>124,024</td><td align="right" headers="Total Reads" class='awrnc'>124,024</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.02</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.38</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.77</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.58</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>124,024.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>124,024.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>124,024.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.38</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.77</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.58</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.35</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.25</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>123,953</td><td align="right" headers="Total Requests" class='awrc'>123,953</td><td align="right" headers="Total Reads" class='awrc'>123,953</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="Total CPU(s)" class='awrc'>44.79</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.30</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.26</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>123,953.00</td><td align="right" headers="PerExecution Requests" class='awrc'>123,953.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,953.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>44.79</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.30</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.26</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.35</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>123,922</td><td align="right" headers="Total Requests" class='awrnc'>123,922</td><td align="right" headers="Total Reads" class='awrnc'>123,922</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.02</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>123,922.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>123,922.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,922.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.64</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.35</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>123,883</td><td align="right" headers="Total Requests" class='awrc'>123,883</td><td align="right" headers="Total Reads" class='awrc'>123,883</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.42</td><td align="right" headers="Total CPU(s)" class='awrc'>45.12</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.60</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.06</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>123,883.00</td><td align="right" headers="PerExecution Requests" class='awrc'>123,883.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,883.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.42</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.60</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.06</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.35</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>123,822</td><td align="right" headers="Total Requests" class='awrnc'>123,822</td><td align="right" headers="Total Reads" class='awrnc'>123,822</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.00</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.95</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>123,822.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>123,822.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,822.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.95</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.04</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.34</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.28</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>123,819</td><td align="right" headers="Total Requests" class='awrc'>123,819</td><td align="right" headers="Total Reads" class='awrc'>123,819</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.11</td><td align="right" headers="Total CPU(s)" class='awrc'>44.91</td><td align="right" headers="Total IOWait(s)" class='awrc'>509.05</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>32.44</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>123,819.00</td><td align="right" headers="PerExecution Requests" class='awrc'>123,819.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,819.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.11</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>44.91</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>509.05</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>32.44</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.34</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.21</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>123,673</td><td align="right" headers="Total Requests" class='awrnc'>123,673</td><td align="right" headers="Total Reads" class='awrnc'>123,673</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.34</td><td align="right" headers="Total CPU(s)" class='awrnc'>44.98</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.05</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.65</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>123,673.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>123,673.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,673.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.34</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>44.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.05</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.65</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.34</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12065"></a>
<h3 class="awr">SQL ordered by Executions (Global)</h3>
<ul>
<li class="awr">Total Executions:	1,296,433</li>
<li class="awr">Captured SQL account for   99.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Executions (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Execs" class='awrclb'>1,095,430</td><td align="right" headers="Total Elapsed(s)" class='awrc'>15,146.58</td><td align="right" headers="Total CPU(s)" class='awrc'>949.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>13,828.20</td><td align="right" headers="Total Gets" class='awrc'>6,581,630</td><td align="right" headers="Total Reads" class='awrc'>3,138,036</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Cluster(s)" class='awrc'>827.73</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>84.50</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>83.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.68</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>62.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.73</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>82.27</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Execs" class='awrnclb'>193,256</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2,767.21</td><td align="right" headers="Total CPU(s)" class='awrnc'>203.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>2,462.01</td><td align="right" headers="Total Gets" class='awrnc'>1,399,058</td><td align="right" headers="Total Reads" class='awrnc'>553,553</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Cluster(s)" class='awrnc'>172.87</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.24</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>14.91</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.95</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>17.18</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td><td align="right" headers="Total Execs" class='awrclb'>331</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.04</td><td align="right" headers="Total CPU(s)" class='awrc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>682</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>330</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>2.06</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td><td align="right" headers="Total Execs" class='awrnclb'>312</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.15</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.11</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="Total Gets" class='awrnc'>1,887</td><td align="right" headers="Total Reads" class='awrnc'>4</td><td align="right" headers="Total Rows" class='awrnc'>312</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>6.05</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Execs" class='awrclb'>181</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.49</td><td align="right" headers="Total CPU(s)" class='awrc'>0.06</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.04</td><td align="right" headers="Total Gets" class='awrc'>791</td><td align="right" headers="Total Reads" class='awrc'>10</td><td align="right" headers="Total Rows" class='awrc'>181</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.41</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.37</td><td align="right" headers="PerExecution Reads" class='awrc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.04</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td><td align="right" headers="Total Execs" class='awrnclb'>121</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.02</td><td align="right" headers="Total Gets" class='awrnc'>846</td><td align="right" headers="Total Reads" class='awrnc'>5</td><td align="right" headers="Total Rows" class='awrnc'>121</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.05</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>6.99</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.04</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td><td align="right" headers="Total Execs" class='awrclb'>92</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.04</td><td align="right" headers="Total CPU(s)" class='awrc'>0.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>42</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>92</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>0.46</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td><td align="right" headers="Total Execs" class='awrnclb'>57</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.05</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="Total Gets" class='awrnc'>191</td><td align="right" headers="Total Reads" class='awrnc'>4</td><td align="right" headers="Total Rows" class='awrnc'>57</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>3.35</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td><td align="right" headers="Total Execs" class='awrclb'>47</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.00</td><td align="right" headers="Total CPU(s)" class='awrc'>0.00</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>188</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>47</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.00</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select pob.parttype from sys.t...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td><td align="right" headers="Total Execs" class='awrnclb'>46</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>368</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>46</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>8.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select ind.type#, ind.property...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12064"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time (Global)</h3>
<ul>
<li class="awr">Total Cluster Wait Time (s):	       1,006</li>
<li class="awr">Captured SQL account for   99.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Cluster Wait Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>827.73</td><td align="right" headers="Total Elapsed(s)" class='awrc'>15,146.58</td><td align="right" headers="Total CPU(s)" class='awrc'>949.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>13,828.20</td><td align="right" headers="Total Gets" class='awrc'>6,581,630</td><td align="right" headers="Total Reads" class='awrc'>3,138,036</td><td align="right" headers="Total Rows" class='awrc'>1,095,455</td><td align="right" headers="Total Execs" class='awrc'>1,095,430</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>82.27</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>83.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.91</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>84.68</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>62.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.73</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.50</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>172.87</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2,767.21</td><td align="right" headers="Total CPU(s)" class='awrnc'>203.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>2,462.01</td><td align="right" headers="Total Gets" class='awrnc'>1,399,058</td><td align="right" headers="Total Reads" class='awrnc'>553,553</td><td align="right" headers="Total Rows" class='awrnc'>579,768</td><td align="right" headers="Total Execs" class='awrnc'>193,256</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.24</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.86</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>17.18</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.52</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>13.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.95</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.91</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>58.14</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.53</td><td align="right" headers="Total CPU(s)" class='awrc'>51.76</td><td align="right" headers="Total IOWait(s)" class='awrc'>476.33</td><td align="right" headers="Total Gets" class='awrc'>221,406</td><td align="right" headers="Total Reads" class='awrc'>100,305</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>58.14</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.53</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>51.76</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>476.33</td><td align="right" headers="PerExecution Gets" class='awrc'>221,406.00</td><td align="right" headers="PerExecution Reads" class='awrc'>100,305.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>5.78</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.70</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.92</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.09</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.71</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#df0pz79un9sgm">df0pz79un9sgm</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>58.00</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.11</td><td align="right" headers="Total CPU(s)" class='awrnc'>52.77</td><td align="right" headers="Total IOWait(s)" class='awrnc'>476.45</td><td align="right" headers="Total Gets" class='awrnc'>225,929</td><td align="right" headers="Total Reads" class='awrnc'>100,552</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>58.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.11</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>52.77</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>476.45</td><td align="right" headers="PerExecution Gets" class='awrnc'>225,929.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>100,552.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>5.76</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.77</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.92</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>34.18</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="Total CPU(s)" class='awrc'>45.32</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.38</td><td align="right" headers="Total Gets" class='awrc'>276,356</td><td align="right" headers="Total Reads" class='awrc'>123,135</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>34.18</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.32</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.38</td><td align="right" headers="PerExecution Gets" class='awrc'>276,356.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,135.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.40</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.24</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.32</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>34.08</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.11</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.23</td><td align="right" headers="Total Gets" class='awrnc'>275,473</td><td align="right" headers="Total Reads" class='awrnc'>123,445</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>34.08</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.25</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.11</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.23</td><td align="right" headers="PerExecution Gets" class='awrnc'>275,473.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,445.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>3.39</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.23</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>33.65</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.34</td><td align="right" headers="Total CPU(s)" class='awrc'>44.98</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.05</td><td align="right" headers="Total Gets" class='awrc'>273,136</td><td align="right" headers="Total Reads" class='awrc'>123,673</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>33.65</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.34</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>44.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.05</td><td align="right" headers="PerExecution Gets" class='awrc'>273,136.00</td><td align="right" headers="PerExecution Reads" class='awrc'>123,673.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.22</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.34</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>33.64</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.02</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="Total Gets" class='awrnc'>274,142</td><td align="right" headers="Total Reads" class='awrnc'>123,922</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>33.64</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.40</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.81</td><td align="right" headers="PerExecution Gets" class='awrnc'>274,142.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,922.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.22</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.35</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>33.58</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.02</td><td align="right" headers="Total CPU(s)" class='awrc'>45.38</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.77</td><td align="right" headers="Total Gets" class='awrc'>274,056</td><td align="right" headers="Total Reads" class='awrc'>124,024</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>33.58</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.38</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.77</td><td align="right" headers="PerExecution Gets" class='awrc'>274,056.00</td><td align="right" headers="PerExecution Reads" class='awrc'>124,024.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.25</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.35</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>33.50</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.23</td><td align="right" headers="Total CPU(s)" class='awrnc'>44.84</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.22</td><td align="right" headers="Total Gets" class='awrnc'>272,003</td><td align="right" headers="Total Reads" class='awrnc'>123,415</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>33.50</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.23</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>44.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.22</td><td align="right" headers="PerExecution Gets" class='awrnc'>272,003.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>123,415.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>3.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.21</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.57</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="623"></a>
<h2 class="awr">
Global Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12071">System Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12072">Global Messaging Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12073">System Statistics (Absolute Values)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12071"></a>
<h3 class="awr">System Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>1,157</td><td align="right" class='awrnc'>1.91</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.89</td><td align="right" headers="perSecond Max" class='awrncrb'>1.02</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>273</td><td align="right" class='awrc'>0.45</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.23</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.22</td><td align="right" headers="perSecond Max" class='awrcrb'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>947</td><td align="right" class='awrnc'>1.57</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.71</td><td align="right" headers="perSecond Max" class='awrncrb'>0.86</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.21</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>884</td><td align="right" class='awrc'>1.46</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.73</td><td align="right" headers="perSecond StdDev" class='awrc'>0.11</td><td align="right" headers="perSecond Min" class='awrc'>0.66</td><td align="right" headers="perSecond Max" class='awrcrb'>0.81</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>713</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.11</td><td align="right" headers="perSecond Min" class='awrnc'>0.51</td><td align="right" headers="perSecond Max" class='awrncrb'>0.67</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>171</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>769</td><td align="right" class='awrnc'>1.27</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.63</td><td align="right" headers="perSecond Max" class='awrncrb'>0.65</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>1,043,577</td><td align="right" class='awrnc'>1,726.63</td><td align="right" class='awrnc'>5.38</td><td align="right" headers="perSecond Average" class='awrnclb'>863.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>146.74</td><td align="right" headers="perSecond Min" class='awrnc'>759.56</td><td align="right" headers="perSecond Max" class='awrncrb'>967.07</td></tr>
<tr><td scope="row" class='awrc'>Batched IO double miss count</td><td align="right" class='awrc'>1,043,553</td><td align="right" class='awrc'>1,726.59</td><td align="right" class='awrc'>5.38</td><td align="right" headers="perSecond Average" class='awrclb'>863.30</td><td align="right" headers="perSecond StdDev" class='awrc'>146.76</td><td align="right" headers="perSecond Min" class='awrc'>759.52</td><td align="right" headers="perSecond Max" class='awrcrb'>967.07</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO same unit count</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Batched IO single block count</td><td align="right" class='awrc'>1,043,556</td><td align="right" class='awrc'>1,726.60</td><td align="right" class='awrc'>5.38</td><td align="right" headers="perSecond Average" class='awrclb'>863.30</td><td align="right" headers="perSecond StdDev" class='awrc'>146.76</td><td align="right" headers="perSecond Min" class='awrc'>759.52</td><td align="right" headers="perSecond Max" class='awrcrb'>967.07</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>200,908</td><td align="right" class='awrnc'>332.41</td><td align="right" class='awrnc'>1.04</td><td align="right" headers="perSecond Average" class='awrnclb'>166.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.98</td><td align="right" headers="perSecond Min" class='awrnc'>148.54</td><td align="right" headers="perSecond Max" class='awrncrb'>183.87</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>147,976</td><td align="right" class='awrc'>244.83</td><td align="right" class='awrc'>0.76</td><td align="right" headers="perSecond Average" class='awrclb'>122.42</td><td align="right" headers="perSecond StdDev" class='awrc'>33.14</td><td align="right" headers="perSecond Min" class='awrc'>98.98</td><td align="right" headers="perSecond Max" class='awrcrb'>145.85</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>1,763</td><td align="right" class='awrnc'>2.92</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.46</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.32</td><td align="right" headers="perSecond Min" class='awrnc'>1.23</td><td align="right" headers="perSecond Max" class='awrncrb'>1.69</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>2,813,428</td><td align="right" class='awrc'>4,654.90</td><td align="right" class='awrc'>14.50</td><td align="right" headers="perSecond Average" class='awrclb'>2,327.45</td><td align="right" headers="perSecond StdDev" class='awrc'>211.74</td><td align="right" headers="perSecond Min" class='awrc'>2,177.73</td><td align="right" headers="perSecond Max" class='awrcrb'>2,477.17</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>231</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.22</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.16</td><td align="right" headers="perSecond Max" class='awrcrb'>0.22</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>1,265,465</td><td align="right" class='awrnc'>2,093.74</td><td align="right" class='awrnc'>6.52</td><td align="right" headers="perSecond Average" class='awrnclb'>1,046.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,433.00</td><td align="right" headers="perSecond Min" class='awrnc'>33.59</td><td align="right" headers="perSecond Max" class='awrncrb'>2,060.15</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>330</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.27</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.31</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>106</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.11</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>82,534</td><td align="right" class='awrc'>136.56</td><td align="right" class='awrc'>0.43</td><td align="right" headers="perSecond Average" class='awrclb'>68.28</td><td align="right" headers="perSecond StdDev" class='awrc'>3.20</td><td align="right" headers="perSecond Min" class='awrc'>66.01</td><td align="right" headers="perSecond Max" class='awrcrb'>70.54</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>92,481</td><td align="right" class='awrnc'>153.01</td><td align="right" class='awrnc'>0.48</td><td align="right" headers="perSecond Average" class='awrnclb'>76.51</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.35</td><td align="right" headers="perSecond Min" class='awrnc'>76.26</td><td align="right" headers="perSecond Max" class='awrncrb'>76.75</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>510,723</td><td align="right" class='awrc'>845.01</td><td align="right" class='awrc'>2.63</td><td align="right" headers="perSecond Average" class='awrclb'>422.50</td><td align="right" headers="perSecond StdDev" class='awrc'>105.80</td><td align="right" headers="perSecond Min" class='awrc'>347.69</td><td align="right" headers="perSecond Max" class='awrcrb'>497.31</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>200,521</td><td align="right" class='awrnc'>331.77</td><td align="right" class='awrnc'>1.03</td><td align="right" headers="perSecond Average" class='awrnclb'>165.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.84</td><td align="right" headers="perSecond Min" class='awrnc'>139.84</td><td align="right" headers="perSecond Max" class='awrncrb'>191.93</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>1,920,732</td><td align="right" class='awrc'>3,177.91</td><td align="right" class='awrc'>9.90</td><td align="right" headers="perSecond Average" class='awrclb'>1,588.95</td><td align="right" headers="perSecond StdDev" class='awrc'>420.80</td><td align="right" headers="perSecond Min" class='awrc'>1,291.40</td><td align="right" headers="perSecond Max" class='awrcrb'>1,886.51</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>39,506</td><td align="right" class='awrnc'>65.36</td><td align="right" class='awrnc'>0.20</td><td align="right" headers="perSecond Average" class='awrnclb'>32.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.24</td><td align="right" headers="perSecond Min" class='awrnc'>30.39</td><td align="right" headers="perSecond Max" class='awrncrb'>34.97</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>357</td><td align="right" class='awrnc'>0.59</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.19</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.43</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>561</td><td align="right" class='awrnc'>0.93</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.46</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.44</td><td align="right" headers="perSecond Max" class='awrncrb'>0.49</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>19,553</td><td align="right" class='awrc'>32.35</td><td align="right" class='awrc'>0.10</td><td align="right" headers="perSecond Average" class='awrclb'>16.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.94</td><td align="right" headers="perSecond Min" class='awrc'>15.51</td><td align="right" headers="perSecond Max" class='awrcrb'>16.84</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>583,693</td><td align="right" class='awrc'>965.74</td><td align="right" class='awrc'>3.01</td><td align="right" headers="perSecond Average" class='awrclb'>482.87</td><td align="right" headers="perSecond StdDev" class='awrc'>77.92</td><td align="right" headers="perSecond Min" class='awrc'>427.77</td><td align="right" headers="perSecond Max" class='awrcrb'>537.96</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>328</td><td align="right" class='awrnc'>0.54</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.27</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.16</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>164,364,288</td><td align="right" class='awrc'>271,945.74</td><td align="right" class='awrc'>847.28</td><td align="right" headers="perSecond Average" class='awrclb'>135,972.87</td><td align="right" headers="perSecond StdDev" class='awrc'>22,693.65</td><td align="right" headers="perSecond Min" class='awrc'>119,926.04</td><td align="right" headers="perSecond Max" class='awrcrb'>152,019.71</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>53,391</td><td align="right" class='awrnc'>88.34</td><td align="right" class='awrnc'>0.28</td><td align="right" headers="perSecond Average" class='awrnclb'>44.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>27.83</td><td align="right" headers="perSecond Min" class='awrnc'>24.49</td><td align="right" headers="perSecond Max" class='awrncrb'>63.85</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.11</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>4,259</td><td align="right" class='awrnc'>7.05</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>3.52</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.72</td><td align="right" headers="perSecond Min" class='awrnc'>3.02</td><td align="right" headers="perSecond Max" class='awrncrb'>4.03</td></tr>
<tr><td scope="row" class='awrc'>PX local messages recv'd</td><td align="right" class='awrc'>224</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages sent</td><td align="right" class='awrnc'>224</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.14</td><td align="right" headers="perSecond Max" class='awrncrb'>0.23</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages recv'd</td><td align="right" class='awrc'>237</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.15</td><td align="right" headers="perSecond Max" class='awrcrb'>0.24</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages sent</td><td align="right" class='awrnc'>237</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.15</td><td align="right" headers="perSecond Max" class='awrncrb'>0.24</td></tr>
<tr><td scope="row" class='awrc'>Parallel operations not downgraded</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Requests to/from client</td><td align="right" class='awrnc'>227</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.13</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>0.28</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>195</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.26</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>475</td><td align="right" class='awrnc'>0.79</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.39</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.32</td><td align="right" headers="perSecond Max" class='awrncrb'>0.46</td></tr>
<tr><td scope="row" class='awrc'>application wait time</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>10,741</td><td align="right" class='awrnc'>17.77</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>8.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>8.88</td><td align="right" headers="perSecond Max" class='awrncrb'>8.89</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>317,811</td><td align="right" class='awrc'>525.83</td><td align="right" class='awrc'>1.64</td><td align="right" headers="perSecond Average" class='awrclb'>262.91</td><td align="right" headers="perSecond StdDev" class='awrc'>63.59</td><td align="right" headers="perSecond Min" class='awrc'>217.95</td><td align="right" headers="perSecond Max" class='awrcrb'>307.88</td></tr>
<tr><td scope="row" class='awrnc'>buffer is not pinned count</td><td align="right" class='awrnc'>8,882,803</td><td align="right" class='awrnc'>14,696.88</td><td align="right" class='awrnc'>45.79</td><td align="right" headers="perSecond Average" class='awrnclb'>7,348.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>229.33</td><td align="right" headers="perSecond Min" class='awrnc'>7,186.28</td><td align="right" headers="perSecond Max" class='awrncrb'>7,510.60</td></tr>
<tr><td scope="row" class='awrc'>buffer is pinned count</td><td align="right" class='awrc'>2,801,854</td><td align="right" class='awrc'>4,635.75</td><td align="right" class='awrc'>14.44</td><td align="right" headers="perSecond Average" class='awrclb'>2,317.88</td><td align="right" headers="perSecond StdDev" class='awrc'>354.53</td><td align="right" headers="perSecond Min" class='awrc'>2,067.19</td><td align="right" headers="perSecond Max" class='awrcrb'>2,568.57</td></tr>
<tr><td scope="row" class='awrnc'>bytes received via SQL*Net from client</td><td align="right" class='awrnc'>412,619</td><td align="right" class='awrnc'>682.70</td><td align="right" class='awrnc'>2.13</td><td align="right" headers="perSecond Average" class='awrnclb'>341.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>438.82</td><td align="right" headers="perSecond Min" class='awrnc'>31.06</td><td align="right" headers="perSecond Max" class='awrncrb'>651.64</td></tr>
<tr><td scope="row" class='awrc'>bytes sent via SQL*Net to client</td><td align="right" class='awrc'>41,917</td><td align="right" class='awrc'>69.35</td><td align="right" class='awrc'>0.22</td><td align="right" headers="perSecond Average" class='awrclb'>34.68</td><td align="right" headers="perSecond StdDev" class='awrc'>25.76</td><td align="right" headers="perSecond Min" class='awrc'>16.46</td><td align="right" headers="perSecond Max" class='awrcrb'>52.89</td></tr>
<tr><td scope="row" class='awrnc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrnc'>1,504,337</td><td align="right" class='awrnc'>2,488.97</td><td align="right" class='awrnc'>7.75</td><td align="right" headers="perSecond Average" class='awrnclb'>1,244.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>199.54</td><td align="right" headers="perSecond Min" class='awrnc'>1,103.39</td><td align="right" headers="perSecond Max" class='awrncrb'>1,385.58</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgas</td><td align="right" class='awrc'>374,549</td><td align="right" class='awrc'>619.70</td><td align="right" class='awrc'>1.93</td><td align="right" headers="perSecond Average" class='awrclb'>309.85</td><td align="right" headers="perSecond StdDev" class='awrc'>49.24</td><td align="right" headers="perSecond Min" class='awrc'>275.03</td><td align="right" headers="perSecond Max" class='awrcrb'>344.67</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgcs</td><td align="right" class='awrnc'>5,385</td><td align="right" class='awrnc'>8.91</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>4.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.29</td><td align="right" headers="perSecond Min" class='awrnc'>4.25</td><td align="right" headers="perSecond Max" class='awrncrb'>4.66</td></tr>
<tr><td scope="row" class='awrc'>cell physical IO interconnect bytes</td><td align="right" class='awrc'>43,115,065,856</td><td align="right" class='awrc'>71,335,204.02</td><td align="right" class='awrc'>222,254.06</td><td align="right" headers="perSecond Average" class='awrclb'>35,667,602.01</td><td align="right" headers="perSecond StdDev" class='awrc'>5,166,596.68</td><td align="right" headers="perSecond Min" class='awrc'>32,014,266.46</td><td align="right" headers="perSecond Max" class='awrcrb'>39,320,937.56</td></tr>
<tr><td scope="row" class='awrnc'>change write time</td><td align="right" class='awrnc'>2,305</td><td align="right" class='awrnc'>3.81</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.91</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.44</td><td align="right" headers="perSecond Min" class='awrnc'>1.60</td><td align="right" headers="perSecond Max" class='awrncrb'>2.22</td></tr>
<tr><td scope="row" class='awrc'>cleanout - number of ktugct calls</td><td align="right" class='awrc'>3,886</td><td align="right" class='awrc'>6.43</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>3.21</td><td align="right" headers="perSecond StdDev" class='awrc'>0.32</td><td align="right" headers="perSecond Min" class='awrc'>2.99</td><td align="right" headers="perSecond Max" class='awrcrb'>3.44</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>cleanouts only - consistent read gets</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scan block gets</td><td align="right" class='awrnc'>213</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.18</td><td align="right" headers="perSecond Max" class='awrncrb'>0.18</td></tr>
<tr><td scope="row" class='awrc'>cluster key scans</td><td align="right" class='awrc'>203</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.17</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.17</td><td align="right" headers="perSecond Max" class='awrcrb'>0.17</td></tr>
<tr><td scope="row" class='awrnc'>cluster wait time</td><td align="right" class='awrnc'>100,593</td><td align="right" class='awrnc'>166.43</td><td align="right" class='awrnc'>0.52</td><td align="right" headers="perSecond Average" class='awrnclb'>83.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>30.64</td><td align="right" headers="perSecond Min" class='awrnc'>61.55</td><td align="right" headers="perSecond Max" class='awrncrb'>104.88</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate performed</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate requested</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: block lost</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: callback failure</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: cannot pin</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>583,515</td><td align="right" class='awrnc'>965.44</td><td align="right" class='awrnc'>3.01</td><td align="right" headers="perSecond Average" class='awrnclb'>482.72</td><td align="right" headers="perSecond StdDev" class='awrnc'>78.13</td><td align="right" headers="perSecond Min" class='awrnc'>427.47</td><td align="right" headers="perSecond Max" class='awrncrb'>537.97</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>583,473</td><td align="right" class='awrc'>965.37</td><td align="right" class='awrc'>3.01</td><td align="right" headers="perSecond Average" class='awrclb'>482.69</td><td align="right" headers="perSecond StdDev" class='awrc'>78.16</td><td align="right" headers="perSecond Min" class='awrc'>427.42</td><td align="right" headers="perSecond Max" class='awrcrb'>537.95</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>248</td><td align="right" class='awrnc'>0.41</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.21</td><td align="right" headers="perSecond Max" class='awrncrb'>0.21</td></tr>
<tr><td scope="row" class='awrc'>concurrency wait time</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>1,738,278</td><td align="right" class='awrnc'>2,876.04</td><td align="right" class='awrnc'>8.96</td><td align="right" headers="perSecond Average" class='awrnclb'>1,438.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>305.91</td><td align="right" headers="perSecond Min" class='awrnc'>1,221.71</td><td align="right" headers="perSecond Max" class='awrncrb'>1,654.33</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>9,540,946</td><td align="right" class='awrc'>15,785.80</td><td align="right" class='awrc'>49.18</td><td align="right" headers="perSecond Average" class='awrclb'>7,892.90</td><td align="right" headers="perSecond StdDev" class='awrc'>26.04</td><td align="right" headers="perSecond Min" class='awrc'>7,874.49</td><td align="right" headers="perSecond Max" class='awrcrb'>7,911.31</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>4,884,494</td><td align="right" class='awrnc'>8,081.56</td><td align="right" class='awrnc'>25.18</td><td align="right" headers="perSecond Average" class='awrnclb'>4,040.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>617.34</td><td align="right" headers="perSecond Min" class='awrnc'>3,604.25</td><td align="right" headers="perSecond Max" class='awrncrb'>4,477.31</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>4,883,964</td><td align="right" class='awrc'>8,080.68</td><td align="right" class='awrc'>25.18</td><td align="right" headers="perSecond Average" class='awrclb'>4,040.34</td><td align="right" headers="perSecond StdDev" class='awrc'>617.48</td><td align="right" headers="perSecond Min" class='awrc'>3,603.72</td><td align="right" headers="perSecond Max" class='awrcrb'>4,476.96</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>9,540,946</td><td align="right" class='awrnc'>15,785.80</td><td align="right" class='awrnc'>49.18</td><td align="right" headers="perSecond Average" class='awrnclb'>7,892.90</td><td align="right" headers="perSecond StdDev" class='awrnc'>26.04</td><td align="right" headers="perSecond Min" class='awrnc'>7,874.49</td><td align="right" headers="perSecond Max" class='awrncrb'>7,911.31</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>4,656,452</td><td align="right" class='awrc'>7,704.24</td><td align="right" class='awrc'>24.00</td><td align="right" headers="perSecond Average" class='awrclb'>3,852.12</td><td align="right" headers="perSecond StdDev" class='awrc'>591.31</td><td align="right" headers="perSecond Min" class='awrc'>3,434.00</td><td align="right" headers="perSecond Max" class='awrcrb'>4,270.24</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>1,473,944</td><td align="right" class='awrnc'>2,438.69</td><td align="right" class='awrnc'>7.60</td><td align="right" headers="perSecond Average" class='awrnclb'>1,219.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>151.52</td><td align="right" headers="perSecond Min" class='awrnc'>1,112.20</td><td align="right" headers="perSecond Max" class='awrncrb'>1,326.48</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>1,603,261</td><td align="right" class='awrc'>2,652.64</td><td align="right" class='awrc'>8.26</td><td align="right" headers="perSecond Average" class='awrclb'>1,326.32</td><td align="right" headers="perSecond StdDev" class='awrc'>210.55</td><td align="right" headers="perSecond Min" class='awrc'>1,177.44</td><td align="right" headers="perSecond Max" class='awrcrb'>1,475.21</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>1,057,362</td><td align="right" class='awrnc'>1,749.44</td><td align="right" class='awrnc'>5.45</td><td align="right" headers="perSecond Average" class='awrnclb'>874.72</td><td align="right" headers="perSecond StdDev" class='awrnc'>135.43</td><td align="right" headers="perSecond Min" class='awrnc'>778.95</td><td align="right" headers="perSecond Max" class='awrncrb'>970.48</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>297</td><td align="right" class='awrc'>0.49</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.25</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.26</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>1,057,065</td><td align="right" class='awrnc'>1,748.95</td><td align="right" class='awrnc'>5.45</td><td align="right" headers="perSecond Average" class='awrnclb'>874.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>135.41</td><td align="right" headers="perSecond Min" class='awrnc'>778.72</td><td align="right" headers="perSecond Max" class='awrncrb'>970.22</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>436,956</td><td align="right" class='awrc'>722.96</td><td align="right" class='awrc'>2.25</td><td align="right" headers="perSecond Average" class='awrclb'>361.48</td><td align="right" headers="perSecond StdDev" class='awrc'>54.20</td><td align="right" headers="perSecond Min" class='awrc'>323.15</td><td align="right" headers="perSecond Max" class='awrcrb'>399.80</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>318,828</td><td align="right" class='awrnc'>527.51</td><td align="right" class='awrnc'>1.64</td><td align="right" headers="perSecond Average" class='awrnclb'>263.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>63.57</td><td align="right" headers="perSecond Min" class='awrnc'>218.80</td><td align="right" headers="perSecond Max" class='awrncrb'>308.71</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>494,112</td><td align="right" class='awrc'>817.52</td><td align="right" class='awrc'>2.55</td><td align="right" headers="perSecond Average" class='awrclb'>408.76</td><td align="right" headers="perSecond StdDev" class='awrc'>36.58</td><td align="right" headers="perSecond Min" class='awrc'>382.89</td><td align="right" headers="perSecond Max" class='awrcrb'>434.63</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>472</td><td align="right" class='awrnc'>0.78</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.39</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.38</td><td align="right" headers="perSecond Max" class='awrncrb'>0.40</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>406,986</td><td align="right" class='awrc'>673.37</td><td align="right" class='awrc'>2.10</td><td align="right" headers="perSecond Average" class='awrclb'>336.69</td><td align="right" headers="perSecond StdDev" class='awrc'>51.53</td><td align="right" headers="perSecond Min" class='awrc'>300.25</td><td align="right" headers="perSecond Max" class='awrcrb'>373.12</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>406,953</td><td align="right" class='awrnc'>673.32</td><td align="right" class='awrnc'>2.10</td><td align="right" headers="perSecond Average" class='awrnclb'>336.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>51.52</td><td align="right" headers="perSecond Min" class='awrnc'>300.23</td><td align="right" headers="perSecond Max" class='awrncrb'>373.09</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>335</td><td align="right" class='awrnc'>0.55</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.25</td><td align="right" headers="perSecond Max" class='awrncrb'>0.31</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>1,296,433</td><td align="right" class='awrnc'>2,144.99</td><td align="right" class='awrnc'>6.68</td><td align="right" headers="perSecond Average" class='awrnclb'>1,072.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>173.35</td><td align="right" headers="perSecond Min" class='awrnc'>949.92</td><td align="right" headers="perSecond Max" class='awrncrb'>1,195.07</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>4,110,432,092</td><td align="right" class='awrc'>6,800,886.82</td><td align="right" class='awrc'>21,188.89</td><td align="right" headers="perSecond Average" class='awrclb'>3,400,443.41</td><td align="right" headers="perSecond StdDev" class='awrc'>4,290,307.74</td><td align="right" headers="perSecond Min" class='awrc'>366,737.72</td><td align="right" headers="perSecond Max" class='awrcrb'>6,434,149.10</td></tr>
<tr><td scope="row" class='awrnc'>file io wait time</td><td align="right" class='awrnc'>28,571,508,238</td><td align="right" class='awrnc'>47,272,367.73</td><td align="right" class='awrnc'>147,283.41</td><td align="right" headers="perSecond Average" class='awrnclb'>23,636,183.86</td><td align="right" headers="perSecond StdDev" class='awrnc'>10,299,607.15</td><td align="right" headers="perSecond Min" class='awrnc'>16,353,261.80</td><td align="right" headers="perSecond Max" class='awrncrb'>30,919,105.93</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>3,785,243</td><td align="right" class='awrc'>6,262.80</td><td align="right" class='awrc'>19.51</td><td align="right" headers="perSecond Average" class='awrclb'>3,131.40</td><td align="right" headers="perSecond StdDev" class='awrc'>527.37</td><td align="right" headers="perSecond Min" class='awrc'>2,758.49</td><td align="right" headers="perSecond Max" class='awrcrb'>3,504.31</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>3,764,723</td><td align="right" class='awrnc'>6,228.85</td><td align="right" class='awrnc'>19.41</td><td align="right" headers="perSecond Average" class='awrnclb'>3,114.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>519.72</td><td align="right" headers="perSecond Min" class='awrnc'>2,746.93</td><td align="right" headers="perSecond Max" class='awrncrb'>3,481.92</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>35,406</td><td align="right" class='awrc'>58.58</td><td align="right" class='awrc'>0.18</td><td align="right" headers="perSecond Average" class='awrclb'>29.29</td><td align="right" headers="perSecond StdDev" class='awrc'>5.84</td><td align="right" headers="perSecond Min" class='awrc'>25.16</td><td align="right" headers="perSecond Max" class='awrcrb'>33.42</td></tr>
<tr><td scope="row" class='awrnc'>gc cleanout saved</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks created</td><td align="right" class='awrc'>17,842</td><td align="right" class='awrc'>29.52</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>14.76</td><td align="right" headers="perSecond StdDev" class='awrc'>0.25</td><td align="right" headers="perSecond Min" class='awrc'>14.58</td><td align="right" headers="perSecond Max" class='awrcrb'>14.94</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks expanded</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.05</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>447</td><td align="right" class='awrnc'>0.74</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.33</td><td align="right" headers="perSecond Max" class='awrncrb'>0.41</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>1,153</td><td align="right" class='awrnc'>1.91</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.90</td><td align="right" headers="perSecond Max" class='awrncrb'>1.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>8,604</td><td align="right" class='awrc'>14.24</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>7.12</td><td align="right" headers="perSecond StdDev" class='awrc'>1.85</td><td align="right" headers="perSecond Min" class='awrc'>5.81</td><td align="right" headers="perSecond Max" class='awrcrb'>8.42</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>10,164</td><td align="right" class='awrc'>16.82</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>8.41</td><td align="right" headers="perSecond StdDev" class='awrc'>0.19</td><td align="right" headers="perSecond Min" class='awrc'>8.28</td><td align="right" headers="perSecond Max" class='awrcrb'>8.54</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>10,166</td><td align="right" class='awrnc'>16.82</td><td align="right" class='awrnc'>0.05</td><td align="right" headers="perSecond Average" class='awrnclb'>8.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.19</td><td align="right" headers="perSecond Min" class='awrnc'>8.27</td><td align="right" headers="perSecond Max" class='awrncrb'>8.55</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc current block pin time</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block receive time</td><td align="right" class='awrnc'>1,817</td><td align="right" class='awrnc'>3.01</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.45</td><td align="right" headers="perSecond Min" class='awrnc'>1.18</td><td align="right" headers="perSecond Max" class='awrncrb'>1.82</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks flushed</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks pinned</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks received</td><td align="right" class='awrc'>27,189</td><td align="right" class='awrc'>44.99</td><td align="right" class='awrc'>0.14</td><td align="right" headers="perSecond Average" class='awrclb'>22.49</td><td align="right" headers="perSecond StdDev" class='awrc'>6.16</td><td align="right" headers="perSecond Min" class='awrc'>18.14</td><td align="right" headers="perSecond Max" class='awrcrb'>26.85</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks served</td><td align="right" class='awrnc'>27,204</td><td align="right" class='awrnc'>45.01</td><td align="right" class='awrnc'>0.14</td><td align="right" headers="perSecond Average" class='awrnclb'>22.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.21</td><td align="right" headers="perSecond Min" class='awrnc'>18.12</td><td align="right" headers="perSecond Max" class='awrncrb'>26.89</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read cr</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>144,764</td><td align="right" class='awrnc'>239.52</td><td align="right" class='awrnc'>0.75</td><td align="right" headers="perSecond Average" class='awrnclb'>119.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>17.49</td><td align="right" headers="perSecond Min" class='awrnc'>107.39</td><td align="right" headers="perSecond Max" class='awrncrb'>132.12</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>154,196</td><td align="right" class='awrc'>255.12</td><td align="right" class='awrc'>0.79</td><td align="right" headers="perSecond Average" class='awrclb'>127.56</td><td align="right" headers="perSecond StdDev" class='awrc'>33.71</td><td align="right" headers="perSecond Min" class='awrc'>103.72</td><td align="right" headers="perSecond Max" class='awrcrb'>151.40</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>1,955,515</td><td align="right" class='awrnc'>3,235.46</td><td align="right" class='awrnc'>10.08</td><td align="right" headers="perSecond Average" class='awrnclb'>1,617.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>28.31</td><td align="right" headers="perSecond Min" class='awrnc'>1,597.71</td><td align="right" headers="perSecond Max" class='awrncrb'>1,637.75</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi fg</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc no change made</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass grants</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass waits</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc remote grants</td><td align="right" class='awrc'>1,786,565</td><td align="right" class='awrc'>2,955.92</td><td align="right" class='awrc'>9.21</td><td align="right" headers="perSecond Average" class='awrclb'>1,477.96</td><td align="right" headers="perSecond StdDev" class='awrc'>486.32</td><td align="right" headers="perSecond Min" class='awrc'>1,134.08</td><td align="right" headers="perSecond Max" class='awrcrb'>1,821.84</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages received</td><td align="right" class='awrnc'>1,777,138</td><td align="right" class='awrnc'>2,940.33</td><td align="right" class='awrnc'>9.16</td><td align="right" headers="perSecond Average" class='awrnclb'>1,470.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>475.62</td><td align="right" headers="perSecond Min" class='awrnc'>1,133.85</td><td align="right" headers="perSecond Max" class='awrncrb'>1,806.48</td></tr>
<tr><td scope="row" class='awrc'>gc status messages sent</td><td align="right" class='awrc'>1,777,244</td><td align="right" class='awrc'>2,940.51</td><td align="right" class='awrc'>9.16</td><td align="right" headers="perSecond Average" class='awrclb'>1,470.26</td><td align="right" headers="perSecond StdDev" class='awrc'>476.19</td><td align="right" headers="perSecond Min" class='awrc'>1,133.54</td><td align="right" headers="perSecond Max" class='awrcrb'>1,806.97</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock failures</td><td align="right" class='awrnc'>3,913</td><td align="right" class='awrnc'>6.47</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>6.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>6.47</td><td align="right" headers="perSecond Max" class='awrncrb'>6.47</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>290,191</td><td align="right" class='awrc'>480.13</td><td align="right" class='awrc'>1.50</td><td align="right" headers="perSecond Average" class='awrclb'>240.07</td><td align="right" headers="perSecond StdDev" class='awrc'>312.31</td><td align="right" headers="perSecond Min" class='awrc'>19.23</td><td align="right" headers="perSecond Max" class='awrcrb'>460.91</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>17,794</td><td align="right" class='awrnc'>29.44</td><td align="right" class='awrnc'>0.09</td><td align="right" headers="perSecond Average" class='awrnclb'>14.72</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.30</td><td align="right" headers="perSecond Min" class='awrnc'>14.51</td><td align="right" headers="perSecond Max" class='awrncrb'>14.94</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access records</td><td align="right" class='awrc'>3,743,811</td><td align="right" class='awrc'>6,194.25</td><td align="right" class='awrc'>19.30</td><td align="right" headers="perSecond Average" class='awrclb'>3,097.12</td><td align="right" headers="perSecond StdDev" class='awrc'>515.36</td><td align="right" headers="perSecond Min" class='awrc'>2,732.71</td><td align="right" headers="perSecond Max" class='awrcrb'>3,461.54</td></tr>
<tr><td scope="row" class='awrnc'>gcs messages sent</td><td align="right" class='awrnc'>4,158,093</td><td align="right" class='awrnc'>6,879.69</td><td align="right" class='awrnc'>21.43</td><td align="right" headers="perSecond Average" class='awrnclb'>3,439.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,121.30</td><td align="right" headers="perSecond Min" class='awrnc'>2,646.97</td><td align="right" headers="perSecond Max" class='awrncrb'>4,232.72</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock failures</td><td align="right" class='awrc'>17,454</td><td align="right" class='awrc'>28.88</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>28.88</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>28.88</td><td align="right" headers="perSecond Max" class='awrcrb'>28.88</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock grants</td><td align="right" class='awrnc'>97,507</td><td align="right" class='awrnc'>161.33</td><td align="right" class='awrnc'>0.50</td><td align="right" headers="perSecond Average" class='awrnclb'>161.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>161.33</td><td align="right" headers="perSecond Max" class='awrncrb'>161.33</td></tr>
<tr><td scope="row" class='awrc'>gcs stats management (SCM) process posts</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>4,169</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>3.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.60</td><td align="right" headers="perSecond Min" class='awrnc'>3.03</td><td align="right" headers="perSecond Max" class='awrncrb'>3.87</td></tr>
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>823</td><td align="right" class='awrc'>1.36</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.68</td><td align="right" headers="perSecond StdDev" class='awrc'>0.18</td><td align="right" headers="perSecond Min" class='awrc'>0.55</td><td align="right" headers="perSecond Max" class='awrcrb'>0.81</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets sync</td><td align="right" class='awrnc'>216,133</td><td align="right" class='awrnc'>357.60</td><td align="right" class='awrnc'>1.11</td><td align="right" headers="perSecond Average" class='awrnclb'>178.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.42</td><td align="right" headers="perSecond Min" class='awrnc'>164.36</td><td align="right" headers="perSecond Max" class='awrncrb'>193.24</td></tr>
<tr><td scope="row" class='awrc'>global enqueue releases</td><td align="right" class='awrc'>215,908</td><td align="right" class='awrc'>357.23</td><td align="right" class='awrc'>1.11</td><td align="right" headers="perSecond Average" class='awrclb'>178.61</td><td align="right" headers="perSecond StdDev" class='awrc'>20.59</td><td align="right" headers="perSecond Min" class='awrc'>164.05</td><td align="right" headers="perSecond Max" class='awrcrb'>193.17</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>12,616</td><td align="right" class='awrnc'>20.87</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>10.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.20</td><td align="right" headers="perSecond Min" class='awrnc'>10.29</td><td align="right" headers="perSecond Max" class='awrncrb'>10.58</td></tr>
<tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>194,510</td><td align="right" class='awrc'>321.82</td><td align="right" class='awrc'>1.00</td><td align="right" headers="perSecond Average" class='awrclb'>160.91</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>160.86</td><td align="right" headers="perSecond Max" class='awrcrb'>160.96</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>478</td><td align="right" class='awrc'>0.79</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.40</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.38</td><td align="right" headers="perSecond Max" class='awrcrb'>0.42</td></tr>
<tr><td scope="row" class='awrnc'>in call idle wait time</td><td align="right" class='awrnc'>9,966,675</td><td align="right" class='awrnc'>16,490.18</td><td align="right" class='awrnc'>51.38</td><td align="right" headers="perSecond Average" class='awrnclb'>8,245.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>23.22</td><td align="right" headers="perSecond Min" class='awrnc'>8,228.67</td><td align="right" headers="perSecond Max" class='awrncrb'>8,261.51</td></tr>
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>552,111</td><td align="right" class='awrc'>913.49</td><td align="right" class='awrc'>2.85</td><td align="right" headers="perSecond Average" class='awrclb'>456.75</td><td align="right" headers="perSecond StdDev" class='awrc'>642.71</td><td align="right" headers="perSecond Min" class='awrc'>2.28</td><td align="right" headers="perSecond Max" class='awrcrb'>911.21</td></tr>
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>1,842,965</td><td align="right" class='awrnc'>3,049.25</td><td align="right" class='awrnc'>9.50</td><td align="right" headers="perSecond Average" class='awrnclb'>1,524.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>469.68</td><td align="right" headers="perSecond Min" class='awrnc'>1,192.51</td><td align="right" headers="perSecond Max" class='awrncrb'>1,856.74</td></tr>
<tr><td scope="row" class='awrc'>leaf node 90-10 splits</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>leaf node splits</td><td align="right" class='awrnc'>167</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.14</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>lob reads</td><td align="right" class='awrc'>370</td><td align="right" class='awrc'>0.61</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.31</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.30</td><td align="right" headers="perSecond Max" class='awrcrb'>0.31</td></tr>
<tr><td scope="row" class='awrnc'>lob writes</td><td align="right" class='awrnc'>6,280</td><td align="right" class='awrnc'>10.39</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>5.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>5.15</td><td align="right" headers="perSecond Max" class='awrncrb'>5.24</td></tr>
<tr><td scope="row" class='awrc'>lob writes unaligned</td><td align="right" class='awrc'>6,280</td><td align="right" class='awrc'>10.39</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>5.20</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>5.15</td><td align="right" headers="perSecond Max" class='awrcrb'>5.24</td></tr>
<tr><td scope="row" class='awrnc'>logical read bytes from cache</td><td align="right" class='awrnc'>86,818,897,920</td><td align="right" class='awrnc'>143,644,639.97</td><td align="right" class='awrnc'>447,543.16</td><td align="right" headers="perSecond Average" class='awrnclb'>71,822,319.98</td><td align="right" headers="perSecond StdDev" class='awrnc'>895,968.00</td><td align="right" headers="perSecond Min" class='awrnc'>71,188,774.94</td><td align="right" headers="perSecond Max" class='awrncrb'>72,455,865.03</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>222,109</td><td align="right" class='awrnc'>367.49</td><td align="right" class='awrnc'>1.14</td><td align="right" headers="perSecond Average" class='awrnclb'>183.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>23.38</td><td align="right" headers="perSecond Min" class='awrnc'>167.21</td><td align="right" headers="perSecond Max" class='awrncrb'>200.28</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>222,108</td><td align="right" class='awrc'>367.48</td><td align="right" class='awrc'>1.14</td><td align="right" headers="perSecond Average" class='awrclb'>183.74</td><td align="right" headers="perSecond StdDev" class='awrc'>23.38</td><td align="right" headers="perSecond Min" class='awrc'>167.21</td><td align="right" headers="perSecond Max" class='awrcrb'>200.27</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>4,631,571</td><td align="right" class='awrnc'>7,663.08</td><td align="right" class='awrnc'>23.88</td><td align="right" headers="perSecond Average" class='awrnclb'>3,831.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>597.42</td><td align="right" headers="perSecond Min" class='awrnc'>3,409.10</td><td align="right" headers="perSecond Max" class='awrncrb'>4,253.98</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>7,900,608</td><td align="right" class='awrc'>13,071.79</td><td align="right" class='awrc'>40.73</td><td align="right" headers="perSecond Average" class='awrclb'>6,535.90</td><td align="right" headers="perSecond StdDev" class='awrc'>1,561.31</td><td align="right" headers="perSecond Min" class='awrc'>5,431.88</td><td align="right" headers="perSecond Max" class='awrcrb'>7,639.91</td></tr>
<tr><td scope="row" class='awrnc'>non-idle wait time</td><td align="right" class='awrnc'>1,887,771</td><td align="right" class='awrnc'>3,123.37</td><td align="right" class='awrnc'>9.73</td><td align="right" headers="perSecond Average" class='awrnclb'>1,561.69</td><td align="right" headers="perSecond StdDev" class='awrnc'>385.05</td><td align="right" headers="perSecond Min" class='awrnc'>1,289.42</td><td align="right" headers="perSecond Max" class='awrncrb'>1,833.96</td></tr>
<tr><td scope="row" class='awrc'>opened cursors cumulative</td><td align="right" class='awrc'>1,490,824</td><td align="right" class='awrc'>2,466.61</td><td align="right" class='awrc'>7.69</td><td align="right" headers="perSecond Average" class='awrclb'>1,233.31</td><td align="right" headers="perSecond StdDev" class='awrc'>199.50</td><td align="right" headers="perSecond Min" class='awrc'>1,092.24</td><td align="right" headers="perSecond Max" class='awrcrb'>1,374.38</td></tr>
<tr><td scope="row" class='awrnc'>parse count (hard)</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>2,908</td><td align="right" class='awrc'>4.81</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.41</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>2.40</td><td align="right" headers="perSecond Max" class='awrcrb'>2.41</td></tr>
<tr><td scope="row" class='awrnc'>parse time cpu</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>parse time elapsed</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>physical read IO requests</td><td align="right" class='awrnc'>3,703,331</td><td align="right" class='awrnc'>6,127.27</td><td align="right" class='awrnc'>19.09</td><td align="right" headers="perSecond Average" class='awrnclb'>3,063.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>511.70</td><td align="right" headers="perSecond Min" class='awrnc'>2,701.81</td><td align="right" headers="perSecond Max" class='awrncrb'>3,425.47</td></tr>
<tr><td scope="row" class='awrc'>physical read bytes</td><td align="right" class='awrc'>30,338,859,008</td><td align="right" class='awrc'>50,196,570.54</td><td align="right" class='awrc'>156,393.93</td><td align="right" headers="perSecond Average" class='awrclb'>25,098,285.27</td><td align="right" headers="perSecond StdDev" class='awrc'>4,191,866.94</td><td align="right" headers="perSecond Min" class='awrc'>22,134,187.73</td><td align="right" headers="perSecond Max" class='awrcrb'>28,062,382.81</td></tr>
<tr><td scope="row" class='awrnc'>physical read total IO requests</td><td align="right" class='awrnc'>3,710,606</td><td align="right" class='awrnc'>6,139.31</td><td align="right" class='awrnc'>19.13</td><td align="right" headers="perSecond Average" class='awrnclb'>3,069.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>511.10</td><td align="right" headers="perSecond Min" class='awrnc'>2,708.25</td><td align="right" headers="perSecond Max" class='awrncrb'>3,431.06</td></tr>
<tr><td scope="row" class='awrc'>physical read total bytes</td><td align="right" class='awrc'>31,513,375,232</td><td align="right" class='awrc'>52,139,847.39</td><td align="right" class='awrc'>162,448.45</td><td align="right" headers="perSecond Average" class='awrclb'>26,069,923.69</td><td align="right" headers="perSecond StdDev" class='awrc'>3,991,513.03</td><td align="right" headers="perSecond Min" class='awrc'>23,247,497.76</td><td align="right" headers="perSecond Max" class='awrcrb'>28,892,349.63</td></tr>
<tr><td scope="row" class='awrnc'>physical read total multi block requests</td><td align="right" class='awrnc'>1,033</td><td align="right" class='awrnc'>1.71</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.85</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.18</td><td align="right" headers="perSecond Min" class='awrnc'>0.72</td><td align="right" headers="perSecond Max" class='awrncrb'>0.98</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>3,703,474</td><td align="right" class='awrc'>6,127.51</td><td align="right" class='awrc'>19.09</td><td align="right" headers="perSecond Average" class='awrclb'>3,063.76</td><td align="right" headers="perSecond StdDev" class='awrc'>511.70</td><td align="right" headers="perSecond Min" class='awrc'>2,701.93</td><td align="right" headers="perSecond Max" class='awrcrb'>3,425.58</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache</td><td align="right" class='awrnc'>3,703,474</td><td align="right" class='awrnc'>6,127.51</td><td align="right" class='awrnc'>19.09</td><td align="right" headers="perSecond Average" class='awrnclb'>3,063.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>511.70</td><td align="right" headers="perSecond Min" class='awrnc'>2,701.93</td><td align="right" headers="perSecond Max" class='awrncrb'>3,425.58</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache prefetch</td><td align="right" class='awrc'>143</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.12</td><td align="right" headers="perSecond Max" class='awrcrb'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>physical write IO requests</td><td align="right" class='awrnc'>534,337</td><td align="right" class='awrnc'>884.08</td><td align="right" class='awrnc'>2.75</td><td align="right" headers="perSecond Average" class='awrnclb'>442.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>52.29</td><td align="right" headers="perSecond Min" class='awrnc'>405.06</td><td align="right" headers="perSecond Max" class='awrncrb'>479.01</td></tr>
<tr><td scope="row" class='awrc'>physical write bytes</td><td align="right" class='awrc'>4,561,960,960</td><td align="right" class='awrc'>7,547,906.12</td><td align="right" class='awrc'>23,516.47</td><td align="right" headers="perSecond Average" class='awrclb'>3,773,953.06</td><td align="right" headers="perSecond StdDev" class='awrc'>428,636.70</td><td align="right" headers="perSecond Min" class='awrc'>3,470,861.14</td><td align="right" headers="perSecond Max" class='awrcrb'>4,077,044.97</td></tr>
<tr><td scope="row" class='awrnc'>physical write total IO requests</td><td align="right" class='awrnc'>886,281</td><td align="right" class='awrnc'>1,466.38</td><td align="right" class='awrnc'>4.57</td><td align="right" headers="perSecond Average" class='awrnclb'>733.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>100.12</td><td align="right" headers="perSecond Min" class='awrnc'>662.39</td><td align="right" headers="perSecond Max" class='awrncrb'>803.99</td></tr>
<tr><td scope="row" class='awrc'>physical write total bytes</td><td align="right" class='awrc'>5,791,047,680</td><td align="right" class='awrc'>9,581,467.81</td><td align="right" class='awrc'>29,852.30</td><td align="right" headers="perSecond Average" class='awrclb'>4,790,733.91</td><td align="right" headers="perSecond StdDev" class='awrc'>588,308.63</td><td align="right" headers="perSecond Min" class='awrc'>4,374,736.88</td><td align="right" headers="perSecond Max" class='awrcrb'>5,206,730.93</td></tr>
<tr><td scope="row" class='awrnc'>physical write total multi block requests</td><td align="right" class='awrnc'>1,136</td><td align="right" class='awrnc'>1.88</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.90</td><td align="right" headers="perSecond Max" class='awrncrb'>0.98</td></tr>
<tr><td scope="row" class='awrc'>physical writes</td><td align="right" class='awrc'>556,880</td><td align="right" class='awrc'>921.38</td><td align="right" class='awrc'>2.87</td><td align="right" headers="perSecond Average" class='awrclb'>460.69</td><td align="right" headers="perSecond StdDev" class='awrc'>52.32</td><td align="right" headers="perSecond Min" class='awrc'>423.69</td><td align="right" headers="perSecond Max" class='awrcrb'>497.69</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct</td><td align="right" class='awrnc'>307</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.25</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.24</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct (lob)</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct temporary tablespace</td><td align="right" class='awrnc'>192</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.16</td></tr>
<tr><td scope="row" class='awrc'>physical writes from cache</td><td align="right" class='awrc'>556,573</td><td align="right" class='awrc'>920.87</td><td align="right" class='awrc'>2.87</td><td align="right" headers="perSecond Average" class='awrclb'>460.43</td><td align="right" headers="perSecond StdDev" class='awrc'>52.30</td><td align="right" headers="perSecond Min" class='awrc'>423.45</td><td align="right" headers="perSecond Max" class='awrcrb'>497.42</td></tr>
<tr><td scope="row" class='awrnc'>physical writes non checkpoint</td><td align="right" class='awrnc'>548,122</td><td align="right" class='awrnc'>906.88</td><td align="right" class='awrnc'>2.83</td><td align="right" headers="perSecond Average" class='awrnclb'>453.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>51.40</td><td align="right" headers="perSecond Min" class='awrnc'>417.10</td><td align="right" headers="perSecond Max" class='awrncrb'>489.79</td></tr>
<tr><td scope="row" class='awrc'>pinned buffers inspected</td><td align="right" class='awrc'>1,079</td><td align="right" class='awrc'>1.79</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.89</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.88</td><td align="right" headers="perSecond Max" class='awrcrb'>0.91</td></tr>
<tr><td scope="row" class='awrnc'>process last non-idle time</td><td align="right" class='awrnc'>1,029</td><td align="right" class='awrnc'>1.70</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.85</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.21</td><td align="right" headers="perSecond Min" class='awrnc'>0.70</td><td align="right" headers="perSecond Max" class='awrncrb'>1.00</td></tr>
<tr><td scope="row" class='awrc'>recursive calls</td><td align="right" class='awrc'>1,706,400</td><td align="right" class='awrc'>2,823.29</td><td align="right" class='awrc'>8.80</td><td align="right" headers="perSecond Average" class='awrclb'>1,411.65</td><td align="right" headers="perSecond StdDev" class='awrc'>227.41</td><td align="right" headers="perSecond Min" class='awrc'>1,250.84</td><td align="right" headers="perSecond Max" class='awrcrb'>1,572.45</td></tr>
<tr><td scope="row" class='awrnc'>recursive cpu usage</td><td align="right" class='awrnc'>188,258</td><td align="right" class='awrnc'>311.48</td><td align="right" class='awrnc'>0.97</td><td align="right" headers="perSecond Average" class='awrnclb'>155.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>23.29</td><td align="right" headers="perSecond Min" class='awrnc'>139.27</td><td align="right" headers="perSecond Max" class='awrncrb'>172.21</td></tr>
<tr><td scope="row" class='awrc'>redo KB read</td><td align="right" class='awrc'>625,392</td><td align="right" class='awrc'>1,034.73</td><td align="right" class='awrc'>3.22</td><td align="right" headers="perSecond Average" class='awrclb'>517.37</td><td align="right" headers="perSecond StdDev" class='awrc'>84.28</td><td align="right" headers="perSecond Min" class='awrc'>457.77</td><td align="right" headers="perSecond Max" class='awrcrb'>576.96</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrnc'>362,964</td><td align="right" class='awrnc'>600.54</td><td align="right" class='awrnc'>1.87</td><td align="right" headers="perSecond Average" class='awrnclb'>300.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>48.99</td><td align="right" headers="perSecond Min" class='awrnc'>265.62</td><td align="right" headers="perSecond Max" class='awrncrb'>334.91</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written</td><td align="right" class='awrc'>1,180,246</td><td align="right" class='awrc'>1,952.75</td><td align="right" class='awrc'>6.08</td><td align="right" headers="perSecond Average" class='awrclb'>976.38</td><td align="right" headers="perSecond StdDev" class='awrc'>158.40</td><td align="right" headers="perSecond Min" class='awrc'>864.37</td><td align="right" headers="perSecond Max" class='awrcrb'>1,088.38</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 0)</td><td align="right" class='awrnc'>839,921</td><td align="right" class='awrnc'>1,389.68</td><td align="right" class='awrnc'>4.33</td><td align="right" headers="perSecond Average" class='awrnclb'>694.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>93.81</td><td align="right" headers="perSecond Min" class='awrnc'>628.51</td><td align="right" headers="perSecond Max" class='awrncrb'>761.17</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 1)</td><td align="right" class='awrc'>340,325</td><td align="right" class='awrc'>563.08</td><td align="right" class='awrc'>1.75</td><td align="right" headers="perSecond Average" class='awrclb'>281.54</td><td align="right" headers="perSecond StdDev" class='awrc'>64.59</td><td align="right" headers="perSecond Min" class='awrc'>235.87</td><td align="right" headers="perSecond Max" class='awrcrb'>327.21</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>833,230</td><td align="right" class='awrnc'>1,378.60</td><td align="right" class='awrnc'>4.30</td><td align="right" headers="perSecond Average" class='awrnclb'>689.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>105.07</td><td align="right" headers="perSecond Min" class='awrnc'>615.00</td><td align="right" headers="perSecond Max" class='awrncrb'>763.60</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>545,619,736</td><td align="right" class='awrc'>902,744.57</td><td align="right" class='awrc'>2,812.62</td><td align="right" headers="perSecond Average" class='awrclb'>451,372.29</td><td align="right" headers="perSecond StdDev" class='awrc'>73,057.33</td><td align="right" headers="perSecond Min" class='awrc'>399,712.95</td><td align="right" headers="perSecond Max" class='awrcrb'>503,031.62</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>284</td><td align="right" class='awrnc'>0.47</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.23</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.20</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>142</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>65,434</td><td align="right" class='awrc'>108.26</td><td align="right" class='awrc'>0.34</td><td align="right" headers="perSecond Average" class='awrclb'>54.13</td><td align="right" headers="perSecond StdDev" class='awrc'>21.89</td><td align="right" headers="perSecond Min" class='awrc'>38.65</td><td align="right" headers="perSecond Max" class='awrcrb'>69.61</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>3,369</td><td align="right" class='awrnc'>5.57</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>2.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.41</td><td align="right" headers="perSecond Min" class='awrnc'>1.09</td><td align="right" headers="perSecond Max" class='awrncrb'>4.49</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>39,507,596</td><td align="right" class='awrc'>65,366.53</td><td align="right" class='awrc'>203.66</td><td align="right" headers="perSecond Average" class='awrclb'>32,683.26</td><td align="right" headers="perSecond StdDev" class='awrc'>5,485.94</td><td align="right" headers="perSecond Min" class='awrc'>28,804.12</td><td align="right" headers="perSecond Max" class='awrcrb'>36,562.41</td></tr>
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>175,269</td><td align="right" class='awrnc'>289.99</td><td align="right" class='awrnc'>0.90</td><td align="right" headers="perSecond Average" class='awrnclb'>144.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.03</td><td align="right" headers="perSecond Min" class='awrnc'>128.01</td><td align="right" headers="perSecond Max" class='awrncrb'>161.98</td></tr>
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>1,195,598,479</td><td align="right" class='awrc'>1,978,155.09</td><td align="right" class='awrc'>6,163.20</td><td align="right" headers="perSecond Average" class='awrclb'>989,077.54</td><td align="right" headers="perSecond StdDev" class='awrc'>87,212.40</td><td align="right" headers="perSecond Min" class='awrc'>927,409.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1,050,746.02</td></tr>
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>40,159,655</td><td align="right" class='awrnc'>66,445.35</td><td align="right" class='awrnc'>207.02</td><td align="right" headers="perSecond Average" class='awrnclb'>33,222.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>7,771.83</td><td align="right" headers="perSecond Min" class='awrnc'>27,727.16</td><td align="right" headers="perSecond Max" class='awrncrb'>38,718.19</td></tr>
<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>42,579,543</td><td align="right" class='awrnc'>70,449.13</td><td align="right" class='awrnc'>219.49</td><td align="right" headers="perSecond Average" class='awrnclb'>35,224.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>8,268.23</td><td align="right" headers="perSecond Min" class='awrnc'>29,378.05</td><td align="right" headers="perSecond Max" class='awrncrb'>41,071.08</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>107,447</td><td align="right" class='awrc'>177.77</td><td align="right" class='awrc'>0.55</td><td align="right" headers="perSecond Average" class='awrclb'>88.89</td><td align="right" headers="perSecond StdDev" class='awrc'>11.52</td><td align="right" headers="perSecond Min" class='awrc'>80.74</td><td align="right" headers="perSecond Max" class='awrcrb'>97.04</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>57,723</td><td align="right" class='awrnc'>95.50</td><td align="right" class='awrnc'>0.30</td><td align="right" headers="perSecond Average" class='awrnclb'>47.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.55</td><td align="right" headers="perSecond Min" class='awrnc'>41.00</td><td align="right" headers="perSecond Max" class='awrncrb'>54.51</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>5,343</td><td align="right" class='awrc'>8.84</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>4.42</td><td align="right" headers="perSecond StdDev" class='awrc'>1.28</td><td align="right" headers="perSecond Min" class='awrc'>3.52</td><td align="right" headers="perSecond Max" class='awrcrb'>5.32</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>709</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.18</td><td align="right" headers="perSecond Min" class='awrnc'>0.46</td><td align="right" headers="perSecond Max" class='awrncrb'>0.72</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write time</td><td align="right" class='awrnc'>120,301</td><td align="right" class='awrnc'>199.04</td><td align="right" class='awrnc'>0.62</td><td align="right" headers="perSecond Average" class='awrnclb'>99.52</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.79</td><td align="right" headers="perSecond Min" class='awrnc'>93.30</td><td align="right" headers="perSecond Max" class='awrncrb'>105.74</td></tr>
<tr><td scope="row" class='awrc'>redo write time (usec)</td><td align="right" class='awrc'>1,203,010,313</td><td align="right" class='awrc'>1,990,418.20</td><td align="right" class='awrc'>6,201.40</td><td align="right" headers="perSecond Average" class='awrclb'>995,209.10</td><td align="right" headers="perSecond StdDev" class='awrc'>87,927.79</td><td align="right" headers="perSecond Min" class='awrc'>933,034.77</td><td align="right" headers="perSecond Max" class='awrcrb'>1,057,383.43</td></tr>
<tr><td scope="row" class='awrnc'>redo write total time</td><td align="right" class='awrnc'>1,218,691,484</td><td align="right" class='awrnc'>2,016,363.17</td><td align="right" class='awrnc'>6,282.24</td><td align="right" headers="perSecond Average" class='awrnclb'>1,008,181.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>90,739.54</td><td align="right" headers="perSecond Min" class='awrnc'>944,019.04</td><td align="right" headers="perSecond Max" class='awrncrb'>1,072,344.13</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay (usec)</td><td align="right" class='awrc'>23,604,228</td><td align="right" class='awrc'>39,053.90</td><td align="right" class='awrc'>121.68</td><td align="right" headers="perSecond Average" class='awrclb'>19,526.95</td><td align="right" headers="perSecond StdDev" class='awrc'>5,001.82</td><td align="right" headers="perSecond Min" class='awrc'>15,990.13</td><td align="right" headers="perSecond Max" class='awrcrb'>23,063.77</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay count</td><td align="right" class='awrnc'>171,395</td><td align="right" class='awrnc'>283.58</td><td align="right" class='awrnc'>0.88</td><td align="right" headers="perSecond Average" class='awrnclb'>141.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>22.17</td><td align="right" headers="perSecond Min" class='awrnc'>126.11</td><td align="right" headers="perSecond Max" class='awrncrb'>157.46</td></tr>
<tr><td scope="row" class='awrc'>redo writes</td><td align="right" class='awrc'>171,395</td><td align="right" class='awrc'>283.58</td><td align="right" class='awrc'>0.88</td><td align="right" headers="perSecond Average" class='awrclb'>141.79</td><td align="right" headers="perSecond StdDev" class='awrc'>22.17</td><td align="right" headers="perSecond Min" class='awrc'>126.11</td><td align="right" headers="perSecond Max" class='awrcrb'>157.46</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 0)</td><td align="right" class='awrnc'>105,218</td><td align="right" class='awrnc'>174.09</td><td align="right" class='awrnc'>0.54</td><td align="right" headers="perSecond Average" class='awrnclb'>87.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.93</td><td align="right" headers="perSecond Min" class='awrnc'>79.32</td><td align="right" headers="perSecond Max" class='awrncrb'>94.77</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 1)</td><td align="right" class='awrc'>66,177</td><td align="right" class='awrc'>109.49</td><td align="right" class='awrc'>0.34</td><td align="right" headers="perSecond Average" class='awrclb'>54.75</td><td align="right" headers="perSecond StdDev" class='awrc'>11.24</td><td align="right" headers="perSecond Min" class='awrc'>46.80</td><td align="right" headers="perSecond Max" class='awrcrb'>62.69</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive all</td><td align="right" class='awrnc'>171,395</td><td align="right" class='awrnc'>283.58</td><td align="right" class='awrnc'>0.88</td><td align="right" headers="perSecond Average" class='awrnclb'>141.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>22.17</td><td align="right" headers="perSecond Min" class='awrnc'>126.11</td><td align="right" headers="perSecond Max" class='awrncrb'>157.46</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive worker</td><td align="right" class='awrc'>171,395</td><td align="right" class='awrc'>283.58</td><td align="right" class='awrc'>0.88</td><td align="right" headers="perSecond Average" class='awrclb'>141.79</td><td align="right" headers="perSecond StdDev" class='awrc'>22.17</td><td align="right" headers="perSecond Min" class='awrc'>126.11</td><td align="right" headers="perSecond Max" class='awrcrb'>157.46</td></tr>
<tr><td scope="row" class='awrnc'>rollback changes - undo records applied</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rollbacks only - consistent read gets</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>rows fetched via callback</td><td align="right" class='awrnc'>551,082</td><td align="right" class='awrnc'>911.79</td><td align="right" class='awrnc'>2.84</td><td align="right" headers="perSecond Average" class='awrnclb'>455.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>642.98</td><td align="right" headers="perSecond Min" class='awrnc'>1.24</td><td align="right" headers="perSecond Max" class='awrncrb'>910.55</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation bytes</td><td align="right" class='awrc'>81,920</td><td align="right" class='awrc'>135.54</td><td align="right" class='awrc'>0.42</td><td align="right" headers="perSecond Average" class='awrclb'>67.77</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>67.77</td><td align="right" headers="perSecond Max" class='awrcrb'>67.77</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation chunks</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>securefile bytes non-transformed</td><td align="right" class='awrc'>63,321</td><td align="right" class='awrc'>104.77</td><td align="right" class='awrc'>0.33</td><td align="right" headers="perSecond Average" class='awrclb'>52.38</td><td align="right" headers="perSecond StdDev" class='awrc'>0.58</td><td align="right" headers="perSecond Min" class='awrc'>51.97</td><td align="right" headers="perSecond Max" class='awrcrb'>52.79</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write bytes</td><td align="right" class='awrnc'>81,920</td><td align="right" class='awrnc'>135.54</td><td align="right" class='awrnc'>0.42</td><td align="right" headers="perSecond Average" class='awrnclb'>67.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>67.77</td><td align="right" headers="perSecond Max" class='awrncrb'>67.77</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write ops</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>securefile number of non-transformed flushes</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc time (ms)</td><td align="right" class='awrnc'>320</td><td align="right" class='awrnc'>0.53</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.23</td><td align="right" headers="perSecond Min" class='awrnc'>0.10</td><td align="right" headers="perSecond Max" class='awrncrb'>0.43</td></tr>
<tr><td scope="row" class='awrc'>session connect time</td><td align="right" class='awrc'>640</td><td align="right" class='awrc'>1.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>1.06</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>1.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1.06</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>1,489,171</td><td align="right" class='awrnc'>2,463.88</td><td align="right" class='awrnc'>7.68</td><td align="right" headers="perSecond Average" class='awrnclb'>1,231.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>199.54</td><td align="right" headers="perSecond Min" class='awrnc'>1,090.85</td><td align="right" headers="perSecond Max" class='awrncrb'>1,373.03</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>10,598,320</td><td align="right" class='awrc'>17,535.26</td><td align="right" class='awrc'>54.63</td><td align="right" headers="perSecond Average" class='awrclb'>8,767.63</td><td align="right" headers="perSecond StdDev" class='awrc'>109.41</td><td align="right" headers="perSecond Min" class='awrc'>8,690.27</td><td align="right" headers="perSecond Max" class='awrcrb'>8,844.99</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - no wait</td><td align="right" class='awrnc'>1,440,672</td><td align="right" class='awrnc'>2,383.64</td><td align="right" class='awrnc'>7.43</td><td align="right" headers="perSecond Average" class='awrnclb'>1,191.82</td><td align="right" headers="perSecond StdDev" class='awrnc'>214.54</td><td align="right" headers="perSecond Min" class='awrnc'>1,040.11</td><td align="right" headers="perSecond Max" class='awrncrb'>1,343.52</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - wait</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>shared io pool buffer get success</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>sorts (memory)</td><td align="right" class='awrc'>640</td><td align="right" class='awrc'>1.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.53</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.51</td><td align="right" headers="perSecond Max" class='awrcrb'>0.55</td></tr>
<tr><td scope="row" class='awrnc'>sorts (rows)</td><td align="right" class='awrnc'>127,230</td><td align="right" class='awrnc'>210.51</td><td align="right" class='awrnc'>0.66</td><td align="right" headers="perSecond Average" class='awrnclb'>105.25</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.58</td><td align="right" headers="perSecond Min" class='awrnc'>104.13</td><td align="right" headers="perSecond Max" class='awrncrb'>106.37</td></tr>
<tr><td scope="row" class='awrc'>sql area evicted</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>sql area purged</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>summed dirty queue length</td><td align="right" class='awrc'>2,559,132</td><td align="right" class='awrc'>4,234.16</td><td align="right" class='awrc'>13.19</td><td align="right" headers="perSecond Average" class='awrclb'>2,117.08</td><td align="right" headers="perSecond StdDev" class='awrc'>89.04</td><td align="right" headers="perSecond Min" class='awrc'>2,054.12</td><td align="right" headers="perSecond Max" class='awrcrb'>2,180.04</td></tr>
<tr><td scope="row" class='awrnc'>switch current caused by our pin</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>switch current to new buffer</td><td align="right" class='awrc'>161</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>table fetch by rowid</td><td align="right" class='awrnc'>4,894,827</td><td align="right" class='awrnc'>8,098.65</td><td align="right" class='awrnc'>25.23</td><td align="right" headers="perSecond Average" class='awrnclb'>4,049.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>55.28</td><td align="right" headers="perSecond Min" class='awrnc'>4,010.24</td><td align="right" headers="perSecond Max" class='awrncrb'>4,088.41</td></tr>
<tr><td scope="row" class='awrc'>table fetch continued row</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>table scan blocks gotten</td><td align="right" class='awrnc'>7,149</td><td align="right" class='awrnc'>11.83</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>5.91</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.66</td><td align="right" headers="perSecond Min" class='awrnc'>5.45</td><td align="right" headers="perSecond Max" class='awrncrb'>6.38</td></tr>
<tr><td scope="row" class='awrc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrc'>341,100</td><td align="right" class='awrc'>564.36</td><td align="right" class='awrc'>1.76</td><td align="right" headers="perSecond Average" class='awrclb'>282.18</td><td align="right" headers="perSecond StdDev" class='awrc'>76.79</td><td align="right" headers="perSecond Min" class='awrc'>227.88</td><td align="right" headers="perSecond Max" class='awrcrb'>336.48</td></tr>
<tr><td scope="row" class='awrnc'>table scan rows gotten</td><td align="right" class='awrnc'>341,100</td><td align="right" class='awrnc'>564.36</td><td align="right" class='awrnc'>1.76</td><td align="right" headers="perSecond Average" class='awrnclb'>282.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>76.79</td><td align="right" headers="perSecond Min" class='awrnc'>227.88</td><td align="right" headers="perSecond Max" class='awrncrb'>336.48</td></tr>
<tr><td scope="row" class='awrc'>table scans (short tables)</td><td align="right" class='awrc'>679</td><td align="right" class='awrc'>1.12</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.56</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.56</td><td align="right" headers="perSecond Max" class='awrcrb'>0.57</td></tr>
<tr><td scope="row" class='awrnc'>total cf enq hold time</td><td align="right" class='awrnc'>6,134</td><td align="right" class='awrnc'>10.15</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>5.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.69</td><td align="right" headers="perSecond Min" class='awrnc'>4.59</td><td align="right" headers="perSecond Max" class='awrncrb'>5.56</td></tr>
<tr><td scope="row" class='awrc'>total number of cf enq holders</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>0.48</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.21</td><td align="right" headers="perSecond Max" class='awrcrb'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>transaction rollbacks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrc'>1,730,729</td><td align="right" class='awrc'>2,863.55</td><td align="right" class='awrc'>8.92</td><td align="right" headers="perSecond Average" class='awrclb'>1,431.77</td><td align="right" headers="perSecond StdDev" class='awrc'>305.67</td><td align="right" headers="perSecond Min" class='awrc'>1,215.63</td><td align="right" headers="perSecond Max" class='awrcrb'>1,647.92</td></tr>
<tr><td scope="row" class='awrnc'>undo change vector size</td><td align="right" class='awrnc'>213,928,632</td><td align="right" class='awrnc'>353,951.47</td><td align="right" class='awrnc'>1,102.78</td><td align="right" headers="perSecond Average" class='awrnclb'>176,975.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>28,990.41</td><td align="right" headers="perSecond Min" class='awrnc'>156,476.42</td><td align="right" headers="perSecond Max" class='awrncrb'>197,475.05</td></tr>
<tr><td scope="row" class='awrc'>user I/O wait time</td><td align="right" class='awrc'>1,635,017</td><td align="right" class='awrc'>2,705.18</td><td align="right" class='awrc'>8.43</td><td align="right" headers="perSecond Average" class='awrclb'>1,352.59</td><td align="right" headers="perSecond StdDev" class='awrc'>344.63</td><td align="right" headers="perSecond Min" class='awrc'>1,108.91</td><td align="right" headers="perSecond Max" class='awrcrb'>1,596.28</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>497</td><td align="right" class='awrnc'>0.82</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.33</td><td align="right" headers="perSecond Max" class='awrncrb'>0.50</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>193,990</td><td align="right" class='awrc'>320.96</td><td align="right" class='awrc'>1.00</td><td align="right" headers="perSecond Average" class='awrclb'>160.48</td><td align="right" headers="perSecond StdDev" class='awrc'>26.07</td><td align="right" headers="perSecond Min" class='awrc'>142.04</td><td align="right" headers="perSecond Max" class='awrcrb'>178.92</td></tr>
<tr><td scope="row" class='awrnc'>user logons cumulative</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user logouts cumulative</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>1,070</td><td align="right" class='awrnc'>1.77</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.11</td><td align="right" headers="perSecond Min" class='awrnc'>0.81</td><td align="right" headers="perSecond Max" class='awrncrb'>0.96</td></tr>
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12072"></a>
<h3 class="awr">Global Messaging Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>16,987</td><td align="right" class='awrnc'>28.11</td><td align="right" class='awrnc'>0.09</td><td align="right" headers="perSecond Average" class='awrnclb'>14.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.80</td><td align="right" headers="perSecond Min" class='awrnc'>10.66</td><td align="right" headers="perSecond Max" class='awrncrb'>17.45</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>64,126</td><td align="right" class='awrnc'>106.10</td><td align="right" class='awrnc'>0.33</td><td align="right" headers="perSecond Average" class='awrnclb'>53.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.66</td><td align="right" headers="perSecond Min" class='awrnc'>51.87</td><td align="right" headers="perSecond Max" class='awrncrb'>54.22</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>125,458</td><td align="right" class='awrc'>207.57</td><td align="right" class='awrc'>0.65</td><td align="right" headers="perSecond Average" class='awrclb'>103.79</td><td align="right" headers="perSecond StdDev" class='awrc'>9.83</td><td align="right" headers="perSecond Min" class='awrc'>96.83</td><td align="right" headers="perSecond Max" class='awrcrb'>110.74</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>125,663</td><td align="right" class='awrnc'>207.91</td><td align="right" class='awrnc'>0.65</td><td align="right" headers="perSecond Average" class='awrnclb'>103.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.78</td><td align="right" headers="perSecond Min" class='awrnc'>97.04</td><td align="right" headers="perSecond Max" class='awrncrb'>110.87</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>171,181</td><td align="right" class='awrc'>283.22</td><td align="right" class='awrc'>0.88</td><td align="right" headers="perSecond Average" class='awrclb'>141.61</td><td align="right" headers="perSecond StdDev" class='awrc'>22.15</td><td align="right" headers="perSecond Min" class='awrc'>125.95</td><td align="right" headers="perSecond Max" class='awrcrb'>157.28</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>57,196</td><td align="right" class='awrnc'>94.63</td><td align="right" class='awrnc'>0.29</td><td align="right" headers="perSecond Average" class='awrnclb'>47.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>12.39</td><td align="right" headers="perSecond Min" class='awrnc'>38.55</td><td align="right" headers="perSecond Max" class='awrncrb'>56.08</td></tr>
<tr><td scope="row" class='awrc'>gcs assume no cvt</td><td align="right" class='awrc'>13,614</td><td align="right" class='awrc'>22.52</td><td align="right" class='awrc'>0.07</td><td align="right" headers="perSecond Average" class='awrclb'>11.26</td><td align="right" headers="perSecond StdDev" class='awrc'>6.74</td><td align="right" headers="perSecond Min" class='awrc'>6.50</td><td align="right" headers="perSecond Max" class='awrcrb'>16.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast to fg</td><td align="right" class='awrnc'>1,776,654</td><td align="right" class='awrnc'>2,939.54</td><td align="right" class='awrnc'>9.16</td><td align="right" headers="perSecond Average" class='awrnclb'>1,469.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>476.08</td><td align="right" headers="perSecond Min" class='awrnc'>1,133.13</td><td align="right" headers="perSecond Max" class='awrncrb'>1,806.41</td></tr>
<tr><td scope="row" class='awrc'>gcs ast xid</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs bidless ast to lms</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked converts</td><td align="right" class='awrc'>23,661</td><td align="right" class='awrc'>39.15</td><td align="right" class='awrc'>0.12</td><td align="right" headers="perSecond Average" class='awrclb'>19.57</td><td align="right" headers="perSecond StdDev" class='awrc'>1.62</td><td align="right" headers="perSecond Min" class='awrc'>18.43</td><td align="right" headers="perSecond Max" class='awrcrb'>20.72</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked cr converts</td><td align="right" class='awrnc'>10,170</td><td align="right" class='awrnc'>16.83</td><td align="right" class='awrnc'>0.05</td><td align="right" headers="perSecond Average" class='awrnclb'>8.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.70</td><td align="right" headers="perSecond Min" class='awrnc'>7.92</td><td align="right" headers="perSecond Max" class='awrncrb'>8.90</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible basts</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (global)</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (local)</td><td align="right" class='awrc'>21,384</td><td align="right" class='awrc'>35.38</td><td align="right" class='awrc'>0.11</td><td align="right" headers="perSecond Average" class='awrclb'>17.69</td><td align="right" headers="perSecond StdDev" class='awrc'>5.76</td><td align="right" headers="perSecond Min" class='awrc'>13.62</td><td align="right" headers="perSecond Max" class='awrcrb'>21.76</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>261,743</td><td align="right" class='awrnc'>433.06</td><td align="right" class='awrnc'>1.35</td><td align="right" headers="perSecond Average" class='awrnclb'>216.53</td><td align="right" headers="perSecond StdDev" class='awrnc'>65.74</td><td align="right" headers="perSecond Min" class='awrnc'>170.05</td><td align="right" headers="perSecond Max" class='awrncrb'>263.01</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>357</td><td align="right" class='awrc'>0.59</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.30</td><td align="right" headers="perSecond StdDev" class='awrc'>0.19</td><td align="right" headers="perSecond Min" class='awrc'>0.16</td><td align="right" headers="perSecond Max" class='awrcrb'>0.43</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs grant ast</td><td align="right" class='awrc'>1,776,656</td><td align="right" class='awrc'>2,939.54</td><td align="right" class='awrc'>9.16</td><td align="right" headers="perSecond Average" class='awrclb'>1,469.77</td><td align="right" headers="perSecond StdDev" class='awrc'>476.09</td><td align="right" headers="perSecond Min" class='awrc'>1,133.13</td><td align="right" headers="perSecond Max" class='awrcrb'>1,806.41</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>14,781</td><td align="right" class='awrnc'>24.46</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>12.23</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.04</td><td align="right" headers="perSecond Min" class='awrnc'>11.49</td><td align="right" headers="perSecond Max" class='awrncrb'>12.97</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>498,528</td><td align="right" class='awrc'>824.83</td><td align="right" class='awrc'>2.57</td><td align="right" headers="perSecond Average" class='awrclb'>412.42</td><td align="right" headers="perSecond StdDev" class='awrc'>34.79</td><td align="right" headers="perSecond Min" class='awrc'>387.82</td><td align="right" headers="perSecond Max" class='awrcrb'>437.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>2,819,996</td><td align="right" class='awrc'>4,665.78</td><td align="right" class='awrc'>14.54</td><td align="right" headers="perSecond Average" class='awrclb'>2,332.89</td><td align="right" headers="perSecond StdDev" class='awrc'>202.32</td><td align="right" headers="perSecond Min" class='awrc'>2,189.83</td><td align="right" headers="perSecond Max" class='awrcrb'>2,475.95</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms write request msgs</td><td align="right" class='awrnc'>301</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.25</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.16</td><td align="right" headers="perSecond Min" class='awrnc'>0.13</td><td align="right" headers="perSecond Max" class='awrncrb'>0.37</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs process time(ms)</td><td align="right" class='awrc'>156,982</td><td align="right" class='awrc'>259.73</td><td align="right" class='awrc'>0.81</td><td align="right" headers="perSecond Average" class='awrclb'>129.87</td><td align="right" headers="perSecond StdDev" class='awrc'>27.94</td><td align="right" headers="perSecond Min" class='awrc'>110.11</td><td align="right" headers="perSecond Max" class='awrcrb'>149.62</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs received</td><td align="right" class='awrnc'>4,157,624</td><td align="right" class='awrnc'>6,878.93</td><td align="right" class='awrnc'>21.43</td><td align="right" headers="perSecond Average" class='awrnclb'>3,439.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,122.37</td><td align="right" headers="perSecond Min" class='awrnc'>2,645.83</td><td align="right" headers="perSecond Max" class='awrncrb'>4,233.10</td></tr>
<tr><td scope="row" class='awrc'>gcs new served by master</td><td align="right" class='awrc'>420</td><td align="right" class='awrc'>0.69</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.34</td><td align="right" headers="perSecond Max" class='awrcrb'>0.36</td></tr>
<tr><td scope="row" class='awrnc'>gcs out-of-order msgs</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs pings refused</td><td align="right" class='awrc'>2,833</td><td align="right" class='awrc'>4.69</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.34</td><td align="right" headers="perSecond StdDev" class='awrc'>1.23</td><td align="right" headers="perSecond Min" class='awrc'>1.48</td><td align="right" headers="perSecond Max" class='awrcrb'>3.21</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant immediate</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs actual</td><td align="right" class='awrc'>9,092</td><td align="right" class='awrc'>15.04</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>7.52</td><td align="right" headers="perSecond StdDev" class='awrc'>0.32</td><td align="right" headers="perSecond Min" class='awrc'>7.29</td><td align="right" headers="perSecond Max" class='awrcrb'>7.75</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs logical</td><td align="right" class='awrnc'>1,815,933</td><td align="right" class='awrnc'>3,004.51</td><td align="right" class='awrnc'>9.36</td><td align="right" headers="perSecond Average" class='awrnclb'>1,502.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>482.32</td><td align="right" headers="perSecond Min" class='awrnc'>1,161.21</td><td align="right" headers="perSecond Max" class='awrncrb'>1,843.31</td></tr>
<tr><td scope="row" class='awrc'>gcs stale cr</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.05</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>144</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.11</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>4,181</td><td align="right" class='awrc'>6.92</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>3.46</td><td align="right" headers="perSecond StdDev" class='awrc'>0.60</td><td align="right" headers="perSecond Min" class='awrc'>3.04</td><td align="right" headers="perSecond Max" class='awrcrb'>3.88</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages received</td><td align="right" class='awrc'>49,318</td><td align="right" class='awrc'>81.60</td><td align="right" class='awrc'>0.25</td><td align="right" headers="perSecond Average" class='awrclb'>40.80</td><td align="right" headers="perSecond StdDev" class='awrc'>7.57</td><td align="right" headers="perSecond Min" class='awrc'>35.44</td><td align="right" headers="perSecond Max" class='awrcrb'>46.15</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages sent</td><td align="right" class='awrnc'>49,317</td><td align="right" class='awrnc'>81.60</td><td align="right" class='awrnc'>0.25</td><td align="right" headers="perSecond Average" class='awrnclb'>40.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.57</td><td align="right" headers="perSecond Min" class='awrnc'>35.45</td><td align="right" headers="perSecond Max" class='awrncrb'>46.15</td></tr>
<tr><td scope="row" class='awrc'>messages flow controlled</td><td align="right" class='awrc'>4,903</td><td align="right" class='awrc'>8.11</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>4.06</td><td align="right" headers="perSecond StdDev" class='awrc'>4.07</td><td align="right" headers="perSecond Min" class='awrc'>1.18</td><td align="right" headers="perSecond Max" class='awrcrb'>6.93</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent actual</td><td align="right" class='awrnc'>307,491</td><td align="right" class='awrnc'>508.75</td><td align="right" class='awrnc'>1.59</td><td align="right" headers="perSecond Average" class='awrnclb'>254.38</td><td align="right" headers="perSecond StdDev" class='awrnc'>23.90</td><td align="right" headers="perSecond Min" class='awrnc'>237.48</td><td align="right" headers="perSecond Max" class='awrncrb'>271.28</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent logical</td><td align="right" class='awrc'>356,164</td><td align="right" class='awrc'>589.28</td><td align="right" class='awrc'>1.84</td><td align="right" headers="perSecond Average" class='awrclb'>294.64</td><td align="right" headers="perSecond StdDev" class='awrc'>67.27</td><td align="right" headers="perSecond Min" class='awrc'>247.08</td><td align="right" headers="perSecond Max" class='awrcrb'>342.21</td></tr>
<tr><td scope="row" class='awrnc'>messages received actual</td><td align="right" class='awrnc'>2,202,572</td><td align="right" class='awrnc'>3,644.23</td><td align="right" class='awrnc'>11.35</td><td align="right" headers="perSecond Average" class='awrnclb'>1,822.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>503.04</td><td align="right" headers="perSecond Min" class='awrnc'>1,466.41</td><td align="right" headers="perSecond Max" class='awrncrb'>2,177.82</td></tr>
<tr><td scope="row" class='awrc'>messages received logical</td><td align="right" class='awrc'>4,161,805</td><td align="right" class='awrc'>6,885.85</td><td align="right" class='awrc'>21.45</td><td align="right" headers="perSecond Average" class='awrclb'>3,442.93</td><td align="right" headers="perSecond StdDev" class='awrc'>1,121.77</td><td align="right" headers="perSecond Min" class='awrc'>2,649.71</td><td align="right" headers="perSecond Max" class='awrcrb'>4,236.14</td></tr>
<tr><td scope="row" class='awrnc'>messages sent directly</td><td align="right" class='awrnc'>1,892,586</td><td align="right" class='awrnc'>3,131.34</td><td align="right" class='awrnc'>9.76</td><td align="right" headers="perSecond Average" class='awrnclb'>1,565.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>477.46</td><td align="right" headers="perSecond Min" class='awrnc'>1,228.05</td><td align="right" headers="perSecond Max" class='awrncrb'>1,903.29</td></tr>
<tr><td scope="row" class='awrc'>messages sent indirectly</td><td align="right" class='awrc'>2,201,442</td><td align="right" class='awrc'>3,642.35</td><td align="right" class='awrc'>11.35</td><td align="right" headers="perSecond Average" class='awrclb'>1,821.17</td><td align="right" headers="perSecond StdDev" class='awrc'>640.57</td><td align="right" headers="perSecond Min" class='awrc'>1,368.22</td><td align="right" headers="perSecond Max" class='awrcrb'>2,274.13</td></tr>
<tr><td scope="row" class='awrnc'>messages sent not implicit batched</td><td align="right" class='awrnc'>11,664</td><td align="right" class='awrnc'>19.30</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>9.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.16</td><td align="right" headers="perSecond Min" class='awrnc'>2.46</td><td align="right" headers="perSecond Max" class='awrncrb'>16.84</td></tr>
<tr><td scope="row" class='awrc'>messages sent pbatched</td><td align="right" class='awrc'>1,910,502</td><td align="right" class='awrc'>3,160.98</td><td align="right" class='awrc'>9.85</td><td align="right" headers="perSecond Average" class='awrclb'>1,580.49</td><td align="right" headers="perSecond StdDev" class='awrc'>564.31</td><td align="right" headers="perSecond Min" class='awrc'>1,181.46</td><td align="right" headers="perSecond Max" class='awrcrb'>1,979.52</td></tr>
<tr><td scope="row" class='awrnc'>msgs received kernel queue time (ns)</td><td align="right" class='awrnc'>118,076,282,620</td><td align="right" class='awrnc'>195,361,386.29</td><td align="right" class='awrnc'>608,672.01</td><td align="right" headers="perSecond Average" class='awrnclb'>97,680,693.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>37,230,431.79</td><td align="right" headers="perSecond Min" class='awrnc'>71,354,802.36</td><td align="right" headers="perSecond Max" class='awrncrb'>124,006,583.93</td></tr>
<tr><td scope="row" class='awrc'>msgs received queue time (ms)</td><td align="right" class='awrc'>47,958</td><td align="right" class='awrc'>79.35</td><td align="right" class='awrc'>0.25</td><td align="right" headers="perSecond Average" class='awrclb'>39.67</td><td align="right" headers="perSecond StdDev" class='awrc'>14.69</td><td align="right" headers="perSecond Min" class='awrc'>29.29</td><td align="right" headers="perSecond Max" class='awrcrb'>50.06</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queued</td><td align="right" class='awrnc'>4,161,805</td><td align="right" class='awrnc'>6,885.85</td><td align="right" class='awrnc'>21.45</td><td align="right" headers="perSecond Average" class='awrnclb'>3,442.93</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,121.77</td><td align="right" headers="perSecond Min" class='awrnc'>2,649.71</td><td align="right" headers="perSecond Max" class='awrncrb'>4,236.14</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time (ms)</td><td align="right" class='awrc'>538,370</td><td align="right" class='awrc'>890.75</td><td align="right" class='awrc'>2.78</td><td align="right" headers="perSecond Average" class='awrclb'>445.37</td><td align="right" headers="perSecond StdDev" class='awrc'>156.42</td><td align="right" headers="perSecond Min" class='awrc'>334.77</td><td align="right" headers="perSecond Max" class='awrcrb'>555.98</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrnc'>2,066,537</td><td align="right" class='awrnc'>3,419.15</td><td align="right" class='awrnc'>10.65</td><td align="right" headers="perSecond Average" class='awrnclb'>1,709.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>511.22</td><td align="right" headers="perSecond Min" class='awrnc'>1,348.09</td><td align="right" headers="perSecond Max" class='awrncrb'>2,071.06</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued</td><td align="right" class='awrc'>526,288</td><td align="right" class='awrc'>870.76</td><td align="right" class='awrc'>2.71</td><td align="right" headers="perSecond Average" class='awrclb'>435.38</td><td align="right" headers="perSecond StdDev" class='awrc'>87.51</td><td align="right" headers="perSecond Min" class='awrc'>373.50</td><td align="right" headers="perSecond Max" class='awrcrb'>497.26</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued on ksxp</td><td align="right" class='awrnc'>2,201,852</td><td align="right" class='awrnc'>3,643.03</td><td align="right" class='awrnc'>11.35</td><td align="right" headers="perSecond Average" class='awrnclb'>1,821.51</td><td align="right" headers="perSecond StdDev" class='awrnc'>501.87</td><td align="right" headers="perSecond Min" class='awrnc'>1,466.64</td><td align="right" headers="perSecond Max" class='awrncrb'>2,176.39</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>156,236</td><td align="right" class='awrc'>258.50</td><td align="right" class='awrc'>0.81</td><td align="right" headers="perSecond Average" class='awrclb'>129.25</td><td align="right" headers="perSecond StdDev" class='awrc'>6.97</td><td align="right" headers="perSecond Min" class='awrc'>124.32</td><td align="right" headers="perSecond Max" class='awrcrb'>134.18</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>170,428</td><td align="right" class='awrnc'>281.98</td><td align="right" class='awrnc'>0.88</td><td align="right" headers="perSecond Average" class='awrnclb'>140.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.02</td><td align="right" headers="perSecond Min" class='awrnc'>133.90</td><td align="right" headers="perSecond Max" class='awrncrb'>148.07</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>565,503</td><td align="right" class='awrc'>935.64</td><td align="right" class='awrc'>2.92</td><td align="right" headers="perSecond Average" class='awrclb'>467.82</td><td align="right" headers="perSecond StdDev" class='awrc'>75.63</td><td align="right" headers="perSecond Min" class='awrc'>414.34</td><td align="right" headers="perSecond Max" class='awrcrb'>521.30</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>2,383,869</td><td align="right" class='awrnc'>3,944.19</td><td align="right" class='awrnc'>12.29</td><td align="right" headers="perSecond Average" class='awrnclb'>1,972.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>344.13</td><td align="right" headers="perSecond Min" class='awrnc'>1,728.76</td><td align="right" headers="perSecond Max" class='awrncrb'>2,215.43</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12073"></a>
<h3 class="awr">System Statistics (Absolute Values)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Absolute Values)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Sessions">Sessions</th>
<th class="awrbg" colspan=" 2" id="OpenCursors">Open Cursors</th>
<th class="awrbg" colspan=" 2" id="SessionCachedCursors">Session Cached Cursors</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sessions Begin" class='awrclb'>109</td><td align="right" headers="Sessions End" class='awrc'>91</td><td align="right" headers="OpenCursors Begin" class='awrclb'>252</td><td align="right" headers="OpenCursors End" class='awrc'>176</td><td align="right" headers="SessionCachedCursors Begin" class='awrclb'>13,537</td><td align="right" headers="SessionCachedCursors End" class='awrcrb'>13,552</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sessions Begin" class='awrnclb'>102</td><td align="right" headers="Sessions End" class='awrnc'>90</td><td align="right" headers="OpenCursors Begin" class='awrnclb'>195</td><td align="right" headers="OpenCursors End" class='awrnc'>143</td><td align="right" headers="SessionCachedCursors Begin" class='awrnclb'>13,761</td><td align="right" headers="SessionCachedCursors End" class='awrncrb'>13,863</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>211</td><td align="right" class='awrct'>181</td><td align="right" class='awrclbt'>447</td><td align="right" class='awrct'>319</td><td align="right" class='awrclbt'>27,298</td><td align="right" class='awrcrbt'>27,415</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>106</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnclb'>224</td><td align="right" class='awrnc'>160</td><td align="right" class='awrnclb'>13,649</td><td align="right" class='awrncrb'>13,708</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>5</td><td align="right" class='awrc'>1</td><td align="right" class='awrclb'>40</td><td align="right" class='awrc'>23</td><td align="right" class='awrclb'>158</td><td align="right" class='awrcrb'>220</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="630"></a>
<h2 class="awr">
I/O Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12097">IO Profile (Global)</a></li>
<li class="awr"><a class="awr" href="#12076">IOStat by Function</a></li>
<li class="awr"><a class="awr" href="#12077">IOStat by File Type</a></li>
<li class="awr"><a class="awr" href="#12070">Segment Statistics (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12097"></a>
<h3 class="awr">IO Profile (Global)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IO Profile (Global)"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Read+Write/s</th><th class="awrbg" scope="col">Reads/s</th><th class="awrbg" scope="col">Writes/s</th></tr>
<tr><td class='awrc'>Total Requests</td><td align="right" class='awrc'>7,605.28</td><td align="right" class='awrc'>6,138.98</td><td align="right" class='awrc'>1,466.30</td></tr>
<tr><td class='awrnc'>Database Requests</td><td align="right" class='awrnc'>7,010.97</td><td align="right" class='awrnc'>6,126.94</td><td align="right" class='awrnc'>884.03</td></tr>
<tr><td class='awrc'>Optimized Requests</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo Requests</td><td align="right" class='awrnc'>283.56</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>283.56</td></tr>
<tr><td class='awrc'>Total (MB)</td><td align="right" class='awrc'>58.86</td><td align="right" class='awrc'>49.72</td><td align="right" class='awrc'>9.14</td></tr>
<tr><td class='awrnc'>Database (MB)</td><td align="right" class='awrnc'>55.07</td><td align="right" class='awrnc'>47.87</td><td align="right" class='awrnc'>7.20</td></tr>
<tr><td class='awrc'>Optimized Total (MB)</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo (MB)</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.86</td></tr>
<tr><td class='awrc'>Database (blocks)</td><td align="right" class='awrc'>7,048.50</td><td align="right" class='awrc'>6,127.18</td><td align="right" class='awrc'>921.32</td></tr>
<tr><td class='awrnc'>Via Buffer Cache (blocks)</td><td align="right" class='awrnc'>7,047.99</td><td align="right" class='awrnc'>6,127.18</td><td align="right" class='awrnc'>920.82</td></tr>
<tr><td class='awrc'>Direct (blocks)</td><td align="right" class='awrc'>0.51</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.51</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12076"></a>
<h3 class="awr">IOStat by Function</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<td>&#160;</td><td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>4,586,955</td><td align="right" headers="Requests IOs/s" class='awrc'>7,588.84</td><td align="right" headers="Requests Reads/s" class='awrc'>6,123.34</td><td align="right" headers="Requests Writes/s" class='awrc'>1,465.51</td><td align="right" headers="MB Total" class='awrclb'>35,502</td><td align="right" headers="MB IOMB/s" class='awrc'>58.74</td><td align="right" headers="MB ReadMB/s" class='awrc'>49.60</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>9.13</td><td align="right" class='awrc'>3.9M</td><td align="right" class='awrc'>4.53ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>3,693,887</td><td align="right" headers="Requests IOs/s" class='awrnc'>6,111.32</td><td align="right" headers="Requests Reads/s" class='awrnc'>6,111.32</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>28,864</td><td align="right" headers="MB IOMB/s" class='awrnc'>47.75</td><td align="right" headers="MB ReadMB/s" class='awrnc'>47.75</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>3.7M</td><td align="right" class='awrnc'>4.43ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>534,200</td><td align="right" headers="Requests IOs/s" class='awrc'>883.80</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>883.80</td><td align="right" headers="MB Total" class='awrclb'>4,349</td><td align="right" headers="MB IOMB/s" class='awrc'>7.20</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>7.20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>350,333</td><td align="right" headers="Requests IOs/s" class='awrnc'>579.61</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>579.61</td><td align="right" headers="MB Total" class='awrnclb'>1,150</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.90</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>1.90</td><td align="right" class='awrnc'>171.3K</td><td align="right" class='awrnc'>6.71ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Others</td><td align="right" headers="Requests Total" class='awrclb'>8,445</td><td align="right" headers="Requests IOs/s" class='awrc'>13.97</td><td align="right" headers="Requests Reads/s" class='awrc'>11.88</td><td align="right" headers="Requests Writes/s" class='awrc'>2.09</td><td align="right" headers="MB Total" class='awrclb'>1,138</td><td align="right" headers="MB IOMB/s" class='awrc'>1.88</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.85</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.03</td><td align="right" class='awrc'>5019</td><td align="right" class='awrc'>4.26ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>90</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.15</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.14</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.01</td><td align="right" headers="MB Total" class='awrnclb'>1</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>3.54ms</td></tr>
<tr><td align="right" scope="row" class='awrct'>1</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>2,553,516</td><td align="right" headers="Requests IOs/s" class='awrct'>4,224.64</td><td align="right" headers="Requests Reads/s" class='awrct'>3,421.00</td><td align="right" headers="Requests Writes/s" class='awrct'>803.64</td><td align="right" headers="MB Total" class='awrclbt'>19,609</td><td align="right" headers="MB IOMB/s" class='awrct'>32.44</td><td align="right" headers="MB ReadMB/s" class='awrct'>27.48</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>4.96</td><td align="right" class='awrct'>2.2M</td><td align="right" class='awrct'>4.76ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>2,064,390</td><td align="right" headers="Requests IOs/s" class='awrnc'>3,415.41</td><td align="right" headers="Requests Reads/s" class='awrnc'>3,415.41</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>16,130</td><td align="right" headers="MB IOMB/s" class='awrnc'>26.69</td><td align="right" headers="MB ReadMB/s" class='awrnc'>26.69</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>2.1M</td><td align="right" class='awrnc'>4.68ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>289,578</td><td align="right" headers="Requests IOs/s" class='awrc'>479.09</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>479.09</td><td align="right" headers="MB Total" class='awrclb'>2,350</td><td align="right" headers="MB IOMB/s" class='awrc'>3.89</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>3.89</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>195,577</td><td align="right" headers="Requests IOs/s" class='awrnc'>323.57</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>323.57</td><td align="right" headers="MB Total" class='awrnclb'>641</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.06</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>1.06</td><td align="right" class='awrnc'>95K</td><td align="right" class='awrnc'>6.39ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Others</td><td align="right" headers="Requests Total" class='awrclb'>3,967</td><td align="right" headers="Requests IOs/s" class='awrc'>6.56</td><td align="right" headers="Requests Reads/s" class='awrc'>5.59</td><td align="right" headers="Requests Writes/s" class='awrc'>0.98</td><td align="right" headers="MB Total" class='awrclb'>488</td><td align="right" headers="MB IOMB/s" class='awrc'>0.81</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.79</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.02</td><td align="right" class='awrc'>2351</td><td align="right" class='awrc'>4.44ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>4</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.01</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.01</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>2</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>2,033,439</td><td align="right" headers="Requests IOs/s" class='awrct'>3,364.20</td><td align="right" headers="Requests Reads/s" class='awrct'>2,702.34</td><td align="right" headers="Requests Writes/s" class='awrct'>661.86</td><td align="right" headers="MB Total" class='awrclbt'>15,893</td><td align="right" headers="MB IOMB/s" class='awrct'>26.29</td><td align="right" headers="MB ReadMB/s" class='awrct'>22.13</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>4.17</td><td align="right" class='awrct'>1.7M</td><td align="right" class='awrct'>4.25ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>1,629,497</td><td align="right" headers="Requests IOs/s" class='awrnc'>2,695.91</td><td align="right" headers="Requests Reads/s" class='awrnc'>2,695.91</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>12,734</td><td align="right" headers="MB IOMB/s" class='awrnc'>21.07</td><td align="right" headers="MB ReadMB/s" class='awrnc'>21.07</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>1.6M</td><td align="right" class='awrnc'>4.12ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>244,622</td><td align="right" headers="Requests IOs/s" class='awrc'>404.71</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>404.71</td><td align="right" headers="MB Total" class='awrclb'>1,999</td><td align="right" headers="MB IOMB/s" class='awrc'>3.31</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>3.31</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>4,478</td><td align="right" headers="Requests IOs/s" class='awrnc'>7.41</td><td align="right" headers="Requests Reads/s" class='awrnc'>6.30</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.11</td><td align="right" headers="MB Total" class='awrnclb'>650</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.08</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.06</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.02</td><td align="right" class='awrnc'>2668</td><td align="right" class='awrnc'>4.10ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>154,756</td><td align="right" headers="Requests IOs/s" class='awrc'>256.03</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>256.03</td><td align="right" headers="MB Total" class='awrclb'>509</td><td align="right" headers="MB IOMB/s" class='awrc'>0.84</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.84</td><td align="right" class='awrc'>76.2K</td><td align="right" class='awrc'>7.10ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>86</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.14</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.14</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.01</td><td align="right" headers="MB Total" class='awrnclb'>1</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>3.54ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12077"></a>
<h3 class="awr">IOStat by File Type</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by File Type"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<th class="awrbg" colspan=" 2" id="ServiceTime">Service Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col" id="Small|Read">Small Read</th><th class="awrbg" scope="col" id="Large|Read">Large Read</th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>4,587,333</td><td align="right" headers="Requests IOs/s" class='awrc'>7,589.47</td><td align="right" headers="Requests Reads/s" class='awrc'>6,124.20</td><td align="right" headers="Requests Writes/s" class='awrc'>1,465.27</td><td align="right" headers="MB Total" class='awrclb'>35,505</td><td align="right" headers="MB IOMB/s" class='awrc'>58.74</td><td align="right" headers="MB ReadMB/s" class='awrc'>49.61</td><td align="right" headers="MB WriteMB/s" class='awrc'>9.13</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.93ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1384.99ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>4,228,527</td><td align="right" headers="Requests IOs/s" class='awrnc'>6,995.85</td><td align="right" headers="Requests Reads/s" class='awrnc'>6,112.03</td><td align="right" headers="Requests Writes/s" class='awrnc'>883.82</td><td align="right" headers="MB Total" class='awrnclb'>33,213</td><td align="right" headers="MB IOMB/s" class='awrnc'>54.95</td><td align="right" headers="MB ReadMB/s" class='awrnc'>47.75</td><td align="right" headers="MB WriteMB/s" class='awrnc'>7.20</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.94ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>351,454</td><td align="right" headers="Requests IOs/s" class='awrc'>581.46</td><td align="right" headers="Requests Reads/s" class='awrc'>2.15</td><td align="right" headers="Requests Writes/s" class='awrc'>579.31</td><td align="right" headers="MB Total" class='awrclb'>2,177</td><td align="right" headers="MB IOMB/s" class='awrc'>3.60</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.70</td><td align="right" headers="MB WriteMB/s" class='awrc'>1.90</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>5.08ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1384.99ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>7,149</td><td align="right" headers="Requests IOs/s" class='awrnc'>11.83</td><td align="right" headers="Requests Reads/s" class='awrnc'>9.85</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.98</td><td align="right" headers="MB Total" class='awrnclb'>111</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.18</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.15</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.03</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>2.43ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>203</td><td align="right" headers="Requests IOs/s" class='awrc'>0.34</td><td align="right" headers="Requests Reads/s" class='awrc'>0.17</td><td align="right" headers="Requests Writes/s" class='awrc'>0.17</td><td align="right" headers="MB Total" class='awrclb'>4</td><td align="right" headers="MB IOMB/s" class='awrc'>0.01</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.12ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>1</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,553,725</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,224.99</td><td align="right" headers="Requests Reads/s" class='awrnct'>3,421.51</td><td align="right" headers="Requests Writes/s" class='awrnct'>803.47</td><td align="right" headers="MB Total" class='awrnclbt'>19,610</td><td align="right" headers="MB IOMB/s" class='awrnct'>32.44</td><td align="right" headers="MB ReadMB/s" class='awrnct'>27.48</td><td align="right" headers="MB WriteMB/s" class='awrnct'>4.96</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>4.18ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>1230.91ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>2,354,215</td><td align="right" headers="Requests IOs/s" class='awrc'>3,894.91</td><td align="right" headers="Requests Reads/s" class='awrc'>3,415.85</td><td align="right" headers="Requests Writes/s" class='awrc'>479.06</td><td align="right" headers="MB Total" class='awrclb'>18,481</td><td align="right" headers="MB IOMB/s" class='awrc'>30.58</td><td align="right" headers="MB ReadMB/s" class='awrc'>26.69</td><td align="right" headers="MB WriteMB/s" class='awrc'>3.89</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>4.19ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Log File</td><td align="right" headers="Requests Total" class='awrnclb'>196,027</td><td align="right" headers="Requests IOs/s" class='awrnc'>324.31</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.91</td><td align="right" headers="Requests Writes/s" class='awrnc'>323.40</td><td align="right" headers="MB Total" class='awrnclb'>1,075</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.78</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.72</td><td align="right" headers="MB WriteMB/s" class='awrnc'>1.06</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.20ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>1230.91ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Control File</td><td align="right" headers="Requests Total" class='awrclb'>3,380</td><td align="right" headers="Requests IOs/s" class='awrc'>5.59</td><td align="right" headers="Requests Reads/s" class='awrc'>4.67</td><td align="right" headers="Requests Writes/s" class='awrc'>0.92</td><td align="right" headers="MB Total" class='awrclb'>52</td><td align="right" headers="MB IOMB/s" class='awrc'>0.09</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.07</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>2.58ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Temp File</td><td align="right" headers="Requests Total" class='awrnclb'>103</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.17</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.08</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.09</td><td align="right" headers="MB Total" class='awrnclb'>2</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.12ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>2</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>2,033,608</td><td align="right" headers="Requests IOs/s" class='awrct'>3,364.48</td><td align="right" headers="Requests Reads/s" class='awrct'>2,702.68</td><td align="right" headers="Requests Writes/s" class='awrct'>661.80</td><td align="right" headers="MB Total" class='awrclbt'>15,895</td><td align="right" headers="MB IOMB/s" class='awrct'>26.30</td><td align="right" headers="MB ReadMB/s" class='awrct'>22.13</td><td align="right" headers="MB WriteMB/s" class='awrct'>4.17</td><td align="right" headers="ServiceTime Small|Read" class='awrclbt'>3.62ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrbt'>1498.41ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>1,874,312</td><td align="right" headers="Requests IOs/s" class='awrnc'>3,100.94</td><td align="right" headers="Requests Reads/s" class='awrnc'>2,696.18</td><td align="right" headers="Requests Writes/s" class='awrnc'>404.76</td><td align="right" headers="MB Total" class='awrnclb'>14,732</td><td align="right" headers="MB IOMB/s" class='awrnc'>24.37</td><td align="right" headers="MB ReadMB/s" class='awrnc'>21.06</td><td align="right" headers="MB WriteMB/s" class='awrnc'>3.31</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.62ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>155,427</td><td align="right" headers="Requests IOs/s" class='awrc'>257.14</td><td align="right" headers="Requests Reads/s" class='awrc'>1.24</td><td align="right" headers="Requests Writes/s" class='awrc'>255.91</td><td align="right" headers="MB Total" class='awrclb'>1,102</td><td align="right" headers="MB IOMB/s" class='awrc'>1.82</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.98</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.84</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>6.49ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1498.41ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>3,769</td><td align="right" headers="Requests IOs/s" class='awrnc'>6.24</td><td align="right" headers="Requests Reads/s" class='awrnc'>5.18</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.06</td><td align="right" headers="MB Total" class='awrnclb'>59</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.10</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.08</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.02</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>2.30ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>100</td><td align="right" headers="Requests IOs/s" class='awrc'>0.17</td><td align="right" headers="Requests Reads/s" class='awrc'>0.08</td><td align="right" headers="Requests Writes/s" class='awrc'>0.08</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.12ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12070"></a>
<h3 class="awr">Segment Statistics (Global)</h3>
<ul>
<li class="awr"> % Total shows % of statistic for each segment compared to the global cluster-wide total     (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants) </li>
<li class="awr"> % Capture shows % of statistic for each segment compared to the  total captured     by AWR for all segments during the snapshot interval</li>
<li class="awr">Captured Segments account for	76.9% of Total Logical Reads:	   10,598,320</li>
<li class="awr">Captured Segments account for	99.7% of Total Physical Reads:	     3,703,474</li>
<li class="awr">Captured Segments account for	99.7% of Total Physical Read Requests:	     3,703,331</li>
<li class="awr">Captured Segments account for	99.7% of Total UnOptimized Read Requests:	3,703,331</li>
<li class="awr">Captured Segments account for	 0.0% of Total Optimized  Read Requests:	       1</li>
<li class="awr">Captured Segments account for	 0.0% of Total Direct Physical Reads:		    1</li>
<li class="awr">Captured Segments account for	92.9% of Total Physical Writes: 	556,880</li>
<li class="awr">Captured Segments account for	96.1% of Total Physical Write Requests: 	534,337</li>
<li class="awr">Captured Segments account for	35.8% of Total Direct Physical Writes:		   307</li>
<li class="awr">Captured Segments account for	 0.0% of Total Table Scans:		  5</li>
<li class="awr">Captured Segments account for	84.0% of Total CR Blocks Received:	    10,164</li>
<li class="awr">Captured Segments account for	99.1% of Total Current Blocks Received: 	 27,189</li>
<li class="awr">Captured Segments account for	84.0% of Total CR Blocks Served:	  10,166</li>
<li class="awr">Captured Segments account for	99.0% of Total Current Blocks Served:	       27,204</li>
<li class="awr">Captured Segments account for	99.7% of Total Global Cache Remote Grants:	 1,786,565</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="Segment Statistics (Global). . % Total shows % of statistic for each segment compared to the global cluster-wide total (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants). % Capture shows % of statistic for each segment compared to the total captured by AWR for all segments during the snapshot interval"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%Capture</th></tr>
<tr><td class='awrc'>db block changes</td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>21,328</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.72</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER11</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73449</td><td align="right" class='awrnc'>73456</td><td align="right" class='awrnc'>21,232</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.63</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER6</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73431</td><td align="right" class='awrc'>73435</td><td align="right" class='awrc'>20,992</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.39</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>19,696</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.14</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER32</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73562</td><td align="right" class='awrc'>73567</td><td align="right" class='awrc'>19,680</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.12</td></tr>
<tr><td class='awrnc'>gc cr blocks received</td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>1,038</td><td align="right" class='awrnc'>10.21</td><td align="right" class='awrnc'>35.85</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>532</td><td align="right" class='awrc'>5.23</td><td align="right" class='awrc'>18.38</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>464</td><td align="right" class='awrnc'>4.57</td><td align="right" class='awrnc'>16.03</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER5</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73418</td><td align="right" class='awrc'>73426</td><td align="right" class='awrc'>442</td><td align="right" class='awrc'>4.35</td><td align="right" class='awrc'>15.27</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER11</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73449</td><td align="right" class='awrnc'>73456</td><td align="right" class='awrnc'>419</td><td align="right" class='awrnc'>4.12</td><td align="right" class='awrnc'>14.47</td></tr>
<tr><td class='awrc'>gc cr blocks served</td><td class='awrc'>USER8</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>1,038</td><td align="right" class='awrc'>10.21</td><td align="right" class='awrc'>35.85</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>532</td><td align="right" class='awrnc'>5.23</td><td align="right" class='awrnc'>18.38</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER13</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>464</td><td align="right" class='awrc'>4.56</td><td align="right" class='awrc'>16.03</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER5</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73418</td><td align="right" class='awrnc'>73426</td><td align="right" class='awrnc'>442</td><td align="right" class='awrnc'>4.35</td><td align="right" class='awrnc'>15.27</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER11</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>419</td><td align="right" class='awrc'>4.12</td><td align="right" class='awrc'>14.47</td></tr>
<tr><td class='awrnc'>gc cu blocks received</td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>2,790</td><td align="right" class='awrnc'>10.26</td><td align="right" class='awrnc'>30.87</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,776</td><td align="right" class='awrc'>6.53</td><td align="right" class='awrc'>19.65</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>1,566</td><td align="right" class='awrnc'>5.76</td><td align="right" class='awrnc'>17.33</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER11</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>1,480</td><td align="right" class='awrc'>5.44</td><td align="right" class='awrc'>16.38</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,425</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>15.77</td></tr>
<tr><td class='awrc'>gc cu blocks served</td><td class='awrc'>USER8</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>2,790</td><td align="right" class='awrc'>10.26</td><td align="right" class='awrc'>30.87</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>1,776</td><td align="right" class='awrnc'>6.53</td><td align="right" class='awrnc'>19.65</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>1,566</td><td align="right" class='awrc'>5.76</td><td align="right" class='awrc'>17.33</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER11</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73449</td><td align="right" class='awrnc'>73456</td><td align="right" class='awrnc'>1,480</td><td align="right" class='awrnc'>5.44</td><td align="right" class='awrnc'>16.38</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>1,425</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>15.77</td></tr>
<tr><td class='awrnc'>gc remote grants</td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>100,769</td><td align="right" class='awrnc'>5.64</td><td align="right" class='awrnc'>25.93</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER9</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73439</td><td align="right" class='awrc'>73445</td><td align="right" class='awrc'>100,764</td><td align="right" class='awrc'>5.64</td><td align="right" class='awrc'>25.93</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>62,568</td><td align="right" class='awrnc'>3.50</td><td align="right" class='awrnc'>16.10</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER18</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>62,251</td><td align="right" class='awrc'>3.48</td><td align="right" class='awrc'>16.02</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER6</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73431</td><td align="right" class='awrnc'>73435</td><td align="right" class='awrnc'>62,196</td><td align="right" class='awrnc'>3.48</td><td align="right" class='awrnc'>16.01</td></tr>
<tr><td class='awrc'>itl waits</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74109</td><td align="right" class='awrc'>74109</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>logical reads</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td><td class='awrnc'>USER$</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>549,584</td><td align="right" class='awrnc'>5.19</td><td align="right" class='awrnc'>49.14</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73475</td><td align="right" class='awrc'>73475</td><td align="right" class='awrc'>142,656</td><td align="right" class='awrc'>1.35</td><td align="right" class='awrc'>12.76</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>142,384</td><td align="right" class='awrnc'>1.34</td><td align="right" class='awrnc'>12.73</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER11</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73457</td><td align="right" class='awrc'>73457</td><td align="right" class='awrc'>142,016</td><td align="right" class='awrc'>1.34</td><td align="right" class='awrc'>12.70</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER11</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73449</td><td align="right" class='awrnc'>73456</td><td align="right" class='awrnc'>141,664</td><td align="right" class='awrnc'>1.34</td><td align="right" class='awrnc'>12.67</td></tr>
<tr><td class='awrc'>physical reads</td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>134,255</td><td align="right" class='awrc'>3.63</td><td align="right" class='awrc'>20.97</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER11</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73449</td><td align="right" class='awrnc'>73456</td><td align="right" class='awrnc'>134,090</td><td align="right" class='awrnc'>3.62</td><td align="right" class='awrnc'>20.94</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER24</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73520</td><td align="right" class='awrc'>73529</td><td align="right" class='awrc'>124,038</td><td align="right" class='awrc'>3.35</td><td align="right" class='awrc'>19.37</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>123,926</td><td align="right" class='awrnc'>3.35</td><td align="right" class='awrnc'>19.36</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER19</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73485</td><td align="right" class='awrc'>73498</td><td align="right" class='awrc'>123,900</td><td align="right" class='awrc'>3.35</td><td align="right" class='awrc'>19.35</td></tr>
<tr><td class='awrnc'>physical read requests</td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>134,255</td><td align="right" class='awrnc'>3.63</td><td align="right" class='awrnc'>20.97</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER11</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>134,090</td><td align="right" class='awrc'>3.62</td><td align="right" class='awrc'>20.94</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER24</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73520</td><td align="right" class='awrnc'>73529</td><td align="right" class='awrnc'>124,038</td><td align="right" class='awrnc'>3.35</td><td align="right" class='awrnc'>19.37</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER12</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>123,926</td><td align="right" class='awrc'>3.35</td><td align="right" class='awrc'>19.36</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER19</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73485</td><td align="right" class='awrnc'>73498</td><td align="right" class='awrnc'>123,900</td><td align="right" class='awrnc'>3.35</td><td align="right" class='awrnc'>19.35</td></tr>
<tr><td class='awrc'>physical writes</td><td class='awrc'>USER6</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73431</td><td align="right" class='awrc'>73435</td><td align="right" class='awrc'>21,648</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>21.66</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>21,640</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>21.65</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER15</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>21,622</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>21.63</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>17,692</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>17.70</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>17,352</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>17.36</td></tr>
<tr><td class='awrnc'>physical writes direct</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrnc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_131</td><td class='awrnc'>TABLE PARTITION</td><td align="right" class='awrnc'>74322</td><td align="right" class='awrnc'>74322</td><td align="right" class='awrnc'>105</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>95.45</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes direct</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P312</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>74332</td><td align="right" class='awrc'>74332</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4.55</td></tr>
<tr><td class='awrnc'>physical write requests</td><td class='awrnc'>USER6</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73431</td><td align="right" class='awrnc'>73435</td><td align="right" class='awrnc'>21,464</td><td align="right" class='awrnc'>4.02</td><td align="right" class='awrnc'>21.64</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER12</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>21,451</td><td align="right" class='awrc'>4.01</td><td align="right" class='awrc'>21.63</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER15</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73472</td><td align="right" class='awrnc'>73477</td><td align="right" class='awrnc'>21,405</td><td align="right" class='awrnc'>4.01</td><td align="right" class='awrnc'>21.58</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>17,666</td><td align="right" class='awrc'>3.31</td><td align="right" class='awrc'>17.81</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>17,181</td><td align="right" class='awrnc'>3.22</td><td align="right" class='awrnc'>17.33</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12083"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> Summarized for all instances in the report </li>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="Library Cache Activity. . Summarized for all instances in the report. &quot;Pct Misses&quot; should be very low "><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>523</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>481</td><td align="right" class='awrc'>481</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>DBLINK</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>INDEX</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>QUEUE</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>924</td><td align="right" class='awrc'>2.16</td><td align="right" class='awrc'>1,297,770</td><td align="right" class='awrc'>-0.04</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>86.36</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>86.36</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3,521</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>448</td><td align="right" class='awrnc'>3,093</td><td align="right" class='awrnc'>3,093</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="633"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12074">PGA Aggregate Target Statistics</a></li>
<li class="awr"><a class="awr" href="#12075">Process Memory Summary</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12074"></a>
<h3 class="awr">PGA Aggregate Target Statistics</h3>
<ul>
<li class="awr"> all stats are reported in MegaBytes</li>
</ul>
<table border="0" class="tdiff" summary="PGA Aggregate Target Statistics. . all stats are reported in MegaBytes"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="PGAAggrTarget">PGA Aggr Target</th>
<th class="awrbg" colspan=" 2" id="AutoPGATarget">Auto PGA Target</th>
<th class="awrbg" colspan=" 2" id="PGAMemAlloc">PGA Mem Alloc</th>
<th class="awrbg" colspan=" 2" id="AutoWorkareas">Auto Workareas</th>
<th class="awrbg" colspan=" 2" id="ManualWorkarea">Manual Workarea</th>
<th class="awrbg" colspan=" 2" id="GlobalMemBound">Global Mem Bound</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="PGAAggrTarget Begin" class='awrclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrclb'>1,848.69</td><td align="right" headers="AutoPGATarget End" class='awrc'>1,923.86</td><td align="right" headers="PGAMemAlloc Begin" class='awrclb'>1,370.63</td><td align="right" headers="PGAMemAlloc End" class='awrc'>1,275.33</td><td align="right" headers="AutoWorkareas Begin" class='awrclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrcrb'>321.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="PGAAggrTarget Begin" class='awrnclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrnc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrnclb'>1,892.85</td><td align="right" headers="AutoPGATarget End" class='awrnc'>1,946.14</td><td align="right" headers="PGAMemAlloc Begin" class='awrnclb'>1,281.48</td><td align="right" headers="PGAMemAlloc End" class='awrnc'>1,217.53</td><td align="right" headers="AutoWorkareas Begin" class='awrnclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrnc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrnclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrnc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrnclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrncrb'>321.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12075"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap I#: Instance number  </li>
<li class="awr"> Max Alloc is Maximum PGA allocation size at snapshot time </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by instance, Begin/End snapshot, Alloc (MB) </li>
</ul>
<table border="0" class="tdiff" summary="Process Memory Summary. . B: Begin Snap E: End Snap I#: Instance number . Max Alloc is Maximum PGA allocation size at snapshot time. Hist Max Alloc is the Historical Max Allocation for still-connected processes. ordered by instance, Begin/End snapshot, Alloc (MB) "><tr><th class="awrbg" scope="col">I#</th><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>143.94</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.23</td><td align="right" class='awrc'>7.14</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>34</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>680.05</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.31</td><td align="right" class='awrnc'>8.74</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>128</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>18.57</td><td align="right" class='awrc'>16.79</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>16.13</td><td align="right" class='awrnc'>14.72</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>53</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>858.68</td><td align="right" class='awrc'>31.52</td><td align="right" class='awrc'>9.98</td><td align="right" class='awrc'>16.66</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>333</td><td align="right" class='awrc'>324</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>140.38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.01</td><td align="right" class='awrnc'>7.53</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>603.54</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>9.49</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>110</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>9.60</td><td align="right" class='awrnc'>7.93</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>91</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>9.86</td><td align="right" class='awrc'>8.75</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>34</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>763.37</td><td align="right" class='awrnc'>16.68</td><td align="right" class='awrnc'>10.84</td><td align="right" class='awrnc'>17.75</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>272</td><td align="right" class='awrnc'>263</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>119.69</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.63</td><td align="right" class='awrc'>6.36</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>33</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>621.35</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.14</td><td align="right" class='awrnc'>8.50</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>121</td><td align="right" class='awrnc'>121</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>15.76</td><td align="right" class='awrc'>13.56</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.45</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>102</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>12.73</td><td align="right" class='awrnc'>11.43</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.41</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>45</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>769.53</td><td align="right" class='awrc'>25.00</td><td align="right" class='awrc'>9.16</td><td align="right" class='awrc'>15.72</td><td align="right" class='awrc'>80</td><td align="right" class='awrc'>70</td><td align="right" class='awrc'>310</td><td align="right" class='awrc'>301</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>120.56</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.02</td><td align="right" class='awrnc'>6.43</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>30</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>564.74</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.18</td><td align="right" class='awrc'>9.04</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>9.63</td><td align="right" class='awrnc'>7.49</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>90</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>10.64</td><td align="right" class='awrc'>9.50</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>33</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>705.58</td><td align="right" class='awrnc'>16.99</td><td align="right" class='awrnc'>9.57</td><td align="right" class='awrnc'>16.35</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>271</td><td align="right" class='awrnc'>262</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="638"></a>
<h2 class="awr">
Supplemental Information
</h2>
<ul>
<li class="awr"><a class="awr" href="#12080">init.ora Parameters</a></li>
<li class="awr"><a class="awr" href="#12084">init.ora Multi-valued Parameters</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12080"></a>
<h3 class="awr">init.ora Parameters</h3>
<ul>
<li class="awr"> '*' indicates same value across all instances</li>
</ul>
<table border="0" class="tdiff" summary="This table displays values for init.ora parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>*</td><td class='awrc'>TRUE</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>*</td><td class='awrc'>DB</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>*</td><td class='awrnc'>TRUE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>*</td><td class='awrc'>19.0.0</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>*</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>*</td><td class='awrc'>8192</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>+DATA</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>*</td><td class='awrc'>example.com</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>*</td><td class='awrnc'>p30db</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>*</td><td class='awrc'>+FRA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>*</td><td class='awrnc'>274877906944</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>*</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>*</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>1</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">instance_number</div></td><td class='awrnc'>2</td><td class='awrnc'>2</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>listener_networks</td><td class='awrc'>*</td><td class='awrc'></td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>local_listener</td><td class='awrnc'>1</td><td class='awrnc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">local_listener</div></td><td class='awrc'>2</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>*</td><td class='awrnc'>AMERICAN</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>*</td><td class='awrc'>AMERICA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>*</td><td class='awrnc'>300</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>*</td><td class='awrc'>3371171840</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>*</td><td class='awrnc'>640</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>*</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>*</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>*</td><td class='awrc'>10133438464</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">thread</div></td><td class='awrc'>2</td><td class='awrc'>2</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>undo_tablespace</td><td class='awrnc'>1</td><td class='awrnc'>UNDOTBS1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">undo_tablespace</div></td><td class='awrc'>2</td><td class='awrc'>UNDOTBS2</td><td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12084"></a>
<h3 class="awr">init.ora Multi-valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more one value </li>
<li class="awr"> '*' indicates same value across all instances </li>
<li class="awr"> '(NULL)' indicates that the  parameter value was not set </li>
<li class="awr"> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="init.ora Multi-valued Parameters. . This section only displays parameters that have more one value. '*' indicates same value across all instances. '(NULL)' indicates that the parameter value was not set. A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td class='awrc'>control_files</td><td class='awrc'>*</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'></td></tr>
<tr><td class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>*</td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="1zv2tsmss11cb"></a>1zv2tsmss11cb</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '5';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt P
LS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_
schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DB
MS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEM
A = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-----------------------------------------------------------------------------------------------------------
-----------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
:= TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

   	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ran
dom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed.
 Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrnc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="26cgg6g31fq8p"></a>26cgg6g31fq8p</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '32';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="32m2a739zbzz3"></a>32m2a739zbzz3</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '24';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrnc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m 		  using dual								     on (m.obj# = :objn and							    (:pobjn = 0 or								m.obj# = :pobjn or							   m.obj# in (select obj#								 from tabpart$								    where bo# = :pobjn and obj# = :objn 				       union all								  select obj#								     from tabcompart$								where bo# = :pobjn and o
bj# = :objn					   union all								      select tsp.obj#								 from tabsubpart$ tsp,	tabcompart$ tcp 				     where tsp.pobj# = tcp.obj# 						  and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				     and tsp.obj# = :objn)))				      when matched then 							   update								      set inserts = decode(:reset,  1,	0,  inserts) + :ins,				 updates = decode(:reset,  1,  0,  updates) + :upd,				deletes = decode(:reset,  1,  0,  deletes) + :del,			       flags =	decode(:reset,	1,  0,	flags - bitand(flags,  :flag)) + :flag,        drop_segments = decode(:reset,  1,  0,  d
rop_segments) + :dropseg,	      timestamp = :time 						   when NOT matched then							insert (obj#,  inserts,  updates,  deletes,					       timestamp,  flags,  drop_segments)				    values (:objn,  :ins,  :upd,  :del,  :time,  :flag,  :dropseg)		     where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3kqrku32p6sfn"></a>3kqrku32p6sfn</td><td class='awrc'><pre_sqltext class="awr">MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#,  SYSTIMESTAMP CHGTIME,  ROUND(MAX(S.DELTA_READ_IO_BYTES/S.DELTA_TIME),  3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S,  GV$SQL_PLAN P,  OBJ$ O,  USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQL_ID AND S.SQL_PLAN_HASH_VALUE = P.PLAN_HASH_VALUE AND S.SQL_PLAN_LINE_ID = P.ID AND P.OBJECT_NAME = O.NAME AND (:B4 IS NULL OR O.OBJ# = :B4 ) AND O.OWNER# = U.USER# AND P.OBJECT_OWNER = U.NAME AND O.TYPE# = 2 AND S.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND P.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND S.SQL_PLAN_OPERATION = 'TABLE ACCESS' AND P.OPERATION = 'TABLE ACCESS' AND S.DELTA_TIME &gt; 0 AND S.DELTA_READ_IO_BYTES &gt; 0 AND FROM_TZ(S.SAMPLE_TIME,  :B3 ) &gt; :B2 AND (:B1 = 'ON' OR (:B1 = 'HADOOP_ONLY' AND EXISTS ( SELEC
T NULL FROM SYS.EXTERNAL_TAB$ ET WHERE ET.OBJ# = O.OBJ# AND TYPE$ IN ('ORACLE_HIVE',  'ORACLE_HDFS',  'ORACLE_BIGDATA')))) GROUP BY O.OBJ#) C WHERE NOT EXISTS (SELECT NULL FROM OPTSTAT_USER_PREFS$ PR WHERE PNAME = 'SCAN_RATE' AND C.OBJ# = PR.OBJ# AND (PR.SPARE1 IS NULL OR C.SCANRATE &lt;= TO_NUMBER(PR.VALCHAR))) ) SRC ON (D.OBJ#=SRC.OBJ# AND D.PNAME = 'SCAN_RATE') WHEN MATCHED THEN UPDATE SET D.VALCHAR= TO_CHAR(SRC.SCANRATE),  D.CHGTIME=SRC.CHGTIME,  D.SPARE1=1 WHEN NOT MATCHED THEN INSERT (OBJ#,  PNAME,  VALCHAR,  CHGTIME,  SPARE1) VALUES(SRC.OBJ#,  'SCAN_RATE',  TO_CHAR(SRC.SCANRATE),  SRC.CHGTIME,  1)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5pj6mtazkhmdd"></a>5pj6mtazkhmdd</td><td class='awrnc'><pre_sqltext class="awr">BEGIN /* KSXM:FLUSH DML_MON */	 dbms_stats_internal.gather_scan_rate_by_mmon;	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5q1jyzmr30cf9"></a>5q1jyzmr30cf9</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5yrdyuwb16swu"></a>5yrdyuwb16swu</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '12';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6hgs8vfsdc56c"></a>6hgs8vfsdc56c</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '11';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrnc'><pre_sqltext class="awr">select ind.type#,  ind.property,    base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,	sys.obj$  base_obj  where ind.obj#	    = :oid    and ind.dataobj#	    = :doid    and ind.bo#	   = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="7bd84p4z76t66"></a>7bd84p4z76t66</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '30';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrnc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bqwwfnsg2f57w"></a>bqwwfnsg2f57w</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '9';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt P
LS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_
schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DB
MS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEM
A = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-----------------------------------------------------------------------------------------------------------
-----------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
:= TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

   	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ran
dom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed.
 Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bz8m3my689x30"></a>bz8m3my689x30</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '23';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bzs4fu7kk84h3"></a>bzs4fu7kk84h3</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '21';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="cjr4y9wb6w69d"></a>cjr4y9wb6w69d</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '14';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="d3r94djtpj7r9"></a>d3r94djtpj7r9</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '19';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="df0pz79un9sgm"></a>df0pz79un9sgm</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '8';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		     equality_preds    = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds	 + decode(bitand(:flag, 2), 0, 0, 1),	 nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),    range_preds	 = range_preds	     + decode(bitand(:flag, 8), 0, 0, 1),    like_preds        = like_preds	   + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	      = null_preds	  + decode(bitand(:flag, 32), 0, 0, 1),    flags	     = flags + :flag - bitand(flags, :flag),	 timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrnc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)	values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fs4p95w7yg25b"></a>fs4p95w7yg25b</td><td class='awrc'><pre_sqltext class="awr">select pob.parttype from sys.tabpart$ tp,	sys.partobj$ pob  where tp.bo# = pob.obj# and tp.obj# = :oid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="g679149chxm60"></a>g679149chxm60</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '6';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gx190gu1265d2"></a>gx190gu1265d2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '18';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="43"></a>
<h2 class="awr">
Active Session History(ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9981">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9980">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9984">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9983">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9982">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9979">Top Events</a></li>
<li class="awr"><a class="awr" href="#9985">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9978">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9977">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9981"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1570</td><td align="right" class='awrc'>77.21</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>70.33</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>70.33</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">1570</div></td><td align="right" class='awrnc'><div class="hidden">77.2102161100196463654223968565815324165</div></td>
<td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>4.03</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>4.03</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">1570</div></td><td align="right" class='awrc'><div class="hidden">77.2102161100196463654223968565815324165</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.70</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.82</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>12.82</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>11.30</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>11.30</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9980"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1570</td><td align="right" class='awrc'>77.21</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>76.33</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>70.33</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>12.82</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>12.62</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>11.30</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9984"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>21, 3407</td><td align="right" class='awrc'>2.85</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.70</td>
<td class='awrc'>USER2</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>55/60 [ 91%]</td><td align="right" class='awrc'>4</td></tr>
<tr><td align="right" scope="row" class='awrnc'>21,10782</td><td align="right" class='awrnc'>2.85</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.50</td>
<td class='awrnc'>USER6</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>51/60 [ 84%]</td><td align="right" class='awrnc'>3</td></tr>
<tr><td align="right" scope="row" class='awrc'>23,53862</td><td align="right" class='awrc'>2.85</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.70</td>
<td class='awrc'>USER30</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>55/60 [ 91%]</td><td align="right" class='awrc'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,47220</td><td align="right" class='awrnc'>2.85</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.55</td>
<td class='awrnc'>USER26</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>52/60 [ 86%]</td><td align="right" class='awrnc'>6</td></tr>
<tr><td align="right" scope="row" class='awrc'>142,54857</td><td align="right" class='awrc'>2.85</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.36</td>
<td class='awrc'>USER15</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>48/60 [ 79%]</td><td align="right" class='awrc'>6</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9983"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9982"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>13.16</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>13.16</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9979"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>81.63</td><td align="right" class='awrc'>27.52</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td class='awrnc'>System I/O</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>5.11</td><td align="right" class='awrnc'>1.72</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>4.42</td><td align="right" class='awrc'>1.49</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td class='awrnc'>Cluster</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>4.03</td><td align="right" class='awrnc'>1.36</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>2.16</td><td align="right" class='awrc'>0.73</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9985"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>81.63</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24977969&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.05</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>5.11</td><td align="right" class='awrnc'>&quot;2&quot;,&quot;12&quot;,&quot;2&quot;</td><td align="right" class='awrnc'>1.42</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9978"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73458</td><td align="right" class='awrc'>2.85</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.70</td>
<td class='awrc'>USER13.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73470</td><td align="right" class='awrnc'>2.85</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.80</td>
<td class='awrnc'>USER14.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73486</td><td align="right" class='awrc'>2.85</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.65</td>
<td class='awrc'>USER17.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73481</td><td align="right" class='awrnc'>2.80</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.70</td>
<td class='awrnc'>USER16.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73514</td><td align="right" class='awrc'>2.80</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.50</td>
<td class='awrc'>USER22.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9977"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>11:21:15   (3.8 min)</td><td align="right" class='awrc'>826</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>668</td><td align="right" class='awrc'>32.81</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">11:21:15   (3.8 min)</div></td><td align="right" class='awrnc'><div class="hidden">826</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>3.19</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">11:21:15   (3.8 min)</div></td><td align="right" class='awrc'><div class="hidden">826</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>1.96</td></tr>
<tr><td align="right" class='awrnc'>11:25:00   (5.0 min)</td><td align="right" class='awrnc'>1,048</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>877</td><td align="right" class='awrnc'>43.07</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">11:25:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">1048</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>2.75</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">11:25:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">1048</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>2.50</td></tr>
<tr><td align="right" class='awrc'>11:30:00   (1.3 min)</td><td align="right" class='awrc'>162</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>117</td><td align="right" class='awrc'>5.75</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">11:30:00   (1.3 min)</div></td><td align="right" class='awrnc'><div class="hidden">162</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.64</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">11:30:00   (1.3 min)</div></td><td align="right" class='awrc'><div class="hidden">162</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.64</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99994"></a>
<h2>ADDM Task ADDM:3393773525_142</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_142&apos;
	  ------------------------------------------

Analysis Period
---------------
AWR snapshot range from 141 to 142.
Time period starts at 10-FEB-20 11.21.15 AM
Time period ends at 10-FEB-20 11.31.20 AM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 18247 seconds.
The average number of active sessions was 30.16.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     29.8 | 98.81	  2
2  &quot;User I/O&quot; wait Class		       26.97 | 89.42	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.67 | 15.49	      5
4  Global Cache Messaging		     1.62 | 5.39	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 29.85 active sessions, 98.81% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  59.49	    ADDM:3393773525_1_142
    2	    p30db2  40.51	    ADDM:3393773525_2_142

   Recommendation 1: SQL Tuning
   Estimated benefit is 25.56 active sessions, 84.75% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 1095430 times and
      had an average elapsed time of 0.013 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 4.24 active sessions, 14.06% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 193256 times and
      had an average elapsed time of 0.014 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 27.01 active sessions, 89.42% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  59.01	    ADDM:3393773525_1_142
    2	    p30db2  40.99	    ADDM:3393773525_2_142

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.68 active sessions, 15.49% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  79.86	    ADDM:3393773525_1_142
    2	    p30db2  20.14	    ADDM:3393773525_2_142

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 3.12% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER13.CF1&quot; with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 108781
      physical reads, 15364 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .94 active sessions, 3.12% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER14.CF1&quot; with
      object ID 73470.
      Related Object
	 Database object with ID 73470.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 134255
      physical reads, 17352 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .94 active sessions, 3.12% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER17.CF1&quot; with
      object ID 73486.
      Related Object
	 Database object with ID 73486.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109233
      physical reads, 15127 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 3.07% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER16.CF1&quot; with
      object ID 73481.
      Related Object
	 Database object with ID 73481.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114172
      physical reads, 17692 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 3.07% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER22.CF1&quot; with
      object ID 73514.
      Related Object
	 Database object with ID 73514.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 109399
      physical reads, 15155 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 26.97 active sessions, 89.42% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.63 active sessions, 5.39% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  62.26	    ADDM:3393773525_1_142
    2	    p30db2  37.74	    ADDM:3393773525_2_142

   Recommendation 1: Application Analysis
   Estimated benefit is 1.62 active sessions, 5.39% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 85% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.66 active sessions, 5.5% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    1	    p30db1  mcracpoc1.example.com  17.92	    59.33
    2	    p30db2  mcracpoc2.example.com  12.29	    40.67

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr_rac.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
NOTIFY  : 2020.02.10-11:31:38 : Compressing file: "awr.html".
NOTIFY  : 2020.02.10-11:31:38 : Compressing file: "awr_rac.html".
