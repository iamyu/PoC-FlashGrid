








































PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.



PL/SQL procedure successfully completed.PL/SQL procedure successfully completed.




PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.



PL/SQL procedure successfully completed.

PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


SQL*Plus: Release 19.0.0.0.0 - Production on Mon Feb 10 15:54:23 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


SQL*Plus: Release 19.0.0.0.0 - Production on Mon Feb 10 15:54:23 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

Last Successful login time: Mon Feb 10 2020 15:54:18 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  Last Successful login time: Mon Feb 10 2020 15:54:23 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Type Specified: text

Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: html


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number

Listing the last day's Completed Snapshots


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.



Listing the last day's Completed Snapshots
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		124  10 Feb 2020 00:00	  1
				125  10 Feb 2020 01:00	  1
				126  10 Feb 2020 02:00	  1
				127  10 Feb 2020 03:00	  1
				128  10 Feb 2020 04:00	  1
				129  10 Feb 2020 05:00	  1
				130  10 Feb 2020 06:00	  1
				131  10 Feb 2020 07:00	  1
				132  10 Feb 2020 08:00	  1
				133  10 Feb 2020 09:00	  1
				134  10 Feb 2020 09:08	  1
				135  10 Feb 2020 09:18	  1
				136  10 Feb 2020 10:00	  1
				137  10 Feb 2020 10:47	  1
				138  10 Feb 2020 10:58	  1
				139  10 Feb 2020 11:09	  1
				140  10 Feb 2020 11:19	  1
				141  10 Feb 2020 11:21	  1
				142  10 Feb 2020 11:31	  1
				143  10 Feb 2020 13:00	  1
				144  10 Feb 2020 14:00	  1
				145  10 Feb 2020 14:19	  1
				146  10 Feb 2020 14:29	  1
				147  10 Feb 2020 14:33	  1
				148  10 Feb 2020 14:41	  1
				149  10 Feb 2020 14:47	  1
				150  10 Feb 2020 14:57	  1
				152  10 Feb 2020 15:05	  1
				153  10 Feb 2020 15:15	  1
				154  10 Feb 2020 15:24	  1
				155  10 Feb 2020 15:34	  1
				156  10 Feb 2020 15:44	  1
				157  10 Feb 2020 15:54	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 156

End   Snapshot Id specified: 157

Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		124  10 Feb 2020 00:00	  1
				125  10 Feb 2020 01:00	  1
				126  10 Feb 2020 02:00	  1
				127  10 Feb 2020 03:00	  1
				128  10 Feb 2020 04:00	  1
				129  10 Feb 2020 05:00	  1
				130  10 Feb 2020 06:00	  1
				131  10 Feb 2020 07:00	  1
				132  10 Feb 2020 08:00	  1
				133  10 Feb 2020 09:00	  1
				134  10 Feb 2020 09:08	  1
				135  10 Feb 2020 09:18	  1
				136  10 Feb 2020 10:00	  1
				137  10 Feb 2020 10:47	  1
				138  10 Feb 2020 10:58	  1
				139  10 Feb 2020 11:09	  1
				140  10 Feb 2020 11:19	  1
				141  10 Feb 2020 11:21	  1
				142  10 Feb 2020 11:31	  1
				143  10 Feb 2020 13:00	  1
				144  10 Feb 2020 14:00	  1
				145  10 Feb 2020 14:19	  1
				146  10 Feb 2020 14:29	  1
				147  10 Feb 2020 14:33	  1
				148  10 Feb 2020 14:41	  1
				149  10 Feb 2020 14:47	  1
				150  10 Feb 2020 14:57	  1
				152  10 Feb 2020 15:05	  1
				153  10 Feb 2020 15:15	  1
				154  10 Feb 2020 15:24	  1
				155  10 Feb 2020 15:34	  1
				156  10 Feb 2020 15:44	  1
				157  10 Feb 2020 15:54	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 156

End   Snapshot Id specified: 157




Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_156_157.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_156_157.html.	To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.txt

Using the report name awr.html

<html lang="en"><head><title>AWR Report for DB: P30DB, Inst: p30db1, Snaps: 156-157</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY report for

</h1>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">DB Name</th><th class="awrbg" scope="col">DB Id</th><th class="awrbg" scope="col">Unique Name</th><th class="awrbg" scope="col">Role</th><th class="awrbg" scope="col">Edition</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">RAC</th><th class="awrbg" scope="col">CDB</th></tr>
<tr><td scope="row" class='awrnc'>P30DB</td><td align="right" class='awrnc'>3393773525</td><td class='awrnc'>p30db</td><td class='awrnc'>PRIMARY</td><td class='awrnc'>EE</td><td class='awrnc'>19.0.0.0.0</td><td class='awrnc'>YES</td><td class='awrnc'>NO</td></tr>
</table>
<p />
<p />
<table border="0" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Inst Num</th><th class="awrbg" scope="col">Startup Time</th></tr>
<tr><td scope="row" class='awrnc'>p30db1</td><td align="right" class='awrnc'>1</td><td class='awrnc'>10-Feb-20 14:15</td></tr>
</table>
<p />
<p />
<table border="0" width="600" class="tdiff" summary="This table displays host information">
<tr><th class="awrbg" scope="col">Host Name</th><th class="awrbg" scope="col">Platform</th><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Memory (GB)</th></tr>
<tr><td scope="row" class='awrnc'>mcracpoc1.example.com</td><td class='awrnc'>Linux x86 64-bit</td><td align="right" class='awrnc'>   8</td><td align="right" class='awrnc'>   4</td><td align="right" class='awrnc'>	1</td><td align="right" class='awrnc'>	 31.40</td></tr>
</table>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays snapshot information">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Snap Id</th><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Sessions</th><th class="awrbg" scope="col">Cursors/Session</th><th class="awrbg" scope="col">Instances</th></tr>
<tr><td scope="row" class='awrnc'>Begin Snap:</td><td align="right" class='awrnc'>156</td><td align="center" class='awrnc'>10-Feb-20 15:44:14</td><td align="right" class='awrnc'>111</td><td align="right" class='awrnc'>	1.8</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>End Snap:</td><td align="right" class='awrc'>157</td><td align="center" class='awrc'>10-Feb-20 15:54:18</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>	1.3</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>Elapsed:</td><td class='awrnc'>&#160;</td><td align="center" class='awrnc'>		   10.08 (mins)</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB Time:</td><td class='awrc'>&#160;</td><td align="center" class='awrc'>	       199.49 (mins)</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>19.82</td><td align="right" class='awrc'>99.51</td><td scope="row" class='awrc'>ADDM:3393773525_1_157</td><td class='awrc'>10-Feb-20 15:44</td><td class='awrc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>19.82</td><td align="right" class='awrnc'>90.02</td><td scope="row" class='awrnc'>ADDM:3393773525_1_157</td><td class='awrnc'>10-Feb-20 15:44</td><td class='awrnc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>19.82</td><td align="right" class='awrc'>23.46</td><td scope="row" class='awrc'>ADDM:3393773525_1_157</td><td class='awrc'>10-Feb-20 15:44</td><td class='awrc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>19.82</td><td align="right" class='awrnc'>5.13</td><td scope="row" class='awrnc'>ADDM:3393773525_1_157</td><td class='awrnc'>10-Feb-20 15:44</td><td class='awrnc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrc'>Undersized SGA</td><td align="right" class='awrc'>19.82</td><td align="right" class='awrc'>2.81</td><td scope="row" class='awrc'>ADDM:3393773525_1_157</td><td class='awrc'>10-Feb-20 15:44</td><td class='awrc'>10-Feb-20 15:54</td></tr>
</table><p />
<p />Load Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays load profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th><th class="awrbg" scope="col">Per Exec</th><th class="awrbg" scope="col">Per Call</th></tr>
<tr><td scope="row" class='awrc'>DB Time(s):</td><td align="right" class='awrc'>	      19.8</td><td align="right" class='awrc'>		     0.1</td><td align="right" class='awrc'>	  0.02</td><td align="right" class='awrc'>     20.18</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU(s):</td><td align="right" class='awrnc'>		1.4</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'>      0.00</td><td align="right" class='awrnc'>	    1.39</td></tr>
<tr><td scope="row" class='awrc'>Background CPU(s):</td><td align="right" class='awrc'> 	      0.8</td><td align="right" class='awrc'>		    0.0</td><td align="right" class='awrc'>	 0.00</td><td align="right" class='awrc'>      0.00</td></tr>
<tr><td scope="row" class='awrnc'>Redo size (bytes):</td><td align="right" class='awrnc'>	  501,347.9</td><td align="right" class='awrnc'>	   2,789.1</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logical read (blocks):</td><td align="right" class='awrc'>	      9,278.8</td><td align="right" class='awrc'>	       51.6</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Block changes:</td><td align="right" class='awrnc'>		1,479.0</td><td align="right" class='awrnc'>		   8.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Physical read (blocks):</td><td align="right" class='awrc'>	       3,484.5</td><td align="right" class='awrc'>		19.4</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Physical write (blocks):</td><td align="right" class='awrnc'> 	    513.6</td><td align="right" class='awrnc'>		     2.9</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO requests:</td><td align="right" class='awrc'>		 3,483.5</td><td align="right" class='awrc'>		  19.4</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO requests:</td><td align="right" class='awrnc'>	      494.1</td><td align="right" class='awrnc'>	       2.8</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO (MB):</td><td align="right" class='awrc'>		27.2</td><td align="right" class='awrc'>	       0.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO (MB):</td><td align="right" class='awrnc'>		    4.0</td><td align="right" class='awrnc'>		   0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM scan rows:</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Session Logical Read IM:</td><td align="right" class='awrnc'> 	      0.0</td><td align="right" class='awrnc'>		     0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks received:</td><td align="right" class='awrc'>		24.9</td><td align="right" class='awrc'>	       0.1</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks served:</td><td align="right" class='awrnc'>		32.6</td><td align="right" class='awrnc'>		0.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>User calls:</td><td align="right" class='awrc'>	       1.0</td><td align="right" class='awrc'>		     0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parses (SQL):</td><td align="right" class='awrnc'>		   3.1</td><td align="right" class='awrnc'>		  0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hard parses (SQL):</td><td align="right" class='awrc'> 	      0.1</td><td align="right" class='awrc'>		    0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL Work Area (MB):</td><td align="right" class='awrnc'>		 0.3</td><td align="right" class='awrnc'>		0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logons:</td><td align="right" class='awrc'>		   0.2</td><td align="right" class='awrc'>		 0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>User logons:</td><td align="right" class='awrnc'>		  0.0</td><td align="right" class='awrnc'>		 0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Executes (SQL):</td><td align="right" class='awrc'>	       1,201.6</td><td align="right" class='awrc'>		 6.7</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Rollbacks:</td><td align="right" class='awrnc'>		0.0</td><td align="right" class='awrnc'>	       0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Transactions:</td><td align="right" class='awrc'>	       179.8</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
Instance Efficiency Percentages (Target 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays instance efficiency percentages">
<tr><td scope="row" class='awrc'>Buffer Nowait %:</td><td align="right" class='awrc'>		100.00</td><td class='awrc'>Redo NoWait %:</td><td align="right" class='awrc'>		 100.00</td></tr>
<tr><td scope="row" class='awrnc'>Buffer  Hit	%:</td><td align="right" class='awrnc'> 	   62.44</td><td class='awrnc'>In-memory Sort %:</td><td align="right" class='awrnc'>		100.00</td></tr>
<tr><td scope="row" class='awrc'>Library Hit   %:</td><td align="right" class='awrc'>		100.06</td><td class='awrc'>Soft Parse %:</td><td align="right" class='awrc'>		 98.18</td></tr>
<tr><td scope="row" class='awrnc'>Execute to Parse %:</td><td align="right" class='awrnc'>	      99.74</td><td class='awrnc'>Latch Hit %:</td><td align="right" class='awrnc'>	       99.98</td></tr>
<tr><td scope="row" class='awrc'>Parse CPU to Parse Elapsd %:</td><td align="right" class='awrc'>	     76.92</td><td class='awrc'>% Non-Parse CPU:</td><td align="right" class='awrc'>		99.99</td></tr>
<tr><td scope="row" class='awrnc'>Flash Cache Hit %:</td><td align="right" class='awrnc'>	      0.00</td></tr>
</table>

<p />Top 10 Foreground Events by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top 10 wait events by total wait time"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Wait Class</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2,102,388</td><td align="right" class='awrc'>10.8K</td><td align="right" class='awrc'>5.13ms</td><td align="right" class='awrc'>90.0</td><td class='awrc'>User I/O</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>824.7</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>6.9</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>794,691</td><td align="right" class='awrc'>432.8</td><td align="right" class='awrc'>544.66us</td><td align="right" class='awrc'>3.6</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>143,876</td><td align="right" class='awrnc'>79.7</td><td align="right" class='awrnc'>553.67us</td><td align="right" class='awrnc'>.7</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>75,559</td><td align="right" class='awrc'>76.9</td><td align="right" class='awrc'>1.02ms</td><td align="right" class='awrc'>.6</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>15,300</td><td align="right" class='awrnc'>18.8</td><td align="right" class='awrnc'>1.23ms</td><td align="right" class='awrnc'>.2</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>13,569</td><td align="right" class='awrc'>12.1</td><td align="right" class='awrc'>891.60us</td><td align="right" class='awrc'>.1</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>10,641</td><td align="right" class='awrnc'>7.5</td><td align="right" class='awrnc'>707.07us</td><td align="right" class='awrnc'>.1</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>2,204</td><td align="right" class='awrc'>2.8</td><td align="right" class='awrc'>1.25ms</td><td align="right" class='awrc'>.0</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>1,726</td><td align="right" class='awrnc'>1.4</td><td align="right" class='awrnc'>784.91us</td><td align="right" class='awrnc'>.0</td><td class='awrnc'>Cluster</td></tr>
</table><p />
<p />Wait Classes by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays wait class statistics ordered by total wait time"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait Time</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>2,125,850</td><td align="right" class='awrc'>10,783</td><td align="right" class='awrc'>5.07ms</td><td align="right" class='awrc'>90.1</td><td align="right" class='awrc'>17.8</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>825</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>6.9</td><td align="right" class='awrnc'>1.4</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>1,058,580</td><td align="right" class='awrc'>635</td><td align="right" class='awrc'>600.08us</td><td align="right" class='awrc'>5.3</td><td align="right" class='awrc'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>134,310</td><td align="right" class='awrnc'>548</td><td align="right" class='awrnc'>4.08ms</td><td align="right" class='awrnc'>4.6</td><td align="right" class='awrnc'>0.9</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>72,520</td><td align="right" class='awrc'>87</td><td align="right" class='awrc'>1.21ms</td><td align="right" class='awrc'>.7</td><td align="right" class='awrc'>0.1</td></tr>
<tr><td scope="row" class='awrnc'>Concurrency</td><td align="right" class='awrnc'>1,830</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>117.98us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Application</td><td align="right" class='awrc'>86</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>874.83us</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>826</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>75.01us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.00ms</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>385.67us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
</table><p />

Host CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays system load statistics">
<tr><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Load Average Begin</th><th class="awrbg" scope="col">Load Average End</th><th class="awrbg" scope="col">%User</th><th class="awrbg" scope="col">%System</th><th class="awrbg" scope="col">%WIO</th><th class="awrbg" scope="col">%Idle</th></tr>
<tr><td align="right" class='awrc'>    8</td><td align="right" class='awrc'>	4</td><td align="right" class='awrc'>	 1</td><td align="right" class='awrc'>	 9.58</td><td align="right" class='awrc'>  13.17</td><td align="right" class='awrc'>  15.6</td><td align="right" class='awrc'>	20.5</td><td align="right" class='awrc'>  46.0</td><td align="right" class='awrc'>  54.6</td></tr>
</table>
<p />
Instance CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays CPU usage and wait statistics">
<tr><th class="awrbg" scope="col">%Total CPU</th><th class="awrbg" scope="col">%Busy CPU</th><th class="awrbg" scope="col">%DB time waiting for CPU (Resource Manager)</th></tr>
<tr><td align="right" class='awrc'>	 28.7</td><td align="right" class='awrc'>      63.3</td><td align="right" class='awrc'>       0.0</td></tr>
</table>
<p />IO Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays IO profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Read+Write Per Second</th><th class="awrbg" scope="col">Read per Second</th><th class="awrbg" scope="col">Write Per Second</th></tr>
<tr><td scope="row" class='awrc'>Total Requests:</td><td align="right" class='awrc'>	       4,154.4</td><td align="right" class='awrc'>	     3,489.6</td><td align="right" class='awrc'>	     664.7</td></tr>
<tr><td scope="row" class='awrnc'>Database Requests:</td><td align="right" class='awrnc'>	    3,977.6</td><td align="right" class='awrnc'>	   3,483.5</td><td align="right" class='awrnc'> 	    494.1</td></tr>
<tr><td scope="row" class='awrc'>Optimized Requests:</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td><td align="right" class='awrc'>		   0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo Requests:</td><td align="right" class='awrnc'>		  170.3</td><td align="right" class='awrnc'>		   1.2</td><td align="right" class='awrnc'>		169.2</td></tr>
<tr><td scope="row" class='awrc'>Total (MB):</td><td align="right" class='awrc'>	      32.9</td><td align="right" class='awrc'>		    28.3</td><td align="right" class='awrc'>		   4.6</td></tr>
<tr><td scope="row" class='awrnc'>Database (MB):</td><td align="right" class='awrnc'>		   31.2</td><td align="right" class='awrnc'>		  27.2</td><td align="right" class='awrnc'>		  4.0</td></tr>
<tr><td scope="row" class='awrc'>Optimized Total (MB):</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo (MB):</td><td align="right" class='awrnc'>		1.5</td><td align="right" class='awrnc'>	       1.0</td><td align="right" class='awrnc'> 	      0.5</td></tr>
<tr><td scope="row" class='awrc'>Database (blocks):</td><td align="right" class='awrc'> 	  3,998.1</td><td align="right" class='awrc'>		3,484.5</td><td align="right" class='awrc'>		513.6</td></tr>
<tr><td scope="row" class='awrnc'>Via Buffer Cache (blocks):</td><td align="right" class='awrnc'>	    3,996.9</td><td align="right" class='awrnc'>	   3,484.5</td><td align="right" class='awrnc'> 	    512.4</td></tr>
<tr><td scope="row" class='awrc'>Direct (blocks):</td><td align="right" class='awrc'>		    1.2</td><td align="right" class='awrc'>		  0.1</td><td align="right" class='awrc'>		1.1</td></tr>
</table>
<p />
Memory Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays memory statistics">
<tr><th class="awrbg" scope="col"> </th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Host Mem (MB):</td><td align="right" class='awrc'>    32,156.0</td><td align="right" class='awrc'>    32,156.0</td></tr>
<tr><td scope="row" class='awrnc'>SGA use (MB):</td><td align="right" class='awrnc'>	 9,664.0</td><td align="right" class='awrnc'>	  9,664.0</td></tr>
<tr><td scope="row" class='awrc'>PGA use (MB):</td><td align="right" class='awrc'>     1,341.4</td><td align="right" class='awrc'>     1,223.4</td></tr>
<tr><td scope="row" class='awrc'>% Host Mem used for SGA+PGA:</td><td align="right" class='awrc'>   34.23</td><td align="right" class='awrc'>	33.86</td></tr>
</table>
<p />
Cache Sizes
<p />
<table border="0" width="600" class="tdiff" summary="This table displays cache sizes and other statistics for
		    different types of cache">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Buffer Cache:</td><td align="right" class='awrnc'>	 8,000M</td><td align="right" class='awrnc'>	 8,000M</td><td class='awrnc'>Std Block Size:</td><td align="right" class='awrnc'>	   8K</td></tr>
<tr><td scope="row" class='awrc'>Shared Pool Size:</td><td align="right" class='awrc'>	   1,077M</td><td align="right" class='awrc'>	  1,074M</td><td class='awrc'>Log Buffer:</td><td align="right" class='awrc'>	 20,612K</td></tr>
<tr><td scope="row" class='awrnc'>In-Memory Area:</td><td align="right" class='awrnc'>	       0M</td><td align="right" class='awrnc'>	       0M</td></tr>
</table>
<p />
Shared Pool Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays shared pool statistics">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Memory Usage %:</td><td align="right" class='awrc'>		91.38</td><td align="right" class='awrc'>	     90.72</td></tr>
<tr><td scope="row" class='awrnc'>% SQL with executions&gt;1:</td><td align="right" class='awrnc'>	      86.76</td><td align="right" class='awrnc'>	    82.66</td></tr>
<tr><td scope="row" class='awrc'>% Memory for SQL w/exec&gt;1:</td><td align="right" class='awrc'>	      88.54</td><td align="right" class='awrc'> 	   72.54</td></tr>
</table>
<p />
<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#21">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#22">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#23">Instance Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#24">IO Stats</a></li>
<li class="awr"><a class="awr" href="#25">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#26">Advisory Statistics</a></li>
<li class="awr"><a class="awr" href="#27">Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#28">Undo Statistics</a></li>
<li class="awr"><a class="awr" href="#29">Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#30">Segment Statistics</a></li>
<li class="awr"><a class="awr" href="#31">Dictionary Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#32">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#33">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#39">Replication Statistics (GoldenGate, XStream)</a></li>
<li class="awr"><a class="awr" href="#34">Advanced Queuing</a></li>
<li class="awr"><a class="awr" href="#6700">Resource Limit Statistics</a></li>
<li class="awr"><a class="awr" href="#37">Shared Server Statistics</a></li>
<li class="awr"><a class="awr" href="#36">Initialization Parameters</a></li>
<li class="awr"><a class="awr" href="#42">Active Session History (ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99995">ADDM Reports</a></li>
</ul>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<p />
<a class="awr" name="21"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1500">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#1600">Operating System Statistics</a></li>
<li class="awr"><a class="awr" href="#1610">Operating System Statistics - Detail</a></li>
<li class="awr"><a class="awr" href="#210">Foreground Wait Class</a></li>
<li class="awr"><a class="awr" href="#100">Foreground Wait Events</a></li>
<li class="awr"><a class="awr" href="#300">Background Wait Events</a></li>
<li class="awr"><a class="awr" href="#7400">Wait Event Histogram</a></li>
<li class="awr"><a class="awr" href="#7405">Wait Event Histogram (up to 64 us)</a></li>
<li class="awr"><a class="awr" href="#7410">Wait Event Histogram (up to 32 ms)</a></li>
<li class="awr"><a class="awr" href="#7420">Wait Event Histogram (up to 2 sec)</a></li>
<li class="awr"><a class="awr" href="#7430">Wait Event Histogram (up to 2 min)</a></li>
<li class="awr"><a class="awr" href="#7440">Wait Event Histogram (up to 1 hr)</a></li>
<li class="awr"><a class="awr" href="#5800">Service Statistics</a></li>
<li class="awr"><a class="awr" href="#5820">Service Wait Class Stats</a></li>
<li class="awr"><a class="awr" href="#5840">Top 10 Channel Waits</a></li>
<li class="awr"><a class="awr" href="#2310">Top Process Types by Wait Class</a></li>
<li class="awr"><a class="awr" href="#2320">Top Process Types by CPU Used</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1500"></a>
<h3 class="awr">Time Model Statistics</h3>
<ul>
<li class="awr">DB Time represents total time in user calls</li>
<li class="awr">DB CPU represents CPU time of foreground processes</li>
<li class="awr">Total CPU Time represents foreground and background processes</li>
<li class="awr">Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic</li>
<li class="awr">Ordered by % of DB time in descending order, followed by Statistic Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays different time model statistics. For each statistic, time and % of DB time are displayed"><tr><th class="awrbg" scope="col">Statistic Name</th><th class="awrbg" scope="col">Time (s)</th><th class="awrbg" scope="col">% of  DB Time</th><th class="awrbg" scope="col">% of Total CPU Time</th></tr>
<tr><td scope="row" class='awrc'>sql execute elapsed time</td><td align="right" class='awrc'>11,968.84</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>824.68</td><td align="right" class='awrnc'>6.89</td><td align="right" class='awrnc'>64.34</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL execution elapsed time</td><td align="right" class='awrc'>33.73</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hard parse (sharing criteria) elapsed time</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hard parse elapsed time</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hard parse (bind mismatch) elapsed time</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>connection management call elapsed time</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL compilation elapsed time</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>repeated bind elapsed time</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>11,969.36</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>background elapsed time</td><td align="right" class='awrnc'>913.17</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>background cpu time</td><td align="right" class='awrc'>457.06</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>35.66</td></tr>
<tr><td scope="row" class='awrnc'>total CPU time</td><td align="right" class='awrnc'>1,281.74</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1600"></a>
<h3 class="awr">Operating System Statistics</h3>
<ul>
<li class="awr"> *TIME statistic values are diffed.	 All others display actual values.  End Value is displayed if different </li>
<li class="awr"> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays operating systems statistics. For each statistic, actual value is displayed. If the end value is different, it is also displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>FREE_MEMORY_BYTES</td><td align="right" class='awrc'>3,932,635,136</td><td align="right" class='awrc'>4,304,994,304</td></tr>
<tr><td scope="row" class='awrnc'>INACTIVE_MEMORY_BYTES</td><td align="right" class='awrnc'>2,078,724,096</td><td align="right" class='awrnc'>2,078,564,352</td></tr>
<tr><td scope="row" class='awrc'>BUSY_TIME</td><td align="right" class='awrc'>202,431</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IDLE_TIME</td><td align="right" class='awrnc'>243,704</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IOWAIT_TIME</td><td align="right" class='awrc'>205,195</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SYS_TIME</td><td align="right" class='awrnc'>91,590</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>USER_TIME</td><td align="right" class='awrc'>69,671</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LOAD</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>13</td></tr>
<tr><td scope="row" class='awrc'>PHYSICAL_MEMORY_BYTES</td><td align="right" class='awrc'>33,717,977,088</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPUS</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPU_CORES</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPU_SOCKETS</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GLOBAL_RECEIVE_SIZE_MAX</td><td align="right" class='awrc'>4,194,304</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GLOBAL_SEND_SIZE_MAX</td><td align="right" class='awrnc'>1,048,576</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_DEFAULT</td><td align="right" class='awrc'>87,380</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_MAX</td><td align="right" class='awrnc'>6,291,456</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_MIN</td><td align="right" class='awrc'>4,096</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_DEFAULT</td><td align="right" class='awrnc'>16,384</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_MAX</td><td align="right" class='awrc'>4,194,304</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_MIN</td><td align="right" class='awrnc'>4,096</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1610"></a>
<h3 class="awr">Operating System Statistics - Detail</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays some detailed operating systems statistics. load, % busy , % user, % sys, % idle, % iowait are displayed for begin and end snap time"><tr><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Load</th><th class="awrbg" scope="col">%busy</th><th class="awrbg" scope="col">%user</th><th class="awrbg" scope="col">%sys</th><th class="awrbg" scope="col">%idle</th><th class="awrbg" scope="col">%iowait</th></tr>
<tr><td scope="row" class='awrc'>10-Feb 15:44:14</td><td align="right" class='awrc'>9.58</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>10-Feb 15:54:18</td><td align="right" class='awrnc'>13.17</td><td align="right" class='awrnc'>45.37</td><td align="right" class='awrnc'>15.62</td><td align="right" class='awrnc'>20.53</td><td align="right" class='awrnc'>54.63</td><td align="right" class='awrnc'>45.99</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="210"></a>
<h3 class="awr">Foreground Wait Class</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> ordered by wait time desc, waits desc </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
<li class="awr">Captured Time accounts for	  102.2%  of Total DB time	11,969.36 (s)</li>
<li class="awr">Total FG Wait Time:	       11,409.44 (s)  DB CPU time:	   824.68 (s)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait class statistics"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">%DB time</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>2,102,422</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10,775</td><td align="right" class='awrc'>5.13ms</td><td align="right" class='awrc'>90.02</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>825</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>6.89</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>1,057,856</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>633</td><td align="right" class='awrc'>598.36us</td><td align="right" class='awrc'>5.29</td></tr>
<tr><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>3,650</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>336.59us</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.33ms</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Commit</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4.00ms</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>549.05us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9.88us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Application</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>470.00us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="100"></a>
<h3 class="awr">Foreground Wait Events</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Foreground Wait Events and their wait statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% DB time</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2,102,388</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>10,775</td><td align="right" class='awrc'>5.13ms</td><td align="right" class='awrc'>19.35</td><td align="right" class='awrc'>90.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>794,691</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>433</td><td align="right" class='awrnc'>544.66us</td><td align="right" class='awrnc'>7.31</td><td align="right" class='awrnc'>3.62</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>143,876</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>80</td><td align="right" class='awrc'>553.67us</td><td align="right" class='awrc'>1.32</td><td align="right" class='awrc'>0.67</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>75,559</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>1.02ms</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.64</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>15,300</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.23ms</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>13,569</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>891.60us</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>10,641</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>707.07us</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>2,204</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>1.25ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>1,726</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>784.91us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>244</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3.66ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>2,521</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>348.68us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.33ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.48ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.69ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>774.32us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>154</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>335.63us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>159</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>309.35us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>89</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>458.63us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>76</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>493.78us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4.00ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.88ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>724.28us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.62ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.55ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>243.13us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>689.69us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7.97ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>502.20us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>178.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>144</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>46.63us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.68ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.21ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>705.44us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>813.33us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>546.20us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>317.29us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>name-service call wait</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.02ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>192</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9.99us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: action</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>867.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>745.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>507.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>808</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2,424</td><td align="right" class='awrnc'>3000.04ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1,279</td><td align="right" class='awrc'>25.08 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>267</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>6.92ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>176</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>840.10us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Msg Fragment</td><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>313.61us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="300"></a>
<h3 class="awr">Background Wait Events</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait events statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% bg time</th></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>100,209</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>469</td><td align="right" class='awrc'>4.68ms</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>51.38</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>23,508</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>2.83ms</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>7.30</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>29,803</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>2.22ms</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>7.26</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>2,946</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>3.18ms</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>1.03</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>1,538</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>3.70ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.62</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>823</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>6.11ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.55</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1,815</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>2.27ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.45</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>1,589</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>2.23ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.39</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>279</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>8.68ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>29.66ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>293</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.28ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>2,439</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>364.57us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>ASM IO for non-blocking poll</td><td align="right" class='awrc'>22,082</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>37.13us</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>724</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.03ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>609.39ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>248</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2.13ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>504.62ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>774</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>622.40us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>13,327</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>27.55us</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>148</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.27ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>399</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>723.42us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>167</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.37ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.54ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>AQ: RAC AQ Network</td><td align="right" class='awrnc'>6,033</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32.04us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>928.30us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6,139</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>30.58us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8.62ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>30.23ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.69ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>594</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>241.64us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>direct path read</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.55ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>480.22us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.24ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>112</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>861.84us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.23ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>132</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>688.75us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>860.14us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>7,065</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10.75us</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>862.02us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>95</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>747.32us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>746</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>82.12us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>89</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>626.33us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>175</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>274.85us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>.95ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.62ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>930.73us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>281.34us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>690</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>56.47us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>97</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>372.16us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>684.73us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1,083</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>29.80us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.64ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10.21ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.70ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>468.52us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.43ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>167</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>145.99us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>421.18us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>622.20us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>553.38us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1,584</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8.97us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>745.39us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.34ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>927.92us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>341.94us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>936.20us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>878.70us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.05ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.89ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>549.67us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>341.68us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>321.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>845.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context root latch</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>794.33us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>167</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25.94us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.19ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>102</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25.46us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.36ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>726.67us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current split</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>630.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>229.71us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>266.83us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>213.43us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>700.50us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>596.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: DR - contention</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.16ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>40.72us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rdbms ipc message</td><td align="right" class='awrnc'>233,873</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>15,511</td><td align="right" class='awrnc'>66.32ms</td><td align="right" class='awrnc'>2.15</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10,207</td><td align="right" class='awrc'>113.41 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2,573</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9,654</td><td align="right" class='awrnc'>3751.85ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7,557</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>4,563</td><td align="right" class='awrc'>603.82ms</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" class='awrnc'>927</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1,814</td><td align="right" class='awrnc'>1956.36ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pmon timer</td><td align="right" class='awrc'>403</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,209</td><td align="right" class='awrc'>2999.92ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges remote message</td><td align="right" class='awrnc'>18,846</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,208</td><td align="right" class='awrnc'>64.12ms</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4,025</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,208</td><td align="right" class='awrc'>300.15ms</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7,587</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>1,207</td><td align="right" class='awrnc'>159.06ms</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs yield cpu</td><td align="right" class='awrc'>41,111</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,204</td><td align="right" class='awrc'>29.28ms</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remote message</td><td align="right" class='awrnc'>1,317,376</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,046</td><td align="right" class='awrnc'>793.68us</td><td align="right" class='awrnc'>12.12</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>smon timer</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>723</td><td align="right" class='awrc'>80.36 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group idle</td><td align="right" class='awrnc'>92,359</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>711</td><td align="right" class='awrnc'>7.70ms</td><td align="right" class='awrnc'>0.85</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>13.69 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>616</td><td align="right" class='awrnc'>28.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>607</td><td align="right" class='awrc'>3002.67ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pman timer</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>606</td><td align="right" class='awrnc'>2999.65ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>1000.14ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>2,112</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>605</td><td align="right" class='awrnc'>286.24ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>54.96 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6,051</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>99.81ms</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OFS idle</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>603</td><td align="right" class='awrc'>3000.05ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>345</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>603</td><td align="right" class='awrnc'>1746.77ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>545</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>1101.59ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.01 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>30.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Timer</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>600.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Parse Reply</td><td align="right" class='awrnc'>167</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.02ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execute Reply</td><td align="right" class='awrc'>477</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>559.03us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>484.98us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>RMA: IPC0 completion sync</td><td align="right" class='awrc'>941</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>42.80us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>634.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7400"></a>
<h3 class="awr">Wait Event Histogram</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (idle events last)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Total Waits</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&lt;128us">&lt;128us</th><th class="awrbg" scope="col" id="&lt;256us">&lt;256us</th><th class="awrbg" scope="col" id="&lt;512us">&lt;512us</th><th class="awrbg" scope="col" id="&gt;=512us">&gt;=512us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6032</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>22.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>59.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>22.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.8</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>2438</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>40.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>30.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>6.4</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6137</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>82.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: action</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: query</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>16.7</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>399</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>69.4</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>212</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>83.5</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>835</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>155</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>1.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>45.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>32.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>8.4</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>73.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1818</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>35.3</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>753</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>50.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>1.1</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>708</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>74.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>3.0</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>2529</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>38.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>48.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>2.1</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>724</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>39.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>21.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>1544</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>29.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>89.7</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>97</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>25.8</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>1575</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>79.3</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>297</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>47.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>167</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>75.4</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>167</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>24.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>68.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>256</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>30.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>41.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>12.5</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>13.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>73.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.2</td></tr>
<tr><td scope="row" class='awrc'>PX qref latch</td><td align="right" class='awrc'>52</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>86.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message to client</td><td align="right" class='awrnc'>73</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>91.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>42.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>44.4</td></tr>
<tr><td scope="row" class='awrnc'>asynch descriptor resize</td><td align="right" class='awrnc'>27</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>70.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>278</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>2996</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>67.6</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>7115</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>93.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.2</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>23.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>67.3</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.1M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>direct path read</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>26</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: AF - task serialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>50</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>84</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>88.1</td></tr>
<tr><td scope="row" class='awrnc'>enq: DR - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>25.0</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: MW - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>96</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>39.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>59.4</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>84</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>63.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>35.7</td></tr>
<tr><td scope="row" class='awrc'>enq: SM -  contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>47.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>52.4</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>70.0</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>95.5</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>2336</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>85.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block lost</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>48</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>87.5</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>792.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>59.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>36.5</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>75.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>88.1</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>239</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>94.7</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>10.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>27.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>71.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>1991</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>70.1</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>143.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>57.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>37.7</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>13.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>87.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>15.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>98.5</td></tr>
<tr><td scope="row" class='awrnc'>gc current split</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>495</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>43.0</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>91.7</td></tr>
<tr><td scope="row" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>80.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>1087</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>85.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>752</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>36.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>10.5</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA heap latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context latch</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context root latch</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>16.7</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>100</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>26.0</td></tr>
<tr><td scope="row" class='awrc'>latch: call allocation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>159</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>28.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>19.5</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>135</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>14.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>28.9</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>250</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>22.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>17.6</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>29.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>17.6</td></tr>
<tr><td scope="row" class='awrc'>latch: kjci process context latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>9.1</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>29.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>17.6</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>90</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>24.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>17.8</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: session allocation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1585</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>93.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>101</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>81.2</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>100</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>74.0</td></tr>
<tr><td scope="row" class='awrc'>lock deadlock retry</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>100K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>240</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>33.3</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>name-service call wait</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>148</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>98.6</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>23</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>2111</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>74.2</td></tr>
<tr><td scope="row" class='awrc'>ASM cluster membership changes</td><td align="right" class='awrc'>345</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7585</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.9</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Gap Manager</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Timer</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4023</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group idle</td><td align="right" class='awrnc'>92.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>71.7</td></tr>
<tr><td scope="row" class='awrc'>OFS idle</td><td align="right" class='awrc'>202</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>PING</td><td align="right" class='awrnc'>545</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>14.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>36.7</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: need buffer</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>322</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>35.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execute Reply</td><td align="right" class='awrc'>477</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>1.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>33.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>25.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>12.8</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>267</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>79.0</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>145</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>48.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>35.2</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Parse Reply</td><td align="right" class='awrnc'>167</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>71.9</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>89</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>RMA: IPC0 completion sync</td><td align="right" class='awrc'>941</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>62.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>1.0</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6048</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>75</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>37.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>41.3</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2574</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.2</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrc'>45</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>31.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>55.6</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7550</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>88.5</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>1.3M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>38.4</td></tr>
<tr><td scope="row" class='awrnc'>gcs yield cpu</td><td align="right" class='awrnc'>41.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.9</td></tr>
<tr><td scope="row" class='awrc'>ges remote message</td><td align="right" class='awrc'>18.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.3</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat monitor sleep</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>605</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>lreg timer</td><td align="right" class='awrnc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>pmon timer</td><td align="right" class='awrnc'>403</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>rdbms ipc message</td><td align="right" class='awrc'>233.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.2</td></tr>
<tr><td scope="row" class='awrnc'>smon timer</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>wait for unread message on broadcast channel</td><td align="right" class='awrc'>926</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>804</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7405"></a>
<h3 class="awr">Wait Event Histogram (up to 64 us)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds  </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1us  - 64us</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&gt;=64us">&gt;=64us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>5645</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>6.4</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>19.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>59.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>22.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>10.3</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>1976</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>40.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>30.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>18.9</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>5745</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>82.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>6.4</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>16.7</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.2</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>88.2</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>87.7</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>73.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>437</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>76.0</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>436</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>50.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>42.1</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>574</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>74.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>18.9</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>960</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>38.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>62.0</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>409</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>39.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>43.5</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>143</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.5</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>86.6</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>99</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>93.7</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>287</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>47.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>3.4</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>160</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>24.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>68.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.2</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>105</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>30.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>59.0</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>12.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>73.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>5.0</td></tr>
<tr><td scope="row" class='awrnc'>PX qref latch</td><td align="right" class='awrnc'>52</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>86.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>72</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>90.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>1.4</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>42.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>55.6</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>70.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>7.4</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>795</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>73.5</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>6990</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>93.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.8</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>1299</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>94.5</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>3316</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.6</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>113</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>647</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.5</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>98</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>80.2</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>77.8</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1019</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>6.3</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>81</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>89.2</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA heap latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>55.6</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>87.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>86.8</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>84.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>63</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>74.8</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>88.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>45.5</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>17.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>82.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>77.8</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>33.3</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1565</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>92.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.3</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.0</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>53</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>77.9</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7410"></a>
<h3 class="awr">Wait Event Histogram (up to 32 ms)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds,	ms is 1024 microseconds (approximately 1 millisecond) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1ms  to 32ms</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms">&lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms">&lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&gt;=32ms">&gt;=32ms</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>184</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>154</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>93.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>277</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>30.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>59.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>177</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>16.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>58.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>814</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>69.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>2.5</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>91.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>626</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>64.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.9</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>98.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>97.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>52</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>97.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>155</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>78.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>1540</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>81.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>26.6K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>10.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>24.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>45.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>74.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>1249</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>20.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>58.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>126</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>24.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>24.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>29.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>32</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>87.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>22</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>55.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>261</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>32.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>49.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>6.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>6.1</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>2014</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>32.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>47.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.4</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>15.7K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>32.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.8</td></tr>
<tr><td scope="row" class='awrnc'>db file scattered read</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>55.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>5.6</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.1M</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>61.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.8</td></tr>
<tr><td scope="row" class='awrnc'>direct path read</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>97.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>26</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>69.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>26.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: AF - task serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>46</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>8.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>68.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>72</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>11.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>2.4</td></tr>
<tr><td scope="row" class='awrc'>enq: DR - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: DW - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: MW - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>57</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>40.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>64.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TO - contention</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>47.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>30.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>5.0</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>4.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>54.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>1985</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>15.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>42</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>60.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>289.4K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>63.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>31.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>66.5K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>11.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>67.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>239</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>58.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>5.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>52.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>7416</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>29.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>1396</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>29.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>54.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>62.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>31.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>12K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>12.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>63.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>15K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>1.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>49.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>213</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>57.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>8.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>58.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>79</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>89.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context root latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>26</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>74.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>31</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>80.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>71.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>44</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>82.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>90.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>82.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>82</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>18.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>63.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>74</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>26.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>59.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock deadlock retry</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>99.9K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>45.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>51.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>80</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>40.0</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>145</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>37.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.7</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>43.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>34.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7420"></a>
<h3 class="awr">Wait Event Histogram (up to 2 sec)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 ms is milliseconds    s is 1024 milliseconds (approximately 1 second) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 64ms  to 2s</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms">&lt;64ms</th><th class="awrbg" scope="col" id="&lt;1/8s">&lt;1/8s</th><th class="awrbg" scope="col" id="&lt;1/4s">&lt;1/4s</th><th class="awrbg" scope="col" id="&lt;1/2s">&lt;1/2s</th><th class="awrbg" scope="col" id="&lt;1s">  &lt;1s</th><th class="awrbg" scope="col" id="&lt;2s">  &lt;2s</th><th class="awrbg" scope="col" id="&gt;=2s">&gt;=2s</th></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>97.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>25.9</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>93.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>193</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>94.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>16.3K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>97.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>95.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block lost</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>88</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7430"></a>
<h3 class="awr">Wait Event Histogram (up to 2 min)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7440"></a>
<h3 class="awr">Wait Event Histogram (up to 1 hr)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5800"></a>
<h3 class="awr">Service Statistics</h3>
<ul>
<li class="awr"> ordered by DB Time</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service statistics. It displays service names and corresponding DB time, DB CPU, Physical reads, logical reads."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">DB Time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">Physical Reads (K)</th><th class="awrbg" scope="col">Logical Reads (K)</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td><td align="right" class='awrc'>11,940</td><td align="right" class='awrc'>822</td><td align="right" class='awrc'>2,099</td><td align="right" class='awrc'>4,590</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1,000</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>p30dbXDB</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5820"></a>
<h3 class="awr">Service Wait Class Stats</h3>
<ul>
<li class="awr"> Wait Class info for services in the Service Statistics section.  </li>
<li class="awr"> Total Waits and Time Waited displayed for the following wait	  classes:  User I/O, Concurrency, Administrative, Network </li>
<li class="awr"> Time Waited (Wt Time) in seconds</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service wait class statistics. It displays user I/O total wait, user I/O wait time, concurrency total wait, concurrency wait time, etc."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">User I/O Total Wts</th><th class="awrbg" scope="col">User I/O Wt Time</th><th class="awrbg" scope="col">Concurcy Total Wts</th><th class="awrbg" scope="col">Concurcy Wt Time</th><th class="awrbg" scope="col">Admin Total Wts</th><th class="awrbg" scope="col">Admin Wt Time</th><th class="awrbg" scope="col">Network Total Wts</th><th class="awrbg" scope="col">Network Wt Time</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td>
<td align="right" class='awrc'>2099104</td><td align="right" class='awrc'>10763</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td>
<td align="right" class='awrnc'>23380</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>1806</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>749</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td>
<td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5840"></a>
<h3 class="awr">Top 10 Channel Waits</h3>
<ul>
<li class="awr"> Top 10 Channel Waits by wait time </li>
</ul>
<table border="0" class="tdiff" summary="This table displays top 10 Channel Watis by wait time."><tr><th class="awrbg" scope="col">Channel</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Wait</th></tr>
<tr><td scope="row" class='awrc'>kxfp control signal channel</td>
<td align="right" class='awrc'>85</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>774.25us</td></tr>
<tr><td scope="row" class='awrnc'>RBR channel</td>
<td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.63ms</td></tr>
<tr><td scope="row" class='awrc'>obj broadcast channel</td>
<td align="right" class='awrc'>42</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.85ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2310"></a>
<h3 class="awr">Top Process Types by Wait Class</h3>
<ul>
<li class="awr"> This table displays top process types ordered by wait class</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by Wait Class. . This table displays top process types ordered by wait class"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">Wait Class Type</th><th class="awrbg" scope="col">Wait Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>10,785.31</td></tr>
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>632.41</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>468.67</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>72.04</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>66.85</td></tr>
<tr><td scope="row" class='awrnc'>CKPT</td><td scope="row" class='awrnc'>checkpoint</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>6.81</td></tr>
<tr><td scope="row" class='awrc'>LMON</td><td scope="row" class='awrc'>global enqueue service monitor</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>4.32</td></tr>
<tr><td scope="row" class='awrnc'>RMS0</td><td scope="row" class='awrnc'>rac management server</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>4.00</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>3.58</td></tr>
<tr><td scope="row" class='awrnc'>IMR</td><td scope="row" class='awrnc'>CGS IMR Slave</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>3.28</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>1.81</td></tr>
<tr><td scope="row" class='awrnc'>CKPT</td><td scope="row" class='awrnc'>checkpoint</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>1.57</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1.30</td></tr>
<tr><td scope="row" class='awrnc'>W</td><td scope="row" class='awrnc'>space management slave pool</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>1.17</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>1.14</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>1.08</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>0.82</td></tr>
<tr><td scope="row" class='awrnc'>RMS0</td><td scope="row" class='awrnc'>rac management server</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.72</td></tr>
<tr><td scope="row" class='awrc'>MMNL</td><td scope="row" class='awrc'>Manageability Monitor Process 2</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.68</td></tr>
<tr><td scope="row" class='awrnc'>O</td><td scope="row" class='awrnc'>ASM Connection Pool</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.67</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2320"></a>
<h3 class="awr">Top Process Types by CPU Used</h3>
<ul>
<li class="awr"> This table displays top process types ordered by CPU time</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by CPU Used. . This table displays top process types ordered by CPU time"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">CPU Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td align="right" class='awrc'>822.11</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td align="right" class='awrnc'>330.44</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td align="right" class='awrc'>46.20</td></tr>
<tr><td scope="row" class='awrnc'>VKTM</td><td scope="row" class='awrnc'>Virtual Keeper of TiMe process</td><td align="right" class='awrnc'>32.20</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td scope="row" class='awrc'>Redo etc.</td><td align="right" class='awrc'>22.00</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td align="right" class='awrnc'>21.63</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td align="right" class='awrc'>8.00</td></tr>
<tr><td scope="row" class='awrnc'>RS*</td><td scope="row" class='awrnc'>GCS RM Slave</td><td align="right" class='awrnc'>6.77</td></tr>
<tr><td scope="row" class='awrc'>GCR</td><td scope="row" class='awrc'>GCR Slaves (LMHB)</td><td align="right" class='awrc'>4.22</td></tr>
<tr><td scope="row" class='awrnc'>IPC0</td><td scope="row" class='awrnc'>IPC Service 0</td><td align="right" class='awrnc'>3.10</td></tr>
<tr><td scope="row" class='awrc'>DIA0</td><td scope="row" class='awrc'>diagnosibility process 0</td><td align="right" class='awrc'>2.35</td></tr>
<tr><td scope="row" class='awrnc'>P</td><td scope="row" class='awrnc'>Parallel query slave</td><td align="right" class='awrnc'>2.09</td></tr>
<tr><td scope="row" class='awrc'>LMD0</td><td scope="row" class='awrc'>global enqueue service daemon 0</td><td align="right" class='awrc'>1.56</td></tr>
<tr><td scope="row" class='awrnc'>CJQ0</td><td scope="row" class='awrnc'>Job Queue Coordinator</td><td align="right" class='awrnc'>1.53</td></tr>
<tr><td scope="row" class='awrc'>LMHB</td><td scope="row" class='awrc'>lm heartbeat monitor</td><td align="right" class='awrc'>1.50</td></tr>
<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td align="right" class='awrnc'>1.40</td></tr>
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td align="right" class='awrc'>1.13</td></tr>
<tr><td scope="row" class='awrnc'>LMD1</td><td scope="row" class='awrnc'>global enqueue service daemon 1</td><td align="right" class='awrnc'>1.12</td></tr>
<tr><td scope="row" class='awrc'>IMR</td><td scope="row" class='awrc'>CGS IMR Slave</td><td align="right" class='awrc'>1.05</td></tr>
<tr><td scope="row" class='awrnc'>O</td><td scope="row" class='awrnc'>ASM Connection Pool</td><td align="right" class='awrnc'>1.05</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="22"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#400">SQL ordered by Elapsed Time</a></li>
<li class="awr"><a class="awr" href="#500">SQL ordered by CPU Time</a></li>
<li class="awr"><a class="awr" href="#550">SQL ordered by User I/O Wait Time</a></li>
<li class="awr"><a class="awr" href="#600">SQL ordered by Gets</a></li>
<li class="awr"><a class="awr" href="#700">SQL ordered by Reads</a></li>
<li class="awr"><a class="awr" href="#740">SQL ordered by Physical Reads (UnOptimized)</a></li>
<li class="awr"><a class="awr" href="#800">SQL ordered by Executions</a></li>
<li class="awr"><a class="awr" href="#900">SQL ordered by Parse Calls</a></li>
<li class="awr"><a class="awr" href="#1000">SQL ordered by Sharable Memory</a></li>
<li class="awr"><a class="awr" href="#1100">SQL ordered by Version Count</a></li>
<li class="awr"><a class="awr" href="#1150">SQL ordered by Cluster Wait Time</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="400"></a>
<h3 class="awr">SQL ordered by Elapsed Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> % Total DB Time is the Elapsed Time of the SQL statement divided     into the Total Database Time multiplied by 100 </li>
<li class="awr"> %Total - Elapsed Time	as a percentage of Total DB time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   98.3% of Total DB Time (s):		11,969</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total DB Time (s):	   11,969</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by elapsed time"><tr><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Elapsed Time per Exec (s) </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">	SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>9,947.48</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>83.11</td><td align="right" class='awrc'>5.61</td><td align="right" class='awrc'>91.80</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,808.87</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>15.11</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>89.39</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>568.27</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.27</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>7.15</td><td align="right" class='awrc'>89.39</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.20</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.20</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>7.03</td><td align="right" class='awrnc'>89.82</td><td scope="row" class='awrnc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>6.90</td><td align="right" class='awrc'>90.24</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.19</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.19</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>6.99</td><td align="right" class='awrnc'>90.26</td><td scope="row" class='awrnc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>90.41</td><td scope="row" class='awrc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>6.60</td><td align="right" class='awrnc'>90.91</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>90.41</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>6.84</td><td align="right" class='awrnc'>90.56</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>7.20</td><td align="right" class='awrc'>89.08</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>5.65</td><td align="right" class='awrnc'>92.49</td><td scope="row" class='awrnc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>6.88</td><td align="right" class='awrc'>90.46</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>568.14</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.14</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>6.75</td><td align="right" class='awrnc'>90.75</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>90.20</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.99</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.99</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>6.98</td><td align="right" class='awrnc'>90.22</td><td scope="row" class='awrnc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.97</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.97</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>7.15</td><td align="right" class='awrc'>89.16</td><td scope="row" class='awrc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.86</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.86</td><td align="right" class='awrnc'>4.74</td><td align="right" class='awrnc'>7.03</td><td align="right" class='awrnc'>90.03</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.81</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.81</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.65</td><td scope="row" class='awrc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.68</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.68</td><td align="right" class='awrnc'>4.74</td><td align="right" class='awrnc'>7.01</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.67</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.67</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.81</td><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>567.57</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>567.57</td><td align="right" class='awrnc'>4.74</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>90.14</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>567.25</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>567.25</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>6.97</td><td align="right" class='awrc'>89.97</td><td scope="row" class='awrc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="500"></a>
<h3 class="awr">SQL ordered by CPU Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - CPU Time	as a percentage of Total DB CPU </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   82.6% of Total CPU Time (s): 	    825</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total CPU Time (s):	       825</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by CPU time"><tr><th class="awrbg" scope="col">CPU    Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">CPU per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>558.07</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>67.67</td><td align="right" class='awrc'>9,947.48</td><td align="right" class='awrc'>5.61</td><td align="right" class='awrc'>91.80</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>119.92</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>14.54</td><td align="right" class='awrnc'>1,808.87</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>89.39</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>40.91</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>40.91</td><td align="right" class='awrc'>4.96</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>7.20</td><td align="right" class='awrc'>89.08</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>40.63</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>40.63</td><td align="right" class='awrnc'>4.93</td><td align="right" class='awrnc'>567.97</td><td align="right" class='awrnc'>7.15</td><td align="right" class='awrnc'>89.16</td><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>40.62</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>40.62</td><td align="right" class='awrc'>4.93</td><td align="right" class='awrc'>568.27</td><td align="right" class='awrc'>7.15</td><td align="right" class='awrc'>89.39</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.95</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>39.95</td><td align="right" class='awrnc'>4.84</td><td align="right" class='awrnc'>568.20</td><td align="right" class='awrnc'>7.03</td><td align="right" class='awrnc'>89.82</td><td scope="row" class='awrnc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.94</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>39.94</td><td align="right" class='awrc'>4.84</td><td align="right" class='awrc'>567.86</td><td align="right" class='awrc'>7.03</td><td align="right" class='awrc'>90.03</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.81</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>39.81</td><td align="right" class='awrnc'>4.83</td><td align="right" class='awrnc'>567.68</td><td align="right" class='awrnc'>7.01</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.69</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>39.69</td><td align="right" class='awrc'>4.81</td><td align="right" class='awrc'>568.19</td><td align="right" class='awrc'>6.99</td><td align="right" class='awrc'>90.26</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.66</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>39.66</td><td align="right" class='awrnc'>4.81</td><td align="right" class='awrnc'>567.99</td><td align="right" class='awrnc'>6.98</td><td align="right" class='awrnc'>90.22</td><td scope="row" class='awrnc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.55</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>39.55</td><td align="right" class='awrc'>4.80</td><td align="right" class='awrc'>567.25</td><td align="right" class='awrc'>6.97</td><td align="right" class='awrc'>89.97</td><td scope="row" class='awrc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.52</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>39.52</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>568.02</td><td align="right" class='awrnc'>6.96</td><td align="right" class='awrnc'>90.20</td><td scope="row" class='awrnc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.49</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>39.49</td><td align="right" class='awrc'>4.79</td><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>90.41</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.48</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>39.48</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>6.95</td><td align="right" class='awrnc'>90.41</td><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.22</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>39.22</td><td align="right" class='awrc'>4.76</td><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>6.90</td><td align="right" class='awrc'>90.24</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.15</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>39.15</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>567.57</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>90.14</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.10</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>39.10</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>6.88</td><td align="right" class='awrc'>90.46</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>38.88</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>38.88</td><td align="right" class='awrnc'>4.72</td><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>6.84</td><td align="right" class='awrnc'>90.56</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>38.37</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>38.37</td><td align="right" class='awrc'>4.65</td><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>6.75</td><td align="right" class='awrc'>90.75</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>38.28</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>38.28</td><td align="right" class='awrnc'>4.64</td><td align="right" class='awrnc'>567.67</td><td align="right" class='awrnc'>6.74</td><td align="right" class='awrnc'>90.81</td><td scope="row" class='awrnc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>38.25</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>38.25</td><td align="right" class='awrc'>4.64</td><td align="right" class='awrc'>567.81</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.65</td><td scope="row" class='awrc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>37.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>37.51</td><td align="right" class='awrnc'>4.55</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>6.60</td><td align="right" class='awrnc'>90.91</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>32.11</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>32.11</td><td align="right" class='awrc'>3.89</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>5.65</td><td align="right" class='awrc'>92.49</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="550"></a>
<h3 class="awr">SQL ordered by User I/O Wait Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - User I/O Time as a percentage of Total User I/O Wait time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   99.7% of Total User I/O Wait Time (s):	   10,783</li>
<li class="awr">Captured PL/SQL account for   99.9% of Total User I/O Wait Time (s):	      10,783</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by user I/O time"><tr><th class="awrbg" scope="col">User I/O Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">UIO per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>9,132.15</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>84.69</td><td align="right" class='awrc'>9,947.48</td><td align="right" class='awrc'>5.61</td><td align="right" class='awrc'>91.80</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,617.02</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>15.00</td><td align="right" class='awrnc'>1,808.87</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>89.39</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>525.50</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>525.50</td><td align="right" class='awrc'>4.87</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>5.65</td><td align="right" class='awrc'>92.49</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>516.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>516.51</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>6.60</td><td align="right" class='awrnc'>90.91</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>515.58</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>515.58</td><td align="right" class='awrc'>4.78</td><td align="right" class='awrc'>568.14</td><td align="right" class='awrc'>6.75</td><td align="right" class='awrc'>90.75</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>515.50</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>515.50</td><td align="right" class='awrnc'>4.78</td><td align="right" class='awrnc'>567.67</td><td align="right" class='awrnc'>6.74</td><td align="right" class='awrnc'>90.81</td><td scope="row" class='awrnc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>514.70</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>514.70</td><td align="right" class='awrc'>4.77</td><td align="right" class='awrc'>567.81</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.65</td><td scope="row" class='awrc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>514.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>514.51</td><td align="right" class='awrnc'>4.77</td><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>6.84</td><td align="right" class='awrnc'>90.56</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>513.95</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>513.95</td><td align="right" class='awrc'>4.77</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>6.88</td><td align="right" class='awrc'>90.46</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>513.69</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>513.69</td><td align="right" class='awrnc'>4.76</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>6.95</td><td align="right" class='awrnc'>90.41</td><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>513.67</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>513.67</td><td align="right" class='awrc'>4.76</td><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>90.41</td><td scope="row" class='awrc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>512.84</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>512.84</td><td align="right" class='awrnc'>4.76</td><td align="right" class='awrnc'>568.19</td><td align="right" class='awrnc'>6.99</td><td align="right" class='awrnc'>90.26</td><td scope="row" class='awrnc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>512.72</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>512.72</td><td align="right" class='awrc'>4.76</td><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>6.90</td><td align="right" class='awrc'>90.24</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>512.45</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>512.45</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>567.99</td><td align="right" class='awrnc'>6.98</td><td align="right" class='awrnc'>90.22</td><td scope="row" class='awrnc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>512.34</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>512.34</td><td align="right" class='awrc'>4.75</td><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>90.20</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>511.62</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>511.62</td><td align="right" class='awrnc'>4.74</td><td align="right" class='awrnc'>567.57</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>90.14</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>511.24</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>511.24</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>567.86</td><td align="right" class='awrc'>7.03</td><td align="right" class='awrc'>90.03</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>510.36</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>510.36</td><td align="right" class='awrnc'>4.73</td><td align="right" class='awrnc'>567.25</td><td align="right" class='awrnc'>6.97</td><td align="right" class='awrnc'>89.97</td><td scope="row" class='awrnc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>510.35</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>510.35</td><td align="right" class='awrc'>4.73</td><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>7.03</td><td align="right" class='awrc'>89.82</td><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>508.76</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>508.76</td><td align="right" class='awrnc'>4.72</td><td align="right" class='awrnc'>567.68</td><td align="right" class='awrnc'>7.01</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>508.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>508.00</td><td align="right" class='awrc'>4.71</td><td align="right" class='awrc'>568.27</td><td align="right" class='awrc'>7.15</td><td align="right" class='awrc'>89.39</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>506.43</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>506.43</td><td align="right" class='awrnc'>4.70</td><td align="right" class='awrnc'>567.97</td><td align="right" class='awrnc'>7.15</td><td align="right" class='awrnc'>89.16</td><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>506.13</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>506.13</td><td align="right" class='awrc'>4.69</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>7.20</td><td align="right" class='awrc'>89.08</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="600"></a>
<h3 class="awr">SQL ordered by Gets</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - Buffer Gets	as a percentage of Total Buffer Gets </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Buffer Gets:	 5,609,804</li>
<li class="awr">Captured SQL account for   79.9% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by buffer gets"><tr><th class="awrbg" scope="col">Buffer Gets </th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Gets     per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">	%IO</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>3,680,074</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>6.01</td><td align="right" class='awrc'>65.60</td><td align="right" class='awrc'>9,947.48</td><td class='awrc'>5.6</td><td class='awrc'>91.8</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>782,239</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>7.23</td><td align="right" class='awrnc'>13.94</td><td align="right" class='awrnc'>1,808.87</td><td class='awrnc'>6.6</td><td class='awrnc'>89.4</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>233,025</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>233,025.00</td><td align="right" class='awrc'>4.15</td><td align="right" class='awrc'>568.16</td><td class='awrc'>5.7</td><td class='awrc'>92.5</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>221,033</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>221,033.00</td><td align="right" class='awrnc'>3.94</td><td align="right" class='awrnc'>568.14</td><td class='awrnc'>6.8</td><td class='awrnc'>90.7</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>220,718</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>220,718.00</td><td align="right" class='awrc'>3.93</td><td align="right" class='awrc'>568.18</td><td class='awrc'>6.9</td><td class='awrc'>90.4</td><td scope="row" class='awrc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>220,618</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>220,618.00</td><td align="right" class='awrnc'>3.93</td><td align="right" class='awrnc'>568.18</td><td class='awrnc'>7</td><td class='awrnc'>90.4</td><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>220,505</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>220,505.00</td><td align="right" class='awrc'>3.93</td><td align="right" class='awrc'>568.15</td><td class='awrc'>6.9</td><td class='awrc'>90.5</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>220,292</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>220,292.00</td><td align="right" class='awrnc'>3.93</td><td align="right" class='awrnc'>568.20</td><td class='awrnc'>7</td><td class='awrnc'>89.8</td><td scope="row" class='awrnc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>219,705</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>219,705.00</td><td align="right" class='awrc'>3.92</td><td align="right" class='awrc'>568.20</td><td class='awrc'>6.9</td><td class='awrc'>90.2</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>219,395</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>219,395.00</td><td align="right" class='awrnc'>3.91</td><td align="right" class='awrnc'>567.86</td><td class='awrnc'>7</td><td class='awrnc'>90</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>219,196</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>219,196.00</td><td align="right" class='awrc'>3.91</td><td align="right" class='awrc'>568.18</td><td class='awrc'>6.6</td><td class='awrc'>90.9</td><td scope="row" class='awrc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>219,138</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>219,138.00</td><td align="right" class='awrnc'>3.91</td><td align="right" class='awrnc'>568.02</td><td class='awrnc'>7</td><td class='awrnc'>90.2</td><td scope="row" class='awrnc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>218,286</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>218,286.00</td><td align="right" class='awrc'>3.89</td><td align="right" class='awrc'>568.19</td><td class='awrc'>7</td><td class='awrc'>90.3</td><td scope="row" class='awrc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>216,756</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>216,756.00</td><td align="right" class='awrnc'>3.86</td><td align="right" class='awrnc'>568.16</td><td class='awrnc'>6.8</td><td class='awrnc'>90.6</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>216,332</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>216,332.00</td><td align="right" class='awrc'>3.86</td><td align="right" class='awrc'>567.68</td><td class='awrc'>7</td><td class='awrc'>89.6</td><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>215,983</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>215,983.00</td><td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>567.97</td><td class='awrnc'>7.2</td><td class='awrnc'>89.2</td><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>215,878</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>215,878.00</td><td align="right" class='awrc'>3.85</td><td align="right" class='awrc'>567.67</td><td class='awrc'>6.7</td><td class='awrc'>90.8</td><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>215,533</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>215,533.00</td><td align="right" class='awrnc'>3.84</td><td align="right" class='awrnc'>567.81</td><td class='awrnc'>6.7</td><td class='awrnc'>90.6</td><td scope="row" class='awrnc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>215,316</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>215,316.00</td><td align="right" class='awrc'>3.84</td><td align="right" class='awrc'>567.99</td><td class='awrc'>7</td><td class='awrc'>90.2</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>214,829</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>214,829.00</td><td align="right" class='awrnc'>3.83</td><td align="right" class='awrnc'>567.57</td><td class='awrnc'>6.9</td><td class='awrnc'>90.1</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>213,991</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>213,991.00</td><td align="right" class='awrc'>3.81</td><td align="right" class='awrc'>568.27</td><td class='awrc'>7.1</td><td class='awrc'>89.4</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>212,917</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>212,917.00</td><td align="right" class='awrnc'>3.80</td><td align="right" class='awrnc'>567.25</td><td class='awrnc'>7</td><td class='awrnc'>90</td><td scope="row" class='awrnc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>210,690</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>210,690.00</td><td align="right" class='awrc'>3.76</td><td align="right" class='awrc'>568.16</td><td class='awrc'>7.2</td><td class='awrc'>89.1</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="700"></a>
<h3 class="awr">SQL ordered by Reads</h3>
<ul>
<li class="awr"> %Total - Physical Reads as a percentage of Total Disk Reads </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Disk Reads:	2,106,679</li>
<li class="awr">Captured SQL account for   99.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by physical reads"><tr><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Reads	  per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>1,781,646</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>2.91</td><td align="right" class='awrc'>84.57</td><td align="right" class='awrc'>9,947.48</td><td align="right" class='awrc'>5.61</td><td align="right" class='awrc'>91.80</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>314,010</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>2.90</td><td align="right" class='awrnc'>14.91</td><td align="right" class='awrnc'>1,808.87</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>89.39</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>105,399</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>105,399.00</td><td align="right" class='awrc'>5.00</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>5.65</td><td align="right" class='awrc'>92.49</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>101,163</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>101,163.00</td><td align="right" class='awrnc'>4.80</td><td align="right" class='awrnc'>568.14</td><td align="right" class='awrnc'>6.75</td><td align="right" class='awrnc'>90.75</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,883</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,883.00</td><td align="right" class='awrc'>4.79</td><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>6.60</td><td align="right" class='awrc'>90.91</td><td scope="row" class='awrc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,681</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,681.00</td><td align="right" class='awrnc'>4.78</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>6.95</td><td align="right" class='awrnc'>90.41</td><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,651</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,651.00</td><td align="right" class='awrc'>4.78</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>6.88</td><td align="right" class='awrc'>90.46</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,379</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,379.00</td><td align="right" class='awrnc'>4.76</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>6.95</td><td align="right" class='awrnc'>90.41</td><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,318</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,318.00</td><td align="right" class='awrc'>4.76</td><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>6.90</td><td align="right" class='awrc'>90.24</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,267</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,267.00</td><td align="right" class='awrnc'>4.76</td><td align="right" class='awrnc'>568.19</td><td align="right" class='awrnc'>6.99</td><td align="right" class='awrnc'>90.26</td><td scope="row" class='awrnc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,197</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,197.00</td><td align="right" class='awrc'>4.76</td><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>90.20</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,134</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,134.00</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>567.86</td><td align="right" class='awrnc'>7.03</td><td align="right" class='awrnc'>90.03</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,920</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,920.00</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>6.84</td><td align="right" class='awrc'>90.56</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>99,794</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>99,794.00</td><td align="right" class='awrnc'>4.74</td><td align="right" class='awrnc'>568.20</td><td align="right" class='awrnc'>7.03</td><td align="right" class='awrnc'>89.82</td><td scope="row" class='awrnc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,734</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,734.00</td><td align="right" class='awrc'>4.73</td><td align="right" class='awrc'>567.67</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.81</td><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>99,581</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>99,581.00</td><td align="right" class='awrnc'>4.73</td><td align="right" class='awrnc'>567.81</td><td align="right" class='awrnc'>6.74</td><td align="right" class='awrnc'>90.65</td><td scope="row" class='awrnc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,298</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,298.00</td><td align="right" class='awrc'>4.71</td><td align="right" class='awrc'>567.99</td><td align="right" class='awrc'>6.98</td><td align="right" class='awrc'>90.22</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>99,284</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>99,284.00</td><td align="right" class='awrnc'>4.71</td><td align="right" class='awrnc'>567.57</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>90.14</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,138</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,138.00</td><td align="right" class='awrc'>4.71</td><td align="right" class='awrc'>567.68</td><td align="right" class='awrc'>7.01</td><td align="right" class='awrc'>89.62</td><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>98,808</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>98,808.00</td><td align="right" class='awrnc'>4.69</td><td align="right" class='awrnc'>567.97</td><td align="right" class='awrnc'>7.15</td><td align="right" class='awrnc'>89.16</td><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>98,549</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>98,549.00</td><td align="right" class='awrc'>4.68</td><td align="right" class='awrc'>568.27</td><td align="right" class='awrc'>7.15</td><td align="right" class='awrc'>89.39</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>98,530</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>98,530.00</td><td align="right" class='awrnc'>4.68</td><td align="right" class='awrnc'>567.25</td><td align="right" class='awrnc'>6.97</td><td align="right" class='awrnc'>89.97</td><td scope="row" class='awrnc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>97,384</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>97,384.00</td><td align="right" class='awrc'>4.62</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>7.20</td><td align="right" class='awrc'>89.08</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="740"></a>
<h3 class="awr">SQL ordered by Physical Reads (UnOptimized)</h3>
<ul>
<li class="awr"> UnOptimized Read Reqs = Physical Read Reqs -	    (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile) </li>
<li class="awr"> %Opt	- Optimized Reads as percentage of SQL Read Requests </li>
<li class="awr"> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs</li>
<li class="awr">Total Physical Read Requests:	    2,106,061</li>
<li class="awr">Captured SQL account for    4.1% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       2,106,061</li>
<li class="awr">Captured SQL account for    4.1% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by unoptimized read requests"><tr><th class="awrbg" scope="col">UnOptimized Read Reqs</th><th class="awrbg" scope="col">Physical  Read Reqs</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">UnOptimized Reqs per Exec</th><th class="awrbg" scope="col">%Opt</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>105,399</td><td align="right" class='awrc'>105,399</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>105,399.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.00</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>101,163</td><td align="right" class='awrnc'>101,163</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>101,163.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.80</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,883</td><td align="right" class='awrc'>100,883</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,883.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.79</td><td scope="row" class='awrc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,681</td><td align="right" class='awrnc'>100,681</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,681.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.78</td><td scope="row" class='awrnc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,651</td><td align="right" class='awrc'>100,651</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,651.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.78</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,379</td><td align="right" class='awrnc'>100,379</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,379.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.77</td><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,318</td><td align="right" class='awrc'>100,318</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,318.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.76</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,267</td><td align="right" class='awrnc'>100,267</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,267.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.76</td><td scope="row" class='awrnc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>100,197</td><td align="right" class='awrc'>100,197</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100,197.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.76</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>100,134</td><td align="right" class='awrnc'>100,134</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100,134.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.75</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,920</td><td align="right" class='awrc'>99,920</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,920.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.74</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>99,794</td><td align="right" class='awrnc'>99,794</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>99,794.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.74</td><td scope="row" class='awrnc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,734</td><td align="right" class='awrc'>99,734</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,734.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.74</td><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>99,581</td><td align="right" class='awrnc'>99,581</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>99,581.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.73</td><td scope="row" class='awrnc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,298</td><td align="right" class='awrc'>99,298</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,298.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.71</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>99,284</td><td align="right" class='awrnc'>99,284</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>99,284.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.71</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>99,138</td><td align="right" class='awrc'>99,138</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99,138.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.71</td><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>98,808</td><td align="right" class='awrnc'>98,808</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>98,808.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.69</td><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>98,549</td><td align="right" class='awrc'>98,549</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>98,549.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.68</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>98,530</td><td align="right" class='awrnc'>98,530</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>98,530.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.68</td><td scope="row" class='awrnc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>97,384</td><td align="right" class='awrc'>97,384</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>97,384.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.62</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>85,377</td><td align="right" class='awrnc'>85,377</td><td align="right" class='awrnc'>612,523</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.05</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="800"></a>
<h3 class="awr">SQL ordered by Executions</h3>
<ul>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Executions:	  726,479</li>
<li class="awr">Captured SQL account for   99.4% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of executions"><tr><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Rows Processed</th><th class="awrbg" scope="col">Rows per Exec</th><th class="awrbg" scope="col">Elapsed	Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">  %IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>612,541</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>9,947.48</td><td class='awrc'>5.6</td><td class='awrc'>91.8</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>324,387</td><td align="right" class='awrnc'>3.00</td><td align="right" class='awrnc'>1,808.87</td><td class='awrnc'>6.6</td><td class='awrnc'>89.4</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>460</td><td align="right" class='awrc'>452</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>0.11</td><td class='awrc'>47.4</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td align="right" class='awrnc'>287</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td class='awrnc'>106.3</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td align="right" class='awrc'>282</td><td align="right" class='awrc'>282</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.15</td><td class='awrc'>31.8</td><td class='awrc'>54.8</td><td scope="row" class='awrc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.07</td><td class='awrnc'>80.1</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>92</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.21</td><td class='awrc'>13.1</td><td class='awrc'>9.6</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.16</td><td class='awrnc'>13.9</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrc'>32</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.00</td><td class='awrc'>124.8</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select ind.type#, ind.property...</td></tr>
<tr><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.03</td><td class='awrnc'>38.8</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="900"></a>
<h3 class="awr">SQL ordered by Parse Calls</h3>
<ul>
<li class="awr">Total Parse Calls:	     1,865</li>
<li class="awr">Captured SQL account for   64.1% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of parse calls"><tr><th class="awrbg" scope="col">Parse Calls</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total Parses</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>460</td><td align="right" class='awrc'>460</td><td align="right" class='awrc'>24.66</td><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>8.79</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>92</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>4.93</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>282</td><td align="right" class='awrnc'>4.13</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>2.25</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>1.72</td><td scope="row" class='awrnc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select ind.type#, ind.property...</td></tr>
<tr><td align="right" class='awrc'>32</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>1.72</td><td scope="row" class='awrc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>1.61</td><td scope="row" class='awrnc'><a class="awr" href="#5cu0x10yu88sw">5cu0x10yu88sw</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge into sys.wri$_index_usag...</td></tr>
<tr><td align="right" class='awrc'>21</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>1.13</td><td scope="row" class='awrc'><a class="awr" href="#9babjv8yq8ru3">9babjv8yq8ru3</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>BEGIN DBMS_OUTPUT.GET_LINES(:L...</td></tr>
<tr><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>1.07</td><td scope="row" class='awrnc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select count(*) from ilmobj$ w...</td></tr>
<tr><td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.02</td><td scope="row" class='awrc'><a class="awr" href="#grwydz59pu6mc">grwydz59pu6mc</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select text from view$ where r...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1000"></a>
<h3 class="awr">SQL ordered by Sharable Memory</h3>
<ul>
<li class="awr">Only Statements with Sharable Memory greater than 1048576 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by amount of shared memory used"><tr><th class="awrbg" scope="col">Sharable Mem (b)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>4,146,556</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.37</td><td scope="row" class='awrc'><a class="awr" href="#2xfg27zhudyay">2xfg27zhudyay</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH binds as (select :dbid as...</td></tr>
<tr><td align="right" class='awrnc'>2,917,072</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.26</td><td scope="row" class='awrnc'><a class="awr" href="#9sq9djzzhr19y">9sq9djzzhr19y</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH binds as (select :dbid as...</td></tr>
<tr><td align="right" class='awrc'>1,995,762</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.18</td><td scope="row" class='awrc'><a class="awr" href="#5gy90wdbvc683">5gy90wdbvc683</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> with base_metrics as ( select...</td></tr>
<tr><td align="right" class='awrnc'>1,734,728</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>0.15</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>1,523,767</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>0.14</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,466,458</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.13</td><td scope="row" class='awrnc'><a class="awr" href="#50qajfy1p0v33">50qajfy1p0v33</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH ash as (SELECT round((cas...</td></tr>
<tr><td align="right" class='awrc'>1,192,908</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.11</td><td scope="row" class='awrc'><a class="awr" href="#fg11facbfjwvx">fg11facbfjwvx</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> SELECT /*+ no_monitor leading...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1100"></a>
<h3 class="awr">SQL ordered by Version Count</h3>
<ul>
<li class="awr">Only Statements with Version Count greater than 20 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by version counts"><tr><th class="awrbg" scope="col">Version Count </th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>52</td><td align="right" class='awrc'>108,129</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>612,523</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1150"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time</h3>
<ul>
<li class="awr"> %Total - Cluster Time	as a percentage of Total Cluster Wait Time </li>
<li class="awr"> %Clu	- Cluster Time	as a percentage of Elapsed Time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time </li>
<li class="awr"> Only SQL with Cluster Wait Time &gt; .005 seconds is reported</li>
<li class="awr">Total Cluster Wait Time (s):		 635</li>
<li class="awr">Captured SQL account for   99.1% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by cluster wait time"><tr><th class="awrbg" scope="col">Cluster Wait Time (s)</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed Time(s)</th><th class="awrbg" scope="col">%Clu</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>517.58</td><td align="right" class='awrc'>612,523</td><td align="right" class='awrc'>81.48</td><td align="right" class='awrc'>9,947.48</td><td align="right" class='awrc'>5.20</td><td align="right" class='awrc'>5.61</td><td align="right" class='awrc'>91.80</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>111.87</td><td align="right" class='awrnc'>108,129</td><td align="right" class='awrnc'>17.61</td><td align="right" class='awrnc'>1,808.87</td><td align="right" class='awrnc'>6.18</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>89.39</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>35.41</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.57</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>6.23</td><td align="right" class='awrc'>7.20</td><td align="right" class='awrc'>89.08</td><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>35.27</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.55</td><td align="right" class='awrnc'>567.97</td><td align="right" class='awrnc'>6.21</td><td align="right" class='awrnc'>7.15</td><td align="right" class='awrnc'>89.16</td><td scope="row" class='awrnc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>34.47</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.43</td><td align="right" class='awrc'>568.27</td><td align="right" class='awrc'>6.07</td><td align="right" class='awrc'>7.15</td><td align="right" class='awrc'>89.39</td><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>33.22</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.23</td><td align="right" class='awrnc'>567.68</td><td align="right" class='awrnc'>5.85</td><td align="right" class='awrnc'>7.01</td><td align="right" class='awrnc'>89.62</td><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>31.99</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.04</td><td align="right" class='awrc'>568.20</td><td align="right" class='awrc'>5.63</td><td align="right" class='awrc'>7.03</td><td align="right" class='awrc'>89.82</td><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>31.02</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.88</td><td align="right" class='awrnc'>567.25</td><td align="right" class='awrnc'>5.47</td><td align="right" class='awrnc'>6.97</td><td align="right" class='awrnc'>89.97</td><td scope="row" class='awrnc'><a class="awr" href="#11q6yr7k6svxf">11q6yr7k6svxf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.88</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.86</td><td align="right" class='awrc'>567.86</td><td align="right" class='awrc'>5.44</td><td align="right" class='awrc'>7.03</td><td align="right" class='awrc'>90.03</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.69</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.83</td><td align="right" class='awrnc'>567.57</td><td align="right" class='awrnc'>5.41</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>90.14</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.43</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.79</td><td align="right" class='awrc'>567.99</td><td align="right" class='awrc'>5.36</td><td align="right" class='awrc'>6.98</td><td align="right" class='awrc'>90.22</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>29.99</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.72</td><td align="right" class='awrnc'>568.20</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>6.90</td><td align="right" class='awrnc'>90.24</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>29.85</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.70</td><td align="right" class='awrc'>568.02</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>90.20</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>29.74</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.68</td><td align="right" class='awrnc'>568.19</td><td align="right" class='awrnc'>5.23</td><td align="right" class='awrnc'>6.99</td><td align="right" class='awrnc'>90.26</td><td scope="row" class='awrnc'><a class="awr" href="#8wrvc2gfamkva">8wrvc2gfamkva</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>29.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.57</td><td align="right" class='awrc'>568.18</td><td align="right" class='awrc'>5.10</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>90.41</td><td scope="row" class='awrc'><a class="awr" href="#1zv2tsmss11cb">1zv2tsmss11cb</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>28.94</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.56</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>6.95</td><td align="right" class='awrnc'>90.41</td><td scope="row" class='awrnc'><a class="awr" href="#bqwwfnsg2f57w">bqwwfnsg2f57w</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.92</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.55</td><td align="right" class='awrc'>568.15</td><td align="right" class='awrc'>5.09</td><td align="right" class='awrc'>6.88</td><td align="right" class='awrc'>90.46</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>28.62</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.50</td><td align="right" class='awrnc'>568.16</td><td align="right" class='awrnc'>5.04</td><td align="right" class='awrnc'>6.84</td><td align="right" class='awrnc'>90.56</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.44</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.48</td><td align="right" class='awrc'>567.81</td><td align="right" class='awrc'>5.01</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.65</td><td scope="row" class='awrc'><a class="awr" href="#1hq15n5g6psrm">1hq15n5g6psrm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>27.83</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.38</td><td align="right" class='awrnc'>568.14</td><td align="right" class='awrnc'>4.90</td><td align="right" class='awrnc'>6.75</td><td align="right" class='awrnc'>90.75</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>27.40</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.31</td><td align="right" class='awrc'>567.67</td><td align="right" class='awrc'>4.83</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>90.81</td><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>27.20</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.28</td><td align="right" class='awrnc'>568.18</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>6.60</td><td align="right" class='awrnc'>90.91</td><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>21.43</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.37</td><td align="right" class='awrc'>568.16</td><td align="right" class='awrc'>3.77</td><td align="right" class='awrc'>5.65</td><td align="right" class='awrc'>92.49</td><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>0.45</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>1.42</td><td align="right" class='awrnc'>31.57</td><td align="right" class='awrnc'>30.11</td><td align="right" class='awrnc'>29.29</td><td scope="row" class='awrnc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>49.98</td><td align="right" class='awrc'>37.62</td><td align="right" class='awrc'>0.02</td><td scope="row" class='awrc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>50.27</td><td align="right" class='awrnc'>37.40</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
<tr><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>82.82</td><td align="right" class='awrc'>13.13</td><td align="right" class='awrc'>9.62</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>87.11</td><td align="right" class='awrnc'>13.93</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>2.70</td><td align="right" class='awrc'>0.83</td><td align="right" class='awrc'>57.14</td><td align="right" class='awrc'>24.68</td><td scope="row" class='awrc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2.65</td><td align="right" class='awrnc'>0.83</td><td align="right" class='awrnc'>57.76</td><td align="right" class='awrnc'>23.77</td><td scope="row" class='awrnc'><a class="awr" href="#5k5207588w9ry">5k5207588w9ry</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT DBMS_REPORT.GET_REPORT(...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>65.53</td><td align="right" class='awrc'>27.56</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#6wvzvgvg6qsyb">6wvzvgvg6qsyb</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT INTO wri$_adv_findings ...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>282</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>4.32</td><td align="right" class='awrnc'>31.76</td><td align="right" class='awrnc'>54.84</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="10yxz9a3s65pn"></a>10yxz9a3s65pn</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '35';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="11q6yr7k6svxf"></a>11q6yr7k6svxf</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '36';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="1hq15n5g6psrm"></a>1hq15n5g6psrm</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '39';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="1zv2tsmss11cb"></a>1zv2tsmss11cb</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '5';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="26cgg6g31fq8p"></a>26cgg6g31fq8p</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '32';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="26ka4yp1faxn2"></a>26ka4yp1faxn2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '27';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="2xfg27zhudyay"></a>2xfg27zhudyay</td><td class='awrnc'><pre_sqltext class="awr">WITH binds as
	 (select :dbid			as dbid
	       ,  :inst_id_low		 as instIdLow
	       ,  :inst_id_high 	 as instIdHigh
	       ,  :begin_snap		 as beginSnap
	       ,  :end_snap		 as endSnap
	       ,  :begin_time		 as beginTime
	       ,  :end_time		 as endTime
	       ,  :disk_begin_time	 as diskBeginTime
	       ,  :disk_end_time	 as diskEndTime
	       ,  :mem_begin_time	 as memBeginTime
	       ,  :mem_end_time 	 as memEndTime
	       ,  :bucket_count 	 as bucketCount
	       ,  :bucket_interval	 as bucketInterval
	       ,  :mem_enable		 as memEnable
	       ,  :disk_enable		 as diskEnable
	       ,  :disk_filter_ratio	 as filterRatio,  :filter_action as filter_action,  :filter_blocking_session as filter_blocking_session,  :filter_capture_id as filter_capture_id,  :filter_client_id as filter_client_id,  :filter_consumer_group_id as filter_consumer_group_id,  :filter_dbop as filter_dbop,  :filter_ecid as filter_ecid,	:filter_event as filter_event,	:filter_instance_number as filter_instance_number,  :filter_is_captured as filter_is_captured,	:filter_is_filtered_out as filter_is_filtered_out,  :filter_is_nc_background as filter_is_nc_background,  :filter_is_replayed as filter_is_replayed,  :filter_machine as filter_machine,  :filter_machine_port as filter_machine_port,	:filter_module as filter_module,  :filter_object as filter_object,  :filter_pdb as filter_pdb,	:filter_physical_session as filter_physical_session,  :filter_pl_sql as filter_pl_sql,	:filter_pl_sql_top as filter_pl_sql_top,  :filter_program as filter_program,  :filter_px_process as filter_px_process,	:filter_service_hash as filter_service_hash,  :filter_session_type as filter_session_type,  :filter_sql_fms as filter_sql_fms,	:filter_sql_id_top as filter_sql_id_top,  :filter_sql_opcode as filter_sql_opcode,  :filter_sql_opcode_top as filter_sql_opcode_top,  :filter_sql_rws as filter_sql_rws,  :filter_sql_rws_line as filter_sql_rws_line,	:filter_sqlid as filter_sqlid,	:filter_sqlid_fullphv as filter_sqlid_fullphv,	:filter_sqlid_phv as filter_sqlid_phv,	:filter_user_id as filter_user_id,  :filter_wait_class as filter_wait_class,  :filter_xid as filter_xid from sys.dual)	,  unified_ash as
	     (SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
       ,  a.p2text	
       ,  a.p3
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
       ,  a.current_file#
       ,  a.current_block#	
       ,  a.top_level_call#
       ,  a.top_level_call_name
       ,  a.program
       ,  a.module
       ,  a.action
       ,  a.client_id
       ,  a.remote_instance#	
       ,  a.ecid
       ,  a.consumer_group_id
       ,  a.machine
       ,  a.port
       ,  a.in_connection_mgmt
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  decode(binds.diskEnable, 0, 1, binds.filterRatio)
		       as sample_count
		   ,  inst_id as instance_number
		FROM sys.gv_$active_session_history a,	binds
	       WHERE binds.memEnable = 1
		 AND (	binds.diskEnable = 0
		     OR (  binds.diskEnable = 1
		       AND a.is_awr_sample = 'Y'
		       AND bitand(a.flags,  128) = 0 ) )
		 AND a.inst_id between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	      UNION ALL
	      SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
       ,  a.p2text	
       ,  a.p3
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
       ,  a.current_file#
       ,  a.current_block#	
       ,  a.top_level_call#
       ,  a.top_level_call_name
       ,  a.program
       ,  a.module
       ,  a.action
       ,  a.client_id
       ,  a.remote_instance#	
       ,  a.ecid
       ,  a.consumer_group_id
       ,  a.machine
       ,  a.port
       ,  a.in_connection_mgmt
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  binds.filterRatio as sample_count
		   ,  instance_number as instance_number
		FROM AWR_ROOT_active_sess_history a,
		     binds
	       WHERE binds.diskEnable = 1
		 AND a.dbid = binds.dbid
		 AND a.instance_number between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.snap_id between
			  binds.beginSnap
		      and binds.endSnap + 1
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	     ),  logical_ash as
	     (select sample_id
		   ,  sample_time
		   ,  sample_count
		   ,  instance_number as inst_id, action as action, event as event, instance_number as instance_number, module as module, instance_number || ':' || session_id || ', ' || session_serial# as physical_session, service_hash as service_hash, sql_id as sqlid, wait_class as wait_class,  xid as xid,  user_id as user_id,  program as program from unified_ash) ,  bucketized_ash as
	   (SELECT ash0.*,
		  (case when binds.bucketCount &gt; 1
			then trunc( ( (24 * 60 * 60 *
				       extract(day from sample_time
						      - binds.beginTime))
				    + (60 * 60 *
				       extract(hour from sample_time
						      - binds.beginTime))
				    + (60 *
				       extract(minute from sample_time
						      - binds.beginTime))
				    + (1 *
				       extract(second from sample_time
						      - binds.beginTime))
				     ) / binds.bucketInterval
				   ) + 1
			else 1
		   end) as bucket_number
	   FROM logical_ash ash0,  binds),  filter_xml as
	 (SELECT xmlconcat(xmlelement(&quot;filters&quot; )
	 ,  xmlelement(&quot;report_time&quot;, xmlattributes(
	     to_char(o.begintime,  'HH24:MI:SS MM/DD/YYYY') as &quot;begin_time&quot;,
	     to_char(o.endtime,  'HH24:MI:SS MM/DD/YYYY') as &quot;end_time&quot;))) as xml_frag FROM
    (select binds.*,  nvl(to_number(filter_pdb), 0) as con_dbid from binds) o) ,  filtered_ash as
	      (SELECT ash.*,
		      1  filtered
	       FROM bucketized_ash ash,  binds WHERE 1=1 ),  grouped_ash as
		   (SELECT ash.*,   0 AS bucket_type  FROM (SELECT sqlid, physical_session, action, module, service_hash, instance_number, event, wait_class	  ,  grouping_id(sqlid, physical_session, action, module, service_hash, instance_number, event, wait_class) as gid  , max(inst_id)	      as inst_id
			     , sum(sample_count)       as sample_count
			     , count(distinct sqlid)   as uniq_sqlids
			     , count(distinct xid)     as uniq_xids
			     , count(distinct physical_session)
						      as uniq_sessions
			     , count(distinct instance_number)
						      as uniq_instances, max(user_id) as user_id, max(program) as program from	filtered_ash
		     group by  grouping sets( (wait_class),  (sqlid),  (module),  (event),  (action),  (instance_number),  (physical_session),	(service_hash)) ) ash ),  component_1_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 13
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 13
				   then mem_rank
				   else (13 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 13
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 13
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 13
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 13
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select wait_class as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , wait_class) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 254
			      and wait_class is not null)
		    group by (case when mem_rank &lt;= 13
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_1_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('wait_class' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 13
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 13
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 13
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_1_treemap) t
		   ) topmems),	component_2_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select event as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , event) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 253
			      and event is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_2_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('event' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_2_treemap) t
		   ) topmems),	component_3_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket

			 , NVL((SELECT instance_name
	FROM sys.gv_$instance v
	WHERE v.instance_number = left.dim_val
	  AND rownum &lt; 2  ), ( SELECT instance_name
	FROM AWR_ROOT_database_instance v,  binds b
	WHERE v.dbid = b.dbid
	  AND v.instance_number = left.dim_val
	  AND rownum &lt; 2)) as instance_name
		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select instance_number as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , instance_number) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 251
			      and instance_number is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_3_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('instance_number' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       , instance_name)
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_3_treemap) t
		   ) topmems),	component_4_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket

			 , NVL((SELECT name
       FROM sys.gv_$active_services v
       WHERE v.name_hash = left.dim_val
	     AND v.inst_id = left.inst_id
	     AND rownum &lt; 2 ), ( SELECT service_name
       FROM AWR_ROOT_service_name v,  binds b
       WHERE v.dbid = b.dbid
	     AND v.service_name_hash = left.dim_val
	     AND rownum &lt; 2)) as service_name
		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select service_hash as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , service_hash) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 247
			      and service_hash is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_4_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('service_hash' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       , service_name)
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_4_treemap) t
		   ) topmems),	component_5_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select module as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , module) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 239
			      and module is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_5_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('module' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_5_treemap) t
		   ) topmems),	component_6_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select action as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , action) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 223
			      and action is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_6_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('action' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_6_treemap) t
		   ) topmems),	component_7_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket
			 , user_id, program

		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id

			 , max(case when mem_rank &lt;= 5
			  then user_id		else null
		     end)		      as user_id, max(case when mem_rank &lt;= 5
			  then program		else null
		     end)		      as program
		     from (select physical_session as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , physical_session) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id

				 , user_id, program
			     from grouped_ash
			    where gid = 191
			      and physical_session is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_7_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('physical_session' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)
				       , xmlconcat(xmlelement(&quot;info&quot;, xmlattributes('user_id' as &quot;name&quot;), user_id), xmlelement(&quot;info&quot;, xmlattributes('program' as &quot;name&quot;), program))
				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_7_treemap) t
		   ) topmems),	component_8_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket

			 , NVL((SELECT replace(substr(v.sql_text,  1,  100), CHR(0), '') as sql_text
	 FROM sys.gv_$sql v
	 WHERE v.sql_id = left.dim_val
	       AND v.inst_id = left.inst_id

	       AND rownum &lt; 2 ), ( SELECT replace(sys.dbms_lob.substr(v.sql_text,  100,  1), CHR(0), '')
	   as sql_text
	 FROM AWR_ROOT_sqltext v,  binds b
	 WHERE v.dbid = b.dbid
	   AND v.sql_id = left.dim_val

	   AND rownum &lt; 2)) as sql_text
		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select sqlid as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , sqlid) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 127
			      and sqlid is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_8_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('sqlid' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as
&quot;uniq_instances&quot;)

				       , sql_text)
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_8_treemap) t
		   ) topmems)select
		   xmlconcat((select xml_frag from filter_xml),
		      xmlelement(&quot;dim_list&quot;,
			xmlelement(&quot;item&quot;,
			  xmlattributes('top_dimensions' as &quot;id&quot;),
			  xmlelement(&quot;subdim&quot;,  xmlconcat((select dim_frag from component_1_xml), (select dim_frag from component_2_xml), (select dim_frag from component_3_xml), (select dim_frag from component_4_xml), (select dim_frag from component_5_xml), (select dim_frag from component_6_xml), (select dim_frag from component_7_xml), (select dim_frag from component_8_xml)))),
	 xmltype('
	   &lt;item type=&quot;separator&quot; /&gt;'),
	 xmltype('
	   &lt;item id=&quot;sql_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;sqlid&quot; /&gt;
	       &lt;item id=&quot;sql_id_top&quot; /&gt;
	       &lt;item id=&quot;sql_fms&quot; /&gt;
	       &lt;item id=&quot;sqlid_phv&quot; /&gt;
	       &lt;item id=&quot;sqlid_fullphv&quot;/&gt;
	       &lt;item id=&quot;sql_rws&quot; /&gt;
	       &lt;item id=&quot;sql_rws_line&quot; /&gt;
	       &lt;item id=&quot;sql_opcode&quot; /&gt;
	       &lt;item id=&quot;sql_opcode_top&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;pl_sql_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;pl_sql&quot; /&gt;
	       &lt;item id=&quot;pl_sql_top&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;resource_consumption_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;wait_class&quot; /&gt;
	       &lt;item id=&quot;event&quot; /&gt;
	       &lt;item id=&quot;object&quot; /&gt;
	       &lt;item id=&quot;blocking_session&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;session_identifiers_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;instance_number&quot; /&gt; &lt;item id=&quot;service_hash&quot; /&gt;
	       &lt;item id=&quot;physical_session&quot; /&gt;
	       &lt;item id=&quot;px_process&quot; /&gt;
	       &lt;item id=&quot;user_id&quot; /&gt;
	       &lt;item id=&quot;program&quot; /&gt;
	       &lt;item id=&quot;session_type&quot; /&gt;
	     &lt;/subdim&gt;
	    &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;session_attributes_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;consumer_group_id&quot; /&gt;
	       &lt;item id=&quot;module&quot; /&gt;
	       &lt;item id=&quot;action&quot; /&gt;
	       &lt;item id=&quot;client_id&quot; /&gt;
	       &lt;item id=&quot;machine&quot; /&gt;
	       &lt;item id=&quot;machine_port&quot; /&gt;
	       &lt;item id=&quot;xid&quot; /&gt;
	       &lt;item id=&quot;ecid&quot; /&gt;
	       &lt;item id=&quot;dbop
&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'))
		  ) from sys.dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="30ha31267a7s2"></a>30ha31267a7s2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '37';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

WORKLOAD REPOSITORY report for


	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
DB Name 	DB Id	 Unique Name DB Role	      Edition Release	 RAC CDB
------------ ----------- ----------- ---------------- ------- ---------- --- ---
P30DB	      3393773525 p30db	     PRIMARY	      EE      19.0.0.0.0 YES NO
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN

Instance     Inst Num Startup Time
------------ -------- ---------------
p30db1		    1 10-Feb-20 14:15

Host Name	 Platform			  CPUs Cores Sockets Memory(GB)
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
---------------- -------------------------------- ---- ----- ------- ----------
mcracpoc1.exampl Linux x86 64-bit		     8	   4	   1	  31.40

	      Snap Id	   Snap Time	  Sessions Curs/Sess Instances
	    --------- ------------------- -------- --------- ---------
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
Begin Snap:	  156 10-Feb-20 15:44:14       111	 1.8	     2
  End Snap:	  157 10-Feb-20 15:54:18	90	 1.3	     2
   Elapsed:		  10.08 (mins)
			DBMS_LOCK.SLEEP(v_num_tmp);
   DB Time:		 199.49 (mins)
		END IF;

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name
---------------------------------------- ------- ------ ------------------------
	END IF;
Top SQL Statements			   19.82  99.51 ADDM:3393773525_1_157
"User I/O" wait Class			   19.82  90.02 ADDM:3393773525_1_157
Top Segments by "User I/O" and "Cluster"   19.82  23.46 ADDM:3393773525_1_157
Global Cache Messaging			   19.82   5.13 ADDM:3393773525_1_157
Undersized SGA				   19.82   2.81 ADDM:3393773525_1_157

Load Profile			Per Second   Per Transaction  Per Exec	Per Call
~~~~~~~~~~~~~~~ 	   ---------------   --------------- --------- ---------
	     DB Time(s):	      19.8		 0.1	  0.02	   20.18
	      DB CPU(s):	       1.4		 0.0	  0.00	    1.39
      Background CPU(s):	       0.8		 0.0	  0.00	    0.00
      Redo size (bytes):	 501,347.9	     2,789.1
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
  Logical read (blocks):	   9,278.8		51.6
	  Block changes:	   1,479.0		 8.2
 Physical read (blocks):	   3,484.5		19.4
Physical write (blocks):	     513.6		 2.9
       Read IO requests:	   3,483.5		19.4
      Write IO requests:	     494.1		 2.8
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
	   Read IO (MB):	      27.2		 0.2
	  Write IO (MB):	       4.0		 0.0
	   IM scan rows:	       0.0		 0.0
Session Logical Read IM:	       0.0		 0.0
 RAC GC blocks received:	      24.9		 0.1
   RAC GC blocks served:	      32.6		 0.2
	     User calls:	       1.0		 0.0
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
	   Parses (SQL):	       3.1		 0.0
      Hard parses (SQL):	       0.1		 0.0
     SQL Work Area (MB):	       0.3		 0.0
		 Logons:	       0.2		 0.0
	    User logons:	       0.0		 0.0
	 Executes (SQL):	   1,201.6		 6.7
			v_sharing_schema := TRUE ;
		ELSE
	      Rollbacks:	       0.0		 0.0
	   Transactions:	     179.8

Instance Efficiency Percentages (Target 100%)
			IF ( v_sharing_schema = TRUE ) THEN
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	    Buffer Nowait %:  100.00	   Redo NoWait %:  100.00
	    Buffer  Hit   %:   62.44	In-memory Sort %:  100.00
	    Library Hit   %:  100.06	    Soft Parse %:   98.18
	 Execute to Parse %:   99.74	     Latch Hit %:   99.98
				EXECUTE IMMEDIATE v_home_schema_str;
Parse CPU to Parse Elapsd %:   76.92	 % Non-Parse CPU:   99.99
	  Flash Cache Hit %:	0.00

				v_sharing_schema := FALSE;
Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					   Total Wait	    Avg   % DB Wait
Event				     Waits Time (sec)	   Wait   time Class
			END IF;
		END IF;
------------------------------ ----------- ---------- --------- ------ --------
	END IF;
db file sequential read 	 2,102,388	10.8K	 5.13ms   90.0 User I/O
DB CPU						824.7		   6.9
gc cr grant 2-way		   794,691	432.8  544.66us    3.6 Cluster
gc current grant 2-way		   143,876	 79.7  553.67us     .7 Cluster
gc cr grant busy		    75,559	 76.9	 1.02ms     .6 Cluster

gc current grant read-mostly i	    15,300	 18.8	 1.23ms     .2 Cluster
gc current grant busy		    13,569	 12.1  891.60us     .1 Cluster
gc current block 2-way		    10,641	  7.5  707.07us     .1 Cluster
gc cr block 2-way		     2,204	  2.8	 1.25ms     .0 Cluster
gc current block busy		     1,726	  1.4  784.91us     .0 Cluster

	-- Choose the random block. The v_do_hotspot handler that follows can override.
Wait Classes by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
							  Avg		  Avg
					Total Wait	 Wait	% DB   Active
Wait Class		    Waits	Time (sec)	 Time	time Sessions
---------------- ---------------- ---------------- ---------- ------ --------
User I/O		2,125,850	    10,783     5.07ms	90.1	 17.8
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);
DB CPU					       825		 6.9	  1.4
Cluster 		1,058,580	       635   600.08us	 5.3	  1.1
System I/O		  134,310	       548     4.08ms	 4.6	  0.9
Other			   72,520		87     1.21ms	  .7	  0.1
Concurrency		    1,830		 0   117.98us	  .0	  0.0

Application		       86		 0   874.83us	  .0	  0.0
Network 		      826		 0    75.01us	  .0	  0.0
Commit				6		 0     4.00ms	  .0	  0.0
Configuration			6		 0   385.67us	  .0	  0.0

Host CPU
~~~~~~~~		  Load Average
 CPUs Cores Sockets	Begin	    End     %User   %System	 %WIO	  %Idle
	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
----- ----- ------- --------- --------- --------- --------- --------- ---------
    8	  4	  1	 9.58	  13.17      15.6      20.5	 46.0	   54.6

Instance CPU
~~~~~~~~~~~~
	      % of total CPU for Instance:	28.7
	      % of busy  CPU for Instance:	63.3
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
  %DB time waiting for CPU - Resource Mgr:	 0.0

IO Profile		    Read+Write/Second	  Read/Second	 Write/Second
~~~~~~~~~~		    ----------------- --------------- ---------------
	    Total Requests:	      4,154.4	      3,489.6		664.7
	 Database Requests:	      3,977.6	      3,483.5		494.1
	Optimized Requests:		  0.0		  0.0		  0.0
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	     Redo Requests:		170.3		  1.2		169.2
		Total (MB):		 32.9		 28.3		  4.6
	     Database (MB):		 31.2		 27.2		  4.0
      Optimized Total (MB):		  0.0		  0.0		  0.0
		 Redo (MB):		  1.5		  1.0		  0.5
	 Database (blocks):	      3,998.1	      3,484.5		513.6
 Via Buffer Cache (blocks):	      3,996.9	      3,484.5		512.4
	   Direct (blocks):		  1.2		  0.1		  1.1
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );

Memory Statistics
~~~~~~~~~~~~~~~~~			Begin	       End
				 ------------ ------------
		  Host Mem (MB):     32,156.0	  32,156.0
		   SGA use (MB):      9,664.0	   9,664.0
	END IF;
		   PGA use (MB):      1,341.4	   1,223.4
    % Host Mem used for SGA+PGA:	34.23	     33.86

Cache Sizes			  Begin        End
~~~~~~~~~~~		     ---------- ----------
	       Buffer Cache:	 8,000M     8,000M  Std Block Size:	    8K

	   Shared Pool Size:	 1,077M     1,074M	Log Buffer:    20,612K
	     In-Memory Area:	     0M 	0M

 Shared Pool Statistics        Begin	End
~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ------  ------
	     Memory Usage %:   91.38   90.72
----------------------------------------------------------------------------------------------------------------------
    % SQL with executions>1:   86.76   82.66
  % Memory for SQL w/exec>1:   88.54   72.54


Time Model Statistics			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> DB Time represents total time in user calls
-> DB CPU represents CPU time of foreground processes
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
-> Total CPU Time represents foreground and background processes
-> Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic
-> Ordered by % of DB time in descending order, followed by Statistic Name

								% of  % of Total
Statistic Name					     Time (s) DB Time	CPU Time
------------------------------------------ ------------------ ------- ----------
sql execute elapsed time			     11,968.8	100.0
----------------------------------------------------------------------------------------------------------------------
DB CPU							824.7	  6.9	    64.3
PL/SQL execution elapsed time				 33.7	   .3
parse time elapsed					  0.2	   .0
hard parse (sharing criteria) elapsed time		  0.1	   .0
hard parse elapsed time 				  0.1	   .0
hard parse (bind mismatch) elapsed time 		  0.1	   .0

connection management call elapsed time 		  0.0	   .0
PL/SQL compilation elapsed time 			  0.0	   .0
repeated bind elapsed time				  0.0	   .0
DB time 					     11,969.4
background elapsed time 				913.2
background cpu time					457.1		    35.7
total CPU time					      1,281.7
	IF  ( v_select_only_workload = TRUE ) THEN
			  ------------------------------------------------------

Operating System Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> *TIME statistic values are diffed.
   All others display actual values.  End Value is displayed if different
-> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name

		-- handle case where user specified zero pct updates (a SELECT-only workload)
Statistic				   Value	End Value
------------------------- ---------------------- ----------------
FREE_MEMORY_BYTES		   3,932,635,136    4,304,994,304
INACTIVE_MEMORY_BYTES		   2,078,724,096    2,078,564,352
BUSY_TIME				 202,431
IDLE_TIME				 243,704
IOWAIT_TIME				 205,195
		v_do_update := FALSE;
SYS_TIME				  91,590
USER_TIME				  69,671
LOAD					      10	       13
PHYSICAL_MEMORY_BYTES		  33,717,977,088
NUM_CPUS				       8
NUM_CPU_CORES				       4
NUM_CPU_SOCKETS 			       1
		v_update_quota := TRUE ;
GLOBAL_RECEIVE_SIZE_MAX 	       4,194,304
GLOBAL_SEND_SIZE_MAX		       1,048,576
TCP_RECEIVE_SIZE_DEFAULT		  87,380
TCP_RECEIVE_SIZE_MAX		       6,291,456
TCP_RECEIVE_SIZE_MIN			   4,096
TCP_SEND_SIZE_DEFAULT			  16,384
TCP_SEND_SIZE_MAX		       4,194,304
	ELSE
TCP_SEND_SIZE_MIN			   4,096
			  ------------------------------------------------------

Operating System Statistics - Detail	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		IF ( v_update_only_workload = TRUE ) THEN
Snap Time	    Load    %busy    %user     %sys    %idle  %iowait
--------------- -------- -------- -------- -------- -------- --------
10-Feb 15:44:14      9.6      N/A      N/A	N/A	 N/A	  N/A
			-- handle case where user specified 100% updates
10-Feb 15:54:18     13.2     45.4     15.6     20.5	54.6	 46.0
			  ------------------------------------------------------

			v_do_update := TRUE;
Foreground Wait Class			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
			v_update_quota := FALSE;
-> ordered by wait time desc, waits desc
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
-> Captured Time accounts for	     102.2%  of Total DB time	   11,969.36 (s)
-> Total FG Wait Time:		  11,409.44 (s)  DB CPU time:	      824.68 (s)

				     %Time	Total Wait
		ELSE
Wait Class		       Waits -outs	  Time (s)   Avg wait  %DB time
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
-------------------- --------------- ----- --------------- ---------- ---------
User I/O		   2,102,422	 0	    10,775     5.13ms	   90.0
DB CPU						       825		    6.9
Cluster 		   1,057,856	 0	       633   598.36us	    5.3
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
Other			       3,650	 5		 1   336.59us	    0.0
System I/O			  59	 0		 0     2.33ms	    0.0
Commit				   6	 0		 0     4.00ms	    0.0
Concurrency			  19	 5		 0   549.05us	    0.0
Network 			  57	 0		 0     9.88us	    0.0
Application			   1	 0		 0   470.00us	    0.0
Configuration			   0			 0		    0.0
			IF ( v_update_quota = FALSE ) THEN
			  ------------------------------------------------------
				-- Handle case where user has set UPDATE_PCT to a valid value


Foreground Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Only events with Total Wait Time (s) >= .001 are shown
-> ordered by wait time desc, waits desc (idle events last)
				--
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % DB
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
db file sequential read      2,102,388	       10,775	 5.13ms     19.3   90.0
				-- We are doing updates during this run and quota has not been met yet
gc cr grant 2-way	       794,691		  433  544.66us      7.3    3.6
gc current grant 2-way	       143,876		   80  553.67us      1.3     .7
gc cr grant busy		75,559		   77	 1.02ms      0.7     .6
gc current grant read-most	15,300		   19	 1.23ms      0.1     .2
gc current grant busy		13,569		   12  891.60us      0.1     .1
gc current block 2-way		10,641		    8  707.07us      0.1     .1
				-- We still vacillate until update quota has been met
gc cr block 2-way		 2,204		    3	 1.25ms      0.0     .0
gc current block busy		 1,726		    1  784.91us      0.0     .0
gc cr grant congested		   244		    1	 3.66ms      0.0     .0
KJC: Wait for msg sends to	 2,521		    1  348.68us      0.0     .0
control file sequential re	    59		    0	 2.33ms      0.0     .0
gc current grant congested	    38		    0	 3.48ms      0.0     .0
Disk file Mirror Read		    15		    0	 5.69ms      0.0     .0
latch: gc element		   103		    0  774.32us      0.0     .0

latch: enqueue hash chains	   154		    0  335.63us      0.0     .0
latch free			   159		    0  309.35us      0.0     .0
PX Deq: Slave Session Stat	    89		    0  458.63us      0.0     .0
latch: gcs resource hash	    76		    0  493.78us      0.0     .0
log file sync			     6		    0	 4.00ms      0.0     .0
gc current block congested	     5		    0	 3.88ms      0.0     .0
IPC send completion sync	    18		    0  724.28us      0.0     .0
				IF ( MOD(v_random_block,  2) = 0 ) THEN
enq: WF - contention		     7		    0	 1.62ms      0.0     .0
enq: PS - contention		     7	  14	    0	 1.55ms      0.0     .0
latch: redo allocation		    39		    0  243.13us      0.0     .0
latch: object queue header	    13		    0  689.69us      0.0     .0
direct path write		     1		    0	 7.97ms      0.0     .0
					v_do_update := TRUE;
Disk file operations I/O	    15		    0  502.20us      0.0     .0
latch: cache buffers lru c	    40		    0  178.00us      0.0     .0
PX Deq: reap credit		   144	 100	    0	46.63us      0.0     .0
gc cr block congested		     1		    0	 6.68ms      0.0     .0
CSS initialization		     2		    0	 3.21ms      0.0     .0
enq: TO - contention		     9		    0  705.44us      0.0     .0
				ELSE
library cache lock		     6		    0  813.33us      0.0     .0
library cache pin		     5		    0  546.20us      0.0     .0
latch: cache buffers chain	     7		    0  317.29us      0.0     .0
name-service call wait		     2		    0	 1.02ms      0.0     .0
PGA memory operation		   192		    0	 9.99us      0.0     .0
CSS operation: action		     2		    0  867.50us      0.0     .0
					v_do_update := FALSE;
gc cr multi block mixed 	     2		    0  745.00us      0.0     .0
latch: undo global data 	     2		    0  507.00us      0.0     .0
watchdog main loop		   808		2,424 3000.04ms      0.0
SQL*Net message from clien	    51		1,279	25.08 s      0.0
PX Deq: Execution Msg		   267		    2	 6.92ms      0.0
PX Deq Credit: send blkd	   176		    0  840.10us      0.0
PX Deq: Msg Fragment		   145		    0  313.61us      0.0
				END IF;
			  ------------------------------------------------------


Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
			ELSE

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
log file parallel write        100,209	   0	  469	 4.68ms      0.9   51.4
db file parallel write		23,508	   0	   67	 2.83ms      0.2    7.3
				-- UPDATE quota has been filled,  force drain some SELECTs
LGWR any worker group		29,803	   0	   66	 2.22ms      0.3    7.3
control file sequential re	 2,946	   0	    9	 3.18ms      0.0    1.0
LGWR all worker groups		 1,538	   0	    6	 3.70ms      0.0     .6
Disk file Mirror Read		   823	   0	    5	 6.11ms      0.0     .6
IMR slave acknowledgement	 1,815	   0	    4	 2.27ms      0.0     .5
LGWR worker group ordering	 1,589	   0	    4	 2.23ms      0.0     .4
control file parallel writ	   279	   0	    2	 8.68ms      0.0     .3
Sync ASM rebalance		    54	   0	    2	29.66ms      0.0     .2
db file sequential read 	   293	   0	    1	 4.28ms      0.0     .1
				v_do_update := FALSE;
ASM file metadata operatio	 2,439	   0	    1  364.57us      0.0     .1
ASM IO for non-blocking po	22,082	   0	    1	37.13us      0.2     .1
KSV master wait 		   724	  62	    1	 1.03ms      0.0     .1
gc current block lost		     1	   0	    1  609.39ms      0.0     .1
gc current block busy		   248	   0	    1	 2.13ms      0.0     .1
gc cr block lost		     1	   0	    1  504.62ms      0.0     .1
			END IF;
gcs log flush sync		   774	   0	    0  622.40us      0.0     .1
PX Deq: reap credit		13,327	 100	    0	27.55us      0.1     .0
reliable message		   148	   0	    0	 2.27ms      0.0     .0
DFS lock handle 		   399	 100	    0  723.42us      0.0     .0
PX Deq: Join ACK		   167	   0	    0	 1.37ms      0.0     .0
		END IF;
enq: CR - block range reus	    84	   0	    0	 2.54ms      0.0     .0
AQ: RAC AQ Network		 6,033	 100	    0	32.04us      0.1     .0
DLM cross inst call comple	   207	   0	    0  928.30us      0.0     .0
CGS wait for IPC msg		 6,139	 100	    0	30.58us      0.1     .0
db file scattered read		    18	   0	    0	 8.62ms      0.0     .0
oracle thread bootstrap 	     5	   0	    0	30.23ms      0.0     .0
	END IF;
gc buffer busy release		    26	   0	    0	 5.69ms      0.0     .0
latch free			   594	   0	    0  241.64us      0.0     .0
direct path read		    38	   0	    0	 3.55ms      0.0     .0
log file sequential read	   240	   0	    0  480.22us      0.0     .0
direct path write temp		    26	   0	    0	 4.24ms      0.0     .0
gc current grant busy		   112	   0	    0  861.84us      0.0     .0
gc cr block busy		    18	   0	    0	 5.23ms      0.0     .0

gc cr block 2-way		   132	   0	    0  688.75us      0.0     .0
library cache lock		    95	   0	    0  860.14us      0.0     .0
db file async I/O submit	 7,065	   0	    0	10.75us      0.1     .0
enq: RO - fast object reus	    84	   0	    0  862.02us      0.0     .0
library cache pin		    95	   0	    0  747.32us      0.0     .0
IPC group service call		   746	   0	    0	82.12us      0.0     .0
enq: PS - contention		    89	   6	    0  626.33us      0.0     .0
----------------------------------------------------------------------------------------------------------------------
latch: gcs resource hash	   175	   0	    0  274.85us      0.0     .0
enq: CF - contention		    50	  80	    0	  .95ms      0.0     .0
enq: WF - contention		    13	   0	    0	 3.62ms      0.0     .0
gc cr disk read 		    48	   0	    0  930.73us      0.0     .0
Disk file operations I/O	   140	   0	    0  281.34us      0.0     .0
IPC send completion sync	   690	  88	    0	56.47us      0.0     .0
LGWR wait for redo copy 	    97	   0	    0  372.16us      0.0     .0
-- The type of SQL is now determined...execute it in the following section
gc current block 2-way		    52	   0	    0  684.73us      0.0     .0
ksxr poll remote instances	 1,083	 100	    0	29.80us      0.0     .0
row cache lock			    19	 100	    0	 1.64ms      0.0     .0
gc index operation		     3	   0	    0	10.21ms      0.0     .0
gc cr multi block mixed 	    17	   0	    0	 1.70ms      0.0     .0
latch: cache buffers lru c	    60	   0	    0  468.52us      0.0     .0
CSS operation: data query	    18	   0	    0	 1.43ms      0.0     .0
PX Deq: Slave Session Stat	   167	   0	    0  145.99us      0.0     .0
----------------------------------------------------------------------------------------------------------------------
latch: redo allocation		    51	   0	    0  421.18us      0.0     .0
CSS operation: data update	    21	   0	    0	 1.01ms      0.0     .0

gc current grant 2-way		    25	   0	    0  622.20us      0.0     .0

Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by wait time desc, waits desc (idle events last)
	IF ( v_do_update != TRUE ) THEN
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
		--
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
gc cr grant 2-way		    26	   0	    0  553.38us      0.0     .0
		-- Do a SELECT statement
libcache interrupt action	 1,584	   0	    0	 8.97us      0.0     .0
kjctssqmg: quick message s	    18	 100	    0  745.39us      0.0     .0
os thread creation		     5	   0	    0	 2.34ms      0.0     .0
ges inquiry response		    12	   0	    0  927.92us      0.0     .0
latch: gc element		    32	   0	    0  341.94us      0.0     .0
enq: CO - master slave det	    10	 100	    0  936.20us      0.0     .0
		-- Work out scan or random
enq: FB - contention		    10	   0	    0  878.70us      0.0     .0
db file parallel read		     2	   0	    0	 4.05ms      0.0     .0
gc cr grant busy		     4	   0	    0	 1.89ms      0.0     .0
enq: TO - contention		    12	   0	    0  549.67us      0.0     .0
KJC: Wait for msg sends to	    19	   0	    0  341.68us      0.0     .0
direct path write		     2	   0	    0	 3.01ms      0.0     .0
latch: ges resource hash l	    17	   0	    0  321.00us      0.0     .0
		IF  ( v_random_workload_only = TRUE ) THEN
enq: US - contention		     6	   0	    0  845.50us      0.0     .0
latch: MGA shared context	     6	   0	    0  794.33us      0.0     .0
PX Deq: Signal ACK EXT		   167	   0	    0	25.94us      0.0     .0
enq: TA - contention		     3	   0	    0	 1.19ms      0.0     .0
PGA memory operation		   102	   0	    0	25.46us      0.0     .0
enq: TM - contention		     1	   0	    0	 2.36ms      0.0     .0
enq: HW - contention		     3	   0	    0  726.67us      0.0     .0
gc current split		     3	   0	    0  630.67us      0.0     .0
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
latch: cache buffers chain	     7	   0	    0  229.71us      0.0     .0
latch: messages 		     6	   0	    0  266.83us      0.0     .0
latch: enqueue hash chains	     7	   0	    0  213.43us      0.0     .0
enq: SM -  contention		     2	   0	    0  700.50us      0.0     .0
enq: TD - KTF dump entries	     2	   0	    0  596.00us      0.0     .0
enq: DR - contention		     1	   0	    0	 1.16ms      0.0     .0
asynch descriptor resize	    25	 100	    0	40.72us      0.0     .0
			v_do_scan_query := FALSE;
rdbms ipc message	       233,873	   6   15,511	66.32ms      2.2
PX Idle Wait			    90	   0   10,207  113.41 s      0.0
Space Manager: slave idle	 2,573	   0	9,654 3751.85ms      0.0
class slave wait		 7,557	  79	4,563  603.82ms      0.1
wait for unread message on	   927	 100	1,814 1956.36ms      0.0
pmon timer			   403	 100	1,209 2999.92ms      0.0
ges remote message		18,846	   0	1,208	64.12ms      0.2
			v_scan_query_quota := TRUE ;
GCR sleep			 4,025	   0	1,208  300.15ms      0.0
DIAG idle wait			 7,587	  83	1,207  159.06ms      0.1
gcs yield cpu			41,111	 100	1,204	29.28ms      0.4
gcs remote message	     1,317,376	   0	1,046  793.68us     12.1
smon timer			     9	  11	  723	80.36 s      0.0
LGWR worker group idle		92,359	   0	  711	 7.70ms      0.8
Streams AQ: qmn coordinato	    45	   0	  616	13.69 s      0.0
		ELSE
Streams AQ: qmn slave idle	    22	   0	  616	28.00 s      0.0
lreg timer			   202	 100	  607 3002.67ms      0.0
pman timer			   202	 100	  606 2999.65ms      0.0
heartbeat redo informer 	   605	   0	  605 1000.14ms      0.0
ASM background timer		 2,112	   0	  605  286.24ms      0.0
REPL Capture/Apply: RAC AQ	    11	 100	  605	54.96 s      0.0
SCM slave idle			 6,051	   0	  604	99.81ms      0.1
OFS idle			   201	 100	  603 3000.05ms      0.0
			IF ( v_scan_workload_only = TRUE ) THEN
ASM cluster membership cha	   345	  88	  603 1746.77ms      0.0
PING				   545	  22	  600 1101.59ms      0.0
dispatcher timer		    10	 100	  600	60.01 s      0.0
AQPC idle			    20	 100	  600	30.00 s      0.0
Data Guard: Gap Manager 	    10	   0	  600	60.00 s      0.0
Data Guard: Timer		     1	   0	  600  600.00 s      0.0
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
PX Deq: Parse Reply		   167	   0	    0	 2.02ms      0.0
PX Deq: Execute Reply		   477	   0	    0  559.03us      0.0
PX Deq Credit: send blkd	   146	   0	    0  484.98us      0.0

Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
				v_do_scan_query := TRUE;
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
RMA: IPC0 completion sync	   941	   0	    0	42.80us      0.0
				v_scan_query_quota := FALSE;
SQL*Net message from clien	    24	   0	    0  634.67us      0.0
			  ------------------------------------------------------


Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
			ELSE
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
				IF ( v_scan_query_quota = FALSE ) THEN
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    6032	  .5  85.6   7.5   3.9	 1.6	.7    .2
ASM IO for non-blocking p  22.1K    .6	59.8  22.3   7.0   5.4	 2.9   1.1    .8
ASM file metadata operati   2438  40.6	 1.6  30.2   8.7   5.7	 3.1   3.8   6.4
AWR Flush		       4 100.0
CGS wait for IPC msg	    6137	 4.2  82.6   6.8   4.2	 1.4	.6    .2
CSS initialization	       2	      50.0			    50.0
CSS operation: action	       2					   100.0
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
CSS operation: data query     18					   100.0
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
CSS operation: data updat     21					   100.0
CSS operation: query	       6  83.3					    16.7
DFS lock handle 	     399		.5    .3    .3	  .8  28.8  69.4
DLM cross inst call compl    212	      10.8    .9	       4.7  83.5
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
Disk file Mirror Read	     835					   100.0
Disk file operations I/O     155   1.3	 9.0	.6   1.3   1.3	45.8  32.3   8.4
GCR CSS group query	      18	66.7  33.3
GCR CSS group update	      19	73.7  26.3
IMR slave acknowledgement   1818	 5.0  13.5   5.6  16.2	19.3   5.2  35.3
IPC group service call	     753    .1	  .9   6.8  50.1  33.9	 6.0   1.2   1.1
IPC send completion sync     708	  .6  74.9   5.6   3.0	10.5   2.5   3.0
						v_do_scan_query := TRUE;
KJC: Wait for msg sends t   2529		    38.0  48.2	 8.5   3.2   2.1
KSV master wait 	     724    .3	11.2  39.0   6.1   5.1	12.3   4.7  21.4
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;
LGWR all worker groups	    1544	  .1			  .1	    99.9

LGWR any worker group	   29.7K	  .3	.0    .2   1.1	 2.7   6.0  89.7
LGWR wait for redo copy       97   2.1	 6.2	     5.2  23.7	17.5  19.6  25.8
LGWR worker group orderin   1575    .6	 1.0	.5   4.3   5.7	 4.4   4.3  79.3
PGA memory operation	     297  33.3	47.1  11.8   4.4   2.4	 1.0
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
PX Deq: Join ACK	     167				  .6  24.0  75.4
PX Deq: Signal ACK EXT	     167	24.0  68.3   3.6   1.8	 1.2   1.2
PX Deq: Slave Session Sta    256   1.2	30.5   7.8   1.6   2.0	 2.7  41.8  12.5
PX Deq: reap credit	   13.5K    .0	13.7  73.8   7.5   3.2	 1.2	.5    .2
PX qref latch		      52	86.5   7.7   5.8
				v_scan_query_quota := TRUE;
SQL*Net message to client     73  91.8	 6.8			 1.4
Sync ASM rebalance	      54	42.6   1.9		 1.9   9.3  44.4
asynch descriptor resize      27  70.4	14.8   7.4		       7.4
buffer busy waits	       1		   100.0
			END IF;
control file parallel wri    278					   100.0
control file sequential r   2996	 5.6  19.6   1.4    .9	 2.6   2.3  67.6
db file async I/O submit    7115  93.5	 2.4   1.2   1.1    .8	  .5	.4    .2
db file parallel read	       2					   100.0
db file parallel write	   23.6K	  .1	.7   4.7   5.6	 9.4  12.2  67.3
		END IF;
db file scattered read	      18					   100.0
db file sequential read     2.1M					   100.0
direct path read	      38					   100.0
direct path write	       3					   100.0
direct path write temp	      26					   100.0
enq: AF - task serializat      1					   100.0

enq: CF - contention	      50				       8.0  92.0
enq: CO - master slave de     10					   100.0
enq: CR - block range reu     84				      11.9  88.1
enq: DR - contention	       1					   100.0
enq: DW - contention	       1					   100.0
enq: FB - contention	       4				      75.0  25.0
		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
enq: HW - contention	       4				      50.0  50.0
enq: MW - contention	       1					   100.0
enq: PS - contention	      96				 1.0  39.6  59.4
enq: RO - fast object reu     84			   1.2	      63.1  35.7
enq: SM -  contention	       2				      50.0  50.0
enq: TA - contention	       3					   100.0
	ELSE
enq: TD - KTF dump entrie      2					   100.0
enq: TM - contention	       2				      50.0  50.0

Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
		--
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

		-- Do an UPDATE statement
						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
enq: TO - contention	      21				      47.6  52.4
		--
enq: US - contention	       6					   100.0
enq: WF - contention	      20				      30.0  70.0
gc buffer busy release	      22			   4.5		    95.5
gc cr block 2-way	    2336		      .0    .2	  .5  14.3  85.0
gc cr block busy	      30					   100.0

gc cr block congested	       1					   100.0
gc cr block lost	       1					   100.0
gc cr disk read 	      48				      12.5  87.5
gc cr grant 2-way	  792.3K		      .4    .9	 3.1  59.1  36.5
gc cr grant busy	   75.6K	  .0	.1    .0    .1	  .3  11.4  88.1
gc cr grant congested	     239					   100.0
		v_my_serial := v_my_serial + v_loop_cnt ;
gc cr multi block mixed       19				       5.3  94.7
gc current block 2-way	   10.4K		      .1    .5	  .7  27.6  71.0
gc current block busy	    1991		      .2    .5	  .6  28.6  70.1
gc current block congeste      5					   100.0
gc current block lost	       1					   100.0

gc current grant 2-way	  143.4K		      .5   1.0	 3.1  57.8  37.7
gc current grant busy	   13.7K	  .0	.1    .0    .1	  .5  11.4  87.9
gc current grant congeste     36					   100.0
gc current grant read-mos  15.3K		.0    .0    .1	  .1   1.3  98.5
gc current split	       1					   100.0
gc index operation	       1					   100.0
		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
gcs log flush sync	     495	 5.7   9.9   4.2   9.9	12.5  14.7  43.0
ges inquiry response	      12				       8.3  91.7
ges resource directory to      5  80.0	20.0
		--
kjctssqmg: quick message      18	 5.6  16.7		      27.8  50.0
		-- Increment count of UPDATES and set UPDATE quota flag if needed
ksxr poll remote instance   1087	 1.6  85.0   7.2   4.8	  .8	.6
latch free		     752	 6.8	.7   3.3  21.9	36.2  20.6  10.5
latch: MGA heap latch	       1       100.0
latch: MGA shared context      2				50.0	    50.0
latch: MGA shared context      6				      66.7  33.3
		--
latch: cache buffers chai     18	16.7  11.1  16.7  11.1	 5.6  22.2  16.7
latch: cache buffers lru     100	 8.0   1.0   4.0  25.0	19.0  17.0  26.0
latch: call allocation	       3			  33.3	      66.7
latch: checkpoint queue l      1			       100.0
latch: enqueue hash chain    159	 3.1   1.3   8.8  17.6	28.3  21.4  19.5
latch: gc element	     135	 6.7	     8.9  14.1	20.7  20.7  28.9
		v_updates_cnt := v_updates_cnt + 1;
latch: gcs resource hash     250	 8.4   4.8  12.0  16.8	22.8  17.6  17.6
latch: ges resource hash      17		    11.8  17.6	29.4  23.5  17.6
latch: kjci process conte      1			       100.0
latch: messages 	      11	27.3  18.2   9.1   9.1	      27.3   9.1
latch: object queue heade     17		    17.6  11.8	23.5  29.4  17.6

latch: redo allocation	      90	16.7	     5.6  16.7	24.4  18.9  17.8
latch: redo writing	       3	66.7		  33.3
latch: session allocation      1				     100.0
latch: undo global data        2				      50.0  50.0
libcache interrupt action   1585  93.7	 2.5   1.2   1.3    .6	  .1	.4    .1
library cache lock	     101			   1.0	      17.8  81.2
		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
library cache pin	     100		     1.0	      25.0  74.0
lock deadlock retry	       1					   100.0
log file parallel write     100K					   100.0
log file sequential read     240    .4	       2.1  19.6   2.9	21.3  20.4  33.3
log file sync		       6					   100.0
name-service call wait	       3					   100.0
			v_update_quota := TRUE;
oracle thread bootstrap        5					   100.0
os thread creation	       5					   100.0
reliable message	     148				       1.4  98.6
row cache lock		      23					   100.0
undo_retention publish re      2 100.0

		END IF;
Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
	END IF ;
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQPC idle		      20					   100.0
ASM background timer	    2111				15.5  10.3  74.2
----------------------------------------------------------------------------------------------------------------------
ASM cluster membership ch    345					   100.0
DIAG idle wait		    7585		      .2    .7	  .4	.8  97.9
Data Guard: Gap Manager       10					   100.0
Data Guard: Timer	       1					   100.0
GCR sleep		    4023					   100.0
LGWR worker group idle	   92.2K   2.4	 2.1   1.3   4.9   7.2	 5.7   4.7  71.7
OFS idle		     202					   100.0
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
PING			     545	       1.5  14.9  22.0	16.1   8.8  36.7
PX Deq Credit: need buffe      2				50.0	    50.0
PX Deq Credit: send blkd     322	  .3   8.1   1.2   1.6	 3.4  35.4  50.0
PX Deq: Execute Reply	     477   1.5	33.1  25.8   4.2   8.2	 7.8   6.7  12.8
----------------------------------------------------------------------------------------------------------------------
PX Deq: Execution Msg	     267				 5.2  15.7  79.0
PX Deq: Msg Fragment	     145  48.3	 1.4	     2.1	 3.4   9.7  35.2
PX Deq: Parse Reply	     167    .6	 1.8   1.8	   1.8	 4.8  17.4  71.9

PX Idle Wait		      89					   100.0
REPL Capture/Apply: RAC A     11					   100.0
RMA: IPC0 completion sync    941	22.0  62.3   5.2   5.6	 2.8   1.2   1.0
SCM slave idle		    6048					   100.0
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
SQL*Net message from clie     75			   1.3	20.0  37.3  41.3
Space Manager: slave idle   2574	  .9	.3    .2    .3	  .6	.3  97.2
Streams AQ: qmn coordinat     45	 2.2			31.1  11.1  55.6
Streams AQ: qmn slave idl     22					   100.0
		--
class slave wait	    7550    .0	 3.2	.5   1.1   3.5	 2.4	.8  88.5
dispatcher timer	      10					   100.0
gcs remote message	    1.3M	  .9   2.8   9.1  14.0	14.3  20.5  38.4
gcs yield cpu		   41.1K    .0	 1.8	.1    .1    .1	  .0	.0  97.9
ges remote message	   18.8K	  .1	.2    .1    .6	 2.6   4.2  92.3
heartbeat monitor sleep       12  83.3	 8.3		   8.3
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
heartbeat redo informer      605					   100.0
lreg timer		     201					   100.0
pman timer		     201					   100.0
pmon timer		     403					   100.0
rdbms ipc message	  233.5K    .0	18.9	.8   2.0   3.8	 3.6   4.7  66.2
smon timer		       9					   100.0
wait for unread message o    926					   100.0
		-- so reset flags and counters before continuing
watchdog main loop	     804					   100.0
			  ------------------------------------------------------


Wait Event Histogram (up to 64 us)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
		--
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

		v_update_quota := FALSE;
						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
		v_updates_cnt := 0;
AQ: RAC AQ Network	    5645			    .5	85.6   7.5   6.4
ASM IO for non-blocking p  19.8K		      .6  59.8	22.3   7.0  10.3
ASM file metadata operati   1976		.0  40.6   1.6	30.2   8.7  18.9
AWR Flush		       4		   100.0
CGS wait for IPC msg	    5745			   4.2	82.6   6.8   6.4
		v_selects_cnt := 0;
CSS initialization	       1				50.0	    50.0
CSS operation: query	       5	      33.3  50.0		    16.7
DFS lock handle 	       3				  .5	.3  99.2
DLM cross inst call compl     25				10.8	.9  88.2
Disk file operations I/O      19		     1.3   9.0	  .6   1.3  87.7
GCR CSS group query	      18			  66.7	33.3
	END IF;
GCR CSS group update	      19			  73.7	26.3
IMR slave acknowledgement    437			   5.0	13.5   5.6  76.0
IPC group service call	     436		      .1    .9	 6.8  50.1  42.1
IPC send completion sync     574			    .6	74.9   5.6  18.9
KJC: Wait for msg sends t    960				      38.0  62.0
KSV master wait 	     409		      .3  11.2	39.0   6.1  43.5

LGWR all worker groups	       1			    .1		    99.9
LGWR any worker group	     143			    .3	  .0	.2  99.5
LGWR wait for redo copy       13		     2.1   6.2	       5.2  86.6
LGWR worker group orderin     99		      .6   1.0	  .5   4.3  93.7
PGA memory operation	     287		    33.3  47.1	11.8   4.4   3.4
PX Deq: Signal ACK EXT	     160			  24.0	68.3   3.6   4.2
PX Deq: Slave Session Sta    105		     1.2  30.5	 7.8   1.6  59.0
	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
PX Deq: reap credit	   12.8K		      .0  13.7	73.8   7.5   5.0
PX qref latch		      52			  86.5	 7.7   5.8
SQL*Net message to client     72	       1.4  90.4   6.8		     1.4
Sync ASM rebalance	      24			  42.6	 1.9	    55.6
asynch descriptor resize      25		    70.4  14.8	 7.4	     7.4
buffer busy waits	       1				     100.0
control file sequential r    795			   5.6	19.6   1.4  73.5
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
db file async I/O submit    6990		.2  93.3   2.4	 1.2   1.1   1.8
db file parallel write	    1299			    .1	  .7   4.7  94.5
gc cr block 2-way	       1					.0 100.0
gc cr grant 2-way	    3316					.4  99.6
gc cr grant busy	     113			    .0	  .1	.0  99.9
gc current block 2-way	      12					.1  99.9
gc current block busy	       4					.2  99.8
		-- so reset flags and counters
gc current grant 2-way	     647					.5  99.5
gc current grant busy	      21			    .0	  .1	.0  99.8
gc current grant read-mos      6				  .0	.0 100.0
gcs log flush sync	      98			   5.7	 9.9   4.2  80.2
ges resource directory to      5		    80.0  20.0
kjctssqmg: quick message       4			   5.6	16.7	    77.8
		v_scan_query_quota := FALSE;
ksxr poll remote instance   1019			   1.6	85.0   7.2   6.3
latch free		      81			   6.8	  .7   3.3  89.2
latch: MGA heap latch	       1			 100.0
latch: cache buffers chai      8			  16.7	11.1  16.7  55.6
latch: cache buffers lru      13			   8.0	 1.0   4.0  87.0
latch: enqueue hash chain     21			   3.1	 1.3   8.8  86.8
latch: gc element	      21			   6.7	       8.9  84.4
		v_scan_queries_cnt := 0;
latch: gcs resource hash      63			   8.4	 4.8  12.0  74.8
latch: ges resource hash       2				      11.8  88.2
latch: messages 	       6			  27.3	18.2   9.1  45.5
latch: object queue heade      3				      17.6  82.4
latch: redo allocation	      20			  16.7	       5.6  77.8
latch: redo writing	       2			  66.7		    33.3
		v_random_access_queries_cnt := 0;
libcache interrupt action   1565	       1.3  92.4   2.5	 1.2   1.3   1.3
library cache pin	       1				       1.0  99.0
log file sequential read      53		      .4	 2.1  19.6  77.9

Wait Event Histogram (up to 64 us)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
	END IF;
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)


						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
undo_retention publish re      2		   100.0
	v_loop_cnt := v_loop_cnt + 1 ;
			  ------------------------------------------------------


Wait Event Histogram (up to 32 ms)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
	v_now := DBMS_UTILITY.GET_TIME();
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------

			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	      14  99.8	  .2	.0
ASM IO for non-blocking p    184  99.2	  .6	.2    .0    .0	  .0
ASM file metadata operati    154  93.6	  .7	.9   1.9   2.4	  .5	      .1
	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
CGS wait for IPC msg	      10  99.8	  .1	.0    .0
CSS initialization	       1  50.0			  50.0
CSS operation: action	       2       100.0
CSS operation: data query     18	44.4  22.2  33.3
CSS operation: data updat     21	57.1  42.9
CSS operation: query	       1  83.3	16.7
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
DFS lock handle 	     277  30.6	59.6   7.8   1.5    .3	  .3
DLM cross inst call compl    177  16.5	58.5  20.3   3.8    .5	  .5
Disk file Mirror Read	     814		    69.8  18.4	 3.5   5.7   2.5
Disk file operations I/O      13  91.6	 6.5	     1.9
IMR slave acknowledgement    626  64.7	 1.2	.7  19.3   9.9	 1.4   2.0    .9
IPC group service call	       8  98.9	  .9	      .1
		v_stop_immediate := TRUE ;
IPC send completion sync      21  97.0	 2.5	.4
KJC: Wait for msg sends t     52  97.9	 1.3	.5    .1    .1		      .1
KSV master wait 	     155  78.6	 1.1   2.5   7.6   9.0	 1.2
LGWR all worker groups	    1540    .1	  .3   1.5  81.4  14.4	 1.2   1.0    .1
LGWR any worker group	   26.6K  10.3	12.8  24.9  45.2   6.0	  .5	.2    .1
	END IF;
LGWR wait for redo copy       25  74.2	21.6   2.1   2.1
LGWR worker group orderin   1249  20.7	 6.2   8.6  58.5   5.6	  .3
PX Deq: Join ACK	     126  24.6	24.0  29.3  21.0    .6	  .6
PX Deq: Slave Session Sta     32  87.5	12.1	.4
PX Deq: reap credit	      22  99.8	  .1	.0
Sync ASM rebalance	       6  55.6	 3.7   3.7   3.7		    33.3
control file parallel wri    261		    32.4  49.3	 5.8   6.5   6.1
END LOOP;
control file sequential r   2014  32.4	  .4	.0  47.5  15.9	 1.9   1.5    .4
db file async I/O submit      11  99.8	  .1	.0    .0
db file parallel read	       2		   100.0
db file parallel write	   15.7K  32.7	16.6  17.7  20.5   6.1	 1.9   3.7    .8
db file scattered read	      17		    11.1  55.6	22.2   5.6   5.6

db file sequential read     2.1M		    61.8  31.6	 3.2   2.6    .8
direct path read	      38		    97.4	 2.6
direct path write	       3	33.3		  66.7
direct path write temp	      26		    69.2  26.9	 3.8
enq: AF - task serializat      1       100.0
enq: CF - contention	      46   8.0	68.0  22.0   2.0
enq: CO - master slave de     10	80.0  20.0
v_end_time := v_now ;
enq: CR - block range reu     72  11.9	57.1  17.9   2.4   3.6	 3.6   1.2   2.4
enq: DR - contention	       1	     100.0
enq: DW - contention	       1       100.0
enq: FB - contention	       1  75.0	25.0
enq: HW - contention	       2  50.0	25.0  25.0
enq: MW - contention	       1       100.0
enq: PS - contention	      57  40.6	45.8  12.5	   1.0
enq: RO - fast object reu     30  64.3	22.6   2.4   8.3   2.4
v_now := DBMS_UTILITY.GET_TIME();
enq: SM -  contention	       1  50.0	50.0
enq: TA - contention	       3	33.3  66.7
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
enq: TD - KTF dump entrie      2       100.0
enq: TM - contention	       1  50.0		    50.0
enq: TO - contention	      11  47.6	42.9   9.5

enq: US - contention	       6	83.3  16.7
enq: WF - contention	      13  30.0	50.0   5.0   5.0   5.0		     5.0
gc buffer busy release	      21   4.5	       9.1  22.7  54.5	 9.1
gc cr block 2-way	    1985  15.0	54.0  10.5  18.8   1.7	  .0
gc cr block busy	      30	       6.7   6.7  70.0	13.3   3.3
gc cr block congested	       1			 100.0
gc cr disk read 	      42  12.5	60.4  18.8   8.3
v_total_time := v_end_time - v_begin_time ;
gc cr grant 2-way	  289.4K  63.5	31.0   4.5    .8    .2	  .0	.0    .0

Wait Event Histogram (up to 32 ms)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
gc cr grant busy	   66.5K  11.9	67.4  17.8   2.1    .5	  .2	.0    .0
gc cr grant congested	     239	      16.7  58.2  20.9	 4.2
gc cr multi block mixed       18   5.3	52.6  31.6	  10.5
gc current block 2-way	    7416  29.0	60.8   8.6   1.2    .3	  .1
gc current block busy	    1396  29.9	50.6  14.7   1.9   2.1	  .8	.2
gc current block congeste      5		    60.0  40.0
gc current grant 2-way	   54.1K  62.3	31.5   5.0    .9    .3	  .0	.0
gc current grant busy	     12K  12.1	66.8  18.2   2.3    .5	  .1	.1
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
gc current grant congeste     36	      19.4  63.9  11.1	 5.6
gc current grant read-mos    15K   1.5	42.9  49.7   4.9    .8	  .2	.0    .0
gc current split	       1       100.0
gc index operation	       1				     100.0
gcs log flush sync	     213  57.0	19.4  10.1   6.9   6.3	  .2	.2
ges inquiry response	      11   8.3	58.3  25.0   8.3

kjctssqmg: quick message       9  50.0	16.7  27.8   5.6
latch free		      79  89.5	 8.4   1.9    .1    .1
latch: MGA shared context      1  50.0	50.0
latch: MGA shared context      2  66.7	      33.3
latch: cache buffers chai      3  83.3	16.7
latch: cache buffers lru      26  74.0	18.0   8.0
latch: enqueue hash chain     31  80.5	13.8   4.4   1.3
END;</pre_sqltext></td></tr>
latch: gc element	      39  71.1	12.6   8.1   5.2   2.2	  .7
latch: gcs resource hash      44  82.4	 9.6   5.6   2.4
latch: ges resource hash       3  82.4	11.8   5.9
latch: messages 	       1  90.9	 9.1
latch: object queue heade      3  82.4	 5.9   5.9	   5.9
latch: redo allocation	      16  82.2	11.1   3.3   3.3
latch: undo global data        1  50.0	50.0
libcache interrupt action      2  99.9	  .1
library cache lock	      82  18.8	63.4  14.9   2.0   1.0
<tr><td scope="row" class='awrnc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrnc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,  C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
library cache pin	      74  26.0	59.0  13.0   2.0
lock deadlock retry	       1       100.0
log file parallel write    99.9K		    45.4  51.5	 2.8	.2    .1
log file sequential read      80  66.7	16.3  15.8   1.3
log file sync		       6	      16.7  16.7  66.7
name-service call wait	       3	66.7  33.3
oracle thread bootstrap        3				      60.0  40.0
os thread creation	       5	      60.0  20.0  20.0
reliable message	     145   1.4	50.0   5.4  37.8   4.1		.7    .7
row cache lock		      23	43.5  34.8  17.4   4.3
			  ------------------------------------------------------


Wait Event Histogram (up to 2 sec)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   ms is milliseconds
   s is 1024 milliseconds (approximately 1 second)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
<tr><td scope="row" class='awrc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m			using dual								   on (m.obj# = :objn and							  (:pobjn = 0 or							      m.obj# = :pobjn or							 m.obj# in (select obj# 							       from tabpart$								  where bo# = :pobjn and obj# = :objn					     union all									select obj#								   from tabcompart$							      where bo# = :pobjn and obj# = :objn					 union all								    select tsp.obj#							       from tabsubpart$ tsp,  tabcompart$ tcp					   where tsp.pobj# = tcp.obj#							and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				   and tsp.obj# = :objn)))				    when matched then								 update 								    set inserts = decode(:reset,  1,  0,  inserts) + :ins,			       updates = decode(:reset,  1,  0,  updates) + :upd,			      deletes = decode(:reset,	1,  0,	deletes) + :del,			     flags =  decode(:reset,  1,  0,  flags - bitand(flags,  :flag)) + :flag,	     drop_segments = decode(:reset,  1,  0,  drop_segments) + :dropseg, 	    timestamp = :time							 when NOT matched then							      insert (obj#,  inserts,  updates,  deletes,					     timestamp,  flags,  drop_segments) 				  values (:objn,  :ins,  :upd,	:del,  :time,  :flag,  :dropseg)		   where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
			   64ms
Event			   to 2s <32ms <64ms <1/8s <1/4s <1/2s	 <1s   <2s  >=2s
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
ASM file metadata operati      3  99.9	  .1
Disk file Mirror Read	      21  97.5	 2.3	.2
IMR slave acknowledgement     16  99.1	  .8	.1
KJC: Wait for msg sends t      2  99.9			    .1
LGWR all worker groups	       2  99.9	  .1	      .1
LGWR any worker group	      30  99.9	  .1	.0
Sync ASM rebalance	      18  66.7	 5.6  25.9   1.9
<tr><td scope="row" class='awrnc'><a class="awr" name="491wcfyfd6wc1"></a>491wcfyfd6wc1</td><td class='awrnc'><pre_sqltext class="awr">BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;
control file parallel wri     17  93.9	 5.4	.7
control file sequential r     12  99.6	  .4
db file parallel write	     193  99.2	  .8	.0
db file scattered read	       1  94.4	 5.6
db file sequential read    16.3K  99.2	  .8	.0
enq: CR - block range reu      2  97.6	 2.4
enq: WF - contention	       1  95.0	 5.0
gc cr block lost	       1			 100.0
</pre_sqltext></td></tr>
gc cr grant 2-way	       3 100.0	  .0			  .0
gc cr grant busy	      12 100.0	  .0			  .0
gc current block lost	       1			       100.0
gc current grant read-mos      1 100.0	  .0
log file parallel write       88  99.9	  .1	.0    .0
oracle thread bootstrap        2  60.0	40.0
reliable message	       1  99.3	  .7
			  ------------------------------------------------------


<tr><td scope="row" class='awrc'><a class="awr" name="4tjq41wp5wggf"></a>4tjq41wp5wggf</td><td class='awrc'><pre_sqltext class="awr">DECLARE
Wait Event Histogram (up to 2 min)	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------


Wait Event Histogram (up to 1 hr)	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
v_default_schema_number PLS_INTEGER := '33';
			  ------------------------------------------------------


Service Statistics			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by DB Time

							   Physical	 Logical
Service Name		      DB Time (s)   DB CPU (s)	  Reads (K)    Reads (K)
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;
---------------------------- ------------ ------------ ------------ ------------

p30db.example.com		   11,940	   822	      2,099	   4,590
SYS$BACKGROUND				1	     1		  1	   1,000
v_loop_cnt PLS_INTEGER := 0;
SYS$USERS				0	     0		  0	       0
p30dbXDB				0	     0		  0	       0
			  ------------------------------------------------------
v_rowcnt PLS_INTEGER := 0;

Service Wait Class Stats		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Wait Class info for services in the Service Statistics section.
v_updates_cnt PLS_INTEGER := 0;
-> Total Waits and Time Waited displayed for the following wait
   classes:  User I/O, Concurrency, Administrative, Network
-> Time Waited (Wt Time) in seconds

Service Name
----------------------------------------------------------------
v_selects_cnt PLS_INTEGER := 0;
 User I/O  User I/O  Concurcy  Concurcy     Admin     Admin   Network	Network
Total Wts   Wt Time Total Wts	Wt Time Total Wts   Wt Time Total Wts	Wt Time
--------- --------- --------- --------- --------- --------- --------- ---------
p30db.example.com
  2099104     10763	   23	      0 	0	  0	   54	      0

SYS$BACKGROUND
    23380	  7	 1806	      0 	0	  0	  749	      0
SYS$USERS
	0	  0	    0	      0 	0	  0	    0	      0
			  ------------------------------------------------------

v_random_access_queries_cnt PLS_INTEGER := 0;
Top 10 Channel Waits			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top 10 Channel Waits by wait time

Channel
----------------------------------------------------------------
	       Total
v_scan_queries_cnt PLS_INTEGER := 0;
		Wait
      Waits Time (s)  Avg Wait
----------- -------- ---------
kxfp control signal channel
	 85	   0  774.25us
RBR channel

	 20	   0	3.63ms
obj broadcast channel
	 42	   0	2.85ms
			  ------------------------------------------------------


v_do_scan_query BOOLEAN :=FALSE;
Top Process Types by Wait Class 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> This table displays top process types ordered by wait class

Proce Description		     Wait Class Type  Wait Time (sec
----- ------------------------------ ---------------- --------------
      Others (foregrounds + unclassi User I/O		    10,785.3
v_scan_query_quota  BOOLEAN := FALSE;
      Others (foregrounds + unclassi Cluster		       632.4
LG    Log Writer Slave		     System I/O 	       468.7
LGWR  Redo etc. 		     Other			72.0
DBW0  db writer process 0	     System I/O 		66.9
CKPT  checkpoint		     System I/O 		 6.8
LMON  global enqueue service monitor Other			 4.3
v_scan_workload_only BOOLEAN := FALSE;
RMS0  rac management server	     System I/O 		 4.0
LG    Log Writer Slave		     Other			 3.6
IMR   CGS IMR Slave		     User I/O			 3.3
M     MMON slave class 1	     Other			 1.8
v_random_workload_only BOOLEAN := FALSE;
CKPT  checkpoint		     User I/O			 1.6
M     MMON slave class 1	     User I/O			 1.3
W     space management slave pool    Cluster			 1.2

      Others (foregrounds + unclassi Other			 1.1
M     MMON slave class 1	     Cluster			 1.1
DBW0  db writer process 0	     User I/O			  .8
RMS0  rac management server	     Other			  .7

MMNL  Manageability Monitor Process  Other			  .7
O     ASM Connection Pool	     Other			  .7
			  ------------------------------------------------------


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
Top Process Types by CPU Used		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> This table displays top process types ordered by CPU time

Proces Description		      CPU Time (sec)
------ ------------------------------ --------------
       Others (foregrounds + unclassi	       822.1
v_now PLS_INTEGER;
LM     global cache service process	       330.4
LG     Log Writer Slave 			46.2
VKTM   Virtual Keeper of TiMe process		32.2
LGWR   Redo etc.				22.0
DBW0   db writer process 0			21.6
v_brick_wall PLS_INTEGER;
M      MMON slave class 1			 8.0
RS*    GCS RM Slave				 6.8
GCR    GCR Slaves (LMHB)			 4.2
IPC0   IPC Service 0				 3.1
DIA0   diagnosibility process 0 		 2.4
P      Parallel query slave			 2.1

LMD0   global enqueue service daemon		 1.6
CJQ0   Job Queue Coordinator			 1.5
LMHB   lm heartbeat monitor			 1.5
LMON   global enqueue service monitor		 1.4
RMS0   rac management server			 1.1
LMD1   global enqueue service daemon		 1.1
v_begin_time PLS_INTEGER;
IMR    CGS IMR Slave				 1.1
O      ASM Connection Pool			 1.0
			  ------------------------------------------------------


SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 156-157
v_end_time PLS_INTEGER;
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
v_total_time PLS_INTEGER;
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.3% of Total DB Time (s):	   11,969
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      11,969

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
v_begin_cpu_tm PLS_INTEGER;
---------------- -------------- ------------- ------ ------ ------ -------------
	 9,947.5	612,523 	 0.02	83.1	5.6   91.8 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	 1,808.9	108,129 	 0.02	15.1	6.6   89.4 35dumc2tpr9dv
v_end_cpu_tm PLS_INTEGER;
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	   568.3	      1        568.27	 4.7	7.1   89.4 26ka4yp1faxn2
v_total_cpu_tm PLS_INTEGER;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


	   568.2	      1        568.20	 4.7	7.0   89.8 5yrdyuwb16swu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
v_do_sleeps BOOLEAN := FALSE;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.2	      1        568.20	 4.7	6.9   90.2 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_loop_control BOOLEAN := FALSE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
v_update_quota BOOLEAN := FALSE;

v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
	   568.2	      1        568.19	 4.7	7.0   90.3 8wrvc2gfamkva
Module: SQL*Plus
v_do_update BOOLEAN := FALSE;
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
v_do_hot_schema BOOLEAN := FALSE;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.2	      1        568.18	 4.7	6.9   90.4 1zv2tsmss11cb
Module: SQL*Plus
v_stop_immediate BOOLEAN := FALSE;
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_sharing_schema BOOLEAN := FALSE;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
v_seed VARCHAR2(128);

	   568.2	      1        568.18	 4.7	6.6   90.9 fvmjqn5q18rmh
Module: SQL*Plus
v_home_schema_str VARCHAR2(80);
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_scratch VARCHAR2(200) ;

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.2	      1        568.18	 4.7	7.0   90.4 bqwwfnsg2f57w
v_cpu_pct NUMBER(6, 3);
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_my_serial NUMBER(16);
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.2	      1        568.16	 4.7	6.8   90.6 10yxz9a3s65pn
Module: SQL*Plus


SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
BEGIN
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.3% of Total DB Time (s):	   11,969
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      11,969


	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.2	      1        568.16	 4.7	7.2   89.1 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
EXECUTE IMMEDIATE v_home_schema_str;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.2	      1        568.16	 4.7	5.7   92.5 brqrryv4mja36
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo

_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.1	      1        568.15	 4.7	6.9   90.5 72r567f4w1r2z
IF ( v_hot_schema_modulus != 0 ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	v_do_hot_schema := TRUE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.1	      1        568.14	 4.7	6.8   90.7 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
END IF;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.0	      1        568.02	 4.7	7.0   90.2 26cgg6g31fq8p
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

IF ( v_sleep_modulus != 0 )	  THEN
	   568.0	      1        567.99	 4.7	7.0   90.2 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
	v_do_sleeps := TRUE;

	   568.0	      1        567.97	 4.7	7.2   89.2 d3r94djtpj7r9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
END IF;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   567.9	      1        567.86	 4.7	7.0   90.0 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
IF ( v_max_loop_iterations &gt; 0 )  THEN
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.3% of Total DB Time (s):	   11,969
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      11,969
	v_loop_control := TRUE ;

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------

	   567.8	      1        567.81	 4.7	6.7   90.6 1hq15n5g6psrm
Module: SQL*Plus
END IF;
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   567.7	      1        567.68	 4.7	7.0   89.6 7bd84p4z76t66

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

IF ( v_update_pct = 0 ) 	  THEN
	   567.7	      1        567.67	 4.7	6.7   90.8 30ha31267a7s2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	v_select_only_workload := TRUE;
	   567.6	      1        567.57	 4.7	6.9   90.1 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
END IF;

	   567.3	      1        567.25	 4.7	7.0   90.0 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------


SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
IF ( v_update_pct = 100 )	  THEN
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   82.6% of Total CPU Time (s):	       825
-> Captured PL/SQL account for	 99.7% of Total CPU Time (s):		  825
	v_update_only_workload := TRUE;

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
     558.1	612,523       0.00   67.7    9,947.5	5.6   91.8 bhdvtsvjhgvrh
Module: SQL*Plus
END IF;
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

     119.9	108,129       0.00   14.5    1,808.9	6.6   89.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


      40.9	      1      40.91    5.0      568.2	7.2   89.1 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
IF ( v_scan_query_pct = 0 ) 	THEN
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	v_random_workload_only := TRUE;
      40.6	      1      40.63    4.9      568.0	7.2   89.2 d3r94djtpj7r9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
END IF;

      40.6	      1      40.62    4.9      568.3	7.1   89.4 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
IF ( v_scan_query_pct = 100 ) 	THEN
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.9	      1      39.95    4.8      568.2	7.0   89.8 5yrdyuwb16swu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
	v_scan_workload_only := TRUE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.9	      1      39.94    4.8      567.9	7.0   90.0 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
END IF;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h


      39.8	      1      39.81    4.8      567.7	7.0   89.6 7bd84p4z76t66
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
v_seconds_to_run := v_seconds_to_run * 100 ;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.7	      1      39.69    4.8      568.2	7.0   90.3 8wrvc2gfamkva
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.7	      1      39.66    4.8      568.0	7.0   90.2 f5pbdmj9v6wga

Module: SQL*Plus

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   82.6% of Total CPU Time (s):	       825
-- DBMS_RANDOM.seed (val =&gt; v_seed);
-> Captured PL/SQL account for	 99.7% of Total CPU Time (s):		  825

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.6	      1      39.55    4.8      567.3	7.0   90.0 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
v_begin_time := DBMS_UTILITY.GET_TIME();
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.5	      1      39.52    4.8      568.0	7.0   90.2 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
v_now := v_begin_time ;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.5	      1      39.49    4.8      568.2	7.0   90.4 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
v_brick_wall := v_now + v_seconds_to_run ;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      39.5	      1      39.48    4.8      568.2	6.9   90.4 1zv2tsmss11cb
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      39.2	      1      39.22    4.8      568.2	6.9   90.2 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.1	      1      39.15    4.7      567.6	6.9   90.1 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
----------------------------------------------------------------------------------------------------------------------
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      39.1	      1      39.10    4.7      568.1	6.9   90.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
-- The following WHILE loop is the master work loop control
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      38.9	      1      38.88    4.7      568.2	6.8   90.6 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
----------------------------------------------------------------------------------------------------------------------
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   82.6% of Total CPU Time (s):	       825
-> Captured PL/SQL account for	 99.7% of Total CPU Time (s):		  825

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------


      38.4	      1      38.37    4.7      568.1	6.8   90.7 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
      38.3	      1      38.28    4.6      567.7	6.7   90.8 30ha31267a7s2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      38.2	      1      38.25    4.6      567.8	6.7   90.6 1hq15n5g6psrm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      37.5	      1      37.51    4.5      568.2	6.6   90.9 fvmjqn5q18rmh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
			DBMS_LOCK.SLEEP(v_num_tmp);
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      32.1	      1      32.11    3.9      568.2	5.7   92.5 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
		END IF;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  ------------------------------------------------------


SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
	END IF;
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time

-> Captured SQL account for   99.7% of Total User I/O Wait Time (s):	      10
-> Captured PL/SQL account for	 99.9% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
   9,132.1	612,523       0.01   84.7    9,947.5	5.6   91.8 bhdvtsvjhgvrh
Module: SQL*Plus
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

   1,617.0	108,129       0.01   15.0    1,808.9	6.6   89.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     525.5	      1     525.50    4.9      568.2	5.7   92.5 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     516.5	      1     516.51    4.8      568.2	6.6   90.9 fvmjqn5q18rmh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     515.6	      1     515.58    4.8      568.1	6.8   90.7 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			v_sharing_schema := TRUE ;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     515.5	      1     515.50    4.8      567.7	6.7   90.8 30ha31267a7s2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		ELSE
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     514.7	      1     514.70    4.8      567.8	6.7   90.6 1hq15n5g6psrm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			IF ( v_sharing_schema = TRUE ) THEN
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     514.5	      1     514.51    4.8      568.2	6.8   90.6 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
				EXECUTE IMMEDIATE v_home_schema_str;

     513.9	      1     513.95    4.8      568.1	6.9   90.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     513.7	      1     513.69    4.8      568.2	6.9   90.4 1zv2tsmss11cb
Module: SQL*Plus
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   99.7% of Total User I/O Wait Time (s):	      10
-> Captured PL/SQL account for	 99.9% of Total User I/O Wait Time (s):
			IF ( v_update_quota = FALSE ) THEN

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
				-- Handle case where user has set UPDATE_PCT to a valid value
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     513.7	      1     513.67    4.8      568.2	7.0   90.4 bqwwfnsg2f57w
Module: SQL*Plus
				--
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
				-- We are doing updates during this run and quota has not been met yet
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     512.8	      1     512.84    4.8      568.2	7.0   90.3 8wrvc2gfamkva
				-- We still vacillate until update quota has been met
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


     512.7	      1     512.72    4.8      568.2	6.9   90.2 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
				IF ( MOD(v_random_block,  2) = 0 ) THEN
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     512.4	      1     512.45    4.8      568.0	7.0   90.2 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
					v_do_update := TRUE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

				ELSE
					v_do_update := FALSE;
     512.3	      1     512.34    4.8      568.0	7.0   90.2 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
				END IF;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     511.6	      1     511.62    4.7      567.6	6.9   90.1 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
			ELSE
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     511.2	      1     511.24    4.7      567.9	7.0   90.0 71v63sn4bfskh
Module: SQL*Plus
				-- UPDATE quota has been filled,  force drain some SELECTs
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

				v_do_update := FALSE;
     510.4	      1     510.36    4.7      567.3	7.0   90.0 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
			END IF;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
		END IF;
-> Captured SQL account for   99.7% of Total User I/O Wait Time (s):	      10
-> Captured PL/SQL account for	 99.9% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
	END IF;
---------- ------------ ---------- ------ ---------- ------ ------ -------------

     510.4	      1     510.35    4.7      568.2	7.0   89.8 5yrdyuwb16swu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     508.8	      1     508.76    4.7      567.7	7.0   89.6 7bd84p4z76t66
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     508.0	      1     508.00    4.7      568.3	7.1   89.4 26ka4yp1faxn2
Module: SQL*Plus
----------------------------------------------------------------------------------------------------------------------
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


     506.4	      1     506.43    4.7      568.0	7.2   89.2 d3r94djtpj7r9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
	IF ( v_do_update != TRUE ) THEN

     506.1	      1     506.13    4.7      568.2	7.2   89.1 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		--
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------


SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 156-157
		-- Do a SELECT statement
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,609,804
		-- Work out scan or random
-> Captured SQL account for   79.9% of Total

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
  3,680,074	612,523 	 6.0   65.6    9,947.5	 5.6  91.8 bhdvtsvjhgvrh
		IF  ( v_random_workload_only = TRUE ) THEN
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

    782,239	108,129 	 7.2   13.9    1,808.9	 6.6  89.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)

    233,025	      1    233,025.0	4.2	 568.2	 5.7  92.5 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			v_do_scan_query := FALSE;
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    221,033	      1    221,033.0	3.9	 568.1	 6.8  90.7 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
			v_scan_query_quota := TRUE ;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    220,718	      1    220,718.0	3.9	 568.2	 6.9  90.4 1zv2tsmss11cb
Module: SQL*Plus
		ELSE
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    220,618	      1    220,618.0	3.9	 568.2	   7  90.4 bqwwfnsg2f57w
			IF ( v_scan_workload_only = TRUE ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
    220,505	      1    220,505.0	3.9	 568.1	 6.9  90.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
				v_do_scan_query := TRUE;

    220,292	      1    220,292.0	3.9	 568.2	   7  89.8 5yrdyuwb16swu
Module: SQL*Plus
				v_scan_query_quota := FALSE;
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			ELSE
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    219,705	      1    219,705.0	3.9	 568.2	 6.9  90.2 6x8682kb2y8vd
				IF ( v_scan_query_quota = FALSE ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
    219,395	      1    219,395.0	3.9	 567.9	   7	90 71v63sn4bfskh
Module: SQL*Plus

SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,609,804
-> Captured SQL account for   79.9% of Total

     Buffer		    Gets	      Elapsed
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
						v_do_scan_query := TRUE;

    219,196	      1    219,196.0	3.9	 568.2	 6.6  90.9 fvmjqn5q18rmh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
					ELSE
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    219,138	      1    219,138.0	3.9	 568.0	   7  90.2 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
						v_do_scan_query := FALSE;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    218,286	      1    218,286.0	3.9	 568.2	   7  90.3 8wrvc2gfamkva
Module: SQL*Plus
					END IF;
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
				ELSE

    216,756	      1    216,756.0	3.9	 568.2	 6.8  90.6 10yxz9a3s65pn
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			END IF;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    216,332	      1    216,332.0	3.9	 567.7	   7  89.6 7bd84p4z76t66
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		END IF;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    215,983	      1    215,983.0	3.9	 568.0	 7.2  89.2 d3r94djtpj7r9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    215,878	      1    215,878.0	3.8	 567.7	 6.7  90.8 30ha31267a7s2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    215,533	      1    215,533.0	3.8	 567.8	 6.7  90.6 1hq15n5g6psrm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
		IF ( v_do_scan_query != TRUE ) THEN
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Resources reported for PL/SQL code includes the resources used by all SQL
			SELECT COUNT(c2) INTO v_rowcnt
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,609,804
-> Captured SQL account for   79.9% of Total

			FROM cf1
     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

    215,316	      1    215,316.0	3.8	 568.0	   7  90.2 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    214,829	      1    214,829.0	3.8	 567.6	 6.9  90.1 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    213,991	      1    213,991.0	3.8	 568.3	 7.1  89.4 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
		ELSE
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
    212,917	      1    212,917.0	3.8	 567.3	   7	90 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    210,690	      1    210,690.0	3.8	 568.2	 7.2  89.1 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			v_scan_queries_cnt := v_scan_queries_cnt + 1;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------


SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 156-157

-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,106,679
-> Captured SQL account for   99.5% of Total

   Physical		 Reads		    Elapsed
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
  1,781,646	612,523        2.9   84.6    9,947.5	5.6   91.8 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

    314,010	108,129        2.9   14.9    1,808.9	6.6   89.4 35dumc2tpr9dv
				v_scan_query_quota := TRUE;
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

    105,399	      1  105,399.0    5.0      568.2	5.7   92.5 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
			END IF;
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    101,163	      1  101,163.0    4.8      568.1	6.8   90.7 bhs63jbrb30ru
Module: SQL*Plus
		END IF;
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,883	      1  100,883.0    4.8      568.2	6.6   90.9 fvmjqn5q18rmh
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,681	      1  100,681.0    4.8      568.2	6.9   90.4 1zv2tsmss11cb
		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	ELSE
    100,651	      1  100,651.0    4.8      568.1	6.9   90.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		--
    100,379	      1  100,379.0    4.8      568.2	7.0   90.4 bqwwfnsg2f57w
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

		-- Do an UPDATE statement
    100,318	      1  100,318.0    4.8      568.2	6.9   90.2 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		--
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,267	      1  100,267.0    4.8      568.2	7.0   90.3 8wrvc2gfamkva
Module: SQL*Plus

SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> %Total - Physical Reads as a percentage of Total Disk Reads

-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,106,679
-> Captured SQL account for   99.5% of Total

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
		v_my_serial := v_my_serial + v_loop_cnt ;
----------- ----------- ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


    100,197	      1  100,197.0    4.8      568.0	7.0   90.2 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
    100,134	      1  100,134.0    4.8      567.9	7.0   90.0 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
		--

     99,920	      1   99,920.0    4.7      568.2	6.8   90.6 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		-- Increment count of UPDATES and set UPDATE quota flag if needed
     99,794	      1   99,794.0    4.7      568.2	7.0   89.8 5yrdyuwb16swu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		--
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,734	      1   99,734.0    4.7      567.7	6.7   90.8 30ha31267a7s2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		v_updates_cnt := v_updates_cnt + 1;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,581	      1   99,581.0    4.7      567.8	6.7   90.6 1hq15n5g6psrm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,298	      1   99,298.0    4.7      568.0	7.0   90.2 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,284	      1   99,284.0    4.7      567.6	6.9   90.1 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
			v_update_quota := TRUE;
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,106,679
		END IF;
-> Captured SQL account for   99.5% of Total

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------

	END IF ;
----------------------------------------------------------------------------------------------------------------------
     99,138	      1   99,138.0    4.7      567.7	7.0   89.6 7bd84p4z76t66
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     98,808	      1   98,808.0    4.7      568.0	7.2   89.2 d3r94djtpj7r9
Module: SQL*Plus
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
----------------------------------------------------------------------------------------------------------------------

     98,549	      1   98,549.0    4.7      568.3	7.1   89.4 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     98,530	      1   98,530.0    4.7      567.3	7.0   90.0 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     97,384	      1   97,384.0    4.6      568.2	7.2   89.1 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
		--
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------


SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 156-1
-> UnOptimized Read Reqs = Physical Read Reqs -
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,106,061
-> Captured SQL account for    4.1% of Total
-> Total UnOptimized Read Requests:	  2,106,061
		-- so reset flags and counters before continuing
-> Captured SQL account for    4.1% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
		--
    105,399	105,399 	 1    105,399.0    0.0	  5.0 brqrryv4mja36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

		v_update_quota := FALSE;
    101,163	101,163 	 1    101,163.0    0.0	  4.8 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,883	100,883 	 1    100,883.0    0.0	  4.8 fvmjqn5q18rmh
		v_updates_cnt := 0;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,681	100,681 	 1    100,681.0    0.0	  4.8 1zv2tsmss11cb
Module: SQL*Plus
		v_selects_cnt := 0;
	END IF;
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo

_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    100,651	100,651 	 1    100,651.0    0.0	  4.8 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="50qajfy1p0v33"></a>50qajfy1p0v33</td><td class='awrnc'><pre_sqltext class="awr">WITH ash as
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
  (SELECT round((cast(sample_time as date) - :1) * 24 * 60 * 60, 0) as t,
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,379	100,379 	 1    100,379.0    0.0	  4.8 bqwwfnsg2f57w
Module: SQL*Plus
	  inst_id || '_' || session_id || '_' || session_serial# as sid,
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  decode(session_type,	'FOREGROUND',  1,  0) as session_type,
    100,318	100,318 	 1    100,318.0    0.0	  4.8 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
	  nvl(sql_id, 'null') as sql_id,
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,267	100,267 	 1    100,267.0    0.0	  4.8 8wrvc2gfamkva
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
	  nvl(sql_opcode, 0) as sql_opcode,
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    100,197	100,197 	 1    100,197.0    0.0	  4.8 26cgg6g31fq8p
Module: SQL*Plus
	  nvl(force_matching_signature, 0) as fms,
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 156-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
	  QC_INSTANCE_ID || '_' || QC_SESSION_ID || '_' || qc_session_serial# as qsid,
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,106,061
-> Captured SQL account for    4.1% of Total
-> Total UnOptimized Read Requests:	  2,106,061
	  decode(session_state,  'ON CPU',  'CPU',  event) as wait_event,
-> Captured SQL account for    4.1% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

	  decode(session_state,  'ON CPU',  'CPU',  wait_class) as wait_class,
UnOptimized   Physical		    UnOptimized
	  decode(blocking_session_status,  'VALID',  blocking_inst_id || '_' || BLOCKING_SESSION || '_' || BLOCKING_SESSION_SERIAL#,  '__') as bsid,
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  nvl(service_hash, 0) as service_hash,
    100,134	100,134 	 1    100,134.0    0.0	  4.8 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
	  nvl(program, '__') as program,
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

     99,920	 99,920 	 1     99,920.0    0.0	  4.7 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	  nvl(module, '__') as module,
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,794	 99,794 	 1     99,794.0    0.0	  4.7 5yrdyuwb16swu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
	  nvl(action, '__') as action,	 nvl(pga_allocated, 0) as pga ,  decode(in_connection_mgmt,  'Y',  1,  0)
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,734	 99,734 	 1     99,734.0    0.0	  4.7 30ha31267a7s2
Module: SQL*Plus
		     + decode(in_parse,  'Y',  2,  0)
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,581	 99,581 	 1     99,581.0    0.0	  4.7 1hq15n5g6psrm
		     + decode(in_hard_parse,  'Y',  4,	0)
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		     + decode(in_sql_execution,  'Y',  8,  0)
     99,298	 99,298 	 1     99,298.0    0.0	  4.7 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
		     + decode(in_plsql_execution,  'Y',  16,  0)
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,284	 99,284 	 1     99,284.0    0.0	  4.7 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		     + decode(in_plsql_rpc,  'Y',  32,	0)
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     99,138	 99,138 	 1     99,138.0    0.0	  4.7 7bd84p4z76t66
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
		     + decode(in_plsql_compilation,  'Y',  64,	0)
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     98,808	 98,808 	 1     98,808.0    0.0	  4.7 d3r94djtpj7r9

		     + decode(in_java_execution,  'Y',	128,  0)
SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 156-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,106,061
-> Captured SQL account for    4.1% of Total
		     + decode(in_bind,	'Y',  256,  0)
-> Total UnOptimized Read Requests:	  2,106,061
-> Captured SQL account for    4.1% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
		     + decode(in_cursor_close,	'Y',  512,  0) as tm   FROM   sys.gv_$active_session_history
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
   WHERE  sample_time &gt;= :2 and sample_time &lt;= :3
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     98,549	 98,549 	 1     98,549.0    0.0	  4.7 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
     AND  (session_state = 'ON CPU' or wait_class &lt;&gt; 'Idle')   AND
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     98,530	 98,530 	 1     98,530.0    0.0	  4.7 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
       ora_hash(inst_id || '_' || session_id || '_' || sample_id
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	       , 100000, 0) &lt;= (100000 / 47.15852045702746933333333333333333333333)	 ),
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     97,384	 97,384 	 1     97,384.0    0.0	  4.6 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
  map_op as ( SELECT xmlelement(&quot;op&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     85,377	 85,377    612,523	    0.1    0.0	  4.1 bhdvtsvjhgvrh
Module: SQL*Plus
	   v.command_type as &quot;i&quot;,  v.command_name as &quot;n&quot;
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			  ------------------------------------------------------


SQL ordered by Executions		 DB/Inst: P30DB/p30db1	Snaps: 156-157
	 )))) as x
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Executions:	     726,479
-> Captured SQL account for   99.4% of Total

					      Elapsed
 Executions   Rows Processed  Rows per Exec   Time (s)	%CPU   %IO    SQL Id
  FROM	 (SELECT distinct sql_opcode FROM ash WHERE sql_opcode &lt;&gt; 0) a ,
------------ --------------- -------------- ---------- ----- ----- -------------
     612,523	     612,541		1.0    9,947.5	 5.6  91.8 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

     108,129	     324,387		3.0    1,808.9	 6.6  89.4 35dumc2tpr9dv
	 sys.v_$sqlcommand v
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	 460		 452		1.0	   0.1	47.4	 0 24djtk7r8fz33
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
  WHERE  a.sql_opcode = v.command_type	),
2 AND tsn = :3 AND objid = :4

	 287		   1		0.0	   0.0 106.3	 0 87gaftwrm2h68
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

	 282		 282		1.0	   0.1	31.8  54.8 f3ww8rgva3hrs
  map_sql as
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	 164		 164		1.0	   0.1	80.1	 0 3dbzmtf9ahvzt
  (SELECT fms,	sql_opcode,  sql_id,  rownum as id
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	  92		  92		1.0	   0.2	13.1   9.6 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
   FROM   (SELECT fms,	sql_opcode,  max(sql_id) as sql_id
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	  42		  42		1.0	   0.2	13.9	 0 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	   FROM ash GROUP BY fms,  sql_opcode)
	  32		  32		1.0	   0.0 124.8	 0 6n2qqv1brfhpp
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
  ),
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

	  32		  32		1.0	   0.0	38.8	 0 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual
  map_sql_xml as

			  ------------------------------------------------------


SQL ordered by Parse Calls		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Parse Calls:		1,865
-> Captured SQL account for   64.1% of Total

  (SELECT xmlelement(&quot;sql&quot;, xmlagg(xmlelement(&quot;m&quot;,	xmlattributes(
			    % Total
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
	 460	      460     24.66 24djtk7r8fz33
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

	    fms as &quot;f&quot;,  sql_opcode as &quot;o&quot;,  sql_id as &quot;s&quot;,  id as &quot;i&quot;
	 164	      164      8.79 3dbzmtf9ahvzt
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	  92	       92      4.93 f7xnvp44nukp7
	  )))) as x
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	  77	      282      4.13 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
   FROM   map_sql
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	  42	       42      2.25 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
  ),
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	  32	       32      1.72 6n2qqv1brfhpp
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
  map_sid as
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

	  32	       32      1.72 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

	  30	       30      1.61 5cu0x10yu88sw
  (SELECT a,  rownum as id
merge into sys.wri$_index_usage iu us
ing dual on (
iu.obj# = :objn) when mat
ched then update

	  21	       21      1.13 9babjv8yq8ru3
Module: SQL*Plus
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;
   FROM   (SELECT sid as a FROM ash

	  20	       20      1.07 gjaap3w3qbf8c
select count(*) from ilmobj$ where rownum = 1

	  19	       19      1.02 grwydz59pu6mc
select text from view$ where rowid=:1
	   UNION
	   SELECT qsid as a FROM ash

			  ------------------------------------------------------
	   UNION


SQL ordered by Sharable Memory		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Only Statements with Sharable Memory greater than 1048576 are displayed
	   SELECT bsid as a FROM ash)

Sharable Mem (b)  Executions   % Total	  SQL Id
---------------- ------------ -------- -------------
       4,146,556	    1	  0.37 2xfg27zhudyay
  ),
  map_sid_xml as
WITH binds as (select :dbid as dbid ,
:inst_id_low as instIdLow , :inst_id_high as i
nstIdHigh , :begin_snap as beginSnap ,
:end_snap as endSnap , :begin_time as beg

  (SELECT xmlelement(&quot;sid&quot;, xmlagg(xmlelement(&quot;m&quot;,	xmlattributes(
       2,917,072	    1	  0.26 9sq9djzzhr19y
WITH binds as (select :dbid as dbid ,
:inst_id_low as instIdLow , :inst_id_high as i
nstIdHigh , :begin_snap as beginSnap ,
:end_snap as endSnap , :begin_time as beg

       1,995,762	    1	  0.18 5gy90wdbvc683
	     a as &quot;v&quot;,  id as &quot;i&quot;
 with base_metrics as ( select -- sum across all instances
 source, lpad(to_char(inst_id),5) || '/' || inst_name inst,
 bucket_id, id, name, sum(aas) aas, sum(aas_fg
) aas_fg, sum(aas_cpu) aas_cpu from table(sys.gv$(cursor

       1,734,728      108,129	  0.15 35dumc2tpr9dv
	   )))) as x
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

       1,523,767      612,523	  0.14 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )
   FROM   map_sid

       1,466,458	    1	  0.13 50qajfy1p0v33
WITH ash as (SELECT round((cast(sample_time as date) - :1) * 24 * 60 * 60,0) a
s t, inst_id || '_' || session_id || '_' || session_serial# as sid,
 decode(session_type, 'FOREGROUND', 1, 0) as session_type, nvl(
sql_id,'null') as sql_id, nvl(sql_opcode,0) as sql_opcode, n
  ),

       1,192,908	    1	  0.11 fg11facbfjwvx
 SELECT /*+ no_monitor leading(mo_px) use_hash(mo_px) */ xm
lelement( "sql_monitor_list_report", xmlattributes(
 :report_version as "version",
 :total_count as "total_count", to

  map_event as
			  ------------------------------------------------------


SQL ordered by Version Count		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Only Statements with Version Count greater than 20 are displayed

 Version
  Count   Executions	 SQL Id
  (SELECT wait_class,  wait_event,  rownum as id
-------- ------------ -------------
      52      108,129 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

      52      612,523 bhdvtsvjhgvrh
   FROM  (SELECT DISTINCT wait_class , wait_event FROM ash)
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			  ------------------------------------------------------


SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
  ),
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    635
  map_event_xml as
-> Captured SQL account for   99.1% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
	 517.6	    612,523   81.5    9,947.5	 5.2	5.6   91.8 bhdvtsvjhgvrh
  (SELECT xmlelement(&quot;evt&quot;, xmlagg(xmlelement(&quot;m&quot;,	xmlattributes(
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	 111.9	    108,129   17.6    1,808.9	 6.2	6.6   89.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	     wait_class as &quot;c&quot;,  wait_event as &quot;e&quot;,  id as &quot;i&quot;
	  35.4		  1    5.6	568.2	 6.2	7.2   89.1 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   )))) as x
	  35.3		  1    5.6	568.0	 6.2	7.2   89.2 d3r94djtpj7r9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
   FROM   map_event

	  34.5		  1    5.4	568.3	 6.1	7.1   89.4 26ka4yp1faxn2
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
  ),
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  33.2		  1    5.2	567.7	 5.9	7.0   89.6 7bd84p4z76t66
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
  map_service as
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  32.0		  1    5.0	568.2	 5.6	7.0   89.8 5yrdyuwb16swu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
  (SELECT a.service_hash as sh,  s.service_id as id,  s.name as name
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  31.0		  1    4.9	567.3	 5.5	7.0   90.0 11q6yr7k6svxf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '36'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
   FROM  (SELECT distinct service_hash from ash) a,
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  30.9		  1    4.9	567.9	 5.4	7.0   90.0 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
	 sys.v_$services s
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  30.7		  1    4.8	567.6	 5.4	6.9   90.1 4tjq41wp5wggf
Module: SQL*Plus

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
   WHERE s.name_hash = a.service_hash
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    635
  ),
-> Captured SQL account for   99.1% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
  map_service_xml as
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  30.4		  1    4.8	568.0	 5.4	7.0   90.2 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
  (SELECT xmlelement(&quot;service&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  30.0		  1    4.7	568.2	 5.3	6.9   90.2 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
	     sh as &quot;h&quot;,  name as &quot;n&quot;,  id as &quot;i&quot;
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  29.9		  1    4.7	568.0	 5.3	7.0   90.2 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
	   )))) as x
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  29.7		  1    4.7	568.2	 5.2	7.0   90.3 8wrvc2gfamkva
Module: SQL*Plus
   FROM   map_service
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  29.0		  1    4.6	568.2	 5.1	6.9   90.4 1zv2tsmss11cb
Module: SQL*Plus
  ),
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  28.9		  1    4.6	568.2	 5.1	7.0   90.4 bqwwfnsg2f57w
Module: SQL*Plus
  map_program as
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  28.9		  1    4.6	568.1	 5.1	6.9   90.5 72r567f4w1r2z
Module: SQL*Plus
  (SELECT program,  rownum as id
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
   FROM  (SELECT distinct program FROM ash)
  ),
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
  map_program_xml as
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  28.6		  1    4.5	568.2	 5.0	6.8   90.6 10yxz9a3s65pn
Module: SQL*Plus
  (SELECT xmlelement(&quot;program&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
	     program as &quot;v&quot;,	id as &quot;i&quot;
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    635
	  )))) as x
-> Captured SQL account for   99.1% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	  28.4		  1    4.5	567.8	 5.0	6.7   90.6 1hq15n5g6psrm
Module: SQL*Plus
   FROM   map_program
DECLARE v_default_schema_number PLS_INTEGER := '39'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  27.8		  1    4.4	568.1	 4.9	6.8   90.7 bhs63jbrb30ru
Module: SQL*Plus
  ),
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  27.4		  1    4.3	567.7	 4.8	6.7   90.8 30ha31267a7s2
Module: SQL*Plus
  map_module as
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  27.2		  1    4.3	568.2	 4.8	6.6   90.9 fvmjqn5q18rmh
  (SELECT module,  rownum as id
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  21.4		  1    3.4	568.2	 3.8	5.7   92.5 brqrryv4mja36
Module: SQL*Plus
   FROM  (SELECT distinct module FROM ash)
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	    .4		  0    0.1	  1.4	31.6   30.1   29.3 491wcfyfd6wc1
Module: SQL*Plus
  ),
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

	    .3		  1    0.1	  0.7	50.0   37.6	.0 a95n8p4vpxmps
begin prvt_hdm.execute_slave_actions; end;

	    .3		  1    0.1	  0.6	50.3   37.4	.0 drktaf71uygnb
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
 inst_id => :bind_inst, end_snap => :bind_snap, t
  map_module_xml as
ime_left_in_secs => :bind_time); END;

	    .2		 92    0.0	  0.2	82.8   13.1    9.6 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
  (SELECT xmlelement(&quot;module&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
	     module as &quot;v&quot;,  id as &quot;i&quot;
,:bind3,:step_id)

	  )))) as x
	    .1		 42    0.0	  0.2	87.1   13.9	.0 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

   FROM   map_module
	    .0		  1    0.0	  2.7	 0.8   57.1   24.7 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

  ),
SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
  map_action as
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    635
-> Captured SQL account for   99.1% of Total

  (SELECT action,  rownum as id
       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	    .0		  1    0.0	  2.6	 0.8   57.8   23.8 5k5207588w9ry
SELECT DBMS_REPORT.GET_REPORT(:B1 ) FROM DUAL

	    .0		  7    0.0	  0.0	65.5   27.6	.0 6wvzvgvg6qsyb
   FROM  (SELECT distinct action FROM ash)
INSERT INTO wri$_adv_findings (id, task_id, type, parent, obj_id, impact_msg_id,
 impact_val, msg_id, more_info_id, name_msg_code, flags, exec_name) VALUES (:1,
:2, :3, :4, :5, :6, :7,:8, :9, :10, :11, :12)

	    .0		282    0.0	  0.1	 4.3   31.8   54.8 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
  ),
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

			  ------------------------------------------------------


Key Instance Activity Stats		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name
  map_action_xml as

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
db block changes			    894,206	   1,479.0	     8.2
execute count				    726,479	   1,201.6	     6.7
gc cr block receive time			310	       0.5	     0.0
gc cr blocks received			      2,412	       4.0	     0.0
  (SELECT xmlelement(&quot;action&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
gc current block receive time			938	       1.6	     0.0
gc current blocks received		     12,656	      20.9	     0.1
logons cumulative				 95	       0.2	     0.0
opened cursors cumulative		    835,641	   1,382.2	     7.7
parse count (total)			      1,865	       3.1	     0.0
parse time elapsed				 13	       0.0	     0.0
physical reads				  2,106,679	   3,484.5	    19.4
physical writes 			    310,504	     513.6	     2.9
	     action as &quot;v&quot;,  id as &quot;i&quot;
redo size				303,106,912	 501,347.9	 2,789.1
session cursor cache hits		    834,360	   1,380.1	     7.7
session logical reads			  5,609,804	   9,278.8	    51.6
user calls					593	       1.0	     0.0
user commits				    108,674	     179.8	     1.0
user rollbacks					  0	       0.0	     0.0
workarea executions - optimal			569	       0.9	     0.0
	  )))) as x
			  ------------------------------------------------------


Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
   FROM   map_action
ASSM bg: segment fix monitor			  1	       0.0	     0.0
  ),
  ash_xml as
  (SELECT xmlelement(&quot;data&quot;, xmlagg(xmlelement(&quot;a&quot;,
	    ash.t || ', ' ||
	    ms1.id || ', ' ||
	    ash.session_type || ', ' ||
	    ms2.id || ', ' ||
	    ms3.id  || ', ' ||
	    msql.id  || ', ' ||
	    trunc(ash.pga/(1024*1024)) || ', ' ||
	    mp.id  || ', ' ||
	    ms.id  || ', ' ||
	    mm.id  || ', ' ||
	    ma.id  || ', ' ||
	    me.id  || ', ' ||
	    ash.tm
	  ))) as x
   FROM   ash,
	  map_sid ms1,	map_sid ms2,  map_sid ms3,
	  map_event me,
	  map_service ms,
	  map_program mp,
	  map_module mm,
	  map_action ma,
	  map_sql    msql
   WHERE  ash.sid = ms1.a
     AND  ash.qsid = ms2.a
     AND  ash.bsid = ms3.a
     AND  ash.wait_class = me.wait_class
     AND  ash.wait_event = me.wait_event
ASSM cbk:blocks examined			505	       0.8	     0.0
     AND  ash.service_hash = ms.sh
ASSM cbk:blocks marked full			131	       0.2	     0.0
     AND  ash.program = mp.program
ASSM gsp:L1 bitmaps examined			421	       0.7	     0.0
ASSM gsp:L2 bitmap full 			 11	       0.0	     0.0
ASSM gsp:L2 bitmaps examined			 67	       0.1	     0.0
ASSM gsp:Search all				 12	       0.0	     0.0
ASSM gsp:Search hint				 15	       0.0	     0.0
ASSM gsp:Search steal				  8	       0.0	     0.0
     AND  ash.module = mm.module
ASSM gsp:bump HWM				  8	       0.0	     0.0
ASSM gsp:get free block 			374	       0.6	     0.0
ASSM gsp:get free data block			296	       0.5	     0.0
     AND  ash.action = ma.action
ASSM gsp:get free index block			 78	       0.1	     0.0
ASSM gsp:good hint				334	       0.6	     0.0
ASSM rsv:fill reserve				  0	       0.0	     0.0
ASSM wasted db state change			  2	       0.0	     0.0
Batched IO (bound) vector count 		  0	       0.0	     0.0
     AND  ash.fms = msql.fms
Batched IO block miss count		    593,417	     981.5	     5.5
Batched IO buffer defrag count			  0	       0.0	     0.0
Batched IO double miss count		    593,417	     981.5	     5.5
Batched IO same unit count			  0	       0.0	     0.0
Batched IO single block count		    593,417	     981.5	     5.5
  )
Batched IO slow jump count			  0	       0.0	     0.0
Batched IO vector block count			  0	       0.0	     0.0
Batched IO vector read count			  0	       0.0	     0.0
Block Cleanout Optim referenced 		  5	       0.0	     0.0
CCursor + sql area evicted			 31	       0.1	     0.0
CPU used by this session		    116,549	     192.8	     1.1
SELECT xmlelement(&quot;ash_data&quot;,
CPU used when call started		     87,958	     145.5	     0.8
CR blocks created				998	       1.7	     0.0
Cached Commit SCN referenced		  1,631,159	   2,698.0	    15.0
Client Advertised Receive Window		147	       0.2	     0.0
Client Advertised Send Window			147	       0.2	     0.0
	  xmlattributes(round(:4, 4) as &quot;sampling_ratio&quot;,
Client Path Maximum Transmission	  1,376,235	   2,276.3	    12.7
Client Send Congestion Window			210	       0.4	     0.0
Client Time (usec) Last Ack Rece		 12	       0.0	     0.0
Client Time (usec) Last Data Rec		 12	       0.0	     0.0
Client Time (usec) Last Data Sen		 61	       0.1	     0.0
Client Time (usec) Round Trip Ti	     51,950	      85.9	     0.5
			round(:5, 4) as &quot;avg_active_sessions&quot;,
Client Time (usec) Round Trip Ti	     59,789	      98.9	     0.6
Client Total Bytes Acked		    332,228	     549.5	     3.1
Client Total Bytes Received		    128,228	     212.1	     1.2
Client Total Number of Retransmi		  0	       0.0	     0.0
Commit SCN cached				  0	       0.0	     0.0
			round((:6 - :7) * (24 * 60 * 60), 0) as &quot;secs&quot;),
DBWR checkpoint buffers written 	     17,425	      28.8	     0.2
DBWR checkpoints				 74	       0.1	     0.0
DBWR fusion writes				 60	       0.1	     0.0
DBWR object drop buffers written		 12	       0.0	     0.0
DBWR thread checkpoint buffers w		  0	       0.0	     0.0
DBWR transaction table writes			298	       0.5	     0.0
	  map_op.x,
DBWR undo block writes			     10,195	      16.9	     0.1
DFO trees parallelized				 55	       0.1	     0.0
Effective IO time			    140,119	     231.8	     1.3
HSC Heap Segment Block Changes		    327,188	     541.2	     3.0
Heap Segment Array Inserts			157	       0.3	     0.0
	  map_sid_xml.x,
Heap Segment Array Updates			 13	       0.0	     0.0
Heatmap Blklevel Flush Task Coun		  0	       0.0	     0.0
KTFB alloc req					 12	       0.0	     0.0
KTFB alloc space (block)		  7,667,712	  12,682.6	    70.6
KTFB alloc time (ms)			     53,666	      88.8	     0.5

	  map_event_xml.x,
Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
	  map_service_xml.x,
KTFB apply req					 23	       0.0	     0.0
KTFB apply time (ms)			      2,412	       4.0	     0.0
KTFB free req					 20	       0.0	     0.0
KTFB free space (block) 		      1,240	       2.1	     0.0
KTFB free time (ms)				339	       0.6	     0.0
	  map_program_xml.x,
LOB table id lookup cache misses		  0	       0.0	     0.0
PX local messages recv'd			644	       1.1	     0.0
PX local messages sent				644	       1.1	     0.0
PX remote messages recv'd			323	       0.5	     0.0
PX remote messages sent 			361	       0.6	     0.0
Parallel operations not downgrad		 84	       0.1	     0.0
	  map_module_xml.x,
Requests to/from client 			 70	       0.1	     0.0
SMON posted for undo segment shr		  8	       0.0	     0.0
SQL*Net roundtrips to/from clien		 50	       0.1	     0.0
TBS Extension: tasks created			  0	       0.0	     0.0
TBS Extension: tasks executed			  0	       0.0	     0.0
	  map_action_xml.x,
active txn count during cleanout		286	       0.5	     0.0
background checkpoints completed		  0	       0.0	     0.0
background checkpoints started			  0	       0.0	     0.0
background timeouts			      7,382	      12.2	     0.1
blocks cleaned out using minact 	    140,317	     232.1	     1.3
branch node splits				  0	       0.0	     0.0
	  map_sql_xml.x,
buffer is not pinned count		  4,377,431	   7,240.4	    40.3
buffer is pinned count			  1,561,176	   2,582.2	    14.4
bytes received via SQL*Net from 	     23,481	      38.8	     0.2
bytes sent via SQL*Net to client	     14,844	      24.6	     0.1
calls to get snapshot scn: kcmgs	    837,099	   1,384.6	     7.7
	  ash_xml.x
calls to kcmgas 			    213,123	     352.5	     2.0
calls to kcmgcs 			      3,063	       5.1	     0.0
cell physical IO interconnect by     23,730,356,224   39,250,718.2     218,362.8
change write time			      1,288	       2.1	     0.0
cleanout - number of ktugct call	      1,975	       3.3	     0.0
       ) as data
cleanouts and rollbacks - consis		 14	       0.0	     0.0
cleanouts only - consistent read		 40	       0.1	     0.0
cluster key scan block gets			121	       0.2	     0.0
cluster key scans				117	       0.2	     0.0
commit batch/immediate performed		  1	       0.0	     0.0
commit batch/immediate requested		  1	       0.0	     0.0
FROM   map_op,	map_sid_xml,  map_event_xml,  map_service_xml,
commit cleanout failures: block 		 14	       0.0	     0.0
commit cleanout failures: callba		  7	       0.0	     0.0
commit cleanout failures: cannot		  0	       0.0	     0.0
commit cleanouts			    326,849	     540.6	     3.0
commit cleanouts successfully co	    326,828	     540.6	     3.0
commit immediate performed			  1	       0.0	     0.0
       map_program_xml,  map_module_xml,  map_action_xml,
commit immediate requested			  1	       0.0	     0.0
commit txn count during cleanout		130	       0.2	     0.0
consistent changes			    974,944	   1,612.6	     9.0
consistent gets 			  5,022,753	   8,307.8	    46.2
consistent gets examination		  2,426,604	   4,013.7	    22.3
       map_sql_xml,  ash_xml </pre_sqltext></td></tr>
consistent gets examination (fas	  2,426,237	   4,013.1	    22.3
consistent gets from cache		  5,022,752	   8,307.8	    46.2
consistent gets pin			  2,596,148	   4,294.1	    23.9
consistent gets pin (fastpath)		    791,036	   1,308.4	     7.3
cursor authentications				 43	       0.1	     0.0
cursor reload failures				  0	       0.0	     0.0
data blocks consistent reads - u		 36	       0.1	     0.0
db block changes			    894,206	   1,479.0	     8.2
db block gets				    587,035	     971.0	     5.4
db block gets direct				683	       1.1	     0.0
db block gets from cache		    586,352	     969.8	     5.4

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
db block gets from cache (fastpa	    242,158	     400.5	     2.2
deferred (CURRENT) block cleanou	    140,814	     232.9	     1.3
dirty buffers inspected 		    274,212	     453.6	     2.5
enqueue conversions			      2,875	       4.8	     0.0
enqueue releases			    313,757	     519.0	     2.9
<tr><td scope="row" class='awrc'><a class="awr" name="5cu0x10yu88sw"></a>5cu0x10yu88sw</td><td class='awrc'><pre_sqltext class="awr">merge into sys.wri$_index_usage iu 					   using dual									 on (iu.obj# = :objn)							     when matched then								   update									set iu.total_access_count = iu.total_access_count + :ns,			  iu.total_rows_returned = iu.total_rows_returned + :rr,			iu.total_exec_count = iu.total_exec_count + :ne,			      iu.bucket_0_access_count = iu.bucket_0_access_count + :nsh0,		    iu.bucket_1_access_count = iu.bucket_1_access_count + :nsh1,		  iu.bucket_2_10_access_count = iu.bucket_2_10_access_count + :nsh2_10, 	iu.bucket_2_10_rows_returned = iu.bucket_2_10_rows_returned +							:nrh2_10,				   iu.bucket_11_100_access_count = iu.bucket_11_100_access_count +						   :nsh11_100,				      iu.bucket_11_100_rows_returned = iu.bucket_11_100_rows_returned + 					      :nrh11_100,				 iu.bucket_101_1000_access_count = iu.bucket_101_1000_access_count +						 :nsh101_1000,				    iu.bucket_101_1000_rows_returned = iu.bucket_101_1000_rows_returned +					    :nrh101_1000,			       iu.bucket_1000_plus_access_count = iu.bucket_1000_plus_access_count +					       :nsh1000plus,				  iu.bucket_1000_plus_rows_returned = iu.bucket_1000_plus_rows_returned 					  + :nrh1000plus,			     last_used = SYSDATE						     when NOT matched then							   insert (iu.obj#,  iu.total_access_count,						  iu.total_rows_returned,							iu.total_exec_count,							      iu.bucket_0_access_count, 						    iu.bucket_1_access_count,							  iu.bucket_2_10_access_count,							iu.bucket_2_10_rows_returned,						      iu.bucket_11_100_access_count,						    iu.bucket_11_100_rows_returned,						  iu.bucket_101_1000_access_count,						iu.bucket_101_1000_rows_returned,					      iu.bucket_1000_plus_access_count, 					    iu.bucket_1000_plus_rows_returned,						  iu.last_used) 						       values (:objn,  :ns,  :rr,							       :ne,  :nsh0,  :nsh1,  :nsh2_10,	:nrh2_10,  :nsh11_100,	:nrh11_100,		     :nsh101_1000,  :nrh101_1000,  :nsh1000plus,  :nrh1000plus, 		      SYSDATE)</pre_sqltext></td></tr>
enqueue requests			    313,740	     518.9	     2.9
enqueue timeouts				 11	       0.0	     0.0
enqueue waits					395	       0.7	     0.0
exchange deadlocks				  2	       0.0	     0.0
execute count				    726,479	   1,201.6	     6.7
fastpath consistent get quota li		  0	       0.0	     0.0
file io service time		      1,002,861,502    1,658,762.9	 9,228.2
<tr><td scope="row" class='awrnc'><a class="awr" name="5gy90wdbvc683"></a>5gy90wdbvc683</td><td class='awrnc'><pre_sqltext class="awr">
free buffer inspected			  2,139,134	   3,538.2	    19.7
free buffer requested			  2,124,376	   3,513.8	    19.6
gc blocks compressed			     17,694	      29.3	     0.2
gc blocks lost					  2	       0.0	     0.0
gc cleanout saved				 14	       0.0	     0.0
gc cr anti locks created		     26,402	      43.7	     0.2
    with base_metrics as (
gc cr anti locks expanded			239	       0.4	     0.0
gc cr anti locks shrunk 			192	       0.3	     0.0
gc cr block build time				268	       0.4	     0.0
gc cr block flush time				 17	       0.0	     0.0
gc cr block receive time			310	       0.5	     0.0
gc cr blocks built			      4,113	       6.8	     0.0
gc cr blocks flushed				 36	       0.1	     0.0
gc cr blocks received			      2,412	       4.0	     0.0
gc cr blocks served			      5,606	       9.3	     0.1
gc cr multiblock grant time			  0	       0.0	     0.0
      select -- sum across all instances
gc cr multiblock grants received		  7	       0.0	     0.0
gc current block flush time			 43	       0.1	     0.0
gc current block pin time			  0	       0.0	     0.0
gc current block receive time			938	       1.6	     0.0
gc current blocks flushed			 57	       0.1	     0.0
gc current blocks pinned			  1	       0.0	     0.0
	     source,
gc current blocks received		     12,656	      20.9	     0.1
gc current blocks served		     14,120	      23.4	     0.1
gc force cr read cr				 49	       0.1	     0.0
gc force cr read current			  2	       0.0	     0.0
gc kbytes saved 			     73,582	     121.7	     0.7
	     lpad(to_char(inst_id), 5) || '/' || inst_name inst,
gc kbytes sent				     84,226	     139.3	     0.8
gc local grants 			  1,070,910	   1,771.3	     9.9
gc merge pi bg					  2	       0.0	     0.0
gc merge pi fg					 80	       0.1	     0.0
gc no change made				  0	       0.0	     0.0
gc read time waited				  1	       0.0	     0.0
	     bucket_id,  id,  name,
gc read waits					  3	       0.0	     0.0
gc reader bypass grants 			 18	       0.0	     0.0
gc reader bypass waits				  6	       0.0	     0.0
gc remote grants			  1,044,112	   1,727.0	     9.6
gc status messages received		    945,235	   1,563.5	     8.7
gc status messages sent 		    847,090	   1,401.1	     7.8
	     sum(aas)  aas,
gcs affinity lock grants		      1,193	       2.0	     0.0
gcs anti-locks created			     26,356	      43.6	     0.2
	     sum(aas_fg) aas_fg,
gcs data block access records		  2,121,755	   3,509.5	    19.5
gcs messages sent			  2,461,292	   4,071.1	    22.7
gcs read-mostly lock failures		     17,083	      28.3	     0.2
	     sum(aas_cpu) aas_cpu
gcs read-mostly lock grants		     90,124	     149.1	     0.8
gcs stats management (SCM) proce		  0	       0.0	     0.0
ges messages sent			      2,825	       4.7	     0.0
global enqueue get time 			541	       0.9	     0.0

	from table(sys.gv$(cursor
Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
global enqueue gets async			  0	       0.0	     0.0
global enqueue gets sync		    139,834	     231.3	     1.3
	  (select -- pick only first data point per bucket/id combination
global enqueue releases 		    139,060	     230.0	     1.3
heap block compress			      6,912	      11.4	     0.1
hot buffers moved to head of LRU	     88,262	     146.0	     0.8
immediate (CR) block cleanout ap		 54	       0.1	     0.0
immediate (CURRENT) block cleano		236	       0.4	     0.0
index crx upgrade (positioned)			  0	       0.0	     0.0
		  source,
index fast full scans (full)			  1	       0.0	     0.0
index fetch by key			      2,112	       3.5	     0.0
index range scans			    724,900	   1,199.0	     6.7
index reclamation/extension swit		  0	       0.0	     0.0
leaf node 90-10 splits				  4	       0.0	     0.0
leaf node splits				 78	       0.1	     0.0
lob reads					149	       0.3	     0.0
lob writes					239	       0.4	     0.0
lob writes unaligned				238	       0.4	     0.0
logical read bytes from cache	     45,949,779,968   76,002,309.0     422,822.2
logons cumulative				 95	       0.2	     0.0
max cf enq hold time				  0	       0.0	     0.0
messages received			    129,308	     213.9	     1.2
messages sent				    129,308	     213.9	     1.2
min active SCN optimization appl		  0	       0.0	     0.0
no work - consistent read gets		  2,588,879	   4,282.1	    23.8
non-idle wait count			  4,529,237	   7,491.5	    41.7
opened cursors cumulative		    835,641	   1,382.2	     7.7
parse count (describe)				  1	       0.0	     0.0
parse count (failures)				  0	       0.0	     0.0
parse count (hard)				 34	       0.1	     0.0
parse count (total)			      1,865	       3.1	     0.0
parse time cpu					 10	       0.0	     0.0
parse time elapsed				 13	       0.0	     0.0
physical read IO requests		  2,106,061	   3,483.5	    19.4
physical read bytes		     17,257,914,368   28,545,106.0     158,804.5
physical read total IO requests 	  2,109,783	   3,489.6	    19.4
physical read total bytes	     17,942,588,416   29,677,577.3     165,104.7
physical read total multi block 		638	       1.1	     0.0
physical reads				  2,106,679	   3,484.5	    19.4
physical reads cache			  2,106,641	   3,484.5	    19.4
physical reads cache prefetch			620	       1.0	     0.0
physical reads direct				 38	       0.1	     0.0
physical reads direct (lob)			 38	       0.1	     0.0
physical reads direct temporary 		  0	       0.0	     0.0
physical reads prefetch warmup			  0	       0.0	     0.0
physical write IO requests		    298,704	     494.1	     2.8
physical write bytes		      2,543,648,768    4,207,271.1	23,406.2
physical write total IO requests	    401,893	     664.7	     3.7
physical write total bytes	      2,889,312,768    4,779,009.7	26,587.0
physical write total multi block		609	       1.0	     0.0
physical writes 			    310,504	     513.6	     2.9
physical writes direct				692	       1.1	     0.0
physical writes direct (lob)			  9	       0.0	     0.0
physical writes direct temporary		616	       1.0	     0.0
physical writes from cache		    309,812	     512.4	     2.9
physical writes non checkpoint		    299,984	     496.2	     2.8
pinned buffers inspected			741	       1.2	     0.0
prefetch warmup blocks aged out 		  0	       0.0	     0.0
prefetched blocks aged out befor		  0	       0.0	     0.0
process last non-idle time			635	       1.1	     0.0
queries parallelized				  0	       0.0	     0.0

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
recursive calls 			    960,120	   1,588.1	     8.8
recursive cpu usage			    110,726	     183.1	     1.0
redo KB read				    358,288	     592.6	     3.3
redo blocks checksummed by FG (e	    196,564	     325.1	     1.8
redo blocks written			    657,430	   1,087.4	     6.1
redo blocks written (group 0)		    477,149	     789.2	     4.4
redo blocks written (group 1)		    180,281	     298.2	     1.7
redo buffer allocation retries			  0	       0.0	     0.0
redo entries				    468,236	     774.5	     4.3
redo log space requests 			  0	       0.0	     0.0
redo size				303,106,912	 501,347.9	 2,789.1
redo size for direct writes			224	       0.4	     0.0
redo subscn max counts				 96	       0.2	     0.0
redo synch long waits				  0	       0.0	     0.0
redo synch time 				  1	       0.0	     0.0
redo synch time (usec)			     24,301	      40.2	     0.2
redo synch time overhead (usec) 		619	       1.0	     0.0
redo synch time overhead count (		  6	       0.0	     0.0
redo synch time overhead count (		  0	       0.0	     0.0
redo synch writes				 23	       0.0	     0.0
redo wastage				 22,814,820	  37,736.4	   209.9
redo write active strands		    102,598	     169.7	     0.9
redo write broadcast ack count			  3	       0.0	     0.0
redo write broadcast ack time		      2,419	       4.0	     0.0
redo write finish time			497,383,846	 822,687.7	 4,576.8
redo write gather time			 23,217,494	  38,402.4	   213.6
redo write info find				  6	       0.0	     0.0
redo write schedule time		 24,603,756	  40,695.4	   226.4
redo write size count (   4KB)		     64,678	     107.0	     0.6
redo write size count (   8KB)		     32,365	      53.5	     0.3
redo write size count (  16KB)		      2,928	       4.8	     0.0
redo write size count (  32KB)			103	       0.2	     0.0
redo write size count ( 128KB)			 45	       0.1	     0.0
redo write size count ( 256KB)			  4	       0.0	     0.0
redo write size count ( 512KB)			  1	       0.0	     0.0
redo write size count (1024KB)			  0	       0.0	     0.0
redo write time 			     50,149	      83.0	     0.5
redo write time (usec)			501,495,194	 829,488.0	 4,614.7
redo write total time			508,891,331	 841,721.5	 4,682.7
redo write worker delay (usec)		 13,031,683	  21,554.8	   119.9
redo write worker delay count		    100,123	     165.6	     0.9
redo writes				    100,123	     165.6	     0.9
redo writes (group 0)			     61,846	     102.3	     0.6
redo writes (group 1)			     38,277	      63.3	     0.4
redo writes adaptive all		    100,123	     165.6	     0.9
redo writes adaptive worker		    100,123	     165.6	     0.9
rollback changes - undo records 		  0	       0.0	     0.0
rollbacks only - consistent read		  7	       0.0	     0.0
root node splits				  0	       0.0	     0.0
rows fetched via callback		      1,010	       1.7	     0.0
securefile allocation bytes		     73,728	     122.0	     0.7
securefile allocation chunks			  1	       0.0	     0.0
securefile bytes non-transformed	     66,616	     110.2	     0.6
securefile direct read bytes		    311,296	     514.9	     2.9
securefile direct read ops			 38	       0.1	     0.0
securefile direct write bytes		     73,728	     122.0	     0.7
securefile direct write ops			  1	       0.0	     0.0
securefile number of non-transfo		  1	       0.0	     0.0
segment cfs allocations 			  0	       0.0	     0.0
segment chunks allocation from d		  1	       0.0	     0.0

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
segment dispenser allocations			  1	       0.0	     0.0
segment dispenser load empty			  0	       0.0	     0.0
segment dispenser load tasks			  0	       0.0	     0.0
segment prealloc bytes				  0	       0.0	     0.0
segment prealloc ops				  3	       0.0	     0.0
segment prealloc tasks				  0	       0.0	     0.0
segment prealloc time (ms)			928	       1.5	     0.0
session connect time			      4,614	       7.6	     0.0
session cursor cache hits		    834,360	   1,380.1	     7.7
session logical reads			  5,609,804	   9,278.8	    51.6
shared hash latch upgrades - no 	    831,373	   1,375.1	     7.7
shared hash latch upgrades - wai		  0	       0.0	     0.0
shared io pool buffer get succes		 39	       0.1	     0.0
sorts (memory)					310	       0.5	     0.0
sorts (rows)				    733,163	   1,212.7	     6.8
sql area evicted				 34	       0.1	     0.0
sql area purged 				  9	       0.0	     0.0
summed dirty queue length		  1,471,975	   2,434.7	    13.5
switch current caused by our pin		 88	       0.2	     0.0
switch current to new buffer			 92	       0.2	     0.0
table fetch by rowid			  2,442,504	   4,040.0	    22.5
table fetch continued row			  5	       0.0	     0.0
table scan blocks gotten		      7,250	      12.0	     0.1
table scan disk non-IMC rows got	    332,247	     549.6	     3.1
table scan rows gotten			    332,247	     549.6	     3.1
table scans (short tables)			384	       0.6	     0.0
temp space allocated (bytes)			  0	       0.0	     0.0
total cf enq hold time			      2,844	       4.7	     0.0
total number of cf enq holders			150	       0.3	     0.0
total number of times SMON poste		  8	       0.0	     0.0
transaction lock background get 		  0	       0.0	     0.0
transaction lock background gets		  0	       0.0	     0.0
transaction lock foreground requ		  0	       0.0	     0.0
transaction rollbacks				  0	       0.0	     0.0
		  i.instance_number   inst_id,
transaction tables consistent re		  0	       0.0	     0.0
transaction tables consistent re	    973,973	   1,611.0	     9.0
undo change vector size 		119,280,688	 197,293.8	 1,097.6
user calls					593	       1.0	     0.0
user commits				    108,674	     179.8	     1.0
user logons cumulative				  1	       0.0	     0.0
		  i.instance_name     inst_name,
user logouts cumulative 			 22	       0.0	     0.0
user rollbacks					  0	       0.0	     0.0
		  bucket_id,  id,  name,
workarea executions - optimal			569	       0.9	     0.0
write clones created in foregrou		  3	       0.0	     0.0
			  ------------------------------------------------------


		  aas,
Instance Activity Stats - Absolute ValuesDB/Inst: P30DB/p30db1	Snaps: 156-157
-> Statistics with absolute values (should not be diffed)

Statistic			     Begin Value       End Value
		  aas_fg,
-------------------------------- --------------- ---------------
logons current				     111	      90
opened cursors current			     200	     114
session cursor cache count		   5,469	   5,574
		  aas_cpu
session pga memory		     642,739,504     530,225,608
session pga memory max		     780,076,912     668,691,496
session uga memory		     402,081,984     373,086,400
session uga memory max		   4,598,616,328   4,855,264,480
			  ------------------------------------------------------

Instance Activity Stats - Thread ActivityDB/Inst: P30DB/p30db1	Snaps: 156-157
	     from v$instance i,
-> Statistics identified by '(derived)' come from sources other than SYSSTAT

Statistic				      Total  per Hour
-------------------------------- ------------------ ---------
log switches (derived)				  0	  .00
			  ------------------------------------------------------

IOStat by Function summary		 DB/Inst: P30DB/p30db1	Snaps: 156-157
	      (select -- determine first data point in bucket
		      source,  bucket_id,  id,	name,
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> ordered by (Data Read + Write) desc

		 Reads:  Reqs	 Data	Writes:  Reqs	 Data	 Waits:    Avg
Function Name	   Data per sec per sec    Data per sec per sec   Count    Time
--------------- ------- ------- ------- ------- ------- ------- ------- --------
		      row_number() over
Buffer Cache Re     16G  3469.9 27.119M      0M     0.0      0M    2.1M   5.15ms
DBWR		     0M     0.0      0M    2.4G   494.1  4.009M       0
Others		   653M     6.2   1.08M     11M     1.0   .018M    2520   4.75ms
LGWR		     0M     0.0      0M    320M   169.2   .529M   99.8K   4.70ms
Direct Reads	     0M     0.1      0M      2M     0.0   .003M       0
Direct Writes	     0M     0.0      0M      1M     0.0   .002M       0
TOTAL:		  16.6G  3476.2   28.2M    2.7G   664.3  4.562M    2.2M   5.13ms
				     (partition by bucket_id,  id
			  ------------------------------------------------------

IOStat by Filetype summary		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Small Read and Large Read are average service times
-> Ordered by (Data Read + Write) desc

		Reads:	Reqs	Data   Writes:	Reqs	Data	  Small    Large
					  order by aas desc nulls last,  id) rn,
Filetype Name	  Data per sec per sec	  Data per sec per sec	   Read     Read
-------------- ------- ------- ------- ------- ------- ------- -------- --------
Data File	   16G	3470.5 27.113M	  2.4G	 494.1	4.008M	 4.61ms
Log File	  606M	   1.2	1.002M	  320M	 169.2	 .529M	  .00ns 1410.89m
Control File	   47M	   5.0	 .078M	    9M	   0.9	 .015M	 2.82ms
Temp File	    5M	   0.1	 .008M	    4M	   0.1	 .007M	 3.58ms  12.33ms
		      aas,  aas_fg,  aas_cpu
TOTAL:		 16.7G	3476.7 28.201M	  2.7G	 664.3	4.559M	 4.61ms 1397.74m
			  ------------------------------------------------------

IOStat by Function/Filetype summary	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Ordered by (Data Read + Write) desc for each function

		 from
  Reads:  Reqs	  Data	 Writes:  Reqs	  Data	  Waits:      Avg
    Data per sec per sec    Data per sec per sec   Count     Time
 ------- ------- ------- ------- ------- ------- ------- ----------
Buffer Cache Reads
		 (
     select 'waitclass' source,
	   wc.wait_class# id,  e.wait_class name,
	   trunc(
	    ( (extract(day from
	      (cast(trunc(end_time, 'mi') as timestamp) -
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
				      as timestamp))) * 86400 +
	       extract(hour from
	      (cast(trunc(end_time, 'mi') as timestamp) -
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
				       as timestamp))) * 3600 +
	       extract(minute from
	      (cast(trunc(end_time, 'mi') as timestamp) -
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
				       as timestamp))) * 60 +
	       extract(second from
	      (cast(trunc(end_time, 'mi') as timestamp) -
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
					    as timestamp))) )
	     / :p_bucket_interval)) + 1 	  bucket_id,
	   wc.time_waited/intsize_csec			  aas,
	   wc.time_waited_fg/intsize_csec		  aas_fg,
	   null aas_cpu
      from v$waitclassmetric_history wc,
	   v$system_wait_class e
     where wc.wait_class# = e.wait_class#
       and e.wait_class  != 'Idle'
     16G  3468.8  27.11M      0M     0.0      0M    2.1M     5.15ms
 Buffer Cache Reads (Data File)
     16G  3468.7 27.101M      0M     0.0      0M    2.1M     5.15ms
       and wc.end_time &gt;= to_date(:b_start_time, :date_fmt)
 Buffer Cache Reads (Temp File)
      5M     0.1   .008M      0M     0.0      0M      44     5.27ms
DBWR
      0M     0.0      0M    2.4G   494.1  4.009M       0
 DBWR (Data File)
      0M     0.0      0M    2.4G   494.1  4.008M       0
       and wc.end_time &lt;  to_date(:b_end_time, :date_fmt)
 DBWR (Temp File)
      0M     0.0      0M      1M     0.0   .002M       0
Others
    652M     6.2  1.078M     11M     1.0   .018M    2241     4.26ms
     union all
 Others (Log File)
    606M     1.2  1.002M      0M     0.0      0M      65   202.92us
 Others (Control File)
     46M     5.0   .076M      9M     0.9   .015M    2168     4.39ms
 Others (Temp File)
      0M     0.0      0M      2M     0.0   .003M       0
    select 'waitclass' source,
 Others (Data File)
      0M     0.0      0M      0M     0.0      0M       8     3.34ms
 LGWR (Log File)
      0M     0.0      0M    320M   169.2   .529M       0
LGWR
      0M     0.0      0M    320M   169.2   .529M       0
	   metric_id id,  metric_name name,
 Direct Reads (Temp File)
      0M     0.0      0M      2M     0.0   .003M       0
Direct Reads
      0M     0.1      0M      2M     0.0   .003M       0
 Direct Reads (Data File)
      0M     0.1      0M      0M     0.0      0M       0
	   trunc(
 Direct Writes (Temp File)
	    ( (extract(day from
      0M     0.0      0M      1M     0.0   .002M       0
Direct Writes
      0M     0.0      0M      1M     0.0   .002M       0
TOTAL:
   16.6G  3475.0 28.188M    2.7G   664.3  4.562M    2.1M     5.15ms
			  ------------------------------------------------------
	      (cast(trunc(end_time, 'mi') as timestamp) -


Tablespace IO Stats			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')

File IO Stats				 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------


				      as timestamp))) * 86400 +
Buffer Pool Statistics			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Standard block size Pools  D: default,  K: keep,  R: recycle
-> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k

							    Free   Writ   Buffer
	       extract(hour from
     Number of Pool	  Buffer     Physical	 Physical   Buff   Comp     Busy
P      Buffers Hit%	    Gets	Reads	   Writes   Wait   Wait    Waits
--- ---------- ---- ------------ ------------ ----------- ------ ------ --------
D      932,000	 62    5,612,545    2,107,354	  309,812      0      0        1
			  ------------------------------------------------------

	      (cast(trunc(end_time, 'mi') as timestamp) -
Checkpoint Activity			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Physical Writes:		       310,504

					  Other    Autotune	 Thread
       MTTR    Log Size    Log Ckpt    Settings        Ckpt	   Ckpt
     Writes	 Writes      Writes	 Writes      Writes	 Writes
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
----------- ----------- ----------- ----------- ----------- -----------
	  0	      0 	  0	      0      17,425	      0
			  ------------------------------------------------------

Instance Recovery Stats 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> B: Begin Snapshot,  E: End Snapshot
				       as timestamp))) * 3600 +

									    Estd
  Targt  Estd					  Log Ckpt Log Ckpt    Opt   RAC
  MTTR	 MTTR Recovery	Actual	 Target   Log Sz   Timeout Interval    Log Avail
   (s)	  (s) Estd IOs RedoBlks RedoBlks RedoBlks RedoBlks RedoBlks  Sz(M)  Time
- ----- ----- -------- -------- -------- -------- -------- -------- ------ -----
	       extract(minute from
B     0     7	 22662	  44351   780840 1.70E+07   780840	N/A    N/A     2
E     0    43	 54032	 308464  1335708 1.70E+07  1335708	N/A    N/A    16
			  ------------------------------------------------------

MTTR Advisory				      DB/Inst: P30DB/p30db1  Snap: 157

	      (cast(trunc(end_time, 'mi') as timestamp) -
		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffer Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 157
-> Only rows with estimated physical reads >0 are displayed
-> ordered by Block Size, Buffers For Estimate

	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
				    Est
				   Phys      Estimated			Est
    Size for   Size	 Buffers   Read     Phys Reads	   Est Phys %DBtime
P    Est (M) Factor  (thousands) Factor    (thousands)	  Read Time for Rds
--- -------- ------ ------------ ------ -------------- ------------ -------
				       as timestamp))) * 60 +
D	 800	 .1	      93    1.2 	14,264		  1 6.3E+04
	       extract(second from
D      1,600	 .2	     186    1.1 	13,197		  1 5.8E+04
	      (cast(trunc(end_time, 'mi') as timestamp) -
D      2,400	 .3	     280    1.1 	12,655		  1 5.6E+04
D      3,200	 .4	     373    1.0 	12,376		  1 5.4E+04
D      4,000	 .5	     466    1.0 	12,218		  1 5.4E+04
D      4,800	 .6	     559    1.0 	12,118		  1 5.3E+04
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
D      5,600	 .7	     652    1.0 	12,048		  1 5.3E+04
D      6,400	 .8	     746    1.0 	11,988		  1 5.3E+04
					    as timestamp))) )
D      7,200	 .9	     839    1.0 	11,936		  1 5.2E+04
D      8,000	1.0	     932    1.0 	11,886		  1 5.2E+04
D      8,800	1.1	   1,025    1.0 	11,840		  1 5.2E+04
D      9,600	1.2	   1,118    1.0 	11,796		  1 5.2E+04
D     10,400	1.3	   1,212    1.0 	11,756		  1 5.2E+04
D     11,200	1.4	   1,305    1.0 	11,719		  1 5.1E+04
	     / :p_bucket_interval)) + 1 	  bucket_id,
D     12,000	1.5	   1,398    1.0 	11,681		  1 5.1E+04
D     12,800	1.6	   1,491    1.0 	11,645		  1 5.1E+04
D     13,600	1.7	   1,584    1.0 	11,612		  1 5.1E+04
D     14,400	1.8	   1,678    1.0 	11,580		  1 5.1E+04
D     15,200	1.9	   1,771    1.0 	11,545		  1 5.1E+04
D     16,000	2.0	   1,864    1.0 	11,515		  1 5.0E+04
	   decode(metric_name, 'CPU Usage Per Sec',
			  ------------------------------------------------------


PGA Aggr Summary			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory

PGA Cache Hit %   W/A MB Processed  Extra W/A MB Read/Written
		  value/100,  value)			   aas,
--------------- ------------------ --------------------------
	  100.0 	       195			    0
			  ------------------------------------------------------

PGA Aggr Target Stats			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> B: Begin Snap   E: End Snap (rows dentified with B or E contain data
	   decode(metric_name, 'CPU Usage Per Sec',
   which is absolute i.e. not diffed over the interval)
-> Auto PGA Target - actual workarea memory target
-> W/A PGA Used    - amount of memory used for all Workareas (manual + auto)
-> %PGA W/A Mem    - percentage of PGA memory allocated to workareas
-> %Auto W/A Mem   - percentage of workarea memory controlled by Auto Mem Mgmt
-> %Man W/A Mem    - percentage of workarea memory under manual control
		  value/100,  value)			aas_fg,

						%PGA  %Auto   %Man
    PGA Aggr   Auto PGA   PGA Mem    W/A PGA	 W/A	W/A    W/A Global Mem
   Target(M)  Target(M)  Alloc(M)    Used(M)	 Mem	Mem    Mem   Bound(K)
- ---------- ---------- ---------- ---------- ------ ------ ------ ----------
B      3,215	  1,880    1,341.4	  0.0	  .0	 .0	.0    329,210
	   null aas_cpu
E      3,215	  1,972    1,223.4	  0.0	  .0	 .0	.0    329,210
			  ------------------------------------------------------

PGA Aggr Target Histogram		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Optimal Executions are purely in-memory operations

  Low	  High
      from v$sysmetric_history s
Optimal Optimal    Total Execs	Optimal Execs 1-Pass Execs M-Pass Execs
------- ------- -------------- -------------- ------------ ------------
     2K      4K 	   312		  312		 0	      0
    64K    128K 	    51		   51		 0	      0
   128K    256K 	    22		   22		 0	      0
   256K    512K 	    10		   10		 0	      0
     where group_id = :b_minute_group_id
   512K   1024K 	    87		   87		 0	      0
     1M      2M 	    78		   78		 0	      0
     2M      4M 	     9		    9		 0	      0
			  ------------------------------------------------------

       and end_time &gt;= to_date(:b_start_time, :date_fmt)
PGA Memory Advisory			      DB/Inst: P30DB/p30db1  Snap: 157
-> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value
   where Estd PGA Overalloc Count is 0

				       Estd Extra    Estd P Estd PGA
PGA Target    Size	     W/A MB   W/A MB Read/    Cache Overallo	Estd
       and end_time &lt;  to_date(:b_end_time, :date_fmt)
  Est (MB)   Factr	  Processed Written to Disk   Hit %    Count	Time
---------- ------- ---------------- ---------------- ------ -------- -------
       402     0.1	    8,009.7	     2,957.1   73.0	  40 2.7E+07
       804     0.3	    8,009.7	     2,672.9   75.0	  25 2.7E+07
     1,608     0.5	    8,009.7	     2,194.0   78.0	   0 2.6E+07
     2,411     0.8	    8,009.7	     2,194.0   78.0	   0 2.6E+07
       and metric_name in ('CPU Usage Per Sec',
     3,215     1.0	    8,009.7		 0.0  100.0	   0 2.0E+07
     3,858     1.2	    8,009.7		 0.0  100.0	   0 2.0E+07
     4,501     1.4	    8,009.7		 0.0  100.0	   0 2.0E+07
     5,144     1.6	    8,009.7		 0.0  100.0	   0 2.0E+07
     5,787     1.8	    8,009.7		 0.0  100.0	   0 2.0E+07
     6,430     2.0	    8,009.7		 0.0  100.0	   0 2.0E+07
			   'Average Active Sessions')
     9,645     3.0	    8,009.7		 0.0  100.0	   0 2.0E+07
    12,860     4.0	    8,009.7		 0.0  100.0	   0 2.0E+07
    19,290     6.0	    8,009.7		 0.0  100.0	   0 2.0E+07
    25,720     8.0	    8,009.7		 0.0  100.0	   0 2.0E+07
			  ------------------------------------------------------



Shared Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 157
-> SP: Shared Pool     Est LC: Estimated Library Cache	 Factr: Factor
-> Note there is often a 1:Many correlation between a single logical object
   in the Library Cache, and the physical number of memory objects associated
   with it.  Therefore comparing the number of Lib Cache objects (e.g. in
		   union all
   v$librarycache), with the number of Lib Cache Memory Objects is invalid.

				       Est LC Est LC  Est LC Est LC
  Shared    SP	 Est LC 		 Time	Time	Load   Load	  Est LC
    Pool  Size	   Size       Est LC	Saved  Saved	Time   Time	 Mem Obj
 Size(M) Factr	    (M)      Mem Obj	  (s)  Factr	 (s)  Factr	Hits (K)
    select 'servicestat' source,
-------- ----- -------- ------------ -------- ------ ------- ------ ------------
   1,280    .9	     17        1,562	7,801	 1.0	 258	4.7	     942
   1,312    .9	     48        2,131	7,883	 1.0	 176	3.2	     946
   1,344    .9	     79        2,587	7,936	 1.0	 123	2.2	     949
   1,376   1.0	    110        3,207	7,962	 1.0	  97	1.8	     950
   1,408   1.0	    140        4,073	7,991	 1.0	  68	1.2	     951
	   service_name_hash id,  service_name name,
   1,440   1.0	    171        5,853	8,004	 1.0	  55	1.0	     952
   1,472   1.0	    203        6,822	8,004	 1.0	  55	1.0	     952
   1,504   1.0	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,536   1.1	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,568   1.1	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,600   1.1	    221        7,528	8,004	 1.0	  55	1.0	     952
	   trunc(
   1,632   1.1	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,664   1.2	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,696   1.2	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,728   1.2	    221        7,528	8,004	 1.0	  55	1.0	     952
	    ( (extract(day from
   1,760   1.2	    221        7,528	8,004	 1.0	  55	1.0	     952
   1,920   1.3	    221        7,528	8,004	 1.0	  55	1.0	     952
	      (cast(trunc(end_time, 'mi') as timestamp) -
   2,080   1.4	    221        7,528	8,004	 1.0	  55	1.0	     952
   2,240   1.6	    221        7,528	8,004	 1.0	  55	1.0	     952
   2,400   1.7	    221        7,528	8,004	 1.0	  55	1.0	     952
   2,560   1.8	    221        7,528	8,004	 1.0	  55	1.0	     952
   2,720   1.9	    221        7,528	8,004	 1.0	  55	1.0	     952
   2,880   2.0	    221        7,528	8,004	 1.0	  55	1.0	     952
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
			  ------------------------------------------------------

SGA Target Advisory			      DB/Inst: P30DB/p30db1  Snap: 157

SGA Target   SGA Size	    Est DB     Est Physical
  Size (M)     Factor	  Time (s)	      Reads
---------- ---------- ------------ ----------------
				      as timestamp))) * 86400 +
     2,416	  0.3	    69,520	 14,263,705
     3,624	  0.4	    64,481	 13,196,305
     4,832	  0.5	    60,621	 12,376,142
     6,040	  0.6	    59,612	 12,118,206
     7,248	  0.8	    59,075	 12,046,888
     8,456	  0.9	    58,550	 11,936,344
     9,664	  1.0	    58,317	 11,886,421
	       extract(hour from
    10,872	  1.1	    57,891	 11,796,084
    12,080	  1.3	    57,646	 11,718,822
    13,288	  1.4	    57,349	 11,680,786
    14,496	  1.5	    57,022	 11,611,845
    15,704	  1.6	    56,877	 11,579,751
    16,912	  1.8	    56,567	 11,514,376
    18,120	  1.9	    56,567	 11,514,376
	      (cast(trunc(end_time, 'mi') as timestamp) -
    19,328	  2.0	    56,567	 11,514,376
			  ------------------------------------------------------

Streams Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 157

		  No data exists for this section of the report.
			  ------------------------------------------------------

	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
Java Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 157

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffer Wait Statistics			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by wait time desc, waits desc
				       as timestamp))) * 3600 +

Class			 Waits Total Wait Time (s)  Avg Time (ms)
------------------ ----------- ------------------- --------------
undo block		     1			 0		0
			  ------------------------------------------------------


	       extract(minute from
Enqueue Activity			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
	      (cast(trunc(end_time, 'mi') as timestamp) -
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
CR-Reuse Block Range (block range reuse ckpt)
	 248	      248	    0	       84	     0		 2.71
RO-Multiple Object Reuse (fast object reuse)
	 420	      420	    0	       84	     0		  .98
PS-PX Process Reservation
	 591	      591	    0	       96	     0		  .84
WF-AWR Flush
	  23	       23	    0	       16	     0		 3.81
CF-Controlfile Transaction
       1,408	    1,407	    1	       50	     0		  .98
TO-Temp Object
	  92	       92	    0	       21	     0		  .52
CO-KTUCLO Master Slave enq (master slave det)
	  10		0	   10	       10	     0		 1.10
US-Undo Segment
	   8		8	    0		6	     0		 1.00
TA-Instance Undo
	   3		3	    0		3	     0		 1.00
TM-DML
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
     108,794	  108,790	    0		2	     0		 1.50
TD-KTF map table enqueue (KTF dump entries)
	   2		2	    0		2	     0		 1.00
HW-Segment High Water Mark
	 194	      194	    0		3	     0		  .33
FB-Format Block
				       as timestamp))) * 60 +
	  16	       16	    0		2	     0		  .50
AF-Advisor Framework (task serialization)
	   7		7	    0		1	     0		 1.00
DW-In memory Dispenser
	   3		3	    0		1	     0		 1.00
DR-Distributed Recovery
	   1		1	    0		1	     0		 1.00
MW-MWIN Schedule
	       extract(second from
	   1		1	    0		1	     0		  .00
TX-Transaction
     108,757	  108,756	    0		0	     0		  N/A
JG-Job Scheduler1
      44,898	   44,898	    0		0	     0		  N/A
JG-Job Scheduler1 (queue lock)
      44,898	   44,898	    0		0	     0		  N/A
JG-Job Scheduler1 (q mem clnup lck)
	      (cast(trunc(end_time, 'mi') as timestamp) -
       4,276	    4,276	    0		0	     0		  N/A
SJ-KTSJ Slave Task Cancel (Slave Task Cancel)
	 423	      424	    0		0	     0		  N/A
DD-ASM Local Disk Group
	 332	      332	    0		0	     0		  N/A
BU-Buddy Instance Context (recovery set construct)
	 180	      180	    0		0	     0		  N/A
SE-Session Migration
	       cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
	  97	       97	    0		0	     0		  N/A
DA-Instance DP Array (Slave Process Array)
	  83	       83	    0		0	     0		  N/A
IS-Instance State
	  74	       74	    0		0	     0		  N/A
TT-Tablespace
	  66	       66	    0		0	     0		  N/A
FP-File Object (global fob contention)
					    as timestamp))) )
	  65	       65	    0		0	     0		  N/A
IT-In-Mem Temp Table Meta Creation
	  36	       36	    0		0	     0		  N/A

Enqueue Activity			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
	     / :p_bucket_interval)) + 1 	  bucket_id,
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
WT-AWR CDB-Wide Table Lock
	   dbtimepersec/100			     aas,
	  19	       19	    0		0	     0		  N/A
CU-Cursor
	  17	       17	    0		0	     0		  N/A
MR-Media Recovery
	  17	       17	    0		0	     0		  N/A
TH-Threshold Chain (metric threshold evaluation)
	  10	       10	    0		0	     0		  N/A
PR-Process Startup
	   dbtimepersec/100			     aas_fg,
	   5		5	    0		0	     0		  N/A
AE-Edition Lock (lock)
	   4		4	    0		0	     0		  N/A
PV-KSV slave startup (syncstart)
	   4		4	    0		0	     0		  N/A
SQ-Sequence Cache
	   3		3	    0		0	     0		  N/A
PW-Buffer Cache PreWarm (flush prewarm buffers)
	   null aas_cpu
	   2		2	    0		0	     0		  N/A
SH-Active Session History Flushing
	   2		2	    0		0	     0		  N/A
XR-Quiesce / Force Logging (database force logging)
	   2		2	    0		0	     0		  N/A
RA-Real-Time ADDM Flood Control (RT ADDM flood control)
	   1		1	    0		0	     0		  N/A
			  ------------------------------------------------------
      from v$servicemetric_history s


     where group_id + 0 = :b_svcminute_group_id -- avoid index/NL
Undo Segment Summary			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Min/Max TR (mins) - Min and Max Tuned Retention (minutes)
       and end_time &gt;= to_date(:b_start_time,  :date_fmt)
-> STO - Snapshot Too Old count,  OOS - Out of Space count
-> Undo segment block stats:
-> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed
-> eS - expired   Stolen,   eR - expired   Released,   eU - expired   reUsed

Undo   Num Undo       Number of  Max Qry   Max Tx Min/Max   STO/     uS/uR/uU/
 TS# Blocks (K)    Transactions  Len (s) Concurcy TR (mins) OOS      eS/eR/eU
       and end_time &lt;  to_date(:b_end_time,	:date_fmt)
---- ---------- --------------- -------- -------- --------- ----- --------------
   2	    3.4 	 23,705    1,584       13 40.4/40.4 38/0  0/0/0/0/0/0
			  ------------------------------------------------------

Undo Segment Stats			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Most recent 35 Undostat rows, ordered by Time desc


		Num Undo    Number of Max Qry  Max Tx Tun Ret STO/    uS/uR/uU/
End Time	  Blocks Transactions Len (s)	Concy  (mins) OOS     eS/eR/eU
------------ ----------- ------------ ------- ------- ------- ----- ------------
10-Feb 15:44	   3,355       23,705	1,584	   13	   40 38/0  0/0/0/0/0/0
			  ------------------------------------------------------



Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
		   ))
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
AQ Background: interrupt	      1    0.0		   0	       22    0.0
AQ Coord jobx_kwsbgsgn l	     20    0.0		   0		0    N/A
AQ Message drive state o	      1    0.0		   0		0    N/A
AQ Sharded master pool l	     20    0.0		   0		0    N/A
	    where rn = 1)))    gvtf
AQ deq hash table latch 	      1    0.0		   0		0    N/A
ASM Keyed state latch		     33    0.0		   0		0    N/A
ASM allocation			 35,525    0.0		   0		0    N/A
ASM connection state lat	  4,784    0.0		   0		0    N/A
ASM db client latch		    627    0.0		   0		0    N/A
ASM map headers 		    455    0.0		   0		0    N/A
ASM map load waiting lis	    130    0.0		   0		0    N/A
ASM map operation freeli	     54    0.0		   0		0    N/A
       where inst_id between :p_inst_id_low and :p_inst_id_high
ASM map operation hash t      5,294,293    0.0	  0.1	   0		0    N/A
ASM network background l	  5,473    0.0		   0		0    N/A
ASM network state latch 	    139    0.0		   0		0    N/A
ASM remote client latch 	      9    0.0		   0		0    N/A
AWR Alerted Metric Eleme	  5,465    0.0		   0		0    N/A
Autotask management		     10    0.0		   0		0    N/A
Change Notification Hash	    230    0.0		   0		0    N/A
Column stats entry latch	      1    0.0		   0		0    N/A
       group by source,  lpad(to_char(inst_id), 5) || '/' || inst_name ,
Consistent RBA			100,207    0.0	  0.0	   0		0    N/A
DML lock allocation		218,521    0.0	  0.1	   0		0    N/A
Event Group Locks		    102    0.0		   0		0    N/A
FIB s.o chain latch		    130    0.0		   0		0    N/A
FOB consolidated s.o lis	    130    0.0		   0		0    N/A
File State Object Pool P	      1    0.0		   0		0    N/A
GCS logfile block		      1    0.0		   0		0    N/A
		bucket_id,  id,  name),
GCS logfile write queue 	      1    0.0		   0		0    N/A
Hang Manager wait event 	     41    0.0		   0	    7,119    0.0
I/O Staticstics latch		      1    0.0		   0		0    N/A
ILM Stats Stripe Latch		      1    0.0		   0		0    N/A
ILM Stats main anchor la	    225    0.0		   0		0    N/A
ILM access tracking exte	      1    0.0		   0		0    N/A
ILM activity tracking la	      1    0.0		   0		0    N/A
    grouping_sets as (
IM Global dictionary lat	      1    0.0		   0		0    N/A
IM Global dictionary que	      1    0.0		   0		0    N/A
IM Global dictionary rw 	      1    0.0		   0		0    N/A
IM area sb latch		      1    0.0		   0		0    N/A
IM area scb latch		      1    0.0		   0		0    N/A
IM emb latch			      1    0.0		   0		0    N/A
IM seg hdr latch		      1    0.0		   0		0    N/A
      select dim,  id,
IMFS defer write list		      1    0.0		   0		0    N/A
IMXT hash table latch		      1    0.0		   0		0    N/A
IPC other latch 		      7    0.0		   0		0    N/A
IPC stats buffer allocat	      1    0.0		   0		0    N/A
In memory undo latch		      1    0.0		   0		0    N/A
JS Sh mem access		  2,133    0.0		   0		0    N/A
JS broadcast add buf lat	  2,150    0.0		   0		0    N/A
JS broadcast drop buf la	  2,150    0.0		   0		0    N/A
	     case when rn = 1 then name else null end name,
JS broadcast load blnc l	     55    0.0		   0		0    N/A
JS mem alloc latch		      6    0.0		   0		0    N/A
JS queue access latch		      7    0.0		   0		0    N/A
JS queue state obj latch	 89,544    0.0		   0		0    N/A
JS slv state obj latch		      1    0.0		   0		0    N/A
KCNIBR - invalid block r	      1    0.0		   0		0    N/A
KDCStatHash latch		      1    0.0		   0		0    N/A
KDFI Buffer Latch		      1    0.0		   0		0    N/A
	     bucket_id,  aas,  aas_fg,	aas_cpu
KDFI Hash Bucket Latch		      1    0.0		   0		0    N/A
KDFI Hash Elem Latch		      1    0.0		   0		0    N/A
KDMADO action list latch	      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
	from (-- find first occurrence of stat
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
KDMADO bll latch		      1    0.0		   0		0    N/A
KDMADO latch			      1    0.0		   0		0    N/A
	  select dim,  id,  name,  bucket_id,  aas,  aas_fg,  aas_cpu,
KFC FX Hash Latch		      1    0.0		   0		0    N/A
KFC Hash Latch			      1    0.0		   0		0    N/A
KFCL LE Freelist		      1    0.0		   0		0    N/A
KFIAS client latch		      1    0.0		   0		0    N/A
KFIAS cluster latch		      1    0.0		   0		0    N/A
KFIAS endpoint latch		      1    0.0		   0		0    N/A
KFIAS node latch		      1    0.0		   0		0    N/A
		 row_number() over (partition by dim,  id,  name
KFIAS process latch		      1    0.0		   0		0    N/A
KFIAS queue latch		      1    0.0		   0		0    N/A
KFK SGA Libload latch		  4,696    0.0		   0		0    N/A
KFMD SGA			    346    0.0		   0		0    N/A
KGNFS-NFS:SHM structure 	      1    0.0		   0		0    N/A
KGNFS-NFS:SVR LIST		    202    0.0		   0		0    N/A
KJC message pool KGH cal	      1    0.0		   0		0    N/A
KJC message pool free li	 56,961    0.0	  0.0	   0	  154,334    0.1
KJC message pool pending	      1    0.0		   0		0    N/A
KJCT flow control latch       2,137,635    0.1	  0.1	   0		0    N/A
KMG MMAN ready and start	    201    0.0		   0		0    N/A
					order by bucket_id,  id) rn
KSFS OFS ctx level paren	      1    0.0		   0		0    N/A
KSFS OFS req layer paren	      1    0.0		   0		0    N/A
KSFS OFS sess layer pare	      1    0.0		   0		0    N/A
KSFS Receive and Send Qu	      1    0.0		   0		0    N/A
KSFS id table parent lat	      1    0.0		   0		0    N/A
KSFS ksfs_node latch		      1    0.0		   0		0    N/A
	    from ( -- group top n + others
	     select dim,  id,  name,  bucket_id,
		    sum(aas) aas,  sum(aas_fg) aas_fg,	sum(aas_cpu) aas_cpu
	       from (-- find the top n but only for instance/service/pdb
		  select dim,
			 case when dim = 'waitclass' or rnk &lt;= :l_top_n
			      then id
			      else 0
			  end  id,
			 case when dim = 'waitclass' or rnk &lt;= :l_top_n
			      then name
			      else 'other'
			  end name,
			 bucket_id,  aas,  aas_fg,  aas_cpu
		    from ( -- rank to get top n
		      select dim,  id,	name,  bucket_id,  aas,  aas_fg,  aas_cpu,
			     dense_rank() over
			       (partition by dim
				    order by dim_aas desc,  id) rnk
			from (
			  -- get sum per dim/id combination to compute top n
			  select dim,  id,  name,  bucket_id,
				 aas,  aas_fg,	aas_cpu,
				 sum(aas) over (partition by dim,  id) dim_aas
			    from (
			      select decode(gid_inst, 0, 'instance', source) dim,
				     decode(gid_inst,
					    0, to_number(substr(inst, 1, 5)),
					    id) 			   id,
KSFSD name cache parent 	      1    0.0		   0		0    N/A
KSGL LS Segment latch		      1    0.0		   0		0    N/A
KSGL SGA anchor latch		      1    0.0		   0		0    N/A
				     decode(gid_inst,
KSIPC ASPC anchor latch 	      1    0.0		   0		0    N/A
KSIPC SGA allocation par	     61    0.0		   0		0    N/A
KSIPCGSN Hash Table latc	      1    0.0		   0		0    N/A
KSIPCGSN Namespace latch	      1    0.0		   0		0    N/A
KSK PDB IO STAT 		      1    0.0		   0		0    N/A
KSRMA SGA anchor latch		      1    0.0		   0		0    N/A
					    0, substr(inst, 7),
KSRMF SGA anchor latch		      1    0.0		   0		0    N/A
KSWL SGA anchor latch		      1    0.0		   0		0    N/A
KSXR hang analysis phase	    452    0.0		   0		0    N/A
KSXR hang analysis phase	     58    0.0		   0		0    N/A
KSXR large replies		      2    0.0		   0		0    N/A
					    name)			 name,
KTF sga latch			      4    0.0		   0	      232    0.0
KTILM latch			      1    0.0		   0		0    N/A
KTU in-memory txn table 	      1    0.0		   0		0    N/A
KTURMA ODPSCN latch		      1    0.0		   0		0    N/A
KTURMA SGA allocation pa	      1    0.0		   0		0    N/A
KWQMN job cache list lat	     90    0.0		   0		0    N/A
				     bucket_id,  aas,  aas_fg,	aas_cpu
Latch for NonceHistory		      1    0.0		   0		0    N/A
Locator state objects po	      1    0.0		   0		0    N/A
Lost write change tracki	      1    0.0		   0		0    N/A
Lsod array latch		     32    0.0		   0		0    N/A
MGA asr alloc latch		     10    0.0		   0		0    N/A
MGA heap latch			     62    6.5	  0.3	   0		0    N/A
			       from (
MGA shared context latch	  2,290    0.5	  0.2	   0		0    N/A
MGA shared context root 	     76   22.4	  0.4	   0		0    N/A
MQL Tracking Latch		      0    N/A		   0	       12    0.0
Memory Management Latch 	      0    N/A		   0	      201    0.0
Memory Queue			      1    0.0		   0		0    N/A
				 select
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A

				   source,  id,  name,
Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

				   case
					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
Memory Queue Message Sub	      1    0.0		   0		0    N/A
				   when :b_con_id &gt; 1 or
Memory Queue Subscriber 	      1    0.0		   0		0    N/A
Message cache latch		      1    0.0		   0		0    N/A
MinActiveScn Latch		     30    0.0		   0		0    N/A
Mutex				      1    0.0		   0		0    N/A
Mutex Stats			      1    0.0		   0		0    N/A
Nologging Standby SCN Ti	    199    0.0		   0		0    N/A
					(:p_is_rac = 1
OS process			    517    0.0		   0		0    N/A
OS process allocation		  1,257    0.0		   0		0    N/A
OS process: request allo	     33    0.0		   0		0    N/A
PDB Hash Table Latch		      1    0.0		   0		0    N/A
PDB LRU structure		      1    0.0		   0		0    N/A
PL/SQL warning settings 	     95    0.0		   0		0    N/A
PX hash array latch		      1    0.0		   0		0    N/A
					 and name='Average Active Sessions')
Parent latch for depende	      1    0.0		   0		0    N/A
Parent latch for query h	      1    0.0		   0		0    N/A
Parent latch for segment	      1    0.0		   0		0    N/A
QMT				      1    0.0		   0		0    N/A
Real-time descriptor lat	  2,288    0.0		   0		0    N/A
Report Request stats lat	     43    0.0		   0		0    N/A
				   then inst
Report Request struct la	      2    0.0		   0		0    N/A
Request holder compeltio	     11    0.0		   0		0    N/A
Retry Ht elm latch		      1    0.0		   0		0    N/A
Retry bkt latch 		      1    0.0		   0		0    N/A
SGA Blackbox latch		      2    0.0		   0		0    N/A
				     else null
SGA IO buffer pool latch	      4    0.0		   0		4    0.0
SGA Logging Bkt Latch		      1    0.0		   0		0    N/A
SGA Logging Log Latch		  2,843    0.0		   0		0    N/A
SGA blob parent 		      1    0.0		   0		0    N/A
SGA bucket locks		      1    0.0		   0		0    N/A
SGA heap locks			      1    0.0		   0		0    N/A
				   end			      inst,
SGA pool locks			      1    0.0		   0		0    N/A
SO private so latch		     61    0.0		   0	       16    0.0
SQL memory manager latch	      1    0.0		   0	      201    0.0
SQL memory manager worka	 15,196    0.0		   0		0    N/A
SR Stats Stripe Latch		      1    0.0		   0		0    N/A
Sched IM Job latch		     10    0.0		   0		0    N/A
				   bucket_id,
Sched InMem Job Cache		      1    0.0		   0		0    N/A
Shared B-Tree			     23    0.0		   0		0    N/A
Streams Generic 		      1    0.0		   0		0    N/A
Subscriber Ht elm latch 	      1    0.0		   0		0    N/A
Testing 			      1    0.0		   0		0    N/A
Token Manager			      1    0.0		   0		0    N/A
				   sum(aas)	aas,
Txn Ht elm latch		      1    0.0		   0		0    N/A
Txn bkt latch			      1    0.0		   0		0    N/A
UM object latch 		      1    0.0		   0		0    N/A
WCR: sync			      1    0.0		   0		0    N/A
Write State Object Pool 	      1    0.0		   0		0    N/A
				   sum(aas_fg)	aas_fg,
X$KSFQP 			      1    0.0		   0		0    N/A
XDB NFS Security Latch		      1    0.0		   0		0    N/A
XDB unused session pool 	      1    0.0		   0		0    N/A
XDB used session pool		      1    0.0		   0		0    N/A
active checkpoint queue 	 27,806    0.0	  1.0	   0		0    N/A
active service list		 46,114    0.0		   0	    1,011    0.0
				   sum(aas_cpu) aas_cpu,
archive destination		     20    0.0		   0		0    N/A
begin backup scn array		      4    0.0		   0		0    N/A
buffer pool			      1    0.0		   0		0    N/A
business card			    169    0.0		   0		0    N/A
cache buffer handles		    130    0.0		   0		0    N/A
cache buffers chains	     17,401,216    0.0	  0.0	   0	2,148,400    0.1
				   grouping_id

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0
				     (source,  id,  name,  bucket_id) gid_id,

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
cache buffers lru chain       2,440,836    0.1	  0.0	   0	2,456,528    0.3
				   grouping_id
cache table scan latch		     18    0.0		   0	       18    0.0
call allocation 		    300    1.0	  1.0	   0		0    N/A
change notification clie	      1    0.0		   0		0    N/A
channel handle pool latc	     71    2.8	  0.0	   0		0    N/A
channel operations paren	  2,504    0.0	  0.0	   0		0    N/A
checkpoint queue latch	      1,108,008    0.0	  0.1	   0	  339,884    0.0
client/application info 	    595    0.0		   0		0    N/A
compile environment latc	     95    0.0		   0		0    N/A
				     (source,  bucket_id,
cp handoff latch		      1    0.0		   0		0    N/A
cp pool latch			      1    0.0		   0		0    N/A
cp server hash latch		      1    0.0		   0		0    N/A
cp sga latch			      9    0.0		   0		0    N/A
cp srv type state latch 	    607    0.0		   0		0    N/A
cp srv type wait latch		      1    0.0		   0		0    N/A
				      case
cr slave free list		      1    0.0		   0		0    N/A
cvmap freelist lock		      1    0.0		   0		0    N/A
deferred cleanup latch		      9    0.0		   0		0    N/A
dispatcher info 		      4    0.0		   0		0    N/A
dml lock allocation		      9    0.0		   0		0    N/A
done queue latch		      1    0.0		   0		0    N/A
				      when :b_con_id &gt; 1 or
dtp latch			     32    0.0		   0		0    N/A
dummy allocation		    212    0.0		   0		0    N/A
eighth spare latch - X p	      1    0.0		   0		0    N/A
eleventh spare latch - c	      1    0.0		   0		0    N/A
enqueue freelist latch		      1    0.0		   0	  190,619    0.0
					   (:p_is_rac = 1
enqueue hash chains		852,380    0.1	  0.3	   0		0    N/A
enqueues			     93    0.0		   0		0    N/A
error message lists		    418    0.0		   0		0    N/A
fast space usage latch		      1    0.0		   0		0    N/A
fifteenth spare latch - 	      1    0.0		   0		0    N/A
file cache latch		     74    0.0		   0		0    N/A
					    and name='Average Active Sessions')
first Audit Vault latch 	      1    0.0		   0		0    N/A
flash file access latch 	      1    0.0		   0		0    N/A
flashback copy			      1    0.0		   0		0    N/A
fourteenth spare latch -	      1    0.0		   0		0    N/A
fourth Audit Vault latch	      1    0.0		   0		0    N/A
gc element		      9,135,268    0.0	  0.1	   0	  945,037    0.1
				      then inst
gc xid list			    115    0.0		   0		0    N/A
gcr global ctx			     38    0.0		   0		0    N/A
gcs commit scn state		      1    0.0		   0		0    N/A
gcs nodemap pool		 56,678    0.0		   0		0    N/A
gcs opaque info freelist	 79,111    0.0	  0.0	   0		0    N/A
gcs partitioned table ha      5,384,696    0.0	  0.0	   0	  108,479    0.0
					else null
gcs pcm hashed value buc	      1    0.0		   0		0    N/A
gcs remaster request que	      3    0.0		   0		0    N/A
gcs resource freelist	      1,905,988    0.1	  0.1	   0	  983,462    0.1
gcs resource hash	      8,782,810    0.0	  0.3	   0	    1,249    0.0
gcs resource scan list		      5    0.0		   0		0    N/A
gcs resource timerq list	      1    0.0		   0		0    N/A
				      end)		     gid_inst
gcs resource validate li	      1    0.0		   0		0    N/A
gcs shadows freelist		911,709    0.0		   0		0    N/A
ges cached resource list	 76,993    0.0	  0.0	   0	   19,711    0.0
ges deadlock list		    406    0.0		   0		0    N/A
ges domain table		277,923    0.0		   0		0    N/A
ges enqueue table freeli	221,586    0.0	  0.1	   0		0    N/A
				 from base_metrics
ges group table 		279,389    0.0		   0		0    N/A
ges process hash list		  3,534    0.0		   0		0    N/A
ges process parent latch	559,931    0.0		   0		0    N/A
ges process table freeli	     33    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
				 group by grouping sets (
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
				    (source,  id,  name,  bucket_id),
------------------------ -------------- ------ ------ ------ ------------ ------
ges remote lock freelist	    202    0.0		   0		0    N/A
ges resource hash list		311,940    0.0	  0.7	   0	      884    0.2
ges resource scan list		      1    0.0		   0		0    N/A
ges resource table freel	  1,752    0.0		   0		0    N/A
ges s-lock bitvec freeli	    198    0.0		   0		0    N/A
ges timeout list		    607    0.0		   0	       12    0.0
				    (source,  bucket_id,
ges value block free lis	      1    0.0		   0		0    N/A
global KZLD latch for au	      1    0.0		   0		0    N/A
global tx hash mapping		      1    0.0		   0		0    N/A
granule from data transf	      1    0.0		   0		0    N/A
gws:Sharding global desc	     40    0.0		   0		0    N/A
hash table Sql Plan Find	     18    0.0		   0	       22    0.0
				     case
hash table column usage 	    100    0.0		   0	    1,398    0.0
hash table expression us	      1    0.0		   0		0    N/A
hash table sql contorl l	      1    0.0		   0		0    N/A
heartbeat check 		      1    0.0		   0	      289    0.0
heartbeat structure mana	      0    N/A		   0	      303    0.0
imc buf hdl lat 		      1    0.0		   0		0    N/A
				     when :b_con_id &gt; 1 or
imc cr clone buf		      1    0.0		   0		0    N/A
imc hash lat			      1    0.0		   0		0    N/A
imc sj lat			      1    0.0		   0		0    N/A
imc srchsp lat			      1    0.0		   0		0    N/A
imc-txn-wrk-lat 		      1    0.0		   0		0    N/A
in-memory area latch		      1    0.0		   0		0    N/A
					  (:p_is_rac = 1
in-memory columnar segme	      1    0.0		   0		0    N/A
in-memory columnar ts ex	      1    0.0		   0		0    N/A
in-memory global pool la	      1    0.0		   0		0    N/A
internal temp table obje	     52    0.0		   0		0    N/A
interrupt manipulation		    442    0.0		   0		0    N/A
intra txn parallel recov	      1    0.0		   0		0    N/A
io pool granule list		     78    0.0		   0		0    N/A
					   and name='Average Active Sessions')
io pool granule metadata	    157    0.0		   0		0    N/A
job workq parent latch		      1    0.0		   0		0    N/A
job_queue_processes para	     10    0.0		   0		0    N/A
k2q global data latch		    404    0.0		   0		0    N/A
k2q lock allocation		      1    0.0		   0		0    N/A
kKCN Cqn SGA			      1    0.0		   0		0    N/A
kcb DW scan objtemp hash	      1    0.0		   0		0    N/A
				       then inst
kcn buffer chains		      1    0.0		   0		0    N/A
kdlx hb parent latch		      1    0.0		   0		0    N/A
kgb parent			      1    0.0		   0		0    N/A
kgnfs mount latch		      1    0.0		   0		0    N/A
kjbr roi instance map		      1    0.0		   0		0    N/A
kjci objects freelist la	  2,581    0.0		   0		0    N/A
				       else null
kjci process context lat	  1,897    0.6	  0.1	   0	   37,506    0.0
kjci process list latch 	  1,106    0.0		   0		0    N/A
kjci request sequence la	    209    0.0		   0		0    N/A
kjcipctx state object fr	     25    0.0		   0		0    N/A
kjoedcso state object fr	      9    0.0		   0		0    N/A
kjoeq omni enqueue hash 	      1    0.0		   0		0    N/A
kjoer owner hash bucket 	      1    0.0		   0		0    N/A
					end)))
kjpm my inst data		     20    0.0		   0		0    N/A
kjsc Request obj freelis	     52    0.0		   0		0    N/A
kjsc Ring Buffer obj fre	     26    0.0		   0		0    N/A
kjsc protect control req	     26    0.0		   0	    6,052    0.0
kjsc protect warm up con	    140    0.0		   0		0    N/A
kjsca pkey obj freelist 	     57    0.0		   0		0    N/A
kjsca protect pkey hash 	  6,751    0.0		   0		0    N/A
			      where nvl(aas, 0) + nvl(aas_fg,  0) &gt; 0)
kjsca protect service ha	     20    0.0		   0		0    N/A
kjscpss state object fre	     26    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
			   where id is not null)))
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
		   group by dim,  id,  name,  bucket_id)))
kokc descriptor allocati	     26    0.0		   0		0    N/A
kpoxft latch			      0    N/A		   0	       21    0.0
krso process			     22    0.0		   0		0    N/A
ksevn object root latch 	    201    0.0		   0		0    N/A
ksfv messages			      1    0.0		   0		0    N/A
ksi resource reuse count	      1    0.0		   0		0    N/A
ksim group membership ca	    581    0.0		   0		0    N/A
 select /* other */ xmlagg(buckets)
ksim membership request 	      0    N/A		   0	      270    0.0
ksns object latch		      1    0.0		   0		0    N/A
kss move lock			      9    0.0		   0		0    N/A
ksuosstats global area		     66    0.0		   0	      231    0.0
ksutcpistat latch		      1    0.0		   0		0    N/A
ksv allocation latch		     25    0.0		   0		0    N/A
ksv class latch 		 14,263    0.0	  0.0	   0		0    N/A
 from (
ksv msg queue latch		    193    0.0		   0	      192    0.0
ksxp shared latch		     33    0.0		   0		0    N/A
ksxp so latch			     33    0.0		   0		0    N/A
ksz_so allocation latch 	     33    0.0		   0		0    N/A
ktfbn latch			    131    0.0		   0		0    N/A
ktm adg jrnls			      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
   select xmlelement(&quot;stattype&quot;,
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg space			      1    0.0		   0		0    N/A
ktm adg stages			      1    0.0		   0		0    N/A
ktm adg worklink		      1    0.0		   0		0    N/A
ktm global data 		     45    0.0		   0		0    N/A
ktm prv jrnls			      1    0.0		   0		0    N/A
ktmpj HT ls			      1    0.0		   0		0    N/A
	       xmlattributes('activity' as &quot;name&quot;,
kwqbsn:qsga			     22    0.0		   0		0    N/A
kwslbmdl: metadata latch	     21    0.0		   0		0    N/A
kwslbql: queue latch		      1    0.0		   0		0    N/A
kwslbutl: uncommitted tx	      1    0.0		   0		0    N/A
kwsptQcachLt: queue cach	      1    0.0		   0		0    N/A
kwsptTrncTsksLt: trunc t	      1    0.0		   0		0    N/A
kwsptjobAdPtLt: AdPt lis	     15    0.0		   0		0    N/A
			     dim	as &quot;dim&quot;),
kwsslLat: skiplist latch	      1    0.0		   0		0    N/A
kxfxscanrate_latch		      1    0.0		   0		0    N/A
lgwr LWN SCN			101,772    0.0	  0.2	   0		0    N/A
list of block allocation	     51    0.0		   0		0    N/A
loader state object free	     56    0.0		   0		0    N/A
lob segment dispenser la	      3    0.0		   0		0    N/A
	       xmlelement(&quot;stat_info&quot;,  xmlagg(stat_id)),
lob segment hash table l	     20    0.0		   0		0    N/A
lob segment query latch 	      1    0.0		   0		0    N/A
lock DBA buffer during m	      1    0.0		   0		0    N/A
log write info			      0    N/A		   0	  101,659    3.0
log write worker phase		  3,179    0.0	  0.0	   0		0    N/A
logical standby cache		      1    0.0		   0		0    N/A
logminer context allocat	      1    0.0		   0		0    N/A
	       xmlelement(&quot;buckets&quot;,
logminer local			      1    0.0		   0		0    N/A
logminer work area		      1    0.0		   0		0    N/A
longop free list parent 	      1    0.0		   0		0    N/A
managed standby 		     21    0.0		   0		0    N/A
message bitmap latch		      1    0.0		   0		0    N/A
message pool operations 	    987    0.0		   0		0    N/A
messages			636,022    0.0	  0.1	   0		0    N/A
msg queue latch 		      1    0.0		   0		0    N/A
			  xmlattributes(:p_bucket_interval as &quot;bucket_interval&quot;,
multiblock read objects 	    152    0.0		   0		0    N/A
name-service memory obje	     95    0.0		   0		0    N/A
name-service namespace b	  3,521    0.0		   0		0    N/A
name-service pending que	     52    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
					:p_bucket_count as &quot;bucket_count&quot;,
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
					:b_min_time as &quot;start_time&quot;,
name-service request		      6    0.0		   0		0    N/A
name-service request que	  6,205    0.0		   0		0    N/A
ncodef allocation latch 	      9    0.0		   0		0    N/A
ninth spare latch - X pa	      1    0.0		   0		0    N/A
object queue header free	  1,167    0.0		   0		0    N/A
object queue header oper      5,210,578    0.0	  0.1	   0	   17,543    0.0
object queue memory		     34    0.0		   0		0    N/A
					:b_max_time as &quot;end_time&quot;,
object stats modificatio	     40    0.0		   0		0    N/A
parallel query alloc buf	  1,393    0.0		   0	       90    0.0
parallel query stats		    313    0.0		   0		0    N/A
parallel txn reco latch 	    954    0.0		   0		0    N/A
parameter table manageme	    971    0.0		   0		0    N/A
pdb enqueue hash chains 	      1    0.0		   0		0    N/A
peshm				      1    0.0		   0		0    N/A
pesom_free_list 		      1    0.0		   0		0    N/A
					:b_duration as &quot;duration&quot;),
pesom_hash_node 		      1    0.0		   0		0    N/A
pkey global statistics		      1    0.0		   0		0    N/A
pmon dead latch 		     10    0.0		   0		0    N/A
post/wait queue 		 28,683    0.0	  0.0	   0	   28,896    0.0
process allocation		  3,024    0.0		   0		0    N/A
process group creation		     33    0.0		   0		0    N/A
process memory detail		      1    0.0		   0		0    N/A
			  xmlagg(bucket_xml order by bucket_id) ) ) buckets
process pkey statistics 	      1    0.0		   0		0    N/A
process queue			    605    0.0		   0		0    N/A
process queue reference 	 17,039    0.0	  0.0	   0	    2,024    2.6
qmn task queue latch		     88    0.0		   0		0    N/A
    from (-- 0
quarantine object		     10    0.0		   0		0    N/A
	  select dim,  bucket_id,
query server freelists		    767    0.0		   0		0    N/A
query server process		    439    0.0		   0		1    0.0
queued dump request		      2    0.0		   0		0    N/A
queuing load statistics 	      1    0.0		   0		0    N/A
read-moslty lock queue u	      1    0.0		   0		0    N/A
recovery domain hash buc	    315    0.0		   0		0    N/A
redo allocation 		306,807    0.2	  0.1	   0	  467,765    0.3
		 xmlagg(stat_id order by id) stat_id,
redo copy			      1    0.0		   0	  468,413    0.0
redo transport task		      1    0.0		   0		0    N/A
redo writing			330,900    0.0	  0.1	   0		0    N/A
remote tool request latc	    116    0.0		   0		0    N/A
resmgr group change latc	     90    0.0		   0		0    N/A
resmgr:active threads		    221    0.0		   0	       10    0.0
resmgr:actses change gro	     95    0.0		   0		0    N/A
		   xmlelement(
resmgr:actses change sta	      1    0.0		   0		0    N/A
resmgr:free threads list	    211    0.0		   0		0    N/A
resmgr:plan CPU method		      1    0.0		   0		0    N/A
resmgr:plan change alloc	      1    0.0		   0		0    N/A
resmgr:plan change latch	      1    0.0		   0		0    N/A
resmgr:resource group CP	      1    0.0		   0		0    N/A
resmgr:schema config		     18    0.0		   0	       10    0.0
resmgr:session queuing		      1    0.0		   0		0    N/A
		     &quot;bucket&quot;,
row cache objects		      1    0.0		   0		0    N/A
rt rmv count latch		      0    N/A		   0	      303    0.0
second Audit Vault latch	      1    0.0		   0		0    N/A
segmented array pool		    130    0.0		   0		0    N/A
sequence cache			    116    0.0		   0		0    N/A
service drain list		    604    0.0		   0		0    N/A
session allocation		 93,779    0.0	  0.5	   0	   93,552    0.0
session idle bit		188,241    0.0	  0.0	   0		0    N/A
		      xmlattributes(bucket_id as &quot;bucket_id&quot;),
session queue latch		      1    0.0		   0		0    N/A
session state list latch	    221    0.0		   0		0    N/A
session statistics		    212    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
		      xmlagg(xmlelement(&quot;stat&quot;,
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
session switching		     38    0.0		   0		0    N/A
session timer			    202    0.0		   0		0    N/A
	  		xmlattributes(id   as &quot;id&quot;,
seventh spare latch - X 	      1    0.0		   0		0    N/A
sga hash table parent la	      1    0.0		   0		0    N/A
shard latch			      1    0.0		   0		0    N/A
shardgroup list latch		     26    0.0		   0		0    N/A
shared pool			 18,760    0.0	  0.0	   0		1    0.0
shared pool sim alloc		      1    0.0		   0		0    N/A
shared pool simulator		    446    0.0		   0		0    N/A
	  			      round(aas,  6)  as &quot;aas&quot;,
shared server configurat	    203    0.0		   0		0    N/A
sim partition latch		      1    0.0		   0		0    N/A
simulator hash latch		771,546    0.0		   0		0    N/A
simulator lru latch		      1    0.0		   0	  515,107    0.0
sixth spare latch - X pa	      1    0.0		   0		0    N/A
sort extent pool		    200    0.0		   0		0    N/A
space background task la	  1,456   43.9	  0.8	   0	      398    3.0
state object free list		      2    0.0		   0		0    N/A
	  			      round(aas_fg,  6) as &quot;aas_fg&quot;,
statistics aggregation		    145    0.0		   0		0    N/A
subscriber Ht bkt		      1    0.0		   0		0    N/A
tablespace key chain		      1    0.0		   0		0    N/A
temp lob duration state 	      6    0.0		   0		0    N/A
temporary table state ob	     66    0.0		   0		0    N/A
tenth spare latch - X pa	      1    0.0		   0		0    N/A
test excl. parent l0		      1    0.0		   0		0    N/A
test excl. parent2 l0		      1    0.0		   0		0    N/A
test excl. parent2 lmid 	      1    0.0		   0		0    N/A
test mixed exclusive		      1    0.0		   0		0    N/A
				      round(aas_cpu,  6) as &quot;aas_cpu&quot;))
test mode exclusive		      1    0.0		   0		0    N/A
		  order by id)
		    ) bucket_xml
	    from (
	      select dim,  bucket_id,  id,  aas,  aas_fg,  aas_cpu,
		     nvl2(name,
			  xmlelement(&quot;stat&quot;,
			   xmlattributes(id as &quot;id&quot;,	name as &quot;name&quot;)),
			  null) 	     stat_id
		from grouping_sets)
	   group by dim, bucket_id)
       group by dim)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5k5207588w9ry"></a>5k5207588w9ry</td><td class='awrc'><pre_sqltext class="awr">SELECT DBMS_REPORT.GET_REPORT(:B1 ) FROM DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5yrdyuwb16swu"></a>5yrdyuwb16swu</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '12';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';
test open exclusive		      1    0.0		   0		0    N/A
test pdb exclusive		      1    0.0		   0		0    N/A

test shared parent2 lmid	      1    0.0		   0		0    N/A
thirteenth spare latch -	      1    0.0		   0		0    N/A
threshold alerts latch		     20    0.0		   0		0    N/A
transaction allocation		     68    0.0		   0		0    N/A
twelfth spare latch - ch	      1    0.0		   0		0    N/A

twenty-fifth spare latch	      1    0.0		   0		0    N/A
twenty-first spare latch	      1    0.0		   0		0    N/A
twenty-fourth spare latc	      1    0.0		   0		0    N/A
twenty-second spare latc	      1    0.0		   0		0    N/A
twenty-third spare latch	      1    0.0		   0		0    N/A
undo global data		345,243    0.0	  0.1	   0		0    N/A
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
virtual circuit buffers 	      1    0.0		   0		0    N/A
virtual circuit holder		      1    0.0		   0		0    N/A
virtual circuit queues		      1    0.0		   0		0    N/A
			  ------------------------------------------------------


v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
Latch Sleep Breakdown			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by misses desc

				       Get				   Spin
Latch Name			  Requests	 Misses      Sleeps	   Gets
-------------------------- --------------- ------------ ----------- -----------

cache buffers lru chain 	 2,440,836	  3,167 	105	  3,067
gc element			 9,135,268	  1,766 	144	  1,631
KJCT flow control latch 	 2,137,635	  1,615 	 91	  1,528
gcs resource freelist		 1,905,988	  1,316 	145	  1,181
gcs resource hash		 8,782,810	    916 	260	    665
v_num_tmp NUMBER := 0;
cache buffers chains		17,401,216	    852 	 17	    838
space background task latc	     1,456	    639 	540	    145
enqueue hash chains		   852,380	    634 	174	    473

redo allocation 		   306,807	    624 	 93	    534
messages			   636,022	    151 	 13	    140
object queue header operat	 5,210,578	    123 	 18	    106
ges enqueue table freelist	   221,586	     91 	 12	     81
ASM map operation hash tab	 5,294,293	     66 	  9	     57
redo writing			   330,900	     29 	  3	     26
v_loop_cnt PLS_INTEGER := 0;
lgwr LWN SCN			   101,772	     27 	  6	     22
v_rowcnt PLS_INTEGER := 0;
ges resource hash list		   311,940	     26 	 17	      9
MGA shared context root la		76	     17 	  6	     11
checkpoint queue latch		 1,108,008	     17 	  1	     16
undo global data		   345,243	     16 	  2	     14
v_updates_cnt PLS_INTEGER := 0;
DML lock allocation		   218,521	     12 	  1	     11
kjci process context latch	     1,897	     12 	  1	     11
MGA shared context latch	     2,290	     11 	  2	      9
MGA heap latch				62	      4 	  1	      3
call allocation 		       300	      3 	  3	      0
v_selects_cnt PLS_INTEGER := 0;
session allocation		    93,779	      2 	  1	      1
active checkpoint queue la	    27,806	      1 	  1	      0
			  ------------------------------------------------------


Latch Miss Sources			 DB/Inst: P30DB/p30db1	Snaps: 156-157

-> only latches with sleeps are shown
-> ordered by name, sleeps desc
v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
ASM map operation hash t kffmDoDone_1			  0	     6	      1
ASM map operation hash t kffmTranslate			  0	     3	      8

DML lock allocation	 ktaidm 			  0	     1	      0
KJCT flow control latch  kjctcsnd: send normal mess	  0	    52	     45
KJCT flow control latch  kjcts_sedeqv3: dequeue a v	  0	    17	      4
KJCT flow control latch  kjcts_sqenq: queue a messa	  0	    10	     16
KJCT flow control latch  kjctr_updatetkt: update ti	  0	     8	     14
v_do_scan_query BOOLEAN :=FALSE;
KJCT flow control latch  kjcts_sqenq2: queue a mess	  0	     3	      7
KJCT flow control latch  kjctr_releasetkt: change t	  0	     1	      3
MGA shared context latch ksm_mga_detach_whr2		  0	     2	      0
MGA shared context root  ksm_mga_detach_whr1		  0	     6	      6
active checkpoint queue  kcbk_add_rbr_ckpt: Add rbr	  0	     1	      0
cache buffers chains	 kcbgtcr: slow path excl	  0	     4	      0
v_scan_query_quota  BOOLEAN := FALSE;
cache buffers chains	 kclbla 			  0	     3	      0
cache buffers chains	 kclpdcl			  0	     3	      0
cache buffers chains	 kcbbic2			  0	     2	      3
cache buffers chains	 kcbrls: fast pin release	  0	     2	     20
cache buffers chains	 kcbzib: finish processing	  0	     2	      2
cache buffers chains	 kcbgtcr: convert latch 	  0	     1	      0
v_scan_workload_only BOOLEAN := FALSE;
cache buffers lru chain  kcbzgb_2			  0	    92	     43
cache buffers lru chain  kcbzgws			  0	    12	      0
cache buffers lru chain  kcbbxsv: move to being wri	  0	     1	      0
call allocation 	 ksuxds 			  0	     2	      0
v_random_workload_only BOOLEAN := FALSE;
call allocation 	 ksudlp: top call		  0	     1	      3
checkpoint queue latch	 kcbklbc_cql			  0	     1	      0
gc element		 kclnfndnewm			  0	   101	     45

gc element		 kclulb 			  0	    16	     42
gc element		 kclfwrite1			  0	    11	      6

gc element		 kclplz 			  0	     8	      0
gc element		 kclnfnds			  0	     3	     18
gc element		 kclhngcbk1			  0	     2	      0
gc element		 kclpdcl			  0	     2	      1
gc element		 KCLUNLNK			  0	     1	     25
gc element		 kclplz_1			  0	     1	      0
v_random_block PLS_INTEGER := 1;
gcs resource freelist	 kjbralc: check freelist no	  0	   103	      0
gcs resource freelist	 kjbralc add resource		  0	    16	    110
gcs resource freelist	 kjbrfr_bg2			  0	    14	     28
gcs resource freelist	 kjbrralc: reserve allocati	  0	    12	      7
gcs resource hash	 kjbcropen			  0	   108	     45
gcs resource hash	 kclfwrite1			  0	    70	      7
v_tmp PLS_INTEGER;
gcs resource hash	 kjbopen			  0	    23	      8
gcs resource hash	 kjbclose_remaster		  0	    22	     41
v_now PLS_INTEGER;
gcs resource hash	 kjbassume			  0	     8	     20
gcs resource hash	 kjbmpopen			  0	     8	     27
gcs resource hash	 kjbmpclose			  0	     6	     29
v_brick_wall PLS_INTEGER;
gcs resource hash	 kclpdc 			  0	     5	     40
gcs resource hash	 kjbmpflushpi			  0	     3	     12
gcs resource hash	 kjbrdowncvt			  0	     3	      0

gcs resource hash	 kclrwrite			  0	     2	      9
gcs resource hash	 kjbconvert			  0	     1	      4
gcs resource hash	 kjblocalobj_nolock		  0	     1	      3
ges enqueue table freeli kjlalc: lock allocation	  0	    12	      4
ges resource hash list	 kjrmas1: lookup master nod	  0	     7	      0
v_begin_time PLS_INTEGER;
ges resource hash list	 kjlmfnd: search for lockp	  0	     6	      3
ges resource hash list	 kjakcai: search for resp b	  0	     4	      4
kjci process context lat kjci_finish_int:2		  0	     1	      0
messages		 ksarcv 			  0	     5	      1
messages		 ksarcv: after wait		  0	     5	      4
messages		 ksaamb: after wakeup		  0	     3	      8
v_end_time PLS_INTEGER;
mostly latch-free SCN	 kcs024 			  0	     5	      0

Latch Miss Sources			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> only latches with sleeps are shown
v_total_time PLS_INTEGER;
-> ordered by name, sleeps desc

						     NoWait		 Waiter
v_begin_cpu_tm PLS_INTEGER;
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
mostly latch-free SCN	 kcslcu3			  0	     1	     18
object queue header oper kcbo_unlink_q			  0	    15	      9
v_end_cpu_tm PLS_INTEGER;
object queue header oper kcbo_link_q			  0	     4	      5
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	    80	      0
redo allocation 	 kcrfw_post: more space 	  0	     6	     21
redo allocation 	 kcrfw_redo_write: before w	  0	     6	     26
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     1	     46
redo writing		 kcrfw_post: rba scn pair	  0	     3	      0
v_total_cpu_tm PLS_INTEGER;
session allocation	 ksuxds_int: free		  0	     1	      1
space background task la ktsj_grab_task 		  0	   365	    515
space background task la ktsj_detach_task		  0	   130	     25
space background task la ktsj_smco_purgeexpired 	  0	    38	      0
space background task la ktsj_smco_movetasks		  0	     6	      0

space background task la ktsjCreateTask 		  0	     1	      0
undo global data	 ktudnx:child			  0	     2	      1
unknown latch		 ksqcmi: if lk mode not req	  0	    59	      3
unknown latch		 ksqgtl3			  0	    54	     78
unknown latch		 ksqrcl 			  0	    31	     79
unknown latch		 ksqcmi: if lk mode request	  0	    30	     14
unknown latch		 kghfre 			  0	     1	      1
			  ------------------------------------------------------

Mutex Sleep Summary			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------
v_do_sleeps BOOLEAN := FALSE;


Parent Latch Statistics 		 DB/Inst: P30DB/p30db1	Snaps: 156-157

v_loop_control BOOLEAN := FALSE;
		  No data exists for this section of the report.
v_update_quota BOOLEAN := FALSE;
			  ------------------------------------------------------

Child Latch Statistics			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------
v_select_only_workload BOOLEAN := FALSE;


Segments by Logical Reads		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Logical Reads:       5,609,804
-> Captured Segments account for   77.5% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

v_update_only_workload BOOLEAN := FALSE;
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				 Logical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
v_do_update BOOLEAN := FALSE;
USER1		     IOPS
I_CF1				INDEX	   73408      73408	 111,680    1.99
USER1		     IOPS
CF1				TABLE	   73402      73404	 108,672    1.94
USER38		     IOPS
I_CF1				INDEX	   73602      73602	 105,184    1.88
USER13		     IOPS
v_do_hot_schema BOOLEAN := FALSE;
I_CF1				INDEX	   73468      73468	 104,672    1.87
USER5		     IOPS
I_CF1				INDEX	   73428      73428	 104,544    1.86
			  ------------------------------------------------------

Segments by Physical Reads		 DB/Inst: P30DB/p30db1	Snaps: 156-157
v_stop_immediate BOOLEAN := FALSE;
-> Total Physical Reads:       2,106,679
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
v_sharing_schema BOOLEAN := FALSE;

		     Tablespace
Owner			Name
-------------------- ----------
v_seed VARCHAR2(128);
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404	 105,247    5.00
USER13		     IOPS
v_home_schema_str VARCHAR2(80);
CF1				TABLE	   73458      73466	 101,014    4.79
USER29		     IOPS
CF1				TABLE	   73546      73543	 100,720    4.78
USER5		     IOPS
CF1				TABLE	   73418      73426	 100,522    4.77
USER17		     IOPS
CF1				TABLE	   73486      73488	 100,501    4.77
v_scratch VARCHAR2(200) ;
			  ------------------------------------------------------

Segments by Physical Read Requests	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Physical Read Requests:       2,106,061
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available


		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			       Phys Read
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
v_cpu_pct NUMBER(6, 3);
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404	 105,247    5.00
USER13		     IOPS
CF1				TABLE	   73458      73466	 101,014    4.80
USER29		     IOPS
CF1				TABLE	   73546      73543	 100,720    4.78
USER5		     IOPS
CF1				TABLE	   73418      73426	 100,522    4.77
USER17		     IOPS
CF1				TABLE	   73486      73488	 100,501    4.77
v_my_serial NUMBER(16);
			  ------------------------------------------------------

Segments by UnOptimized Reads		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total UnOptimized Read Requests:	  2,106,061
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available


		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			     UnOptimized
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
BEGIN
CF1				TABLE	   73402      73404	 105,247    5.00
USER13		     IOPS
CF1				TABLE	   73458      73466	 101,014    4.80
USER29		     IOPS
CF1				TABLE	   73546      73543	 100,720    4.78
USER5		     IOPS
CF1				TABLE	   73418      73426	 100,522    4.77

USER17		     IOPS
CF1				TABLE	   73486      73488	 100,501    4.77
			  ------------------------------------------------------

Segments by Optimized Reads		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------
v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;

Segments by Direct Physical Reads	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Physical Writes		 DB/Inst: P30DB/p30db1	Snaps: 156-157
EXECUTE IMMEDIATE v_home_schema_str;
-> Total Physical Writes:	  310,504
-> Captured Segments account for   96.3% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available


		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical

Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
IF ( v_hot_schema_modulus != 0 ) THEN
CF1				TABLE	   73402      73404	  16,596    5.34
USER13		     IOPS
CF1				TABLE	   73458      73466	  14,396    4.64
USER17		     IOPS
CF1				TABLE	   73486      73488	  14,301    4.61
USER5		     IOPS
CF1				TABLE	   73418      73426	  14,274    4.60
USER20		     IOPS
	v_do_hot_schema := TRUE;
CF1				TABLE	   73501      73506	  14,273    4.60
			  ------------------------------------------------------

Segments by Physical Write Requests	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Physical Write Requests:	  298,704
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
END IF;

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			      Phys Write
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total

-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404	  16,582    5.55
USER13		     IOPS
CF1				TABLE	   73458      73466	  14,333    4.80
USER17		     IOPS
CF1				TABLE	   73486      73488	  14,229    4.76
IF ( v_sleep_modulus != 0 )	  THEN
USER20		     IOPS
CF1				TABLE	   73501      73506	  14,217    4.76
USER5		     IOPS
CF1				TABLE	   73418      73426	  14,206    4.76
			  ------------------------------------------------------

Segments by Direct Physical Writes	 DB/Inst: P30DB/p30db1	Snaps: 156-157
	v_do_sleeps := TRUE;
-> Total Direct Physical Writes:	     692
-> Captured Segments account for    9.7% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
END IF;
		     Subobject	Obj.				  Direct
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
WRH$_ACTIVE_SESSION_ 773525_131 TABLE	   74322      74322	      67    9.68
			  ------------------------------------------------------


Segments by Table Scans 		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by DB Blocks Changes		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> % of Capture shows % of DB Block Changes for each top segment compared
IF ( v_max_loop_iterations &gt; 0 )  THEN
-> with total DB Block Changes for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				DB Block    % of
Object Name	       Name	Type	    Obj#   Dataobj#	 Changes Capture
	v_loop_control := TRUE ;
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER29		     IOPS
CF1				TABLE	   73546      73543	  17,056    5.12
USER1		     IOPS
CF1				TABLE	   73402      73404	  16,512    4.96
USER39		     IOPS
CF1				TABLE	   73590      73595	  16,432    4.93
END IF;
USER32		     IOPS
CF1				TABLE	   73562      73567	  16,320    4.90
USER13		     IOPS
CF1				TABLE	   73458      73466	  15,664    4.70
			  ------------------------------------------------------


Segments by Row Lock Waits		 DB/Inst: P30DB/p30db1	Snaps: 156-157


		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by ITL Waits			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------
IF ( v_update_pct = 0 ) 	  THEN

Segments by Buffer Busy Waits		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Global Cache Buffer Busy	 DB/Inst: P30DB/p30db1	Snaps: 156-157

	v_select_only_workload := TRUE;
		  No data exists for this section of the report.
			  ------------------------------------------------------


Segments by CR Blocks Received		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total CR Blocks Received:	       2,412
-> Captured Segments account for   93.7% of Total
END IF;
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								   CR

		     Subobject	Obj.				 Blocks
IF ( v_update_pct = 100 )	  THEN
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
	v_update_only_workload := TRUE;
CF1				TABLE	   73402      73404	     398   16.50
USER7		     IOPS
CF1				TABLE	   73433      73436	     283   11.73
USER20		     IOPS
CF1				TABLE	   73501      73506	     192    7.96
USER19		     IOPS
CF1				TABLE	   73485      73498	     188    7.79
USER17		     IOPS
END IF;
CF1				TABLE	   73486      73488	     156    6.47
			  ------------------------------------------------------

Segments by Current Blocks Received	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Current Blocks Received:	   12,656
-> Captured Segments account for   95.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available


		     Tablespace
Owner			Name
-------------------- ----------
								 Current
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
IF ( v_scan_query_pct = 0 ) 	THEN
USER1		     IOPS
CF1				TABLE	   73402      73404	   1,154    9.12
USER7		     IOPS
CF1				TABLE	   73433      73436	     812    6.42
USER36		     IOPS
I_CF1				INDEX	   73589      73589	     747    5.90
USER27		     IOPS
I_CF1				INDEX	   73525      73525	     732    5.78
	v_random_workload_only := TRUE;
USER33		     IOPS
I_CF1				INDEX	   73571      73571	     732    5.78
			  ------------------------------------------------------

Segments by Global Cache Remote Grants	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Global Cache Remote Grants:	   1,044,112
-> Captured Segments account for   99.6% of Total
END IF;
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name

-------------------- ----------
								      GC
		     Subobject	Obj.				  Remote
Object Name	       Name	Type	    Obj#   Dataobj#	  Grants  %Total
IF ( v_scan_query_pct = 100 ) 	THEN
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER40		     IOPS
CF1				TABLE	   73603      73605	  59,392    5.69
	v_scan_workload_only := TRUE;
USER27		     IOPS
CF1				TABLE	   73535      73538	  57,024    5.46
USER19		     IOPS
CF1				TABLE	   73485      73498	  56,590    5.42
USER30		     IOPS
CF1				TABLE	   73550      73554	  53,945    5.17
USER12		     IOPS
CF1				TABLE	   73464      73460	  53,814    5.15
END IF;
			  ------------------------------------------------------


Dictionary Cache Stats			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Pct Misses"  should be very low (< 2% in most cases)
-> "Final Usage" is the number of cache entries being used

				   Get	  Pct	 Scan	Pct	 Mod	  Final

Cache			      Requests	 Miss	 Reqs  Miss	Reqs	  Usage
------------------------- ------------ ------ ------- ----- -------- ----------
dc_awr_control			    19	  5.3	    0	N/A	   3	      1
dc_global_oids			 4,538	  0.3	    0	N/A	   0	    218
dc_histogram_data		   725	  1.7	    0	N/A	   0	  3,395
dc_histogram_defs		 1,179	  2.2	    0	N/A	  34	  6,506
v_seconds_to_run := v_seconds_to_run * 100 ;
dc_objects			 5,862	  0.3	    0	N/A	  32	  2,780
dc_profiles			     2	  0.0	    0	N/A	   0	      1
dc_props			   498	  0.0	    0	N/A	   0	      4
dc_rollback_segments		 1,287	  0.0	    0	N/A	   0	    320
dc_segments			    51	 25.5	    0	N/A	  12	    728
dc_sequences			     4	 75.0	    0	N/A	   4	      4
dc_tablespaces			   239	  0.0	    0	N/A	   0	      7

dc_users			   335	  0.0	    4	0.0	   0	    242
outstanding_alerts		     2	100.0	    0	N/A	   0	      4
sch_lj_oids			     6	 50.0	    0	N/A	   0	      6
			  ------------------------------------------------------

Dictionary Cache Stats (RAC)		 DB/Inst: P30DB/p30db1	Snaps: 156-157

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
		  No data exists for this section of the report.

			  ------------------------------------------------------

Library Cache Activity			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations
--------------- ------------ ------ -------------- ------ ---------- --------
-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
ACCOUNT_STATUS		   4	0.0		 0    N/A	   0	    0
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0
BODY			  43	0.0	       123    0.0	   0	    0
DBLINK			   5	0.0		 0    N/A	   0	    0
EDITION 		   4	0.0		 8    0.0	   0	    0
HINTSET OBJECT		   9	0.0		 9    0.0	   0	    0
INDEX			   6	0.0		 6    0.0	   0	    0
OBJECT ID		   8  100.0		 0    N/A	   0	    0
-- DBMS_RANDOM.seed (val =&gt; v_seed);
SCHEMA			  27	0.0		 0    N/A	   0	    0
SQL AREA		 681	3.2	   727,940   -0.1	   9	    9
SQL AREA BUILD		  24   62.5		 0    N/A	   0	    0
SQL AREA STATS		  18   88.9		18   88.9	   0	    0
TABLE/PROCEDURE 	 223	4.5	     5,687    0.5	  10	    0
TRIGGER 		   4	0.0		 4    0.0	   0	    0
			  ------------------------------------------------------


Library Cache Activity (RAC)		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		    GES Lock	  GES Pin      GES Pin	 GES Inval GES Invali-
Namespace	    Requests	 Requests     Releases	  Requests     dations
--------------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4		0	     0		 0	     0
AUDIT POLICY		   2		2	     2		 0	     0
v_begin_time := DBMS_UTILITY.GET_TIME();
BODY			  27	      118	   118		 0	     0
DBLINK			   5		0	     0		 0	     0
EDITION 		   4		4	     4		 0	     0
HINTSET OBJECT		   9		9	     9		 0	     0
INDEX			   6		6	     6		 0	     0
SCHEMA			   9		0	     0		 0	     0
TABLE/PROCEDURE        1,072	    5,269	 5,269		 0	     0
TRIGGER 		   0		4	     4		 0	     0
v_now := v_begin_time ;
			  ------------------------------------------------------


Memory Dynamic Components		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Min/Max sizes since instance startup
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
-> ordered by Component

v_brick_wall := v_now + v_seconds_to_run ;
		 Begin Snap	Current 	Min	    Max   Oper Last Op
Component	  Size (Mb)   Size (Mb)   Size (Mb)   Size (Mb)  Count Typ/Mod
--------------- ----------- ----------- ----------- ----------- ------ -------
ASM Buffer Cach 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 16K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 2K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 32K buf 	.00	    .00 	.00	    .00      0 STA/
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
DEFAULT 4K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 8K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT buffer	   8,000.00    8,000.00    8,000.00    8,000.00      0 INI/
Data Transfer C 	.00	    .00 	.00	    .00      0 STA/
In Memory RO Ex 	.00	    .00 	.00	    .00      0 STA/
In Memory RW Ex 	.00	    .00 	.00	    .00      0 STA/
In-Memory Area		.00	    .00 	.00	    .00      0 STA/

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
KEEP buffer cac 	.00	    .00 	.00	    .00      0 STA/
PGA Target	   3,232.00    3,232.00    3,232.00    3,232.00      0 STA/
RECYCLE buffer		.00	    .00 	.00	    .00      0 STA/
SGA Target	   9,664.00    9,664.00    9,664.00    9,664.00      0 STA/
Shared IO Pool	     128.00	 128.00      128.00	 128.00      0 STA/
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
java pool		.00	    .00 	.00	    .00      0 STA/
large pool	      64.00	  64.00       64.00	  64.00      0 STA/
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
memoptimize buf 	.00	    .00 	.00	    .00      0 STA/
shared pool	   1,440.00    1,440.00    1,440.00    1,440.00      0 STA/
	END IF;
streams pool		.00	    .00 	.00	    .00      0 STA/
unified pga poo 	.00	    .00 	.00	    .00      0 STA/
			  ------------------------------------------------------

Memory Resize Operations Summary	 DB/Inst: P30DB/p30db1	Snaps: 156-157


		  No data exists for this section of the report.
			  ------------------------------------------------------

Memory Resize Ops			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
----------------------------------------------------------------------------------------------------------------------
			  ------------------------------------------------------

Process Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> B: Begin Snap   E: End Snap
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
-> All rows below contain absolute values (i.e. not diffed over the interval)
-> Max Alloc is Maximum PGA Allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
----------------------------------------------------------------------------------------------------------------------
-> ordered by Begin/End snapshot, Alloc (MB) desc
-> Top 10 containers by Alloc (MB) at end snapshot time are displayed


							     Hist
				     Avg  Std Dev     Max     Max
		Alloc	   Used    Alloc    Alloc   Alloc   Alloc    Num    Num
   Category	 (MB)	   (MB)     (MB)     (MB)    (MB)    (MB)   Proc  Alloc
 - -------- --------- --------- -------- -------- ------- ------- ------ ------
	IF  ( v_select_only_workload = TRUE ) THEN
B Freeable     158.3	    .0	    3.5      6.9      31     N/A     45     45
  Other        645.4	   N/A	    5.0      7.2      41      41    130    130
  PL/SQL	18.1	  17.1	     .2       .3       2       3    112    111
  SQL		 7.7	   6.1	     .1       .3       1      11     63     54
  Total        829.5	  23.1	    8.8     14.7      75      55    350    340
E Freeable     146.2	    .0	    4.3      7.6      32     N/A     34     34
		-- handle case where user specified zero pct updates (a SELECT-only workload)
  Other        554.5	   N/A	    5.1      7.7      39      39    109    109
  PL/SQL	 8.2	   7.3	     .1       .3       2       3     91     91
  SQL		 2.6	   1.9	     .1       .2       1      11     42     30
		v_do_update := FALSE;
  Total        711.5	   9.2	    9.5     15.9      74      53    276    264
			  ------------------------------------------------------

SGA Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		v_update_quota := TRUE ;
						      End Size (Bytes)
SGA regions			Begin Size (Bytes)	(if different)
	ELSE
------------------------------ ------------------- -------------------
Database Buffers		     8,522,825,728
Fixed Size				12,445,928
		IF ( v_update_only_workload = TRUE ) THEN
Redo Buffers				21,106,688
Variable Size			     1,577,058,304
			       -------------------
			-- handle case where user specified 100% updates
sum				    10,133,436,648
			  ------------------------------------------------------

SGA breakdown difference by Pool and NameDB/Inst: P30DB/p30db1	Snaps: 156-157
-> ordered by Pool, Name
-> N/A value for Begin MB or End MB indicates the size of that Pool/Name was
			v_do_update := TRUE;
   insignificant, or zero in that snapshot

Pool   Name				    Begin MB	     End MB  % Diff
------ ------------------------------ -------------- -------------- -------
large  PX msg pool				15.0	       15.0    0.00
large  free memory				48.6	       48.6    0.00
			v_update_quota := FALSE;
shared ASH buffers				16.0	       16.0    0.00
shared KGLH0					50.7	       49.3   -2.69
shared KGLS					15.0	       14.6   -3.04
shared KJSC rnb slots				23.1	       15.0  -34.98
shared SO private sga				28.9	       28.9    0.00
		ELSE
shared SQLA				       268.4	      268.6    0.10
shared db_block_hash_buckets			32.0	       32.0    0.00
shared free memory				92.9	       99.7    7.28
shared gc name table				32.0	       32.0    0.00
shared gcs resources			       271.0	      271.0    0.00
shared gcs resv res hash bucket 		48.0	       48.0    0.00
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
shared gcs shadows			       147.8	      147.8    0.00
shared ges big msg buffers			26.3	       26.3    0.00
shared ksunfy_meta 1				25.0	       25.0    0.00
shared row cache				  .0		 .0    0.00
       buffer_cache			     8,000.0	    8,000.0    0.00
       fixed_sga				11.9	       11.9    0.00
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
       log_buffer				20.1	       20.1    0.00
       shared_io_pool			       128.0	      128.0    0.00
			  ------------------------------------------------------


Replication System Resource Usage	 DB/Inst: P30DB/p30db1	Snaps: 156-157

			IF ( v_update_quota = FALSE ) THEN
		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication SGA Usage			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
				-- Handle case where user has set UPDATE_PCT to a valid value
			  ------------------------------------------------------


GoldenGate Capture			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------
				--

GoldenGate Capture Rate 		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Reader 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
				-- We are doing updates during this run and quota has not been met yet

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator		 DB/Inst: P30DB/p30db1	Snaps: 156-157

				-- We still vacillate until update quota has been met
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Server 		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.

			  ------------------------------------------------------

GoldenGate Apply Coordinator Rate	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

				IF ( MOD(v_random_block,  2) = 0 ) THEN
GoldenGate Apply Reader and Server Rate  DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------


XStream Capture 			 DB/Inst: P30DB/p30db1	Snaps: 156-157

					v_do_update := TRUE;
		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Capture Rate			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
				ELSE
			  ------------------------------------------------------

XStream Apply Reader			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

					v_do_update := FALSE;
XStream Apply Coordinator		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Server			 DB/Inst: P30DB/p30db1	Snaps: 156-157
				END IF;

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator Rate		 DB/Inst: P30DB/p30db1	Snaps: 156-157

			ELSE
		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Reader and Server Rate	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------
				-- UPDATE quota has been filled,  force drain some SELECTs


Table Statistics by DML Operations	 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

				v_do_update := FALSE;
Table Statistics by Conflict Resolutions DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Large Transaction Statistics DB/Inst: P30DB/p30db1	Snaps: 156-157
			END IF;

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Long Running Transaction StatisticsDB/Inst: P30DB/p30db1  Snaps: 1

		END IF;
		  No data exists for this section of the report.
			  ------------------------------------------------------


Advanced Queue CPU/IO Usage		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
	END IF;
			  ------------------------------------------------------

Buffered Queues 			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------


Buffered Queue Subscribers		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

Rule Set				 DB/Inst: P30DB/p30db1	Snaps: 156-157
----------------------------------------------------------------------------------------------------------------------

-- The type of SQL is now determined...execute it in the following section
		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues			 DB/Inst: P30DB/p30db1	Snaps: 156-157

----------------------------------------------------------------------------------------------------------------------
		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues Rate			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.

			  ------------------------------------------------------

Persistent Queue Subscribers		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN

Resource Limit Stats			      DB/Inst: P30DB/p30db1  Snap: 157
-> Only rows with Current or Maximum Utilization > 80% of Limit are shown
-> For "UNLIMITED" resources, rows whose Current or Maximum Utilization
   exceeds 2*Initial Allocation are shown
-> Ordered by Resource Name
		--

				  Current      Maximum	   Initial
Resource Name			Utilization  Utilization Allocation   Limit
------------------------------ ------------ ------------ ---------- ----------
ges_cache_ress			      3,196	   3,542	  0  UNLIMITED
			  ------------------------------------------------------
		-- Do a SELECT statement

Shared Servers Activity 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Values represent averages for all samples

   Avg Total   Avg Active    Avg Total	 Avg Active    Avg Total   Avg Active
 Connections  Connections Shared Srvrs Shared Srvrs  Dispatchers  Dispatchers
		-- Work out scan or random
------------ ------------ ------------ ------------ ------------ ------------
	   0		0	     1		  0	       1	    0
			  ------------------------------------------------------

Shared Servers Rates			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		IF  ( v_random_workload_only = TRUE ) THEN
  Common     Disp			 Common       Disp     Server
   Queue    Queue   Server    Server	  Queue      Queue	Total	  Server
 Per Sec  Per Sec Msgs/Sec    KB/Sec	  Total      Total	 Msgs  Total(KB)
-------- -------- -------- --------- ---------- ---------- ---------- ----------
       0	0	 0	 0.0	      0 	 0	    0	       0
			  ------------------------------------------------------
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)

Shared Servers Utilization		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Statistics are combined for all servers
-> Incoming and Outgoing Net % are included in %Busy

  Total Server			  Incoming  Outgoing
      Time (s)	  %Busy    %Idle     Net %     Net %
			v_do_scan_query := FALSE;
-------------- -------- -------- --------- ---------
	   605	    0.0    100.0       0.0	 0.0
			  ------------------------------------------------------

Shared Servers Common Queue		 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			v_scan_query_quota := TRUE ;
			  ------------------------------------------------------

Shared Servers Dispatchers		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by %Busy, descending
-> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue
-> Name suffixes:
		ELSE
     "(N)" - dispatcher started between begin and end snapshots
     "(R)" - dispatcher re-started between begin and end snapshots

	      Avg Total Disp			    Total Total Queue  Avg Queue
Name	    Conns   Time (s)	%Busy	 %Idle	   Queued    Wait (s)  Wait (ms)
------- --------- ---------- -------- -------- ---------- ----------- ----------
			IF ( v_scan_workload_only = TRUE ) THEN
D000	      0.0	 605	  0.0	 100.0		0	    0
			  ------------------------------------------------------


Modified Parameters			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> This section shows all the modified initialization parameters that
were in effect during the entire snapshot interval
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
-> End Value is displayed only if the parameter value was modified within
the snapshot interval

								End value
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
_ipddb_enable		      TRUE
				v_do_scan_query := TRUE;
audit_file_dest 	      /u01/app/oracle/admin/p30db/adump
audit_trail		      DB
cluster_database	      TRUE
compatible		      19.0.0
control_files		      +DATA/P30DB/CONTROLFILE/current.2
db_block_size		      8192
db_create_file_dest	      +DATA
				v_scan_query_quota := FALSE;
db_domain		      example.com
db_name 		      p30db
db_recovery_file_dest	      +FRA
db_recovery_file_dest_size    274877906944
diagnostic_dest 	      /u01/app/oracle
dispatchers		      (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 	      1
			ELSE
listener_networks
local_listener		       (ADDRESS=(PROTOCOL=TCP)(HOST=192
nls_language		      AMERICAN
nls_territory		      AMERICA
open_cursors		      300
pga_aggregate_target	      3371171840
processes		      640
				IF ( v_scan_query_quota = FALSE ) THEN
remote_listener 	       mcracpoc-scan.example.com:1521
remote_login_passwordfile     EXCLUSIVE
sga_target		      10133438464
thread			      1
undo_tablespace 	      UNDOTBS1
			  ------------------------------------------------------


					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
Modified Multi-Valued Parameters	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> This section only displays parameters that have more than one value
->'(NULL)' indicates a missing parameter value
-> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot

								End value
Parameter Name		      Begin value			(if different)
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
----------------------------- --------------------------------- --------------
control_files		      +DATA/P30DB/CONTROLFILE/current.2
			      +FRA/P30DB/CONTROLFILE/current.25
			  ------------------------------------------------------

Top SQL with Top Events 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top SQL statements by DB Time along with the top events by DB Time
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

						v_do_scan_query := TRUE;
		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1006	   75.83
					ELSE
db file sequential read 	 69.35 TABLE ACCESS - BY INDEX ROWID BAT   69.35
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


gc cr grant 2-way		  3.39 TABLE ACCESS - BY INDEX ROWID BAT    3.39


CPU + Wait for CPU		  2.18 TABLE ACCESS - BY INDEX ROWID BAT    1.51
						v_do_scan_query := FALSE;

	  35dumc2tpr9dv 	   203653710		      205	   15.44
db file sequential read 	 13.78 UPDATE				   13.78
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

					END IF;
			  ------------------------------------------------------

Top SQL with Top Row Sources		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
				ELSE
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
					-- Scan quota has been filled,	force drain some random access SELECTS
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1006	   75.83
TABLE ACCESS - BY INDEX ROWID BATCHED	   75.08 db file sequential read   69.35
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      205	   15.44
					v_do_scan_query := FALSE;
UPDATE					   15.29 db file sequential read   13.78
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  ------------------------------------------------------

Top Sessions				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
				END IF;
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
			END IF;
-------------------- ------------------------------ ------------------ --------
       10,32406       4.37 db file sequential read		3.84
USER17		     sqlplus@mcracp...m (TNS V1-V3)	  51/60 [ 84%]	     10

       11,22304       4.37 db file sequential read		4.14
USER25		     sqlplus@mcracp...m (TNS V1-V3)	  55/60 [ 91%]	      8

		END IF;
       13,27134       4.37 db file sequential read		3.99
USER12		     sqlplus@mcracp...m (TNS V1-V3)	  53/60 [ 88%]	      4

      144,41325       4.37 db file sequential read		3.92
USER32		     sqlplus@mcracp...m (TNS V1-V3)	  52/60 [ 86%]	      8

      145,27084       4.37 db file sequential read		4.22

USER39		     sqlplus@mcracp...m (TNS V1-V3)	  56/60 [ 93%]	     10

			  ------------------------------------------------------

Top Blocking Sessions			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  ------------------------------------------------------


Top PL/SQL Procedures			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
		IF ( v_do_scan_query != TRUE ) THEN
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
			SELECT COUNT(c2) INTO v_rowcnt
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       15.59
   SQL								       15.59
			  ------------------------------------------------------

Top Events				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event
			FROM cf1

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     83.13	18.28
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);
log file parallel write 	    System I/O	    BACKGROUND
      3.92	 0.86
gc cr grant 2-way		    Cluster	    FOREGROUND
      3.39	 0.75
CPU + Wait for CPU		    CPU 	    FOREGROUND
      3.31	 0.73
CPU + Wait for CPU		    CPU 	    BACKGROUND
      2.79	 0.61

			  ------------------------------------------------------

Top Event P1/P2/P3 Values		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 83.13		  "2","25425623","1"	   0.08
file#			   block#		      blocks

		ELSE
log file parallel write 	  3.92			 "1","4","1"	   0.83
files			   blocks		      requests

			  ------------------------------------------------------

Top DB Objects				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------

			v_scan_queries_cnt := v_scan_queries_cnt + 1;
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------
	  73439       4.37 db file sequential read		4.22
USER9.CF1 (TABLE)				      IOPS
	  73464       4.37 db file sequential read		3.99

USER12.CF1 (TABLE)				      IOPS
	  73546       4.37 db file sequential read		3.99
USER29.CF1 (TABLE)				      IOPS
	  73590       4.37 db file sequential read		4.22
USER39.CF1 (TABLE)				      IOPS
	  73418       4.29 db file sequential read		3.84
USER5.CF1 (TABLE)				      IOPS
			  ------------------------------------------------------
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN

Activity Over Time			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
				v_scan_query_quota := TRUE;
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
			END IF;
15:44:14   (46 secs)	  117 db file sequential read		  101	 7.61
			      CPU + Wait for CPU		    6	 0.45
			      log file parallel write		    5	 0.38
15:45:00   (5.0 min)	  680 db file sequential read		  578	43.52
			      CPU + Wait for CPU		   40	 3.01
			      gc cr grant 2-way 		   24	 1.81
15:50:00   (4.3 min)	  531 db file sequential read		  425	32.00
		END IF;
			      CPU + Wait for CPU		   35	 2.64
			      log file parallel write		   24	 1.81
			  ------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_1_157'
	  --------------------------------------------


Analysis Period
---------------
AWR snapshot range from 156 to 157.
		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
Time period starts at 10-FEB-20 03.44.14 PM
Time period ends at 10-FEB-20 03.54.19 PM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
	ELSE
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 11969 seconds.
The average number of active sessions was 19.78.

		--
Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     19.69 | 99.51	  2
		-- Do an UPDATE statement
2  "User I/O" wait Class		     17.81 | 90.02	  0
3  Top Segments by "User I/O" and "Cluster"  4.64 | 23.46	  5
4  Global Cache Messaging		     1.02 | 5.13	  1
5  Undersized SGA			     .56 | 2.81 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		--


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 19.72 active sessions, 99.51% of total activity.
----------------------------------------------------------

SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 16.36 active sessions, 82.68% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
		v_my_serial := v_my_serial + v_loop_cnt ;
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.

      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 612523 times and
      had an average elapsed time of 0.016 seconds.
		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);

   Recommendation 2: SQL Tuning
   Estimated benefit is 3.33 active sessions, 16.83% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
		v_scan_queries_cnt := 0;
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
		v_random_access_queries_cnt := 0;
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
	END IF;
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 108129 times and
      had an average elapsed time of 0.016 seconds.



Finding 2: "User I/O" wait Class
	v_loop_cnt := v_loop_cnt + 1 ;
Impact is 17.84 active sessions, 90.02% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
	v_now := DBMS_UTILITY.GET_TIME();
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.



Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.65 active sessions, 23.46% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.
	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN

   Recommendation 1: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER9.CF1" with
		-- If this is a fixed-iteration count test cycle and we've hit the number of
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100220
      physical reads, 14261 physical writes and 0 direct reads.
		-- iterations then set exit flag

   Recommendation 2: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
		v_stop_immediate := TRUE ;
      Investigate application logic involving I/O on TABLE "USER12.CF1" with
      object ID 73464.
      Related Object
	 Database object with ID 73464.
	END IF;
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 99630
      physical reads, 14251 physical writes and 0 direct reads.
END LOOP;

   Recommendation 3: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action

      Investigate application logic involving I/O on TABLE "USER29.CF1" with
      object ID 73546.
      Related Object
	 Database object with ID 73546.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100720
v_end_time := v_now ;
      physical reads, 14234 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
v_now := DBMS_UTILITY.GET_TIME();
      Investigate application logic involving I/O on TABLE "USER39.CF1" with
      object ID 73590.
      Related Object
	 Database object with ID 73590.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 99474
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
      physical reads, 14002 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 4.63% of total activity.
   ------------------------------------------------------------------
   Action

      Investigate application logic involving I/O on TABLE "USER5.CF1" with
      object ID 73418.
      Related Object
	 Database object with ID 73418.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100522
v_total_time := v_end_time - v_begin_time ;
      physical reads, 14274 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 17.81 active sessions, 90.02% of total activity.
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;


Finding 4: Global Cache Messaging
Impact is 1.02 active sessions, 5.13% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is 1.02 active sessions, 5.13% of total activity.
   -------------------------------------------------------------------
   Action
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 91% of Cluster wait
      during the analysis period.


   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.05 active sessions, 5.29% of total activity.


END;</pre_sqltext></td></tr>
Finding 5: Undersized SGA
Impact is .56 active sessions, 2.81% of total activity.
-------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter "sga_target" was "9664 M" during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .13 active sessions, .65% of total activity.
   -----------------------------------------------------------------
   Action
<tr><td scope="row" class='awrc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrc'><pre_sqltext class="awr">select ind.type#,	ind.property,	 base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,  sys.obj$	base_obj  where ind.obj#	  = :oid    and ind.dataobj#	  = :doid    and ind.bo#	 = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
      Increase the size of the SGA by setting the parameter "sga_target" to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 17.81 active sessions, 90.02% of total activity.



<tr><td scope="row" class='awrnc'><a class="awr" name="6wvzvgvg6qsyb"></a>6wvzvgvg6qsyb</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_findings (id,  task_id,  type,  parent,  obj_id,  impact_msg_id,  impact_val,  msg_id,  more_info_id,  name_msg_code,  flags,  exec_name) VALUES (:1,  :2,	:3,  :4,  :5,  :6,  :7, :8,  :9,  :10,	:11,  :12) </pre_sqltext></td></tr>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
<tr><td scope="row" class='awrc'><a class="awr" name="6x8682kb2y8vd"></a>6x8682kb2y8vd</td><td class='awrc'><pre_sqltext class="awr">DECLARE
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
v_default_schema_number PLS_INTEGER := '20';
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

RAC Statistics  DB/Inst: P30DB/p30db1	Snaps: 156-157
v_update_pct PLS_INTEGER := '15';

				Begin	End
				----- -----
	   Number of Instances:     2	  2
	       Number of LMS's:     2	  2
      Number of realtime LMS's:     2	  2  (0 priority changes)

v_max_loop_iterations PLS_INTEGER := '0';

Global Cache Load Profile
~~~~~~~~~~~~~~~~~~~~~~~~~		   Per Second	    Per Transaction
				      ---------------	    ---------------
  Global Cache blocks received: 		24.92		       0.14
    Global Cache blocks served: 		32.63		       0.18
v_seconds_to_run PLS_INTEGER := '600';
     GCS/GES messages received: 	     5,180.48		      28.82
	 GCS/GES messages sent: 	     5,476.84		      30.47
	    DBWR Fusion writes: 		 0.10		       0.00
 Estd Interconnect traffic (KB) 	     2,541.91


v_scale PLS_INTEGER := '1048576';
Global Cache Efficiency Percentages (Target local+remote 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Buffer access -  local cache %:   62.17
Buffer access - remote cache %:    0.27
Buffer access - 	disk %:   37.56
Global Cache Locality	     %:   50.63
v_work_unit PLS_INTEGER := '4' ;


Global Cache and Enqueue Services - Workload Characteristics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Avg global cache cr block receive time (us):		1,285.2
     Avg global cache current block receive time (us):		  741.2
v_redo_stress  VARCHAR2(12) := 'LITE';
			       Avg LMS process busy %:		   13.5

	    Avg global cache cr block build time (us):		  651.6
      Global cache log flushes for cr blocks served %:		    0.6
	    Avg global cache cr block flush time (us):		4,722.2

v_hot_schema_modulus PLS_INTEGER := '0';
	 Avg global cache current block pin time (us):		    0.0
 Global cache log flushes for current blocks served %:		    0.3
       Avg global cache current block flush time (us):		8,775.5

		     Avg global enqueue get time (us):		   38.7

v_do_hotspot   VARCHAR(7) := 'FALSE';
Global Cache and Enqueue Services - Messaging Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Avg message sent queue time (us):		  706.0
	     Avg message sent queue time on ksxp (us):		  882.0
	  Avg message received kernel queue time (us):		   40.6
		 Avg message received queue time (us):		   15.5
v_hotspot_mb  NUMBER := '8';
		    Avg GCS message process time (us):		   40.7
		    Avg GES message process time (us):		   34.5

			    % of direct sent messages:		  45.25
			  % of indirect sent messages:		  54.71
			% of flow controlled messages:		   0.05
v_hotspot_offset_mb NUMBER := '16';
	  -------------------------------------------------------------

Cluster Interconnect
-> if Public/Source at End snap is different a '*' is displayed
~~~~~~~~~~~~~~~~~~~~
				    Begin			    End
v_hotspot_modulus  PLS_INTEGER := '3';
	     --------------------------------------------------   -------
Interface    IP Address      Pub Source 			  Pub Src
----------   --------------- --- ------------------------------   --- ---
fg-priv:1    169.254.22.248  N

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157


Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
Cluster reconfiguration count			 0	    0.0 	 0.0
Domain reconfiguration count			 0	    0.0 	 0.0
Global Enqueue S-optim Broadcasts		46	    0.1 	 0.0
v_sleep_modulus PLS_INTEGER := '0';
Global Enqueue S-optim S-lock get	    19,516	   32.3 	 0.2
Global Enqueue S-optim anti-locks		11	    0.0 	 0.0
KA local message waits				 0	    0.0 	 0.0
KA local messages received			 0	    0.0 	 0.0
KA messages received actual			 0	    0.0 	 0.0
KA messages received logical			 0	    0.0 	 0.0
v_sleep_min NUMBER := '.1';
KA requests failed				 0	    0.0 	 0.0
KA requests succeeded				 0	    0.0 	 0.0
Pseudo reconfiguration count			 0	    0.0 	 0.0
Pseudo rm reconfig count			 0	    0.0 	 0.0
acks for commit broadcast(actual)	    33,393	   55.2 	 0.3
acks for commit broadcast(logical	    69,691	  115.3 	 0.6
v_sleep_max NUMBER := '.5';
broadcast msgs on commit(actual)	    72,928	  120.6 	 0.7
broadcast msgs on commit(logical)	   100,016	  165.4 	 0.9
broadcast msgs on commit(wasted)	    37,583	   62.2 	 0.3
dynamically allocated gcs resourc		 0	    0.0 	 0.0
dynamically allocated gcs shadows		 0	    0.0 	 0.0
flow control messages received			 1	    0.0 	 0.0
v_scan_query_pct PLS_INTEGER := '0';
flow control messages sent			 0	    0.0 	 0.0
gcs assume cvt					 0	    0.0 	 0.0
gcs assume no cvt			     6,275	   10.4 	 0.1
gcs ast to fg				   846,526	1,400.2 	 7.8
gcs ast xid					 1	    0.0 	 0.0
gcs bidless ast to lms			       209	    0.3 	 0.0
gcs blocked converts			    28,479	   47.1 	 0.3
v_obfuscate VARCHAR(5)	:= 'FALSE';
gcs blocked cr converts 		     4,635	    7.7 	 0.0
gcs compatible basts				 9	    0.0 	 0.0
gcs compatible cr basts (global)		17	    0.0 	 0.0
gcs compatible cr basts (local) 	    10,971	   18.1 	 0.1
gcs cr basts to PIs				 0	    0.0 	 0.0

gcs cr requests to slave			 0	    0.0 	 0.0
gcs cr serve without current lock		 0	    0.0 	 0.0
gcs dbwr flush pi msgs			   152,737	  252.6 	 1.4
gcs dbwr write request msgs			60	    0.1 	 0.0
gcs error msgs					 0	    0.0 	 0.0
gcs flash read serve requests to		 0	    0.0 	 0.0

gcs force cr block only 			 0	    0.0 	 0.0
gcs force cr grant				 2	    0.0 	 0.0
gcs force cr no current 			 0	    0.0 	 0.0
gcs forward cr to pinged instance		 0	    0.0 	 0.0
gcs grant ast				   846,735	1,400.5 	 7.8
gcs grant request in partial open		 0	    0.0 	 0.0
gcs immediate (compatible) conver	     5,845	    9.7 	 0.1
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
gcs immediate (null) converts		   273,459	  452.3 	 2.5
gcs immediate cr (compatible) con	       842	    1.4 	 0.0
gcs immediate cr (null) converts	 1,545,022	2,555.5 	14.2
gcs lms flush pi msgs				 0	    0.0 	 0.0
gcs lms write request msgs			75	    0.1 	 0.0
gcs msgs process time(ms)		    88,937	  147.1 	 0.8
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
gcs msgs received			 2,183,263	3,611.2 	20.1
gcs new served by master		       371	    0.6 	 0.0
gcs out-of-order msgs				 0	    0.0 	 0.0
gcs pings refused			     1,472	    2.4 	 0.0
gcs pkey conflicts retry			 0	    0.0 	 0.0
gcs queued converts				 4	    0.0 	 0.0

gcs read-mostly failure unmount d		 0	    0.0 	 0.0
gcs reader bypass N->Xw ping loca		 0	    0.0 	 0.0

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
v_num_tmp NUMBER := 0;
gcs reader bypass N->Xw ping remo		 0	    0.0 	 0.0
gcs reader bypass grant X on assu		 0	    0.0 	 0.0
gcs reader bypass grant ast			 0	    0.0 	 0.0
gcs reader bypass grant fg ast			 0	    0.0 	 0.0
gcs reader bypass grant immediate		22	    0.0 	 0.0
gcs recovery claim msgs 			 0	    0.0 	 0.0

gcs refuse xid					 2	    0.0 	 0.0
gcs refuse xid to fg				 2	    0.0 	 0.0
gcs refuse xid to lms				 0	    0.0 	 0.0
gcs refuse xid to master			 0	    0.0 	 0.0
gcs regular cr					 0	    0.0 	 0.0
gcs resources for dynamic sga			 0	    0.0 	 0.0
v_loop_cnt PLS_INTEGER := 0;
gcs retry convert request			 0	    0.0 	 0.0
gcs shadows for dynamic sga			 0	    0.0 	 0.0
v_rowcnt PLS_INTEGER := 0;
gcs share recovery bast 			 0	    0.0 	 0.0
gcs side channel msgs actual		     4,436	    7.3 	 0.0
gcs side channel msgs logical		   960,801	1,589.2 	 8.8
gcs stale cr					 1	    0.0 	 0.0
gcs undo cr					 2	    0.0 	 0.0
v_updates_cnt PLS_INTEGER := 0;
gcs write notification msgs			 0	    0.0 	 0.0
gcs writes refused				 0	    0.0 	 0.0
ges msgs process time(ms)		       122	    0.2 	 0.0
ges msgs received			     3,538	    5.9 	 0.0
ges remote lock allocation		      -108	   -0.2 	 0.0
v_selects_cnt PLS_INTEGER := 0;
global posts dropped				 0	    0.0 	 0.0
global posts queue time 			 0	    0.0 	 0.0
global posts queued				 0	    0.0 	 0.0
global posts requested				 0	    0.0 	 0.0
global posts sent				 0	    0.0 	 0.0
implicit batch messages received	    30,764	   50.9 	 0.3

implicit batch messages sent		    29,311	   48.5 	 0.3
lmd msg send time(ms)				 0	    0.0 	 0.0
lms(s) msg send time(ms)			 0	    0.0 	 0.0
messages flow controlled		     1,190	    2.0 	 0.0
messages queue sent actual		   237,687	  393.1 	 2.2
messages queue sent logical		   206,820	  342.1 	 1.9
messages received actual		 1,222,707	2,022.4 	11.3
v_random_access_queries_cnt PLS_INTEGER := 0;
messages received logical		 2,186,801	3,617.0 	20.1
messages sent directly			 1,090,312	1,803.4 	10.0
messages sent indirectly		 1,318,283	2,180.5 	12.1
messages sent not implicit batche	    12,041	   19.9 	 0.1
messages sent pbatched			 1,125,527	1,861.7 	10.4
msgs causing lmd to send msgs			 0	    0.0 	 0.0
v_scan_queries_cnt PLS_INTEGER := 0;
msgs causing lms(s) to send msgs		 0	    0.0 	 0.0
msgs received kernel queue time (   88,874,406,709 1.470009E+08    817,807.4
msgs received queue time (ms)		    33,790	   55.9 	 0.3
msgs received queued			 2,186,801	3,617.0 	20.1
msgs sent queue time (ms)		   256,625	  424.5 	 2.4
msgs sent queue time on ksxp (ms)	 1,172,535	1,939.4 	10.8

msgs sent queued			   363,467	  601.2 	 3.3
msgs sent queued on ksxp		 1,329,398	2,198.9 	12.2
number of broadcasted resources 		 0	    0.0 	 0.0
number of directly freed master r		 0	    0.0 	 0.0
number of ges deadlock detected 		 0	    0.0 	 0.0
number of lock borrowed by LMD			 0	    0.0 	 0.0
number of received ODPS messages		 0	    0.0 	 0.0
v_do_scan_query BOOLEAN :=FALSE;
number of received RBA messages 		 0	    0.0 	 0.0
number of resource borrowed by LM		 0	    0.0 	 0.0
number of sent ODPS messages			 0	    0.0 	 0.0
number of sent RBA messages			 0	    0.0 	 0.0

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

v_scan_query_quota  BOOLEAN := FALSE;
Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
process batch messages received 	   172,685	  285.6 	 1.6
process batch messages sent		   118,982	  196.8 	 1.1
receiver cycle time			   320,673	  530.4 	 3.0
receiver loop count			 1,335,553	2,209.0 	12.3
v_scan_workload_only BOOLEAN := FALSE;
			  ------------------------------------------------------


Global CR Server Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

Statistic				    Total
------------------------------ ------------------
CR Block Requests			    4,109
v_random_workload_only BOOLEAN := FALSE;
CURRENT Block Requests			    1,492
Data Block Requests			    4,109
Undo Block Requests				2
TX Block Requests			    1,477
Current Results 			    5,599
Private results 				1
Zero Results					1

Disk Read Results				0
Fail Results					0
Fairness Down Converts			    4,038
Light Works				    1,682
Flushes 				       36
Builds					    4,109
Errors						0

			  ------------------------------------------------------

Global Current Server Statistics	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Pins    = CURRENT Block Pin Operations
-> Flushes = Redo Flush before CURRENT Block Served Operations

Statistic	  Total % <100us   % <1ms  % <10ms % <100ms    % <1s   % <10s
v_random_block PLS_INTEGER := 1;
---------- ------------ -------- -------- -------- -------- -------- --------
Pins		      2    50.00    50.00
Flushes 	     49 	     6.12    75.51    18.37
			  ------------------------------------------------------

Global Cache Transfer Statistics	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
v_tmp PLS_INTEGER;
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested (Congst) - Block Transfer impacted by Remote System Load
-> ordered by CR + Current Blocks Received desc

			       CR			  Current
		 ----------------------------- -----------------------------
v_now PLS_INTEGER;
Inst Block	   Blocks      %      %      %	 Blocks      %	    %	   %
  No Class	 Received  Immed   Busy Congst Received  Immed	 Busy Congst
---- ----------- -------- ------ ------ ------ -------- ------ ------ ------
   2 data block     2,325   99.4     .6     .0	 12,500   84.2	 15.8	  .0
   2 Others	       34   97.1    2.9     .0	     52   57.7	 42.3	  .0
   2 undo header       54   70.4   29.6     .0	      6   33.3	 66.7	  .0
v_brick_wall PLS_INTEGER;
   2 undo block 	3   33.3   66.7     .0	    N/A    N/A	  N/A	 N/A
			  ------------------------------------------------------

Global Cache Transfer Times (us)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Avg Time - average time of all blocks (Immed,Busy,Congst) in us
-> Immed, Busy, Congst -  Average times in us

-> ordered by CR + Current Blocks Received desc

		    CR Avg Time (us)	     Current Avg Time (us)
	      --------------------------- ---------------------------
Inst Block
  No Class	 All  Immed   Busy Congst    All  Immed   Busy Congst
---- -------- ------ ------ ------ ------ ------ ------ ------ ------
v_begin_time PLS_INTEGER;
   2 data blo	1263   1234   5687   6676    743    707    929	 3878
   2 others	1158	491  23166    N/A    533    589    457	  N/A
   2 undo hea	2160	482   6147    N/A   2425    614   3330	  N/A
   2 undo blo	2632   1265   3316    N/A    N/A    N/A    N/A	  N/A
			  ------------------------------------------------------

Global Cache Transfer (Immediate)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
v_end_time PLS_INTEGER;
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> % of Blocks Received requiring 2 or 3 hops
-> ordered by CR + Current Blocks Received desc

				   CR			    Current
		      --------------------------- ---------------------------
 Src Block     Blocks  Immed Blks	%	%  Immed Blks	    %	    %
v_total_time PLS_INTEGER;
Inst Class	 Lost	 Received    2hop    3hop    Received	 2hop	 3hop
---- -------- ------- ----------- ------- ------- ----------- ------- -------
   2 data blo		    2,310   100.0     0.0      10,524	100.0	  0.0
   2 others		       33   100.0     0.0	   30	100.0	  0.0
   2 undo hea		       38   100.0     0.0	    2	100.0	  0.0
v_begin_cpu_tm PLS_INTEGER;
   2 undo blo			1   100.0     0.0	  N/A	  N/A	  N/A
			  ------------------------------------------------------

Global Cache Times (Immediate)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Blocks Lost, 2-hop and 3-hop Average times in (us)
-> ordered by CR + Current Blocks Received desc

v_end_cpu_tm PLS_INTEGER;
		       CR Avg Time (us)   Current Avg Time (us)
		     -------------------- --------------------
 Src Block	Lost
Inst Class	Time  Immed   2hop   3hop  Immed   2hop   3hop
---- -------- ------ ------ ------ ------ ------ ------ ------
   2 data blo	       1234   1234    N/A    707    707    N/A
   2 others		491    491    N/A    589    589    N/A
v_total_cpu_tm PLS_INTEGER;
   2 undo hea		482    482    N/A    614    614    N/A
   2 undo blo	       1265   1265    N/A    N/A    N/A    N/A
			  ------------------------------------------------------

Interconnect Ping Latency Statistics	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ping latency of the roundtrip of a message from this instance to -> target in

-> The target instance is identified by an instance number.
-> Average and standard deviation of ping latency is given in microseconds
-> for message sizes of 500 bytes and 8K.
-> Note that latency of a message from the instance to itself is used as
-> control, since message latency can include wait for CPU

   Target 500B Pin Avg La      Stddev  8K Ping Avg La	   Stddev
v_do_sleeps BOOLEAN := FALSE;
 Instance    Count 500B m    500B msg	 Count 8K msg	   8K msg
--------- -------- ------ ----------- -------- ------ -----------
	1	55    771	  .41	    60	  742	      .39
	2	55    895	  .34	    60	  939	      .35
			  ------------------------------------------------------

Interconnect Throughput by Client	 DB/Inst: P30DB/p30db1	Snaps: 156-157
v_loop_control BOOLEAN := FALSE;
-> Throughput of interconnect usage by major consumers
-> All throughput numbers are megabytes per second

			Send	 Receive
Used By 	  Mbytes/sec  Mbytes/sec
---------------- ----------- -----------
Global Cache		 .29	     .30
Parallel Query		 .01	     .01
v_update_quota BOOLEAN := FALSE;
DB Locks		1.23	    1.09
DB Streams		 N/A	     N/A
Other			 .00	     .00
			  ------------------------------------------------------

Interconnect Device Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Throughput and errors of interconnect devices (at OS level)
-> All throughput numbers are megabytes per second
v_select_only_workload BOOLEAN := FALSE;

Device Name	IP Address	 Public Source
--------------- ---------------- ------ -------------------------------
				  Send	   Send
       Send	Send	 Send	Buffer	Carrier
 Mbytes/sec   Errors  Dropped  Overrun	   Lost
----------- -------- -------- -------- --------
			       Receive	Receive
v_update_only_workload BOOLEAN := FALSE;
    Receive  Receive  Receive	Buffer	  Frame
 Mbytes/sec   Errors  Dropped  Overrun	 Errors
----------- -------- -------- -------- --------
fg-priv:1	169.254.22.248	 NO
	.00	   0	    0	     0	      0
	.00	   0	    0	     0	      0
			  ------------------------------------------------------

v_do_update BOOLEAN := FALSE;
Dynamic Remastering Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Times are in seconds
-> Affinity objects - Affinity objects mastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot

							per    Begin	  End
Name					Total	Remaster Op	Snap	 Snap
v_do_hot_schema BOOLEAN := FALSE;
-------------------------------- ------------ ------------- -------- --------
affinity objects					N/A	   1	    1
read-mostly objects					N/A	   3	    3
affinity objects (other inst)				N/A	   3	    3
read-mostly objects (persistent)			N/A	   1	    1
			  ------------------------------------------------------

v_stop_immediate BOOLEAN := FALSE;
End of Report
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;
Report written to awr.txt

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

SQL> SQL> SQL> 	IF  ( v_select_only_workload = TRUE ) THEN
SQL> SQL> SQL> SQL> 		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN




			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE

			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the

name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------


Type Specified:  text
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN

		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="71v63sn4bfskh"></a>71v63sn4bfskh</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '7';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--



		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="72r567f4w1r2z"></a>72r567f4w1r2z</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '15';

v_max_loop_iterations PLS_INTEGER := '0';


v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="7bd84p4z76t66"></a>7bd84p4z76t66</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '30';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="8wrvc2gfamkva"></a>8wrvc2gfamkva</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '25';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9babjv8yq8ru3"></a>9babjv8yq8ru3</td><td class='awrc'><pre_sqltext class="awr">BEGIN DBMS_OUTPUT.GET_LINES(:LINES,  :NUMLINES); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9sq9djzzhr19y"></a>9sq9djzzhr19y</td><td class='awrnc'><pre_sqltext class="awr">WITH binds as
	 (select :dbid			as dbid
	       ,  :inst_id_low		 as instIdLow
	       ,  :inst_id_high 	 as instIdHigh
	       ,  :begin_snap		 as beginSnap
	       ,  :end_snap		 as endSnap
	       ,  :begin_time		 as beginTime
	       ,  :end_time		 as endTime
	       ,  :disk_begin_time	 as diskBeginTime
	       ,  :disk_end_time	 as diskEndTime
	       ,  :mem_begin_time	 as memBeginTime
	       ,  :mem_end_time 	 as memEndTime
	       ,  :bucket_count 	 as bucketCount
	       ,  :bucket_interval	 as bucketInterval
	       ,  :mem_enable		 as memEnable
	       ,  :disk_enable		 as diskEnable
	       ,  :disk_filter_ratio	 as filterRatio,  :filter_action as filter_action,  :filter_blocking_session as filter_blocking_session,  :filter_capture_id as filter_capture_id,  :filter_client_id as filter_client_id,  :filter_consumer_group_id as filter_consumer_group_id,  :filter_dbop as filter_dbop,  :filter_ecid as filter_ecid,	:filter_event as filter_event,	:filter_instance_number as filter_instance_number,  :filter_is_captured as filter_is_captured,	:filter_is_filtered_out as filter_is_filtered_out,  :filter_is_nc_background as filter_is_nc_background,  :filter_is_replayed as filter_is_replayed,  :filter_machine as filter_machine,  :filter_machine_port as filter_machine_port,	:filter_module as filter_module,  :filter_object as filter_object,  :filter_pdb as filter_pdb,	:filter_physical_session as filter_physical_session,  :filter_pl_sql as filter_pl_sql,	:filter_pl_sql_top as filter_pl_sql_top,  :filter_program as filter_program,  :filter_px_process as filter_px_process,	:filter_service_hash as filter_service_hash,  :filter_session_type as filter_session_type,  :filter_sql_fms as filter_sql_fms,	:filter_sql_id_top as filter_sql_id_top,  :filter_sql_opcode as filter_sql_opcode,  :filter_sql_opcode_top as filter_sql_opcode_top,  :filter_sql_rws as filter_sql_rws,  :filter_sql_rws_line as filter_sql_rws_line,	:filter_sqlid as filter_sqlid,	:filter_sqlid_fullphv as filter_sqlid_fullphv,	:filter_sqlid_phv as filter_sqlid_phv,	:filter_user_id as filter_user_id,  :filter_wait_class as filter_wait_class,  :filter_xid as filter_xid from sys.dual)	,  unified_ash as
	     (SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
       ,  a.p2text	
       ,  a.p3
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
       ,  a.current_file#
       ,  a.current_block#	
       ,  a.top_level_call#
       ,  a.top_level_call_name
       ,  a.program
       ,  a.module
       ,  a.action
       ,  a.client_id
       ,  a.remote_instance#	
       ,  a.ecid
       ,  a.consumer_group_id
       ,  a.machine
       ,  a.port
       ,  a.in_connection_mgmt
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  decode(binds.diskEnable, 0, 1, binds.filterRatio)
		       as sample_count
		   ,  inst_id as instance_number
		FROM sys.gv_$active_session_history a,	binds
	       WHERE binds.memEnable = 1
		 AND (	binds.diskEnable = 0
		     OR (  binds.diskEnable = 1
		       AND a.is_awr_sample = 'Y'
		       AND bitand(a.flags,  128) = 0 ) )
		 AND a.inst_id between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	      UNION ALL
	      SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
       ,  a.p2text	
       ,  a.p3
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
       ,  a.current_file#
       ,  a.current_block#	
       ,  a.top_level_call#
       ,  a.top_level_call_name
       ,  a.program
       ,  a.module
       ,  a.action
       ,  a.client_id
       ,  a.remote_instance#	
       ,  a.ecid
       ,  a.consumer_group_id
       ,  a.machine
       ,  a.port
       ,  a.in_connection_mgmt
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  binds.filterRatio as sample_count
		   ,  instance_number as instance_number
		FROM AWR_ROOT_active_sess_history a,
		     binds
	       WHERE binds.diskEnable = 1
		 AND a.dbid = binds.dbid
		 AND a.instance_number between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.snap_id between
			  binds.beginSnap
		      and binds.endSnap + 1
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	     ),  logical_ash as
	     (select sample_id
		   ,  sample_time
		   ,  sample_count
		   ,  instance_number as inst_id,  wait_class as global_hist_wc, event as event, instance_number || ':' || session_id || ', ' || session_serial# as physical_session, sql_id as sqlid, wait_class as wait_class,  xid as xid,  instance_number as instance_number,  user_id as user_id,  program as program from unified_ash) ,  bucketized_ash as
	   (SELECT ash0.*,
		  (case when binds.bucketCount &gt; 1
			then trunc( ( (24 * 60 * 60 *
				       extract(day from sample_time
						      - binds.beginTime))
				    + (60 * 60 *
				       extract(hour from sample_time
						      - binds.beginTime))
				    + (60 *
				       extract(minute from sample_time
						      - binds.beginTime))
				    + (1 *
				       extract(second from sample_time
						      - binds.beginTime))
				     ) / binds.bucketInterval
				   ) + 1
			else 1
		   end) as bucket_number
	   FROM logical_ash ash0,  binds),  filter_xml as
	 (SELECT xmlconcat(xmlelement(&quot;filters&quot; )
	 ,  xmlelement(&quot;report_time&quot;, xmlattributes(
	     to_char(o.begintime,  'HH24:MI:SS MM/DD/YYYY') as &quot;begin_time&quot;,
	     to_char(o.endtime,  'HH24:MI:SS MM/DD/YYYY') as &quot;end_time&quot;))) as xml_frag FROM
    (select binds.*,  nvl(to_number(filter_pdb), 0) as con_dbid from binds) o) ,  filtered_ash as
	      (SELECT ash.*,
		      (case when 1=1  then 1 else 0 end) filtered
	       FROM bucketized_ash ash,  binds),  grouped_ash as
		   (SELECT ash.*,   (CASE WHEN nvl(filtered,  2) = 1
				      THEN 0  -- target / no histogram
				      ELSE 1  -- totals/global
				 END) AS bucket_type  FROM (SELECT filtered,  event, physical_session, sqlid, wait_class, bucket_number      ,	grouping_id(filtered,  event, physical_session, sqlid, wait_class, bucket_number) as gid , global_hist_wc  , max(inst_id)	     as inst_id
			     , sum(sample_count)       as sample_count
			     , count(distinct sqlid)   as uniq_sqlids
			     , count(distinct xid)     as uniq_xids
			     , count(distinct physical_session)
						      as uniq_sessions
			     , count(distinct instance_number)
						      as uniq_instances, max(user_id) as user_id, max(program) as program from	filtered_ash
		     group by  grouping sets(  (bucket_number,	global_hist_wc) ,  ( bucket_number,  wait_class,  filtered),  (wait_class,  filtered),	(sqlid,  wait_class,  filtered),  (physical_session,  wait_class,  filtered),  (wait_class,  event,  filtered)) ) ash  -- eliminate rows with filtered = 0
		     -- keep filtered and from global/total
		     WHERE (nvl(filtered,  2) != 0)),  component_1_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 13
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 13
				   then mem_rank
				   else (13 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 13
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 13
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 13
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 13
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select wait_class as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , wait_class) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 29
			      and wait_class is not null)
		    group by (case when mem_rank &lt;= 13
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_1_histogram as
		  (select bucket_number
			 , sum(sample_count)		as sample_count
			 , max(case when mem_rank &lt;= 13
				   then mem_rank
				   when mem_rank is not null
				   then (13 + 1)
			       end)			as mem_rank
			 , bucket_type

		    from (select g1.bucket_number
				, g1.sample_count	 as sample_count
				, (case when g1.wait_class = g2.dim_val

				       then to_char(g2.dim_val)
				       -- global/totals
				       when g1.bucket_type = 1
				       then g1.global_hist_wc
				       else null
				   end) 		as dim_val
				, (case when g1.wait_class = g2.dim_val

				       then g2.mem_rank
				       when g1.bucket_type = 1 then NULL
				       else (13 + 1)
				   end) 		as mem_rank
				,  g1.bucket_type

			   from grouped_ash g1,
				component_1_treemap g2
			  where -- both filtered and global
				(g1.gid = 28  AND
				 g1.wait_class is not null OR
				 g1.bucket_type = 1)
			    and g1.wait_class = g2.dim_val(+)

			    -- join filtered rows only
			    and g1.bucket_type = g2.bucket_type(+)
			  )
		 group by bucket_number
			 , dim_val

			 , bucket_type
		  ) ,  component_1_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('wait_class' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , xmlconcat(
			    topmems.topmems_frag
			   , histogram.histogram_xml)) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 13
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 13
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 13
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_1_treemap) t
		   ) topmems , (SELECT xmlagg(
			  xmlelement(
			   &quot;histogram&quot;
			  , xmlattributes(
			     (case when bucket_type = 1 then 'all'
				   else 'target'
			      end) AS &quot;type&quot;
			    , max(binds.bucketCount)	as &quot;bucket_count&quot;
			    , max(binds.bucketInterval) as &quot;bucket_interval&quot;)
			  , xmlagg(bucket_xml
				    order by
				      bucket_type,
				      bucket_number asc)
				     )
				 ) as histogram_xml
		  FROM (SELECT	bucket_type
			       , bucket_number
			       , xmlelement(
				&quot;bucket&quot;
			       , xmlattributes(bucket_number	 as &quot;number&quot;
					     , sum(sample_count) as &quot;count&quot;)
			       , (case
				 when bucket_type = 0 then -- filtered rows
				   xmlelement(
				    &quot;top_mems&quot;
				   , xmlattributes(
				     sum(case when mem_rank &lt;= 13
					      then sample_count
					      else 0
					  end) as &quot;count&quot;)
				   , xmlagg(
				     xmlelement(
				       &quot;mem&quot;
				       , xmlattributes(
					  mem_rank     as &quot;id&quot;
					 , sample_count as &quot;count&quot;))
				     order by mem_rank asc))
				 end)) as bucket_xml
			 FROM (component_1_histogram)
			 GROUP BY bucket_number,  bucket_type),  binds
		  GROUP by bucket_type) histogram ),  component_2_xml as
	     (select xmlelement(
			&quot;item&quot;
		       , xmlattributes(
			   'sqlid, wait_class' as &quot;item&quot;)
			  , xmlelement(
			      &quot;top_mems&quot;
			     , xmlagg(
				xmlelement(
				  &quot;mem&quot;
				 , xmlattributes(
				    dim1_value		   as &quot;dim1_value&quot;
				   , dim1_nummem	    as
&quot;dim1_nummem&quot;
				   , dim1_rank		    as &quot;dim1_rank&quot;
				   , dim2_value 	    as &quot;dim2_value&quot;
				   , dim12_nummem	    as &quot;dim2_nummem&quot;
				   , dim12_rank 	    as &quot;dim2_rank&quot;
				   , dim12_count	    as &quot;count&quot;
				   , uniq_sqlids	    as &quot;uniq_sqlids&quot;
				   , uniq_xids		    as &quot;uniq_xids&quot;
				   , uniq_sessions	    as &quot;uniq_sessions&quot;
				   , uniq_instances	    as &quot;uniq_instances&quot;

				  )
				, NVL2(sql_text1,
				      xmlelement(&quot;info&quot;
				       , xmlattributes('dim1_name' as &quot;type&quot;)
				       , sql_text1),  NULL)
				, NVL2(NULL,
				      xmlelement(&quot;info&quot;
					, xmlattributes('dim2_name' as &quot;type&quot;)
					, NULL),  NULL)
				)
			       order by dim1_rank, dim12_rank
			      )
			   )
		     ) as dim_frag
		from
		 (select  dim_data.*
			  , NVL((SELECT replace(substr(v.sql_text,  1,	100), CHR(0), '') as sql_text
	 FROM sys.gv_$sql v
	 WHERE v.sql_id = dim_data.dim1_value
	       AND v.inst_id = dim_data.inst_id

	       AND rownum &lt; 2 ), ( SELECT replace(sys.dbms_lob.substr(v.sql_text,  100,  1), CHR(0), '')
	   as sql_text
	 FROM AWR_ROOT_sqltext v,  binds b
	 WHERE v.dbid = b.dbid
	   AND v.sql_id = dim_data.dim1_value

	   AND rownum &lt; 2)) as sql_text1

		  from (select
			     max(case when dim1_rank &lt;= 10
				      then dim1_val
				      else null
				  end)			   as dim1_value
			    , max(case when dim1_rank &lt;= 10
				      then dim2_val
				      else null
				  end)			   as dim2_value
			    , sum(dim12_count) as dim12_count
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sqlids
				      else 0
				  end)			   as uniq_sqlids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_xids
				      else 0
				  end)			   as uniq_xids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sessions
				      else 0
				  end)			   as uniq_sessions
			    , max(case when dim1_rank &lt;= 10
				      then uniq_instances
				      else 0
				  end)			   as uniq_instances
			    , count(distinct dim1_val)	    as dim1_nummem
			    , sum(dim12_nummem) 	    as dim12_nummem
			    , max(case when dim1_rank &lt;= 10
				      then dim1_rank
				      else (10 + 1)
				  end)			   as dim1_rank
			    , max(case when dim1_rank &lt;= 10
				      then dim12_rank
				      else (10 + 1)
				  end)			   as dim12_rank
			    , max(inst_id)	    as inst_id

			from (select dim1_val
				    , max(case when dim12_rank &lt;= 13
					      then dim2_val
					      else null
					  end)		   as dim2_val
				    , dim1_count
				    , sum(dim12_count)	    as dim12_count
				    , max(case when dim12_rank &lt;= 13
					      then uniq_sqlids
					      else 0
					  end)		   as uniq_sqlids
				    , max(case when dim12_rank &lt;= 13
					      then uniq_xids
					      else 0
					  end)		   as uniq_xids
				    , max(case when dim12_rank &lt;= 13
					      then uniq_sessions
					      else 0
					  end)		   as uniq_sessions
				    , max(case when dim12_rank &lt;= 13
					      then uniq_instances
					      else 0
					  end)		   as uniq_instances
				    , count(*) as dim12_nummem
				    , dense_rank() over
				       (order by dim1_count desc
						, dim1_val
				       ) as dim1_rank
				    , max(case when dim12_rank &lt;= 13
					      then dim12_rank
					      else (13 + 1)
					  end)		   as dim12_rank
				    , max(inst_id)	    as inst_id

				 from (select sqlid   as dim1_val
					     , wait_class   as dim2_val
					     , sample_count as dim12_count
					     , dense_rank() over
						(partition by sqlid

						     order by sample_count desc
							     , wait_class

						) as dim12_rank
					     , sum(sample_count) over
						(partition by sqlid

						) as dim1_count
					     , uniq_sqlids
					     , uniq_xids
					     , uniq_sessions
					     , uniq_instances
					     , inst_id

					from grouped_ash
				       where gid = 25
					 and sqlid is not null
					 and wait_class is not null )
			     group by dim1_val
				     , dim1_count
				     , (case when dim12_rank &lt;= 13
					    then dim2_val
					    else null
					end)

			     )
		    group by (case when dim1_rank &lt;= 10
				   then dim1_val
				   else null
			       end)
			    , (case when dim1_rank &lt;= 10
				   then dim2_val
				   else null
			       end)

			   ) dim_data
			) t
		     ),  component_3_xml as
	     (select xmlelement(
			&quot;item&quot;
		       , xmlattributes(
			   'physical_session, wait_class' as &quot;item&quot;)
			  , xmlelement(
			      &quot;top_mems&quot;
			     , xmlagg(
				xmlelement(
				  &quot;mem&quot;
				 , xmlattributes(
				    dim1_value		   as &quot;dim1_value&quot;
				   , dim1_nummem	    as &quot;dim1_nummem&quot;
				   , dim1_rank		    as &quot;dim1_rank&quot;
				   , dim2_value 	    as &quot;dim2_value&quot;
				   , dim12_nummem	    as &quot;dim2_nummem&quot;
				   , dim12_rank 	    as &quot;dim2_rank&quot;
				   , dim12_count	    as &quot;count&quot;
				   , uniq_sqlids	    as &quot;uniq_sqlids&quot;
				   , uniq_xids		    as &quot;uniq_xids&quot;
				   , uniq_sessions	    as &quot;uniq_sessions&quot;
				   , uniq_instances	    as &quot;uniq_instances&quot;

				  )
				, NVL2(NULL,
				      xmlelement(&quot;info&quot;
				       , xmlattributes('dim1_name' as &quot;type&quot;)
				       , NULL),  NULL)
				, NVL2(NULL,
				      xmlelement(
&quot;info&quot;
					, xmlattributes('dim2_name' as &quot;type&quot;)
					, NULL),  NULL)
				)
			       order by dim1_rank, dim12_rank
			      )
			   )
		     ) as dim_frag
		from
		 (select  dim_data.*


		  from (select
			     max(case when dim1_rank &lt;= 10
				      then dim1_val
				      else null
				  end)			   as dim1_value
			    , max(case when dim1_rank &lt;= 10
				      then dim2_val
				      else null
				  end)			   as dim2_value
			    , sum(dim12_count) as dim12_count
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sqlids
				      else 0
				  end)			   as uniq_sqlids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_xids
				      else 0
				  end)			   as uniq_xids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sessions
				      else 0
				  end)			   as uniq_sessions
			    , max(case when dim1_rank &lt;= 10
				      then uniq_instances
				      else 0
				  end)			   as uniq_instances
			    , count(distinct dim1_val)	    as dim1_nummem
			    , sum(dim12_nummem) 	    as dim12_nummem
			    , max(case when dim1_rank &lt;= 10
				      then dim1_rank
				      else (10 + 1)
				  end)			   as dim1_rank
			    , max(case when dim1_rank &lt;= 10
				      then dim12_rank
				      else (10 + 1)
				  end)			   as dim12_rank
			    , max(inst_id)	    as inst_id

			from (select dim1_val
				    , max(case when dim12_rank &lt;= 13
					      then dim2_val
					      else null
					  end)		   as dim2_val
				    , dim1_count
				    , sum(dim12_count)	    as dim12_count
				    , max(case when dim12_rank &lt;= 13
					      then uniq_sqlids
					      else 0
					  end)		   as uniq_sqlids
				    , max(case when dim12_rank &lt;= 13
					      then uniq_xids
					      else 0
					  end)		   as uniq_xids
				    , max(case when dim12_rank &lt;= 13
					      then uniq_sessions
					      else 0
					  end)		   as uniq_sessions
				    , max(case when dim12_rank &lt;= 13
					      then uniq_instances
					      else 0
					  end)		   as uniq_instances
				    , count(*) as dim12_nummem
				    , dense_rank() over
				       (order by dim1_count desc
						, dim1_val
				       ) as dim1_rank
				    , max(case when dim12_rank &lt;= 13
					      then dim12_rank
					      else (13 + 1)
					  end)		   as dim12_rank
				    , max(inst_id)	    as inst_id

				 from (select physical_session	 as dim1_val
					     , wait_class   as dim2_val
					     , sample_count as dim12_count
					     , dense_rank() over
						(partition by physical_session

						     order by sample_count desc
							     , wait_class

						) as dim12_rank
					     , sum(sample_count) over
						(partition by physical_session

						) as dim1_count
					     , uniq_sqlids
					     , uniq_xids
					     , uniq_sessions
					     , uniq_instances
					     , inst_id

					from grouped_ash
				       where gid = 21
					 and physical_session is not null
					 and wait_class is not null )
			     group by dim1_val
				     , dim1_count
				     , (case when dim12_rank &lt;= 13
					    then dim2_val
					    else null
					end)

			     )
		    group by (case when dim1_rank &lt;= 10
				   then dim1_val
				   else null
			       end)
			    , (case when dim1_rank &lt;= 10
				   then dim2_val
				   else null
			       end)

			   ) dim_data
			) t
		     ),  component_4_xml as
	     (select xmlelement(
			&quot;item&quot;
		       , xmlattributes(
			   'wait_class, event' as &quot;item&quot;)
			  , xmlelement(
			      &quot;top_mems&quot;
			     , xmlagg(
				xmlelement(
				  &quot;mem&quot;
				 , xmlattributes(
				    dim1_value		   as &quot;dim1_value&quot;
				   , dim1_nummem	    as &quot;dim1_nummem&quot;
				   , dim1_rank		    as &quot;dim1_rank&quot;
				   , dim2_value 	    as &quot;dim2_value&quot;
				   , dim12_nummem	    as &quot;dim2_nummem&quot;
				   , dim12_rank 	    as &quot;dim2_rank&quot;
				   , dim12_count	    as &quot;count&quot;
				   , uniq_sqlids	    as &quot;uniq_sqlids&quot;
				   , uniq_xids		    as &quot;uniq_xids&quot;
				   , uniq_sessions	    as &quot;uniq_sessions&quot;
				   , uniq_instances	    as &quot;uniq_instances&quot;

				  )
				, NVL2(NULL,
				      xmlelement(&quot;info&quot;
				       , xmlattributes('dim1_name' as &quot;type&quot;)
				       , NULL),  NULL)
				, NVL2(NULL,
				      xmlelement(&quot;info&quot;
					, xmlattributes('dim2_name' as &quot;type&quot;)
					, NULL),  NULL)
				)
			       order by dim1_rank, dim12_rank
			      )
			   )
		     ) as dim_frag
		from
		 (select  dim_data.*


		  from (select
			     max(case when dim1_rank &lt;= 13
				      then dim1_val
				      else null
				  end)			   as dim1_value
			    , max(case when dim1_rank &lt;= 13
				      then dim2_val
				      else null
				  end)			   as dim2_value
			    , sum(dim12_count) as dim12_count
			    , max(case when dim1_rank &lt;= 13
				      then uniq_sqlids
				      else 0
				  end)			   as uniq_sqlids
			    , max(case when dim1_rank &lt;= 13
				      then uniq_xids
				      else 0
				  end)			   as uniq_xids
			    , max(case when dim1_rank &lt;= 13
				      then uniq_sessions
				      else 0
				  end)			   as uniq_sessions
			    , max(case when dim1_rank &lt;= 13
				      then uniq_instances
				      else 0
				  end)			   as uniq_instances
			    , count(distinct dim1_val)	    as dim1_nummem
			    , sum(dim12_nummem) 	    as dim12_nummem
			    , max(case when dim1_rank &lt;= 13
				      then dim1_rank
				      else (13 + 1)
				  end)			   as dim1_rank
			    , max(case when dim1_rank &lt;= 13
				      then dim12_rank
				      else (13 + 1)
				  end)			   as dim12_rank
			    , max(inst_id)	    as inst_id

			from (select dim1_val
				    , max(case when dim12_rank &lt;= 10
					      then dim2_val
					      else null
					  end)		   as dim2_val
				    , dim1_count
				    , sum(dim12_count)	    as dim12_count
				    , max(case when dim12_rank &lt;= 10
					      then uniq_sqlids
					      else 0
					  end)		   as uniq_sqlids
				    , max(case when dim12_rank &lt;= 10
					      then uniq_xids
					      else 0
					  end)		   as uniq_xids
				    , max(case when dim12_rank &lt;= 10
					      then uniq_sessions
					      else 0
					  end)		   as uniq_sessions
				    , max(case when dim12_rank &lt;= 10
					      then uniq_instances
					      else 0
					  end)		   as uniq_instances
				    , count(*) as dim12_nummem
				    , dense_rank() over
				       (order by dim1_count desc
						, dim1_val
				       ) as dim1_rank
				    , max(case when dim12_rank &lt;= 10
					      then dim12_rank
					      else (10 + 1)
					  end)		   as dim12_rank
				    , max(inst_id)	    as inst_id

				 from (select wait_class   as dim1_val
					     , event   as dim2_val
					     , sample_count as dim12_count
					     , dense_rank() over
						(partition by wait_class

						     order by sample_count desc
							     , event

						) as dim12_rank
					     , sum(sample_count) over
						(partition by wait_class

						) as dim1_count
					     , uniq_sqlids
					     , uniq_xids
					     , uniq_sessions
					     , uniq_instances
					     , inst_id

					from grouped_ash
				       where gid = 13
					 and wait_class is not null
					 and event is not null )
			     group by dim1_val
				     , dim1_count
				     , (case when dim12_rank &lt;= 10
					    then dim2_val
					    else null
					end)

			     )
		    group by (case when dim1_rank &lt;= 13
				   then dim1_val
				   else null
			       end)
			    , (case when dim1_rank &lt;= 13
				   then dim2_val
				   else null
			       end)

			   ) dim_data
			) t
		     )select xmlconcat((select xml_frag from filter_xml),
		      xmlelement(&quot;dim_list&quot;,
				 xmlconcat((select dim_frag from component_1_xml), (select dim_frag from component_2_xml), (select dim_frag from component_3_xml), (select dim_frag from component_4_xml)))
		) from sys.dual</pre_sqltext></td>
</tr>
<tr><td scope="row" class='awrc'><a class="awr" name="a95n8p4vpxmps"></a>a95n8p4vpxmps</td><td class='awrc'><pre_sqltext class="awr">begin prvt_hdm.execute_slave_actions; end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrnc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bhs63jbrb30ru"></a>bhs63jbrb30ru</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '13';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bqwwfnsg2f57w"></a>bqwwfnsg2f57w</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '9';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
Current Database
~~~~~~~~~~~~~~~~
		-- If this is a fixed-iteration count test cycle and we've hit the number of
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db


		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="brqrryv4mja36"></a>brqrryv4mja36</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="d3r94djtpj7r9"></a>d3r94djtpj7r9</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '19';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);



BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);



-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="drktaf71uygnb"></a>drktaf71uygnb</td><td class='awrc'><pre_sqltext class="awr">BEGIN
	  sys.prvt_hdm.auto_execute(
	    db_id =&gt; :bind_dbid,
	    inst_id =&gt; :bind_inst,
	    end_snap =&gt; :bind_snap,
	    time_left_in_secs =&gt; :bind_time);
	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrnc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		       equality_preds	 = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds    + decode(bitand(:flag, 2), 0, 0, 1),    nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),	 range_preds	   = range_preds       + decode(bitand(:flag, 8), 0, 0, 1),    like_preds	 = like_preds	     + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	= null_preds	    + decode(bitand(:flag, 32), 0, 0, 1),    flags	       = flags + :flag - bitand(flags, :flag),	   timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f5pbdmj9v6wga"></a>f5pbdmj9v6wga</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '38';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;




		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrnc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)	values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fg11facbfjwvx"></a>fg11facbfjwvx</td><td class='awrnc'><pre_sqltext class="awr">
	  SELECT  /*+ no_monitor leading(mo_px) use_hash(mo_px) */
	  xmlelement(
	    &quot;sql_monitor_list_report&quot;,
	    xmlattributes(
	      :report_version				  as &quot;version&quot;,
	      :total_count				  as &quot;total_count&quot;,
	      to_char(:new_last_refresh_time,
		      :date_fmt)			  as &quot;sysdate&quot;,
	      :auto_refresh				  as &quot;auto_refresh&quot;,
	      :base_path				  as &quot;base_path&quot;),
	    case
	      when :debug_xml is NULL
	      then NULL
	      else xmltype(:debug_xml)
	    end,
	    xmlagg(
	      case
	       when mo.dbop_name is not NULL
	       then
	       xmlelement(
		 &quot;dbop&quot;,
		  xmlattributes(mo.detail_level 	as &quot;detail&quot;,
				mo.report_ref		as &quot;report_ref&quot;,
				mo.dbop_name		as &quot;dbop_name&quot;,
				to_char(mo.sql_exec_start,
					:date_fmt)	as &quot;dbop_exec_start&quot;,
				mo.dbop_exec_id 	as &quot;dbop_exec_id&quot;),
		 decode(
		   mo.detail_level,
		   'P',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;)),
		 decode(
		   mo.detail_level,
		   'F',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.first_refresh_time,


			     :date_fmt) 	   as &quot;first_refresh_time&quot;,
Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;,
		     mo.inst_id 		   as &quot;inst_id&quot;,
		     mo.sid			   as &quot;session_id&quot;,
		     mo.session_serial# 	   as &quot;session_serial&quot;,
		     mo.user#			   as &quot;user_id&quot;,
		     mo.username		   as &quot;user&quot;,
		     decode(mo.con_id,	0,  NULL,  mo.con_id)
						   as &quot;con_id&quot;,
		     mo.con_name		   as &quot;con_name&quot;,
		     mo.module			   as &quot;module&quot;,
		     mo.action			   as &quot;action&quot;,
		     mo.service_name		   as &quot;service&quot;,
		     mo.client_identifier	   as &quot;client_id&quot;,
		     mo.client_info		   as &quot;client_info&quot;,
		     mo.program 		   as &quot;program&quot;,
		     mo.plsql_entry_object_id	   as &quot;plsql_entry_object_id&quot;,
		     mo.plsql_entry_subprogram_id
						as &quot;plsql_entry_subprogram_id&quot;,
		     mo.plsql_object_id 	as &quot;plsql_object_id&quot;,
		     mo.plsql_subprogram_id	as &quot;plsql_subprogram_id&quot;,
		     mo.rm_consumer_group	as &quot;rm_consumer_group&quot;,
		     mo.px_is_cross_instance	as &quot;is_cross_instance&quot;,
		     mo.px_maxdop		as &quot;dop&quot;,
		     mo.px_maxdop_instances	as &quot;instances&quot;,
		     mo.ecid			as &quot;ecid&quot;)),
		 case
		   when mo.error_number is null or
			mo.detail_level = 'N'
		   then null
		   else
		     xmlelement(&quot;error&quot;,
			      xmlattributes(mo.error_number   as &quot;number&quot;,
					    mo.error_facility as &quot;facility&quot;),
			      mo.error_message)
		 end,
		 case
		   when mo.rm_last_action is not null
		   then
		     xmlelement(&quot;rm_action&quot;,
		       xmlattributes(mo.rm_last_action	 as &quot;name&quot;,
				     mo.rm_last_action_reason as &quot;reason&quot;))
		 end,
		 decode(mo.detail_level,  'N',	null,
		  xmlelement(&quot;stats&quot;,
		   xmlattributes('monitor' as &quot;type&quot;),
		   xmlelement(&quot;stat&quot;,
			      xmlattributes('duration' as &quot;name&quot;),
			      greatest(mo.duration,
				       least(mo.elapsed_time/1000000,  1),
				       ceil(mo.queuing_time/1000000))),
		   decode(mo.elapsed_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('elapsed_time' as &quot;name&quot;),
				   mo.elapsed_time)),
		   decode(mo.queuing_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('queuing_time' as &quot;name&quot;),
				   mo.queuing_time)),
		   decode(mo.cpu_time,	0,  NULL,
			  xmlelement(&quot;stat&quot;,
				    xmlattributes('cpu_time' as &quot;name&quot;),
				    mo.cpu_time)),
		   decode(mo.user_io_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_io_wait_time' as &quot;name&quot;),
				mo.user_io_wait_time)),
		   decode(mo.application_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('application_wait_time' as &quot;name&quot;),
			      mo.application_wait_time)),
		   decode(mo.concurrency_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('concurrency_wait_time' as &quot;name&quot;),
			      mo.concurrency_wait_time)),
		   decode(mo.cluster_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('cluster_wait_time' as &quot;name&quot;),
				mo.cluster_wait_time)),
		   decode(mo.plsql_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('plsql_exec_time' as &quot;name&quot;),
				mo.plsql_exec_time)),
		   decode(mo.java_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('java_exec_time' as &quot;name&quot;),
				mo.java_exec_time)),
		   decode(mo.other_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('other_wait_time' as &quot;name&quot;),
				mo.other_wait_time)),
		   decode(mo.fetches,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_fetch_count' as &quot;name&quot;),
				mo.fetches)),
		   decode(mo.buffer_gets,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('buffer_gets' as &quot;name&quot;),
				mo.buffer_gets)),
		   decode(mo.read_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_reqs' as &quot;name&quot;),
				mo.read_reqs)),
		   decode(mo.read_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_bytes' as &quot;name&quot;),
				mo.read_bytes)),
		   decode(mo.write_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_reqs' as &quot;name&quot;),
				mo.write_reqs)),
		   decode(mo.write_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_bytes' as &quot;name&quot;),
				mo.write_bytes)),
		   case
		     when mo.io_inter_bytes is null or
			  mo.io_inter_bytes = mo.io_bytes or
			  mo.io_bytes = 0
		     then null
		     else xmlelement(&quot;stat
&quot;,
				xmlattributes('cell_offload_efficiency' as
					      &quot;name&quot;),
				round(mo.io_bytes /
				      decode(mo.io_inter_bytes,  0,  1,
					     mo.io_inter_bytes),  2))
		   end)))
	       else
	       xmlelement(
		 &quot;sql&quot;,
		 xmlattributes(mo.detail_level	       as &quot;detail&quot;,
			       mo.report_ref	       as &quot;report_ref&quot;,
			       mo.sql_id	       as &quot;sql_id&quot;,
			       to_char(mo.sql_exec_start,
				       :date_fmt)      as &quot;sql_exec_start&quot;,
			       mo.sql_exec_id	       as &quot;sql_exec_id&quot;),
		 decode(
		   mo.detail_level,
		   'P',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;,
		     mo.px_is_cross_instance	   as &quot;is_cross_instance&quot;,
		     mo.px_maxdop		   as &quot;dop&quot;,
		     mo.px_maxdop_instances	   as &quot;instances&quot;,
		     mo.px_servers_requested	   as &quot;px_servers_requested&quot;,
		     mo.px_servers_allocated	   as &quot;px_servers_allocated&quot;)),
		 decode(
		   mo.detail_level,
		   'F',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.first_refresh_time,
			     :date_fmt) 	   as &quot;first_refresh_time&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;,
		     mo.inst_id 		   as &quot;inst_id&quot;,
		     mo.sid			   as &quot;session_id&quot;,
		     mo.session_serial# 	   as &quot;session_serial&quot;,
		     mo.user#			   as &quot;user_id&quot;,
		     mo.username		   as &quot;user&quot;,
		     decode(mo.con_id,	0,  NULL,  mo.con_id)
						   as &quot;con_id&quot;,
		     mo.con_name		   as &quot;con_name&quot;,
		     mo.module			   as &quot;module&quot;,
		     mo.action			   as &quot;action&quot;,
		     mo.service_name		   as &quot;service&quot;,
		     mo.client_identifier	   as &quot;client_id&quot;,
		     mo.client_info		   as &quot;client_info&quot;,
		     mo.program 		   as &quot;program&quot;,
		     mo.sql_plan_hash_value	   as &quot;plan_hash&quot;,
		     mo.plsql_entry_object_id	   as &quot;plsql_entry_object_id&quot;,
		     mo.plsql_entry_subprogram_id
						as &quot;plsql_entry_subprogram_id&quot;,
		     mo.plsql_object_id 	as &quot;plsql_object_id&quot;,
		     mo.plsql_subprogram_id	as &quot;plsql_subprogram_id&quot;,
		     mo.rm_consumer_group	as &quot;rm_consumer_group&quot;,
		     mo.px_is_cross_instance	as &quot;is_cross_instance&quot;,
		     mo.px_maxdop		as &quot;dop&quot;,
		     mo.px_maxdop_instances	as &quot;instances&quot;,
		     mo.px_servers_requested	as &quot;px_servers_requested&quot;,
		     mo.px_servers_allocated	as &quot;px_servers_allocated&quot;,
		     mo.ecid			as &quot;ecid&quot;)),
		 case
		   when mo.error_number is null or
			mo.detail_level = 'N'
		   then null
		   else
		     xmlelement(&quot;error&quot;,
			      xmlattributes(mo.error_number   as &quot;number&quot;,
					    mo.error_facility as &quot;facility&quot;),
			      mo.error_message)
		 end,
		 case
		   when mo.rm_last_action is not null
		   then
		     xmlelement(&quot;rm_action&quot;,
		       xmlattributes(mo.rm_last_action	 as &quot;name&quot;,
				     mo.rm_last_action_reason as &quot;reason&quot;))
		 end,
		 case
		   when :sel_sqltext = 0 or
			mo.detail_level != 'F'
		   then null
		   else
		     xmlelement(
		       &quot;sql_text&quot;,
		       xmlattributes(mo.is_full_sqltext  as &quot;is_full&quot;),
		       to_clob(mo.sql_text))
		 end,
		 decode(mo.detail_level,  'N',	null,
		  xmlelement(&quot;stats&quot;,
		   xmlattributes('monitor' as &quot;type&quot;),
		   xmlelement(&quot;stat&quot;,
			      xmlattributes('duration' as &quot;name&quot;),
			      greatest(mo.duration,
				       least(mo.elapsed_time/1000000,  1),
				       ceil(mo.queuing_time/1000000))),
		   decode(mo.elapsed_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('elapsed_time' as &quot;name&quot;),
				   mo.elapsed_time)),
		   decode(mo.queuing_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('queuing_time' as &quot;name&quot;),
				   mo.queuing_time)),
		   decode(mo.cpu_time,	0,  NULL,
			  xmlelement(&quot;stat&quot;,
				    xmlattributes('cpu_time' as &quot;name&quot;),
				    mo.cpu_time)),
		   decode(mo.user_io_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_io_wait_time' as &quot;name&quot;),
				mo.user_io_wait_time)),
		   decode(mo.application_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('application_wait_time' as &quot;name&quot;),
			      mo.application_wait_time)),
		   decode(mo.concurrency_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('concurrency_wait_time' as &quot;name&quot;),
			      mo.concurrency_wait_time)),
		   decode(mo.cluster_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('cluster_wait_time' as &quot;name&quot;),
				mo.cluster_wait_time)),
		   decode(mo.plsql_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('plsql_exec_time' as &quot;name&quot;),
				mo.plsql_exec_time)),
		   decode(mo.java_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('java_exec_time' as &quot;name&quot;),
				mo.java_exec_time)),
		   decode(mo.other_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('other_wait_time' as &quot;name&quot;),
				mo.other_wait_time)),
		   decode(mo.fetches,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_fetch_count' as &quot;name&quot;),
				mo.fetches)),
		   decode(mo.buffer_gets,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('buffer_gets' as &quot;name&quot;),
				mo.buffer_gets)),
		   decode(mo.read_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_reqs' as &quot;name&quot;),
				mo.read_reqs)),
		   decode(mo.read_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_bytes' as &quot;name&quot;),
				mo.read_bytes)),
		   decode(mo.write_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_reqs' as &quot;name&quot;),
				mo.write_reqs)),
		   decode(mo.write_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_bytes' as &quot;name&quot;),
				mo.write_bytes)),
		   decode(:top_n_count,  NULL,	NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('row_rank' as &quot;name&quot;),
			      mo.row_rank)),
		   case
		     when mo.io_inter_bytes is null or
			  mo.io_inter_bytes = mo.io_bytes or
			  mo.io_bytes = 0
		     then null
		     else xmlelement(&quot;stat&quot;,
				xmlattributes('cell_offload_efficiency' as
					      &quot;name&quot;),
				round(mo.io_bytes /
				      decode(mo.io_inter_bytes,  0,  1,
					     mo.io_inter_bytes),  2))
		   end)))
		end
		order by decode(mo.running,  'Y',  1,  2),
			 decode(mo.running,  'Y',  mo.sql_exec_start,
				mo.last_refresh_time) desc,
			 mo.sql_id,
			 mo.dbop_name,
			 mo.sql_exec_id,
			 mo.dbop_exec_id desc))FROM
	  (SELECT
	    decode(
	      :top_n_count,  null,  0,
	      (rank() over
		(order by
		  decode(
		    lower(nvl(:top_n_rankby,  'last_active_time')),
		    'duration',  mo0.duration,
		    'db_time',	mo0.elapsed_time,
		    'cpu_time',  mo0.cpu_time,
		    'io_requests',  (mo0.read_reqs + mo0.write_reqs),
		    'io_bytes',  mo0.io_bytes,
		    decode(mo0.running,  'Y',  0,
			   (mo0.last_refresh_time - sysdate) *
			    3600 * 24)) desc))) row_rank,
	    mo0.*
	  FROM
	    (SELECT
	       mo_qc.status status,
	       case
		 when mo_qc.status = 'EXECUTING' or mo_qc.status = 'QUEUED'
		 then 'Y'
		 else 'N'
	       end running,
	       case
		 when mo_qc.last_active &lt;
			      :show_detail_after
		 then 'N'
		 when mo_qc.first_refresh_time &lt;
			      :show_detail_after
		 then 'P'
		 else 'F'
	       end detail_level,
	       mo_qc.error_number,
	       mo_qc.error_facility,
	       mo_qc.error_message,
	       mo_qc.rm_last_action,
	       mo_qc.rm_last_action_reason,
	       case
		 when :need_url = 1 and mo_qc.dbop_name is not NULL
		 then
		     'main?report_level=all'||chr(38)||
		     'dbop_name='||mo_qc.dbop_name||chr(38)||
		     'inst_id='||mo_qc.inst_id||chr(38)||
		     'sql_exec_start='||to_char(mo_qc.sql_exec_start,
						:date_fmt_mod)||chr(38)||
		     'dbop_exec_id='||mo_qc.dbop_exec_id
		 when :need_url = 1
		 then
		     'main?report_level=all'||chr(38)||
		     'sql_id='||mo_qc.sql_id||chr(38)||
		     'inst_id='||mo_qc.inst_id||chr(38)||
		     'sql_exec_start='||to_char(mo_qc.sql_exec_start,
						:date_fmt_mod)||chr(38)||
		     'sql_exec_id='||mo_qc.sql_exec_id
		 else
		   null
	       end report_ref,
	       mo_qc.sql_id,
	       mo_qc.dbop_name,
	       mo_qc.sql_exec_start,
	       mo_qc.sql_exec_id,
	       mo_qc.dbop_exec_id,
	       mo_qc.first_refresh_time,
	       case when mo_px.last_refresh_time is null or
			 mo_qc.last_refresh_time &gt; mo_px.last_refresh_time
		    then mo_qc.last_refresh_time
		    else mo_px.last_refresh_time
	       end last_refresh_time,
	       mo_qc.refresh_count + nvl(mo_px.refresh_count,  0) refresh_count,
	       round((mo_qc.last_active - mo_qc.sql_exec_start) *
							24 * 3600) duration,
	       mo_qc.inst_id inst_id,
	       mo_qc.sid sid,
	       mo_qc.session_serial# session_serial#,
	       mo_qc.user# user#,
	       mo_qc.username username,
	       mo_qc.module module,
	       mo_qc.action action,
	       mo_qc.service_name service_name,
	       mo_qc.client_identifier client_identifier,
	       mo_qc.client_info client_info,
	       mo_qc.program program,
	       mo_qc.sql_plan_hash_value sql_plan_hash_value,
	       mo_qc.plsql_entry_object_id plsql_entry_object_id,
	       mo_qc.plsql_entry_subprogram_id plsql_entry_subprogram_id,
	       mo_qc.plsql_object_id plsql_object_id,
	       mo_qc.plsql_subprogram_id plsql_subprogram_id,
	       mo_qc.rm_consumer_group rm_consumer_group,
	       mo_qc.px_is_cross_instance px_is_cross_instance,
	       mo_qc.px_maxdop px_maxdop,
	       decode(mo_qc.px_is_cross_instance,  'Y',
		      mo_qc.px_maxdop_instances,  NULL) px_maxdop_instances,
	       mo_qc.px_servers_requested px_servers_requested,
	       mo_qc.px_servers_allocated px_servers_allocated,
	       decode(:max_sqltext_length,  null,
		      mo_qc.is_full_sqltext,
		      case
			when length(mo_qc.sql_text) &gt;
			     :max_sqltext_length
			then 'N'
			else 'Y'
		      end) is_full_sqltext,
	       decode(:max_sqltext_length,  null,
		      mo_qc.sql_text,
		      substr(mo_qc.sql_text,  1,
			     :max_sqltext_length)) sql_text,
	       nvl(mo_px.sum_elapsed_time,  0) +
		mo_qc.elapsed_time elapsed_time,
	       mo_qc.queuing_time queuing_time,
	       nvl(mo_px.sum_cpu_time,	0) + mo_qc.cpu_time cpu_time,
	       nvl(mo_px.sum_user_io_wait_time,  0) +
		   mo_qc.user_io_wait_time user_io_wait_time,
	       nvl(mo_px.sum_application_wait_time,  0) +
		   mo_qc.application_wait_time application_wait_time,
	       nvl(mo_px.sum_concurrency_wait_time,  0) +
		   mo_qc.concurrency_wait_time concurrency_wait_time,
	       nvl(mo_px.sum_cluster_wait_time,  0) +
		   mo_qc.cluster_wait_time cluster_wait_time,
	       nvl(mo_px.sum_plsql_exec_time,  0) +
		   mo_qc.plsql_exec_time plsql_exec_time,
	       nvl(mo_px.sum_java_exec_time,  0) +
		   mo_qc.java_exec_time java_exec_time,
	       nvl(mo_px.sum_other_wait_time,  0) +
		   mo_qc.other_wait_time other_wait_time,
	       nvl(mo_px.sum_fetches,  0) + mo_qc.fetches fetches,
	       nvl(mo_px.sum_buffer_gets,  0) + mo_qc.buffer_gets buffer_gets,
	       nvl(mo_px.sum_read_reqs,  0) + mo_qc.read_reqs read_reqs,
	       nvl(mo_px.sum_read_bytes,  0) + mo_qc.read_bytes read_bytes,
	       nvl(mo_px.sum_write_reqs,  0) + mo_qc.write_reqs write_reqs,
	       nvl(mo_px.sum_write_bytes,  0) + mo_qc.write_bytes write_bytes,
	       nvl(mo_px.sum_io_inter_bytes,  0) +
		   mo_qc.io_inter_bytes io_inter_bytes,
	       nvl(mo_px.sum_io_bytes,	0) + mo_qc.io_bytes io_bytes,
	       mo_qc.con_id,
	       mo_qc.con_name,
	       mo_qc.ecid
	     FROM
	     (SELECT /*+ no_merge */
		     mo1.inst_id,
		     mo1.sid,
		     mo1.session_serial#,
		     mo1.sql_id,
		     mo1.dbop_name,
		     nvl(mo1.sql_exec_start,
			 mo1.first_refresh_time) sql_exec_start,
		     mo1.sql_exec_id,
		     mo1.dbop_exec_id,
		     mo1.first_refresh_time,
		     mo1.last_refresh_time,
		     mo1.refresh_count,
		     case
		       when mo1.status = 'EXECUTING' or mo1.status = 'QUEUED'
		       then :new_last_refresh_time
		       else mo1.last_refresh_time
		     end last_active,
		     mo1.sql_plan_hash_value,
		     mo1.status,
		     mo1.error_number,
		     mo1.error_facility,
		     mo1.error_message,
		     mo1.rm_last_action,
		     mo1.rm_last_action_reason,
		     mo1.px_is_cross_instance,
		     mo1.px_maxdop,
		     mo1.px_maxdop_instances,
		     mo1.px_servers_requested,
		     mo1.px_servers_allocated,
		     mo1.is_full_sqltext,
		     mo1.sql_text,
		     mo1.user#,
		     mo1.username,
		     mo1.module,
		     mo1.action,
		     mo1.service_name,
		     mo1.client_identifier,
		     mo1.client_info,
		     mo1.program,
		     mo1.plsql_entry_object_id,
		     mo1.plsql_entry_subprogram_id,
		     mo1.plsql_object_id,
		     mo1.plsql_subprogram_id,
		     mo1.rm_consumer_group,
		     case
		     when
		       mo1.elapsed_time &lt; (mo1.cpu_time+
					   mo1.application_wait_time+
					   mo1.concurrency_wait_time+
					   mo1.cluster_wait_time+
					   mo1.user_io_wait_time+
					   mo1.queuing_time)
		     then
		       (mo1.cpu_time+
			mo1.application_wait_time+
			mo1.concurrency_wait_time+
			mo1.cluster_wait_time+
			mo1.user_io_wait_time+
			mo1.queuing_time)
		     else
			mo1.elapsed_time
		     end elapsed_time,
		     mo1.cpu_time cpu_time,
		     mo1.user_io_wait_time user_io_wait_time,
		     mo1.application_wait_time application_wait_time,
		     mo1.concurrency_wait_time concurrency_wait_time,
		     mo1.cluster_wait_time cluster_wait_time,
		     mo1.plsql_exec_time plsql_exec_time,
		     mo1.java_exec_time java_exec_time,
		     mo1.queuing_time queuing_time,
		     case
		     when
		       mo1.elapsed_time &lt; (mo1.cpu_time+
					   mo1.application_wait_time+
					   mo1.concurrency_wait_time+
					   mo1.cluster_wait_time+
					   mo1.user_io_wait_time+
					   mo1.queuing_time)
		     then
		       0
		     else
		       mo1.elapsed_time - (mo1.cpu_time+
					   mo1.application_wait_time+
					   mo1.concurrency_wait_time+
					   mo1.cluster_wait_time+
					   mo1.user_io_wait_time+
					   mo1.queuing_time)
		     end other_wait_time,
		     mo1.fetches,
		     mo1.buffer_gets,
		     mo1.physical_read_requests read_reqs,
		     mo1.physical_read_bytes read_bytes,
		     mo1.physical_write_requests write_reqs,
		     mo1.physical_write_bytes write_bytes,
		     nvl(mo1.physical_read_bytes,  0) +
		       nvl(mo1.physical_write_bytes,  0) io_bytes,
		     mo1.io_interconnect_bytes io_inter_bytes,
		     mo1.con_id,
		     mo1.con_name,
		     mo1.ecid
	     FROM    gv$all_sql_monitor mo1
	     WHERE   mo1.px_qcsid is NULL
	       AND   mo1.inst_id between :target_inst_id_low and
					 :target_inst_id_high
	       AND   mo1.sid =
			 nvl(:target_session_id,
			     mo1.sid)
	       AND   ((:dbop_name is NULL and
		      mo1.sql_id = nvl(:sql_id,
				      mo1.sql_id))
		     OR
		     (:sql_id is NULL and
		      mo1.dbop_name =
			nvl(:dbop_name,
			    mo1.dbop_name))
		     OR
		     (mo1.dbop_name = :dbop_name or
		      mo1.sql_id = :sql_id))
	       AND   mo1.session_serial# =
			 nvl(:target_session_serial,
			       mo1.session_serial#)
	       AND   (mo1.status = 'EXECUTING' or
		      mo1.status = 'QUEUED' or
		      mo1.last_refresh_time &gt;=
			  :active_since_filter)
	       AND (nvl(mo1.sql_exec_start,  mo1.first_refresh_time) between
			:target_first_exec_start and
			:target_last_exec_start)
	       AND   1 = nvl(1,  :dbsearch_value)
	     ) mo_qc,
	    (SELECT /*+ no_merge */
		     mo2.sql_id,
		     mo2.sql_exec_start,
		     mo2.sql_exec_id,
		     max(mo2.last_refresh_time) last_refresh_time,
		     sum(mo2.refresh_count) refresh_count,
		     sum(
		       case
			 when
			   mo2.elapsed_time &lt; (mo2.cpu_time+
					       mo2.application_wait_time+
					       mo2.concurrency_wait_time+
					       mo2.cluster_wait_time+
					       mo2.user_io_wait_time)
			 then
			   (mo2.cpu_time+
			    mo2.application_wait_time+
			    mo2.concurrency_wait_time+
			    mo2.cluster_wait_time+
			    mo2.user_io_wait_time)
			 else
			   mo2.elapsed_time
		       end) sum_elapsed_time,
		     sum(mo2.cpu_time) sum_cpu_time,
		     sum(mo2.user_io_wait_time) sum_user_io_wait_time,
		     sum(mo2.application_wait_time) sum_application_wait_time,
		     sum(mo2.concurrency_wait_time) sum_concurrency_wait_time,
		     sum(mo2.cluster_wait_time) sum_cluster_wait_time,
		     sum(mo2.plsql_exec_time) sum_plsql_exec_time,
		     sum(mo2.java_exec_time) sum_java_exec_time,
		     sum(
		       case
			 when
			   mo2.elapsed_time &lt; (mo2.cpu_time+
					       mo2.application_wait_time+
					       mo2.concurrency_wait_time+
					       mo2.cluster_wait_time+
					       mo2.user_io_wait_time)
			 then
			   0
			 else
			   mo2.elapsed_time - (mo2.cpu_time+
					       mo2.application_wait_time+
					       mo2.concurrency_wait_time+
					       mo2.cluster_wait_time+
					       mo2.user_io_wait_time)
		       end) sum_other_wait_time,
		     sum(mo2.fetches) sum_fetches,
		     sum(mo2.buffer_gets) sum_buffer_gets,
		     sum(mo2.physical_read_requests) sum_read_reqs,
		     sum(mo2.physical_read_bytes) sum_read_bytes,
		     sum(mo2.physical_write_requests) sum_write_reqs,
		     sum(mo2.physical_write_bytes) sum_write_bytes,
		     sum(nvl(mo2.physical_read_bytes,  0) +
			 nvl(mo2.physical_write_bytes,	0)) sum_io_bytes,
		     sum(nvl(mo2.io_interconnect_bytes,  0)) sum_io_inter_bytes
	     FROM    gv$all_sql_monitor mo2
	     WHERE   :detail_is_parallel is not null
	       AND   mo2.inst_id between
			  :px_inst_id_low and
			  :px_inst_id_high
	       AND   mo2.px_qcinst_id between
			  :target_inst_id_low and
			  :target_inst_id_high
	       AND   mo2.sql_id between
			  :detail_px_min_sqlid and
			  :detail_px_max_sqlid
	       AND   mo2.sql_exec_start &gt;=
			  :detail_px_first_exec_start
	       AND   (mo2.px_qcsid =
			 nvl(:target_session_id,
			     mo2.px_qcsid))
	       AND   mo2.con_id = nvl(:con_id,	mo2.con_id)
	       AND   1 = nvl(1,  :dbsearch_value)
	     GROUP BY mo2.sql_id,
		      mo2.sql_exec_start,
		      mo2.sql_exec_id
	    ) mo_px
	  WHERE mo_qc.sql_id	     = mo_px.sql_id(+)
	    AND mo_qc.sql_exec_start = mo_px.sql_exec_start(+)
	    AND mo_qc.sql_exec_id    = mo_px.sql_exec_id(+)) mo0) mo
	WHERE row_rank &lt;= nvl(:top_n_count,	1)
	</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fhf8upax5cxsz"></a>fhf8upax5cxsz</td><td class='awrc'><pre_sqltext class="awr">BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref,  :snap_id,  :pr_class,					       :rep_id,  :suc); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fvmjqn5q18rmh"></a>fvmjqn5q18rmh</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '29';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="gdjc35y9zsuzm"></a>gdjc35y9zsuzm</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '40';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gjaap3w3qbf8c"></a>gjaap3w3qbf8c</td><td class='awrc'><pre_sqltext class="awr">select count(*) from ilmobj$ where rownum = 1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="grwydz59pu6mc"></a>grwydz59pu6mc</td><td class='awrnc'><pre_sqltext class="awr">select text from view$ where rowid=:1</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="23"></a>
<h2 class="awr">
Instance Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1200">Key Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1250">Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1300">Instance Activity Stats - Absolute Values</a></li>
<li class="awr"><a class="awr" href="#1400">Instance Activity Stats - Thread Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1200"></a>
<h3 class="awr">Key Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Key Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>894,206</td><td align="right" class='awrc'>1,479.04</td><td align="right" class='awrc'>8.23</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>726,479</td><td align="right" class='awrnc'>1,201.62</td><td align="right" class='awrnc'>6.68</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>310</td><td align="right" class='awrc'>0.51</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>2,412</td><td align="right" class='awrnc'>3.99</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>938</td><td align="right" class='awrc'>1.55</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>12,656</td><td align="right" class='awrnc'>20.93</td><td align="right" class='awrnc'>0.12</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>835,641</td><td align="right" class='awrnc'>1,382.18</td><td align="right" class='awrnc'>7.69</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>1,865</td><td align="right" class='awrc'>3.08</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>2,106,679</td><td align="right" class='awrc'>3,484.51</td><td align="right" class='awrc'>19.39</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>310,504</td><td align="right" class='awrnc'>513.58</td><td align="right" class='awrnc'>2.86</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>303,106,912</td><td align="right" class='awrc'>501,347.89</td><td align="right" class='awrc'>2,789.14</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>834,360</td><td align="right" class='awrnc'>1,380.06</td><td align="right" class='awrnc'>7.68</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>5,609,804</td><td align="right" class='awrc'>9,278.78</td><td align="right" class='awrc'>51.62</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>593</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>108,674</td><td align="right" class='awrc'>179.75</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>user rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>569</td><td align="right" class='awrc'>0.94</td><td align="right" class='awrc'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1250"></a>
<h3 class="awr">Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>505</td><td align="right" class='awrnc'>0.84</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>131</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>421</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>374</td><td align="right" class='awrc'>0.62</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>296</td><td align="right" class='awrnc'>0.49</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>334</td><td align="right" class='awrnc'>0.55</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>593,417</td><td align="right" class='awrnc'>981.53</td><td align="right" class='awrnc'>5.46</td></tr>
<tr><td scope="row" class='awrc'>Batched IO buffer defrag count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO double miss count</td><td align="right" class='awrnc'>593,417</td><td align="right" class='awrnc'>981.53</td><td align="right" class='awrnc'>5.46</td></tr>
<tr><td scope="row" class='awrc'>Batched IO same unit count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO single block count</td><td align="right" class='awrnc'>593,417</td><td align="right" class='awrnc'>981.53</td><td align="right" class='awrnc'>5.46</td></tr>
<tr><td scope="row" class='awrc'>Batched IO slow jump count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>116,549</td><td align="right" class='awrnc'>192.78</td><td align="right" class='awrnc'>1.07</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>87,958</td><td align="right" class='awrc'>145.49</td><td align="right" class='awrc'>0.81</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>998</td><td align="right" class='awrnc'>1.65</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>1,631,159</td><td align="right" class='awrc'>2,697.99</td><td align="right" class='awrc'>15.01</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>147</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>147</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>1,376,235</td><td align="right" class='awrnc'>2,276.33</td><td align="right" class='awrnc'>12.66</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>210</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>51,950</td><td align="right" class='awrc'>85.93</td><td align="right" class='awrc'>0.48</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>59,789</td><td align="right" class='awrnc'>98.89</td><td align="right" class='awrnc'>0.55</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>332,228</td><td align="right" class='awrc'>549.52</td><td align="right" class='awrc'>3.06</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>128,228</td><td align="right" class='awrnc'>212.09</td><td align="right" class='awrnc'>1.18</td></tr>
<tr><td scope="row" class='awrc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Commit SCN cached</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoint buffers written</td><td align="right" class='awrc'>17,425</td><td align="right" class='awrc'>28.82</td><td align="right" class='awrc'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoints</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR fusion writes</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR object drop buffers written</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR thread checkpoint buffers written</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>298</td><td align="right" class='awrnc'>0.49</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>10,195</td><td align="right" class='awrc'>16.86</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Effective IO time</td><td align="right" class='awrc'>140,119</td><td align="right" class='awrc'>231.76</td><td align="right" class='awrc'>1.29</td></tr>
<tr><td scope="row" class='awrnc'>HSC Heap Segment Block Changes</td><td align="right" class='awrnc'>327,188</td><td align="right" class='awrnc'>541.18</td><td align="right" class='awrnc'>3.01</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Inserts</td><td align="right" class='awrc'>157</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Updates</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Heatmap Blklevel Flush Task Count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>7,667,712</td><td align="right" class='awrc'>12,682.62</td><td align="right" class='awrc'>70.56</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>53,666</td><td align="right" class='awrnc'>88.77</td><td align="right" class='awrnc'>0.49</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>2,412</td><td align="right" class='awrnc'>3.99</td><td align="right" class='awrnc'>0.02</td></tr>
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')
<tr><td scope="row" class='awrc'>KTFB free req</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free space (block)</td><td align="right" class='awrnc'>1,240</td><td align="right" class='awrnc'>2.05</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>KTFB free time (ms)</td><td align="right" class='awrc'>339</td><td align="right" class='awrc'>0.56</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>LOB table id lookup cache misses</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX local messages recv'd</td><td align="right" class='awrc'>644</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages sent</td><td align="right" class='awrnc'>644</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages recv'd</td><td align="right" class='awrc'>323</td><td align="right" class='awrc'>0.53</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages sent</td><td align="right" class='awrnc'>361</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Parallel operations not downgraded</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Requests to/from client</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SMON posted for undo segment shrink</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>TBS Extension: tasks created</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TBS Extension: tasks executed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>active txn count during cleanout</td><td align="right" class='awrc'>286</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background checkpoints completed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background checkpoints started</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>7,382</td><td align="right" class='awrnc'>12.21</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>140,317</td><td align="right" class='awrc'>232.09</td><td align="right" class='awrc'>1.29</td></tr>
<tr><td scope="row" class='awrnc'>branch node splits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>4,377,431</td><td align="right" class='awrc'>7,240.40</td><td align="right" class='awrc'>40.28</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>1,561,176</td><td align="right" class='awrnc'>2,582.23</td><td align="right" class='awrnc'>14.37</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>23,481</td><td align="right" class='awrc'>38.84</td><td align="right" class='awrc'>0.22</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>14,844</td><td align="right" class='awrnc'>24.55</td><td align="right" class='awrnc'>0.14</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>837,099</td><td align="right" class='awrc'>1,384.59</td><td align="right" class='awrc'>7.70</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>213,123</td><td align="right" class='awrnc'>352.51</td><td align="right" class='awrnc'>1.96</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>3,063</td><td align="right" class='awrc'>5.07</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>23,730,356,224</td><td align="right" class='awrnc'>39,250,718.22</td><td align="right" class='awrnc'>218,362.78</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>1,288</td><td align="right" class='awrc'>2.13</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>1,975</td><td align="right" class='awrnc'>3.27</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts only - consistent read gets</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cluster key scan block gets</td><td align="right" class='awrc'>121</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scans</td><td align="right" class='awrnc'>117</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate performed</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate requested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: block lost</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: callback failure</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: cannot pin</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>326,849</td><td align="right" class='awrnc'>540.62</td><td align="right" class='awrnc'>3.01</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>326,828</td><td align="right" class='awrc'>540.58</td><td align="right" class='awrc'>3.01</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>consistent changes</td><td align="right" class='awrc'>974,944</td><td align="right" class='awrc'>1,612.59</td><td align="right" class='awrc'>8.97</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets</td><td align="right" class='awrnc'>5,022,753</td><td align="right" class='awrnc'>8,307.78</td><td align="right" class='awrnc'>46.22</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination</td><td align="right" class='awrc'>2,426,604</td><td align="right" class='awrc'>4,013.68</td><td align="right" class='awrc'>22.33</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination (fastpath)</td><td align="right" class='awrnc'>2,426,237</td><td align="right" class='awrnc'>4,013.07</td><td align="right" class='awrnc'>22.33</td></tr>
<tr><td scope="row" class='awrc'>consistent gets from cache</td><td align="right" class='awrc'>5,022,752</td><td align="right" class='awrc'>8,307.78</td><td align="right" class='awrc'>46.22</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin</td><td align="right" class='awrnc'>2,596,148</td><td align="right" class='awrnc'>4,294.11</td><td align="right" class='awrnc'>23.89</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin (fastpath)</td><td align="right" class='awrc'>791,036</td><td align="right" class='awrc'>1,308.40</td><td align="right" class='awrc'>7.28</td></tr>
<tr><td scope="row" class='awrnc'>cursor authentications</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cursor reload failures</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>894,206</td><td align="right" class='awrc'>1,479.04</td><td align="right" class='awrc'>8.23</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>587,035</td><td align="right" class='awrnc'>970.97</td><td align="right" class='awrnc'>5.40</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>683</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>586,352</td><td align="right" class='awrnc'>969.84</td><td align="right" class='awrnc'>5.40</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>242,158</td><td align="right" class='awrc'>400.54</td><td align="right" class='awrc'>2.23</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>140,814</td><td align="right" class='awrnc'>232.91</td><td align="right" class='awrnc'>1.30</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>274,212</td><td align="right" class='awrc'>453.55</td><td align="right" class='awrc'>2.52</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>2,875</td><td align="right" class='awrnc'>4.76</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>313,757</td><td align="right" class='awrc'>518.96</td><td align="right" class='awrc'>2.89</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>313,740</td><td align="right" class='awrnc'>518.94</td><td align="right" class='awrnc'>2.89</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>395</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>726,479</td><td align="right" class='awrnc'>1,201.62</td><td align="right" class='awrnc'>6.68</td></tr>
<tr><td scope="row" class='awrc'>fastpath consistent get quota limit</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>file io service time</td><td align="right" class='awrnc'>1,002,861,502</td><td align="right" class='awrnc'>1,658,762.89</td><td align="right" class='awrnc'>9,228.16</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>2,139,134</td><td align="right" class='awrc'>3,538.19</td><td align="right" class='awrc'>19.68</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>2,124,376</td><td align="right" class='awrnc'>3,513.78</td><td align="right" class='awrnc'>19.55</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>17,694</td><td align="right" class='awrc'>29.27</td><td align="right" class='awrc'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>26,402</td><td align="right" class='awrnc'>43.67</td><td align="right" class='awrnc'>0.24</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks expanded</td><td align="right" class='awrc'>239</td><td align="right" class='awrc'>0.40</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks shrunk</td><td align="right" class='awrnc'>192</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block build time</td><td align="right" class='awrc'>268</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block flush time</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>310</td><td align="right" class='awrc'>0.51</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks built</td><td align="right" class='awrnc'>4,113</td><td align="right" class='awrnc'>6.80</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks flushed</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>2,412</td><td align="right" class='awrnc'>3.99</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks served</td><td align="right" class='awrc'>5,606</td><td align="right" class='awrc'>9.27</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grant time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block pin time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block receive time</td><td align="right" class='awrnc'>938</td><td align="right" class='awrnc'>1.55</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks flushed</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks pinned</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks received</td><td align="right" class='awrc'>12,656</td><td align="right" class='awrc'>20.93</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks served</td><td align="right" class='awrnc'>14,120</td><td align="right" class='awrnc'>23.35</td><td align="right" class='awrnc'>0.13</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read cr</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read current</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes saved</td><td align="right" class='awrc'>73,582</td><td align="right" class='awrc'>121.71</td><td align="right" class='awrc'>0.68</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes sent</td><td align="right" class='awrnc'>84,226</td><td align="right" class='awrnc'>139.31</td><td align="right" class='awrnc'>0.78</td></tr>
<tr><td scope="row" class='awrc'>gc local grants</td><td align="right" class='awrc'>1,070,910</td><td align="right" class='awrc'>1,771.32</td><td align="right" class='awrc'>9.85</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi bg</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi fg</td><td align="right" class='awrc'>80</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc no change made</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read time waited</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read waits</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass grants</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass waits</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc remote grants</td><td align="right" class='awrc'>1,044,112</td><td align="right" class='awrc'>1,726.99</td><td align="right" class='awrc'>9.61</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages received</td><td align="right" class='awrnc'>945,235</td><td align="right" class='awrnc'>1,563.45</td><td align="right" class='awrnc'>8.70</td></tr>
<tr><td scope="row" class='awrc'>gc status messages sent</td><td align="right" class='awrc'>847,090</td><td align="right" class='awrc'>1,401.11</td><td align="right" class='awrc'>7.79</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock grants</td><td align="right" class='awrnc'>1,193</td><td align="right" class='awrnc'>1.97</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs anti-locks created</td><td align="right" class='awrc'>26,356</td><td align="right" class='awrc'>43.59</td><td align="right" class='awrc'>0.24</td></tr>
<tr><td scope="row" class='awrnc'>gcs data block access records</td><td align="right" class='awrnc'>2,121,755</td><td align="right" class='awrnc'>3,509.45</td><td align="right" class='awrnc'>19.52</td></tr>
<tr><td scope="row" class='awrc'>gcs messages sent</td><td align="right" class='awrc'>2,461,292</td><td align="right" class='awrc'>4,071.05</td><td align="right" class='awrc'>22.65</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock failures</td><td align="right" class='awrnc'>17,083</td><td align="right" class='awrnc'>28.26</td><td align="right" class='awrnc'>0.16</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock grants</td><td align="right" class='awrc'>90,124</td><td align="right" class='awrc'>149.07</td><td align="right" class='awrc'>0.83</td></tr>
<tr><td scope="row" class='awrnc'>gcs stats management (SCM) process posts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges messages sent</td><td align="right" class='awrc'>2,825</td><td align="right" class='awrc'>4.67</td><td align="right" class='awrc'>0.03</td></tr>

<tr><td scope="row" class='awrnc'>global enqueue get time</td><td align="right" class='awrnc'>541</td><td align="right" class='awrnc'>0.89</td><td align="right" class='awrnc'>0.00</td></tr>

Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrc'>global enqueue gets async</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.
<tr><td scope="row" class='awrnc'>global enqueue gets sync</td><td align="right" class='awrnc'>139,834</td><td align="right" class='awrnc'>231.29</td><td align="right" class='awrnc'>1.29</td></tr>


<tr><td scope="row" class='awrc'>global enqueue releases</td><td align="right" class='awrc'>139,060</td><td align="right" class='awrc'>230.01</td><td align="right" class='awrc'>1.28</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>6,912</td><td align="right" class='awrnc'>11.43</td><td align="right" class='awrnc'>0.06</td></tr>
Enter value for num_days: <tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>88,262</td><td align="right" class='awrc'>145.99</td><td align="right" class='awrc'>0.81</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>236</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index crx upgrade (positioned)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>index fast full scans (full)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index fetch by key</td><td align="right" class='awrnc'>2,112</td><td align="right" class='awrnc'>3.49</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>index range scans</td><td align="right" class='awrc'>724,900</td><td align="right" class='awrc'>1,199.01</td><td align="right" class='awrc'>6.67</td></tr>
<tr><td scope="row" class='awrnc'>index reclamation/extension switch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>leaf node 90-10 splits</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>leaf node splits</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lob reads</td><td align="right" class='awrc'>149</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>lob writes</td><td align="right" class='awrnc'>239</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lob writes unaligned</td><td align="right" class='awrc'>238</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>logical read bytes from cache</td><td align="right" class='awrnc'>45,949,779,968</td><td align="right" class='awrnc'>76,002,308.97</td><td align="right" class='awrnc'>422,822.20</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>max cf enq hold time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>messages received</td><td align="right" class='awrc'>129,308</td><td align="right" class='awrc'>213.88</td><td align="right" class='awrc'>1.19</td></tr>
<tr><td scope="row" class='awrnc'>messages sent</td><td align="right" class='awrnc'>129,308</td><td align="right" class='awrnc'>213.88</td><td align="right" class='awrnc'>1.19</td></tr>
<tr><td scope="row" class='awrc'>min active SCN optimization applied on CR</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>2,588,879</td><td align="right" class='awrnc'>4,282.08</td><td align="right" class='awrnc'>23.82</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>4,529,237</td><td align="right" class='awrc'>7,491.49</td><td align="right" class='awrc'>41.68</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>835,641</td><td align="right" class='awrnc'>1,382.18</td><td align="right" class='awrnc'>7.69</td></tr>
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (failures)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>1,865</td><td align="right" class='awrnc'>3.08</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>2,106,061</td><td align="right" class='awrc'>3,483.49</td><td align="right" class='awrc'>19.38</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>17,257,914,368</td><td align="right" class='awrnc'>28,545,106.00</td><td align="right" class='awrnc'>158,804.45</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>2,109,783</td><td align="right" class='awrc'>3,489.64</td><td align="right" class='awrc'>19.41</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>17,942,588,416</td><td align="right" class='awrnc'>29,677,577.34</td><td align="right" class='awrnc'>165,104.70</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>638</td><td align="right" class='awrc'>1.06</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>2,106,679</td><td align="right" class='awrnc'>3,484.51</td><td align="right" class='awrnc'>19.39</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>2,106,641</td><td align="right" class='awrc'>3,484.45</td><td align="right" class='awrc'>19.38</td></tr>

<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>620</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>0.01</td></tr>
Listing all Completed Snapshots
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads prefetch warmup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>298,704</td><td align="right" class='awrc'>494.07</td><td align="right" class='awrc'>2.75</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>2,543,648,768</td><td align="right" class='awrnc'>4,207,271.06</td><td align="right" class='awrnc'>23,406.23</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>401,893</td><td align="right" class='awrc'>664.74</td><td align="right" class='awrc'>3.70</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>2,889,312,768</td><td align="right" class='awrnc'>4,779,009.65</td><td align="right" class='awrnc'>26,586.97</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>609</td><td align="right" class='awrc'>1.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>310,504</td><td align="right" class='awrnc'>513.58</td><td align="right" class='awrnc'>2.86</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>692</td><td align="right" class='awrc'>1.14</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>309,812</td><td align="right" class='awrnc'>512.44</td><td align="right" class='awrnc'>2.85</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>299,984</td><td align="right" class='awrc'>496.18</td><td align="right" class='awrc'>2.76</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>741</td><td align="right" class='awrnc'>1.23</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>prefetch warmup blocks aged out before use</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>prefetched blocks aged out before use</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>635</td><td align="right" class='awrc'>1.05</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>queries parallelized</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>recursive calls</td><td align="right" class='awrc'>960,120</td><td align="right" class='awrc'>1,588.07</td><td align="right" class='awrc'>8.83</td></tr>
<tr><td scope="row" class='awrnc'>recursive cpu usage</td><td align="right" class='awrnc'>110,726</td><td align="right" class='awrnc'>183.14</td><td align="right" class='awrnc'>1.02</td></tr>
<tr><td scope="row" class='awrc'>redo KB read</td><td align="right" class='awrc'>358,288</td><td align="right" class='awrc'>592.62</td><td align="right" class='awrc'>3.30</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrnc'>196,564</td><td align="right" class='awrnc'>325.12</td><td align="right" class='awrnc'>1.81</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written</td><td align="right" class='awrc'>657,430</td><td align="right" class='awrc'>1,087.41</td><td align="right" class='awrc'>6.05</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 0)</td><td align="right" class='awrnc'>477,149</td><td align="right" class='awrnc'>789.22</td><td align="right" class='awrnc'>4.39</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 1)</td><td align="right" class='awrc'>180,281</td><td align="right" class='awrc'>298.19</td><td align="right" class='awrc'>1.66</td></tr>
<tr><td scope="row" class='awrnc'>redo buffer allocation retries</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo entries</td><td align="right" class='awrc'>468,236</td><td align="right" class='awrc'>774.48</td><td align="right" class='awrc'>4.31</td></tr>
<tr><td scope="row" class='awrnc'>redo log space requests</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>303,106,912</td><td align="right" class='awrc'>501,347.89</td><td align="right" class='awrc'>2,789.14</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>224</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch long waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time (usec)</td><td align="right" class='awrnc'>24,301</td><td align="right" class='awrnc'>40.19</td><td align="right" class='awrnc'>0.22</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead (usec)</td><td align="right" class='awrc'>619</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  8ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>22,814,820</td><td align="right" class='awrc'>37,736.39</td><td align="right" class='awrc'>209.94</td></tr>
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>102,598</td><td align="right" class='awrnc'>169.70</td><td align="right" class='awrnc'>0.94</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack count</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack time</td><td align="right" class='awrnc'>2,419</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>497,383,846</td><td align="right" class='awrc'>822,687.74</td><td align="right" class='awrc'>4,576.84</td></tr>
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>23,217,494</td><td align="right" class='awrnc'>38,402.43</td><td align="right" class='awrnc'>213.64</td></tr>
<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>24,603,756</td><td align="right" class='awrnc'>40,695.35</td><td align="right" class='awrnc'>226.40</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>64,678</td><td align="right" class='awrc'>106.98</td><td align="right" class='awrc'>0.60</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>32,365</td><td align="right" class='awrnc'>53.53</td><td align="right" class='awrnc'>0.30</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>2,928</td><td align="right" class='awrc'>4.84</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>50,149</td><td align="right" class='awrc'>82.95</td><td align="right" class='awrc'>0.46</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>501,495,194</td><td align="right" class='awrnc'>829,488.03</td><td align="right" class='awrnc'>4,614.68</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>508,891,331</td><td align="right" class='awrc'>841,721.47</td><td align="right" class='awrc'>4,682.73</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>13,031,683</td><td align="right" class='awrnc'>21,554.79</td><td align="right" class='awrnc'>119.92</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>100,123</td><td align="right" class='awrc'>165.61</td><td align="right" class='awrc'>0.92</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>100,123</td><td align="right" class='awrnc'>165.61</td><td align="right" class='awrnc'>0.92</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>61,846</td><td align="right" class='awrc'>102.30</td><td align="right" class='awrc'>0.57</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>38,277</td><td align="right" class='awrnc'>63.31</td><td align="right" class='awrnc'>0.35</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>100,123</td><td align="right" class='awrc'>165.61</td><td align="right" class='awrc'>0.92</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>100,123</td><td align="right" class='awrnc'>165.61</td><td align="right" class='awrnc'>0.92</td></tr>
<tr><td scope="row" class='awrc'>rollback changes - undo records applied</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rollbacks only - consistent read gets</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>root node splits</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rows fetched via callback</td><td align="right" class='awrnc'>1,010</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation bytes</td><td align="right" class='awrc'>73,728</td><td align="right" class='awrc'>121.95</td><td align="right" class='awrc'>0.68</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation chunks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile bytes non-transformed</td><td align="right" class='awrc'>66,616</td><td align="right" class='awrc'>110.18</td><td align="right" class='awrc'>0.61</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read bytes</td><td align="right" class='awrnc'>311,296</td><td align="right" class='awrnc'>514.89</td><td align="right" class='awrnc'>2.86</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read ops</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write bytes</td><td align="right" class='awrnc'>73,728</td><td align="right" class='awrnc'>121.95</td><td align="right" class='awrnc'>0.68</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write ops</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile number of non-transformed flushes</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment cfs allocations</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment chunks allocation from dispenser</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser allocations</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser load empty</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser load tasks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc bytes</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>928</td><td align="right" class='awrc'>1.53</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>session connect time</td><td align="right" class='awrnc'>4,614</td><td align="right" class='awrnc'>7.63</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>834,360</td><td align="right" class='awrc'>1,380.06</td><td align="right" class='awrc'>7.68</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>5,609,804</td><td align="right" class='awrnc'>9,278.78</td><td align="right" class='awrnc'>51.62</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>831,373</td><td align="right" class='awrc'>1,375.12</td><td align="right" class='awrc'>7.65</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>310</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>733,163</td><td align="right" class='awrc'>1,212.67</td><td align="right" class='awrc'>6.75</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>1,471,975</td><td align="right" class='awrnc'>2,434.69</td><td align="right" class='awrnc'>13.54</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>88</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>2,442,504</td><td align="right" class='awrc'>4,039.97</td><td align="right" class='awrc'>22.48</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>7,250</td><td align="right" class='awrc'>11.99</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>332,247</td><td align="right" class='awrnc'>549.55</td><td align="right" class='awrnc'>3.06</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>332,247</td><td align="right" class='awrc'>549.55</td><td align="right" class='awrc'>3.06</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>384</td><td align="right" class='awrnc'>0.64</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>temp space allocated (bytes)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>total cf enq hold time</td><td align="right" class='awrnc'>2,844</td><td align="right" class='awrnc'>4.70</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>total number of cf enq holders</td><td align="right" class='awrc'>150</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>total number of times SMON posted</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock background get time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction lock background gets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock foreground requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent read rollbacks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrnc'>973,973</td><td align="right" class='awrnc'>1,610.98</td><td align="right" class='awrnc'>8.96</td></tr>
<tr><td scope="row" class='awrc'>undo change vector size</td><td align="right" class='awrc'>119,280,688</td><td align="right" class='awrc'>197,293.82</td><td align="right" class='awrc'>1,097.60</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>593</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>108,674</td><td align="right" class='awrc'>179.75</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>user logons cumulative</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user logouts cumulative</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>569</td><td align="right" class='awrc'>0.94</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in foreground</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1300"></a>
<h3 class="awr">Instance Activity Stats - Absolute Values</h3>
<ul>
<li class="awr"> Statistics with absolute values (should not be diffed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays absolute values of instance-related features. For each instance, activity begin value and end value are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Begin Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>logons current</td><td align="right" class='awrc'>111</td><td align="right" class='awrc'>90</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors current</td><td align="right" class='awrnc'>200</td><td align="right" class='awrnc'>114</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache count</td><td align="right" class='awrc'>5,469</td><td align="right" class='awrc'>5,574</td></tr>
<tr><td scope="row" class='awrnc'>session pga memory</td><td align="right" class='awrnc'>642,739,504</td><td align="right" class='awrnc'>530,225,608</td></tr>
<tr><td scope="row" class='awrc'>session pga memory max</td><td align="right" class='awrc'>780,076,912</td><td align="right" class='awrc'>668,691,496</td></tr>
<tr><td scope="row" class='awrnc'>session uga memory</td><td align="right" class='awrnc'>402,081,984</td><td align="right" class='awrnc'>373,086,400</td></tr>
<tr><td scope="row" class='awrc'>session uga memory max</td><td align="right" class='awrc'>4,598,616,328</td><td align="right" class='awrc'>4,855,264,480</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1400"></a>
<h3 class="awr">Instance Activity Stats - Thread Activity</h3>
<ul>
<li class="awr"> Statistics identified by '(derived)' come from sources other than SYSSTAT</li>
</ul>
<table border="0" class="tdiff" summary="This table displays thread activity stats in the instance. For each activity , total number of activity and activity per hour are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Hour</th></tr>
<tr><td scope="row" class='awrc'>log switches (derived)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="24"></a>
<h2 class="awr">
IO Stats
</h2>
<ul>
<li class="awr"><a class="awr" href="#8760">IOStat by Function summary</a></li>
<li class="awr"><a class="awr" href="#8770">IOStat by Filetype summary</a></li>
<li class="awr"><a class="awr" href="#8780">IOStat by Function/Filetype summary</a></li>
<li class="awr"><a class="awr" href="#1700">Tablespace IO Stats</a></li>
<li class="awr"><a class="awr" href="#1800">File IO Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8760"></a>
<h3 class="awr">IOStat by Function summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the IO Statistics for different functions. IO stats includes amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td scope="row" class='awrc'>Buffer Cache Reads</td><td align="right" class='awrc'>16G</td><td align="right" class='awrc'>3469.95</td><td align="right" class='awrc'>27.119M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.1M</td><td align="right" class='awrc'>5.15ms</td></tr>
<tr><td scope="row" class='awrnc'>DBWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.4G</td><td align="right" class='awrnc'>494.14</td><td align="right" class='awrnc'>4.009M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Others</td><td align="right" class='awrc'>653M</td><td align="right" class='awrc'>6.16</td><td align="right" class='awrc'>1.08M</td><td align="right" class='awrc'>11M</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>.018M</td><td align="right" class='awrc'>2520</td><td align="right" class='awrc'>4.75ms</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>320M</td><td align="right" class='awrnc'>169.22</td><td align="right" class='awrnc'>.529M</td><td align="right" class='awrnc'>99.8K</td><td align="right" class='awrnc'>4.70ms</td></tr>
<tr><td scope="row" class='awrc'>Direct Reads</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>.003M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Direct Writes</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TOTAL:</td><td align="right" class='awrc'>16.6G</td><td align="right" class='awrc'>3476.17</td><td align="right" class='awrc'>28.2M</td><td align="right" class='awrc'>2.7G</td><td align="right" class='awrc'>664.33</td><td align="right" class='awrc'>4.562M</td><td align="right" class='awrc'>2.2M</td><td align="right" class='awrc'>5.13ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8770"></a>
<h3 class="awr">IOStat by Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Small Read and Large Read are average service times </li>
<li class="awr"> Ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IO Statistics for different file types, such as data files, control files, log files and temp files. IO Statistics include amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Small Read</th><th class="awrbg" scope="col">Large Read</th></tr>
<tr><td scope="row" class='awrc'>Data File</td><td align="right" class='awrc'>16G</td><td align="right" class='awrc'>3470.47</td><td align="right" class='awrc'>27.113M</td><td align="right" class='awrc'>2.4G</td><td align="right" class='awrc'>494.12</td><td align="right" class='awrc'>4.008M</td><td align="right" class='awrc'>4.61ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Log File</td><td align="right" class='awrnc'>606M</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>1.002M</td><td align="right" class='awrnc'>320M</td><td align="right" class='awrnc'>169.17</td><td align="right" class='awrnc'>.529M</td><td align="right" class='awrnc'>.00ns</td><td align="right" class='awrnc'>1410.89ms</td></tr>
<tr><td scope="row" class='awrc'>Control File</td><td align="right" class='awrc'>47M</td><td align="right" class='awrc'>4.97</td><td align="right" class='awrc'>.078M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>2.82ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Temp File</td><td align="right" class='awrnc'>5M</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>.008M</td><td align="right" class='awrnc'>4M</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>.007M</td><td align="right" class='awrnc'>3.58ms</td><td align="right" class='awrnc'>12.33ms</td></tr>
<tr><td scope="row" class='awrc'>TOTAL:</td><td align="right" class='awrc'>16.7G</td><td align="right" class='awrc'>3476.68</td><td align="right" class='awrc'>28.201M</td><td align="right" class='awrc'>2.7G</td><td align="right" class='awrc'>664.29</td><td align="right" class='awrc'>4.559M</td><td align="right" class='awrc'>4.61ms</td><td align="right" class='awrc'>1397.74ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8780"></a>
<h3 class="awr">IOStat by Function/Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Ordered by (Data Read + Write) desc for each function</li>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function/Filetype summary. . 'Data' columns suffixed with M,G,T,P are in multiples of 1024 other columns suffixed with K,M,G,T,P are in multiples of 1000. Ordered by (Data Read + Write) desc for each function"><tr><th class="awrbg" scope="col">Function/File Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs	 per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time	</th></tr>
<tr><td scope="row" class='awrc'>
Buffer Cache Reads
</td><td align="right" class='awrc'>16G</td><td align="right" class='awrc'>3468.78</td><td align="right" class='awrc'>27.11M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.1M</td><td align="right" class='awrc'>5.15ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Buffer Cache Reads (Data File)
</td><td align="right" class='awrnc'>16G</td><td align="right" class='awrnc'>3468.70</td><td align="right" class='awrnc'>27.101M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.1M</td><td align="right" class='awrnc'>5.15ms</td></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Temp File)
</td><td align="right" class='awrc'>5M</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>.008M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>44</td><td align="right" class='awrc'>5.27ms</td></tr>
<tr><td scope="row" class='awrnc'>
DBWR
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.4G</td><td align="right" class='awrnc'>494.14</td><td align="right" class='awrnc'>4.009M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 DBWR (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.4G</td><td align="right" class='awrc'>494.11</td><td align="right" class='awrc'>4.008M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Others
</td><td align="right" class='awrc'>652M</td><td align="right" class='awrc'>6.16</td><td align="right" class='awrc'>1.078M</td><td align="right" class='awrc'>11M</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>.018M</td><td align="right" class='awrc'>2241</td><td align="right" class='awrc'>4.26ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Log File)
</td><td align="right" class='awrnc'>606M</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>1.002M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>202.92us</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Control File)
</td><td align="right" class='awrc'>46M</td><td align="right" class='awrc'>4.97</td><td align="right" class='awrc'>.076M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>2168</td><td align="right" class='awrc'>4.39ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2M</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>.003M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>3.34ms</td></tr>
<tr><td scope="row" class='awrnc'>
 LGWR (Log File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>320M</td><td align="right" class='awrnc'>169.17</td><td align="right" class='awrnc'>.529M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
LGWR
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>320M</td><td align="right" class='awrc'>169.17</td><td align="right" class='awrc'>.529M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Direct Reads (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2M</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>.003M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Direct Reads
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>.003M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Direct Reads (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Direct Writes (Temp File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>.002M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
Direct Writes
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
TOTAL:
</td><td align="right" class='awrc'>16.6G</td><td align="right" class='awrc'>3475.00</td><td align="right" class='awrc'>28.188M</td><td align="right" class='awrc'>2.7G</td><td align="right" class='awrc'>664.29</td><td align="right" class='awrc'>4.562M</td><td align="right" class='awrc'>2.1M</td><td align="right" class='awrc'>5.15ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1700"></a>
<h3 class="awr">Tablespace IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1800"></a>
<h3 class="awr">File IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="25"></a>
<h2 class="awr">
Buffer Pool Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1900">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#1910">Checkpoint Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1900"></a>
<h3 class="awr">Buffer Pool Statistics</h3>
<ul>
<li class="awr"> Standard block size Pools  D: default,  K: keep,  R: recycle </li>
<li class="awr"> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer pool statistics for different types of buffers, such as default, keep, and recycle. Statistics include number of buffers, % Pool hit, buffer gets, physical reads, physical writes, free buffer wait, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Number of Buffers</th><th class="awrbg" scope="col">Pool Hit%</th><th class="awrbg" scope="col">Buffer Gets</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Free Buff Wait</th><th class="awrbg" scope="col">Writ Comp Wait</th><th class="awrbg" scope="col">Buffer Busy Waits</th></tr>
<tr><td scope="row" class='awrc'>D</td><td align="right" class='awrc'>932,000</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>5,612,545</td><td align="right" class='awrc'>2,107,354</td><td align="right" class='awrc'>309,812</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1910"></a>
<h3 class="awr">Checkpoint Activity</h3>
<ul>
<li class="awr">Total Physical Writes:			    310,504</li>
</ul>
<table border="0" class="tdiff" summary="This table displays checkpoint activity statistics. Statistics include MTTR writes, log size writes, autotune checkpoint writes, etc."><tr><th class="awrbg" scope="col">MTTR Writes</th><th class="awrbg" scope="col">Log Size Writes</th><th class="awrbg" scope="col">Log Ckpt Writes</th><th class="awrbg" scope="col">Other Settings Writes</th><th class="awrbg" scope="col">Autotune Ckpt Writes</th><th class="awrbg" scope="col">Thread Ckpt Writes</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17,425</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="26"></a>
<h2 class="awr">
Advisory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2000">Instance Recovery Stats</a></li>
<li class="awr"><a class="awr" href="#2010">MTTR Advisory</a></li>
<li class="awr"><a class="awr" href="#2100">Buffer Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#2400">PGA Aggr Summary</a></li>
<li class="awr"><a class="awr" href="#2600">PGA Aggr Target Stats</a></li>
<li class="awr"><a class="awr" href="#2700">PGA Aggr Target Histogram</a></li>
<li class="awr"><a class="awr" href="#2800">PGA Memory Advisory</a></li>
<li class="awr"><a class="awr" href="#5500">Shared Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#6900">SGA Target Advisory</a></li>
<li class="awr"><a class="awr" href="#7100">Streams Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#5700">Java Pool Advisory</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2000"></a>
<h3 class="awr">Instance Recovery Stats</h3>
<ul>
<li class="awr"> B: Begin Snapshot,  E: End Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays instance recovery statistics at begin and end snapshot. It displays target MTTR, estimated MTTR, recovery estimated IO per second, redo blocks, target redo blocks, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Targt MTTR  (s) </th><th class="awrbg" scope="col">Estd MTTR (s)</th><th class="awrbg" scope="col">Recovery Estd IOs</th><th class="awrbg" scope="col">Actual  RedoBlks</th><th class="awrbg" scope="col">Target	RedoBlks</th><th class="awrbg" scope="col">Log Sz  RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Timeout RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Interval RedoBlks</th><th class="awrbg" scope="col">Opt Log Sz(M)</th><th class="awrbg" scope="col">Estd RAC Avail Time</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>22662</td><td align="right" class='awrc'>44351</td><td align="right" class='awrc'>780840</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>780840</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>54032</td><td align="right" class='awrnc'>308464</td><td align="right" class='awrnc'>1335708</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>1335708</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>16</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2010"></a>
<h3 class="awr">MTTR Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2100"></a>
<h3 class="awr">Buffer Pool Advisory</h3>
<ul>
<li class="awr"> Only rows with estimated physical reads &gt;0 are displayed </li>
<li class="awr"> ordered by Block Size, Buffers For Estimate</li>
</ul>
<table border="0" class="tdiff" summary="This table displays MTTR advisory. It displays size for estimate, dirty limit, estimated cache writes, estimated cache write factor, estimated total write, estimated total IO per second, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Size for Est (M)</th><th class="awrbg" scope="col">Size Factor</th><th class="awrbg" scope="col">Buffers (thousands)</th><th class="awrbg" scope="col">Est Phys Read Factor</th><th class="awrbg" scope="col">Estimated Phys Reads (thousands)</th><th class="awrbg" scope="col">Est Phys Read Time</th><th class="awrbg" scope="col">Est %DBtime for Rds</th></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>800</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>14,264</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>63351.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>1,600</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>186</td><td align="right" class='awrnc'>1.11</td><td align="right" class='awrnc'>13,197</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>58330.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>2,400</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>280</td><td align="right" class='awrc'>1.06</td><td align="right" class='awrc'>12,655</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>55781.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>3,200</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>373</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>12,376</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>54469.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>4,000</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>466</td><td align="right" class='awrc'>1.03</td><td align="right" class='awrc'>12,218</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>53724.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>4,800</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>559</td><td align="right" class='awrnc'>1.02</td><td align="right" class='awrnc'>12,118</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>53254.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>5,600</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>652</td><td align="right" class='awrc'>1.01</td><td align="right" class='awrc'>12,048</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>52921.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>6,400</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>746</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>11,988</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>52639.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>7,200</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>839</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>11,936</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>52397.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>8,000</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>932</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>11,886</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>52163.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>8,800</td><td align="right" class='awrc'>1.10</td><td align="right" class='awrc'>1,025</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>11,840</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>51942.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>9,600</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>1,118</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>11,796</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>51737.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>10,400</td><td align="right" class='awrc'>1.30</td><td align="right" class='awrc'>1,212</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>11,756</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>51549.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>11,200</td><td align="right" class='awrnc'>1.40</td><td align="right" class='awrnc'>1,305</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>11,719</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>51374.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>12,000</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>1,398</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>11,681</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>51197.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>12,800</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>1,491</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>11,645</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>51024.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>13,600</td><td align="right" class='awrc'>1.70</td><td align="right" class='awrc'>1,584</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>11,612</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>50870.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>14,400</td><td align="right" class='awrnc'>1.80</td><td align="right" class='awrnc'>1,678</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>11,580</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>50721.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>15,200</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>1,771</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>11,545</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>50556.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>16,000</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>1,864</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>11,515</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>50415.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2400"></a>
<h3 class="awr">PGA Aggr Summary</h3>
<ul>
<li class="awr"> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate summary. It includes PGA cache hits, total wait time, average time for each class of buffer wait and WorkArea data processed."><tr><th class="awrbg" scope="col">PGA Cache Hit %</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Extra W/A MB Read/Written</th></tr>
<tr><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>195</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2600"></a>
<h3 class="awr">PGA Aggr Target Stats</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap (rows dentified with B or E contain data	 which is absolute i.e. not diffed over the interval) </li>
<li class="awr"> Auto PGA Target - actual workarea memory target </li>
<li class="awr"> W/A PGA Used	 - amount of memory used for all Workareas (manual + auto) </li>
<li class="awr"> %PGA W/A Mem	 - percentage of PGA memory allocated to workareas </li>
<li class="awr"> %Auto W/A Mem	 - percentage of workarea memory controlled by Auto Mem Mgmt </li>
<li class="awr"> %Man W/A Mem	 - percentage of workarea memory under manual control</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target statistics for begin and end snapshot. Statistics include PGA aggregate target, auto PGA target, PGA memory allocation, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">PGA Aggr Target(M)</th><th class="awrbg" scope="col">Auto PGA Target(M)</th><th class="awrbg" scope="col">PGA Mem  Alloc(M) </th><th class="awrbg" scope="col">W/A PGA  Used(M) </th><th class="awrbg" scope="col">%PGA W/A Mem</th><th class="awrbg" scope="col">%Auto W/A Mem</th><th class="awrbg" scope="col">%Man W/A Mem</th><th class="awrbg" scope="col">Global Mem Bound(K)</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>3,215</td><td align="right" class='awrc'>1,880</td><td align="right" class='awrc'>1,341.44</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>329,210</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>1,972</td><td align="right" class='awrnc'>1,223.43</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>329,210</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2700"></a>
<h3 class="awr">PGA Aggr Target Histogram</h3>
<ul>
<li class="awr"> Optimal Executions are purely in-memory operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target histograms."><tr><th class="awrbg" scope="col">  Low Optimal</th><th class="awrbg" scope="col">  High Optimal</th><th class="awrbg" scope="col">Total Execs</th><th class="awrbg" scope="col">Optimal Execs</th><th class="awrbg" scope="col">1-Pass Execs</th><th class="awrbg" scope="col">M-Pass Execs</th></tr>
<tr><td class='awrc'>2K</td><td class='awrc'>4K</td><td align="right" class='awrc'>312</td><td align="right" class='awrc'>312</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>64K</td><td class='awrnc'>128K</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>128K</td><td class='awrc'>256K</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>256K</td><td class='awrnc'>512K</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>512K</td><td class='awrc'>1024K</td><td align="right" class='awrc'>87</td><td align="right" class='awrc'>87</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>1M</td><td class='awrnc'>2M</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>2M</td><td class='awrc'>4M</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2800"></a>
<h3 class="awr">PGA Memory Advisory</h3>
<ul>
<li class="awr"> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value    where Estd PGA Overalloc Count is 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA memory advisory for different estimated PGA target sizes. It displays size factor, Workarea MB processed, estimated PGA cache hit, estimated extra Workarea MB read written to disk, etc., for each target size."><tr><th class="awrbg" scope="col">PGA Target Est (MB)</th><th class="awrbg" scope="col">Size Factr</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Estd Extra	 W/A MB Read/	Written to Disk </th><th class="awrbg" scope="col">Estd PGA Cache Hit %</th><th class="awrbg" scope="col">Estd PGA Overalloc Count</th><th class="awrbg" scope="col">Estd Time</th></tr>
<tr><td align="right" scope="row" class='awrc'>402</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>2,957.10</td><td align="right" class='awrc'>73.00</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>27,453,184</td></tr>
<tr><td align="right" scope="row" class='awrnc'>804</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>2,672.89</td><td align="right" class='awrnc'>75.00</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>26,741,707</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,608</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>2,193.97</td><td align="right" class='awrc'>78.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25,542,830</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,411</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>2,193.97</td><td align="right" class='awrnc'>78.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25,542,830</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,215</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,858</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,501</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrnc'>5,144</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrc'>5,787</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,430</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,645</td><td align="right" class='awrc'>3.00</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,860</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,290</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>8,009.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20,050,693</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,720</td><td align="right" class='awrnc'>8.00</td><td align="right" class='awrnc'>8,009.73</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20,050,693</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5500"></a>
<h3 class="awr">Shared Pool Advisory</h3>
<ul>
<li class="awr"> SP: Shared Pool     Est LC: Estimated Library Cache   Factr: Factor </li>
<li class="awr"> Note there is often a 1:Many correlation between a single logical object    in the Library Cache, and the physical number of memory objects associated    with it.  Therefore comparing the number of Lib Cache objects (e.g. in     v$librarycache), with the number of Lib Cache Memory Objects is invalid.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared pool advisory. Size factor, estimated library cache size, estimated library cache memory object and other info is displayed for different shared pool sizes"><tr><th class="awrbg" scope="col">Shared Pool Size(M)</th><th class="awrbg" scope="col">SP Size Factr</th><th class="awrbg" scope="col">Est LC Size (M)</th><th class="awrbg" scope="col">Est LC Mem Obj</th><th class="awrbg" scope="col">Est LC Time Saved (s)</th><th class="awrbg" scope="col">Est LC Time Saved Factr</th><th class="awrbg" scope="col">Est LC Load Time (s)</th><th class="awrbg" scope="col">Est LC Load Time Factr</th><th class="awrbg" scope="col">Est LC Mem Obj Hits (K)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1,280</td><td align="right" class='awrc'>0.89</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>1,562</td><td align="right" class='awrc'>7,801</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>258</td><td align="right" class='awrc'>4.69</td><td align="right" class='awrc'>942</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,312</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>2,131</td><td align="right" class='awrnc'>7,883</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>176</td><td align="right" class='awrnc'>3.20</td><td align="right" class='awrnc'>946</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,344</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>2,587</td><td align="right" class='awrc'>7,936</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>123</td><td align="right" class='awrc'>2.24</td><td align="right" class='awrc'>949</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,376</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>3,207</td><td align="right" class='awrnc'>7,962</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>97</td><td align="right" class='awrnc'>1.76</td><td align="right" class='awrnc'>950</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,408</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>4,073</td><td align="right" class='awrc'>7,991</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>1.24</td><td align="right" class='awrc'>951</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,440</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>5,853</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,472</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>203</td><td align="right" class='awrc'>6,822</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
DB Name      Snap Id	   Snap Started    Snap Level
<tr><td align="right" scope="row" class='awrnc'>1,504</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
<tr><td align="right" scope="row" class='awrc'>1,536</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,568</td><td align="right" class='awrnc'>1.09</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,600</td><td align="right" class='awrc'>1.11</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,632</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,664</td><td align="right" class='awrc'>1.16</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,696</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,728</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,760</td><td align="right" class='awrnc'>1.22</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,920</td><td align="right" class='awrc'>1.33</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,080</td><td align="right" class='awrnc'>1.44</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,240</td><td align="right" class='awrc'>1.56</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,400</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,560</td><td align="right" class='awrc'>1.78</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,720</td><td align="right" class='awrnc'>1.89</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>7,528</td><td align="right" class='awrnc'>8,004</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>952</td></tr>
		    13	06 Feb 2020 07:00    1
<tr><td align="right" scope="row" class='awrc'>2,880</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>7,528</td><td align="right" class='awrc'>8,004</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>952</td></tr>
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
</table><p />
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
<hr align="left" width="20%" /><p />
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6900"></a>
<h3 class="awr">SGA Target Advisory</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA target advisory for different SGA target sizes. It displays SGA size factor, estimated DB time and estimated physical reads for different SGA target sizes."><tr><th class="awrbg" scope="col">SGA Target Size (M)</th><th class="awrbg" scope="col">SGA Size Factor</th><th class="awrbg" scope="col">Est DB Time (s)</th><th class="awrbg" scope="col">Est Physical Reads</th></tr>
<tr><td align="right" scope="row" class='awrc'>2,416</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>69,520</td><td align="right" class='awrc'>14,263,705</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,624</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>64,481</td><td align="right" class='awrnc'>13,196,305</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,832</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>60,621</td><td align="right" class='awrc'>12,376,142</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,040</td><td align="right" class='awrnc'>0.63</td><td align="right" class='awrnc'>59,612</td><td align="right" class='awrnc'>12,118,206</td></tr>
<tr><td align="right" scope="row" class='awrc'>7,248</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>59,075</td><td align="right" class='awrc'>12,046,888</td></tr>
<tr><td align="right" scope="row" class='awrnc'>8,456</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>58,550</td><td align="right" class='awrnc'>11,936,344</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,664</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>58,317</td><td align="right" class='awrc'>11,886,421</td></tr>
<tr><td align="right" scope="row" class='awrnc'>10,872</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>57,891</td><td align="right" class='awrnc'>11,796,084</td></tr>
<tr><td align="right" scope="row" class='awrc'>12,080</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>57,646</td><td align="right" class='awrc'>11,718,822</td></tr>
<tr><td align="right" scope="row" class='awrnc'>13,288</td><td align="right" class='awrnc'>1.38</td><td align="right" class='awrnc'>57,349</td><td align="right" class='awrnc'>11,680,786</td></tr>
<tr><td align="right" scope="row" class='awrc'>14,496</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>57,022</td><td align="right" class='awrc'>11,611,845</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15,704</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>56,877</td><td align="right" class='awrnc'>11,579,751</td></tr>
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
<tr><td align="right" scope="row" class='awrc'>16,912</td><td align="right" class='awrc'>1.75</td><td align="right" class='awrc'>56,567</td><td align="right" class='awrc'>11,514,376</td></tr>
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
<tr><td align="right" scope="row" class='awrnc'>18,120</td><td align="right" class='awrnc'>1.88</td><td align="right" class='awrnc'>56,567</td><td align="right" class='awrnc'>11,514,376</td></tr>
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
<tr><td align="right" scope="row" class='awrc'>19,328</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>56,567</td><td align="right" class='awrc'>11,514,376</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7100"></a>
<h3 class="awr">Streams Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5700"></a>
<h3 class="awr">Java Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
<p />
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
<a class="awr" name="27"></a>
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
<h2 class="awr">
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
Wait Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2300">Buffer Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#3000">Enqueue Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2300"></a>
<h3 class="awr">Buffer Wait Statistics</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer wait statistics. Statistics include waits, total wait time and average time for each class of buffer wait."><tr><th class="awrbg" scope="col">Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Time (ms)</th></tr>
<tr><td scope="row" class='awrc'>undo block</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3000"></a>
<h3 class="awr">Enqueue Activity</h3>
<ul>
<li class="awr"> only enqueues with requests are shown	</li>
<li class="awr"> Enqueue stats gathered prior to 10g should not be compared with 10g data </li>
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
<li class="awr"> ordered by Wait Time desc, Waits desc, Requests desc</li>
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
</ul>
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
<table border="0" class="tdiff" summary="This table displays enqueue activity statistics. Requests, success gets, failed gets, waits, wait time and average wait time are displayed for each enqueue type."><tr><th class="awrbg" scope="col">Enqueue Type (Request Reason)</th><th class="awrbg" scope="col">Requests</th><th class="awrbg" scope="col">Succ Gets</th><th class="awrbg" scope="col">Failed Gets</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Wt Time (s)</th><th class="awrbg" scope="col">Av Wt Time(ms)</th></tr>
<tr><td scope="row" class='awrc'>CR-Reuse Block Range (block range reuse ckpt)</td>
<td align="right" class='awrc'>248</td><td align="right" class='awrc'>248</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.71</td></tr>
<tr><td scope="row" class='awrnc'>RO-Multiple Object Reuse (fast object reuse)</td>
<td align="right" class='awrnc'>420</td><td align="right" class='awrnc'>420</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.98</td></tr>
<tr><td scope="row" class='awrc'>PS-PX Process Reservation</td>
<td align="right" class='awrc'>591</td><td align="right" class='awrc'>591</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.84</td></tr>
<tr><td scope="row" class='awrnc'>WF-AWR Flush</td>
<td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.81</td></tr>
<tr><td scope="row" class='awrc'>CF-Controlfile Transaction</td>
<td align="right" class='awrc'>1,408</td><td align="right" class='awrc'>1,407</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.98</td></tr>
<tr><td scope="row" class='awrnc'>TO-Temp Object</td>
<td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.52</td></tr>
<tr><td scope="row" class='awrc'>CO-KTUCLO Master Slave enq (master slave det)</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.10</td></tr>
<tr><td scope="row" class='awrnc'>US-Undo Segment</td>
<td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>TA-Instance Undo</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
		    70	08 Feb 2020 10:44    1
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
<tr><td scope="row" class='awrnc'>TM-DML</td>
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
<td align="right" class='awrnc'>108,794</td><td align="right" class='awrnc'>108,790</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.50</td></tr>
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
		    83	08 Feb 2020 19:00    1
<tr><td scope="row" class='awrc'>TD-KTF map table enqueue (KTF dump entries)</td>
		    84	08 Feb 2020 20:00    1
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>HW-Segment High Water Mark</td>
<td align="right" class='awrnc'>194</td><td align="right" class='awrnc'>194</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.33</td></tr>
<tr><td scope="row" class='awrc'>FB-Format Block</td>
<td align="right" class='awrc'>16</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.50</td></tr>
<tr><td scope="row" class='awrnc'>AF-Advisor Framework (task serialization)</td>
<td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>DW-In memory Dispenser</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>DR-Distributed Recovery</td>
<td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>MW-MWIN Schedule</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TX-Transaction</td>
<td align="right" class='awrnc'>108,757</td><td align="right" class='awrnc'>108,756</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1</td>
<td align="right" class='awrc'>44,898</td><td align="right" class='awrc'>44,898</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1 (queue lock)</td>
<td align="right" class='awrnc'>44,898</td><td align="right" class='awrnc'>44,898</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
		    85	08 Feb 2020 21:00    1
		    86	08 Feb 2020 22:00    1
		    87	08 Feb 2020 23:00    1
		    88	09 Feb 2020 00:00    1
<tr><td scope="row" class='awrc'>JG-Job Scheduler1 (q mem clnup lck)</td>
		    89	09 Feb 2020 01:00    1
		    90	09 Feb 2020 02:00    1
		    91	09 Feb 2020 03:00    1
		    92	09 Feb 2020 04:00    1
		    93	09 Feb 2020 05:00    1
		    94	09 Feb 2020 06:00    1
<td align="right" class='awrc'>4,276</td><td align="right" class='awrc'>4,276</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
		    95	09 Feb 2020 07:00    1
		    96	09 Feb 2020 08:00    1
		    97	09 Feb 2020 09:00    1
<tr><td scope="row" class='awrnc'>SJ-KTSJ Slave Task Cancel (Slave Task Cancel)</td>
		    98	09 Feb 2020 10:00    1
		    99	09 Feb 2020 11:20    1
<td align="right" class='awrnc'>423</td><td align="right" class='awrnc'>424</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DD-ASM Local Disk Group</td>
<td align="right" class='awrc'>332</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>BU-Buddy Instance Context (recovery set construct)</td>
<td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SE-Session Migration</td>
<td align="right" class='awrc'>97</td><td align="right" class='awrc'>97</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DA-Instance DP Array (Slave Process Array)</td>
<td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IS-Instance State</td>
<td align="right" class='awrc'>74</td><td align="right" class='awrc'>74</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TT-Tablespace</td>
<td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FP-File Object (global fob contention)</td>
<td align="right" class='awrc'>65</td><td align="right" class='awrc'>65</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IT-In-Mem Temp Table Meta Creation</td>
<td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>WT-AWR CDB-Wide Table Lock</td>
<td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CU-Cursor</td>
		   100	09 Feb 2020 11:30    1
		   101	09 Feb 2020 11:33    1
		   102	09 Feb 2020 11:43    1
<td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
		   103	09 Feb 2020 11:46    1
		   104	09 Feb 2020 11:56    1
		   105	09 Feb 2020 11:58    1
		   106	09 Feb 2020 12:08    1
		   107	09 Feb 2020 13:00    1
<tr><td scope="row" class='awrc'>MR-Media Recovery</td>
		   108	09 Feb 2020 14:00    1
		   109	09 Feb 2020 14:09    1
		   110	09 Feb 2020 14:19    1
		   111	09 Feb 2020 14:52    1
		   112	09 Feb 2020 15:02    1
DB Name      Snap Id	   Snap Started    Snap Level
<td align="right" class='awrc'>17</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
------------ ---------- ------------------ ----------
<tr><td scope="row" class='awrnc'>TH-Threshold Chain (metric threshold evaluation)</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PR-Process Startup</td>
<td align="right" class='awrc'>5</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AE-Edition Lock (lock)</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PV-KSV slave startup (syncstart)</td>
<td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQ-Sequence Cache</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PW-Buffer Cache PreWarm (flush prewarm buffers)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SH-Active Session History Flushing</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XR-Quiesce / Force Logging (database force logging)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>RA-Real-Time ADDM Flood Control (RT ADDM flood control)</td>
<td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />

<a class="awr" href="#27">Back to Wait Statistics</a>
P30DB		   113	09 Feb 2020 16:00    1
		   114	09 Feb 2020 17:00    1
		   115	09 Feb 2020 18:00    1
		   116	09 Feb 2020 19:00    1
<br /><a class="awr" href="#top">Back to Top</a><p />
		   117	09 Feb 2020 20:00    1
		   118	09 Feb 2020 20:30    1
		   119	09 Feb 2020 20:40    1
		   120	09 Feb 2020 20:47    1
		   121	09 Feb 2020 20:57    1
<p />
		   122	09 Feb 2020 22:00    1
		   123	09 Feb 2020 23:00    1
		   124	10 Feb 2020 00:00    1
		   125	10 Feb 2020 01:00    1
		   126	10 Feb 2020 02:00    1
<a class="awr" name="28"></a>
<h2 class="awr">
Undo Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3300">Undo Segment Summary</a></li>
<li class="awr"><a class="awr" href="#3400">Undo Segment Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3300"></a>
<h3 class="awr">Undo Segment Summary</h3>
<ul>
<li class="awr"> Min/Max TR (mins) - Min and Max Tuned Retention (minutes) </li>
<li class="awr"> STO - Snapshot Too Old count,	OOS - Out of Space count </li>
<li class="awr"> Undo segment block stats: </li>
<li class="awr"> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed </li>
<li class="awr"> eS - expired	Stolen,   eR - expired	 Released,   eU - expired   reUsed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays undo segment summary. It displays undo tablespace number, number of undo blocks, number of transactions, max query length, etc."><tr><th class="awrbg" scope="col">Undo TS#</th><th class="awrbg" scope="col">Num Undo Blocks (K)</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concurcy</th><th class="awrbg" scope="col">Min/Max TR (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">	uS/uR/uU/    eS/eR/eU</th></tr>
<tr><td align="right" scope="row" class='awrc'>2</td><td align="right" class='awrc'>3.36</td><td align="right" class='awrc'>23,705</td><td align="right" class='awrc'>1,584</td><td align="right" class='awrc'>13</td><td class='awrc'>40.4/40.4</td><td class='awrc'>38/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
		   127	10 Feb 2020 03:00    1
</table><p />
		   128	10 Feb 2020 04:00    1
		   129	10 Feb 2020 05:00    1
		   130	10 Feb 2020 06:00    1
		   131	10 Feb 2020 07:00    1
		   132	10 Feb 2020 08:00    1
		   133	10 Feb 2020 09:00    1
<hr align="left" width="20%" /><p />
		   134	10 Feb 2020 09:08    1
		   135	10 Feb 2020 09:18    1
		   136	10 Feb 2020 10:00    1
		   137	10 Feb 2020 10:47    1
		   138	10 Feb 2020 10:58    1
<a class="awr" href="#28">Back to Undo Statistics</a>
		   139	10 Feb 2020 11:09    1
		   140	10 Feb 2020 11:19    1
		   141	10 Feb 2020 11:21    1
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3400"></a>
<h3 class="awr">Undo Segment Stats</h3>
<ul>
<li class="awr"> Most recent 35 Undostat rows, ordered by Time desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the 35 most recent Undostat rows."><tr><th class="awrbg" scope="col">End Time</th><th class="awrbg" scope="col">Num Undo Blocks</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concy</th><th class="awrbg" scope="col">Tun Ret (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">  uS/uR/uU/   eS/eR/eU</th></tr>
<tr><td scope="row" class='awrc'>10-Feb 15:44</td><td align="right" class='awrc'>3,355</td><td align="right" class='awrc'>23,705</td><td align="right" class='awrc'>1,584</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>40</td><td class='awrc'>38/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="29"></a>
<h2 class="awr">
Latch Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3500">Latch Activity</a></li>
		   142	10 Feb 2020 11:31    1
<li class="awr"><a class="awr" href="#3600">Latch Sleep Breakdown</a></li>
		   143	10 Feb 2020 13:00    1
		   144	10 Feb 2020 14:00    1
		   145	10 Feb 2020 14:19    1
		   146	10 Feb 2020 14:29    1
		   147	10 Feb 2020 14:33    1
<li class="awr"><a class="awr" href="#3700">Latch Miss Sources</a></li>
		   148	10 Feb 2020 14:41    1
		   149	10 Feb 2020 14:47    1
		   150	10 Feb 2020 14:57    1
		   151	10 Feb 2020 15:04    1
		   152	10 Feb 2020 15:05    1
<li class="awr"><a class="awr" href="#7500">Mutex Sleep Summary</a></li>
		   153	10 Feb 2020 15:15    1
		   154	10 Feb 2020 15:24    1
		   155	10 Feb 2020 15:34    1
		   156	10 Feb 2020 15:44    1
<li class="awr"><a class="awr" href="#3800">Parent Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#3900">Child Latch Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3500"></a>
<h3 class="awr">Latch Activity</h3>
<ul>
<li class="awr"> &quot;Get Requests&quot;, &quot;Pct Get Miss&quot; and &quot;Avg Slps/Miss&quot; are statistics for	 willing-to-wait latch get requests </li>
		   157	10 Feb 2020 15:54    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 156

End   Snapshot Id specified: 157

<li class="awr"> &quot;NoWait Requests&quot;, &quot;Pct NoWait Miss&quot; are for no-wait latch get requests </li>
<li class="awr"> &quot;Pct Misses&quot; for both should be very close to 0.0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch statistics. Get requests, % get miss, wait time, noWait requests are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Get Miss</th><th class="awrbg" scope="col">Avg Slps /Miss</th><th class="awrbg" scope="col">Wait Time (s)</th><th class="awrbg" scope="col">NoWait Requests</th><th class="awrbg" scope="col">Pct NoWait Miss</th></tr>
<tr><td scope="row" class='awrc'>AQ Background: interrupt command latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>AQ Coord jobx_kwsbgsgn latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ Message drive state object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQ Sharded master pool latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ deq hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM Keyed state latch</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM allocation</td><td align="right" class='awrc'>35,525</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM connection state latch</td><td align="right" class='awrnc'>4,784</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM db client latch</td><td align="right" class='awrc'>627</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map headers</td><td align="right" class='awrnc'>455</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map load waiting list</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation freelist</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>5,294,293</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM network background latch</td><td align="right" class='awrnc'>5,473</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM network state latch</td><td align="right" class='awrc'>139</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM remote client latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Alerted Metric Element list</td><td align="right" class='awrc'>5,465</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Autotask management</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>

<tr><td scope="row" class='awrc'>Change Notification Hash table latch</td><td align="right" class='awrc'>230</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Column stats entry latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>100,207</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>218,521</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Event Group Locks</td><td align="right" class='awrc'>102</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FIB s.o chain latch</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FOB consolidated s.o list latch</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>File State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCS logfile block</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCS logfile write queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hang Manager wait event statistics</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,119</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>I/O Staticstics latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM Stats main anchor latch</td><td align="right" class='awrnc'>225</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM access tracking extent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM activity tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary rw latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM area sb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM area scb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM emb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM seg hdr latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMFS defer write list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMXT hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC other latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC stats buffer allocation latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>In memory undo latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS Sh mem access</td><td align="right" class='awrc'>2,133</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast add buf latch</td><td align="right" class='awrnc'>2,150</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast drop buf latch</td><td align="right" class='awrc'>2,150</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast load blnc latch</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS mem alloc latch</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS queue access latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS queue state obj latch</td><td align="right" class='awrc'>89,544</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS slv state obj latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KCNIBR - invalid block range tree</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDCStatHash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Buffer Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Hash Bucket Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Hash Elem Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO action list latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO bll latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFC FX Hash Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFC Hash Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFCL LE Freelist</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS client latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS cluster latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS endpoint latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS node latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS process latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFK SGA Libload latch</td><td align="right" class='awrnc'>4,696</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFMD SGA</td><td align="right" class='awrc'>346</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KGNFS-NFS:SHM structure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KGNFS-NFS:SVR LIST</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool KGH calls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool free list</td><td align="right" class='awrc'>56,961</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>154,334</td><td align="right" class='awrc'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool pending avail list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>2,137,635</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KMG MMAN ready and startup request latch</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS ctx level parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS req layer parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS sess layer parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS Receive and Send Queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS id table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS ksfs_node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFSD name cache parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSGL LS Segment latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSGL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPC ASPC anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPC SGA allocation parent latch</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPCGSN Hash Table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPCGSN Namespace latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSK PDB IO STAT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSRMA SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSRMF SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSWL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR hang analysis phase 1 latch</td><td align="right" class='awrnc'>452</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSXR hang analysis phase 2 latch</td><td align="right" class='awrc'>58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR large replies</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTF sga latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>232</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTILM latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTU in-memory txn table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTURMA ODPSCN latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTURMA SGA allocation parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KWQMN job cache list latch</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Latch for NonceHistory</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Locator state objects pool parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Lost write change tracking</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Lsod array latch</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA asr alloc latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA heap latch</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>6.45</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context latch</td><td align="right" class='awrc'>2,290</td><td align="right" class='awrc'>0.48</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context root latch</td><td align="right" class='awrnc'>76</td><td align="right" class='awrnc'>22.37</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MQL Tracking Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Memory Management Latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #3</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #4</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Subscriber</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Message cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MinActiveScn Latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Mutex</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Mutex Stats</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Nologging Standby SCN Time Map cache</td><td align="right" class='awrc'>199</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process</td><td align="right" class='awrnc'>517</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process allocation</td><td align="right" class='awrc'>1,257</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process: request allocation</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PDB Hash Table Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PDB LRU structure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL warning settings</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX hash array latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for dependency tracking</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for query hash table access</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for segments scanning</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>QMT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Real-time descriptor latch</td><td align="right" class='awrc'>2,288</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Report Request stats latch</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Report Request struct latch</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Request holder compeltion list latch</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Retry Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Retry bkt latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA Blackbox latch</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA IO buffer pool latch</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SGA Logging Bkt Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA Logging Log Latch</td><td align="right" class='awrnc'>2,843</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA blob parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA bucket locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA heap locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA pool locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SO private so latch</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL memory manager latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL memory manager workarea list latch</td><td align="right" class='awrc'>15,196</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SR Stats Stripe Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sched IM Job latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sched InMem Job Cache</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Shared B-Tree</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams Generic</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Subscriber Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Testing</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Token Manager</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Txn Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Txn bkt latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>UM object latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>WCR: sync</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>X$KSFQP</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB NFS Security Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB unused session pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB used session pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>active checkpoint queue latch</td><td align="right" class='awrc'>27,806</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>active service list</td><td align="right" class='awrnc'>46,114</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,011</td><td align="right" class='awrnc'>0.00</td></tr>

Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrc'>archive destination</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
The default report file name is awrrpt_rac_156_157.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.

<tr><td scope="row" class='awrnc'>begin backup scn array</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>business card</td><td align="right" class='awrnc'>169</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cache buffer handles</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers chains</td><td align="right" class='awrnc'>17,401,216</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2,148,400</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>2,440,836</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,456,528</td><td align="right" class='awrc'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>cache table scan latch</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>call allocation</td><td align="right" class='awrc'>300</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>change notification client cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>channel handle pool latch</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>2.82</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>channel operations parent latch</td><td align="right" class='awrnc'>2,504</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>checkpoint queue latch</td><td align="right" class='awrc'>1,108,008</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>339,884</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>client/application info</td><td align="right" class='awrnc'>595</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>compile environment latch</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp handoff latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp pool latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp server hash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp sga latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp srv type state latch</td><td align="right" class='awrnc'>607</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp srv type wait latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cr slave free list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cvmap freelist lock</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>deferred cleanup latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dispatcher info</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dml lock allocation</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>done queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dtp latch</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dummy allocation</td><td align="right" class='awrc'>212</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>eighth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>eleventh spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enqueue freelist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>190,619</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enqueue hash chains</td><td align="right" class='awrc'>852,380</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enqueues</td><td align="right" class='awrnc'>93</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>error message lists</td><td align="right" class='awrc'>418</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fast space usage latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fifteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>file cache latch</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>first Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>flash file access latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>flashback copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fourteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fourth Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>9,135,268</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>945,037</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gc xid list</td><td align="right" class='awrc'>115</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcr global ctx</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs commit scn state</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs nodemap pool</td><td align="right" class='awrnc'>56,678</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs opaque info freelist</td><td align="right" class='awrc'>79,111</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs partitioned table hash</td><td align="right" class='awrnc'>5,384,696</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>108,479</td><td align="right" class='awrnc'>0.00</td></tr>

<tr><td scope="row" class='awrc'>gcs pcm hashed value bucket hash</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
Using the report name awr_rac.txt
<tr><td scope="row" class='awrnc'>gcs remaster request queue</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>1,905,988</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>983,462</td><td align="right" class='awrc'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>8,782,810</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,249</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs resource scan list</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource timerq list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource validate list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows freelist</td><td align="right" class='awrnc'>911,709</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges cached resource lists</td><td align="right" class='awrc'>76,993</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>19,711</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ges deadlock list</td><td align="right" class='awrnc'>406</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges domain table</td><td align="right" class='awrc'>277,923</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>221,586</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges group table</td><td align="right" class='awrc'>279,389</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>3,534</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process parent latch</td><td align="right" class='awrc'>559,931</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process table freelist</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock freelist</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>311,940</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>884</td><td align="right" class='awrnc'>0.23</td></tr>
<tr><td scope="row" class='awrc'>ges resource scan list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource table freelist</td><td align="right" class='awrnc'>1,752</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges s-lock bitvec freelist</td><td align="right" class='awrc'>198</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges timeout list</td><td align="right" class='awrnc'>607</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges value block free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>global KZLD latch for auth type mem in SGA</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>global tx hash mapping</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>granule from data transfer cache</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gws:Sharding global descriptor latch</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table Sql Plan Finding latch</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>hash table column usage latch</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,398</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>hash table expression usage tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table sql contorl latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat check</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>289</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>heartbeat structure management</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>303</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>imc buf hdl lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc cr clone buf</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc hash lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc sj lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc srchsp lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc-txn-wrk-lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory area latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory columnar segment hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory columnar ts extent map chunk latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory global pool latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>internal temp table object number allocation latch</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>interrupt manipulation</td><td align="right" class='awrc'>442</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>intra txn parallel recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>io pool granule list</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>io pool granule metadata list</td><td align="right" class='awrnc'>157</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>job workq parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>job_queue_processes parameter latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>k2q global data latch</td><td align="right" class='awrc'>404</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>k2q lock allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kKCN Cqn SGA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kcb DW scan objtemp hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kcn buffer chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kdlx hb parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kgb parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kgnfs mount latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjbr roi instance map</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci objects freelist latch</td><td align="right" class='awrnc'>2,581</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci process context latch</td><td align="right" class='awrc'>1,897</td><td align="right" class='awrc'>0.63</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>37,506</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjci process list latch</td><td align="right" class='awrnc'>1,106</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci request sequence latch</td><td align="right" class='awrc'>209</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjcipctx state object freelist latch</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoedcso state object freelist latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoeq omni enqueue hash bucket latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoer owner hash bucket</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjpm my inst data</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc Request obj freelist latch</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc Ring Buffer obj freelist latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc protect control request queue</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6,052</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjsc protect warm up context</td><td align="right" class='awrnc'>140</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca pkey obj freelist latch</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsca protect pkey hash table bucket</td><td align="right" class='awrnc'>6,751</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca protect service hash table bucket</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjscpss state object freelist latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kokc descriptor allocation latch</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kpoxft latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>krso process</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksevn object root latch</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksfv messages</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksi resource reuse count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksim group membership cache</td><td align="right" class='awrc'>581</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksim membership request latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>270</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksns object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kss move lock</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksuosstats global area</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksutcpistat latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv allocation latch</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv class latch</td><td align="right" class='awrnc'>14,263</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv msg queue latch</td><td align="right" class='awrc'>193</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>192</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxp shared latch</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxp so latch</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksz_so allocation latch</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktfbn latch</td><td align="right" class='awrc'>131</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg jrnls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg lookuptable level 1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg lookuptable level 2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg space</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg stages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg worklink</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm global data</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm prv jrnls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktmpj HT ls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwqbsn:qsga</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbmdl: metadata latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbql: queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbutl: uncommitted txn latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptQcachLt: queue cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptTrncTsksLt: trunc task latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptjobAdPtLt: AdPt list latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsslLat: skiplist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kxfxscanrate_latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>101,772</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>list of block allocation</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>loader state object freelist</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment dispenser latch</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment hash table latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment query latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock DBA buffer during media recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log write info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>101,659</td><td align="right" class='awrc'>2.98</td></tr>
<tr><td scope="row" class='awrnc'>log write worker phase</td><td align="right" class='awrnc'>3,179</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logical standby cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer context allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer local</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer work area</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>longop free list parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>managed standby</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>message bitmap latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>message pool operations parent latch</td><td align="right" class='awrnc'>987</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>636,022</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>msg queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>multiblock read objects</td><td align="right" class='awrc'>152</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service memory objects</td><td align="right" class='awrnc'>95</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service namespace bucket</td><td align="right" class='awrc'>3,521</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service pending queue</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service request</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service request queue</td><td align="right" class='awrnc'>6,205</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ncodef allocation latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ninth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object queue header freelist</td><td align="right" class='awrc'>1,167</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>5,210,578</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17,543</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>object queue memory</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object stats modification</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel query alloc buffer</td><td align="right" class='awrc'>1,393</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parallel query stats</td><td align="right" class='awrnc'>313</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel txn reco latch</td><td align="right" class='awrc'>954</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parameter table management</td><td align="right" class='awrnc'>971</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pdb enqueue hash chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>peshm</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pesom_free_list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pesom_hash_node</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pkey global statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pmon dead latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>post/wait queue</td><td align="right" class='awrc'>28,683</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,896</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>process allocation</td><td align="right" class='awrnc'>3,024</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process group creation</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process memory detail</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process pkey statistics list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process queue</td><td align="right" class='awrnc'>605</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process queue reference</td><td align="right" class='awrc'>17,039</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,024</td><td align="right" class='awrc'>2.57</td></tr>
<tr><td scope="row" class='awrnc'>qmn task queue latch</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>quarantine object</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>query server freelists</td><td align="right" class='awrnc'>767</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>query server process</td><td align="right" class='awrc'>439</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>queued dump request</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>queuing load statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>read-moslty lock queue under pkey</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>recovery domain hash bucket</td><td align="right" class='awrc'>315</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>306,807</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>467,765</td><td align="right" class='awrnc'>0.32</td></tr>
<tr><td scope="row" class='awrc'>redo copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>468,413</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>redo transport task</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>redo writing</td><td align="right" class='awrc'>330,900</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote tool request latch</td><td align="right" class='awrnc'>116</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr group change latch</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:active threads</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:actses change group</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:actses change state</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:free threads list</td><td align="right" class='awrc'>211</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan CPU method</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan change alloc latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan change latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:resource group CPU method</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:schema config</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:session queuing</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache objects</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>rt rmv count latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>303</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>second Audit Vault latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>segmented array pool</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sequence cache</td><td align="right" class='awrnc'>116</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>service drain list</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session allocation</td><td align="right" class='awrnc'>93,779</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>93,552</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>session idle bit</td><td align="right" class='awrc'>188,241</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session state list latch</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session statistics</td><td align="right" class='awrnc'>212</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session switching</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session timer</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>seventh spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sga hash table parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shard latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shardgroup list latch</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared pool</td><td align="right" class='awrc'>18,760</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>shared pool sim alloc</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared pool simulator</td><td align="right" class='awrc'>446</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared server configuration</td><td align="right" class='awrnc'>203</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sim partition latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>simulator hash latch</td><td align="right" class='awrnc'>771,546</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>simulator lru latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>515,107</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>sixth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sort extent pool</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>space background task latch</td><td align="right" class='awrnc'>1,456</td><td align="right" class='awrnc'>43.89</td><td align="right" class='awrnc'>0.85</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>398</td><td align="right" class='awrnc'>3.02</td></tr>
<tr><td scope="row" class='awrc'>state object free list</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>statistics aggregation</td><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>subscriber Ht bkt</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>tablespace key chain</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>temp lob duration state obj allocation</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>temporary table state object allocation</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tenth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent l0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent2 l0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent2 lmid cln</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test mixed exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test mode exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test open exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test pdb exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test shared parent2 lmid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thirteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>threshold alerts latch</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>transaction allocation</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twelfth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fifth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-first spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fourth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-second spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-third spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>345,243</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit buffers</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit holder</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit queues</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3600"></a>
<h3 class="awr">Latch Sleep Breakdown</h3>
<ul>
<li class="awr"> ordered by misses desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch sleep statistics. Get requests, misses, sleeps, spin gets are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Misses</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Spin Gets</th></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>2,440,836</td><td align="right" class='awrc'>3,167</td><td align="right" class='awrc'>105</td><td align="right" class='awrc'>3,067</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>9,135,268</td><td align="right" class='awrnc'>1,766</td><td align="right" class='awrnc'>144</td><td align="right" class='awrnc'>1,631</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>2,137,635</td><td align="right" class='awrc'>1,615</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>1,528</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource freelist</td><td align="right" class='awrnc'>1,905,988</td><td align="right" class='awrnc'>1,316</td><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>1,181</td></tr>
<tr><td scope="row" class='awrc'>gcs resource hash</td><td align="right" class='awrc'>8,782,810</td><td align="right" class='awrc'>916</td><td align="right" class='awrc'>260</td><td align="right" class='awrc'>665</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers chains</td><td align="right" class='awrnc'>17,401,216</td><td align="right" class='awrnc'>852</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>838</td></tr>
<tr><td scope="row" class='awrc'>space background task latch</td><td align="right" class='awrc'>1,456</td><td align="right" class='awrc'>639</td><td align="right" class='awrc'>540</td><td align="right" class='awrc'>145</td></tr>
<tr><td scope="row" class='awrnc'>enqueue hash chains</td><td align="right" class='awrnc'>852,380</td><td align="right" class='awrnc'>634</td><td align="right" class='awrnc'>174</td><td align="right" class='awrnc'>473</td></tr>
<tr><td scope="row" class='awrc'>redo allocation</td><td align="right" class='awrc'>306,807</td><td align="right" class='awrc'>624</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>534</td></tr>
<tr><td scope="row" class='awrnc'>messages</td><td align="right" class='awrnc'>636,022</td><td align="right" class='awrnc'>151</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>140</td></tr>
<tr><td scope="row" class='awrc'>object queue header operation</td><td align="right" class='awrc'>5,210,578</td><td align="right" class='awrc'>123</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>106</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>221,586</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>81</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>5,294,293</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>57</td></tr>
<tr><td scope="row" class='awrnc'>redo writing</td><td align="right" class='awrnc'>330,900</td><td align="right" class='awrnc'>29</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>26</td></tr>
<tr><td scope="row" class='awrc'>lgwr LWN SCN</td><td align="right" class='awrc'>101,772</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>22</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>311,940</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>9</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context root latch</td><td align="right" class='awrc'>76</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>11</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>1,108,008</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>16</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>345,243</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>14</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>218,521</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td></tr>
<tr><td scope="row" class='awrc'>kjci process context latch</td><td align="right" class='awrc'>1,897</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context latch</td><td align="right" class='awrnc'>2,290</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>9</td></tr>
<tr><td scope="row" class='awrc'>MGA heap latch</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td scope="row" class='awrnc'>call allocation</td><td align="right" class='awrnc'>300</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>session allocation</td><td align="right" class='awrc'>93,779</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>active checkpoint queue latch</td><td align="right" class='awrnc'>27,806</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3700"></a>
<h3 class="awr">Latch Miss Sources</h3>
<ul>
<li class="awr"> only latches with sleeps are shown </li>
<li class="awr"> ordered by name, sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch miss sources. Place where latch was requested, no-wait misses, sleeps, waiter sleeps are displayed for each missed latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Where</th><th class="awrbg" scope="col">NoWait Misses</th><th class="awrbg" scope="col">   Sleeps</th><th class="awrbg" scope="col">Waiter Sleeps</th></tr>
<tr><td class='awrc'>ASM map operation hash table</td><td class='awrc'>kffmDoDone_1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>ASM map operation hash table</td><td class='awrnc'>kffmTranslate</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>8</td></tr>
<tr><td class='awrc'>DML lock allocation</td><td class='awrc'>ktaidm</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjctcsnd: send normal message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>45</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sedeqv3: dequeue a vector of msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>4</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sqenq: queue a message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>16</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_updatetkt: update ticket info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>14</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sqenq2: queue a message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_releasetkt: change ticket allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>MGA shared context latch</td><td class='awrnc'>ksm_mga_detach_whr2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>MGA shared context root latch</td><td class='awrc'>ksm_mga_detach_whr1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>active checkpoint queue latch</td><td class='awrnc'>kcbk_add_rbr_ckpt: Add rbr ckpt 3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbgtcr: slow path excl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kclbla</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kclpdcl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbbic2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbrls: fast pin release</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>20</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbzib: finish processing buffer</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbgtcr: convert latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbzgb_2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>43</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbzgws</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbbxsv: move to being written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>call allocation</td><td class='awrc'>ksuxds</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>call allocation</td><td class='awrnc'>ksudlp: top call</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>checkpoint queue latch</td><td class='awrc'>kcbklbc_cql</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclnfndnewm</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>101</td><td align="right" class='awrnc'>45</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclulb</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>42</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclplz</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclnfnds</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>18</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclhngcbk1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclpdcl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>KCLUNLNK</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>25</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclplz_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbralc: check freelist nowait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbralc add resource</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>110</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbrfr_bg2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>28</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbrralc: reserve allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbcropen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>45</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbopen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>8</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbclose_remaster</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>41</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbassume</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>20</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbmpopen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>27</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpclose</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>29</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclpdc</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>40</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpflushpi</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>12</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrdowncvt</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclrwrite</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>9</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbconvert</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjblocalobj_nolock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>ges enqueue table freelist</td><td class='awrnc'>kjlalc: lock allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjrmas1: lookup master node</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjlmfnd: search for lockp by rename and inst id</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjakcai: search for resp by resname</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td></tr>
<tr><td class='awrnc'>kjci process context latch</td><td class='awrnc'>kjci_finish_int:2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksarcv</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv: after wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksaamb: after wakeup</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>8</td></tr>
<tr><td class='awrnc'>mostly latch-free SCN</td><td class='awrnc'>kcs024</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>mostly latch-free SCN</td><td class='awrc'>kcslcu3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>18</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_unlink_q</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>9</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_link_q</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>5</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_post: more space</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>21</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_write: before write</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>26</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_gen: redo allocation 3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>46</td></tr>
<tr><td class='awrnc'>redo writing</td><td class='awrnc'>kcrfw_post: rba scn pair</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>session allocation</td><td class='awrc'>ksuxds_int: free</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_grab_task</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>365</td><td align="right" class='awrnc'>515</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_detach_task</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>25</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_smco_purgeexpired</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_smco_movetasks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsjCreateTask</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktudnx:child</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqcmi: if lk mode not requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqgtl3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>78</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqrcl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>79</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcmi: if lk mode requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>14</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>kghfre</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7500"></a>
<h3 class="awr">Mutex Sleep Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3800"></a>
<h3 class="awr">Parent Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3900"></a>
<h3 class="awr">Child Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="30"></a>
<h2 class="awr">
Segment Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4000">Segments by Logical Reads</a></li>
<li class="awr"><a class="awr" href="#4100">Segments by Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4104">Segments by Physical Read Requests</a></li>
<li class="awr"><a class="awr" href="#4108">Segments by UnOptimized Reads</a></li>
<li class="awr"><a class="awr" href="#4106">Segments by Optimized Reads</a></li>
<li class="awr"><a class="awr" href="#4110">Segments by Direct Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4120">Segments by Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4124">Segments by Physical Write Requests</a></li>
<li class="awr"><a class="awr" href="#4130">Segments by Direct Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4140">Segments by Table Scans</a></li>
<li class="awr"><a class="awr" href="#4150">Segments by DB Blocks Changes</a></li>
<li class="awr"><a class="awr" href="#4200">Segments by Row Lock Waits</a></li>
<li class="awr"><a class="awr" href="#4300">Segments by ITL Waits</a></li>
<li class="awr"><a class="awr" href="#4400">Segments by Buffer Busy Waits</a></li>
<li class="awr"><a class="awr" href="#4450">Segments by Global Cache Buffer Busy</a></li>
<li class="awr"><a class="awr" href="#4500">Segments by CR Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4600">Segments by Current Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4605">Segments by Global Cache Remote Grants</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4000"></a>
<h3 class="awr">Segments by Logical Reads</h3>
<ul>
<li class="awr">Total Logical Reads:	   5,609,804</li>
<li class="awr">Captured Segments account for	77.5% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by logical reads. Owner, tablespace name, object type, logical read, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>111,680</td><td align="right" class='awrc'>1.99</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>108,672</td><td align="right" class='awrnc'>1.94</td></tr>
<tr><td class='awrc'>USER38</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73602</td><td align="right" class='awrc'>73602</td><td align="right" class='awrc'>105,184</td><td align="right" class='awrc'>1.88</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73468</td><td align="right" class='awrnc'>73468</td><td align="right" class='awrnc'>104,672</td><td align="right" class='awrnc'>1.87</td></tr>
<tr><td class='awrc'>USER5</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73428</td><td align="right" class='awrc'>73428</td><td align="right" class='awrc'>104,544</td><td align="right" class='awrc'>1.86</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4100"></a>
<h3 class="awr">Segments by Physical Reads</h3>
<ul>
<li class="awr">Total Physical Reads:	    2,106,679</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical reads. Owner, tablespace name, object type, physical reads, etc. are displayed for each segment "><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	 Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>105,247</td><td align="right" class='awrc'>5.00</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>101,014</td><td align="right" class='awrnc'>4.79</td></tr>
<tr><td class='awrc'>USER29</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73546</td><td align="right" class='awrc'>73543</td><td align="right" class='awrc'>100,720</td><td align="right" class='awrc'>4.78</td></tr>
<tr><td class='awrnc'>USER5</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73418</td><td align="right" class='awrnc'>73426</td><td align="right" class='awrnc'>100,522</td><td align="right" class='awrnc'>4.77</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>100,501</td><td align="right" class='awrc'>4.77</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4104"></a>
<h3 class="awr">Segments by Physical Read Requests</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    2,106,061</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical read requests. Owner, tablespace name, object type, physical read requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Read Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>105,247</td><td align="right" class='awrc'>5.00</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>101,014</td><td align="right" class='awrnc'>4.80</td></tr>
<tr><td class='awrc'>USER29</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73546</td><td align="right" class='awrc'>73543</td><td align="right" class='awrc'>100,720</td><td align="right" class='awrc'>4.78</td></tr>
<tr><td class='awrnc'>USER5</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73418</td><td align="right" class='awrnc'>73426</td><td align="right" class='awrnc'>100,522</td><td align="right" class='awrnc'>4.77</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>100,501</td><td align="right" class='awrc'>4.77</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4108"></a>
<h3 class="awr">Segments by UnOptimized Reads</h3>
<ul>
<li class="awr">Total UnOptimized Read Requests:       2,106,061</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by unoptimized reads. Owner, tablespace name, object type, unoptimized reads, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">UnOptimized Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>105,247</td><td align="right" class='awrc'>5.00</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>101,014</td><td align="right" class='awrnc'>4.80</td></tr>
<tr><td class='awrc'>USER29</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73546</td><td align="right" class='awrc'>73543</td><td align="right" class='awrc'>100,720</td><td align="right" class='awrc'>4.78</td></tr>
<tr><td class='awrnc'>USER5</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73418</td><td align="right" class='awrnc'>73426</td><td align="right" class='awrnc'>100,522</td><td align="right" class='awrnc'>4.77</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>100,501</td><td align="right" class='awrc'>4.77</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4106"></a>
<h3 class="awr">Segments by Optimized Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4110"></a>
<h3 class="awr">Segments by Direct Physical Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4120"></a>
<h3 class="awr">Segments by Physical Writes</h3>
<ul>
<li class="awr">Total Physical Writes:	       310,504</li>
<li class="awr">Captured Segments account for	96.3% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical writes. Owner, tablespace name, object type, physical writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>16,596</td><td align="right" class='awrc'>5.34</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>14,396</td><td align="right" class='awrnc'>4.64</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>14,301</td><td align="right" class='awrc'>4.61</td></tr>
<tr><td class='awrnc'>USER5</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73418</td><td align="right" class='awrnc'>73426</td><td align="right" class='awrnc'>14,274</td><td align="right" class='awrnc'>4.60</td></tr>
<tr><td class='awrc'>USER20</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>14,273</td><td align="right" class='awrc'>4.60</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4124"></a>
<h3 class="awr">Segments by Physical Write Requests</h3>
<ul>
<li class="awr">Total Physical Write Requests:	       298,704</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical write requests. Owner, tablespace name, object type, physical write requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Write Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>16,582</td><td align="right" class='awrc'>5.55</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>14,333</td><td align="right" class='awrnc'>4.80</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>14,229</td><td align="right" class='awrc'>4.76</td></tr>
<tr><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>14,217</td><td align="right" class='awrnc'>4.76</td></tr>
<tr><td class='awrc'>USER5</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73418</td><td align="right" class='awrc'>73426</td><td align="right" class='awrc'>14,206</td><td align="right" class='awrc'>4.76</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4130"></a>
<h3 class="awr">Segments by Direct Physical Writes</h3>
<ul>
<li class="awr">Total Direct Physical Writes:		  692</li>
<li class="awr">Captured Segments account for	 9.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by direct physical writes. Owner, tablespace name, object type, direct writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Direct Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_131</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>9.68</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4140"></a>
<h3 class="awr">Segments by Table Scans</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4150"></a>
<h3 class="awr">Segments by DB Blocks Changes</h3>
<ul>
<li class="awr"> % of Capture shows % of DB Block Changes for each top segment compared  </li>
<li class="awr"> with total DB Block Changes for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by DB blocks changes. Owner, tablespace name, object type, db block changes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">DB Block Changes</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>USER29</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73546</td><td align="right" class='awrc'>73543</td><td align="right" class='awrc'>17,056</td><td align="right" class='awrc'>5.12</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>16,512</td><td align="right" class='awrnc'>4.96</td></tr>
<tr><td class='awrc'>USER39</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73590</td><td align="right" class='awrc'>73595</td><td align="right" class='awrc'>16,432</td><td align="right" class='awrc'>4.93</td></tr>
<tr><td class='awrnc'>USER32</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73562</td><td align="right" class='awrnc'>73567</td><td align="right" class='awrnc'>16,320</td><td align="right" class='awrnc'>4.90</td></tr>
<tr><td class='awrc'>USER13</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>15,664</td><td align="right" class='awrc'>4.70</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4200"></a>
<h3 class="awr">Segments by Row Lock Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4300"></a>
<h3 class="awr">Segments by ITL Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4400"></a>
<h3 class="awr">Segments by Buffer Busy Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4450"></a>
<h3 class="awr">Segments by Global Cache Buffer Busy</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4500"></a>
<h3 class="awr">Segments by CR Blocks Received</h3>
<ul>
<li class="awr">Total CR Blocks Received:	    2,412</li>
<li class="awr">Captured Segments account for	93.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by CR blocks received. Owner, tablespace name, object type, CR blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">CR    Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>398</td><td align="right" class='awrc'>16.50</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>283</td><td align="right" class='awrnc'>11.73</td></tr>
<tr><td class='awrc'>USER20</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>192</td><td align="right" class='awrc'>7.96</td></tr>
<tr><td class='awrnc'>USER19</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73485</td><td align="right" class='awrnc'>73498</td><td align="right" class='awrnc'>188</td><td align="right" class='awrnc'>7.79</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>156</td><td align="right" class='awrc'>6.47</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4600"></a>
<h3 class="awr">Segments by Current Blocks Received</h3>
<ul>
<li class="awr">Total Current Blocks Received:		12,656</li>
<li class="awr">Captured Segments account for	95.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by current blocks received. Owner, tablespace name, object type, Current blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Current Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,154</td><td align="right" class='awrc'>9.12</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>812</td><td align="right" class='awrnc'>6.42</td></tr>
<tr><td class='awrc'>USER36</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73589</td><td align="right" class='awrc'>73589</td><td align="right" class='awrc'>747</td><td align="right" class='awrc'>5.90</td></tr>
<tr><td class='awrnc'>USER27</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73525</td><td align="right" class='awrnc'>73525</td><td align="right" class='awrnc'>732</td><td align="right" class='awrnc'>5.78</td></tr>
<tr><td class='awrc'>USER33</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73571</td><td align="right" class='awrc'>73571</td><td align="right" class='awrc'>732</td><td align="right" class='awrc'>5.78</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4605"></a>
<h3 class="awr">Segments by Global Cache Remote Grants</h3>
<ul>
<li class="awr">Total Global Cache Remote Grants:	1,044,112</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by gc remote grants. Owner, tablespace name, object type, gc remote grants, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Remote Grants</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER40</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73603</td><td align="right" class='awrc'>73605</td><td align="right" class='awrc'>59,392</td><td align="right" class='awrc'>5.69</td></tr>
<tr><td class='awrnc'>USER27</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73535</td><td align="right" class='awrnc'>73538</td><td align="right" class='awrnc'>57,024</td><td align="right" class='awrnc'>5.46</td></tr>
<tr><td class='awrc'>USER19</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73485</td><td align="right" class='awrc'>73498</td><td align="right" class='awrc'>56,590</td><td align="right" class='awrc'>5.42</td></tr>
<tr><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>53,945</td><td align="right" class='awrnc'>5.17</td></tr>
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>53,814</td><td align="right" class='awrc'>5.15</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="31"></a>
<h2 class="awr">
Dictionary Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4700">Dictionary Cache Stats</a></li>
<li class="awr"><a class="awr" href="#4800">Dictionary Cache Stats (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4700"></a>
<h3 class="awr">Dictionary Cache Stats</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low (&lt; 2% in most cases) </li>
<li class="awr"> &quot;Final Usage&quot; is the number of cache entries being used</li>
</ul>
<table border="0" class="tdiff" summary="This table displays dictionary cache statistics. Get requests, % misses, scan requests, final usage, etc. are displayed for each cache"><tr><th class="awrbg" scope="col">Cache</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Scan Reqs</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Mod Reqs</th><th class="awrbg" scope="col">Final Usage</th></tr>
<tr><td scope="row" class='awrc'>dc_awr_control</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_global_oids</td><td align="right" class='awrnc'>4,538</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>218</td></tr>
<tr><td scope="row" class='awrc'>dc_histogram_data</td><td align="right" class='awrc'>725</td><td align="right" class='awrc'>1.66</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3,395</td></tr>
<tr><td scope="row" class='awrnc'>dc_histogram_defs</td><td align="right" class='awrnc'>1,179</td><td align="right" class='awrnc'>2.21</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>6,506</td></tr>
<tr><td scope="row" class='awrc'>dc_objects</td><td align="right" class='awrc'>5,862</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>2,780</td></tr>
<tr><td scope="row" class='awrnc'>dc_profiles</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>dc_props</td><td align="right" class='awrc'>498</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td></tr>
<tr><td scope="row" class='awrnc'>dc_rollback_segments</td><td align="right" class='awrnc'>1,287</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>320</td></tr>
<tr><td scope="row" class='awrc'>dc_segments</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>25.49</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>728</td></tr>
<tr><td scope="row" class='awrnc'>dc_sequences</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>75.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td></tr>
<tr><td scope="row" class='awrc'>dc_tablespaces</td><td align="right" class='awrc'>239</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td></tr>
<tr><td scope="row" class='awrnc'>dc_users</td><td align="right" class='awrnc'>335</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>242</td></tr>
<tr><td scope="row" class='awrc'>outstanding_alerts</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td></tr>
<tr><td scope="row" class='awrnc'>sch_lj_oids</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>50.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4800"></a>
<h3 class="awr">Dictionary Cache Stats (RAC)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="32"></a>
<h2 class="awr">
Library Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4900">Library Cache Activity</a></li>
<li class="awr"><a class="awr" href="#5000">Library Cache Activity (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4900"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Get requests, % misses, pin request, % miss, reloads, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>123</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>DBLINK</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>OBJECT ID</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SCHEMA</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA</td><td align="right" class='awrnc'>681</td><td align="right" class='awrnc'>3.23</td><td align="right" class='awrnc'>727,940</td><td align="right" class='awrnc'>-0.07</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>9</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA BUILD</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>62.50</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA STATS</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>88.89</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>88.89</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>223</td><td align="right" class='awrc'>4.48</td><td align="right" class='awrc'>5,687</td><td align="right" class='awrc'>0.51</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5000"></a>
<h3 class="awr">Library Cache Activity (RAC)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Ges lock requests, GES pin requests, GES pin releases, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>118</td><td align="right" class='awrc'>118</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>DBLINK</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>1,072</td><td align="right" class='awrc'>5,269</td><td align="right" class='awrc'>5,269</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="33"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8500">Memory Dynamic Components</a></li>
<li class="awr"><a class="awr" href="#8600">Memory Resize Operations Summary</a></li>
<li class="awr"><a class="awr" href="#8650">Memory Resize Ops</a></li>
<li class="awr"><a class="awr" href="#7300">Process Memory Summary</a></li>
<li class="awr"><a class="awr" href="#5900">SGA Memory Summary</a></li>
<li class="awr"><a class="awr" href="#6100">SGA breakdown difference by Pool and Name</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8500"></a>
<h3 class="awr">Memory Dynamic Components</h3>
<ul>
<li class="awr"> Min/Max sizes since instance startup </li>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory dynamic component statistics. Begin snap size, current size, min size, etc. are displayed for each component"><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Begin Snap Size (Mb)</th><th class="awrbg" scope="col">Current Size (Mb)</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Oper Count</th><th class="awrbg" scope="col">Last Op Typ/Mod</th></tr>
<tr><td scope="row" class='awrc'>ASM Buffer Cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 16K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 2K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 32K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 4K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 8K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>0</td><td class='awrc'>INI/</td></tr>
<tr><td scope="row" class='awrnc'>Data Transfer Cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In Memory RO Extension Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>In Memory RW Extension Area</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In-Memory Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>KEEP buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>PGA Target</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>RECYCLE buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>SGA Target</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>Shared IO Pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>java pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>large pool</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>memoptimize buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>streams pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>unified pga pool</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8600"></a>
<h3 class="awr">Memory Resize Operations Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8650"></a>
<h3 class="awr">Memory Resize Ops</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7300"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap  </li>
<li class="awr"> All rows below contain absolute values (i.e. not diffed over the interval) </li>
<li class="awr"> Max Alloc is Maximum PGA Allocation size at snapshot time  </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by Begin/End snapshot, Alloc (MB) desc </li>
<li class="awr"> Top 10 containers by Alloc (MB) at end snapshot time are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays process memory summary. Allocation, used, average allocation, etc. are displayed for different category of process memory."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>158.25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.52</td><td align="right" class='awrc'>6.89</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>645.42</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4.96</td><td align="right" class='awrnc'>7.17</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>130</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>18.09</td><td align="right" class='awrc'>17.09</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>112</td><td align="right" class='awrc'>111</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>7.73</td><td align="right" class='awrnc'>6.05</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>63</td><td align="right" class='awrnc'>54</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>829.49</td><td align="right" class='awrc'>23.14</td><td align="right" class='awrc'>8.77</td><td align="right" class='awrc'>14.69</td><td align="right" class='awrc'>75</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>350</td><td align="right" class='awrc'>340</td></tr>
<tr><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>146.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.30</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>34</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>554.48</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.09</td><td align="right" class='awrc'>7.73</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>8.23</td><td align="right" class='awrnc'>7.34</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>91</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>2.57</td><td align="right" class='awrc'>1.89</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>30</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>711.47</td><td align="right" class='awrnc'>9.23</td><td align="right" class='awrnc'>9.54</td><td align="right" class='awrnc'>15.88</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>276</td><td align="right" class='awrnc'>264</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5900"></a>
<h3 class="awr">SGA Memory Summary</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA memory summary. For each SGA region, begin size and end size is displayed."><tr><th class="awrbg" scope="col">SGA regions</th><th class="awrbg" scope="col">Begin Size (Bytes)</th><th class="awrbg" scope="col">End Size (Bytes) (if different)</th></tr>
<tr><td scope="row" class='awrc'>Database Buffers</td><td align="right" class='awrc'>8,522,825,728</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Fixed Size</td><td align="right" class='awrnc'>12,445,928</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Redo Buffers</td><td align="right" class='awrc'>21,106,688</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Variable Size</td><td align="right" class='awrnc'>1,577,058,304</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6100"></a>
<h3 class="awr">SGA breakdown difference by Pool and Name</h3>
<ul>
<li class="awr"> ordered by Pool, Name	</li>
<li class="awr"> N/A value for Begin MB or End MB indicates the size of that Pool/Name was    insignificant, or zero in that snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA breakdown difference. For each pool name, begin and end size are displayed."><tr><th class="awrbg" scope="col">Pool</th><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Begin MB</th><th class="awrbg" scope="col">End MB</th><th class="awrbg" scope="col">% Diff</th></tr>
<tr><td class='awrc'>large</td><td class='awrc'>PX msg pool</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>large</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ASH buffers</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KGLH0</td><td align="right" class='awrnc'>50.69</td><td align="right" class='awrnc'>49.33</td><td align="right" class='awrnc'>-2.69</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>KGLS</td><td align="right" class='awrc'>15.04</td><td align="right" class='awrc'>14.58</td><td align="right" class='awrc'>-3.04</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KJSC rnb slots</td><td align="right" class='awrnc'>23.12</td><td align="right" class='awrnc'>15.03</td><td align="right" class='awrnc'>-34.98</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>SO private sga</td><td align="right" class='awrc'>28.88</td><td align="right" class='awrc'>28.88</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>SQLA</td><td align="right" class='awrnc'>268.37</td><td align="right" class='awrnc'>268.65</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>db_block_hash_buckets</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>92.89</td><td align="right" class='awrnc'>99.65</td><td align="right" class='awrnc'>7.28</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gc name table</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs resources</td><td align="right" class='awrnc'>271.02</td><td align="right" class='awrnc'>271.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs resv res hash bucket</td><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs shadows</td><td align="right" class='awrnc'>147.83</td><td align="right" class='awrnc'>147.83</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ges big msg buffers</td><td align="right" class='awrc'>26.29</td><td align="right" class='awrc'>26.29</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>ksunfy_meta 1</td><td align="right" class='awrnc'>25.03</td><td align="right" class='awrnc'>25.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>row cache</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>buffer_cache</td><td align="right" class='awrnc'>8,000.00</td><td align="right" class='awrnc'>8,000.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>fixed_sga</td><td align="right" class='awrc'>11.87</td><td align="right" class='awrc'>11.87</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>log_buffer</td><td align="right" class='awrnc'>20.13</td><td align="right" class='awrnc'>20.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>shared_io_pool</td><td align="right" class='awrc'>128.00</td><td align="right" class='awrc'>128.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="39"></a>
<h2 class="awr">
Replication Statistics (GoldenGate, XStream)
</h2>
<ul>
<li class="awr"><a class="awr" href="#9000">Replication System Resource Usage</a></li>
<li class="awr"><a class="awr" href="#9010">Replication SGA Usage</a></li>
<li class="awr"><a class="awr" href="#9020">GoldenGate Capture</a></li>
<li class="awr"><a class="awr" href="#9030">GoldenGate Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9040">GoldenGate Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9041">GoldenGate Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9042">GoldenGate Apply Server</a></li>
<li class="awr"><a class="awr" href="#9051">GoldenGate Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9050">GoldenGate Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9060">XStream Capture</a></li>
<li class="awr"><a class="awr" href="#9070">XStream Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9080">XStream Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9081">XStream Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9082">XStream Apply Server</a></li>
<li class="awr"><a class="awr" href="#9091">XStream Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9090">XStream Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9100">Table Statistics by DML Operations</a></li>
<li class="awr"><a class="awr" href="#9110">Table Statistics by Conflict Resolutions</a></li>
<li class="awr"><a class="awr" href="#9120">Replication Large Transaction Statistics</a></li>
<li class="awr"><a class="awr" href="#9130">Replication Long Running Transaction Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9000"></a>
<h3 class="awr">Replication System Resource Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9010"></a>
<h3 class="awr">Replication SGA Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9020"></a>
<h3 class="awr">GoldenGate Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9030"></a>
<h3 class="awr">GoldenGate Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9040"></a>
<h3 class="awr">GoldenGate Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9041"></a>
<h3 class="awr">GoldenGate Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9042"></a>
<h3 class="awr">GoldenGate Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9051"></a>
<h3 class="awr">GoldenGate Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9050"></a>
<h3 class="awr">GoldenGate Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9060"></a>
<h3 class="awr">XStream Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9070"></a>
<h3 class="awr">XStream Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9080"></a>
<h3 class="awr">XStream Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9081"></a>
<h3 class="awr">XStream Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9082"></a>
<h3 class="awr">XStream Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9091"></a>
<h3 class="awr">XStream Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9090"></a>
<h3 class="awr">XStream Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9100"></a>
<h3 class="awr">Table Statistics by DML Operations</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9110"></a>
<h3 class="awr">Table Statistics by Conflict Resolutions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9120"></a>
<h3 class="awr">Replication Large Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9130"></a>
<h3 class="awr">Replication Long Running Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="34"></a>
<h2 class="awr">
Advanced Queuing
</h2>
<ul>
<li class="awr"><a class="awr" href="#6150">Advanced Queue CPU/IO Usage</a></li>
<li class="awr"><a class="awr" href="#6400">Buffered Queues</a></li>
<li class="awr"><a class="awr" href="#6500">Buffered Queue Subscribers</a></li>
<li class="awr"><a class="awr" href="#6600">Rule Set</a></li>
<li class="awr"><a class="awr" href="#7600">Persistent Queues</a></li>
<li class="awr"><a class="awr" href="#7610">Persistent Queues Rate</a></li>
<li class="awr"><a class="awr" href="#7700">Persistent Queue Subscribers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6150"></a>
<h3 class="awr">Advanced Queue CPU/IO Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6400"></a>
<h3 class="awr">Buffered Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6500"></a>
<h3 class="awr">Buffered Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6600"></a>
<h3 class="awr">Rule Set</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7600"></a>
<h3 class="awr">Persistent Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7610"></a>
<h3 class="awr">Persistent Queues Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7700"></a>
<h3 class="awr">Persistent Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="6700"></a>
<h3 class="awr">Resource Limit Stats</h3>
<ul>
<li class="awr"> Only rows with Current or Maximum Utilization &gt; 80% of Limit are shown  </li>
<li class="awr"> For &quot;UNLIMITED&quot; resources, rows whose Current or Maximum Utilization    exceeds 2*Initial Allocation are shown </li>
<li class="awr"> Ordered by Resource Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays resource limit statistics. Current utilization, maximum utilization, initial allocation and limit are displayed for each resource name"><tr><th class="awrbg" scope="col">Resource Name</th><th class="awrbg" scope="col">Current	 Utilization</th><th class="awrbg" scope="col">Maximum	 Utilization</th><th class="awrbg" scope="col">  Initial Allocation</th><th class="awrbg" scope="col">	Limit</th></tr>
<tr><td scope="row" class='awrc'>ges_cache_ress</td><td align="right" class='awrc'>3,196</td><td align="right" class='awrc'>3,542</td><td class='awrc'>0</td><td class='awrc'>UNLIMITED</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="37"></a>
<h2 class="awr">
Shared Server Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8710">Shared Servers Activity</a></li>
<li class="awr"><a class="awr" href="#8720">Shared Servers Rates</a></li>
<li class="awr"><a class="awr" href="#8730">Shared Servers Utilization</a></li>
<li class="awr"><a class="awr" href="#8740">Shared Servers Common Queue</a></li>
<li class="awr"><a class="awr" href="#8750">Shared Servers Dispatchers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8710"></a>
<h3 class="awr">Shared Servers Activity</h3>
<ul>
<li class="awr"> Values represent averages for all samples</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers activity statistics. It displays average total connections, average active connections, average total shared servers, etc."><tr><th class="awrbg" scope="col">Avg Total Connections</th><th class="awrbg" scope="col">Avg Active Connections</th><th class="awrbg" scope="col">Avg Total Shared Srvrs</th><th class="awrbg" scope="col">Avg Active Shared Srvrs</th><th class="awrbg" scope="col">Avg Total Dispatchers</th><th class="awrbg" scope="col">Avg Active Dispatchers</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8720"></a>
<h3 class="awr">Shared Servers Rates</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers rate statistics. It displays common queue per second, disp queue per second, server messages per second, common queue total, etc."><tr><th class="awrbg" scope="col">Common Queue Per Sec</th><th class="awrbg" scope="col">Disp Queue Per Sec</th><th class="awrbg" scope="col">Server Msgs/Sec</th><th class="awrbg" scope="col">Server KB/Sec</th><th class="awrbg" scope="col">Common Queue Total</th><th class="awrbg" scope="col">Disp Queue Total</th><th class="awrbg" scope="col">Server Total Msgs</th><th class="awrbg" scope="col">Server Total(KB)</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8730"></a>
<h3 class="awr">Shared Servers Utilization</h3>
<ul>
<li class="awr"> Statistics are combined for all servers </li>
<li class="awr"> Incoming and Outgoing Net % are included in %Busy</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers utilization statistics. It displays total server time second, % busy, % idle, incoming net %, outgoing net %, etc."><tr><th class="awrbg" scope="col">Total Server Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Incoming Net %</th><th class="awrbg" scope="col">Outgoing Net %</th></tr>
<tr><td align="right" class='awrc'>605</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8740"></a>
<h3 class="awr">Shared Servers Common Queue</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8750"></a>
<h3 class="awr">Shared Servers Dispatchers</h3>
<ul>
<li class="awr"> Ordered by %Busy, descending </li>
<li class="awr"> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue </li>
<li class="awr"> Name suffixes:       &quot;(N)&quot; - dispatcher started between begin and end snapshots	&quot;(R)&quot; - dispatcher re-started between begin and end snapshots</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers dispatcher statistics. Average connections, total dispatch time, % busy, % idle, total queued, total queued wait, etc. are displayed for each dispatcher"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Avg Conns</th><th class="awrbg" scope="col">Total Disp Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Total Queued</th><th class="awrbg" scope="col">Total Queue Wait (s)</th><th class="awrbg" scope="col">Avg Queue Wait (ms)</th></tr>
<tr><td scope="row" class='awrc'>D000</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="36"></a>
<h2 class="awr">
Initialization Parameters
</h2>
<ul>
<li class="awr"><a class="awr" href="#6800">Modified Parameters</a></li>
<li class="awr"><a class="awr" href="#6850">Modified Multi-Valued Parameters</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6800"></a>
<h3 class="awr">Modified Parameters</h3>
<ul>
<li class="awr"> This section shows all the modified initialization parameters that  were in effect during the entire snapshot interval </li>
<li class="awr"> End Value is displayed only if the parameter value was modified within the snapshot interval</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of the modified initialization parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>TRUE</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>DB</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>TRUE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>19.0.0</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>8192</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>+DATA</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>example.com</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>p30db</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>+FRA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>274877906944</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>listener_networks</td><td class='awrnc'>&#160;&#160;</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>local_listener</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>AMERICAN</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>AMERICA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>300</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>3371171840</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>640</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>10133438464</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_tablespace</td><td class='awrc'>UNDOTBS1</td><td class='awrc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6850"></a>
<h3 class="awr">Modified Multi-Valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more than one value </li>
<li class="awr">'(NULL)' indicates a missing parameter value </li>
<li class="awr"> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot'</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of multi-valued parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>control_files</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="42"></a>
<h2 class="awr">
Active Session History (ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9990">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9989">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9993">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9992">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9991">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9988">Top Events</a></li>
<li class="awr"><a class="awr" href="#9994">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9987">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9986">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9990"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1006</td><td align="right" class='awrc'>75.83</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>69.35</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>69.35</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">1006</div></td><td align="right" class='awrnc'><div class="hidden">75.82831325301204819277108433734939759036</div></td>
<td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>3.39</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>3.39</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">1006</div></td><td align="right" class='awrc'><div class="hidden">75.82831325301204819277108433734939759036</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.18</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.51</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>205</td><td align="right" class='awrnc'>15.44</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>13.78</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>13.78</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9989"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1006</td><td align="right" class='awrc'>75.83</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>75.08</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>69.35</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>205</td><td align="right" class='awrnc'>15.44</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>15.29</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>13.78</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9993"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>10,32406</td><td align="right" class='awrc'>4.37</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>3.84</td>
<td class='awrc'>USER17</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>51/60 [ 84%]</td><td align="right" class='awrc'>10</td></tr>
<tr><td align="right" scope="row" class='awrnc'>11,22304</td><td align="right" class='awrnc'>4.37</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.14</td>
<td class='awrnc'>USER25</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>55/60 [ 91%]</td><td align="right" class='awrnc'>8</td></tr>
<tr><td align="right" scope="row" class='awrc'>13,27134</td><td align="right" class='awrc'>4.37</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>3.99</td>
<td class='awrc'>USER12</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>53/60 [ 88%]</td><td align="right" class='awrc'>4</td></tr>
<tr><td align="right" scope="row" class='awrnc'>144,41325</td><td align="right" class='awrnc'>4.37</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>3.92</td>
<td class='awrnc'>USER32</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>52/60 [ 86%]</td><td align="right" class='awrnc'>8</td></tr>
<tr><td align="right" scope="row" class='awrc'>145,27084</td><td align="right" class='awrc'>4.37</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.22</td>
<td class='awrc'>USER39</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>56/60 [ 93%]</td><td align="right" class='awrc'>10</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9992"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9991"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>15.59</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>15.59</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9988"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>83.13</td><td align="right" class='awrc'>18.28</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td class='awrnc'>System I/O</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>3.92</td><td align="right" class='awrnc'>0.86</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td class='awrc'>Cluster</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>3.39</td><td align="right" class='awrc'>0.75</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>3.31</td><td align="right" class='awrnc'>0.73</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>2.79</td><td align="right" class='awrc'>0.61</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9994"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>83.13</td><td align="right" class='awrc'>&quot;2&quot;,&quot;25425623&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.08</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>3.92</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;4&quot;,&quot;1&quot;</td><td align="right" class='awrnc'>0.83</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9987"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73439</td><td align="right" class='awrc'>4.37</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.22</td>
<td class='awrc'>USER9.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73464</td><td align="right" class='awrnc'>4.37</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>3.99</td>
<td class='awrnc'>USER12.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73546</td><td align="right" class='awrc'>4.37</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>3.99</td>
<td class='awrc'>USER29.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73590</td><td align="right" class='awrnc'>4.37</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.22</td>
<td class='awrnc'>USER39.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73418</td><td align="right" class='awrc'>4.29</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>3.84</td>
<td class='awrc'>USER5.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9986"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>15:44:14   (46 secs)</td><td align="right" class='awrc'>117</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>101</td><td align="right" class='awrc'>7.61</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">15:44:14   (46 secs)</div></td><td align="right" class='awrnc'><div class="hidden">117</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.45</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">15:44:14   (46 secs)</div></td><td align="right" class='awrc'><div class="hidden">117</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.38</td></tr>
<tr><td align="right" class='awrnc'>15:45:00   (5.0 min)</td><td align="right" class='awrnc'>680</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>578</td><td align="right" class='awrnc'>43.52</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">15:45:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">680</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>3.01</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">15:45:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">680</div></td><td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>1.81</td></tr>
<tr><td align="right" class='awrc'>15:50:00   (4.3 min)</td><td align="right" class='awrc'>531</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>425</td><td align="right" class='awrc'>32.00</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">15:50:00   (4.3 min)</div></td><td align="right" class='awrnc'><div class="hidden">531</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>2.64</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">15:50:00   (4.3 min)</div></td><td align="right" class='awrc'><div class="hidden">531</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>1.81</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99995"></a>
<h2>ADDM Task ADDM:3393773525_1_157</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_1_157&apos;
	  --------------------------------------------

Analysis Period
---------------
AWR snapshot range from 156 to 157.
Time period starts at 10-FEB-20 03.44.14 PM
Time period ends at 10-FEB-20 03.54.19 PM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 11969 seconds.
The average number of active sessions was 19.78.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     19.69 | 99.51	  2
2  &quot;User I/O&quot; wait Class		       17.81 | 90.02	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.64 | 23.46	      5
4  Global Cache Messaging		     1.02 | 5.13	  1
5  Undersized SGA			     .56 | 2.81 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 19.72 active sessions, 99.51% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 16.36 active sessions, 82.68% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 612523 times and
      had an average elapsed time of 0.016 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 3.33 active sessions, 16.83% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 108129 times and
      had an average elapsed time of 0.016 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 17.84 active sessions, 90.02% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.65 active sessions, 23.46% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER9.CF1&quot; with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100220
      physical reads, 14261 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER12.CF1&quot; with
      object ID 73464.
      Related Object
	 Database object with ID 73464.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 99630
      physical reads, 14251 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER29.CF1&quot; with
      object ID 73546.
      Related Object
	 Database object with ID 73546.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100720
      physical reads, 14234 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .93 active sessions, 4.71% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER39.CF1&quot; with
      object ID 73590.
      Related Object
	 Database object with ID 73590.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 99474
      physical reads, 14002 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 4.63% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER5.CF1&quot; with
      object ID 73418.
      Related Object
	 Database object with ID 73418.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100522
      physical reads, 14274 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 17.81 active sessions, 90.02% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.02 active sessions, 5.13% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is 1.02 active sessions, 5.13% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 91% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.05 active sessions, 5.29% of total activity.


Finding 5: Undersized SGA
Impact is .56 active sessions, 2.81% of total activity.
-------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter &quot;sga_target&quot; was &quot;9664 M&quot; during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .13 active sessions, .65% of total activity.
   -----------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter &quot;sga_target&quot; to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 17.81 active sessions, 90.02% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="9997"></a>
<a class="awr" name="9997"></a><h3 class="awr">RAC Statistics</h3>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about RAC instances">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Number of Instances:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>	 2</td></tr>
<tr><td scope="row" class='awrc'>Number of LMS's:</td><td align="right" class='awrc'>	 2</td><td align="right" class='awrc'>	  2</td></tr>
<tr><td scope="row" class='awrnc'>Number of realtime LMS's:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>    2</td><td class='awrnc'> (0 priority changes)</td></tr>
</table><p />
Global Cache Load Profile
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about global cache load
		     profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks received:</td><td align="right" class='awrnc'>		    24.92</td><td align="right" class='awrnc'>		       0.14</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks served:</td><td align="right" class='awrc'>		32.63</td><td align="right" class='awrc'>		  0.18</td></tr>
<tr><td scope="row" class='awrnc'>GCS/GES messages received:</td><td align="right" class='awrnc'>	      5,180.48</td><td align="right" class='awrnc'>		   28.82</td></tr>
<tr><td scope="row" class='awrc'>GCS/GES messages sent:</td><td align="right" class='awrc'>		5,476.84</td><td align="right" class='awrc'>		    30.47</td></tr>
<tr><td scope="row" class='awrnc'>DBWR Fusion writes:</td><td align="right" class='awrnc'>		   0.10</td><td align="right" class='awrnc'>		     0.00</td></tr>
<tr><td scope="row" class='awrc'>Estd Interconnect traffic (KB)</td><td align="right" class='awrc'>		2,541.91</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
Global Cache Efficiency Percentages (Target local+remote 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays global cache efficiency percentages">
<tr><td scope="row" class='awrnc'>Buffer access -  local cache %:</td><td align="right" class='awrnc'>	62.17</td></tr>
<tr><td scope="row" class='awrc'>Buffer access - remote cache %:</td><td align="right" class='awrc'>   0.27</td></tr>
<tr><td scope="row" class='awrnc'>Buffer access -	  disk %:</td><td align="right" class='awrnc'>	37.56</td></tr>
<tr><td scope="row" class='awrc'>Global Cache Locality	      %:</td><td align="right" class='awrc'>  50.63</td></tr>
</table><p />
Global Cache and Enqueue Services - Workload Characteristics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays workload characteristics for global
		    cache and enqueue services">
<tr><td scope="row" class='awrnc'>Avg global cache cr block receive time (us):</td><td align="right" class='awrnc'>	    1,285.2</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache current block receive time (us):</td><td align="right" class='awrc'>		 741.2</td></tr>
<tr><td scope="row" class='awrnc'>Avg LMS process busy %:</td><td align="right" class='awrnc'>		  13.5</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block build time (us):</td><td align="right" class='awrc'> 	  651.6</td></tr>
<tr><td scope="row" class='awrnc'>Global cache log flushes for cr blocks served %:</td><td align="right" class='awrnc'> 	    0.6</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block flush time (us):</td><td align="right" class='awrc'> 	4,722.2</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block pin time (us):</td><td align="right" class='awrnc'>		 0.0</td></tr>
<tr><td scope="row" class='awrc'>Global cache log flushes for current blocks served %:</td><td align="right" class='awrc'>	       0.3</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block flush time (us):</td><td align="right" class='awrnc'>	       8,775.5</td></tr>
<tr><td scope="row" class='awrc'>Avg global enqueue get time (us):</td><td align="right" class='awrc'>		  38.7</td></tr>
</table><p />
Global Cache and Enqueue Services - Messaging Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays messaging statistics for Global Cache
		    and Enqueue Services">
<tr><td scope="row" class='awrnc'>Avg message sent queue time (us):</td><td align="right" class='awrnc'>	   706.0</td></tr>
<tr><td scope="row" class='awrc'>Avg message sent queue time on ksxp (us):</td><td align="right" class='awrc'>		 882.0</td></tr>
<tr><td scope="row" class='awrnc'>Avg message received kernel queue time (us):</td><td align="right" class='awrnc'>	       40.6</td></tr>
<tr><td scope="row" class='awrc'>Avg message received queue time (us):</td><td align="right" class='awrc'>	      15.5</td></tr>
<tr><td scope="row" class='awrnc'>Avg GCS message process time (us):</td><td align="right" class='awrnc'>	     40.7</td></tr>
<tr><td scope="row" class='awrc'>Avg GES message process time (us):</td><td align="right" class='awrc'> 	   34.5</td></tr>
<tr><td scope="row" class='awrnc'>% of direct sent messages:</td><td align="right" class='awrnc'>   45.25</td></tr>
<tr><td scope="row" class='awrc'>% of indirect sent messages:</td><td align="right" class='awrc'>   54.71</td></tr>
<tr><td scope="row" class='awrnc'>% of flow controlled messages:</td><td align="right" class='awrnc'>	 0.05</td></tr>
</table><p />
<hr />
<p />Cluster Interconnect<p />
<ul>
<li class="awr"> if Public/Source at End snap is different a '*' is displayed</li>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect. . if Public/Source at End snap is different a '*' is displayed"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 2" id="End">End</th>
</tr><tr>
<th class="awrbg" scope="col">Interface</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Src">Src</th></tr>
<tr><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End Pub" class='awrclb'>&#160;</td><td headers="End Src" class='awrcrb'>&#160;</td></tr>
</table><p />
<a class="awr" name="top"></a>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5100"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global messaging statistics. Total, per second, per transaction values are displayed for each statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>Cluster reconfiguration count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Domain reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>19,516</td><td align="right" class='awrnc'>32.28</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA local message waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA local messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA messages received actual</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA messages received logical</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA requests failed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA requests succeeded</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Pseudo reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Pseudo rm reconfig count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>33,393</td><td align="right" class='awrnc'>55.23</td><td align="right" class='awrnc'>0.31</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>69,691</td><td align="right" class='awrc'>115.27</td><td align="right" class='awrc'>0.64</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>72,928</td><td align="right" class='awrnc'>120.63</td><td align="right" class='awrnc'>0.67</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>100,016</td><td align="right" class='awrc'>165.43</td><td align="right" class='awrc'>0.92</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>37,583</td><td align="right" class='awrnc'>62.16</td><td align="right" class='awrnc'>0.35</td></tr>
<tr><td scope="row" class='awrc'>dynamically allocated gcs resources</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>dynamically allocated gcs shadows</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs assume cvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs assume no cvt</td><td align="right" class='awrnc'>6,275</td><td align="right" class='awrnc'>10.38</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs ast to fg</td><td align="right" class='awrc'>846,526</td><td align="right" class='awrc'>1,400.18</td><td align="right" class='awrc'>7.79</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast xid</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>209</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>28,479</td><td align="right" class='awrnc'>47.11</td><td align="right" class='awrnc'>0.26</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>4,635</td><td align="right" class='awrc'>7.67</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>10,971</td><td align="right" class='awrnc'>18.15</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>gcs cr basts to PIs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs cr requests to slave</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs cr serve without current lock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>152,737</td><td align="right" class='awrnc'>252.63</td><td align="right" class='awrnc'>1.41</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs error msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs flash read serve requests to slave</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr no current</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs forward cr to pinged instance</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>846,735</td><td align="right" class='awrnc'>1,400.52</td><td align="right" class='awrnc'>7.79</td></tr>
<tr><td scope="row" class='awrc'>gcs grant request in partial open</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>5,845</td><td align="right" class='awrnc'>9.67</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>273,459</td><td align="right" class='awrc'>452.31</td><td align="right" class='awrc'>2.52</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>842</td><td align="right" class='awrnc'>1.39</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>1,545,022</td><td align="right" class='awrc'>2,555.51</td><td align="right" class='awrc'>14.22</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms flush pi msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>75</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>88,937</td><td align="right" class='awrnc'>147.10</td><td align="right" class='awrnc'>0.82</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>2,183,263</td><td align="right" class='awrc'>3,611.18</td><td align="right" class='awrc'>20.09</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>371</td><td align="right" class='awrnc'>0.61</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>1,472</td><td align="right" class='awrnc'>2.43</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs pkey conflicts retry</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly failure unmount db</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass N-&gt;Xw ping local</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass N-&gt;Xw ping remote</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant X on assume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant ast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant fg ast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs recovery claim msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to master</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs regular cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs resources for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs retry convert request</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs share recovery bast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>4,436</td><td align="right" class='awrnc'>7.34</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>960,801</td><td align="right" class='awrc'>1,589.19</td><td align="right" class='awrc'>8.84</td></tr>
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>122</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>3,538</td><td align="right" class='awrc'>5.85</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>-108</td><td align="right" class='awrnc'>-0.18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts dropped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts queue time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts queued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts sent</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>30,764</td><td align="right" class='awrnc'>50.88</td><td align="right" class='awrnc'>0.28</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>29,311</td><td align="right" class='awrc'>48.48</td><td align="right" class='awrc'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>lmd msg send time(ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lms(s) msg send time(ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>1,190</td><td align="right" class='awrnc'>1.97</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>237,687</td><td align="right" class='awrc'>393.14</td><td align="right" class='awrc'>2.19</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>206,820</td><td align="right" class='awrnc'>342.09</td><td align="right" class='awrnc'>1.90</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>1,222,707</td><td align="right" class='awrc'>2,022.39</td><td align="right" class='awrc'>11.25</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>2,186,801</td><td align="right" class='awrnc'>3,617.03</td><td align="right" class='awrnc'>20.12</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>1,090,312</td><td align="right" class='awrc'>1,803.41</td><td align="right" class='awrc'>10.03</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>1,318,283</td><td align="right" class='awrnc'>2,180.48</td><td align="right" class='awrnc'>12.13</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>12,041</td><td align="right" class='awrc'>19.92</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>1,125,527</td><td align="right" class='awrnc'>1,861.66</td><td align="right" class='awrnc'>10.36</td></tr>
<tr><td scope="row" class='awrc'>msgs causing lmd to send msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>msgs causing lms(s) to send msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>88,874,406,709</td><td align="right" class='awrc'>147,000,924.12</td><td align="right" class='awrc'>817,807.45</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>33,790</td><td align="right" class='awrnc'>55.89</td><td align="right" class='awrnc'>0.31</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>2,186,801</td><td align="right" class='awrc'>3,617.03</td><td align="right" class='awrc'>20.12</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>256,625</td><td align="right" class='awrnc'>424.47</td><td align="right" class='awrnc'>2.36</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>1,172,535</td><td align="right" class='awrc'>1,939.41</td><td align="right" class='awrc'>10.79</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>363,467</td><td align="right" class='awrnc'>601.19</td><td align="right" class='awrnc'>3.34</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>1,329,398</td><td align="right" class='awrc'>2,198.86</td><td align="right" class='awrc'>12.23</td></tr>
<tr><td scope="row" class='awrnc'>number of broadcasted resources</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of directly freed master res</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of ges deadlock detected</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of lock borrowed by LMD</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of received ODPS messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of received RBA messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of resource borrowed by LMD</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of sent ODPS messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of sent RBA messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>172,685</td><td align="right" class='awrc'>285.63</td><td align="right" class='awrc'>1.59</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>118,982</td><td align="right" class='awrnc'>196.80</td><td align="right" class='awrnc'>1.09</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>320,673</td><td align="right" class='awrc'>530.40</td><td align="right" class='awrc'>2.95</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>1,335,553</td><td align="right" class='awrnc'>2,209.04</td><td align="right" class='awrnc'>12.29</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5200"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global CR served statistics. For each statistics, total value is shown"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th></tr>
<tr><td scope="row" class='awrc'>CR Block Requests</td><td align="right" class='awrc'>4,109</td></tr>
<tr><td scope="row" class='awrnc'>CURRENT Block Requests</td><td align="right" class='awrnc'>1,492</td></tr>
<tr><td scope="row" class='awrc'>Data Block Requests</td><td align="right" class='awrc'>4,109</td></tr>
<tr><td scope="row" class='awrnc'>Undo Block Requests</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>TX Block Requests</td><td align="right" class='awrc'>1,477</td></tr>
<tr><td scope="row" class='awrnc'>Current Results</td><td align="right" class='awrnc'>5,599</td></tr>
<tr><td scope="row" class='awrc'>Private results</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>Zero Results</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>Disk Read Results</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>Fail Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Fairness Down Converts</td><td align="right" class='awrc'>4,038</td></tr>
<tr><td scope="row" class='awrnc'>Light Works</td><td align="right" class='awrnc'>1,682</td></tr>
<tr><td scope="row" class='awrc'>Flushes</td><td align="right" class='awrc'>36</td></tr>
<tr><td scope="row" class='awrnc'>Builds</td><td align="right" class='awrnc'>4,109</td></tr>
<tr><td scope="row" class='awrc'>Errors</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5300"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
<li class="awr"> Pins	 = CURRENT Block Pin Operations </li>
<li class="awr"> Flushes = Redo Flush before CURRENT Block Served Operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global current served statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td scope="row" class='awrc'>Pins</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Flushes</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>6.12</td><td align="right" class='awrnc'>75.51</td><td align="right" class='awrnc'>18.37</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="7"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#5400">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#5450">Global Cache Transfer Times (us)</a></li>
<li class="awr"><a class="awr" href="#5460">Global Cache Transfer (Immediate)</a></li>
<li class="awr"><a class="awr" href="#5470">Global Cache Times (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5400"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested (Congst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer stats. CR, blocks received, % immediate, % busy, % congestion are displayed for each instance and block class"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CR">CR</th>
<th class="awrbg" colspan=" 4" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CR Blocks|Received" class='awrclb'>2,325</td><td align="right" headers="CR %|Immed" class='awrc'>99.35</td><td align="right" headers="CR %|Busy" class='awrc'>0.60</td><td align="right" headers="CR %|Congst" class='awrc'>0.04</td><td align="right" headers="Current Blocks|Received" class='awrclb'>12,500</td><td align="right" headers="Current %|Immed" class='awrc'>84.19</td><td align="right" headers="Current %|Busy" class='awrc'>15.77</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.04</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>Others</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>34</td><td align="right" headers="CR %|Immed" class='awrnc'>97.06</td><td align="right" headers="CR %|Busy" class='awrnc'>2.94</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>52</td><td align="right" headers="Current %|Immed" class='awrnc'>57.69</td><td align="right" headers="Current %|Busy" class='awrnc'>42.31</td><td align="right" headers="Current %|Congst" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" headers="CR Blocks|Received" class='awrclb'>54</td><td align="right" headers="CR %|Immed" class='awrc'>70.37</td><td align="right" headers="CR %|Busy" class='awrc'>29.63</td><td align="right" headers="CR %|Congst" class='awrc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrclb'>6</td><td align="right" headers="Current %|Immed" class='awrc'>33.33</td><td align="right" headers="Current %|Busy" class='awrc'>66.67</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>3</td><td align="right" headers="CR %|Immed" class='awrnc'>33.33</td><td align="right" headers="CR %|Busy" class='awrnc'>66.67</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|Immed" class='awrnc'>&#160;</td><td align="right" headers="Current %|Busy" class='awrnc'>&#160;</td><td align="right" headers="Current %|Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5450"></a>
<h3 class="awr">Global Cache Transfer Times (us)</h3>
<ul>
<li class="awr"> Avg Time - average time of all blocks (Immed,Busy,Congst) in us </li>
<li class="awr"> Immed, Busy, Congst -	Average times in us </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer time statistics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1263</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1234</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>5687</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>6676</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>743</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>707</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>929</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>3878</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>1158</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>491</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>23166</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>533</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>589</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>457</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2160</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>482</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6147</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>2425</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>614</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>3330</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>2632</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>1265</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>3316</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5460"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> % of Blocks Received requiring 2 or 3 hops </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CR">CR</th>
<th class="awrbg" colspan=" 3" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Blocks Lost</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>2,310</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>10,524</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>33</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>30</td><td align="right" headers="Current %|2hop" class='awrnc'>100.00</td><td align="right" headers="Current %|3hop" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>38</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>2</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>1</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrnc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5470"></a>
<h3 class="awr">Global Cache Times (Immediate)</h3>
<ul>
<li class="awr"> Blocks Lost, 2-hop and 3-hop Average times in (us) </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache times (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Lost Time</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>1234</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>1234</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>707</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>707</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>491</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>491</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>589</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>589</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>482</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>482</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>614</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>614</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>1265</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>1265</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#7800">Interconnect Latency Stats</a></li>
<li class="awr"><a class="awr" href="#7900">Interconnect Throughput by Client</a></li>
<li class="awr"><a class="awr" href="#8000">Interconnect Device Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7800"></a>
<h3 class="awr">Interconnect Ping Latency Statistics</h3>
<ul>
<li class="awr"> Ping latency of the roundtrip of a message from this instance to </li>
<li class="awr"> target instances.  </li>
<li class="awr"> The target instance is identified by an instance number. </li>
<li class="awr"> Average and standard deviation of ping latency is given in microseconds </li>
<li class="awr"> for message sizes of 500 bytes and 8K. </li>
<li class="awr"> Note that latency of a message from the instance to itself is used as </li>
<li class="awr"> control, since message latency can include wait for CPU</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IC ping latency statistics"><tr><th class="awrbg" scope="col">Target Instance</th><th class="awrbg" scope="col">500B Ping Count</th><th class="awrbg" scope="col">Avg Latency 500B msg</th><th class="awrbg" scope="col">Stddev 500B msg</th><th class="awrbg" scope="col">8K Ping Count</th><th class="awrbg" scope="col">Avg Latency 8K msg</th><th class="awrbg" scope="col">Stddev 8K msg</th></tr>
<tr><td align="right" class='awrc'>1</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>771</td><td align="right" class='awrc'>0.41</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>742</td><td align="right" class='awrc'>0.39</td></tr>
<tr><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>895</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>939</td><td align="right" class='awrnc'>0.35</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7900"></a>
<h3 class="awr">Interconnect Throughput by Client</h3>
<ul>
<li class="awr"> Throughput of interconnect usage by major consumers </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect throughput by client statistics"><tr><th class="awrbg" scope="col">Used By</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Receive Mbytes/sec</th></tr>
<tr><td scope="row" class='awrc'>Global Cache</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>0.30</td></tr>
<tr><td scope="row" class='awrnc'>Parallel Query</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>DB Locks</td><td align="right" class='awrc'>1.23</td><td align="right" class='awrc'>1.09</td></tr>
<tr><td scope="row" class='awrnc'>DB Streams</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8000"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Throughput and errors of interconnect devices (at OS level) </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect device statistics. IP address, public, source, etc. are displayed for each device"><tr><th class="awrbg" scope="col">Device Name</th><th class="awrbg" scope="col">IP Address</th><th class="awrbg" scope="col">Public</th><th class="awrbg" scope="col">Source</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Send Errors</th><th class="awrbg" scope="col">Send Dropped</th><th class="awrbg" scope="col">Send Buffer Overrun</th><th class="awrbg" scope="col">Send Carrier Lost</th><th class="awrbg" scope="col">Receive Mbytes/sec</th><th class="awrbg" scope="col">Receive Errors</th><th class="awrbg" scope="col">Receive Dropped</th><th class="awrbg" scope="col">Receive Buffer Overrun</th><th class="awrbg" scope="col">Receive Frame Errors</th></tr>
<tr><td scope="row" class='awrc'>fg-priv:1</td><td class='awrc'>169.254.22.248</td><td class='awrc'>NO</td><td class='awrc'>&#160;</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8790"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Times are in seconds </li>
<li class="awr"> Affinity objects - Affinity objects mastered at the begin/end snapshot </li>
<li class="awr"> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Times are in seconds. Affinity objects - Affinity objects mastered at the begin/end snapshot. Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Remaster Op</th><th class="awrbg" scope="col">Begin Snap</th><th class="awrbg" scope="col">End Snap</th></tr>
<tr><td scope="row" class='awrc'>affinity objects</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>read-mostly objects</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td></tr>
<tr><td scope="row" class='awrc'>affinity objects (other inst)</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td scope="row" class='awrnc'>read-mostly objects (persistent)</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

WORKLOAD REPOSITORY REPORT (RAC)

Database Summary
~~~~~~~~~~~~~~~~
				   Database					   Snapshot Ids     Number of Instances     Number of Hosts	Report Total (minutes)
-----------------------------------------------------------------------------	-----------------   ------------------	 ------------------   ------------------------
	 Id Name      Unique Name Role		   Edition RAC CDB Block Size	   Begin      End   In Report	 Total	 In Report    Total	  DB time Elapsed time
----------- --------- ----------- ---------------- ------- --- --- ----------	-------- --------   --------- --------	 --------- --------   ----------- ------------
 3393773525 P30DB     p30db	  PRIMARY	   EE	   YES NO	 8192	     156      157	    2	     2		 2	  2	   380.11	 10.08
Database Instances Included In Report
-> Listed in order of instance number, I#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
																      Avg Active
  I# Instance  Host	  Startup	  Begin Snap Time End Snap Time   Release	  Elapsed Time(min) DB time(min) Up Time(hrs)	Sessions Platform
---- --------- ---------- --------------- --------------- --------------- --------------- ----------------- ------------ ------------ ---------- ---------------
   1 p30db1    mcracpoc1. 10-Feb-20 14:15 10-Feb-20 15:44 10-Feb-20 15:54 19.0.0.0.0		      10.07	  199.49	 1.65	   19.82 Linux x86 64-bi
   2 p30db2    mcracpoc2. 10-Feb-20 14:15 10-Feb-20 15:44 10-Feb-20 15:54 19.0.0.0.0		      10.07	  180.62	 1.66	   17.94 Linux x86 64-bi

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name		       Begin Snap Time End Snap Time
---------------------------------------- ------- ------ ------------------------------ --------------- ---------------
Top SQL Statements			   37.76  99.40 ADDM:3393773525_157	       10-Feb-20 15:44 10-Feb-20 15:54
"User I/O" wait Class			   37.76  90.24 ADDM:3393773525_157	       10-Feb-20 15:44 10-Feb-20 15:54
Top Segments by "User I/O" and "Cluster"   37.76  12.38 ADDM:3393773525_157	       10-Feb-20 15:44 10-Feb-20 15:54
Global Cache Messaging			   37.76   4.87 ADDM:3393773525_157	       10-Feb-20 15:44 10-Feb-20 15:54
Cache Sizes
-> All values are in Megabytes
-> Listed in order of instance number, I#
-> End values displayed only if different from Begin values
~~~~~~~~~~~
	 Memory Target	       Sga Target	    DB Cache	      Shared Pool	   Large Pool	       Java Pool	  Streams Pool	       PGA Target
       -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------
  I#	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End   Log Buffer
----   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   ----------
   1			      9,664		  8,000 	      1,440		     64 						      3,232		     19.4
   2			      9,664		  7,840 	      1,600		     64 						      3,232		     19.4
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~
 Avg			      9,664		  7,920 	      1,520		     64 						      3,232		     19.4
 Min			      9,664		  7,840 	      1,440		     64 						      3,232		     19.4
 Max			      9,664		  8,000 	      1,600		     64 						      3,232		     19.4

OS Statistics By Instance		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Listed in order of instance number, I#
-> End values are diplayed only if different from begin values

	      CPU		Load			  % CPU 				  Time (s)			 Memory 	    End Values
       -----------------   -------------   ----------------------------------	--------------------------------------------   ----------   -------------------------
  I#   #CPUs #Core #Sckt    Begin    End   % Busy  % Usr  % Sys  % WIO	% Idl		  Busy		 Idle	       Total	       MB   #CPU #Cor #Sck Memory (M)
----   ----- ----- -----   ------ ------   ------ ------ ------ ------ ------	-------------- -------------- --------------   ----------   ---- ---- ---- ----------
   1	   8	 4     1      9.6   13.2     45.4   15.6   20.5   46.0	 54.6	       2,024.3	      2,437.0	     4,461.4	 32,156.0
   2	   8	 4     1     10.1   13.0     41.4   14.1   19.2   48.7	 58.6	       1,841.4	      2,602.0	     4,443.4	 32,156.0
 ~~~										~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum										       3,865.7	      5,039.1	     8,904.8
			  --------------------------------------------------------------------------------------------------------------------


Time Model				 DB/Inst: P30DB/p30db1	Snaps: 156-157

					 SQL Exec		     Hard Parse
  I#	DB time (s)	DB CPU (s)	  Ela (s)  Parse Ela (s)	Ela (s) PL/SQL Ela (s)	 Java Ela (s)	 bg time (s)	 bg CPU (s)
---- -------------- -------------- -------------- -------------- -------------- -------------- -------------- -------------- --------------
   1	   11,969.4	     824.7	 11,968.8	     0.2	    0.1 	  33.7		  0.0	       913.2	      457.1
   2	   10,837.4	     741.4	 10,836.7	     0.3	    0.2 	  30.2		  0.0	       976.2	      451.7
 ~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	   22,806.8	   1,566.0	 22,805.5	     0.5	    0.3 	  63.9		  0.0	     1,889.4	      908.7
 Avg	   11,403.4	     783.0	 11,402.7	     0.2	    0.2 	  32.0		  0.0	       944.7	      454.4
 Std	      800.4	      58.9	    800.6	     0.1	    0.0 	   2.5		  0.0		44.6		3.8
			  --------------------------------------------------------------------------------------------------------------------

Time Model - % of DB time		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]

							      % DB time 							      % bg time
		      ----------------------------------------------------------------------------------------- 		   --------------
	    % Total													 % Total
  I#	    DB time	      DB CPU   SQL Exec Ela	 Parse Ela     Hard Parse     PL/SQL Ela       Java Ela 	 bg time	   bg CPU
---- --------------   -------------- -------------- -------------- -------------- -------------- --------------   --------------   --------------
   1	       52.5		 6.9	      100.0	       0.0	      0.0	     0.0	    0.0 	    48.3	     50.1
   2	       47.5		 6.8	      100.0	       0.0	      0.0	     0.0	    0.0 	    51.7	     46.3
 ~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
 Avg	       50.0		 6.9	      100.0	       0.0	      0.0	     0.0	    0.0 	    50.0	     48.2
			  --------------------------------------------------------------------------------------------------------------------


Foreground Wait Classes -  % of Total DB timeDB/Inst: P30DB/p30db1  Snaps: 156
-> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time

	  User I/O	 Sys I/O	 Other	      Applic	    Commit	 Network      Concurcy	      Config	   Cluster	   Admin     Scheduler	      DB CPU
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------
	      90.2	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 0.0	       5.1	     N/A	   N/A		 6.9
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes 		 DB/Inst: P30DB/p30db1	Snaps: 156-157

  I#   User I/O(s)    Sys I/O(s)      Other(s)	  Applic (s)	Commit (s)   Network (s)  Concurcy (s)	  Config (s)   Cluster (s)     Admin (s) Scheduler (s)	  DB CPU (s)	    DB time
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- --------------
   1	  10,775.1	     0.1	   1.2		 0.0	       0.0	     0.0	   0.0		 0.0	     633.0	     N/A	   N/A	       824.7	   11,969.4
   2	   9,804.8	     0.3	   1.4		 0.0	       0.0	     0.0	   0.0		 0.0	     540.2	     N/A	   N/A	       741.4	   10,837.4
 ~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	  20,579.8	     0.4	   2.7		 0.0	       0.0	     0.0	   0.0		 0.0	   1,173.2	     0.0	   0.0	     1,566.0	   22,806.8
 Avg	  10,289.9	     0.2	   1.3		 0.0	       0.0	     0.0	   0.0		 0.0	     586.6	     N/A	   N/A	       783.0	   11,403.4
 Std	     686.1	     0.1	   0.1		 0.0	       0.0	     0.0	   0.0		 0.0	      65.6	     N/A	   N/A		58.9	      800.4
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes -  % of DB time  DB/Inst: P30DB/p30db1	Snaps: 156-157
-> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time

										      % DB time
       -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
																						       % Total
  I#	    User I/O	   Sys I/O	   Other	Applic	      Commit	   Network	Concurcy	Config	     Cluster	     Admin     Scheduler	DB CPU	       DB time
----   ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------	 -------------
   1		90.0	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 5.3	       N/A	     N/A	   6.9		  52.5
   2		90.5	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 5.0	       N/A	     N/A	   6.8		  47.5
 ~~~   ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~
 Avg		90.2	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 5.1	       N/A	     N/A	   6.9
			  --------------------------------------------------------------------------------------------------------------------


Top Timed Events			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time '	       : Per-instance 'Wait Time Avg ' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			4,228,767	0.0	  20,581.26   4.87ms	90.24	    4.87ms     4.61ms	  5.12ms   362.89us    2
		  DB CPU					      N/A	N/A	   1,566.03		 6.87						       2
       System I/O log file parallel write			  200,600	0.0	     990.50   4.94ms	 4.34	    4.94ms     4.68ms	  5.19ms   360.83us    2
       Cluster	  gc cr grant 2-way				1,497,519	0.0	     821.26 548.42us	 3.60	  548.66us   544.66us	552.66us     5.66us    2
       Other	  LGWR any worker group 			   66,616	0.0	     153.40   2.30ms	 0.67	    2.30ms     2.22ms	  2.37ms   100.34us    2
       Cluster	  gc current grant 2-way			  270,805	0.0	     151.70 560.17us	 0.67	  560.61us   553.68us	567.54us     9.80us    2
       System I/O db file parallel write			   44,718	0.0	     121.00   2.71ms	 0.53	    2.70ms     2.56ms	  2.83ms   190.82us    2
       Cluster	  gc cr grant busy				   90,430	0.0	      91.12   1.01ms	 0.40	     .99ms	.95ms	  1.02ms    44.75us    2
       Cluster	  gc current grant read-mostly invalidatio	   50,509	0.0	      61.59   1.22ms	 0.27	    1.22ms     1.22ms	  1.23ms     7.89us    2
       System I/O control file sequential read			    6,173	0.0	      19.75   3.20ms	 0.09	    3.20ms     3.16ms	  3.23ms    49.86us    2

   1   User I/O   db file sequential read			2,102,685	0.0	  10,776.23   5.12ms	90.03
		  DB CPU					      N/A	N/A	     824.68		 6.89
       System I/O log file parallel write			  100,213	0.0	     469.23   4.68ms	 3.92
       Cluster	  gc cr grant 2-way				  794,717	0.0	     432.85 544.66us	 3.62
       Cluster	  gc current grant 2-way			  143,901	0.0	      79.67 553.68us	 0.67
       Cluster	  gc cr grant busy				   75,563	0.0	      76.93   1.02ms	 0.64
       System I/O db file parallel write			   23,508	0.0	      66.62   2.83ms	 0.56
       Other	  LGWR any worker group 			   29,804	0.0	      66.29   2.22ms	 0.55
       Cluster	  gc current grant read-mostly invalidatio	   15,300	0.0	      18.78   1.23ms	 0.16
       Cluster	  gc current grant busy 			   13,686	0.0	      12.20 891.24us	 0.10

   2   User I/O   db file sequential read			2,126,082	0.0	   9,805.02   4.61ms	90.47
		  DB CPU					      N/A	N/A	     741.35		 6.84
       System I/O log file parallel write			  100,387	0.0	     521.27   5.19ms	 4.81
       Cluster	  gc cr grant 2-way				  702,802	0.0	     388.41 552.66us	 3.58
       Other	  LGWR any worker group 			   36,812	0.0	      87.11   2.37ms	 0.80
       Cluster	  gc current grant 2-way			  126,904	0.0	      72.02 567.54us	 0.66
       System I/O db file parallel write			   21,210	0.0	      54.38   2.56ms	 0.50
       Cluster	  gc current grant read-mostly invalidatio	   35,209	0.0	      42.82   1.22ms	 0.40
       Cluster	  gc cr grant busy				   14,867	0.0	      14.19    .95ms	 0.13
       System I/O control file sequential read			    3,168	0.0	      10.24   3.23ms	 0.09
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Foreground Events		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Foreground Activity is captured in release 11g and above
-> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			4,228,404	0.0	  20,579.63   4.87ms	90.23	    4.87ms     4.61ms	  5.13ms   362.99us    2
		  DB CPU					      N/A	N/A	   1,566.03		 6.87						       2
       Cluster	  gc cr grant 2-way				1,497,472	0.0	     821.23 548.41us	 3.60	  548.65us   544.66us	552.65us     5.65us    2
       Cluster	  gc current grant 2-way			  270,744	0.0	     151.66 560.16us	 0.66	  560.60us   553.67us	567.53us     9.81us    2
       Cluster	  gc cr grant busy				   90,426	0.0	      91.11   1.01ms	 0.40	     .99ms	.95ms	  1.02ms    44.72us    2
       Cluster	  gc current grant read-mostly invalidatio	   50,509	0.0	      61.59   1.22ms	 0.27	    1.22ms     1.22ms	  1.23ms     7.89us    2
       Cluster	  gc current grant busy 			   16,496	0.0	      15.12 916.84us	 0.07	     .96ms   891.60us	  1.03ms   100.57us    2
       Cluster	  gc current block 2-way			   21,634	0.0	      14.87 687.30us	 0.07	  687.61us   668.16us	707.07us    27.51us    2
       Cluster	  gc cr block 2-way				    6,296	0.0	       8.35   1.33ms	 0.04	    1.31ms     1.25ms	  1.37ms    81.05us    2
       Cluster	  gc current block busy 			    4,807	0.0	       4.00 831.75us	 0.02	  821.45us   784.91us	857.99us    51.67us    2

   1   User I/O   db file sequential read			2,102,388	0.0	  10,774.96   5.13ms	90.02
		  DB CPU					      N/A	N/A	     824.68		 6.89
       Cluster	  gc cr grant 2-way				  794,691	0.0	     432.84 544.66us	 3.62
       Cluster	  gc current grant 2-way			  143,876	0.0	      79.66 553.67us	 0.67
       Cluster	  gc cr grant busy				   75,559	0.0	      76.92   1.02ms	 0.64
       Cluster	  gc current grant read-mostly invalidatio	   15,300	0.0	      18.78   1.23ms	 0.16
       Cluster	  gc current grant busy 			   13,569	0.0	      12.10 891.60us	 0.10
       Cluster	  gc current block 2-way			   10,641	0.0	       7.52 707.07us	 0.06
       Cluster	  gc cr block 2-way				    2,204	0.0	       2.76   1.25ms	 0.02
       Cluster	  gc current block busy 			    1,726	0.0	       1.35 784.91us	 0.01

   2   User I/O   db file sequential read			2,126,016	0.0	   9,804.67   4.61ms	90.47
		  DB CPU					      N/A	N/A	     741.35		 6.84
       Cluster	  gc cr grant 2-way				  702,781	0.0	     388.39 552.65us	 3.58
       Cluster	  gc current grant 2-way			  126,868	0.0	      72.00 567.53us	 0.66
       Cluster	  gc current grant read-mostly invalidatio	   35,209	0.0	      42.82   1.22ms	 0.40
       Cluster	  gc cr grant busy				   14,867	0.0	      14.19    .95ms	 0.13
       Cluster	  gc current block 2-way			   10,993	0.0	       7.35 668.16us	 0.07
       Cluster	  gc cr block 2-way				    4,092	0.0	       5.59   1.37ms	 0.05
       Cluster	  gc current grant busy 			    2,927	0.0	       3.03   1.03ms	 0.03
       Cluster	  gc current block busy 			    3,081	0.0	       2.64 857.99us	 0.02
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Background Events		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> % of bg time: % of background elapsed time
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   System I/O log file parallel write			  200,594	0.0	     990.47   4.94ms	52.42	    4.94ms     4.68ms	  5.19ms   360.95us    2
		  background cpu time				      N/A	N/A	     908.72		48.10						       2
       Other	  LGWR any worker group 			   66,615	0.0	     153.40   2.30ms	 8.12	    2.30ms     2.22ms	  2.37ms   100.43us    2
       System I/O db file parallel write			   44,718	0.0	     121.00   2.71ms	 6.40	    2.70ms     2.56ms	  2.83ms   190.82us    2
       System I/O control file sequential read			    6,015	0.0	      19.34   3.22ms	 1.02	    3.22ms     3.18ms	  3.25ms    49.95us    2
       User I/O   Disk file Mirror Read 			    1,653	0.0	      12.61   7.63ms	 0.67	    7.62ms     6.11ms	  9.13ms     2.13ms    2
       Other	  LGWR all worker groups			    3,159	0.0	      11.89   3.76ms	 0.63	    3.76ms     3.70ms	  3.82ms    87.34us    2
       Other	  IMR slave acknowledgement msg 		    3,627	0.0	      10.11   2.79ms	 0.53	    2.79ms     2.27ms	  3.30ms   728.49us    2
       Other	  LGWR worker group ordering			    2,753	0.0	       6.57   2.39ms	 0.35	    2.41ms     2.23ms	  2.59ms   252.60us    2
       System I/O control file parallel write			      598	0.0	       5.58   9.34ms	 0.30	    9.30ms     8.68ms	  9.92ms   874.66us    2

   1   System I/O log file parallel write			  100,209	0.0	     469.20   4.68ms	51.38
		  background cpu time				      N/A	N/A	     457.06		50.05
       System I/O db file parallel write			   23,508	0.0	      66.62   2.83ms	 7.30
       Other	  LGWR any worker group 			   29,803	0.0	      66.29   2.22ms	 7.26
       System I/O control file sequential read			    2,946	0.0	       9.37   3.18ms	 1.03
       Other	  LGWR all worker groups			    1,538	0.0	       5.69   3.70ms	 0.62
       User I/O   Disk file Mirror Read 			      823	0.0	       5.03   6.11ms	 0.55
       Other	  IMR slave acknowledgement msg 		    1,815	0.0	       4.12   2.27ms	 0.45
       Other	  LGWR worker group ordering			    1,589	0.0	       3.55   2.23ms	 0.39
       System I/O control file parallel write			      279	0.0	       2.42   8.68ms	 0.27

   2   System I/O log file parallel write			  100,385	0.0	     521.27   5.19ms	53.40
		  background cpu time				      N/A	N/A	     451.66		46.27
       Other	  LGWR any worker group 			   36,812	0.0	      87.11   2.37ms	 8.92
       System I/O db file parallel write			   21,210	0.0	      54.38   2.56ms	 5.57
       System I/O control file sequential read			    3,069	0.0	       9.98   3.25ms	 1.02
       User I/O   Disk file Mirror Read 			      830	0.0	       7.58   9.13ms	 0.78
       Other	  LGWR all worker groups			    1,621	0.0	       6.20   3.82ms	 0.64
       Other	  IMR slave acknowledgement msg 		    1,812	0.0	       5.98   3.30ms	 0.61
       System I/O control file parallel write			      319	0.0	       3.16   9.92ms	 0.32
       Other	  LGWR worker group ordering			    1,164	0.0	       3.02   2.59ms	 0.31
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
User I/O   db file sequential read			 4,228,404	 0.0	   20,579.63   4.87ms	 90.23	     4.87ms	4.61ms	   5.13ms   362.99us
Cluster    gc cr grant 2-way				 1,497,472	 0.0	      821.23 548.41us	  3.60	   548.65us   544.66us	 552.65us     5.65us
Cluster    gc current grant 2-way			   270,744	 0.0	      151.66 560.16us	  0.66	   560.60us   553.67us	 567.53us     9.81us
Cluster    gc cr grant busy				    90,426	 0.0	       91.11   1.01ms	  0.40	      .99ms	 .95ms	   1.02ms    44.72us
Cluster    gc current grant read-mostly invalidatio	    50,509	 0.0	       61.59   1.22ms	  0.27	     1.22ms	1.22ms	   1.23ms     7.89us
Cluster    gc current grant busy			    16,496	 0.0	       15.12 916.84us	  0.07	      .96ms   891.60us	   1.03ms   100.57us
Cluster    gc current block 2-way			    21,634	 0.0	       14.87 687.30us	  0.07	   687.61us   668.16us	 707.07us    27.51us
Cluster    gc cr block 2-way				     6,296	 0.0		8.35   1.33ms	  0.04	     1.31ms	1.25ms	   1.37ms    81.05us
Cluster    gc current block busy			     4,807	 0.0		4.00 831.75us	  0.02	   821.45us   784.91us	 857.99us    51.67us
Cluster    gc cr grant congested			       612	 0.0		2.14   3.50ms	  0.01	     3.53ms	3.39ms	   3.66ms   192.63us
Cluster    gc cr block lost					 4	 0.0		2.03 507.29ms	  0.01	   507.29ms   507.29ms	 507.29ms
Other	   KJC: Wait for msg sends to complete		     4,107	 0.0		1.67 407.52us	  0.01	   424.86us   348.68us	 501.04us   107.73us
Cluster    gc current block lost				 1	 0.0		0.45 445.50ms	  0.00	   445.50ms   445.50ms	 445.50ms
System I/O control file sequential read 		       158	 0.0		0.41   2.57ms	  0.00	     2.52ms	2.33ms	   2.72ms   269.26us
Cluster    gc current grant congested			       110	 0.0		0.39   3.57ms	  0.00	     3.55ms	3.48ms	   3.62ms    97.99us
Other	   reliable message					 2	 0.0		0.21 106.14ms	  0.00	   106.14ms   106.14ms	 106.14ms
User I/O   Disk file Mirror Read				40	 0.0		0.19   4.67ms	  0.00	     4.88ms	4.07ms	   5.69ms     1.15ms
Other	   IPC send completion sync			       272	 0.0		0.16 579.19us	  0.00	   646.59us   568.91us	 724.28us   109.86us
Other	   latch: gc element				       166	 0.0		0.12 731.14us	  0.00	   717.43us   660.54us	 774.32us    80.46us
Other	   latch: enqueue hash chains			       251	 0.0		0.09 361.68us	  0.00	   369.33us   335.63us	 403.03us    47.66us
Cluster    gc buffer busy release				21	 0.0		0.08   4.00ms	  0.00	     4.00ms	4.00ms	   4.00ms
Other	   latch free					       270	 0.0		0.08 292.06us	  0.00	   288.33us   267.31us	 309.35us    29.73us
Other	   enq: PS - contention 				92	 1.1		0.06 700.10us	  0.00	     1.09ms   630.41us	   1.55ms   647.62us
Cluster    gc cr block busy					11	 0.0		0.06   5.85ms	  0.00	     5.85ms	5.85ms	   5.85ms
Other	   PX Deq: Slave Session Stats			       180	 0.0		0.06 350.02us	  0.00	   351.21us   243.79us	 458.63us   151.91us
Other	   latch: gcs resource hash			       122	 0.0		0.05 440.68us	  0.00	   423.37us   352.96us	 493.78us    99.57us
Other	   PX Deq: reap credit				     1,678     100.0		0.04  25.34us	  0.00	    34.98us    23.34us	  46.63us    16.47us
Cluster    gc current block congested				10	 0.0		0.04   3.86ms	  0.00	     3.86ms	3.85ms	   3.88ms    20.79us
Commit	   log file sync					 9	 0.0		0.03   3.83ms	  0.00	     3.75ms	3.50ms	   4.00ms   357.09us
Cluster    gc cr multi block mixed				12	 0.0		0.03   2.66ms	  0.00	     1.89ms   745.00us	   3.04ms     1.62ms
Cluster    gc index operation					 5	 0.0		0.02   4.49ms	  0.00	     4.49ms	4.49ms	   4.49ms
Other	   latch: object queue header operation 		21	 0.0		0.02   1.02ms	  0.00	     1.12ms   689.69us	   1.55ms   605.85us
Concurrenc row cache lock					10     100.0		0.02   1.99ms	  0.00	     1.37ms   600.00us	   2.14ms     1.09ms
Other	   latch: redo allocation				68	 0.0		0.01 204.34us	  0.00	   197.65us   152.17us	 243.13us    64.32us
Other	   latch: cache buffers lru chain			65	 0.0		0.01 186.51us	  0.00	   189.06us   178.00us	 200.12us    15.64us
Other	   enq: WF - contention 				 8	 0.0		0.01   1.51ms	  0.00	     1.20ms   792.00us	   1.62ms   582.66us
User I/O   Disk file operations I/O				26	 0.0		0.01 463.12us	  0.00	   456.01us   409.82us	 502.20us    65.32us
Concurrenc library cache lock					17	 0.0		0.01 637.65us	  0.00	   677.58us   541.82us	 813.33us   191.99us
Cluster    gc cr block congested				 2	 0.0		0.01   4.66ms	  0.00	     4.66ms	2.65ms	   6.68ms     2.85ms
Cluster    gc current split					 6	 0.0		0.01   1.43ms	  0.00	     1.43ms	1.43ms	   1.43ms
Other	   DLM cross inst call completion			19	 0.0		0.01 448.37us	  0.00	   466.51us   443.53us	 489.50us    32.51us
User I/O   direct path write					 1	 0.0		0.01   7.97ms	  0.00	     7.97ms	7.97ms	   7.97ms
Applicatio SQL*Net break/reset to client		       120	 0.0		0.01  62.64us	  0.00	    62.64us    62.64us	  62.64us
Concurrenc library cache pin					16	 0.0		0.01 468.00us	  0.00	   489.33us   432.45us	 546.20us    80.43us
Other	   CSS initialization					 2	 0.0		0.01   3.21ms	  0.00	     3.21ms	3.21ms	   3.21ms
Other	   enq: TO - contention 				 9	 0.0		0.01 705.44us	  0.00	   705.44us   705.44us	 705.44us
Other	   PGA memory operation 			       459	 0.0		0.01  12.82us	  0.00	    12.42us	9.99us	  14.85us     3.43us
Cluster    gc current multi block request			 6	 0.0		0.01 907.83us	  0.00	   907.83us   907.83us	 907.83us
Concurrenc latch: cache buffers chains				18	 0.0		0.00 259.67us	  0.00	   270.14us   223.00us	 317.29us    66.67us
Concurrenc enq: TX - index contention				 4	 0.0		0.00 834.25us	  0.00	   834.25us   834.25us	 834.25us
Other	   PX Deq: Join ACK					 2	 0.0		0.00   1.66ms	  0.00	     1.66ms	1.66ms	   1.66ms
Other	   name-service call wait				 4	 0.0		0.00 781.50us	  0.00	   781.50us   538.50us	   1.02ms   343.65us
Other	   latch: undo global data				 6	 0.0		0.00 347.83us	  0.00	   387.63us   268.25us	 507.00us   168.82us
Other	   CSS operation: action				 2	 0.0		0.00 867.50us	  0.00	   867.50us   867.50us	 867.50us
Network    SQL*Net message to client			       221	 0.0		0.00   7.48us	  0.00	     8.34us	6.78us	   9.90us     2.21us
Other	   CSS operation: query 				 6	 0.0		0.00 165.83us	  0.00	   165.83us   165.83us	 165.83us
Other	   PX qref latch					52     100.0		0.00  14.23us	  0.00	    14.23us    14.23us	  14.23us
Cluster    gc current retry					 1	 0.0		0.00 647.00us	  0.00	   647.00us   647.00us	 647.00us
Other	   enq: FB - contention 				 1	 0.0		0.00 625.00us	  0.00	   625.00us   625.00us	 625.00us
Other	   latch: messages					 5	 0.0		0.00 101.00us	  0.00	   101.00us   101.00us	 101.00us
Foreground Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Applicatio enq: TM - contention 				 1	 0.0		0.00 470.00us	  0.00	   470.00us   470.00us	 470.00us
Other	   latch: session allocation				 1	 0.0		0.00 351.00us	  0.00	   351.00us   351.00us	 351.00us
Other	   transaction						 2	 0.0		0.00 171.50us	  0.00	   171.50us   171.50us	 171.50us
Network    IPC group service call				14	 0.0		0.00   9.29us	  0.00	     9.29us	8.86us	   9.71us   606.09ns
Other	   PX Deq: Signal ACK EXT				 2	 0.0		0.00  20.50us	  0.00	    20.50us    20.50us	  20.50us
Other	   asynch descriptor resize				 3     100.0		0.00  13.00us	  0.00	    13.00us    13.00us	  13.00us      .00ns
Other	   AWR Flush						 6	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us      .00ns
Other	   ges resource directory to be unfrozen		 4	 0.0		0.00   7.25us	  0.00	     7.25us	7.00us	   7.50us   353.55ns
User I/O   ASM IO for non-blocking poll 			 3	 0.0		0.00   8.67us	  0.00	     8.67us	8.67us	   8.67us
Other	   lock deadlock retry					 1     100.0		0.00  24.00us	  0.00	    24.00us    24.00us	  24.00us
Idle	   watchdog main loop				     1,616	 0.0	    4,848.04 3000.02m	 21.26	  3000.02ms  3000.01ms	3000.04ms    20.60us
Idle	   SQL*Net message from client			       221	 0.0	    1,887.28 8539.72m	  8.28	    14.33 s  3578.08ms	  25.08 s    15.20 s
Idle	   PX Deq: Execution Msg			       534	 0.0		2.86   5.35ms	  0.01	     5.35ms	3.77ms	   6.92ms     2.23ms
Idle	   PX Deq Credit: send blkd			       332	 0.0		0.88   2.66ms	  0.00	     2.78ms   840.10us	   4.72ms     2.74ms
Idle	   PX Deq: Msg Fragment 			       290	 0.0		0.09 314.26us	  0.00	   314.26us   313.61us	 314.90us   911.92ns
Idle	   PX Deq Credit: need buffer				 6	 0.0		0.00 376.67us	  0.00	   404.50us   321.00us	 488.00us   118.09us
Idle	   PX Deq: Parse Reply					 2	 0.0		0.00 253.50us	  0.00	   253.50us   253.50us	 253.50us
Idle	   PX Deq: Execute Reply				 2	 0.0		0.00 147.50us	  0.00	   147.50us   147.50us	 147.50us
			  --------------------------------------------------------------------------------------------------------------------

Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
System I/O log file parallel write			   200,594	 0.0	      990.47   4.94ms	  0.52	     4.94ms	4.68ms	   5.19ms   360.95us
Other	   LGWR any worker group			    66,615	 0.0	      153.40   2.30ms	  0.08	     2.30ms	2.22ms	   2.37ms   100.43us
System I/O db file parallel write			    44,718	 0.0	      121.00   2.71ms	  0.06	     2.70ms	2.56ms	   2.83ms   190.82us
System I/O control file sequential read 		     6,015	 0.0	       19.34   3.22ms	  0.01	     3.22ms	3.18ms	   3.25ms    49.95us
User I/O   Disk file Mirror Read			     1,653	 0.0	       12.61   7.63ms	  0.01	     7.62ms	6.11ms	   9.13ms     2.13ms
Other	   LGWR all worker groups			     3,159	 0.0	       11.89   3.76ms	  0.01	     3.76ms	3.70ms	   3.82ms    87.34us
Other	   IMR slave acknowledgement msg		     3,627	 0.0	       10.11   2.79ms	  0.01	     2.79ms	2.27ms	   3.30ms   728.49us
Other	   LGWR worker group ordering			     2,753	 0.0		6.57   2.39ms	  0.00	     2.41ms	2.23ms	   2.59ms   252.60us
System I/O control file parallel write			       598	 0.0		5.58   9.34ms	  0.00	     9.30ms	8.68ms	   9.92ms   874.66us
Other	   Sync ASM rebalance				       108	 0.0		2.93  27.13ms	  0.00	    27.13ms    24.60ms	  29.66ms     3.58ms
Other	   ASM file metadata operation			     4,899	 0.0		1.72 350.85us	  0.00	   350.91us   337.24us	 364.57us    19.32us
User I/O   db file sequential read			       367	 0.0		1.64   4.47ms	  0.00	     4.73ms	4.28ms	   5.18ms   635.30us
Other	   KSV master wait				     1,454	62.2		1.47   1.01ms	  0.00	     1.01ms	 .99ms	   1.03ms    28.03us
User I/O   ASM IO for non-blocking poll 		    44,451	 0.0		1.47  32.97us	  0.00	    33.00us    28.87us	  37.13us     5.84us
Cluster    gc cr block 2-way				     1,607	 0.0		0.86 535.78us	  0.00	   605.42us   522.09us	 688.75us   117.85us
Other	   gcs log flush sync				     1,529	 0.0		0.85 556.60us	  0.00	   555.77us   489.14us	 622.40us    94.23us
Other	   DLM cross inst call completion		       643	 0.0		0.69   1.08ms	  0.00	     1.04ms   928.30us	   1.15ms   157.21us
Other	   PX Deq: reap credit				    24,307     100.0		0.69  28.29us	  0.00	    28.37us    27.55us	  29.19us     1.16us
Cluster    gc current block lost				 1	 0.0		0.61 609.39ms	  0.00	   609.39ms   609.39ms	 609.39ms
Other	   DFS lock handle				       839     100.0		0.61 725.90us	  0.00	   725.79us   723.42us	 728.15us     3.34us
Cluster    gc current block busy			       282	 0.0		0.57   2.04ms	  0.00	     1.74ms	1.34ms	   2.13ms   559.08us
Other	   enq: CR - block range reuse ckpt		       128	 0.0		0.53   4.15ms	  0.00	     4.88ms	2.54ms	   7.22ms     3.31ms
Cluster    gc cr block lost					 1	 0.0		0.50 504.62ms	  0.00	   504.62ms   504.62ms	 504.62ms
Other	   reliable message				       175	 0.0		0.41   2.36ms	  0.00	     2.57ms	2.27ms	   2.87ms   424.37us
Other	   AQ: RAC AQ Network				    12,067     100.0		0.38  31.09us	  0.00	    31.09us    30.13us	  32.04us     1.35us
Other	   CGS wait for IPC msg 			    12,260     100.0		0.36  29.39us	  0.00	    29.38us    28.19us	  30.58us     1.69us
Other	   latch free					     1,172	 0.0		0.28 238.04us	  0.00	   237.99us   234.34us	 241.64us     5.16us
Other	   PX Deq: Join ACK				       176	 0.0		0.25   1.44ms	  0.00	     2.06ms	1.37ms	   2.74ms      .97ms
Other	   oracle thread bootstrap				 9	 0.0		0.24  26.63ms	  0.00	    26.18ms    22.13ms	  30.23ms     5.72ms
System I/O log file sequential read			       482	 0.0		0.22 457.69us	  0.00	   457.79us   435.36us	 480.22us    31.72us
Cluster    gc cr block busy					42	 0.0		0.19   4.61ms	  0.00	     4.69ms	4.14ms	   5.23ms   774.32us
Concurrenc library cache lock				       185	 0.0		0.16 885.50us	  0.00	   886.21us   860.14us	 912.28us    36.87us
User I/O   db file scattered read				18	 0.0		0.16   8.62ms	  0.00	     8.62ms	8.62ms	   8.62ms
Cluster    gc buffer busy release				26	 0.0		0.15   5.69ms	  0.00	     5.69ms	5.69ms	   5.69ms
Concurrenc library cache pin				       184	 0.0		0.14 779.68us	  0.00	   780.78us   747.32us	 814.24us    47.32us
User I/O   direct path read					38	 0.0		0.14   3.55ms	  0.00	     3.55ms	3.55ms	   3.55ms
Network    IPC group service call			     1,517	 0.0		0.12  80.46us	  0.00	    80.49us    78.85us	  82.12us     2.31us
System I/O db file async I/O submit			    11,728	 0.0		0.12  10.05us	  0.00	     9.87us	9.00us	  10.75us     1.24us
User I/O   direct path write temp				27	 0.0		0.11   4.21ms	  0.00	     3.88ms	3.52ms	   4.24ms   507.00us
Applicatio enq: RO - fast object reuse			       168	 0.0		0.11 664.60us	  0.00	   664.60us   467.18us	 862.02us   279.20us
Applicatio enq: TM - contention 				 2	 0.0		0.10  51.37ms	  0.00	    51.37ms	2.36ms	 100.38ms    69.32ms
Cluster    gc current grant busy			       119	 0.0		0.10 831.96us	  0.00	   607.85us   353.86us	 861.84us   359.20us
Other	   latch: gcs resource hash			       320	 0.0		0.09 287.41us	  0.00	   288.71us   274.85us	 302.57us    19.60us
User I/O   Disk file operations I/O			       276	 0.0		0.08 288.07us	  0.00	   288.17us   281.34us	 294.99us     9.65us
Other	   enq: CF - contention 				84	71.4		0.07 883.17us	  0.00	   867.15us   783.06us	    .95ms   118.92us
Other	   ges inquiry response 				94	 0.0		0.07 706.43us	  0.00	   800.96us   674.01us	 927.92us   179.54us
Other	   LGWR wait for redo copy			       169	 0.0		0.07 387.43us	  0.00	   390.08us   372.16us	 408.00us    25.34us
Other	   enq: PS - contention 				98	 9.2		0.06 650.87us	  0.00	   759.94us   626.33us	 893.56us   188.96us
Other	   ksxr poll remote instances			     2,100     100.0		0.06  28.72us	  0.00	    28.69us    27.57us	  29.80us     1.58us
Other	   enq: WF - contention 				16	 0.0		0.06   3.59ms	  0.00	     3.55ms	3.49ms	   3.62ms    87.55us
Other	   IPC send completion sync			     1,299	93.0		0.06  44.12us	  0.00	    43.30us    30.13us	  56.47us    18.63us
Other	   CSS operation: data query				36	 0.0		0.05   1.49ms	  0.00	     1.49ms	1.43ms	   1.54ms    79.39us
Cluster    gc current block 2-way				71	 0.0		0.05 732.11us	  0.00	   773.26us   684.73us	 861.79us   125.20us
Other	   latch: cache buffers lru chain		       115	 0.0		0.05 411.58us	  0.00	   408.99us   349.47us	 468.52us    84.18us
Cluster    gc current grant 2-way				68	 0.0		0.05 693.44us	  0.00	   678.53us   622.20us	 734.86us    79.66us
Cluster    gc cr multi block mixed				21	 0.0		0.05   2.19ms	  0.00	     2.98ms	1.70ms	   4.26ms     1.81ms
Cluster    gc cr disk read					48	 0.0		0.04 930.73us	  0.00	   930.73us   930.73us	 930.73us
Other	   CSS operation: data update				42	 0.0		0.04	.98ms	  0.00	      .98ms   942.38us	   1.01ms    47.28us
Cluster    gc cr grant 2-way					47	 0.0		0.04 805.57us	  0.00	   835.60us   553.38us	   1.12ms   399.11us
Concurrenc row cache lock					23     100.0		0.04   1.54ms	  0.00	     1.34ms	1.05ms	   1.64ms   417.17us
Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Other	   kjctssqmg: quick message send wait			45     100.0		0.03 706.33us	  0.00	   712.84us   680.30us	 745.39us    46.03us
Other	   latch: redo allocation				93	 0.0		0.03 329.90us	  0.00	   320.12us   219.07us	 421.18us   142.91us
Cluster    gc index operation					 3	 0.0		0.03  10.21ms	  0.00	    10.21ms    10.21ms	  10.21ms
Other	   PX Deq: Slave Session Stats			       176	 0.0		0.03 152.22us	  0.00	   206.83us   145.99us	 267.67us    86.04us
Concurrenc libcache interrupt action by LCK		     2,919	 0.0		0.03   9.03us	  0.00	     9.04us	8.97us	   9.10us    93.10ns
User I/O   direct path write					 4	 0.0		0.02   6.07ms	  0.00	     6.07ms	3.01ms	   9.12ms     4.32ms
Other	   KJC: Wait for msg sends to complete			56	30.4		0.02 398.84us	  0.00	   384.94us   341.68us	 428.19us    61.17us
Other	   latch: gc element					49	 0.0		0.02 447.55us	  0.00	   494.15us   341.94us	 646.35us   215.25us
Other	   os thread creation					 9	 0.0		0.02   2.12ms	  0.00	     2.10ms	1.86ms	   2.34ms   336.97us
Other	   enq: CO - master slave det				10     100.0		0.01 936.20us	  0.00	   936.20us   936.20us	 936.20us
Other	   enq: FB - contention 				11	 0.0		0.01 847.55us	  0.00	   707.35us   536.00us	 878.70us   242.33us
Other	   enq: US - contention 				11	 0.0		0.01 816.09us	  0.00	   813.15us   780.80us	 845.50us    45.75us
Other	   latch: ges resource hash list			26	 0.0		0.01 339.92us	  0.00	   348.33us   321.00us	 375.67us    38.66us
User I/O   db file parallel read				 2	 0.0		0.01   4.05ms	  0.00	     4.05ms	4.05ms	   4.05ms
Cluster    gc cr grant busy					 4	 0.0		0.01   1.89ms	  0.00	     1.89ms	1.89ms	   1.89ms
Commit	   log file sync					 1	 0.0		0.01   7.13ms	  0.00	     7.13ms	7.13ms	   7.13ms
Other	   enq: TO - contention 				12	 0.0		0.01 549.67us	  0.00	   549.67us   549.67us	 549.67us
Other	   latch: object queue header operation 		 7	 0.0		0.01 897.86us	  0.00	     1.01ms   212.00us	   1.81ms     1.13ms
Other	   PX Deq: Signal ACK EXT			       176	 0.0		0.01  34.24us	  0.00	   107.08us    25.94us	 188.22us   114.75us
Concurrenc latch: MGA shared context root latch 		 9	 0.0		0.01 639.56us	  0.00	   562.17us   330.00us	 794.33us   328.33us
Other	   PGA memory operation 			       222	 0.0		0.01  23.52us	  0.00	    23.66us    21.87us	  25.46us     2.54us
Other	   enq: TA - contention 				 5	 0.0		0.00	.97ms	  0.00	   910.75us   634.50us	   1.19ms   390.68us
Other	   enq: DR - contention 				 2	 0.0		0.00   1.99ms	  0.00	     1.99ms	1.16ms	   2.83ms     1.18ms
Other	   latch: enqueue hash chains				13	 0.0		0.00 251.31us	  0.00	   254.46us   213.43us	 295.50us    58.03us
Other	   latch: messages					10	 0.0		0.00 250.50us	  0.00	   246.42us   226.00us	 266.83us    28.87us
Configurat enq: HW - contention 				 3	 0.0		0.00 726.67us	  0.00	   726.67us   726.67us	 726.67us
Other	   enq: DW - contention 				 2     100.0		0.00   1.03ms	  0.00	     1.03ms   949.00us	   1.10ms   108.89us
Concurrenc latch: cache buffers chains				10	 0.0		0.00 189.20us	  0.00	   162.19us    94.67us	 229.71us    95.49us
Cluster    gc current split					 3	 0.0		0.00 630.67us	  0.00	   630.67us   630.67us	 630.67us
Other	   enq: TD - KTF dump entries				 3	 0.0		0.00 581.00us	  0.00	   573.50us   551.00us	 596.00us    31.82us
Other	   name-service call wait				 2	 0.0		0.00 733.50us	  0.00	   733.50us   696.00us	 771.00us    53.03us
Cluster    gc current multi block request			 2	 0.0		0.00 717.50us	  0.00	   717.50us   717.50us	 717.50us
Other	   enq: SM -  contention				 2	 0.0		0.00 700.50us	  0.00	   700.50us   700.50us	 700.50us
Other	   asynch descriptor resize				48     100.0		0.00  25.46us	  0.00	    24.79us	8.87us	  40.72us    22.52us
Other	   enq: MW - contention 				 2	 0.0		0.00 578.00us	  0.00	   578.00us   486.00us	 670.00us   130.11us
Concurrenc latch: MGA shared context latch			 4	 0.0		0.00 266.50us	  0.00	   266.50us    82.50us	 450.50us   260.22us
Configurat latch: redo writing					 6	 0.0		0.00 141.67us	  0.00	   141.67us    44.67us	 238.67us   137.18us
Other	   latch: checkpoint queue latch			 5	 0.0		0.00 159.60us	  0.00	   184.13us   143.25us	 225.00us    57.81us
Other	   latch: call allocation				 3	 0.0		0.00 249.33us	  0.00	   249.33us   249.33us	 249.33us
Other	   enq: RA - RT ADDM flood control			 1     100.0		0.00 712.00us	  0.00	   712.00us   712.00us	 712.00us
Other	   enq: AF - task serialization 			 1	 0.0		0.00 699.00us	  0.00	   699.00us   699.00us	 699.00us
Other	   GCR CSS group update 				38	 0.0		0.00  14.45us	  0.00	    14.45us    14.42us	  14.47us    37.22ns
Other	   GCR CSS group query					36	 0.0		0.00  14.92us	  0.00	    14.92us    14.28us	  15.56us   903.53ns
Other	   lock deadlock retry					 1     100.0		0.00 525.00us	  0.00	   525.00us   525.00us	 525.00us
Other	   latch: kjci process context latch			 3	 0.0		0.00 166.00us	  0.00	   181.25us   135.50us	 227.00us    64.70us
Network    SQL*Net message to client				45	 0.0		0.00   7.76us	  0.00	     7.80us	5.87us	   9.73us     2.73us
Concurrenc buffer busy waits					 2	 0.0		0.00  57.50us	  0.00	    57.50us    57.50us	  57.50us
Other	   ges resource directory to be unfrozen		 6	 0.0		0.00   5.33us	  0.00	     5.33us	5.00us	   5.67us   471.40ns
Other	   undo_retention publish retry 			 4	 0.0		0.00   6.75us	  0.00	     6.75us	6.50us	   7.00us   353.55ns
Other	   AWR Flush						 4	 0.0		0.00   5.75us	  0.00	     5.17us	4.00us	   6.33us     1.65us
Concurrenc latch: MGA heap latch				 1	 0.0		0.00  13.00us	  0.00	    13.00us    13.00us	  13.00us
Idle	   rdbms ipc message				   454,887	 5.8	   31,004.03  68.16ms	 16.41	    68.21ms    66.32ms	  70.10ms     2.67ms
Idle	   PX Idle Wait 				       180	 0.0	   20,417.58 113.43 s	 10.81	   113.43 s   113.41 s	 113.45 s    22.76ms
Idle	   Space Manager: slave idle wait		     5,108	 0.0	   19,306.58 3779.68m	 10.22	  3779.88ms  3751.85ms	3807.92ms    39.64ms
Idle	   class slave wait				    15,047	79.2	    9,306.48 618.49ms	  4.93	   618.56ms   603.82ms	 633.30ms    20.84ms
Idle	   wait for unread message on broadcast cha	     1,854	99.9	    3,627.09 1956.36m	  1.92	  1956.36ms  1956.36ms	1956.36ms     4.87us
Idle	   pmon timer					       806     100.0	    2,417.93 2999.91m	  1.28	  2999.91ms  2999.91ms	2999.92ms    12.65us
Idle	   ges remote message				    37,730	 0.0	    2,416.66  64.05ms	  1.28	    64.05ms    63.98ms	  64.12ms    94.05us
Idle	   GCR sleep					     8,050	 0.0	    2,415.89 300.11ms	  1.28	   300.11ms   300.07ms	 300.15ms    52.44us
Idle	   DIAG idle wait				    15,202	82.9	    2,413.06 158.73ms	  1.28	   158.73ms   158.41ms	 159.06ms   455.99us
Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   gcs yield cpu				    82,267     100.0	    2,407.98  29.27ms	  1.27	    29.27ms    29.26ms	  29.28ms    11.31us
Idle	   gcs remote message				 2,797,162	 0.0	    2,091.82 747.83us	  1.11	   750.35us   707.02us	 793.68us    61.27us
Idle	   LGWR worker group idle			   185,128	 0.0	    1,373.95   7.42ms	  0.73	     7.42ms	7.14ms	   7.70ms   395.93us
Idle	   smon timer						20	 5.0	    1,317.14  65.86 s	  0.70	    67.18 s    53.99 s	  80.36 s    18.65 s
Idle	   Streams AQ: qmn coordinator idle wait		89	 0.0	    1,232.05  13.84 s	  0.65	    13.84 s    13.69 s	  14.00 s   220.02ms
Idle	   Streams AQ: qmn slave idle wait			44	 0.0	    1,232.05  28.00 s	  0.65	    28.00 s    28.00 s	  28.00 s    44.07us
Idle	   VKRM Idle						 0	 N/A	    1,220.11		  0.65
Idle	   lreg timer					       404     100.0	    1,213.09 3002.71m	  0.64	  3002.71ms  3002.67ms	3002.74ms    52.26us
Idle	   pman timer					       404     100.0	    1,211.86 2999.64m	  0.64	  2999.64ms  2999.64ms	2999.65ms     3.60us
Idle	   Streams AQ: waiting for time management		 0	 N/A	    1,210.01		  0.64
Idle	   heartbeat redo informer			     1,209	 0.0	    1,209.19 1000.15m	  0.64	  1000.15ms  1000.14ms	1000.16ms    15.54us
Idle	   REPL Capture/Apply: RAC AQ qmn coordinat		21     100.0	    1,209.04  57.57 s	  0.64	    57.70 s    54.96 s	  60.45 s  3886.42ms
Idle	   SCM slave idle				    12,123	 0.0	    1,208.04  99.65ms	  0.64	    99.65ms    99.49ms	  99.81ms   231.43us
Idle	   ASM background timer 			     4,247	 0.0	    1,207.56 284.33ms	  0.64	   284.34ms   282.44ms	 286.24ms     2.69ms
Idle	   OFS idle					       402     100.0	    1,206.02 3000.04m	  0.64	  3000.04ms  3000.03ms	3000.05ms    12.88us
Idle	   ASM cluster membership changes		       690	86.8	    1,205.27 1746.77m	  0.64	  1746.77ms  1746.77ms	1746.77ms     3.14us
Idle	   PING 					     1,100	21.7	    1,200.74 1091.58m	  0.64	  1091.67ms  1081.76ms	1101.59ms    14.02ms
Idle	   shared server idle wait				 0	 N/A	    1,200.24		  0.64
Idle	   dispatcher timer					20     100.0	    1,200.13  60.01 s	  0.64	    60.01 s    60.01 s	  60.01 s   487.62us
Idle	   AQPC idle						40     100.0	    1,200.03  30.00 s	  0.64	    30.00 s    30.00 s	  30.00 s   110.87us
Idle	   Data Guard: Gap Manager				20	 0.0	    1,200.01  60.00 s	  0.64	    60.00 s    60.00 s	  60.00 s    71.77us
Idle	   Data Guard: Timer					 2	 0.0	    1,200.00 600.00 s	  0.64	   600.00 s   600.00 s	 600.00 s   115.97us
Idle	   PX Deq: Execute Reply			       564	 0.0		0.36 640.87us	  0.00	   824.29us   559.03us	   1.09ms   375.12us
Idle	   PX Deq: Parse Reply				       176	 0.0		0.34   1.95ms	  0.00	     1.39ms   757.00us	   2.02ms   892.11us
Idle	   RMA: IPC0 completion sync			     1,907	 0.0		0.07  38.76us	  0.00	    38.81us    34.81us	  42.80us     5.65us
Idle	   PX Deq Credit: send blkd			       146	 0.0		0.07 484.98us	  0.00	   484.98us   484.98us	 484.98us
Idle	   SQL*Net message from client				47	 0.0		0.04 906.62us	  0.00	   912.53us   634.67us	   1.19ms   392.96us
Idle	   heartbeat monitor sleep				31	 0.0		0.00   8.94us	  0.00	    10.04us	5.16us	  14.92us     6.90us
			  --------------------------------------------------------------------------------------------------------------------

Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
AQ: RAC AQ Network	   12.1K					    0.8     85.4      7.8      3.7	1.5	 0.5	  0.2	0.0(3)
ASM IO for non-blocking p  44.5K				   0.8	   63.3     20.3      6.3      5.0	2.7	 1.1	  0.4	   0.1	 0.0(8)   0.0(3)   0.0(1)
ASM file metadata operati   4898			  0.1	  40.9	    1.7     29.5      9.1      6.1	2.7	 3.8	  0.7	   0.6	    2.1      2.3      0.5   0.0(1)	0.1
AWR Flush		      10				 100.0
CGS wait for IPC msg	   12.3K					    5.0     81.9      7.3      3.9	1.2	 0.5	  0.2	0.0(3)	 0.0(1)
CSS initialization	       2						    50.0								    50.0
CSS operation: action	       2												100.0
CSS operation: data query     36											 2.8	 44.4	  22.2	   27.8      2.8
CSS operation: data updat     42												 59.5	  40.5
CSS operation: query	       6			 33.3	  50.0								 16.7
DFS lock handle 	     839						     0.4      0.4      0.2	0.5	28.6	 59.5	   8.6	    1.4      0.4      0.1
DLM cross inst call compl    665						     5.0      0.3      0.2		 5.4	 59.2	  23.3	    5.1      0.9      0.5      0.2
Disk file Mirror Read	    1690														   42.2     40.9      6.0      7.3	3.2	 0.3
Disk file operations I/O     302				   0.7	    7.9      1.0      1.3      2.3     47.4	32.5	  5.0		    1.7      0.3
GCR CSS group query	      36					   77.8     19.4      2.8
GCR CSS group update	      38					   84.2     13.2      2.6
IMR slave acknowledgement   3630					    5.1     13.8      6.1     17.3     17.9	 4.3	  1.5	   0.4	   12.3     14.7      2.4      2.7	1.3	 0.1
IPC group service call	    1529				   0.3	    1.0      6.4     50.8     33.2	6.5	 1.2	  0.5	   0.1	    0.1      0.1
IPC send completion sync    1571					    0.8     67.2      5.8      2.3	8.7	 7.2	  5.5	   2.5
KJC: Wait for msg sends t   4146					 0.0(2)      0.1     40.9     44.9	8.4	 3.3	  1.3	   0.5	    0.3      0.1						   0.1
KSV master wait 	    1454				   0.1	   12.6     38.1      6.6      4.7     11.9	 4.4	  1.1	   2.4	    8.1      8.3      1.6
LGWR all worker groups	    3171					 0.0(1) 			     0.0(1)		  0.2	   1.3	   77.4     18.8      1.2      0.9   0.0(1)   0.0(1)   0.0(1)
LGWR any worker group	   66.3K					    0.2  0.0(11)      0.2      1.0	2.5	 5.5	 11.6	  23.7	   48.7      5.9      0.5      0.2  0.0(33)	 0.1
LGWR wait for redo copy      169				   2.4	    3.6      0.6      5.3     24.9     18.9	21.3	 17.8	   2.4	    2.4      0.6
LGWR worker group orderin   2720				   0.8	    1.0      0.6      4.2      5.7	4.2	 3.9	  4.9	   6.7	   61.0      6.6      0.5
PGA memory operation	     679				  36.8	   45.4     10.8      4.0      2.1	0.7	 0.1		   0.1
PX Deq: Join ACK	     178										0.6	22.5	 24.2	  29.2	   20.8      2.2      0.6
PX Deq: Signal ACK EXT	     178					   23.0     66.9      5.1      1.7	1.1	 1.7		   0.6
PX Deq: Slave Session Sta    356				   0.8	   22.8      7.9      2.2      2.0     17.7	35.7	 10.1	   0.6	    0.3
PX Deq: reap credit	     26K				0.0(2)	   13.3     73.9      7.8      3.2	1.1	 0.5	  0.1	0.0(5)	 0.0(2)   0.0(1)
PX qref latch		      52					   86.5      7.7      5.8
SQL*Net break/reset to cl    120				  26.7	   23.3 	      6.7     30.0     10.8	 2.5
SQL*Net message to client    266			  1.1	  93.2	    3.4      0.4      0.4      1.1	0.4
Sync ASM rebalance	     108				   0.9	   38.0      2.8      1.9      0.9	0.9	10.2	  4.6	   4.6	    1.9 				8.3	24.1	  0.9
asynch descriptor resize      51				  76.5	   11.8      5.9      2.0			 3.9
buffer busy waits	       1							    100.0
buffer deadlock 	       1						   100.0
control file parallel wri    597														   18.4     62.5      6.2      6.4	5.5	 0.8	  0.2
control file sequential r   6164					    7.5     17.2      1.4      0.8	2.9	 2.3	  0.3	   0.1	   52.9     10.3      1.8      1.8	0.6   0.0(1)
db file async I/O submit   11.8K			  0.4	  93.0	    2.5      1.3      1.2      0.8	0.4	 0.3	  0.1	0.0(3)	 0.0(2)
db file parallel read	       2														  100.0
db file parallel write	   44.8K					    0.1      0.7      4.4      5.2	9.6	12.1	 16.8	  19.7	   19.3      5.6      2.3      3.3	0.8   0.0(8)
db file scattered read	      18														   11.1     55.6     22.2      5.6	5.6
db file sequential read     4.2M														   73.1     20.9      2.8      2.4	0.8 0.0(567)
direct path read	      38														   97.4 	      2.6
direct path write	       5												 20.0			    40.0     40.0
direct path write temp	      27														   70.4     25.9      3.7
enq: AF - task serializat      1												100.0
enq: CF - contention	      84											13.1	 65.5	  20.2	    1.2
enq: CO - master slave de     10												 80.0	  20.0
enq: CR - block range reu    128											12.5	 53.9	  16.4	    2.3      2.3      3.9      4.7	3.9
enq: DR - contention	       2													  50.0	   50.0
enq: DW - contention	       2												 50.0	  50.0
enq: FB - contention	       8											50.0	 50.0
enq: HW - contention	       4											50.0	 25.0	  25.0
enq: MW - contention	       2											50.0	 50.0
enq: PS - contention	     190										0.5	44.2	 43.2	  11.1	    0.5      0.5
enq: RA - RT ADDM flood c      1												100.0
enq: RO - fast object reu    168								       0.6		69.0	 23.2	   1.8	    4.2      1.2
enq: SM -  contention	       2											50.0	 50.0
Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
enq: TA - contention	       5							     20.0				 20.0	  60.0
enq: TD - KTF dump entrie      3												100.0
enq: TM - contention	       3											33.3			   33.3 					33.3
enq: TO - contention	      21											47.6	 42.9	   9.5
enq: US - contention	      11												 90.9	   9.1
enq: WF - contention	      24											29.2	 45.8	   8.3	    4.2      4.2      4.2		4.2
gc buffer busy release	      42					    2.4 	      2.4      4.8	4.8		  4.8	   9.5	   16.7     42.9     11.9
gc cr block 2-way	    7879							      0.1      0.2	0.8	22.7	 49.4	   7.9	   16.9      2.0      0.1
gc cr block busy	      63													   7.9	   14.3     68.3      7.9      1.6
gc cr block congested	       2														   50.0     50.0
gc cr block lost	       5																						  60.0	   40.0
gc cr disk read 	      48											12.5	 60.4	  18.8	    8.3
gc cr grant 2-way	    1.5M							      0.4      0.7	2.8	58.3	 32.3	   4.5	    0.8      0.2 0.0(430)  0.0(21)   0.0(2)				 0.0(3)
gc cr grant busy	   90.4K					0.0(11)      0.1  0.0(37)      0.1	0.3	11.3	 67.4	  18.0	    2.1      0.5      0.2  0.0(28)   0.0(2)				0.0(11)
gc cr grant congested	     606													  18.5	   59.1     19.0      3.5
gc cr multi block mixed       33											 3.0	 45.5	  30.3		    15.2      6.1
gc current block 2-way	   21.4K							      0.1      0.5	0.6	29.9	 59.9	   7.7	    1.0      0.3      0.1
gc current block busy	    5037							      0.1      0.4	0.5	28.4	 54.1	  12.4	    1.5      1.7      0.7      0.1
gc current block congeste     10														   60.0     40.0
gc current block lost	       2																						  50.0	   50.0
gc current grant 2-way	  270.1K							      0.4      0.8	2.8	57.1	 32.8	   5.0	    0.9      0.2  0.0(91)   0.0(1)					 0.0(1)
gc current grant busy	   16.6K					 0.0(3)      0.1   0.0(6)      0.1	0.5	11.5	 66.8	  18.1	    2.2      0.4      0.1      0.1				0.0(1)
gc current grant congeste    107													  20.6	   56.1     19.6      3.7
gc current grant read-mos  50.4K						 0.0(12)   0.0(6)  0.0(19)	0.1	 1.3	 42.7	  50.1	    4.8      0.7      0.1  0.0(16)   0.0(3)
gc current multi block re      7												 85.7	  14.3
gc current retry	       1												100.0
gc current split	       5											40.0	 20.0			    40.0
gc index operation	       5											40.0					     40.0     20.0
gcs log flush sync	    1098					    4.6      7.5      6.2     11.7     12.6	18.1	 17.9	   9.4	    5.4      6.0      0.5      0.2
ges inquiry response	      94											36.2	 50.0	  10.6	    3.2
ges resource directory to     10				  80.0	   20.0
kjctssqmg: quick message      45					    8.9      8.9      2.2		2.2	20.0	 31.1	  22.2	    4.4
ksxr poll remote instance   2107					    3.4     83.9      7.2      4.2	0.9	 0.4   0.0(1)
latch free		    1438					    5.6      1.0      2.9     21.3     39.8	20.1	  7.2	   1.7	    0.1      0.1
latch: MGA heap latch	       1					  100.0
latch: MGA shared context      4							     25.0     25.0     25.0		 25.0
latch: MGA shared context      9							     11.1	       11.1	44.4	 11.1	  22.2
latch: cache buffers chai     33					   18.2      9.1     18.2      9.1     18.2	15.2	  9.1	   3.0
latch: cache buffers lru     180					   12.2      1.7      4.4     22.2     19.4	16.7	 15.6	   7.8
latch: call allocation	       3								      33.3		66.7
latch: checkpoint queue l      5							     40.0     20.0     20.0	20.0
latch: enqueue hash chain    262					    5.7      1.5      7.6     16.4     27.5	19.5	 15.6	   4.2	    1.9
latch: gc element	     215					    6.0 	      6.0     14.4     20.5	20.9	 15.8	   9.3	    4.2      2.3      0.5
latch: gcs resource hash     441					    9.8      5.7     11.8     18.8     22.4	15.2	  8.8	   5.4	    1.6      0.5
latch: ges resource hash      26					    7.7 	     15.4     15.4     23.1	19.2	 11.5	   7.7
latch: kjci process conte      3								      33.3     66.7
latch: messages 	      15					   33.3     13.3      6.7     13.3		20.0	 13.3
latch: object queue heade     28							     10.7     10.7     17.9	32.1	  7.1	  10.7		    10.7
latch: redo allocation	     161					   14.3      0.6      8.1     23.0     20.5	21.1	  8.1	   2.5	    1.9
latch: redo writing	       6					   50.0 		      33.3			 16.7
latch: session allocation      1										       100.0
latch: undo global data        6								      16.7     33.3	16.7	 33.3
libcache interrupt action   2928			  2.0	  91.8	    2.2      1.3      1.4      0.5	0.2	 0.3	  0.2
library cache lock	     202								       0.5		26.2	 54.5	  15.3	    2.0      1.0      0.5
library cache pin	     200							      0.5			29.5	 54.0	  14.0	    1.5      0.5
lock deadlock retry	       2						    50.0					 50.0
log file parallel write   200.2K														   36.7     60.0      3.0      0.2	0.1  0.0(78)   0.0(2)
log file sequential read     482				   0.2		     1.2     21.4      2.5     19.7	23.4	 18.7	  11.8	    1.0
log file sync		      10													  10.0	   30.0     60.0
name-service call wait	       6											16.7	 66.7	  16.7
Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
oracle thread bootstrap        9																	      77.8     22.2
os thread creation	       9													  66.7	   22.2     11.1
reliable message	     177											 1.1	 45.2	  10.2	   33.3      8.5	       0.6	0.6		  0.6
row cache lock		      35												 34.3	  40.0	   22.9      2.9
undo_retention publish re      4				  75.0	   25.0
			  --------------------------------------------------------------------------------------------------------------------


System Statistics			 DB/Inst: P30DB/p30db1	Snaps: 156-157

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	       Reads	    Reads	Writes	   Size (k)	 Changes	Calls	     Execs	 Parses     Logons	   Txns
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   5,609,804	2,106,679      310,504	    296,003	 894,206	  593	   726,479	  1,865 	95	108,674
   2	   5,691,021	2,129,301      315,360	    304,474	 908,905	  705	   740,004	  1,404 	94	110,855
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	  11,300,825	4,235,980      625,864	    600,476    1,803,111	1,298	 1,466,483	  3,269        189	219,529
 Avg	   5,650,413	2,117,990      312,932	    300,238	 901,556	  649	   733,242	  1,635 	95	109,765
 Std	      57,429	   15,996	 3,434	      5,990	  10,394	   79	     9,564	    326 	 1	  1,542
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Second		 DB/Inst: P30DB/p30db1	Snaps: 156-157

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	     Reads/s	  Reads/s     Writes/s	 Size (k)/s    Changes/s      Calls/s	   Execs/s     Parses/s   Logons/s	 Txns/s
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	    9,278.78	  3,484.5	 513.6	      489.6	 1,479.0	  1.0	   1,201.6	    3.1       0.16	  179.8
   2	    9,412.75	  3,521.8	 521.6	      503.6	 1,503.3	  1.2	   1,223.9	    2.3       0.16	  183.4
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   18,691.53	  7,006.3      1,035.2	      993.2	 2,982.3	  2.1	   2,425.6	    5.4       0.31	  363.1
 Avg	    9,345.76	  3,503.1	 517.6	      496.6	 1,491.2	  1.1	   1,212.8	    2.7       0.16	  181.6
 Std	       94.73	     26.4	   5.7		9.9	    17.1	  0.1	      15.8	    0.5       0.00	    2.5
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Transaction	 DB/Inst: P30DB/p30db1	Snaps: 156-157

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	    Reads/tx	 Reads/tx    Writes/tx	Size (k)/tx   Changes/tx     Calls/tx	  Execs/tx    Parses/tx  Logons/tx
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ----------
   1	       51.62	     19.4	   2.9		2.7	     8.2	  0.0	       6.7	    0.0       0.00
   2	       51.34	     19.2	   2.8		2.7	     8.2	  0.0	       6.7	    0.0       0.00
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~
 Avg	       51.48	     19.3	   2.9		2.7	     8.2	  0.0	       6.7	    0.0       0.00
			  --------------------------------------------------------------------------------------------------------------------


SysStat and Global Messaging  - RAC	 DB/Inst: P30DB/p30db1	Snaps: 156-157

	   Blocks Received	      Blocks Served	       CPU (seconds)						Messages				       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir	  Lost	  Failure
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	    12,656	 2,412	      14,120	   5,606	  N/A	       0	3,128,498	   3,538      3,308,382       2,825    1,090,312   1,318,283	     2		0
   2	    14,079	 5,601	      12,613	   2,403	  N/A	       0	3,305,578	   2,814      3,129,147       3,550	 924,738   1,135,813	     5		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	    26,735	 8,013	      26,733	   8,009	    0	       0	6,434,076	   6,352      6,437,529       6,375    2,015,050   2,454,096	     7		0
 Avg	    13,368	 4,007	      13,367	   4,005	  N/A	       0	3,217,038	   3,176      3,218,765       3,188    1,007,525   1,227,048	     4		0
 Std	     1,006	 2,255	       1,066	   2,265	  N/A	       0	  125,214	     512	126,738 	513	 117,078     129,026	     2		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Sec)- RACDB/Inst: P30DB/p30db1  Snaps: 156-1

     Blocks Received Per Second   Blocks Served per Second   CPU seconds per Second				     Messages Per Second				  GC Blks     GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent    GES Sent  Sent Direct  Sent Indir	Lost/s	   Fail/s
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	     20.93	  3.99	       23.35	    9.27	  N/A	    0.00	 5,174.63	    5.85       5,472.16        4.67	 1,803.4    2,180.48	     0		0
   2	     23.29	  9.26	       20.86	    3.97	  N/A	    0.00	 5,467.31	    4.65       5,175.50        5.87	 1,529.5    1,878.59	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	     44.22	 13.25	       44.22	   13.25	 0.00	    0.00	10,641.94	   10.51      10,647.66       10.54	 3,332.9    4,059.07	     0		0
 Avg	     22.11	  6.63	       22.11	    6.62	  N/A	    0.00	 5,320.97	    5.25       5,323.83        5.27	 1,666.4    2,029.54	     0		0
 Std	      1.66	  3.73		1.76	    3.75	  N/A	    0.00	   206.96	    0.85	 209.77        0.85	   193.7      213.47	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Tx)- RACDB/Inst: P30DB/p30db1  Snaps: 156-15

	Blocks Received per Tx	      Blocks Served	    CPU (seconds) per Tx				Messages per Transaction			       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   ------	--------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir   Lost/T	 Fail/Tx
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   ------	--------
   1	      0.12	  0.02		0.13	    0.05	  N/A	    0.00	    28.79	    0.03	  30.44        0.03	    10.0       12.13	  0.0	     0.0
   2	      0.13	  0.05		0.11	    0.02	  N/A	    0.00	    29.82	    0.03	  28.23        0.03	     8.3       10.25	  0.0	     0.0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~	~~~~~~~~
 Avg	      0.12	  0.04		0.12	    0.04	  N/A	    0.00	    29.30	    0.03	  29.34        0.03	     9.2       11.19	  0.0	     0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Efficiency Percentages	 DB/Inst: P30DB/p30db1	Snaps: 156-157

	       Buffer Access
       -----------------------------
  I#	   Local % Remote %   Disk %	Locality %
----   ----------- -------- --------   -----------
   1	     62.17     0.27    37.56	     50.63
   2	     62.24     0.35    37.42	     58.79
			  --------------------------------------------------------------------------------------------------------------------

Global Latency Characteristics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

				CR Blocks				  CU Blocks
		 ---------------------------------------   ---------------------------------------
	GE Get	   Receive     Build	 Flush Log Flush     Receive	   Pin	   Flush Log Flush
  I# Time (us)	 Time (us) Time (us) Time (us) CR Srvd %   Time (us) Time (us) Time (us) CU Srvd %
---- ---------	 --------- --------- --------- ---------   --------- --------- --------- ---------
   1	    39	      1285	 652	  4722	     0.6	 741	     0	    8776       0.3
   2	    38	      1173	 494	  4848	     1.4	 707	     0	    5455       0.4
			  --------------------------------------------------------------------------------------------------------------------

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

	     Queue Time (us)	    Process Time (us)	      % Messages Sent
       --------------------------   -----------------	--------------------------
  I#	   Sent  on ksxp Received   GCS msgs GES msgs	  Direct Indirect Flow Ctr
----   -------- -------- --------   -------- --------	-------- -------- --------
   1	    706      882       15	  41	   34	    45.2     54.7      0.0
   2	    540      956       12	  35	   36	    44.8     55.0      0.2
			  --------------------------------------------------------------------------------------------------------------------


Global CR Server Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

			   Block Requests					   Results			 Fairness      Light		   Total
       -----------------------------------------------------   ----------------------------------------------	----------   --------	--------------------------
  I#		CR	    CU	      Data     Undo	  TX	   Current Private	 Zero  Dsk Rd	 Fail	 Down Conv	Works	   Flushes     Builds Erro
----   ----------- ----------- ----------- -------- --------   ----------- ------- ---------- ------- -------	----------   --------	---------- ---------- ----
   1	     4,109	 1,492	     4,109	  2    1,477	     5,599	 1	    1	    0	    0	     4,038	1,682		36	4,109	 0
   2	     2,321	   136	     2,321	  3	  54	     2,406	 0	    3	   48	    0	     2,245	  965		33	2,321	 0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~ ~~~~~~~ ~~~~~~~~~~ ~~~~~~~ ~~~~~~~	~~~~~~~~~~   ~~~~~~~~	~~~~~~~~~~ ~~~~~~~~~~ ~~~~
 Sum	     6,430	 1,628	     6,430	  5    1,531	     8,005	 1	    4	   48	    0	     6,283	2,647		69	6,430	 0
 Avg	     3,215	   814	     3,215	  3	 766	     4,003	 1	    2	   24	    0	     3,142	1,324		35	3,215	 0
 Std	     1,264	   959	     1,264	  1    1,006	     2,258	 1	    1	   34	    0	     1,268	  507		 2	1,264	 0
			  --------------------------------------------------------------------------------------------------------------------

Global Current Server Statistics	 DB/Inst: P30DB/p30db1	Snaps: 156-157

  I#	    Pins % <100us   % <1ms  % <10ms % <100ms	% <1s	% <10s	   Flushes % <100us   % <1ms  % <10ms % <100ms	  % <1s   % <10s
---- ----------- -------- -------- -------- -------- -------- -------- ----------- -------- -------- -------- -------- -------- --------
   1	       2    50.00    50.00     0.00	0.00	 0.00	  0.00		49     0.00	6.12	75.51	 18.37	   0.00     0.00
   2	       8    25.00    75.00     0.00	0.00	 0.00	  0.00		55     0.00	0.00	90.91	  9.09	   0.00     0.00
 ~~~ ~~~~~~~~~~~						       ~~~~~~~~~~~
 Sum	      10							       104
 Avg	       5								52
 Std	       4								 4
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Transfer Statistics	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested  (Cngst) - Block Transfer impacted by Remote System Load
-> All - average time of All blocks (Immed,Busy,Cngst) in us
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block		       CR Blocks		       Current Blocks		       CR Avg Time (us) 	  Current Avg Time (us)
---------   ------------   --------------------------------   --------------------------------	 ---------------------------   ---------------------------
Dest  Src   Class	      Received %Immed  %Busy %Cngst	 Received %Immed  %Busy %Cngst	    All  Immed	 Busy  Cngst	  All  Immed   Busy  Cngst
---- ----   ------------   ----------- ------ ------ ------   ----------- ------ ------ ------	 ------ ------ ------ ------   ------ ------ ------ ------
   1	2   data block		 2,325	 99.4	 0.6	0.0	   12,500   84.2   15.8    0.0	   1263   1234	 5687	6676	  743	 707	929   3878
	2   others		    34	 97.1	 2.9	0.0	       52   57.7   42.3    0.0	   1158    491	23166	 N/A	  533	 589	457    N/A
	2   undo header 	    54	 70.4	29.6	0.0		6   33.3   66.7    0.0	   2160    482	 6147	 N/A	 2425	 614   3330    N/A
	2   undo block		     3	 33.3	66.7	0.0		0    N/A    N/A    N/A	   2632   1265	 3316	 N/A	  N/A	 N/A	N/A    N/A

   2	1   data block		 4,107	 99.7	 0.3	0.0	   14,015   78.3   21.7    0.0	   1385   1367	 6744	2647	  706	 669	832   3848
	1   undo header 	 1,477	 98.4	 1.6	0.0		4   75.0   25.0    0.0	    580    519	 4383	 N/A	  617	 675	441    N/A
	1   others		    12	100.0	 0.0	0.0	       19   73.7   26.3    0.0	    434    434	  N/A	 N/A	  924	 572   1909    N/A
	1   undo block		     2	100.0	 0.0	0.0		0    N/A    N/A    N/A	    555    555	  N/A	 N/A	  N/A	 N/A	N/A    N/A
			  --------------------------------------------------------------------------------------------------------------------

Global Cache Transfer (Immediate)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block	     Lost Blocks	 Immediate CR Blocks	     Immediate Current Blocks	   Immed CR Avg Time (us)   Immed Current Avg Time (us)
---------   ------------   --------------   ----------------------------   ----------------------------   -----------------------   -----------------------
Dest  Src   Class	     Count Time(u      Received  %2-hop   %3-hop      Received	%2-hop	 %3-hop     Total   2-hop   3-hop     Total   2-hop   3-hop
---- ----   ------------   ------- ------   ----------- ------- --------   ----------- ------- --------   ------- ------- -------   ------- ------- -------
   1	2   data block		 0    N/A	  2,310   100.0      0.0	10,524	 100.0	    0.0      1234    1234     N/A	707	707	N/A
	2   others		 0    N/A	     33   100.0      0.0	    30	 100.0	    0.0       491     491     N/A	589	589	N/A
	2   undo header 	 0    N/A	     38   100.0      0.0	     2	 100.0	    0.0       482     482     N/A	614	614	N/A
	2   undo block		 0    N/A	      1   100.0      0.0	     0	   N/A	    N/A      1265    1265     N/A	N/A	N/A	N/A

   2	1   data block		 0    N/A	  4,093   100.0      0.0	10,968	 100.0	    0.0      1367    1367     N/A	669	669	N/A
	1   undo header 	 0    N/A	  1,454   100.0      0.0	     3	 100.0	    0.0       519     519     N/A	675	675	N/A
	1   others		 0    N/A	     12   100.0      0.0	    14	 100.0	    0.0       434     434     N/A	572	572	N/A
	1   undo block		 0    N/A	      2   100.0      0.0	     0	   N/A	    N/A       555     555     N/A	N/A	N/A	N/A
			  --------------------------------------------------------------------------------------------------------------------


Cluster Interconnect			 DB/Inst: P30DB/p30db1	Snaps: 156-157

					 Begin					  End (if different from Begin)
		  --------------------------------------------------   --------------------------------------------------
  I# NAME	  IP Address	  Pub Source			       IP Address      Pub Source
---- ----------   --------------- --- ------------------------------   --------------- --- ------------------------------
   1 fg-priv:1	  169.254.22.248  N
   2 fg-priv:1	  169.254.31.173  N
			  --------------------------------------------------------------------------------------------------------------------

Ping Statistics 			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Latency of the roundtrip of a message from  Src Instance to the Target instances

 Instance#	       500 bytes		    8 Kbytes
-----------   --------------------------   --------------------------
		    Ping    Avg      Std	 Ping	 Avg	  Std
 Src Target	   Count Time(us)    Dev	Count Time(us)	  Dev
---- ------   ---------- -------- ------   ---------- -------- ------
   1	  1	      55      771    0.4	   60	   742	  0.4
	  2	      55      895    0.3	   60	   939	  0.3

   2	  1	      55      816    0.3	   60	   924	  0.4
	  2	      55      417    0.2	   60	   416	  0.2
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157

				   Sent (MB)							     Received (MB)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	    940.5      174.1	    4.0      744.8	  1.0	    16.6	855.3	   180.1	4.1	 659.0	      1.0	11.0
   2	    855.1      180.2	    4.1      658.9	  1.0	    11.0	940.8	   174.1	4.0	 745.1	      1.0	16.6
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	  1,795.7      354.3	    8.1    1,403.7	  2.0	    27.6      1,796.1	   354.2	8.1    1,404.2	      2.0	27.6
 Avg	    897.8      177.1	    4.0      701.8	  1.0	    13.8	898.0	   177.1	4.0	 702.1	      1.0	13.8
 Std	     60.4	 4.3	    0.1       60.8	  0.0	     4.0	 60.5	     4.3	0.1	  60.9	      0.0	 4.0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 156-1

				  Sent (MB/s)							    Received (MB/s)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	      1.6	 0.3	    0.0        1.2	  0.0	     0.0	  1.4	     0.3	0.0	   1.1	      0.0	 0.0
   2	      1.4	 0.3	    0.0        1.1	  0.0	     0.0	  1.6	     0.3	0.0	   1.2	      0.0	 0.0
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	      3.0	 0.6	    0.0        2.3	  0.0	     0.0	  3.0	     0.6	0.0	   2.3	      0.0	 0.0
 Avg	      1.5	 0.3	    0.0        1.2	  0.0	     0.0	  1.5	     0.3	0.0	   1.2	      0.0	 0.0
 Std	      0.1	 0.0	    0.0        0.1	  0.0	     0.0	  0.1	     0.0	0.0	   0.1	      0.0	 0.0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> null means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	  4,510.5    4,948,751	     0	     0	     0	     0	       4,490.1	  5,055,458	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	  1,575.0    3,389,472	     0	     0	     0	     0	       1,576.8	  3,745,243	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.4	   993	     0	     0	     0	     0		   0.2		863	  0	  0	  0	  0
       fg-pub:1   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:4   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      2.0	 3,083	     0	     0	     0	     0		   1.2	      3,128	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     32.5      155,146	     0	     0	     0	     0		  32.5	    155,146	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	  4,552.8    5,136,326	     0	     0	     0	     0	       4,450.3	  4,890,041	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	  1,571.9    3,500,801	     0	     0	     0	     0	       1,579.2	  3,626,531	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.2	   864	     0	     0	     0	     0		   0.4		996	  0	  0	  0	  0
       fg-pub:1   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      2.0	 3,077	     0	     0	     0	     0		   1.2	      3,122	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      8.3	94,807	     0	     0	     0	     0		   8.3	     94,807	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							 12,255.5   17,233,320	     0	     0	     0	     0	      12,140.1	 17,575,335	  0	  0	  0	  0
 Avg							    720.9    1,013,725	     0	     0	     0	     0		 714.1	  1,033,843	  0	  0	  0	  0
 Std							  1,524.6    1,890,426	     0	     0	     0	     0	       1,505.8	  1,912,323	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 156-1
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> Blank  means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	      7.5	 8,185	     0	     0	     0	     0		   7.4	      8,362	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	      2.6	 5,606	     0	     0	     0	     0		   2.6	      6,195	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	     2	     0	     0	     0	     0		   0.0		  1	  0	  0	  0	  0
       fg-pub:1   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:4   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.1	   257	     0	     0	     0	     0		   0.1		257	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	      7.5	 8,495	     0	     0	     0	     0		   7.4	      8,088	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	      2.6	 5,790	     0	     0	     0	     0		   2.6	      5,998	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	     1	     0	     0	     0	     0		   0.0		  2	  0	  0	  0	  0
       fg-pub:1   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   157	     0	     0	     0	     0		   0.0		157	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							     20.3	28,504	     0	     0	     0	     0		  20.1	     29,070	  0	  0	  0	  0
 Avg							      1.2	 1,677	     0	     0	     0	     0		   1.2	      1,710	  0	  0	  0	  0
 Std							      2.5	 3,127	     0	     0	     0	     0		   2.5	      3,163	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Dynamic Remastering Statistics		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Affinity Objects - Affinity objects remastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot

				   Counts per Ops					 Time per Ops (seconds) 			 Affinity Objects		  Read Mostly Objects
		---------------------------------------------------   -----------------------------------------------------------   -------------------------	--------------------------------------
     Remaster	  Remastered Replay Locks Replay Locks	  Resources														    Begin
  I#	  Ops	     Objects	 Received	  Sent	    Cleaned    Remaster    Freeze   Cleanup    Replay  Fixwrite      Sync	   Begin	  End	       Begin (persistent)	   End
---- --------	------------ ------------ ------------ ------------   --------- --------- --------- --------- --------- ---------   ------------ ------------	------------ ------------ ------------
   1	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       1	    1		   3		1	     3
   2	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       3	    3		   3		1	     3
 ~~~ ~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~   ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~   ~~~~~~~~~~~~ ~~~~~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~
 Avg	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       2	    2		   3		1	     3
 Max				      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       3	    3		   3		1	     3
			  --------------------------------------------------------------------------------------------------------------------


SQL ordered by Elapsed Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Captured SQL account for   98.3% of Total DB Time (s):	   22,807
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	      22,807

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	  Elapsed (s)	  CPU (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	DB time   DB CPU  IO Wait     Gets    Reads  Cluster	Execs
-------------	------------- ----------- ----------- -------------- ------------ ------------ ----------- ------------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	    18,916.82	 1,052.30   17,434.13	   7,437,385	3,585,359    1,237,931	    934.56    1,237,901 	   0.02        0.00	   0.01 	   6.0		2.9	     1.0	0.00	   82.9     67.2      0.8     65.8     84.6	79.4	 84.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     3,480.66	   231.83    3,097.21	   1,580,258	  632,106      655,455	    232.10	218,485 	   0.02        0.00	   0.01 	   7.2		2.9	     3.0	0.00	   15.3     14.8      0.2     14.0     14.9	19.7	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

91g7mg52grvpz	       568.38	    41.64      507.29	     239,448	  109,424	     1	     35.48	      1 	 568.38       41.64	 507.29      239,448.0	  109,424.0	     1.0       35.48	    2.5      2.7      0.0      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0hnb5g8vhm4u9	       568.32	    32.29      525.64	     257,366	  115,071	     1	     22.04	      1 	 568.32       32.29	 525.64      257,366.0	  115,071.0	     1.0       22.04	    2.5      2.1      0.0      2.3	2.7	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

bz8m3my689x30	       568.32	    41.19      508.96	     241,027	  109,757	     1	     33.88	      1 	 568.32       41.19	 508.96      241,027.0	  109,757.0	     1.0       33.88	    2.5      2.6      0.0      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5mrhuphq8yfw1	       568.31	    31.95      526.34	     250,650	  115,093	     1	     21.80	      1 	 568.31       31.95	 526.34      250,650.0	  115,093.0	     1.0       21.80	    2.5      2.0      0.0      2.2	2.7	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0rjvf5n1k4aba	       568.30	    41.65      507.00	     237,422	  109,129	     1	     35.67	      1 	 568.30       41.65	 507.00      237,422.0	  109,129.0	     1.0       35.67	    2.5      2.7      0.0      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

26ka4yp1faxn2	       568.27	    40.62      508.00	     213,991	   98,549	     1	     34.47	      1 	 568.27       40.62	 508.00      213,991.0	   98,549.0	     1.0       34.47	    2.5      2.6      0.0      1.9	2.3	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5yrdyuwb16swu	       568.20	    39.95      510.35	     220,292	   99,794	     1	     31.99	      1 	 568.20       39.95	 510.35      220,292.0	   99,794.0	     1.0       31.99	    2.5      2.6      0.0      1.9	2.4	 2.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6x8682kb2y8vd	       568.20	    39.22      512.72	     219,705	  100,318	     1	     29.99	      1 	 568.20       39.22	 512.72      219,705.0	  100,318.0	     1.0       29.99	    2.5      2.5      0.0      1.9	2.4	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by CPU Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Captured SQL account for   82.4% of Total CPU Time (s):	     1,566
-> Captured PL/SQL account for	 99.7% of Total CPU Time (s):		1,566

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	    CPU (s)   Elapsed (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs       CPU (s)	Elapsed (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	 DB CPU  DB time  IO Wait     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,052.30	18,916.82   17,434.13	   7,437,385	3,585,359    1,237,931	    934.56    1,237,901 	 0.00	       0.02	   0.01 	   6.0		2.9	     1.0	0.00	   67.2     82.9     84.6     65.8     84.6	79.4	 84.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     231.83	 3,480.66    3,097.21	   1,580,258	  632,106      655,455	    232.10	218,485 	 0.00	       0.02	   0.01 	   7.2		2.9	     3.0	0.00	   14.8     15.3     15.0     14.0     14.9	19.7	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

gx190gu1265d2	      41.67	   567.44      506.37	     238,637	  108,746	     1	     35.43	      1 	41.67	     567.44	 506.37      238,637.0	  108,746.0	     1.0       35.43	    2.7      2.5      2.5      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0rjvf5n1k4aba	      41.65	   568.30      507.00	     237,422	  109,129	     1	     35.67	      1 	41.65	     568.30	 507.00      237,422.0	  109,129.0	     1.0       35.67	    2.7      2.5      2.5      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

91g7mg52grvpz	      41.64	   568.38      507.29	     239,448	  109,424	     1	     35.48	      1 	41.64	     568.38	 507.29      239,448.0	  109,424.0	     1.0       35.48	    2.7      2.5      2.5      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	      41.40	   567.52      506.85	     240,645	  109,763	     1	     35.00	      1 	41.40	     567.52	 506.85      240,645.0	  109,763.0	     1.0       35.00	    2.6      2.5      2.5      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bz8m3my689x30	      41.19	   568.32      508.96	     241,027	  109,757	     1	     33.88	      1 	41.19	     568.32	 508.96      241,027.0	  109,757.0	     1.0       33.88	    2.6      2.5      2.5      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

g679149chxm60	      41.04	   567.47      507.31	     239,605	  109,616	     1	     34.69	      1 	41.04	     567.47	 507.31      239,605.0	  109,616.0	     1.0       34.69	    2.6      2.5      2.5      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

32m2a739zbzz3	      41.02	   567.31      508.08	     240,549	  109,692	     1	     33.66	      1 	41.02	     567.31	 508.08      240,549.0	  109,692.0	     1.0       33.66	    2.6      2.5      2.5      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gdjc35y9zsuzm	      40.91	   568.16      506.13	     210,690	   97,384	     1	     35.41	      1 	40.91	     568.16	 506.13      210,690.0	   97,384.0	     1.0       35.41	    2.6      2.5      2.5      1.9	2.3	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by User I/O Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Captured SQL account for   99.7% of Total User I/O Wait Time (s):	      20,596
-> Captured PL/SQL account for	 99.8% of Total User I/O Wait Time (s): 	 20,596

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	 IOWait (s)   Elapsed (s)     CPU (s)		Gets	    Reads	  Rows Cluster (s)	  Execs    IOWait (s)	Elapsed (s)	CPU (s) 	  Gets	      Reads	    Rows Cluster (s)	IO Wait  DB time   DB CPU     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	  17,434.13	18,916.82    1,052.30	   7,437,385	3,585,359    1,237,931	    934.56    1,237,901 	 0.01	       0.02	   0.00 	   6.0		2.9	     1.0	0.00	   84.6     82.9     67.2     65.8     84.6	79.4	 84.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	   3,097.21	 3,480.66      231.83	   1,580,258	  632,106      655,455	    232.10	218,485 	 0.01	       0.02	   0.00 	   7.2		2.9	     3.0	0.00	   15.0     15.3     14.8     14.0     14.9	19.7	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

bz8m3my689x30	     508.96	   568.32	41.19	     241,027	  109,757	     1	     33.88	      1        508.96	     568.32	  41.19      241,027.0	  109,757.0	     1.0       33.88	    2.5      2.5      2.6      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

32m2a739zbzz3	     508.08	   567.31	41.02	     240,549	  109,692	     1	     33.66	      1        508.08	     567.31	  41.02      240,549.0	  109,692.0	     1.0       33.66	    2.5      2.5      2.6      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

g679149chxm60	     507.31	   567.47	41.04	     239,605	  109,616	     1	     34.69	      1        507.31	     567.47	  41.04      239,605.0	  109,616.0	     1.0       34.69	    2.5      2.5      2.6      2.1	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

91g7mg52grvpz	     507.29	   568.38	41.64	     239,448	  109,424	     1	     35.48	      1        507.29	     568.38	  41.64      239,448.0	  109,424.0	     1.0       35.48	    2.5      2.5      2.7      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0rjvf5n1k4aba	     507.00	   568.30	41.65	     237,422	  109,129	     1	     35.67	      1        507.00	     568.30	  41.65      237,422.0	  109,129.0	     1.0       35.67	    2.5      2.5      2.7      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	     506.85	   567.52	41.40	     240,645	  109,763	     1	     35.00	      1        506.85	     567.52	  41.40      240,645.0	  109,763.0	     1.0       35.00	    2.5      2.5      2.6      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	     506.37	   567.44	41.67	     238,637	  108,746	     1	     35.43	      1        506.37	     567.44	  41.67      238,637.0	  108,746.0	     1.0       35.43	    2.5      2.5      2.7      2.1	2.6	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gdjc35y9zsuzm	     506.13	   568.16	40.91	     210,690	   97,384	     1	     35.41	      1        506.13	     568.16	  40.91      210,690.0	   97,384.0	     1.0       35.41	    2.5      2.5      2.6      1.9	2.3	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Gets (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Buffer Gets:	   11,300,825
-> Captured SQL account for   84.7% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id		  Gets	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	    Gets	Reads	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	   Gets    Reads  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	-------------- ------------ ------------- ----------- ----------- ------------ ----------- ------------   -------------- ------------ ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     7,437,385	  3,585,359	18,916.82    1,052.30	17,434.13    1,237,931	    934.56    1,237,901 	     6.0	  2.9	       0.02	   0.00        0.01	     1.0	0.00	   65.8     84.6     82.9     67.2     84.6	79.4	 84.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     1,580,258	    632,106	 3,480.66      231.83	 3,097.21      655,455	    232.10	218,485 	     7.2	  2.9	       0.02	   0.00        0.01	     3.0	0.00	   14.0     14.9     15.3     14.8     15.0	19.7	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

5pj6mtazkhmdd	       519,300		  2	     1.51	 1.34	     0.01	     1	      0.01	      1        519,300.0	  2.0	       1.51	   1.34        0.01	     1.0	0.01	    4.6      0.0      0.0      0.1	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

3kqrku32p6sfn	       519,281		  1	     1.71	 1.54	     0.00	     0	      0.00	      1        519,281.0	  1.0	       1.71	   1.54        0.00	     0.0	0.00	    4.6      0.0      0.0      0.1	0.0	 0.0	  0.0
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ

b7tjac76r5nmd	       274,946	    121,230	   567.86	29.93	   548.36	     1	      0.24	      1        274,946.0    121,230.0	     567.86	  29.93      548.36	     1.0	0.24	    2.4      2.9      2.5      1.9	2.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5wf99mx0r39xn	       271,950	    120,868	   567.61	30.00	   547.63	     1	      0.57	      1        271,950.0    120,868.0	     567.61	  30.00      547.63	     1.0	0.57	    2.4      2.9      2.5      1.9	2.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

0hnb5g8vhm4u9	       257,366	    115,071	   568.32	32.29	   525.64	     1	     22.04	      1        257,366.0    115,071.0	     568.32	  32.29      525.64	     1.0       22.04	    2.3      2.7      2.5      2.1	2.6	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5mrhuphq8yfw1	       250,650	    115,093	   568.31	31.95	   526.34	     1	     21.80	      1        250,650.0    115,093.0	     568.31	  31.95      526.34	     1.0       21.80	    2.2      2.7      2.5      2.0	2.6	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

amnkmrsjh10nv	       244,389	    111,987	   567.83	38.89	   516.58	     1	     27.14	      1        244,389.0    111,987.0	     567.83	  38.89      516.58	     1.0       27.14	    2.2      2.6      2.5      2.5	2.5	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

cjr4y9wb6w69d	       244,036	    111,254	   567.81	39.92	   513.31	     1	     29.32	      1        244,036.0    111,254.0	     567.81	  39.92      513.31	     1.0       29.32	    2.2      2.6      2.5      2.5	2.5	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Reads (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Disk Reads:	   4,235,980
-> Captured SQL account for   99.6% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Reads	       Gets   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	 Reads		 Gets	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	  Reads     Gets  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	------------ -------------- ------------- ----------- ----------- ------------ ----------- ------------   ------------ -------------- ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   3,585,359	  7,437,385	18,916.82    1,052.30	17,434.13    1,237,931	    934.56    1,237,901 	   2.9		  6.0	       0.02	   0.00        0.01	     1.0	0.00	   84.6     65.8     82.9     67.2     84.6	79.4	 84.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     632,106	  1,580,258	 3,480.66      231.83	 3,097.21      655,455	    232.10	218,485 	   2.9		  7.2	       0.02	   0.00        0.01	     3.0	0.00	   14.9     14.0     15.3     14.8     15.0	19.7	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

b7tjac76r5nmd	     121,230	    274,946	   567.86	29.93	   548.36	     1	      0.24	      1      121,230.0	    274,946.0	     567.86	  29.93      548.36	     1.0	0.24	    2.9      2.4      2.5      1.9	2.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5wf99mx0r39xn	     120,868	    271,950	   567.61	30.00	   547.63	     1	      0.57	      1      120,868.0	    271,950.0	     567.61	  30.00      547.63	     1.0	0.57	    2.9      2.4      2.5      1.9	2.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5mrhuphq8yfw1	     115,093	    250,650	   568.31	31.95	   526.34	     1	     21.80	      1      115,093.0	    250,650.0	     568.31	  31.95      526.34	     1.0       21.80	    2.7      2.2      2.5      2.0	2.6	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0hnb5g8vhm4u9	     115,071	    257,366	   568.32	32.29	   525.64	     1	     22.04	      1      115,071.0	    257,366.0	     568.32	  32.29      525.64	     1.0       22.04	    2.7      2.3      2.5      2.1	2.6	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

amnkmrsjh10nv	     111,987	    244,389	   567.83	38.89	   516.58	     1	     27.14	      1      111,987.0	    244,389.0	     567.83	  38.89      516.58	     1.0       27.14	    2.6      2.2      2.5      2.5	2.5	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

cjr4y9wb6w69d	     111,254	    244,036	   567.81	39.92	   513.31	     1	     29.32	      1      111,254.0	    244,036.0	     567.81	  39.92      513.31	     1.0       29.32	    2.6      2.2      2.5      2.5	2.5	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	     110,925	    243,399	   568.13	40.89	   511.15	     1	     31.89	      1      110,925.0	    243,399.0	     568.13	  40.89      511.15	     1.0       31.89	    2.6      2.2      2.5      2.6	2.5	 2.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

07wu9h58t4tgt	     110,574	    242,596	   567.62	40.15	   511.22	     1	     31.23	      1      110,574.0	    242,596.0	     567.62	  40.15      511.22	     1.0       31.23	    2.6      2.1      2.5      2.6	2.5	 2.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by UnOptimized Read Requests (Global)DB/Inst: P30DB/p30db1	Snaps:
-> Total Physical Read Requests:       4,235,362
-> Captured SQL account for    2.4% of Total
-> Total UnOptimized Read Requests:	  4,235,362
-> Captured SQL account for    2.4% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

								       Total													 Per Execution									    Percentage of Total
		------------------------------------------------------------------------------------------------------------------   -----------------------------------------------------------------------------------------------------   -----------------------------------------------------------------
   SQL Id	 UnOptimized	 Requests	 Reads	 Elapsed (s)	 CPU (s)  IOWait (s)	     Rows Cluster (s)	     Execs    UnOptimized     Requests	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)   UnOptimized Requests  Reads DB time DB CPU IO Wait Cluster  Execs
-------------	------------ ------------ ------------ ------------- ----------- ----------- ------------ ----------- ------------   ------------ ------------ ------------ ------------- ----------- ----------- ------------ -----------   ----------- -------- ------ ------- ------ ------- ------- ------
b7tjac76r5nmd	     121,230	  121,230      121,230	      567.86	   29.93      548.36		1	 0.24		 1	121,230.0    121,230.0	  121,230.0	   567.86	29.93	   548.36	   1.0	      0.24	     2.9      2.9    2.9     2.5    1.9     2.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5wf99mx0r39xn	     120,868	  120,868      120,868	      567.61	   30.00      547.63		1	 0.57		 1	120,868.0    120,868.0	  120,868.0	   567.61	30.00	   547.63	   1.0	      0.57	     2.9      2.9    2.9     2.5    1.9     2.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5mrhuphq8yfw1	     115,093	  115,093      115,093	      568.31	   31.95      526.34		1	21.80		 1	115,093.0    115,093.0	  115,093.0	   568.31	31.95	   526.34	   1.0	     21.80	     2.7      2.7    2.7     2.5    2.0     2.6     1.9    0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0hnb5g8vhm4u9	     115,071	  115,071      115,071	      568.32	   32.29      525.64		1	22.04		 1	115,071.0    115,071.0	  115,071.0	   568.32	32.29	   525.64	   1.0	     22.04	     2.7      2.7    2.7     2.5    2.1     2.6     1.9    0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

amnkmrsjh10nv	     111,987	  111,987      111,987	      567.83	   38.89      516.58		1	27.14		 1	111,987.0    111,987.0	  111,987.0	   567.83	38.89	   516.58	   1.0	     27.14	     2.6      2.6    2.6     2.5    2.5     2.5     2.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

cjr4y9wb6w69d	     111,254	  111,254      111,254	      567.81	   39.92      513.31		1	29.32		 1	111,254.0    111,254.0	  111,254.0	   567.81	39.92	   513.31	   1.0	     29.32	     2.6      2.6    2.6     2.5    2.5     2.5     2.5    0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	     110,925	  110,925      110,925	      568.13	   40.89      511.15		1	31.89		 1	110,925.0    110,925.0	  110,925.0	   568.13	40.89	   511.15	   1.0	     31.89	     2.6      2.6    2.6     2.5    2.6     2.5     2.7    0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

07wu9h58t4tgt	     110,574	  110,574      110,574	      567.62	   40.15      511.22		1	31.23		 1	110,574.0    110,574.0	  110,574.0	   567.62	40.15	   511.22	   1.0	     31.23	     2.6      2.6    2.6     2.5    2.6     2.5     2.7    0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

93dyj9jyyg3mj	     110,442	  110,442      110,442	      567.66	   40.64      510.67		1	31.78		 1	110,442.0    110,442.0	  110,442.0	   567.66	40.64	   510.67	   1.0	     31.78	     2.6      2.6    2.6     2.5    2.6     2.5     2.7    0.0
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7m9rphfj2sxqy	     110,266	  110,266      110,266	      567.72	   40.63      509.81		1	33.07		 1	110,266.0    110,266.0	  110,266.0	   567.72	40.63	   509.81	   1.0	     33.07	     2.6      2.6    2.6     2.5    2.6     2.5     2.8    0.0
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Executions (Global)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Executions:	   1,466,483
-> Captured SQL account for   99.5% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Execs   Elapsed (s)     CPU (s)	IOWait (s)	     Gets	 Reads	       Rows Cluster (s)     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	  Execs  DB time   DB CPU  IO Wait     Gets    Reads  Cluster
-------------	------------ ------------- ----------- ----------- -------------- ------------ ------------ -----------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,237,901	 18,916.82    1,052.30	 17,434.13	7,437,385    3,585,359	  1,237,931	 934.56 	   0.02        0.00	   0.01 	   6.0		2.9	     1.0	0.00	   84.4     82.9     67.2     84.6     65.8	84.6	 79.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     218,485	  3,480.66	231.83	  3,097.21	1,580,258      632,106	    655,455	 232.10 	   0.02        0.00	   0.01 	   7.2		2.9	     3.0	0.00	   14.9     15.3     14.8     15.0     14.0	14.9	 19.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

24djtk7r8fz33		 460	      0.11	  0.05	      0.00	      936	     0		452	   0.00 	   0.00        0.00	   0.00 	   2.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

87gaftwrm2h68		 446	      0.01	  0.01	      0.00	      893	     0		  1	   0.00 	   0.00        0.00	   0.00 	   2.0		0.0	     0.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

3dbzmtf9ahvzt		 333	      0.14	  0.11	      0.00	    2,015	     0		333	   0.00 	   0.00        0.00	   0.00 	   6.1		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

f3ww8rgva3hrs		 282	      0.15	  0.05	      0.08	      928	    22		282	   0.01 	   0.00        0.00	   0.00 	   3.3		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

f7xnvp44nukp7		 181	      0.41	  0.05	      0.04	      785	    10		181	   0.34 	   0.00        0.00	   0.00 	   4.3		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

fn5s5p6hr6702		 120	      0.32	  0.04	      0.02	      841	     5		120	   0.25 	   0.00        0.00	   0.00 	   7.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

f80h0xb1qvbsk		  94	      0.07	  0.03	      0.00	       51	     0		 94	   0.01 	   0.00        0.00	   0.00 	   0.5		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

5cu0x10yu88sw		  62	      0.05	  0.02	      0.03	      375	     5		 62	   0.01 	   0.00        0.00	   0.00 	   6.0		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
merge into sys.wri$_index_usage iu us
ing dual on (
iu.obj# = :objn) when mat
ched then update

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Cluster Wait Time (Global)DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Total Cluster Wait Time (s): 	  1,176
-> Captured SQL account for   99.3% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	Cluster (s)   Elapsed (s)     CPU (s)  IOWait (s)	    Gets	Reads	      Rows	  Execs   Cluster (s)	Elapsed (s)	CPU (s)  IOWait (s)	      Gets	  Reads 	Rows	Cluster  DB time   DB CPU     Gets  IO Wait    Reads	Execs
-------------	----------- ------------- ----------- ----------- -------------- ------------ ------------ ------------   ----------- ------------- ----------- ----------- -------------- ------------ ------------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     934.56	18,916.82    1,052.30	17,434.13      7,437,385    3,585,359	 1,237,931    1,237,901 	 0.00	       0.02	   0.00        0.01	       6.0	    2.9 	 1.0	   79.4     82.9     67.2     84.6     65.8	84.6	 84.4
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     232.10	 3,480.66      231.83	 3,097.21      1,580,258      632,106	   655,455	218,485 	 0.00	       0.02	   0.00        0.01	       7.2	    2.9 	 3.0	   19.7     15.3     14.8     15.0     14.0	14.9	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

0rjvf5n1k4aba	      35.67	   568.30	41.65	   507.00	 237,422      109,129		 1	      1 	35.67	     568.30	  41.65      507.00	 237,422.0    109,129.0 	 1.0	    3.0      2.5      2.7      2.5	2.1	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

91g7mg52grvpz	      35.48	   568.38	41.64	   507.29	 239,448      109,424		 1	      1 	35.48	     568.38	  41.64      507.29	 239,448.0    109,424.0 	 1.0	    3.0      2.5      2.7      2.5	2.1	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gx190gu1265d2	      35.43	   567.44	41.67	   506.37	 238,637      108,746		 1	      1 	35.43	     567.44	  41.67      506.37	 238,637.0    108,746.0 	 1.0	    3.0      2.5      2.7      2.5	2.1	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gdjc35y9zsuzm	      35.41	   568.16	40.91	   506.13	 210,690       97,384		 1	      1 	35.41	     568.16	  40.91      506.13	 210,690.0     97,384.0 	 1.0	    3.0      2.5      2.6      2.5	1.9	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

d3r94djtpj7r9	      35.27	   567.97	40.63	   506.43	 215,983       98,808		 1	      1 	35.27	     567.97	  40.63      506.43	 215,983.0     98,808.0 	 1.0	    3.0      2.5      2.6      2.5	1.9	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	      35.00	   567.52	41.40	   506.85	 240,645      109,763		 1	      1 	35.00	     567.52	  41.40      506.85	 240,645.0    109,763.0 	 1.0	    3.0      2.5      2.6      2.5	2.1	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

g679149chxm60	      34.69	   567.47	41.04	   507.31	 239,605      109,616		 1	      1 	34.69	     567.47	  41.04      507.31	 239,605.0    109,616.0 	 1.0	    2.9      2.5      2.6      2.5	2.1	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

26ka4yp1faxn2	      34.47	   568.27	40.62	   508.00	 213,991       98,549		 1	      1 	34.47	     568.27	  40.62      508.00	 213,991.0     98,549.0 	 1.0	    2.9      2.5      2.6      2.5	1.9	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
ASSM bg: segment fix monitor						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM cbk:blocks examined						  1,103 	   1.8		0.0		0.9	      0.1	    0.8 	  1.0
ASSM cbk:blocks marked full						    269 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
ASSM gsp:L1 bitmaps examined						    897 	   1.5		0.0		0.7	      0.1	    0.7 	  0.8
ASSM gsp:L2 bitmap full 						     17 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:L2 bitmaps examined						    180 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
ASSM gsp:Search all							     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search hint							     18 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search steal							      8 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ASSM gsp:bump HWM							      8 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ASSM gsp:get free block 						    834 	   1.4		0.0		0.7	      0.1	    0.6 	  0.8
ASSM gsp:get free data block						    670 	   1.1		0.0		0.6	      0.1	    0.5 	  0.6
ASSM gsp:get free index block						    164 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
ASSM gsp:good hint							    691 	   1.1		0.0		0.6	      0.0	    0.6 	  0.6
ASSM wasted db state change						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Batched IO (bound) vector count 					      7 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO block miss count					      1,194,379        1,975.5		5.4	      987.7	      8.8	  981.5 	994.0
Batched IO double miss count					      1,194,354        1,975.5		5.4	      987.7	      8.8	  981.5 	993.9
Batched IO same unit count						     16 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO single block count					      1,194,360        1,975.5		5.4	      987.7	      8.8	  981.5 	993.9
Batched IO vector block count						      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO vector read count						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Block Cleanout Optim referenced 					     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
CCursor + sql area evicted						     41 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
CPU used by this session						224,801 	 371.8		1.0	      185.9	      9.7	  179.0 	192.8
CPU used when call started						166,520 	 275.4		0.8	      137.7	     11.0	  129.9 	145.5
CR blocks created							  1,483 	   2.5		0.0		1.2	      0.6	    0.8 	  1.7
Cached Commit SCN referenced					      3,181,015        5,261.4	       14.5	    2,630.7	     95.2	2,563.4       2,698.0
Client Advertised Receive Window					    287 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
Client Advertised Send Window						    287 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
Client Path Maximum Transmission Unit(MTU)			      1,405,235        2,324.3		6.4	    1,162.1	  1,575.7	   48.0       2,276.3
Client Send Congestion Window						    410 	   0.7		0.0		0.3	      0.0	    0.3 	  0.3
Client Time (usec) Last Ack Received					     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Received					     20 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Sent					    149 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
Client Time (usec) Round Trip Time					107,214 	 177.3		0.5	       88.7	      3.9	   85.9 	 91.4
Client Time (usec) Round Trip Time Variance				113,088 	 187.0		0.5	       93.5	      7.6	   88.2 	 98.9
Client Total Bytes Acked						637,290        1,054.1		2.9	      527.0	     31.8	  504.6 	549.5
Client Total Bytes Received						249,357 	 412.4		1.1	      206.2	      8.3	  200.3 	212.1
DB time 							      2,400,996        3,971.2	       10.9	    1,985.6	    140.0	1,886.6       2,084.6
DBWR checkpoint buffers written 					 33,810 	  55.9		0.2	       28.0	      1.2	   27.1 	 28.8
DBWR checkpoints							    148 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
DBWR fusion writes							    171 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
DBWR object drop buffers written					     12 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
DBWR transaction table writes						    565 	   0.9		0.0		0.5	      0.0	    0.4 	  0.5
DBWR undo block writes							 20,435 	  33.8		0.1	       16.9	      0.1	   16.9 	 16.9
DFO trees parallelized							     61 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
Effective IO time							140,119 	 231.8		0.6	      231.8	      N/A	  231.8 	231.8
HSC Heap Segment Block Changes						660,505        1,092.5		3.0	      546.2	      7.2	  541.2 	551.3
Heap Segment Array Inserts						    314 	   0.5		0.0		0.3	      0.0	    0.3 	  0.3
Heap Segment Array Updates						     59 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
KTFB alloc req								     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
KTFB alloc space (block)					     10,813,440       17,885.5	       49.3	    8,942.8	  5,288.9	5,202.9      12,682.6
KTFB alloc time (ms)							 54,058 	  89.4		0.2	       44.7	     62.3	    0.6 	 88.8
KTFB apply req								     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
KTFB apply time (ms)							  3,424 	   5.7		0.0		2.8	      1.6	    1.7 	  4.0
KTFB free req								     32 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
KTFB free space (block) 						  2,776 	   4.6		0.0		2.3	      0.3	    2.1 	  2.5
KTFB free time (ms)							    405 	   0.7		0.0		0.3	      0.3	    0.1 	  0.6
PX local messages recv'd						    706 	   1.2		0.0		0.6	      0.7	    0.1 	  1.1

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
PX local messages sent							    706 	   1.2		0.0		0.6	      0.7	    0.1 	  1.1
PX remote messages recv'd						    684 	   1.1		0.0		0.6	      0.0	    0.5 	  0.6
PX remote messages sent 						    695 	   1.1		0.0		0.6	      0.0	    0.6 	  0.6
Parallel operations not downgraded					     90 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
Requests to/from client 						    260 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
SMON posted for undo segment shrink					     18 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
SQL*Net roundtrips to/from client					    221 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
active txn count during cleanout					    483 	   0.8		0.0		0.4	      0.1	    0.3 	  0.5
application wait time							     22 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
background timeouts							 14,762 	  24.4		0.1	       12.2	      0.0	   12.2 	 12.2
blocks cleaned out using minact 					332,994 	 550.8		1.5	      275.4	     61.2	  232.1 	318.7
branch node splits							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
buffer is not pinned count					      9,825,588       16,251.5	       44.8	    8,125.7	  1,252.0	7,240.4       9,011.1
buffer is pinned count						      3,163,934        5,233.1	       14.4	    2,616.6	     48.6	2,582.2       2,650.9
bytes received via SQL*Net from client					423,297 	 700.1		1.9	      350.1	    440.1	   38.8 	661.3
bytes sent via SQL*Net to client					 50,640 	  83.8		0.2	       41.9	     24.5	   24.6 	 59.2
calls to get snapshot scn: kcmgss				      1,688,424        2,792.6		7.7	    1,396.3	     16.6	1,384.6       1,408.1
calls to kcmgas 							427,009 	 706.3		1.9	      353.1	      0.9	  352.5 	353.8
calls to kcmgcs 							  5,690 	   9.4		0.0		4.7	      0.5	    4.3 	  5.1
cell physical IO interconnect bytes				 47,742,573,568   78,966,066.6	  217,477.3    39,483,033.3	328,543.1  39,250,718.2  39,715,348.4
change write time							  2,572 	   4.3		0.0		2.1	      0.0	    2.1 	  2.1
cleanout - number of ktugct calls					  3,177 	   5.3		0.0		2.6	      0.9	    2.0 	  3.3
cleanouts and rollbacks - consistent read gets				     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
cleanouts only - consistent read gets					     72 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
cluster key scan block gets						    207 	   0.3		0.0		0.2	      0.0	    0.1 	  0.2
cluster key scans							    199 	   0.3		0.0		0.2	      0.0	    0.1 	  0.2
cluster wait time							117,596 	 194.5		0.5	       97.3	     11.0	   89.5 	105.0
commit batch/immediate performed					      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit batch/immediate requested					      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: block lost					     31 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: callback failure				     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanouts							660,158        1,091.9		3.0	      545.9	      7.5	  540.6 	551.3
commit cleanouts successfully completed 				660,104        1,091.8		3.0	      545.9	      7.5	  540.6 	551.2
commit immediate performed						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit immediate requested						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit txn count during cleanout					    264 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
concurrency wait time							     43 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
consistent changes						      1,430,586        2,366.2		6.5	    1,183.1	    607.4	  753.6       1,612.6
consistent gets 						     10,119,596       16,737.8	       46.1	    8,368.9	     86.4	8,307.8       8,430.0
consistent gets examination					      4,868,706        8,052.8	       22.2	    4,026.4	     18.0	4,013.7       4,039.1
consistent gets examination (fastpath)				      4,767,147        7,884.8	       21.7	    3,942.4	     99.9	3,871.8       4,013.1
consistent gets from cache					     10,119,595       16,737.8	       46.1	    8,368.9	     86.4	8,307.8       8,430.0
consistent gets pin						      5,250,889        8,685.0	       23.9	    4,342.5	     68.4	4,294.1       4,390.8
consistent gets pin (fastpath)					      1,618,445        2,676.9		7.4	    1,338.5	     42.5	1,308.4       1,368.5
cursor authentications							     45 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
data blocks consistent reads - undo records applied			     75 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
db block changes						      1,803,111        2,982.3		8.2	    1,491.2	     17.1	1,479.0       1,503.3
db block gets							      1,181,207        1,953.7		5.4	      976.9	      8.3	  971.0 	982.7
db block gets direct							    746 	   1.2		0.0		0.6	      0.7	    0.1 	  1.1
db block gets from cache					      1,180,461        1,952.5		5.4	      976.2	      9.0	  969.8 	982.6
db block gets from cache (fastpath)					485,947 	 803.8		2.2	      401.9	      1.9	  400.5 	403.2
deferred (CURRENT) block cleanout applications				334,054 	 552.5		1.5	      276.3	     61.3	  232.9 	319.6
dirty buffers inspected 						534,023 	 883.3		2.4	      441.6	     16.9	  429.7 	453.6
enqueue conversions							  5,240 	   8.7		0.0		4.3	      0.6	    3.9 	  4.8
enqueue releases							631,660        1,044.8		2.9	      522.4	      4.8	  519.0 	525.8
enqueue requests							631,621        1,044.7		2.9	      522.3	      4.8	  518.9 	525.8
enqueue timeouts							     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
enqueue waits								    676 	   1.1		0.0		0.6	      0.1	    0.5 	  0.7
exchange deadlocks							      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
execute count							      1,466,483        2,425.6		6.7	    1,212.8	     15.8	1,201.6       1,223.9

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
file io service time						  5,452,722,323    9,018,673.5	   24,838.3	4,509,336.7   4,031,320.2   1,658,762.9   7,359,910.6
file io wait time						 42,480,760,798   70,263,011.0	  193,508.7    35,131,505.5   1,496,562.5  34,073,276.0  36,189,735.0
free buffer inspected						      4,310,421        7,129.4	       19.6	    3,564.7	     37.5	3,538.2       3,591.2
free buffer requested						      4,280,285        7,079.6	       19.5	    3,539.8	     36.8	3,513.8       3,565.8
gc blocks compressed							 27,251 	  45.1		0.1	       22.5	      9.5	   15.8 	 29.3
gc blocks lost								      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cleanout applied							      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc cleanout saved							     31 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc cr anti locks created						 52,445 	  86.7		0.2	       43.4	      0.4	   43.1 	 43.7
gc cr anti locks expanded						    239 	   0.4		0.0		0.4	      N/A	    0.4 	  0.4
gc cr anti locks shrunk 						  2,287 	   3.8		0.0		1.9	      2.2	    0.3 	  3.5
gc cr block build time							    383 	   0.6		0.0		0.3	      0.2	    0.2 	  0.4
gc cr block flush time							     33 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc cr block receive time						    967 	   1.6		0.0		0.8	      0.4	    0.5 	  1.1
gc cr blocks built							  6,441 	  10.7		0.0		5.3	      2.1	    3.9 	  6.8
gc cr blocks flushed							     67 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
gc cr blocks received							  8,013 	  13.3		0.0		6.6	      3.7	    4.0 	  9.3
gc cr blocks served							  8,009 	  13.2		0.0		6.6	      3.7	    4.0 	  9.3
gc cr multiblock grants received					      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc current block flush time						     73 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gc current block receive time						  1,934 	   3.2		0.0		1.6	      0.1	    1.6 	  1.6
gc current blocks flushed						    103 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gc current blocks pinned						      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks received						 26,735 	  44.2		0.1	       22.1	      1.7	   20.9 	 23.3
gc current blocks served						 26,733 	  44.2		0.1	       22.1	      1.8	   20.9 	 23.4
gc force cr read cr							     49 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
gc force cr read current						      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc kbytes saved 							112,813 	 186.6		0.5	       93.3	     40.2	   64.9 	121.7
gc kbytes sent								165,123 	 273.1		0.8	      136.6	      3.9	  133.8 	139.3
gc local grants 						      2,331,825        3,856.8	       10.6	    1,928.4	    222.2	1,771.3       2,085.5
gc merge pi bg								      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc merge pi fg								    169 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
gc no change made							      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc read time waited							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc read waits								      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass grants 						     52 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc reader bypass waits							      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc remote grants						      1,928,050        3,189.0		8.8	    1,594.5	    187.4	1,462.0       1,727.0
gc status messages received					      1,792,077        2,964.1		8.2	    1,482.0	    115.1	1,400.6       1,563.4
gc status messages sent 					      1,791,939        2,963.9		8.2	    1,481.9	    114.3	1,401.1       1,562.7
gcs affinity lock failures						  1,242 	   2.1		0.0		2.1	      N/A	    2.1 	  2.1
gcs affinity lock grants						250,555 	 414.4		1.1	      207.2	    290.2	    2.0 	412.4
gcs anti-locks created							 52,287 	  86.5		0.2	       43.2	      0.5	   42.9 	 43.6
gcs data block access records					      4,270,099        7,062.7	       19.5	    3,531.4	     31.0	3,509.4       3,553.3
gcs messages sent						      4,645,590        7,683.8	       21.2	    3,841.9	    324.1	3,612.8       4,071.1
gcs read-mostly lock failures						 51,904 	  85.8		0.2	       42.9	     20.7	   28.3 	 57.6
gcs read-mostly lock grants						286,160 	 473.3		1.3	      236.7	    123.9	  149.1 	324.2
ges messages sent							  6,375 	  10.5		0.0		5.3	      0.8	    4.7 	  5.9
global enqueue get time 						  1,045 	   1.7		0.0		0.9	      0.0	    0.8 	  0.9
global enqueue gets sync						271,448 	 449.0		1.2	      224.5	      9.6	  217.7 	231.3
global enqueue releases 						270,346 	 447.2		1.2	      223.6	      9.1	  217.1 	230.0
heap block compress							 17,130 	  28.3		0.1	       14.2	      3.9	   11.4 	 16.9
hot buffers moved to head of LRU					157,978 	 261.3		0.7	      130.6	     21.7	  115.3 	146.0
immediate (CR) block cleanout applications				     91 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
immediate (CURRENT) block cleanout applications 			    461 	   0.8		0.0		0.4	      0.0	    0.4 	  0.4
in call idle wait time						     10,434,620       17,258.8	       47.5	    8,629.4	      3.6	8,626.9       8,632.0
index crx upgrade (positioned)						     60 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
index fast full scans (full)						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
index fetch by key							500,620 	 828.0		2.3	      414.0	    580.5	    3.5 	824.5
index range scans						      1,960,578        3,242.8		8.9	    1,621.4	    597.3	1,199.0       2,043.8

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
index reclamation/extension switch					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
leaf node 90-10 splits							     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
leaf node splits							    161 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
lob reads								    150 	   0.2		0.0		0.1	      0.2	    0.0 	  0.2
lob writes								    244 	   0.4		0.0		0.2	      0.3	    0.0 	  0.4
lob writes unaligned							    243 	   0.4		0.0		0.2	      0.3	    0.0 	  0.4
logical read bytes from cache					 92,570,058,752  153,110,582.1	  421,675.8    76,555,291.0	782,034.7  76,002,309.0  77,108,273.1
logons cumulative							    189 	   0.3		0.0		0.2	      0.0	    0.2 	  0.2
max cf enq hold time							    125 	   0.2		0.0		0.2	      N/A	    0.2 	  0.2
messages received							256,151 	 423.7		1.2	      211.8	      2.9	  209.8 	213.9
messages sent								256,151 	 423.7		1.2	      211.8	      2.9	  209.8 	213.9
no work - consistent read gets					      5,233,521        8,656.2	       23.8	    4,328.1	     65.1	4,282.1       4,374.1
non-idle wait count						      8,781,531       14,524.6	       40.0	    7,262.3	    324.1	7,033.1       7,491.5
non-idle wait time						      2,313,179        3,826.0	       10.5	    1,913.0	    117.2	1,830.1       1,995.9
opened cursors cumulative					      1,687,016        2,790.3		7.7	    1,395.2	     18.4	1,382.2       1,408.1
parse count (describe)							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
parse count (hard)							     59 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
parse count (total)							  3,269 	   5.4		0.0		2.7	      0.5	    2.3 	  3.1
parse time cpu								     24 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse time elapsed							     24 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
physical read IO requests					      4,235,362        7,005.3	       19.3	    3,502.6	     27.1	3,483.5       3,521.8
physical read bytes						 34,701,148,160   57,395,590.6	  158,070.9    28,697,795.3	215,935.3  28,545,106.0  28,850,484.6
physical read total IO requests 				      4,242,952        7,017.8	       19.3	    3,508.9	     27.3	3,489.6       3,528.2
physical read total bytes					 36,064,473,088   59,650,526.2	  164,281.1    29,825,263.1	208,859.2  29,677,577.3  29,972,948.9
physical read total multi block requests				  1,245 	   2.1		0.0		1.0	      0.0	    1.0 	  1.1
physical reads							      4,235,980        7,006.3	       19.3	    3,503.1	     26.4	3,484.5       3,521.8
physical reads cache						      4,235,942        7,006.2	       19.3	    3,503.1	     26.4	3,484.4       3,521.8
physical reads cache prefetch						    620 	   1.0		0.0		1.0	      N/A	    1.0 	  1.0
physical reads direct							     38 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
physical reads direct (lob)						     38 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
physical write IO requests						603,006 	 997.4		2.7	      498.7	      6.5	  494.1 	503.3
physical write bytes						  5,127,077,888    8,480,170.4	   23,354.9	4,240,085.2	 46,406.2   4,207,271.1   4,272,899.3
physical write total IO requests					809,411        1,338.8		3.7	      669.4	      6.6	  664.7 	674.0
physical write total bytes					  5,829,252,608    9,641,565.0	   26,553.5	4,820,782.5	 59,075.7   4,779,009.6   4,862,555.3
physical write total multi block requests				  1,167 	   1.9		0.0		1.0	      0.1	    0.9 	  1.0
physical writes 							625,864        1,035.2		2.9	      517.6	      5.7	  513.6 	521.6
physical writes direct							    755 	   1.2		0.0		0.6	      0.7	    0.1 	  1.1
physical writes direct (lob)						      9 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
physical writes direct temporary tablespace				    617 	   1.0		0.0		0.5	      0.7	    0.0 	  1.0
physical writes from cache						625,109        1,033.9		2.8	      517.0	      6.4	  512.4 	521.5
physical writes non checkpoint						608,958        1,007.2		2.8	      503.6	     10.5	  496.2 	511.0
pinned buffers inspected						  1,057 	   1.7		0.0		0.9	      0.5	    0.5 	  1.2
process last non-idle time						  1,236 	   2.0		0.0		1.0	      0.0	    1.0 	  1.1
queries parallelized							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
recursive calls 						      1,933,323        3,197.7		8.8	    1,598.9	     15.3	1,588.1       1,609.6
recursive cpu usage							213,495 	 353.1		1.0	      176.6	      9.3	  170.0 	183.1
redo KB read								708,078        1,171.2		3.2	      585.6	     10.0	  578.5 	592.6
redo blocks checksummed by FG (exclusive)				403,283 	 667.0		1.8	      333.5	     11.9	  325.1 	341.9
redo blocks written						      1,333,131        2,205.0		6.1	    1,102.5	     21.3	1,087.4       1,117.6
redo blocks written (group 0)						948,153        1,568.2		4.3	      784.1	      7.2	  779.0 	789.2
redo blocks written (group 1)						384,978 	 636.8		1.8	      318.4	     28.5	  298.2 	338.6
redo entries								941,184        1,556.7		4.3	      778.4	      5.5	  774.5 	782.2
redo size							    614,887,804    1,017,022.3	    2,800.9	  508,511.2	 10,130.4     501,347.9     515,674.4
redo size for direct writes						    344 	   0.6		0.0		0.3	      0.1	    0.2 	  0.4
redo subscn max counts							    147 	   0.2		0.0		0.1	      0.1	    0.1 	  0.2
redo synch time 							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo synch time (usec)							 42,090 	  69.6		0.2	       34.8	      7.6	   29.4 	 40.2
redo synch time overhead (usec) 					  1,849 	   3.1		0.0		1.5	      0.7	    1.0 	  2.0
redo synch time overhead count (  2ms)					     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo synch writes							     45 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
redo wastage							     46,041,572       76,152.6	      209.7	   38,076.3	    480.7      37,736.4      38,416.2
redo write active strands						205,114 	 339.3		0.9	      169.6	      0.1	  169.6 	169.7
redo write broadcast ack count						      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write broadcast ack time						  7,787 	  12.9		0.0		6.4	      3.4	    4.0 	  8.9
redo write finish time						  1,043,535,813    1,726,003.6	    4,753.5	  863,001.8	 57,012.7     822,687.7     903,315.8
redo write gather time						     43,579,557       72,080.6	      198.5	   36,040.3	  3,340.6      33,678.1      38,402.4
redo write info find							     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write schedule time					     46,169,454       76,364.2	      210.3	   38,182.1	  3,554.2      35,668.9      40,695.3
redo write size count (   4KB)						127,312 	 210.6		0.6	      105.3	      2.4	  103.6 	107.0
redo write size count (   8KB)						 67,220 	 111.2		0.3	       55.6	      2.9	   53.5 	 57.6
redo write size count (  16KB)						  5,599 	   9.3		0.0		4.6	      0.3	    4.4 	  4.8
redo write size count (  32KB)						    210 	   0.3		0.0		0.2	      0.0	    0.2 	  0.2
redo write size count ( 128KB)						    109 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
redo write size count ( 256KB)						      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write size count ( 512KB)						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo write time 							105,137 	 173.9		0.5	       86.9	      5.7	   82.9 	 90.9
redo write time (usec)						  1,051,377,800    1,738,974.2	    4,789.2	  869,487.1	 56,567.2     829,488.0     909,486.2
redo write total time						  1,065,232,859    1,761,890.4	    4,852.4	  880,945.2	 55,470.8     841,721.5     920,169.0
redo write worker delay (usec)					     24,349,747       40,274.5	      110.9	   20,137.2	  2,004.7      18,719.7      21,554.8
redo write worker delay count						200,457 	 331.6		0.9	      165.8	      0.2	  165.6 	165.9
redo writes								200,457 	 331.6		0.9	      165.8	      0.2	  165.6 	165.9
redo writes (group 0)							121,993 	 201.8		0.6	      100.9	      2.0	   99.5 	102.3
redo writes (group 1)							 78,464 	 129.8		0.4	       64.9	      2.2	   63.3 	 66.5
redo writes adaptive all						200,457 	 331.6		0.9	      165.8	      0.2	  165.6 	165.9
redo writes adaptive worker						200,457 	 331.6		0.9	      165.8	      0.2	  165.6 	165.9
rollback changes - undo records applied 				      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
rollbacks only - consistent read gets					     29 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
root node splits							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
rows fetched via callback						499,064 	 825.4		2.3	      412.7	    581.3	    1.7 	823.8
saved cleanouts 							      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
saved cleanouts successfully completed					      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
securefile allocation bytes						 73,728 	 121.9		0.3	      121.9	      N/A	  121.9 	121.9
securefile allocation chunks						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
securefile bytes non-transformed					 66,616 	 110.2		0.3	      110.2	      N/A	  110.2 	110.2
securefile direct read bytes						311,296 	 514.9		1.4	      514.9	      N/A	  514.9 	514.9
securefile direct read ops						     38 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
securefile direct write bytes						 73,728 	 121.9		0.3	      121.9	      N/A	  121.9 	121.9
securefile direct write ops						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
securefile number of non-transformed flushes				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
segment chunks allocation from dispenser				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
segment dispenser allocations						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
segment prealloc ops							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc time (ms)						    930 	   1.5		0.0		0.8	      1.1	    0.0 	  1.5
session connect time							  4,842 	   8.0		0.0		4.0	      5.1	    0.4 	  7.6
session cursor cache hits					      1,684,422        2,786.0		7.7	    1,393.0	     18.3	1,380.1       1,406.0
session logical reads						     11,300,825       18,691.5	       51.5	    9,345.8	     94.7	9,278.8       9,412.7
shared hash latch upgrades - no wait				      1,651,833        2,732.1		7.5	    1,366.1	     12.8	1,357.0       1,375.1
shared hash latch upgrades - wait					      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
shared io pool buffer get success					     39 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
sorts (memory)								    518 	   0.9		0.0		0.4	      0.1	    0.3 	  0.5
sorts (rows)								768,263        1,270.7		3.5	      635.4	    816.4	   58.1       1,212.7
sql area evicted							     44 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
sql area purged 							     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
summed dirty queue length					      2,891,303        4,782.2	       13.2	    2,391.1	     61.6	2,347.5       2,434.7
switch current caused by our pin					    195 	   0.3		0.0		0.2	      0.0	    0.1 	  0.2
switch current to new buffer						    207 	   0.3		0.0		0.2	      0.0	    0.2 	  0.2
table fetch by rowid						      5,426,339        8,975.1	       24.7	    4,487.6	    633.0	4,040.0       4,935.2
table fetch continued row						     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
table scan blocks gotten						 10,985 	  18.2		0.1		9.1	      4.1	    6.2 	 12.0
table scan disk non-IMC rows gotten					546,150 	 903.3		2.5	      451.7	    138.4	  353.8 	549.5

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
table scan rows gotten							546,150 	 903.3		2.5	      451.7	    138.4	  353.8 	549.5
table scans (short tables)						    702 	   1.2		0.0		0.6	      0.1	    0.5 	  0.6
total cf enq hold time							  6,263 	  10.4		0.0		5.2	      0.7	    4.7 	  5.7
total number of cf enq holders						    317 	   0.5		0.0		0.3	      0.0	    0.2 	  0.3
total number of times SMON posted					     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
transaction rollbacks							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
transaction tables consistent reads - undo records applied	      1,429,531        2,364.5		6.5	    1,182.2	    606.3	  753.5       1,611.0
undo change vector size 					    241,471,916      399,393.7	    1,100.0	  199,696.9	  3,398.4     197,293.8     202,099.9
user I/O wait time						      2,062,228        3,410.9		9.4	    1,705.5	    113.7	1,625.0       1,785.9
user calls								  1,298 	   2.1		0.0		1.1	      0.1	    1.0 	  1.2
user commits								219,529 	 363.1		1.0	      181.6	      2.5	  179.8 	183.4
user logons cumulative							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
user logouts cumulative 						     42 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
workarea executions - optimal						    882 	   1.5		0.0		0.7	      0.3	    0.5 	  0.9
write clones created in foreground					      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Messaging Statistics (Global)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Global Enqueue S-optim Broadcasts sent					     68 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
Global Enqueue S-optim S-lock gets					 28,822 	  47.7		0.1	       23.8	     11.9	   15.4 	 32.3
Global Enqueue S-optim anti-locks crea					     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
acks for commit broadcast(actual)					 66,601 	 110.2		0.3	       55.1	      0.2	   54.9 	 55.2
acks for commit broadcast(logical)					142,613 	 235.9		0.6	      117.9	      3.8	  115.3 	120.6
broadcast msgs on commit(actual)					142,614 	 235.9		0.6	      117.9	      3.8	  115.3 	120.6
broadcast msgs on commit(logical)					200,255 	 331.2		0.9	      165.6	      0.3	  165.4 	165.8
broadcast msgs on commit(wasted)					 72,159 	 119.4		0.3	       59.7	      3.5	   57.2 	 62.2
flow control messages received						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
flow control messages sent						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs assume no cvt							 11,602 	  19.2		0.1		9.6	      1.1	    8.8 	 10.4
gcs ast to fg							      1,790,606        2,961.7		8.2	    1,480.8	    114.1	1,400.2       1,561.5
gcs ast xid								      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs bidless ast to lms							    221 	   0.4		0.0		0.2	      0.2	    0.0 	  0.3
gcs blocked converts							 57,287 	  94.8		0.3	       47.4	      0.4	   47.1 	 47.6
gcs blocked cr converts 						  8,005 	  13.2		0.0		6.6	      1.5	    5.6 	  7.7
gcs compatible basts							     27 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (global)					     45 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (local) 					 21,513 	  35.6		0.1	       17.8	      0.5	   17.4 	 18.1
gcs dbwr flush pi msgs							290,012 	 479.7		1.3	      239.8	     18.1	  227.0 	252.6
gcs dbwr write request msgs						    171 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
gcs force cr grant							      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs grant ast							      1,790,827        2,962.0		8.2	    1,481.0	    113.8	1,400.5       1,561.5
gcs immediate (compatible) converts					 12,659 	  20.9		0.1	       10.5	      1.1	    9.7 	 11.3
gcs immediate (null) converts						548,163 	 906.7		2.5	      453.3	      1.4	  452.3 	454.4
gcs immediate cr (compatible) converts					  1,755 	   2.9		0.0		1.5	      0.1	    1.4 	  1.5
gcs immediate cr (null) converts				      3,102,816        5,132.0	       14.1	    2,566.0	     14.9	2,555.5       2,576.5
gcs lms write request msgs						    123 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gcs msgs process time(ms)						174,512 	 288.6		0.8	      144.3	      3.9	  141.5 	147.1
gcs msgs received						      4,641,999        7,677.8	       21.1	    3,838.9	    322.1	3,611.2       4,066.7
gcs new served by master						    371 	   0.6		0.0		0.6	      N/A	    0.6 	  0.6
gcs pings refused							  2,404 	   4.0		0.0		2.0	      0.6	    1.5 	  2.4
gcs queued converts							      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs reader bypass grant immediate					     56 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gcs refuse xid								      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs refuse xid to fg							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs side channel msgs actual						  8,814 	  14.6		0.0		7.3	      0.1	    7.2 	  7.3
gcs side channel msgs logical					      1,827,753        3,023.1		8.3	    1,511.6	    109.8	1,433.9       1,589.2
gcs stale cr								     49 	   0.1		0.0		0.0	      0.1	    0.0 	  0.1
gcs undo cr								      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ges msgs process time(ms)						    222 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
ges msgs received							  6,352 	  10.5		0.0		5.3	      0.8	    4.7 	  5.9
ges remote lock allocation						     34 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
implicit batch messages received					 60,075 	  99.4		0.3	       49.7	      1.7	   48.5 	 50.9
implicit batch messages sent						 60,075 	  99.4		0.3	       49.7	      1.7	   48.5 	 50.9
messages flow controlled						  4,600 	   7.6		0.0		3.8	      2.6	    2.0 	  5.6
messages queue sent actual						533,992 	 883.2		2.4	      441.6	     68.5	  393.1 	490.1
messages queue sent logical						439,273 	 726.6		2.0	      363.3	     30.0	  342.1 	384.5
messages received actual					      2,552,209        4,221.3	       11.6	    2,110.7	    124.8	2,022.4       2,198.9
messages received logical					      4,648,351        7,688.3	       21.2	    3,844.2	    321.2	3,617.0       4,071.3
messages sent directly						      2,015,050        3,332.9		9.2	    1,666.4	    193.7	1,529.5       1,803.4
messages sent indirectly					      2,454,096        4,059.1	       11.2	    2,029.5	    213.5	1,878.6       2,180.5
messages sent not implicit batched					 34,877 	  57.7		0.2	       28.8	     12.6	   19.9 	 37.8
messages sent pbatched						      2,157,952        3,569.2		9.8	    1,784.6	    108.9	1,707.6       1,861.7
msgs received kernel queue time (ns)				167,349,244,796  276,795,498.6	  762,310.4   1.3839775E+08  12,166,726.5 1.2979457E+08 1.4700092E+08
msgs received queue time (ms)						 63,816 	 105.6		0.3	       52.8	      4.4	   49.7 	 55.9
msgs received queued						      4,648,351        7,688.3	       21.2	    3,844.2	    321.2	3,617.0       4,071.3
msgs sent queue time (ms)						479,251 	 792.7		2.2	      396.3	     39.8	  368.2 	424.5
msgs sent queue time on ksxp (ms)				      2,341,415        3,872.7	       10.7	    1,936.3	      4.3	1,933.3       1,939.4
msgs sent queued							775,475        1,282.6		3.5	      641.3	     56.8	  601.2 	681.4

Global Messaging Statistics (Global)	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
msgs sent queued on ksxp					      2,551,646        4,220.4	       11.6	    2,110.2	    125.4	2,021.6       2,198.9
process batch messages received 					284,138 	 470.0		1.3	      235.0	     71.6	  184.3 	285.6
process batch messages sent						303,171 	 501.4		1.4	      250.7	     76.3	  196.8 	304.6
receiver cycle time							662,139        1,095.2		3.0	      547.6	     24.3	  530.4 	564.8
receiver loop count						      2,833,214        4,686.1	       12.9	    2,343.1	    189.5	2,209.0       2,477.1
			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Absolute Values)	 DB/Inst: P30DB/p30db1	Snaps: 156-157

	    Sessions		   Open Cursors 	    Session Cached Cursors
       -----------------   ---------------------------	 ---------------------------
  I#	  Begin      End	    Begin	   End		  Begin 	 End
----   -------- --------   -------------- ------------	 -------------- ------------
   1	    111       90	      200	   114		  5,469        5,574
   2	    111       91	      169	    92		  5,627        5,713
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~	 ~~~~~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    222      181	      369	   206		 11,096       11,287
 Avg	    111       91	      185	   103		  5,548        5,644
 Std	      0        1	       22	    16		    112 	  98
			  --------------------------------------------------------------------------------------------------------------------

IO Profile (Global)			 DB/Inst: P30DB/p30db1	Snaps: 156-157

Statistic			  Read+Write/s	      Reads/s	    Writes/s
------------------------------ --------------- -------------- --------------
Total Requests			      8,356.22	     7,017.52	    1,338.70
Database Requests		      8,002.29	     7,004.96	      997.33
Optimized Requests			  0.00		 0.00		0.00
Redo Requests				331.54		  N/A	      331.54
Total (MB)				 66.08		56.88		9.19
Database (MB)				 62.82		54.73		8.09
Optimized Total (MB)			  0.00		 0.00		0.00
Redo (MB)				  0.97		  N/A		0.97
Database (blocks)		      8,041.12	     7,005.99	    1,035.13
Via Buffer Cache (blocks)	      8,039.80	     7,005.92	    1,033.88
Direct (blocks) 			  1.31		 0.06		1.25
			  --------------------------------------------------------------------------------------------------------------------

IOStat by Function			 DB/Inst: P30DB/p30db1	Snaps: 156-157

					   Requests						 MB
		       ------------------------------------------------   ------------------------------------------------
															      Waits:	Avg
  I# Function Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s     Count	Time
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   ------- --------
   * Total		  5,037,256    8,331.23    6,993.32    1,337.91 	39,845	     65.90	 56.70	      9.20	4.4M   4.89ms
     Buffer Cache Re	  4,220,713    6,980.74    6,980.74	   0.00 	32,984	     54.55	 54.55	      0.00	4.2M   4.89ms
     DBWR		    603,047	 997.39        0.00	 997.39 	 4,887	      8.08	  0.00	      8.08	   0
     Others		      8,701	  14.39       12.36	   2.03 	 1,320	      2.18	  2.15	      0.03	5135   4.89ms
     LGWR		    204,655	 338.48        0.00	 338.48 	   649	      1.07	  0.00	      1.07	200K   4.96ms
     Direct Writes		 98	   0.16        0.16	   0.00 	     3	      0.00	  0.00	      0.00	  75   3.72ms
     Direct Reads		 42	   0.07        0.06	   0.01 	     2	      0.00	  0.00	      0.00	   0

   1 Total		  2,503,280    4,140.23    3,475.94	 664.29 	19,807	     32.76	 28.20	      4.56	2.2M   5.13ms
     Buffer Cache Re	  2,097,875    3,469.72    3,469.72	   0.00 	16,396	     27.12	 27.12	      0.00	2.1M   5.15ms
     DBWR		    298,748	 494.11        0.00	 494.11 	 2,424	      4.01	  0.00	      4.01	   0
     Others		      4,308	   7.13        6.16	   0.97 	   664	      1.10	  1.08	      0.02	2520   4.75ms
     LGWR		    102,305	 169.20        0.00	 169.20 	   320	      0.53	  0.00	      0.53     99.8K   4.70ms
     Direct Reads		 42	   0.07        0.06	   0.01 	     2	      0.00	  0.00	      0.00	   0
     Direct Writes		  2	   0.00        0.00	   0.00 	     1	      0.00	  0.00	      0.00	   0

   2 Total		  2,533,976    4,191.00    3,517.38	 673.62 	20,038	     33.14	 28.51	      4.63	2.2M   4.66ms
     Buffer Cache Re	  2,122,838    3,511.01    3,511.01	   0.00 	16,588	     27.44	 27.44	      0.00	2.1M   4.63ms
     DBWR		    304,299	 503.29        0.00	 503.29 	 2,463	      4.07	  0.00	      4.07	   0
     Others		      4,393	   7.27        6.21	   1.06 	   656	      1.08	  1.07	      0.02	2615   5.01ms
     LGWR		    102,350	 169.28        0.00	 169.28 	   329	      0.54	  0.00	      0.54    100.2K   5.21ms
     Direct Writes		 96	   0.16        0.16	   0.00 	     2	      0.00	  0.00	      0.00	  75   3.72ms
			  --------------------------------------------------------------------------------------------------------------------

IOStat by File Type			 DB/Inst: P30DB/p30db1	Snaps: 156-157

					   Requests						 MB				Service Time
		       ------------------------------------------------   ------------------------------------------------   -----------------
																Small	 Large
  I# Filetype Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s	 Read	  Read
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   -------- --------
   * Total		  5,037,822    8,332.17    6,994.37    1,337.80 	39,843	     65.90	 56.70	      9.19     4.37ms 1422.71m
     Data File		  4,824,386    7,979.16    6,981.79	 997.38 	37,866	     62.63	 54.54	      8.08     4.37ms
     Log File		    205,985	 340.68        2.31	 338.37 	 1,853	      3.06	  1.99	      1.07	.00ns 1429.54m
     Control File	      7,360	  12.17       10.20	   1.97 	   115	      0.19	  0.16	      0.03     2.83ms
     Temp File			 91	   0.15        0.07	   0.08 	     9	      0.01	  0.01	      0.01     3.54ms  12.33ms

   1 Total		  2,503,565    4,140.70    3,476.46	 664.24 	19,806	     32.76	 28.20	      4.56     4.61ms 1397.74m
     Data File		  2,396,927    3,964.33    3,470.25	 494.09 	18,815	     31.12	 27.11	      4.01     4.61ms
     Log File		    102,985	 170.33        1.17	 169.16 	   926	      1.53	  1.00	      0.53	.00ns 1410.89m
     Control File	      3,564	   5.89        4.97	   0.92 	    56	      0.09	  0.08	      0.01     2.82ms
     Temp File			 89	   0.15        0.07	   0.07 	     9	      0.01	  0.01	      0.01     3.58ms  12.33ms

   2 Total		  2,534,257    4,191.47    3,517.91	 673.56 	20,037	     33.14	 28.50	      4.64     4.13ms 1448.96m
     Data File		  2,427,459    4,014.83    3,511.54	 503.29 	19,051	     31.51	 27.43	      4.08     4.13ms
     Log File		    103,000	 170.35        1.14	 169.21 	   927	      1.53	  0.99	      0.54	.00ns 1448.96m
     Control File	      3,796	   6.28        5.23	   1.05 	    59	      0.10	  0.08	      0.02     2.84ms
     Temp File			  2	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00     2.00ms
			  --------------------------------------------------------------------------------------------------------------------


Segment Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   80.1% of Total Logical Reads:      11,300,825
-> Captured Segments account for   99.6% of Total Physical Reads:	4,235,980
-> Captured Segments account for   99.7% of Total Physical Read Requests:	4,235,362
-> Captured Segments account for   99.7% of Total UnOptimized Read Requests:	   4,235,362
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	      38
-> Captured Segments account for   96.5% of Total Physical Writes:	   625,864
-> Captured Segments account for   99.6% of Total Physical Write Requests:	   603,006
-> Captured Segments account for   17.1% of Total Direct Physical Writes:	      755
-> Captured Segments account for    0.0% of Total Table Scans:		     5
-> Captured Segments account for   78.4% of Total CR Blocks Received:		8,013
-> Captured Segments account for   96.8% of Total Current Blocks Received:	    26,735
-> Captured Segments account for   78.4% of Total CR Blocks Served:	      8,009
-> Captured Segments account for   96.8% of Total Current Blocks Served:	  26,733
-> Captured Segments account for   99.6% of Total Global Cache Remote Grants:	    1,928,050
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
db block changes	 USER4	    IOPS       CF1			       TABLE	  73424      73420	 19,504    N/A	   21.3
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 19,280    N/A	   21.0
			 USER16     IOPS       CF1			       TABLE	  73481      73483	 18,160    N/A	   19.8
			 USER6	    IOPS       CF1			       TABLE	  73431      73435	 17,392    N/A	   19.0
			 USER28     IOPS       CF1			       TABLE	  73541      73548	 17,312    N/A	   18.9
gc cr blocks received	 USER8	    IOPS       CF1			       TABLE	  73443      73446	    459    5.7	   23.2
			 USER23     IOPS       CF1			       TABLE	  73508      73516	    415    5.2	   21.0
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	    398    5.0	   20.1
			 USER31     IOPS       CF1			       TABLE	  73552      73557	    364    4.5	   18.4
			 USER14     IOPS       CF1			       TABLE	  73470      73474	    344    4.3	   17.4
gc cr blocks served	 USER8	    IOPS       CF1			       TABLE	  73443      73446	    459    5.7	   23.2
			 USER23     IOPS       CF1			       TABLE	  73508      73516	    415    5.2	   21.0
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	    398    5.0	   20.1
			 USER31     IOPS       CF1			       TABLE	  73552      73557	    364    4.5	   18.4
			 USER14     IOPS       CF1			       TABLE	  73470      73474	    344    4.3	   17.4
gc cu blocks received	 USER8	    IOPS       CF1			       TABLE	  73443      73446	  1,285    4.8	   22.7
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  1,154    4.3	   20.4
			 USER23     IOPS       CF1			       TABLE	  73508      73516	  1,084    4.1	   19.2
			 USER31     IOPS       CF1			       TABLE	  73552      73557	  1,072    4.0	   19.0
			 USER14     IOPS       CF1			       TABLE	  73470      73474	  1,057    4.0	   18.7
gc cu blocks served	 USER8	    IOPS       CF1			       TABLE	  73443      73446	  1,285    4.8	   22.7
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  1,154    4.3	   20.4
			 USER23     IOPS       CF1			       TABLE	  73508      73516	  1,084    4.1	   19.2
			 USER31     IOPS       CF1			       TABLE	  73552      73557	  1,072    4.0	   19.0
			 USER14     IOPS       CF1			       TABLE	  73470      73474	  1,057    4.0	   18.7
gc remote grants	 USER26     IOPS       CF1			       TABLE	  73533      73537	 62,560    3.2	   20.6
			 USER18     IOPS       CF1			       TABLE	  73492      73497	 61,793    3.2	   20.4
			 USER31     IOPS       CF1			       TABLE	  73552      73557	 59,819    3.1	   19.7
			 USER15     IOPS       CF1			       TABLE	  73472      73477	 59,501    3.1	   19.6
			 USER40     IOPS       CF1			       TABLE	  73603      73605	 59,392    3.1	   19.6
logical reads		 SYS	    SYSTEM     USER$			       TABLE	     22 	10	497,136    4.4	   49.0
			 USER4	    IOPS       I_CF1			       INDEX	  73430      73430	130,320    1.2	   12.8
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	129,984    1.2	   12.8
			 USER3	    IOPS       I_CF1			       INDEX	  73417      73417	128,944    1.1	   12.7
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	128,592    1.1	   12.7
physical reads		 USER4	    IOPS       CF1			       TABLE	  73424      73420	121,154    2.9	   20.8
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	120,845    2.9	   20.7
			 USER16     IOPS       CF1			       TABLE	  73481      73483	114,923    2.7	   19.7
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	114,901    2.7	   19.7
			 USER28     IOPS       CF1			       TABLE	  73541      73548	111,922    2.6	   19.2
physical read requests	 USER4	    IOPS       CF1			       TABLE	  73424      73420	121,154    2.9	   20.8
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	120,845    2.9	   20.7
			 USER16     IOPS       CF1			       TABLE	  73481      73483	114,923    2.7	   19.7
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	114,901    2.7	   19.7
			 USER28     IOPS       CF1			       TABLE	  73541      73548	111,922    2.6	   19.2
physical writes 	 USER2	    IOPS       CF1			       TABLE	  73409      73415	 18,769    N/A	   21.3
			 USER16     IOPS       CF1			       TABLE	  73481      73483	 17,963    N/A	   20.4
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 17,424    N/A	   19.8
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 17,337    N/A	   19.7
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	 16,596    N/A	   18.8
physical writes direct	 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 773525_131 TABLE	  74322      74322	    129    N/A	  100.0
physical write requests  USER2	    IOPS       CF1			       TABLE	  73409      73415	 18,736    3.1	   21.3
			 USER16     IOPS       CF1			       TABLE	  73481      73483	 17,945    3.0	   20.4
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 17,307    2.9	   19.7
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 17,224    2.9	   19.6
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	 16,582    2.7	   18.9
			  --------------------------------------------------------------------------------------------------------------------

Library Cache Activity			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Summarized for all instances in the report
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-	  GES Lock	GES Pin      GES Pin   GES Inval GES Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations	  Requests     Requests     Releases	Requests     dations
--------------- ------------ ------ -------------- ------ ---------- -------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   8	0.0		 0    N/A	   0	    0		 8	      0 	   0	       0	   0
AUDIT POLICY		   4	0.0		 4    0.0	   0	    0		 4	      4 	   4	       0	   0
BODY			 103	0.0	       277    0.0	   0	    0		41	    271 	 271	       0	   0
DBLINK			  10	0.0		 0    N/A	   0	    0		10	      0 	   0	       0	   0
EDITION 		   8	0.0		16    0.0	   0	    0		 8	      8 	   8	       0	   0
HINTSET OBJECT		  15	0.0		15    0.0	   0	    0		15	     15 	  15	       0	   0
INDEX			   9	0.0		 9    0.0	   0	    0		 9	      9 	   9	       0	   0
OBJECT ID		  16  100.0		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
QUEUE			  60	0.0		60    0.0	   0	    0		60	     60 	  60	       0	   0
SCHEMA			  52	0.0		 0    N/A	   0	    0		18	      0 	   0	       0	   0
SQL AREA	       1,225	3.9	 1,468,973    0.0	  12	   19		 0	      0 	   0	       0	   0
SQL AREA BUILD		  39   71.8		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
SQL AREA STATS		  35   85.7		35   85.7	   0	    0		 0	      0 	   0	       0	   0
TABLE/PROCEDURE 	 378	4.8	     6,985    0.8	  18	    0	     1,811	  6,310        6,310	       0	   0
TRANSFORMATION		  60	0.0		60    0.0	   0	    0		60	     60 	  60	       0	   0
TRIGGER 		  11	0.0		11    0.0	   0	    0		 0	     11 	  11	       0	   0
			  --------------------------------------------------------------------------------------------------------------------


PGA Aggregate Target Statistics 	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> all stats are reported in MegaBytes

	  PGA Aggr Target	   Auto PGA Target	      PGA Mem Alloc		Auto Workareas		 Manual Workarea	   Global Mem Bound
       ---------------------   -----------------------	 -----------------------   -----------------------   -----------------------   -----------------------
  I#	    Begin	 End	      Begin	   End		Begin	     End	  Begin        End	    Begin	 End	      Begin	   End
----   ---------- ----------   ------------ ----------	 ------------ ----------   ------------ ----------   ------------ ----------   ------------ ----------
   1	  3,215.0    3,215.0	    1,880.3    1,972.0	      1,341.4	 1,223.4	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
   2	  3,215.0    3,215.0	    2,128.1    2,194.8	      1,083.9	   974.7	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
			  --------------------------------------------------------------------------------------------------------------------


Process Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> B: Begin Snap   E: End Snap I#: Instance number
-> Max Alloc is Maximum PGA allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by instance, Begin/End snapshot, Alloc (MB)

							     Hist
					Avg Std Dev    Max    Max
		     Alloc     Used   Alloc   Alloc  Alloc  Alloc   Num   Num
  I#   Category       (MB)     (MB)    (MB)    (MB)   (MB)   (MB)  Proc Alloc
---- - ---------- -------- -------- ------- ------- ------ ------ ----- -----
   1 B Freeable      158.3	 .0	3.5	6.9	31    N/A    45    45
       Other	     645.4	N/A	5.0	7.2	41     41   130   130
       PL/SQL	      18.1     17.1	 .2	 .3	 2	3   112   111
       SQL	       7.7	6.1	 .1	 .3	 1     11    63    54
       Total	     829.5     23.1	8.8    14.7	75     55   350   340
     E Freeable      146.2	 .0	4.3	7.6	32    N/A    34    34
       Other	     554.5	N/A	5.1	7.7	39     39   109   109
       PL/SQL	       8.2	7.3	 .1	 .3	 2	3    91    91
       SQL	       2.6	1.9	 .1	 .2	 1     11    42    30
       Total	     711.5	9.2	9.5    15.9	74     53   276   264
   2 B Freeable      154.2	 .0	3.9	7.2	31    N/A    40    40
       Other	     651.0	N/A	5.0	7.4	37     37   130   130
       PL/SQL	      17.1     16.1	 .2	 .3	 2	3   112   111
       SQL	       5.7	4.4	 .1	 .2	 1     11    62    52
       Total	     827.9     20.5	9.1    15.2	71     51   344   333
     E Freeable      143.1	 .0	4.2	7.6	31    N/A    34    34
       Other	     565.7	N/A	5.1	8.0	37     37   110   110
       PL/SQL	       8.5	7.7	 .1	 .4	 2	3    92    92
       SQL	       1.5	1.1	 .0	 .1	 1     11    42    28
       Total	     718.8	8.7	9.5    16.0	71     51   278   264
			  --------------------------------------------------------------------------------------------------------------------


init.ora Parameters			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> '*' indicates same value across all instances

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
_ipddb_enable			* TRUE
audit_file_dest 		* /u01/app/oracle/admin/p30db/adump
audit_trail			* DB
cluster_database		* TRUE
compatible			* 19.0.0
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581, +FRA/
db_block_size			* 8192
db_create_file_dest		* +DATA
db_domain			* example.com
db_name 			* p30db
db_recovery_file_dest		* +FRA
db_recovery_file_dest_size	* 274877906944
diagnostic_dest 		* /u01/app/oracle
dispatchers			* (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 		1 1
				2 2
listener_networks		*
local_listener			1  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522
				2  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522
nls_language			* AMERICAN
nls_territory			* AMERICA
open_cursors			* 300
pga_aggregate_target		* 3371171840
processes			* 640
remote_listener 		*  mcracpoc-scan.example.com:1521
remote_login_passwordfile	* EXCLUSIVE
sga_target			* 10133438464
thread				1 1
				2 2
undo_tablespace 		1 UNDOTBS1
				2 UNDOTBS2
			  --------------------------------------------------------------------------------------------------------------------


init.ora Multi-valued Parameters	 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> This section only displays parameters that have more one value
-> '*' indicates same value across all instances
-> '(NULL)' indicates that the	parameter value was not set
-> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581
				* +FRA/P30DB/CONTROLFILE/current.257.1031594583
			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Events 		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1936	   76.68
db file sequential read 	 70.51 TABLE ACCESS - BY INDEX ROWID BAT   70.51
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


gc cr grant 2-way		  3.37 TABLE ACCESS - BY INDEX ROWID BAT    3.37


CPU + Wait for CPU		  2.26 TABLE ACCESS - BY INDEX ROWID BAT    1.70

	  35dumc2tpr9dv 	   203653710		      369	   14.61
db file sequential read 	 12.87 UPDATE				   12.87
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Row Sources		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1936	   76.68
TABLE ACCESS - BY INDEX ROWID BATCHED	   76.09 db file sequential read   70.51
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      369	   14.61
UPDATE					   14.45 db file sequential read   12.87
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top Sessions				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
       10,32406       2.30 db file sequential read		2.02
USER17		     sqlplus@mcracp...m (TNS V1-V3)	  51/60 [ 84%]	     10

       11,22304       2.30 db file sequential read		2.18
USER25		     sqlplus@mcracp...m (TNS V1-V3)	  55/60 [ 91%]	      8

       13,27134       2.30 db file sequential read		2.10
USER12		     sqlplus@mcracp...m (TNS V1-V3)	  53/60 [ 88%]	      4

       17,49539       2.30 db file sequential read		1.98
USER22		     sqlplus@mcracp...m (TNS V1-V3)	  50/60 [ 83%]	      5

       20,44918       2.30 db file sequential read		2.02
USER8		     sqlplus@mcracp...m (TNS V1-V3)	  51/60 [ 84%]	      5

			  --------------------------------------------------------------------------------------------------------------------

Top Blocking Sessions			 DB/Inst: P30DB/p30db1	Snaps: 156-157

		  No data exists for this section of the report.
			  --------------------------------------------------------------------------------------------------------------------

Top PL/SQL Procedures			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       14.77
   SQL								       14.77
			  --------------------------------------------------------------------------------------------------------------------

Top Events				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     83.37	34.87
log file parallel write 	    System I/O	    BACKGROUND
      4.16	 1.74
CPU + Wait for CPU		    CPU 	    FOREGROUND
      3.40	 1.42
gc cr grant 2-way		    Cluster	    FOREGROUND
      3.37	 1.41
CPU + Wait for CPU		    CPU 	    BACKGROUND
      2.41	 1.01
			  --------------------------------------------------------------------------------------------------------------------

Top Event P1/P2/P3 Values		 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 83.37		  "2","24968196","1"	   0.04
file#			   block#		      blocks

log file parallel write 	  4.16			 "1","4","1"	   0.87
files			   blocks		      requests

			  --------------------------------------------------------------------------------------------------------------------

Top DB Objects				 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available.

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------------
	  73424       2.30 db file sequential read		2.30
USER4.CF1 (TABLE)				      IOPS
	  73439       2.30 db file sequential read		2.22
USER9.CF1 (TABLE)				      IOPS
	  73464       2.30 db file sequential read		2.10
USER12.CF1 (TABLE)				      IOPS
	  73481       2.30 db file sequential read		2.22
USER16.CF1 (TABLE)				      IOPS
	  73546       2.30 db file sequential read		2.10
USER29.CF1 (TABLE)				      IOPS
			  --------------------------------------------------------------------------------------------------------------------

Activity Over Time			 DB/Inst: P30DB/p30db1	Snaps: 156-157
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
15:44:14   (46 secs)	  217 db file sequential read		  187	 7.40
			      log file parallel write		   10	 0.40
			      CPU + Wait for CPU		    8	 0.32
15:45:00   (5.0 min)	1,296 db file sequential read		1,094	43.31
			      CPU + Wait for CPU		   84	 3.33
			      log file parallel write		   47	 1.86
15:50:00   (4.3 min)	1,013 db file sequential read		  825	32.66
			      CPU + Wait for CPU		   55	 2.18
			      log file parallel write		   48	 1.90
			  --------------------------------------------------------------------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_157'
	  ------------------------------------------

Analysis Period
---------------
AWR snapshot range from 156 to 157.
Time period starts at 10-FEB-20 03.44.14 PM
Time period ends at 10-FEB-20 03.54.19 PM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 22807 seconds.
The average number of active sessions was 37.7.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     37.47 | 99.4	  2
2  "User I/O" wait Class		     34.02 | 90.24	  0
3  Top Segments by "User I/O" and "Cluster"  4.67 | 12.38	  5
4  Global Cache Messaging		     1.84 | 4.87	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 37.53 active sessions, 99.4% of total activity.
---------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  52.56	    ADDM:3393773525_1_157
    2	    p30db2  47.44	    ADDM:3393773525_2_157

   Recommendation 1: SQL Tuning
   Estimated benefit is 31.47 active sessions, 83.49% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 1237901 times and
      had an average elapsed time of 0.015 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 6 active sessions, 15.91% of total activity.
   -----------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 218485 times and
      had an average elapsed time of 0.015 seconds.


Finding 2: "User I/O" wait Class
Impact is 34.07 active sessions, 90.24% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  52.36	    ADDM:3393773525_1_157
    2	    p30db2  47.64	    ADDM:3393773525_2_157

   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.68 active sessions, 12.38% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  60		    ADDM:3393773525_1_157
    2	    p30db2  40		    ADDM:3393773525_2_157

   Recommendation 1: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER4.CF1" with
      object ID 73424.
      Related Object
	 Database object with ID 73424.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 121154
      physical reads, 17424 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER9.CF1" with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100220
      physical reads, 14261 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER12.CF1" with
      object ID 73464.
      Related Object
	 Database object with ID 73464.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 99630
      physical reads, 14251 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER16.CF1" with
      object ID 73481.
      Related Object
	 Database object with ID 73481.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114923
      physical reads, 17963 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER29.CF1" with
      object ID 73546.
      Related Object
	 Database object with ID 73546.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100720
      physical reads, 14234 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 34.02 active sessions, 90.24% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.84 active sessions, 4.87% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  55.26	    ADDM:3393773525_1_157
    2	    p30db2  44.74	    ADDM:3393773525_2_157

   Recommendation 1: Application Analysis
   Estimated benefit is 1.84 active sessions, 4.87% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 87% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.94 active sessions, 5.14% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    1	    p30db1  mcracpoc1.example.com  19.82	    52.48
    2	    p30db2  mcracpoc2.example.com  17.94	    47.52

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

End of Report
Report written to awr_rac.txt
SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  html







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
		    70	08 Feb 2020 10:44    1
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
		    83	08 Feb 2020 19:00    1
		    84	08 Feb 2020 20:00    1
		    85	08 Feb 2020 21:00    1
		    86	08 Feb 2020 22:00    1
		    87	08 Feb 2020 23:00    1
		    88	09 Feb 2020 00:00    1
		    89	09 Feb 2020 01:00    1
		    90	09 Feb 2020 02:00    1
		    91	09 Feb 2020 03:00    1
		    92	09 Feb 2020 04:00    1
		    93	09 Feb 2020 05:00    1
		    94	09 Feb 2020 06:00    1
		    95	09 Feb 2020 07:00    1
		    96	09 Feb 2020 08:00    1
		    97	09 Feb 2020 09:00    1
		    98	09 Feb 2020 10:00    1
		    99	09 Feb 2020 11:20    1
		   100	09 Feb 2020 11:30    1
		   101	09 Feb 2020 11:33    1
		   102	09 Feb 2020 11:43    1
		   103	09 Feb 2020 11:46    1
		   104	09 Feb 2020 11:56    1
		   105	09 Feb 2020 11:58    1
		   106	09 Feb 2020 12:08    1
		   107	09 Feb 2020 13:00    1
		   108	09 Feb 2020 14:00    1
		   109	09 Feb 2020 14:09    1
		   110	09 Feb 2020 14:19    1
		   111	09 Feb 2020 14:52    1
		   112	09 Feb 2020 15:02    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		   113	09 Feb 2020 16:00    1
		   114	09 Feb 2020 17:00    1
		   115	09 Feb 2020 18:00    1
		   116	09 Feb 2020 19:00    1
		   117	09 Feb 2020 20:00    1
		   118	09 Feb 2020 20:30    1
		   119	09 Feb 2020 20:40    1
		   120	09 Feb 2020 20:47    1
		   121	09 Feb 2020 20:57    1
		   122	09 Feb 2020 22:00    1
		   123	09 Feb 2020 23:00    1
		   124	10 Feb 2020 00:00    1
		   125	10 Feb 2020 01:00    1
		   126	10 Feb 2020 02:00    1
		   127	10 Feb 2020 03:00    1
		   128	10 Feb 2020 04:00    1
		   129	10 Feb 2020 05:00    1
		   130	10 Feb 2020 06:00    1
		   131	10 Feb 2020 07:00    1
		   132	10 Feb 2020 08:00    1
		   133	10 Feb 2020 09:00    1
		   134	10 Feb 2020 09:08    1
		   135	10 Feb 2020 09:18    1
		   136	10 Feb 2020 10:00    1
		   137	10 Feb 2020 10:47    1
		   138	10 Feb 2020 10:58    1
		   139	10 Feb 2020 11:09    1
		   140	10 Feb 2020 11:19    1
		   141	10 Feb 2020 11:21    1
		   142	10 Feb 2020 11:31    1
		   143	10 Feb 2020 13:00    1
		   144	10 Feb 2020 14:00    1
		   145	10 Feb 2020 14:19    1
		   146	10 Feb 2020 14:29    1
		   147	10 Feb 2020 14:33    1
		   148	10 Feb 2020 14:41    1
		   149	10 Feb 2020 14:47    1
		   150	10 Feb 2020 14:57    1
		   151	10 Feb 2020 15:04    1
		   152	10 Feb 2020 15:05    1
		   153	10 Feb 2020 15:15    1
		   154	10 Feb 2020 15:24    1
		   155	10 Feb 2020 15:34    1
		   156	10 Feb 2020 15:44    1
		   157	10 Feb 2020 15:54    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 156

End   Snapshot Id specified: 157



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_156_157.html.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.html

<html lang="en"><head><title>AWR RAC Report for DB: P30DB, Snaps: 156-157</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY REPORT (RAC)

</h1>
<p />Database Summary<p />
<ul>
</ul>
<table border="0" class="tdiff" summary="Database Summary"><tr>
<th class="awrbg" colspan=" 8" id="Database">Database</th>
<th class="awrbg" colspan=" 2" id="SnapshotIds">Snapshot Ids</th>
<th class="awrbg" colspan=" 2" id="NumberofInstances">Number of Instances</th>
<th class="awrbg" colspan=" 2" id="NumberofHosts">Number of Hosts</th>
<th class="awrbg" colspan=" 2" id="ReportTotal(minutes)">Report Total (minutes)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Id">Id</th><th class="awrbg" scope="col" id="Name">Name</th><th class="awrbg" scope="col" id="UniqueName">Unique Name</th><th class="awrbg" scope="col" id="Role">Role</th><th class="awrbg" scope="col" id="Edition">Edition</th><th class="awrbg" scope="col" id="RAC">RAC</th><th class="awrbg" scope="col" id="CDB">CDB</th><th class="awrbg" scope="col" id="BlockSize">Block Size</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="Elapsedtime">Elapsed time</th></tr>
<tr><td align="right" headers="Database Id" class='awrclb'>3393773525</td><td headers="Database Name" class='awrc'>P30DB</td><td headers="Database UniqueName" class='awrc'>p30db</td><td headers="Database Role" class='awrc'>PRIMARY</td><td headers="Database Edition" class='awrc'>EE</td><td headers="Database RAC" class='awrc'>YES</td><td headers="Database CDB" class='awrc'>NO</td><td align="right" headers="Database BlockSize" class='awrc'>8192</td><td align="right" headers="SnapshotIds Begin" class='awrclb'>156</td><td align="right" headers="SnapshotIds End" class='awrc'>157</td><td align="right" headers="NumberofInstances InReport" class='awrclb'>2</td><td align="right" headers="NumberofInstances Total" class='awrc'>2</td><td align="right" headers="NumberofHosts InReport" class='awrclb'>2</td><td align="right" headers="NumberofHosts Total" class='awrc'>2</td><td align="right" headers="ReportTotal(minutes) DBtime" class='awrclb'>380.11</td><td align="right" headers="ReportTotal(minutes) Elapsedtime" class='awrcrb'>10.08</td></tr>
</table><p />
<p />Database Instances Included In Report<p />
<ul>
<li class="awr"> Listed in order of instance number, I#</li>
</ul>
<table border="0" class="tdiff" summary="Database Instances Included In Report. . Listed in order of instance number, I#"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Host</th><th class="awrbg" scope="col">Startup</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">Elapsed Time(min)</th><th class="awrbg" scope="col">DB time(min)</th><th class="awrbg" scope="col">Up Time(hrs)</th><th class="awrbg" scope="col">Avg Active Sessions</th><th class="awrbg" scope="col">Platform</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>p30db1</td><td class='awrc'>mcracpoc1.example.com</td><td class='awrc'>10-Feb-20 14:15</td><td class='awrc'>10-Feb-20 15:44</td><td class='awrc'>10-Feb-20 15:54</td><td class='awrc'>19.0.0.0.0</td><td align="right" class='awrc'>10.07</td><td align="right" class='awrc'>199.49</td><td align="right" class='awrc'>1.65</td><td align="right" class='awrc'>19.82</td><td class='awrc'>Linux x86 64-bit</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>p30db2</td><td class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>10-Feb-20 14:15</td><td class='awrnc'>10-Feb-20 15:44</td><td class='awrnc'>10-Feb-20 15:54</td><td class='awrnc'>19.0.0.0.0</td><td align="right" class='awrnc'>10.07</td><td align="right" class='awrnc'>180.62</td><td align="right" class='awrnc'>1.66</td><td align="right" class='awrnc'>17.94</td><td class='awrnc'>Linux x86 64-bit</td></tr>
</table><p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>37.76</td><td align="right" class='awrc'>99.40</td><td scope="row" class='awrc'>ADDM:3393773525_157</td><td class='awrc'>10-Feb-20 15:44</td><td class='awrc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>37.76</td><td align="right" class='awrnc'>90.24</td><td scope="row" class='awrnc'>ADDM:3393773525_157</td><td class='awrnc'>10-Feb-20 15:44</td><td class='awrnc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>37.76</td><td align="right" class='awrc'>12.38</td><td scope="row" class='awrc'>ADDM:3393773525_157</td><td class='awrc'>10-Feb-20 15:44</td><td class='awrc'>10-Feb-20 15:54</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>37.76</td><td align="right" class='awrnc'>4.87</td><td scope="row" class='awrnc'>ADDM:3393773525_157</td><td class='awrnc'>10-Feb-20 15:44</td><td class='awrnc'>10-Feb-20 15:54</td></tr>
</table><p />
<p />Cache Sizes<p />
<ul>
<li class="awr"> All values are in Megabytes </li>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values displayed only if different from Begin values</li>
</ul>
<table border="0" class="tdiff" summary="Cache Sizes. . All values are in Megabytes. Listed in order of instance number, I#. End values displayed only if different from Begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="MemoryTarget">Memory Target</th>
<th class="awrbg" colspan=" 2" id="SgaTarget">Sga Target</th>
<th class="awrbg" colspan=" 2" id="DBCache">DB Cache</th>
<th class="awrbg" colspan=" 2" id="SharedPool">Shared Pool</th>
<th class="awrbg" colspan=" 2" id="LargePool">Large Pool</th>
<th class="awrbg" colspan=" 2" id="JavaPool">Java Pool</th>
<th class="awrbg" colspan=" 2" id="StreamsPool">Streams Pool</th>
<th class="awrbg" colspan=" 2" id="PGATarget">PGA Target</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col">Log Buffer</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="MemoryTarget Begin" class='awrclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrclb'>8,000</td><td align="right" headers="DBCache End" class='awrc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrclb'>1,440</td><td align="right" headers="SharedPool End" class='awrc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrclb'>64</td><td align="right" headers="LargePool End" class='awrc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrclb'>3,232</td><td align="right" headers="PGATarget End" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="MemoryTarget Begin" class='awrnclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrnc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrnclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrnc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrnclb'>7,840</td><td align="right" headers="DBCache End" class='awrnc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrnclb'>1,600</td><td align="right" headers="SharedPool End" class='awrnc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrnclb'>64</td><td align="right" headers="LargePool End" class='awrnc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrnc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrnc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrnclb'>3,232</td><td align="right" headers="PGATarget End" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>9,664</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>7,920</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>1,520</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>64</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3,232</td><td align="right" class='awrcrbt'>&#160;</td><td align="right" class='awrct'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Min</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>9,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7,840</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,440</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3,232</td><td align="right" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Max</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>9,664</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>8,000</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>1,600</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>64</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>3,232</td><td align="right" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
</table><p />

<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#12010">OS Statistics</a></li>
<li class="awr"><a class="awr" href="#629">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#621">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#639">Global Activity Load Profile</a></li>
<li class="awr"><a class="awr" href="#605">Global Cache and Enqueue Statistics Summary</a></li>
<li class="awr"><a class="awr" href="#12033">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#12034">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#607">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#608">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#622">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#623">Global Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#630">I/O Statistics</a></li>
<li class="awr"><a class="awr" href="#12083">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#633">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#638">Supplemental Information</a></li>
<li class="awr"><a class="awr" href="#43">Active Session History(ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99994">ADDM Reports</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<a class="awr" name="12010"></a>
<h3 class="awr">OS Statistics By Instance</h3>
<ul>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values are diplayed only if different from begin values</li>
</ul>
<table border="0" class="tdiff" summary="OS Statistics By Instance. . Listed in order of instance number, I#. End values are diplayed only if different from begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="CPU">CPU</th>
<th class="awrbg" colspan=" 2" id="Load">Load</th>
<th class="awrbg" colspan=" 5" id="%CPU">% CPU</th>
<th class="awrbg" colspan=" 3" id="Time(s)">Time (s)</th>
<th class="awrbg" colspan=" 1" id="Memory">Memory</th>
<th class="awrbg" colspan=" 4" id="EndValues">End Values</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="%Busy">% Busy</th><th class="awrbg" scope="col" id="%Usr">% Usr</th><th class="awrbg" scope="col" id="%Sys">% Sys</th><th class="awrbg" scope="col" id="%WIO">% WIO</th><th class="awrbg" scope="col" id="%Idl">% Idl</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Idle">Idle</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="MB">MB</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Memory(M)">Memory (M)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="CPU #CPUs" class='awrclb'>8</td><td align="right" headers="CPU #Cores" class='awrc'>4</td><td align="right" headers="CPU #Sckts" class='awrc'>1</td><td align="right" headers="Load Begin" class='awrclb'>9.58</td><td align="right" headers="Load End" class='awrc'>13.17</td><td align="right" headers="%CPU %Busy" class='awrclb'>45.37</td><td align="right" headers="%CPU %Usr" class='awrc'>15.62</td><td align="right" headers="%CPU %Sys" class='awrc'>20.53</td><td align="right" headers="%CPU %WIO" class='awrc'>45.99</td><td align="right" headers="%CPU %Idl" class='awrc'>54.63</td><td align="right" headers="Time(s) Busy" class='awrclb'>2,024.31</td><td align="right" headers="Time(s) Idle" class='awrc'>2,437.04</td><td align="right" headers="Time(s) Total" class='awrc'>4,461.35</td><td align="right" headers="Memory MB" class='awrclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="CPU #CPUs" class='awrnclb'>8</td><td align="right" headers="CPU #Cores" class='awrnc'>4</td><td align="right" headers="CPU #Sckts" class='awrnc'>1</td><td align="right" headers="Load Begin" class='awrnclb'>10.06</td><td align="right" headers="Load End" class='awrnc'>13.03</td><td align="right" headers="%CPU %Busy" class='awrnclb'>41.44</td><td align="right" headers="%CPU %Usr" class='awrnc'>14.06</td><td align="right" headers="%CPU %Sys" class='awrnc'>19.19</td><td align="right" headers="%CPU %WIO" class='awrnc'>48.73</td><td align="right" headers="%CPU %Idl" class='awrnc'>58.56</td><td align="right" headers="Time(s) Busy" class='awrnclb'>1,841.39</td><td align="right" headers="Time(s) Idle" class='awrnc'>2,602.04</td><td align="right" headers="Time(s) Total" class='awrnc'>4,443.43</td><td align="right" headers="Memory MB" class='awrnclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrnclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrnc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrnc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclbt'>3,865.70</td><td align="right" class='awrct'>5,039.08</td><td align="right" class='awrct'>8,904.78</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="629"></a>
<h2 class="awr">
Time Model Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12014">Time Model</a></li>
<li class="awr"><a class="awr" href="#12015">Time Model - % of DB time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12014"></a>
<h3 class="awr">Time Model</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Time Model"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">DB time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">SQL Exec Ela (s)</th><th class="awrbg" scope="col">Parse Ela (s)</th><th class="awrbg" scope="col">Hard Parse Ela (s)</th><th class="awrbg" scope="col">PL/SQL Ela (s)</th><th class="awrbg" scope="col">Java Ela (s)</th><th class="awrbg" scope="col">bg time (s)</th><th class="awrbg" scope="col">bg CPU (s)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>11,969.36</td><td align="right" class='awrc'>824.68</td><td align="right" class='awrc'>11,968.84</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>33.75</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>913.17</td><td align="right" class='awrc'>457.06</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>10,837.42</td><td align="right" class='awrnc'>741.35</td><td align="right" class='awrnc'>10,836.66</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>30.18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>976.22</td><td align="right" class='awrnc'>451.66</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>22,806.78</td><td align="right" class='awrct'>1,566.03</td><td align="right" class='awrct'>22,805.50</td><td align="right" class='awrct'>0.45</td><td align="right" class='awrct'>0.32</td><td align="right" class='awrct'>63.93</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,889.40</td><td align="right" class='awrct'>908.72</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>11,403.39</td><td align="right" class='awrnc'>783.01</td><td align="right" class='awrnc'>11,402.75</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>31.96</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>944.70</td><td align="right" class='awrnc'>454.36</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>800.40</td><td align="right" class='awrc'>58.92</td><td align="right" class='awrc'>800.58</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>2.52</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>44.58</td><td align="right" class='awrc'>3.82</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12015"></a>
<h3 class="awr">Time Model - % of DB time</h3>
<ul>
<li class="awr"> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]</li>
</ul>
<table border="0" class="tdiff" summary="Time Model - % of DB time. . % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 6" id="%DBtime">% DB time</th>
<td>&#160;</td><th class="awrbg" colspan=" 1" id="%bgtime">% bg time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">% Total DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="SQLExecEla">SQL Exec Ela</th><th class="awrbg" scope="col" id="ParseEla">Parse Ela</th><th class="awrbg" scope="col" id="HardParse">Hard Parse</th><th class="awrbg" scope="col" id="PL/SQLEla">PL/SQL Ela</th><th class="awrbg" scope="col" id="JavaEla">Java Ela</th><th class="awrbg" scope="col">% Total bg time</th><th class="awrbg" scope="col" id="bgCPU">bg CPU</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>52.48</td><td align="right" headers="%DBtime DBCPU" class='awrclb'>6.89</td><td align="right" headers="%DBtime SQLExecEla" class='awrc'>100.00</td><td align="right" headers="%DBtime ParseEla" class='awrc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrc'>0.00</td><td align="right" class='awrc'>48.33</td><td align="right" headers="%bgtime bgCPU" class='awrcbb'>50.05</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>47.52</td><td align="right" headers="%DBtime DBCPU" class='awrnclb'>6.84</td><td align="right" headers="%DBtime SQLExecEla" class='awrnc'>99.99</td><td align="right" headers="%DBtime ParseEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrnc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrnc'>0.00</td><td align="right" class='awrnc'>51.67</td><td align="right" headers="%bgtime bgCPU" class='awrncbb'>46.27</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrclbt'>6.87</td><td align="right" class='awrct'>99.99</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrcbbt'>48.16</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="621"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12011">Foreground Wait Classes -	% of Total DB time</a></li>
<li class="awr"><a class="awr" href="#12012">Foreground Wait Classes</a></li>
<li class="awr"><a class="awr" href="#12013">Foreground Wait Classes -	% of DB time </a></li>
<li class="awr"><a class="awr" href="#12050">Top Timed Events</a></li>
<li class="awr"><a class="awr" href="#12051">Top Timed Foreground Events</a></li>
<li class="awr"><a class="awr" href="#12052">Top Timed Background Events</a></li>
<li class="awr"><a class="awr" href="#12053">Foreground Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12054">Background Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12055">Wait Event Histogram (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12011"></a>
<h3 class="awr">Foreground Wait Classes -  % of Total DB time</h3>
<ul>
<li class="awr"> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of Total DB time. . Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time"><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">User I/O</th><th class="awrbg" scope="col">Sys I/O</th><th class="awrbg" scope="col">Other</th><th class="awrbg" scope="col">Applic</th><th class="awrbg" scope="col">Commit</th><th class="awrbg" scope="col">Network</th><th class="awrbg" scope="col">Concurcy</th><th class="awrbg" scope="col">Config</th><th class="awrbg" scope="col">Cluster</th><th class="awrbg" scope="col">Admin</th><th class="awrbg" scope="col">Scheduler</th><th class="awrbg" scope="col">DB CPU</th></tr>
<tr><td class='awrc'>&#160;</td><td align="right" class='awrc'>90.24</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.14</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>6.87</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12012"></a>
<h3 class="awr">Foreground Wait Classes</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">User I/O(s)</th><th class="awrbg" scope="col">Sys I/O(s)</th><th class="awrbg" scope="col">Other(s)</th><th class="awrbg" scope="col">Applic (s)</th><th class="awrbg" scope="col">Commit (s)</th><th class="awrbg" scope="col">Network (s)</th><th class="awrbg" scope="col">Concurcy (s)</th><th class="awrbg" scope="col">Config (s)</th><th class="awrbg" scope="col">Cluster (s)</th><th class="awrbg" scope="col">Admin (s)</th><th class="awrbg" scope="col">Scheduler (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>10,775.06</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>1.23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>632.98</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>824.68</td><td align="right" class='awrc'>11,969.36</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>9,804.77</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>1.43</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>540.23</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>741.35</td><td align="right" class='awrnc'>10,837.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>20,579.83</td><td align="right" class='awrct'>0.41</td><td align="right" class='awrct'>2.66</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,173.21</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,566.03</td><td align="right" class='awrct'>22,806.78</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>10,289.92</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>1.33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>586.60</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>783.01</td><td align="right" class='awrnc'>11,403.39</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>686.10</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>65.58</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>58.92</td><td align="right" class='awrc'>800.40</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12013"></a>
<h3 class="awr">Foreground Wait Classes -  % of DB time </h3>
<ul>
<li class="awr"> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of DB time . . % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 12" id="%DBtime">% DB time</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="UserI/O">User I/O</th><th class="awrbg" scope="col" id="SysI/O">Sys I/O</th><th class="awrbg" scope="col" id="Other">Other</th><th class="awrbg" scope="col" id="Applic">Applic</th><th class="awrbg" scope="col" id="Commit">Commit</th><th class="awrbg" scope="col" id="Network">Network</th><th class="awrbg" scope="col" id="Concurcy">Concurcy</th><th class="awrbg" scope="col" id="Config">Config</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Admin">Admin</th><th class="awrbg" scope="col" id="Scheduler">Scheduler</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col">% Total DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="%DBtime UserI/O" class='awrclb'>90.02</td><td align="right" headers="%DBtime SysI/O" class='awrc'>0.00</td><td align="right" headers="%DBtime Other" class='awrc'>0.01</td><td align="right" headers="%DBtime Applic" class='awrc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrc'>0.00</td><td align="right" headers="%DBtime Network" class='awrc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrc'>0.00</td><td align="right" headers="%DBtime Config" class='awrc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrc'>5.29</td><td align="right" headers="%DBtime Admin" class='awrc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrcrb'>6.89</td><td align="right" class='awrc'>52.48</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="%DBtime UserI/O" class='awrnclb'>90.47</td><td align="right" headers="%DBtime SysI/O" class='awrnc'>0.00</td><td align="right" headers="%DBtime Other" class='awrnc'>0.01</td><td align="right" headers="%DBtime Applic" class='awrnc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrnc'>0.00</td><td align="right" headers="%DBtime Network" class='awrnc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrnc'>0.00</td><td align="right" headers="%DBtime Config" class='awrnc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrnc'>4.98</td><td align="right" headers="%DBtime Admin" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrnc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrncrb'>6.84</td><td align="right" class='awrnc'>47.52</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>90.25</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>5.14</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrcrbt'>6.87</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12050"></a>
<h3 class="awr">Top Timed Events</h3>
<ul>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time ' 	     : Per-instance 'Wait Time Avg ' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Events. . Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time ' : Per-instance 'Wait Time Avg ' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>4,228,767</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20,581.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>90.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>362.89us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,566.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.87</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>200,600</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>990.50</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>360.83us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,497,519</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>821.26</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>548.42us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>548.66us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>544.66us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>552.66us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>5.66us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>66,616</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>153.40</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>100.34us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>270,805</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>151.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>560.17us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>560.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>553.68us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>567.54us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>9.80us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>44,718</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>121.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.71ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.70ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>190.82us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>90,430</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>91.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>44.75us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>50,509</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>61.59</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>7.89us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>6,173</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19.75</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.20ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.16ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>49.86us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,102,685</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>10,776.23</td><td align="right" headers="WaitTime AvgWait" class='awrct'>5.12ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>824.68</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>100,213</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>469.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>794,717</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>432.85</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>544.66us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>143,901</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>79.67</td><td align="right" headers="WaitTime AvgWait" class='awrc'>553.68us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>75,563</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>76.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>23,508</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>66.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.83ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.56</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>29,804</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>66.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>15,300</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>18.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.16</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>13,686</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>12.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>891.24us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,126,082</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,805.02</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.47</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>741.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.84</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>100,387</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>521.27</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>702,802</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>388.41</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>552.66us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.58</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>36,812</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>87.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.80</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>126,904</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>72.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>567.54us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>21,210</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>54.38</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.56ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.50</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>35,209</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>42.82</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>14,867</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>14.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>3,168</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>10.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12051"></a>
<h3 class="awr">Top Timed Foreground Events</h3>
<ul>
<li class="awr"> Foreground Activity is captured in release 11g and above </li>
<li class="awr"> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Foreground Events. . Foreground Activity is captured in release 11g and above. For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>4,228,404</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20,579.63</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>90.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>362.99us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,566.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.87</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,497,472</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>821.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>548.41us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>548.65us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>544.66us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>552.65us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>5.65us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>270,744</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>151.66</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>560.16us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>560.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>553.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>567.53us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>9.81us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>90,426</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>91.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>44.72us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>50,509</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>61.59</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>7.89us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>16,496</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>15.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>916.84us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>891.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>100.57us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>21,634</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.87</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>687.30us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>687.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>668.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>707.07us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>27.51us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>6,296</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.35</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>81.05us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>4,807</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>831.75us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>821.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>784.91us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>857.99us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>51.67us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,102,388</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>10,774.96</td><td align="right" headers="WaitTime AvgWait" class='awrct'>5.13ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>824.68</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>794,691</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>432.84</td><td align="right" headers="WaitTime AvgWait" class='awrc'>544.66us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>143,876</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>79.66</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>553.67us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>75,559</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>76.92</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>15,300</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>18.78</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.16</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>13,569</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>12.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>891.60us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>10,641</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>707.07us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>2,204</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.76</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.25ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>1,726</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>784.91us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,126,016</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,804.67</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.47</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>741.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.84</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>702,781</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>388.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>552.65us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.58</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>126,868</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>72.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>567.53us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>35,209</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>42.82</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>14,867</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>10,993</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>7.35</td><td align="right" headers="WaitTime AvgWait" class='awrc'>668.16us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>4,092</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.59</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>2,927</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>3,081</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.64</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>857.99us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12052"></a>
<h3 class="awr">Top Timed Background Events</h3>
<ul>
<li class="awr"> % of bg time: % of background elapsed time </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Background Events. . % of bg time: % of background elapsed time. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>200,594</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>990.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>52.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>360.95us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>908.72</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>48.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>66,615</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>153.40</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>8.12</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>100.43us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>44,718</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>121.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.71ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.70ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>190.82us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>6,015</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>49.95us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>1,653</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>12.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.63ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.62ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.11ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>2.13ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>3,159</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>11.89</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.76ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.82ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>87.34us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>3,627</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>10.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.79ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.79ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>728.49us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>2,753</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.57</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.35</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>252.60us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>598</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.58</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.30</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>874.66us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>100,209</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>469.20</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>51.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>457.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>50.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>23,508</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>66.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.83ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>7.30</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>29,803</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>66.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.26</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>2,946</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.18ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>1,538</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.69</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.70ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>823</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>1,815</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.45</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>1,589</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.55</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>279</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.42</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>100,385</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>521.27</td><td align="right" headers="WaitTime AvgWait" class='awrct'>5.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>53.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>451.66</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>46.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>36,812</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>87.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>8.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>21,210</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>54.38</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.56ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>3,069</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.98</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.25ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>830</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.58</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.13ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.78</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>1,621</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.20</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.82ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>1,812</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.98</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>319</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.16</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>1,164</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.31</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12053"></a>
<h3 class="awr">Foreground Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>4,228,404</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20,579.63</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>90.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>362.99us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,497,472</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>821.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>548.41us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>548.65us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>544.66us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>552.65us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>270,744</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>151.66</td><td align="right" headers="WaitTime AvgWait" class='awrc'>560.16us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>560.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>553.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>567.53us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>9.81us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>90,426</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>91.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>44.72us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>50,509</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>61.59</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>16,496</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>15.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>916.84us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>891.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>100.57us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>21,634</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>14.87</td><td align="right" headers="WaitTime AvgWait" class='awrc'>687.30us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>687.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>668.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>707.07us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>27.51us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>6,296</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>81.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>4,807</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>831.75us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>821.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>784.91us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>857.99us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>51.67us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>612</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.50ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>192.63us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block lost</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>507.29ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>507.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>507.29ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>507.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>4,107</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.67</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>407.52us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>424.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>348.68us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>501.04us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>107.73us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.45</td><td align="right" headers="WaitTime AvgWait" class='awrc'>445.50ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>445.50ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>445.50ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>445.50ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>158</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.41</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.57ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.52ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.72ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>269.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrclb'>110</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.57ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.55ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.48ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.62ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>97.99us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>reliable message</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>106.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>106.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>106.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>106.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>40</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.15ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>272</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>579.19us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>646.59us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>568.91us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>724.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>109.86us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>166</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>731.14us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>717.43us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>660.54us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>774.32us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>80.46us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrnclb'>251</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>361.68us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>369.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>335.63us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>403.03us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>47.66us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>21</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.00ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.00ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>270</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>292.06us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>288.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>267.31us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>309.35us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>29.73us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrclb'>92</td><td align="right" headers="Event %Timeouts" class='awrc'>1.09</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>700.10us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>630.41us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>647.62us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.85ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.85ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.85ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.85ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrclb'>180</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>350.02us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>351.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>243.79us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>458.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>151.91us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrnclb'>122</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>440.68us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>423.37us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>352.96us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>493.78us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>99.57us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>1,678</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.34us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>34.98us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>23.34us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>46.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>16.47us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.86ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.85ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.88ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>20.79us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Commit</td><td headers="Wait Event" class='awrc'>log file sync</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.83ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.50ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>357.09us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.66ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>745.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.62ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc index operation</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.49ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.49ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.49ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>21</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>689.69us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>605.85us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.99ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>600.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.09ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrnclb'>68</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>204.34us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>197.65us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>152.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>243.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>64.32us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>65</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>186.51us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>189.06us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>178.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>200.12us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>15.64us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.51ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>792.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.62ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>582.66us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>26</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>463.12us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>456.01us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>409.82us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>502.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>65.32us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>17</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>637.65us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>677.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>541.82us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>813.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>191.99us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.66ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.66ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.65ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.85ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current split</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>19</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>448.37us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>466.51us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>443.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>489.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>32.51us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.97ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.97ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.97ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.97ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>SQL*Net break/reset to client</td><td align="right" headers="Event Waits" class='awrclb'>120</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>62.64us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>62.64us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>62.64us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>62.64us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache pin</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>468.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>489.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>432.45us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>546.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>80.43us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS initialization</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.21ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TO - contention</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>705.44us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>705.44us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>705.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>705.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrclb'>459</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.82us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>12.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.99us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.85us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>907.83us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>907.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>907.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>907.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>18</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>259.67us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>270.14us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>223.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>317.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>66.67us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>enq: TX - index contention</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>834.25us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>834.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>834.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>834.25us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.66ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.66ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.66ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>781.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>781.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>538.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>343.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>347.83us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>387.63us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>268.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>507.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>168.82us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>867.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>867.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>867.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>867.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrclb'>221</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.48us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.34us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.78us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.90us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.21us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: query</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>165.83us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>165.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>165.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>165.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX qref latch</td><td align="right" headers="Event Waits" class='awrclb'>52</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.23us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.23us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.23us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.23us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current retry</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>647.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>647.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>647.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>647.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>625.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>625.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>625.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>625.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: messages</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>101.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>101.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>101.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>101.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>470.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>470.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>470.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>470.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: session allocation</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>351.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>351.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>351.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>351.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>transaction</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>171.50us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>171.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>171.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>171.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.29us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>606.09ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>20.50us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>20.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>20.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>20.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>13.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>13.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>13.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>13.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>.00ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>.00ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.25us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.67us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>lock deadlock retry</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>24.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>24.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>24.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>24.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>watchdog main loop</td><td align="right" headers="Event Waits" class='awrclb'>1,616</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4,848.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3000.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>21.26</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3000.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3000.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>20.60us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrnclb'>221</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,887.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8539.72ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>14.33 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3578.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.08 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>15.20 s</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Execution Msg</td><td align="right" headers="Event Waits" class='awrclb'>534</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.86</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.35ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.35ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.23ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrnclb'>332</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.88</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.66ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>840.10us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.72ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.74ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Msg Fragment</td><td align="right" headers="Event Waits" class='awrclb'>290</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>314.26us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>314.26us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>313.61us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>314.90us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>911.92ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq Credit: need buffer</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>376.67us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>404.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>321.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>488.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>118.09us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>253.50us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>253.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>253.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>253.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>147.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>147.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>147.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>147.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12054"></a>
<h3 class="awr">Background Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%bgtime">%bg time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>200,594</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>990.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>360.95us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>66,615</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>153.40</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.30ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>100.43us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>44,718</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>121.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.71ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.70ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>190.82us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>6,015</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.22ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>49.95us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>1,653</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>12.61</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.63ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.62ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.11ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.13ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>3,159</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>11.89</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.76ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.82ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>87.34us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>3,627</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>10.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.79ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.79ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>728.49us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>2,753</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.57</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.39ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>252.60us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>598</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.58</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.34ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>874.66us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>108</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>27.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>27.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>24.60ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.58ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>4,899</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.72</td><td align="right" headers="WaitTime AvgWait" class='awrc'>350.85us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>350.91us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>337.24us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>364.57us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>19.32us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>367</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.64</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.47ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.28ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.18ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>635.30us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrclb'>1,454</td><td align="right" headers="Event %Timeouts" class='awrc'>62.24</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.01ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>28.03us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>44,451</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>32.97us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>33.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>37.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.84us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,607</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.86</td><td align="right" headers="WaitTime AvgWait" class='awrc'>535.78us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>605.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>522.09us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>688.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>117.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,529</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.85</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>556.60us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>555.77us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>489.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>622.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>94.23us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>643</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.69</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.08ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>928.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>157.21us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrnclb'>24,307</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.99</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.69</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>28.29us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.37us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>27.55us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.19us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.16us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.61</td><td align="right" headers="WaitTime AvgWait" class='awrc'>609.39ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>609.39ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>609.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>609.39ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DFS lock handle</td><td align="right" headers="Event Waits" class='awrnclb'>839</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>725.90us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>725.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>723.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>728.15us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.34us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>282</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.57</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.04ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.74ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>559.08us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrnclb'>128</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.53</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.54ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.22ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.31ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block lost</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.50</td><td align="right" headers="WaitTime AvgWait" class='awrc'>504.62ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>504.62ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>504.62ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>504.62ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>reliable message</td><td align="right" headers="Event Waits" class='awrnclb'>175</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.41</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.57ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.87ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>424.37us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AQ: RAC AQ Network</td><td align="right" headers="Event Waits" class='awrclb'>12,067</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.38</td><td align="right" headers="WaitTime AvgWait" class='awrc'>31.09us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>31.09us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>30.13us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>32.04us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.35us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CGS wait for IPC msg</td><td align="right" headers="Event Waits" class='awrnclb'>12,260</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.36</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.39us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>29.38us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.19us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>30.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.69us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch free</td><td align="right" headers="Event Waits" class='awrclb'>1,172</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>238.04us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>237.99us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>234.34us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>241.64us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.16us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrnclb'>176</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.44ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>.97ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>oracle thread bootstrap</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.24</td><td align="right" headers="WaitTime AvgWait" class='awrc'>26.63ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>26.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>22.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>30.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.72ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>482</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>457.69us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>457.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>435.36us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>480.22us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>31.72us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrclb'>42</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.61ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>774.32us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>185</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>885.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>886.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>860.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>912.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>36.87us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrclb'>18</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.16</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.62ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.62ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.62ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.62ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrnclb'>26</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.69ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.69ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache pin</td><td align="right" headers="Event Waits" class='awrclb'>184</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrc'>779.68us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>780.78us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>747.32us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>814.24us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>47.32us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path read</td><td align="right" headers="Event Waits" class='awrnclb'>38</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.55ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.55ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.55ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrclb'>1,517</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>80.46us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>80.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>78.85us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>82.12us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.31us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file async I/O submit</td><td align="right" headers="Event Waits" class='awrnclb'>11,728</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.05us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>10.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write temp</td><td align="right" headers="Event Waits" class='awrclb'>27</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.52ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>507.00us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrnclb'>168</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>664.60us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>664.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>467.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>862.02us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>279.20us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>51.37ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>51.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>100.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>69.32ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>119</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>831.96us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>607.85us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>353.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>861.84us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>359.20us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrclb'>320</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>287.41us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>288.71us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>274.85us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>302.57us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>19.60us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrnclb'>276</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>288.07us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>288.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>281.34us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>294.99us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>9.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrclb'>84</td><td align="right" headers="Event %Timeouts" class='awrc'>71.43</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>883.17us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>867.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>783.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>118.92us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrnclb'>94</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>706.43us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>800.96us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>674.01us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>927.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>179.54us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR wait for redo copy</td><td align="right" headers="Event Waits" class='awrclb'>169</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>387.43us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>390.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>372.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>408.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>25.34us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrnclb'>98</td><td align="right" headers="Event %Timeouts" class='awrnc'>9.18</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>650.87us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>759.94us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>626.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>893.56us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>188.96us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ksxr poll remote instances</td><td align="right" headers="Event Waits" class='awrclb'>2,100</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>28.72us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>28.69us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>27.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.58us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.59ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.55ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.62ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>87.55us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>1,299</td><td align="right" headers="Event %Timeouts" class='awrc'>92.99</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>44.12us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>43.30us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>30.13us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>56.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>18.63us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: data query</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.49ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.49ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>79.39us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>71</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>732.11us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>773.26us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>684.73us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>861.79us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>125.20us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrnclb'>115</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>411.58us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>408.99us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>349.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>468.52us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>84.18us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>68</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>693.44us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>678.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>622.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>734.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>79.66us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>21</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.19ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.81ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr disk read</td><td align="right" headers="Event Waits" class='awrclb'>48</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>930.73us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>930.73us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>930.73us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>930.73us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: data update</td><td align="right" headers="Event Waits" class='awrnclb'>42</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.98ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>942.38us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>47.28us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>47</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>805.57us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>835.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>553.38us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>399.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>23</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.54ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.64ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>417.17us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" headers="Event Waits" class='awrclb'>45</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>706.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>712.84us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>680.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>745.39us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>46.03us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrnclb'>93</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>329.90us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>320.12us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>219.07us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>421.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>142.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc index operation</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>10.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>10.21ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>10.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>176</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>152.22us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>206.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>145.99us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>267.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>86.04us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>libcache interrupt action by LCK</td><td align="right" headers="Event Waits" class='awrclb'>2,919</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.03us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.04us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.97us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.10us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>93.10ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.07ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.32ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrclb'>56</td><td align="right" headers="Event %Timeouts" class='awrc'>30.36</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>398.84us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>384.94us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>341.68us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>428.19us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>61.17us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrnclb'>49</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>447.55us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>494.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>341.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>646.35us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>215.25us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>os thread creation</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>336.97us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CO - master slave det</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>936.20us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>936.20us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>936.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>936.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>847.55us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>707.35us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>536.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>878.70us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>242.33us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>816.09us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>813.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>780.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>845.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>45.75us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrclb'>26</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>339.92us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>348.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>321.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>375.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>38.66us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.05ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.89ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TO - contention</td><td align="right" headers="Event Waits" class='awrclb'>12</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>549.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>549.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>549.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>549.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>897.86us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>212.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.81ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.13ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrclb'>176</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>34.24us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>107.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>25.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>188.22us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>114.75us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: MGA shared context root latch</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>639.56us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>562.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>330.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>794.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>328.33us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrclb'>222</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>23.52us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>23.66us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>21.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>25.46us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.54us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TA - contention</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.97ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>910.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>634.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>390.68us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: DR - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.99ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.18ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>251.31us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>254.46us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>213.43us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>295.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>58.03us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: messages</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>250.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>246.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>226.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>266.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>28.87us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>726.67us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>726.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>726.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>726.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: DW - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>949.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>108.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>189.20us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>162.19us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>94.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>229.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>95.49us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current split</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>630.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>630.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>630.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>630.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>581.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>573.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>551.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>596.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>31.82us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>733.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>733.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>696.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>771.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>53.03us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>717.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>717.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>717.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>717.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: SM -  contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>700.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>700.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>700.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>700.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrnclb'>48</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.46us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>24.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>40.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>22.52us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: MW - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>578.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>578.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>486.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>670.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>130.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: MGA shared context latch</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>266.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>266.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>82.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>450.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>260.22us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>latch: redo writing</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>141.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>141.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>44.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>238.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>137.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: checkpoint queue latch</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>159.60us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>184.13us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>143.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>225.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>57.81us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: call allocation</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>249.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>249.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>249.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>249.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: RA - RT ADDM flood control</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>712.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>712.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>712.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>712.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>699.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>699.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>699.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>699.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>GCR CSS group update</td><td align="right" headers="Event Waits" class='awrnclb'>38</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.45us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>14.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>14.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>37.22ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>GCR CSS group query</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.92us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>15.56us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>903.53ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>lock deadlock retry</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>525.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>525.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>525.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>525.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: kjci process context latch</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>166.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>181.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>135.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>227.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>64.70us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>45</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.76us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.80us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.73us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.73us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>57.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>57.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>57.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>57.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.33us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>471.40ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>undo_retention publish retry</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.75us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: MGA heap latch</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>rdbms ipc message</td><td align="right" headers="Event Waits" class='awrnclb'>454,887</td><td align="right" headers="Event %Timeouts" class='awrnc'>5.79</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>31,004.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>68.16ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>16.41</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>68.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>66.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>70.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.67ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Idle Wait</td><td align="right" headers="Event Waits" class='awrclb'>180</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20,417.58</td><td align="right" headers="WaitTime AvgWait" class='awrc'>113.43 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>10.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>113.43 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>113.41 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>113.45 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>22.76ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Space Manager: slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>5,108</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19,306.58</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3779.68ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>10.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3779.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3751.85ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3807.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>39.64ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>class slave wait</td><td align="right" headers="Event Waits" class='awrclb'>15,047</td><td align="right" headers="Event %Timeouts" class='awrc'>79.18</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9,306.48</td><td align="right" headers="WaitTime AvgWait" class='awrc'>618.49ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>618.56ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>603.82ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>633.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>20.84ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" headers="Event Waits" class='awrnclb'>1,854</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.89</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3,627.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1956.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1956.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1956.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1956.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.87us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pmon timer</td><td align="right" headers="Event Waits" class='awrclb'>806</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,417.93</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.91ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.91ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.91ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>12.65us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ges remote message</td><td align="right" headers="Event Waits" class='awrnclb'>37,730</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,416.66</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>64.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>64.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>63.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>64.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>94.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>GCR sleep</td><td align="right" headers="Event Waits" class='awrclb'>8,050</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,415.89</td><td align="right" headers="WaitTime AvgWait" class='awrc'>300.11ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>300.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>300.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>300.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>52.44us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>DIAG idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>15,202</td><td align="right" headers="Event %Timeouts" class='awrnc'>82.89</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,413.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>158.73ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>158.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>158.41ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>159.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>455.99us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>gcs yield cpu</td><td align="right" headers="Event Waits" class='awrclb'>82,267</td><td align="right" headers="Event %Timeouts" class='awrc'>99.98</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,407.98</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.27ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.28ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>11.31us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs remote message</td><td align="right" headers="Event Waits" class='awrnclb'>2,797,162</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,091.82</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>747.83us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>750.35us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>707.02us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>793.68us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>61.27us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>LGWR worker group idle</td><td align="right" headers="Event Waits" class='awrclb'>185,128</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,373.95</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.42ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.73</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.42ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>395.93us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>smon timer</td><td align="right" headers="Event Waits" class='awrnclb'>20</td><td align="right" headers="Event %Timeouts" class='awrnc'>5.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,317.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>65.86 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.70</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>67.18 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>53.99 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>80.36 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>18.65 s</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" headers="Event Waits" class='awrclb'>89</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,232.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.84 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.84 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>220.02ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>44</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,232.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>28.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>44.07us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>VKRM Idle</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,220.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>lreg timer</td><td align="right" headers="Event Waits" class='awrnclb'>404</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,213.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3002.71ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3002.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3002.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3002.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>52.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pman timer</td><td align="right" headers="Event Waits" class='awrclb'>404</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,211.86</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.64ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.64ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.60us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: waiting for time management or cleanup tasks</td><td align="right" headers="Event Waits" class='awrnclb'>0</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,210.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>heartbeat redo informer</td><td align="right" headers="Event Waits" class='awrclb'>1,209</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,209.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1000.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1000.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1000.16ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>15.54us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" headers="Event Waits" class='awrnclb'>21</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,209.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>57.57 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>57.70 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>54.96 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>60.45 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3886.42ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SCM slave idle</td><td align="right" headers="Event Waits" class='awrclb'>12,123</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,208.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>99.65ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>99.65ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>99.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>99.81ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>231.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM background timer</td><td align="right" headers="Event Waits" class='awrnclb'>4,247</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,207.56</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>284.33ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>284.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>282.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>286.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.69ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>OFS idle</td><td align="right" headers="Event Waits" class='awrclb'>402</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,206.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3000.04ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3000.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3000.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3000.05ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>12.88us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM cluster membership changes</td><td align="right" headers="Event Waits" class='awrnclb'>690</td><td align="right" headers="Event %Timeouts" class='awrnc'>86.81</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,205.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1746.77ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1746.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1746.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1746.77ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.14us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PING</td><td align="right" headers="Event Waits" class='awrclb'>1,100</td><td align="right" headers="Event %Timeouts" class='awrc'>21.73</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1091.58ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1091.67ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1081.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1101.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>14.02ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>shared server idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>0</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>dispatcher timer</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.01 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>487.62us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>AQPC idle</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>30.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>110.87us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Gap Manager</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>71.77us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Data Guard: Timer</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>600.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>115.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrclb'>564</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.36</td><td align="right" headers="WaitTime AvgWait" class='awrc'>640.87us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>824.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>559.03us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>375.12us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrnclb'>176</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.95ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.39ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>757.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>892.11us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>RMA: IPC0 completion sync</td><td align="right" headers="Event Waits" class='awrclb'>1,907</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>38.76us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>38.81us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>34.81us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>42.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.65us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrnclb'>146</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>484.98us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>484.98us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>484.98us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>484.98us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>47</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>906.62us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>912.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>634.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>392.96us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat monitor sleep</td><td align="right" headers="Event Waits" class='awrnclb'>31</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.94us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>10.04us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.90us</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12055"></a>
<h3 class="awr">Wait Event Histogram (Global)</h3>
<ul>
<li class="awr"> When % of Total Waits is  0.0 the count is displayed in parenthesis</li>
</ul>
<table border="0" class="tdiff" summary="This table displays wait event histogram information"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 22" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us"> &lt;8us</th><th class="awrbg" scope="col" id="&lt;16us"> &lt;16us</th><th class="awrbg" scope="col" id="&lt;32us"> &lt;32us</th><th class="awrbg" scope="col" id="&lt;64us"> &lt;64us</th><th class="awrbg" scope="col" id="&lt;128us"> &lt;128us</th><th class="awrbg" scope="col" id="&lt;256us"> &lt;256us</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms"> &lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms"> &lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms"> &lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms"> &lt;64ms</th><th class="awrbg" scope="col" id="&lt;128ms"> &lt;128ms</th><th class="awrbg" scope="col" id="&lt;256ms"> &lt;256ms</th><th class="awrbg" scope="col" id="&lt;512ms"> &lt;512ms</th><th class="awrbg" scope="col" id="&lt;1s"> &lt;1s</th><th class="awrbg" scope="col" id="&gt;=1s"> &gt;=1s</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>12.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>85.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>44.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>63.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>20.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(8)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>4898</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>40.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>29.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>12.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>81.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: action</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>42</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>59.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>40.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: query</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>839</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>59.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>665</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>59.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>1690</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>42.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>40.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>302</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>47.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>32.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>77.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>84.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>3630</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>1529</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>50.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>1571</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>67.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>4146</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>40.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>44.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>1454</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>38.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>3171</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>77.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>66.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(11)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>48.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(33)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>169</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>24.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>21.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>2720</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>61.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>679</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>36.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>45.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>178</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>22.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>24.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>29.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>178</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>23.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>66.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>356</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>22.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>35.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>26K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>73.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX qref latch</td><td align="right" class='awrc'>52</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>86.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>120</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>266</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>93.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>51</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>76.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer deadlock</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>597</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>6164</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>52.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>11.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>93.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>44.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(8)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>55.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.2M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>73.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(567)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path read</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>97.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>27</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>70.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>25.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: AF - task serialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>84</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>65.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>128</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>53.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: DR - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: MW - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>190</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>44.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>43.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RA - RT ADDM flood control</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>168</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>69.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TO - contention</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>47.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>90.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>29.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>42</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>7879</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>49.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>16.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>63</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>68.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>48</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>1.5M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>58.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>32.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(430)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(21)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>90.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.0(11)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.0(37)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>67.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(28)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.0(11)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>606</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>59.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>33</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>30.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>21.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>29.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>59.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>5037</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block lost</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>270.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>32.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(91)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>16.6K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>107</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>56.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>50.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(12)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.0(19)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(16)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>85.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current retry</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>1098</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>94</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>36.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>45</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>31.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>2107</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>1438</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>21.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>39.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA heap latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context latch</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context root latch</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>33</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>180</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: call allocation</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>262</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>27.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>215</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>441</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>22.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>26</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: kjci process context latch</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>32.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>161</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>23.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo writing</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: session allocation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>2928</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>91.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>202</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>26.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>200</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>29.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>54.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock deadlock retry</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>200.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>36.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(78)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>482</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>77.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>177</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>45.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>35</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>34.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>22.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="639"></a>
<h2 class="awr">
Global Activity Load Profile
</h2>
<ul>
<li class="awr"><a class="awr" href="#12016">System Statistics</a></li>
<li class="awr"><a class="awr" href="#12017">System Statistics - Per Second</a></li>
<li class="awr"><a class="awr" href="#12018">System Statistics - Per Transaction</a></li>
<li class="awr"><a class="awr" href="#12030">SysStat and Global Messaging  - RAC</a></li>
<li class="awr"><a class="awr" href="#12031">SysStat and Global Messaging (per Sec)- RAC</a></li>
<li class="awr"><a class="awr" href="#12032">SysStat and Global Messaging (per Tx)- RAC</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12016"></a>
<h3 class="awr">System Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Redo Size (k)</th><th class="awrbg" scope="col">Block Changes</th><th class="awrbg" scope="col">User Calls</th><th class="awrbg" scope="col">Execs</th><th class="awrbg" scope="col">Parses</th><th class="awrbg" scope="col">Logons</th><th class="awrbg" scope="col">Txns</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>5,609,804</td><td align="right" class='awrc'>2,106,679</td><td align="right" class='awrc'>310,504</td><td align="right" class='awrc'>296,003</td><td align="right" class='awrc'>894,206</td><td align="right" class='awrc'>593</td><td align="right" class='awrc'>726,479</td><td align="right" class='awrc'>1,865</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>108,674</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>5,691,021</td><td align="right" class='awrnc'>2,129,301</td><td align="right" class='awrnc'>315,360</td><td align="right" class='awrnc'>304,474</td><td align="right" class='awrnc'>908,905</td><td align="right" class='awrnc'>705</td><td align="right" class='awrnc'>740,004</td><td align="right" class='awrnc'>1,404</td><td align="right" class='awrnc'>94</td><td align="right" class='awrnc'>110,855</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>11,300,825</td><td align="right" class='awrct'>4,235,980</td><td align="right" class='awrct'>625,864</td><td align="right" class='awrct'>600,476</td><td align="right" class='awrct'>1,803,111</td><td align="right" class='awrct'>1,298</td><td align="right" class='awrct'>1,466,483</td><td align="right" class='awrct'>3,269</td><td align="right" class='awrct'>189</td><td align="right" class='awrct'>219,529</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>5,650,413</td><td align="right" class='awrnc'>2,117,990</td><td align="right" class='awrnc'>312,932</td><td align="right" class='awrnc'>300,238</td><td align="right" class='awrnc'>901,556</td><td align="right" class='awrnc'>649</td><td align="right" class='awrnc'>733,242</td><td align="right" class='awrnc'>1,635</td><td align="right" class='awrnc'>95</td><td align="right" class='awrnc'>109,765</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>57,429</td><td align="right" class='awrc'>15,996</td><td align="right" class='awrc'>3,434</td><td align="right" class='awrc'>5,990</td><td align="right" class='awrc'>10,394</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>9,564</td><td align="right" class='awrc'>326</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1,542</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12017"></a>
<h3 class="awr">System Statistics - Per Second</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Second"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/s</th><th class="awrbg" scope="col">Physical Reads/s</th><th class="awrbg" scope="col">Physical Writes/s</th><th class="awrbg" scope="col">Redo Size (k)/s</th><th class="awrbg" scope="col">Block Changes/s</th><th class="awrbg" scope="col">User Calls/s</th><th class="awrbg" scope="col">Execs/s</th><th class="awrbg" scope="col">Parses/s</th><th class="awrbg" scope="col">Logons/s</th><th class="awrbg" scope="col">Txns/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>9,278.78</td><td align="right" class='awrc'>3,484.51</td><td align="right" class='awrc'>513.58</td><td align="right" class='awrc'>489.60</td><td align="right" class='awrc'>1,479.04</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>1,201.62</td><td align="right" class='awrc'>3.08</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>179.75</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>9,412.75</td><td align="right" class='awrnc'>3,521.79</td><td align="right" class='awrnc'>521.59</td><td align="right" class='awrnc'>503.59</td><td align="right" class='awrnc'>1,503.30</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>1,223.94</td><td align="right" class='awrnc'>2.32</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>183.35</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>18,691.53</td><td align="right" class='awrct'>7,006.30</td><td align="right" class='awrct'>1,035.18</td><td align="right" class='awrct'>993.19</td><td align="right" class='awrct'>2,982.34</td><td align="right" class='awrct'>2.15</td><td align="right" class='awrct'>2,425.56</td><td align="right" class='awrct'>5.41</td><td align="right" class='awrct'>0.31</td><td align="right" class='awrct'>363.10</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>9,345.76</td><td align="right" class='awrnc'>3,503.15</td><td align="right" class='awrnc'>517.59</td><td align="right" class='awrnc'>496.59</td><td align="right" class='awrnc'>1,491.17</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>1,212.78</td><td align="right" class='awrnc'>2.70</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>181.55</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>94.73</td><td align="right" class='awrc'>26.36</td><td align="right" class='awrc'>5.66</td><td align="right" class='awrc'>9.89</td><td align="right" class='awrc'>17.15</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>15.78</td><td align="right" class='awrc'>0.54</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>2.55</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12018"></a>
<h3 class="awr">System Statistics - Per Transaction</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Transaction"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/tx</th><th class="awrbg" scope="col">Physical Reads/tx</th><th class="awrbg" scope="col">Physical Writes/tx</th><th class="awrbg" scope="col">Redo Size (k)/tx</th><th class="awrbg" scope="col">Block Changes/tx</th><th class="awrbg" scope="col">User Calls/tx</th><th class="awrbg" scope="col">Execs/tx</th><th class="awrbg" scope="col">Parses/tx</th><th class="awrbg" scope="col">Logons/tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>51.62</td><td align="right" class='awrc'>19.39</td><td align="right" class='awrc'>2.86</td><td align="right" class='awrc'>2.72</td><td align="right" class='awrc'>8.23</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>6.68</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>51.34</td><td align="right" class='awrnc'>19.21</td><td align="right" class='awrnc'>2.84</td><td align="right" class='awrnc'>2.75</td><td align="right" class='awrnc'>8.20</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>6.68</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>51.48</td><td align="right" class='awrct'>19.30</td><td align="right" class='awrct'>2.85</td><td align="right" class='awrct'>2.74</td><td align="right" class='awrct'>8.21</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>6.68</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12030"></a>
<h3 class="awr">SysStat and Global Messaging  - RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging  - RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceived">Blocks Received</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)">CPU (seconds)</th>
<th class="awrbg" colspan=" 6" id="Messages">Messages</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost">Lost</th><th class="awrbg" scope="col" id="Failure">Failure</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceived GCCurrent" class='awrclb'>12,656</td><td align="right" headers="BlocksReceived GCCR" class='awrc'>2,412</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>14,120</td><td align="right" headers="BlocksServed GCCR" class='awrc'>5,606</td><td align="right" headers="CPU(seconds) GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrc'>0</td><td align="right" headers="Messages GCSReceived" class='awrclb'>3,128,498</td><td align="right" headers="Messages GESReceived" class='awrc'>3,538</td><td align="right" headers="Messages GCSSent" class='awrc'>3,308,382</td><td align="right" headers="Messages GESSent" class='awrc'>2,825</td><td align="right" headers="Messages SentDirect" class='awrc'>1,090,312</td><td align="right" headers="Messages SentIndir" class='awrc'>1,318,283</td><td align="right" headers="GCBlks Lost" class='awrclb'>2</td><td align="right" headers="GCCR Failure" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceived GCCurrent" class='awrnclb'>14,079</td><td align="right" headers="BlocksReceived GCCR" class='awrnc'>5,601</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>12,613</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>2,403</td><td align="right" headers="CPU(seconds) GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrnc'>0</td><td align="right" headers="Messages GCSReceived" class='awrnclb'>3,305,578</td><td align="right" headers="Messages GESReceived" class='awrnc'>2,814</td><td align="right" headers="Messages GCSSent" class='awrnc'>3,129,147</td><td align="right" headers="Messages GESSent" class='awrnc'>3,550</td><td align="right" headers="Messages SentDirect" class='awrnc'>924,738</td><td align="right" headers="Messages SentIndir" class='awrnc'>1,135,813</td><td align="right" headers="GCBlks Lost" class='awrnclb'>5</td><td align="right" headers="GCCR Failure" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>26,735</td><td align="right" class='awrct'>8,013</td><td align="right" class='awrclbt'>26,733</td><td align="right" class='awrct'>8,009</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>6,434,076</td><td align="right" class='awrct'>6,352</td><td align="right" class='awrct'>6,437,529</td><td align="right" class='awrct'>6,375</td><td align="right" class='awrct'>2,015,050</td><td align="right" class='awrct'>2,454,096</td><td align="right" class='awrclbt'>7</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>13,368</td><td align="right" class='awrnc'>4,007</td><td align="right" class='awrnclb'>13,367</td><td align="right" class='awrnc'>4,005</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>3,217,038</td><td align="right" class='awrnc'>3,176</td><td align="right" class='awrnc'>3,218,765</td><td align="right" class='awrnc'>3,188</td><td align="right" class='awrnc'>1,007,525</td><td align="right" class='awrnc'>1,227,048</td><td align="right" class='awrnclb'>4</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1,006</td><td align="right" class='awrc'>2,255</td><td align="right" class='awrclb'>1,066</td><td align="right" class='awrc'>2,265</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>125,214</td><td align="right" class='awrc'>512</td><td align="right" class='awrc'>126,738</td><td align="right" class='awrc'>513</td><td align="right" class='awrc'>117,078</td><td align="right" class='awrc'>129,026</td><td align="right" class='awrclb'>2</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12031"></a>
<h3 class="awr">SysStat and Global Messaging (per Sec)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Sec)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedPerSecond">Blocks Received Per Second</th>
<th class="awrbg" colspan=" 2" id="BlocksServedperSecond">Blocks Served per Second</th>
<th class="awrbg" colspan=" 2" id="CPUsecondsperSecond">CPU seconds per Second</th>
<th class="awrbg" colspan=" 6" id="MessagesPerSecond">Messages Per Second</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent</th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/s">Lost/s</th><th class="awrbg" scope="col" id="Fail/s">Fail/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrclb'>20.93</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrc'>3.99</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrclb'>23.35</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrc'>9.27</td><td align="right" headers="CPUsecondsperSecond GC" class='awrclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrclb'>5,174.63</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrc'>5.85</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrc'>5,472.16</td><td align="right" headers="MessagesPerSecond GESSent" class='awrc'>4.67</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrc'>1,803.41</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrc'>2,180.48</td><td align="right" headers="GCBlks Lost/s" class='awrclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrnclb'>23.29</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrnc'>9.26</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrnclb'>20.86</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrnc'>3.97</td><td align="right" headers="CPUsecondsperSecond GC" class='awrnclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrnclb'>5,467.31</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrnc'>4.65</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrnc'>5,175.50</td><td align="right" headers="MessagesPerSecond GESSent" class='awrnc'>5.87</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrnc'>1,529.48</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrnc'>1,878.59</td><td align="right" headers="GCBlks Lost/s" class='awrnclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>44.22</td><td align="right" class='awrct'>13.25</td><td align="right" class='awrclbt'>44.22</td><td align="right" class='awrct'>13.25</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>10,641.94</td><td align="right" class='awrct'>10.51</td><td align="right" class='awrct'>10,647.66</td><td align="right" class='awrct'>10.54</td><td align="right" class='awrct'>3,332.89</td><td align="right" class='awrct'>4,059.07</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>22.11</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnclb'>22.11</td><td align="right" class='awrnc'>6.62</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>5,320.97</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>5,323.83</td><td align="right" class='awrnc'>5.27</td><td align="right" class='awrnc'>1,666.45</td><td align="right" class='awrnc'>2,029.54</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1.66</td><td align="right" class='awrc'>3.73</td><td align="right" class='awrclb'>1.76</td><td align="right" class='awrc'>3.75</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>206.96</td><td align="right" class='awrc'>0.85</td><td align="right" class='awrc'>209.77</td><td align="right" class='awrc'>0.85</td><td align="right" class='awrc'>193.69</td><td align="right" class='awrc'>213.47</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12032"></a>
<h3 class="awr">SysStat and Global Messaging (per Tx)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Tx)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedperTx">Blocks Received per Tx</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)perTx">CPU (seconds) per Tx</th>
<th class="awrbg" colspan=" 6" id="MessagesperTransaction">Messages per Transaction</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/Tx">Lost/Tx</th><th class="awrbg" scope="col" id="Fail/Tx">Fail/Tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrclb'>0.12</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrc'>0.02</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>0.13</td><td align="right" headers="BlocksServed GCCR" class='awrc'>0.05</td><td align="right" headers="CPU(seconds)perTx GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrclb'>28.79</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrc'>0.03</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrc'>30.44</td><td align="right" headers="MessagesperTransaction GESSent" class='awrc'>0.03</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrc'>10.03</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrc'>12.13</td><td align="right" headers="GCBlks Lost/Tx" class='awrclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrcbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrnclb'>0.13</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrnc'>0.05</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>0.11</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>0.02</td><td align="right" headers="CPU(seconds)perTx GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrnclb'>29.82</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrnc'>0.03</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrnc'>28.23</td><td align="right" headers="MessagesperTransaction GESSent" class='awrnc'>0.03</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrnc'>8.34</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrnc'>10.25</td><td align="right" headers="GCBlks Lost/Tx" class='awrnclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrncbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>0.12</td><td align="right" class='awrct'>0.04</td><td align="right" class='awrclbt'>0.12</td><td align="right" class='awrct'>0.04</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>29.30</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrct'>29.34</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrct'>9.19</td><td align="right" class='awrct'>11.19</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrcbbt'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="605"></a>
<h2 class="awr">
Global Cache and Enqueue Statistics Summary
</h2>
<ul>
<li class="awr"><a class="awr" href="#12019">Global Cache Efficiency Percentages</a></li>
<li class="awr"><a class="awr" href="#12020">Global Latency Characteristics</a></li>
<li class="awr"><a class="awr" href="#12021">Global Messaging Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12019"></a>
<h3 class="awr">Global Cache Efficiency Percentages</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Cache Efficiency Percentages"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="BufferAccess">Buffer Access</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Local%">Local %</th><th class="awrbg" scope="col" id="Remote%">Remote %</th><th class="awrbg" scope="col" id="Disk%">Disk %</th><th class="awrbg" scope="col">Locality %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BufferAccess Local%" class='awrclb'>62.17</td><td align="right" headers="BufferAccess Remote%" class='awrc'>0.27</td><td align="right" headers="BufferAccess Disk%" class='awrcrb'>37.56</td><td align="right" class='awrc'>50.63</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BufferAccess Local%" class='awrnclb'>62.24</td><td align="right" headers="BufferAccess Remote%" class='awrnc'>0.35</td><td align="right" headers="BufferAccess Disk%" class='awrncrb'>37.42</td><td align="right" class='awrnc'>58.79</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12020"></a>
<h3 class="awr">Global Latency Characteristics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Latency Characteristics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CUBlocks">CU Blocks</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">GE Get Time (us)</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Build|Time(us)">Build Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CRSrvd%">Log Flush CR Srvd %</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Pin|Time(us)">Pin Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CUSrvd%">Log Flush CU Srvd %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>39</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrclb'>1285</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrc'>652</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrc'>4722</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrc'>0.64</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrclb'>741</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrc'>8776</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrcrb'>0.35</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>38</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrnclb'>1173</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrnc'>494</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrnc'>4848</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrnc'>1.37</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrnclb'>707</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrnc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrnc'>5455</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrncrb'>0.44</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12021"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="QueueTime(us)">Queue Time (us)</th>
<th class="awrbg" colspan=" 2" id="ProcessTime(us)">Process Time (us)</th>
<th class="awrbg" colspan=" 3" id="%MessagesSent">% Messages Sent</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Sent">Sent</th><th class="awrbg" scope="col" id="onksxp">on ksxp</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="GCSmsgs">GCS msgs</th><th class="awrbg" scope="col" id="GESmsgs">GES msgs</th><th class="awrbg" scope="col" id="Direct">Direct</th><th class="awrbg" scope="col" id="Indirect">Indirect</th><th class="awrbg" scope="col" id="FlowCtrl">Flow Ctrl</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="QueueTime(us) Sent" class='awrclb'>706</td><td align="right" headers="QueueTime(us) onksxp" class='awrc'>882</td><td align="right" headers="QueueTime(us) Received" class='awrc'>15</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrclb'>41</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrc'>34</td><td align="right" headers="%MessagesSent Direct" class='awrclb'>45.25</td><td align="right" headers="%MessagesSent Indirect" class='awrc'>54.71</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrcrb'>0.05</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="QueueTime(us) Sent" class='awrnclb'>540</td><td align="right" headers="QueueTime(us) onksxp" class='awrnc'>956</td><td align="right" headers="QueueTime(us) Received" class='awrnc'>12</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrnclb'>35</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrnc'>36</td><td align="right" headers="%MessagesSent Direct" class='awrnclb'>44.80</td><td align="right" headers="%MessagesSent Indirect" class='awrnc'>55.03</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrncrb'>0.17</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12033"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global CR Server Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 5" id="BlockRequests">Block Requests</th>
<th class="awrbg" colspan=" 5" id="Results">Results</th>
<th class="awrbg" colspan=" 1" id="Fairness">Fairness</th>
<th class="awrbg" colspan=" 1" id="Light">Light</th>
<th class="awrbg" colspan=" 3" id="Total">Total</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="CR">CR</th><th class="awrbg" scope="col" id="CU">CU</th><th class="awrbg" scope="col" id="Data">Data</th><th class="awrbg" scope="col" id="Undo">Undo</th><th class="awrbg" scope="col" id="TX">TX</th><th class="awrbg" scope="col" id="Current">Current</th><th class="awrbg" scope="col" id="Private">Private</th><th class="awrbg" scope="col" id="Zero">Zero</th><th class="awrbg" scope="col" id="DskRd">Dsk Rd</th><th class="awrbg" scope="col" id="Fail">Fail</th><th class="awrbg" scope="col" id="DownConv">Down Conv</th><th class="awrbg" scope="col" id="Works">Works</th><th class="awrbg" scope="col" id="Flushes">Flushes</th><th class="awrbg" scope="col" id="Builds">Builds</th><th class="awrbg" scope="col" id="Errors">Errors</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlockRequests CR" class='awrclb'>4,109</td><td align="right" headers="BlockRequests CU" class='awrc'>1,492</td><td align="right" headers="BlockRequests Data" class='awrc'>4,109</td><td align="right" headers="BlockRequests Undo" class='awrc'>2</td><td align="right" headers="BlockRequests TX" class='awrc'>1,477</td><td align="right" headers="Results Current" class='awrclb'>5,599</td><td align="right" headers="Results Private" class='awrc'>1</td><td align="right" headers="Results Zero" class='awrc'>1</td><td align="right" headers="Results DskRd" class='awrc'>0</td><td align="right" headers="Results Fail" class='awrc'>0</td><td align="right" headers="Fairness DownConv" class='awrclb'>4,038</td><td align="right" headers="Light Works" class='awrclb'>1,682</td><td align="right" headers="Total Flushes" class='awrclb'>36</td><td align="right" headers="Total Builds" class='awrc'>4,109</td><td align="right" headers="Total Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlockRequests CR" class='awrnclb'>2,321</td><td align="right" headers="BlockRequests CU" class='awrnc'>136</td><td align="right" headers="BlockRequests Data" class='awrnc'>2,321</td><td align="right" headers="BlockRequests Undo" class='awrnc'>3</td><td align="right" headers="BlockRequests TX" class='awrnc'>54</td><td align="right" headers="Results Current" class='awrnclb'>2,406</td><td align="right" headers="Results Private" class='awrnc'>0</td><td align="right" headers="Results Zero" class='awrnc'>3</td><td align="right" headers="Results DskRd" class='awrnc'>48</td><td align="right" headers="Results Fail" class='awrnc'>0</td><td align="right" headers="Fairness DownConv" class='awrnclb'>2,245</td><td align="right" headers="Light Works" class='awrnclb'>965</td><td align="right" headers="Total Flushes" class='awrnclb'>33</td><td align="right" headers="Total Builds" class='awrnc'>2,321</td><td align="right" headers="Total Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>6,430</td><td align="right" class='awrct'>1,628</td><td align="right" class='awrct'>6,430</td><td align="right" class='awrct'>5</td><td align="right" class='awrct'>1,531</td><td align="right" class='awrclbt'>8,005</td><td align="right" class='awrct'>1</td><td align="right" class='awrct'>4</td><td align="right" class='awrct'>48</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>6,283</td><td align="right" class='awrclbt'>2,647</td><td align="right" class='awrclbt'>69</td><td align="right" class='awrct'>6,430</td><td align="right" class='awrcrbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>3,215</td><td align="right" class='awrnc'>814</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>766</td><td align="right" class='awrnclb'>4,003</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>3,142</td><td align="right" class='awrnclb'>1,324</td><td align="right" class='awrnclb'>35</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1,264</td><td align="right" class='awrc'>959</td><td align="right" class='awrc'>1,264</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1,006</td><td align="right" class='awrclb'>2,258</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1,268</td><td align="right" class='awrclb'>507</td><td align="right" class='awrclb'>2</td><td align="right" class='awrc'>1,264</td><td align="right" class='awrcrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12034"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Current Server Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Pins</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th><th class="awrbg" scope="col">Flushes</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.12</td><td align="right" class='awrc'>75.51</td><td align="right" class='awrc'>18.37</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>25.00</td><td align="right" class='awrnc'>75.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>90.91</td><td align="right" class='awrnc'>9.09</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>10</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrct'>104</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="607"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12035">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#12036">Global Cache Transfer (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12035"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested  (Cngst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> All - average time of All blocks (Immed,Busy,Cngst) in us </li>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer Statistics. . Immediate (Immed) - Block Transfer NOT impacted by Remote Processing Delays. Busy (Busy) - Block Transfer impacted by Remote Contention. Congested (Cngst) - Block Transfer impacted by Remote System Load. All - average time of All blocks (Immed,Busy,Cngst) in us. Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CurrentBlocks">Current Blocks</th>
<th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="CRBlocks Received" class='awrclb'>2,325</td><td align="right" headers="CRBlocks %Immed" class='awrc'>99.35</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.60</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.04</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>12,500</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>84.19</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>15.77</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.04</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1263</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1234</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>5687</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>6676</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>743</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>707</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>929</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>3878</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="CRBlocks Received" class='awrnclb'>34</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>97.06</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>2.94</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>52</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>57.69</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>42.31</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>1158</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>491</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>23166</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>533</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>589</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>457</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrclb'>54</td><td align="right" headers="CRBlocks %Immed" class='awrc'>70.37</td><td align="right" headers="CRBlocks %Busy" class='awrc'>29.63</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>6</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>33.33</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>66.67</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2160</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>482</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6147</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>2425</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>614</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>3330</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="CRBlocks Received" class='awrnclb'>3</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>33.33</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>66.67</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>2632</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>1265</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>3316</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="CRBlocks Received" class='awrclbt'>4,107</td><td align="right" headers="CRBlocks %Immed" class='awrct'>99.66</td><td align="right" headers="CRBlocks %Busy" class='awrct'>0.32</td><td align="right" headers="CRBlocks %Cngst" class='awrct'>0.02</td><td align="right" headers="CurrentBlocks Received" class='awrclbt'>14,015</td><td align="right" headers="CurrentBlocks %Immed" class='awrct'>78.26</td><td align="right" headers="CurrentBlocks %Busy" class='awrct'>21.71</td><td align="right" headers="CurrentBlocks %Cngst" class='awrct'>0.04</td><td align="right" headers="CRAvgTime(us) All" class='awrclbt'>1385</td><td align="right" headers="CRAvgTime(us) Immed" class='awrct'>1367</td><td align="right" headers="CRAvgTime(us) Busy" class='awrct'>6744</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrct'>2647</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclbt'>706</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrct'>669</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrct'>832</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrbt'>3848</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrnclb'>1,477</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>98.44</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>1.56</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>4</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>75.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>25.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>580</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>519</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>4383</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>617</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>675</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>441</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>12</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>19</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>73.68</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>26.32</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>434</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>434</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>924</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>572</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>1909</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="CRBlocks Received" class='awrnclb'>2</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>555</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>555</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12036"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer (Immediate). . Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 2" id="LostBlocks">Lost Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCRBlocks">Immediate CR Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCurrentBlocks">Immediate Current Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmedCRAvgTime(us)">Immed CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="ImmedCurrentAvgTime(us)">Immed Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Count">Count</th><th class="awrbg" scope="col" id="Time(us)">Time(us)</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>2,310</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>10,524</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>1234</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>1234</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>707</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>707</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>33</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>30</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>491</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>491</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>589</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>589</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>38</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>2</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>482</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>482</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>614</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>614</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>1</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>1265</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>1265</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="LostBlocks Count" class='awrclbt'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrct'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclbt'>4,093</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclbt'>10,968</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclbt'>1367</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrct'>1367</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrct'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclbt'>669</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrct'>669</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>1,454</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>3</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>519</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>519</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>675</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>675</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>12</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>14</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>434</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>434</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>572</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>572</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>2</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>555</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>555</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="608"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12040">Cluster Interconnect</a></li>
<li class="awr"><a class="awr" href="#12045">Ping Statistics</a></li>
<li class="awr"><a class="awr" href="#12041">Interconnect Client Statistics</a></li>
<li class="awr"><a class="awr" href="#12042">Interconnect Client Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12043">Interconnect Device Statistics</a></li>
<li class="awr"><a class="awr" href="#12044">Interconnect Device Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12078">Dynamic Remastering Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12040"></a>
<h3 class="awr">Cluster Interconnect</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 3" id="End(ifdifferentfromBegin)">End (if different from Begin)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrnclb'>169.254.31.173</td><td headers="Begin Pub" class='awrnc'>N</td><td headers="Begin Source" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrnclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12045"></a>
<h3 class="awr">Ping Statistics</h3>
<ul>
<li class="awr"> Latency of the roundtrip of a message from  Src Instance to the Target instances</li>
</ul>
<table border="0" class="tdiff" summary="Ping Statistics. . Latency of the roundtrip of a message from Src Instance to the Target instances"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 3" id="500bytes">500 bytes</th>
<th class="awrbg" colspan=" 3" id="8Kbytes">8 Kbytes</th>
</tr><tr>
<th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Target">Target</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th></tr>
<tr><td align="right" headers="Instance# Src" class='awrclb'>1</td><td align="right" headers="Instance# Target" class='awrc'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrc'>771</td><td align="right" headers="500bytes Std|Dev" class='awrc'>0.41</td><td align="right" headers="8Kbytes Ping|Count" class='awrclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrc'>742</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrb'>0.39</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>895</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.34</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>939</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.35</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrclbt'>2</td><td align="right" headers="Instance# Target" class='awrct'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclbt'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrct'>816</td><td align="right" headers="500bytes Std|Dev" class='awrct'>0.27</td><td align="right" headers="8Kbytes Ping|Count" class='awrclbt'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrct'>924</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrbt'>0.36</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>417</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.16</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>416</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.15</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12041"></a>
<h3 class="awr">Interconnect Client Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB)">Sent (MB)</th>
<th class="awrbg" colspan=" 6" id="Received(MB)">Received (MB)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB) Total" class='awrclb'>940.51</td><td align="right" headers="Sent(MB) Cache" class='awrc'>174.09</td><td align="right" headers="Sent(MB) IPQ" class='awrc'>3.97</td><td align="right" headers="Sent(MB) DLM" class='awrc'>744.81</td><td align="right" headers="Sent(MB) PNG" class='awrc'>1.01</td><td align="right" headers="Sent(MB) Misc" class='awrc'>16.63</td><td align="right" headers="Received(MB) Total" class='awrclb'>855.26</td><td align="right" headers="Received(MB) Cache" class='awrc'>180.12</td><td align="right" headers="Received(MB) IPQ" class='awrc'>4.12</td><td align="right" headers="Received(MB) DLM" class='awrc'>659.05</td><td align="right" headers="Received(MB) PNG" class='awrc'>1.01</td><td align="right" headers="Received(MB) Misc" class='awrcrb'>10.98</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB) Total" class='awrnclb'>855.14</td><td align="right" headers="Sent(MB) Cache" class='awrnc'>180.16</td><td align="right" headers="Sent(MB) IPQ" class='awrnc'>4.12</td><td align="right" headers="Sent(MB) DLM" class='awrnc'>658.87</td><td align="right" headers="Sent(MB) PNG" class='awrnc'>1.01</td><td align="right" headers="Sent(MB) Misc" class='awrnc'>10.98</td><td align="right" headers="Received(MB) Total" class='awrnclb'>940.83</td><td align="right" headers="Received(MB) Cache" class='awrnc'>174.08</td><td align="right" headers="Received(MB) IPQ" class='awrnc'>3.97</td><td align="right" headers="Received(MB) DLM" class='awrnc'>745.14</td><td align="right" headers="Received(MB) PNG" class='awrnc'>1.01</td><td align="right" headers="Received(MB) Misc" class='awrncrb'>16.63</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>1,795.65</td><td align="right" class='awrct'>354.26</td><td align="right" class='awrct'>8.09</td><td align="right" class='awrct'>1,403.68</td><td align="right" class='awrct'>2.02</td><td align="right" class='awrct'>27.60</td><td align="right" class='awrclbt'>1,796.09</td><td align="right" class='awrct'>354.19</td><td align="right" class='awrct'>8.09</td><td align="right" class='awrct'>1,404.18</td><td align="right" class='awrct'>2.02</td><td align="right" class='awrcrbt'>27.60</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>897.83</td><td align="right" class='awrnc'>177.13</td><td align="right" class='awrnc'>4.05</td><td align="right" class='awrnc'>701.84</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>13.80</td><td align="right" class='awrnclb'>898.04</td><td align="right" class='awrnc'>177.10</td><td align="right" class='awrnc'>4.05</td><td align="right" class='awrnc'>702.09</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrncrb'>13.80</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>60.37</td><td align="right" class='awrc'>4.29</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>60.76</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.00</td><td align="right" class='awrclb'>60.50</td><td align="right" class='awrc'>4.27</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>60.88</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>4.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12042"></a>
<h3 class="awr">Interconnect Client Statistics (per Second)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics (per Second)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB/s)">Sent (MB/s)</th>
<th class="awrbg" colspan=" 6" id="Received(MB/s)">Received (MB/s)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB/s) Total" class='awrclb'>1.56</td><td align="right" headers="Sent(MB/s) Cache" class='awrc'>0.29</td><td align="right" headers="Sent(MB/s) IPQ" class='awrc'>0.01</td><td align="right" headers="Sent(MB/s) DLM" class='awrc'>1.23</td><td align="right" headers="Sent(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrc'>0.03</td><td align="right" headers="Received(MB/s) Total" class='awrclb'>1.41</td><td align="right" headers="Received(MB/s) Cache" class='awrc'>0.30</td><td align="right" headers="Received(MB/s) IPQ" class='awrc'>0.01</td><td align="right" headers="Received(MB/s) DLM" class='awrc'>1.09</td><td align="right" headers="Received(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrcrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB/s) Total" class='awrnclb'>1.41</td><td align="right" headers="Sent(MB/s) Cache" class='awrnc'>0.30</td><td align="right" headers="Sent(MB/s) IPQ" class='awrnc'>0.01</td><td align="right" headers="Sent(MB/s) DLM" class='awrnc'>1.09</td><td align="right" headers="Sent(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrnc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrnclb'>1.56</td><td align="right" headers="Received(MB/s) Cache" class='awrnc'>0.29</td><td align="right" headers="Received(MB/s) IPQ" class='awrnc'>0.01</td><td align="right" headers="Received(MB/s) DLM" class='awrnc'>1.23</td><td align="right" headers="Received(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrncrb'>0.03</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>2.97</td><td align="right" class='awrct'>0.59</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>2.32</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrclbt'>2.97</td><td align="right" class='awrct'>0.59</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>2.32</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrcrbt'>0.05</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1.49</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1.16</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnclb'>1.49</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1.16</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrncrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0.10</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrclb'>0.10</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12043"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> null means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics. . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. null means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>4,510.46</td><td align="right" headers="Sent Packets" class='awrc'>4,948,751</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>4,490.09</td><td align="right" headers="Received Packets" class='awrc'>5,055,458</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1,574.95</td><td align="right" headers="Sent Packets" class='awrnc'>3,389,472</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1,576.80</td><td align="right" headers="Received Packets" class='awrnc'>3,745,243</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.37</td><td align="right" headers="Sent Packets" class='awrnc'>993</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.19</td><td align="right" headers="Received Packets" class='awrnc'>863</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.23</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.22</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:4</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.02</td><td align="right" headers="Sent Packets" class='awrnc'>3,083</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.16</td><td align="right" headers="Received Packets" class='awrnc'>3,128</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>32.54</td><td align="right" headers="Sent Packets" class='awrc'>155,146</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>32.54</td><td align="right" headers="Received Packets" class='awrc'>155,146</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>4,552.77</td><td align="right" headers="Sent Packets" class='awrnc'>5,136,326</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>4,450.30</td><td align="right" headers="Received Packets" class='awrnc'>4,890,041</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1,571.88</td><td align="right" headers="Sent Packets" class='awrc'>3,500,801</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>1,579.20</td><td align="right" headers="Received Packets" class='awrc'>3,626,531</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.19</td><td align="right" headers="Sent Packets" class='awrc'>864</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.37</td><td align="right" headers="Received Packets" class='awrc'>996</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.21</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.12</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.02</td><td align="right" headers="Sent Packets" class='awrnc'>3,077</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.16</td><td align="right" headers="Received Packets" class='awrnc'>3,122</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>8.32</td><td align="right" headers="Sent Packets" class='awrc'>94,807</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>8.32</td><td align="right" headers="Received Packets" class='awrc'>94,807</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>12,255.53</td><td align="right" class='awrnct'>17,233,320</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>12,140.12</td><td align="right" class='awrnct'>17,575,335</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>720.91</td><td align="right" class='awrc'>1,013,725</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>714.12</td><td align="right" class='awrc'>1,033,843</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,524.57</td><td align="right" class='awrnc'>1,890,426</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>1,505.78</td><td align="right" class='awrnc'>1,912,323</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12044"></a>
<h3 class="awr">Interconnect Device Statistics (per Second)</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> Blank	means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics (per Second). . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. Blank means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>7.46</td><td align="right" headers="Sent Packets" class='awrc'>8,185</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>7.43</td><td align="right" headers="Received Packets" class='awrc'>8,362</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.61</td><td align="right" headers="Sent Packets" class='awrnc'>5,606</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>2.61</td><td align="right" headers="Received Packets" class='awrnc'>6,195</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>2</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>1</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.23</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.22</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:4</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.05</td><td align="right" headers="Sent Packets" class='awrc'>257</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.05</td><td align="right" headers="Received Packets" class='awrc'>257</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>7.53</td><td align="right" headers="Sent Packets" class='awrnc'>8,495</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>7.36</td><td align="right" headers="Received Packets" class='awrnc'>8,088</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>2.60</td><td align="right" headers="Sent Packets" class='awrc'>5,790</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>2.61</td><td align="right" headers="Received Packets" class='awrc'>5,998</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>1</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>2</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.21</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.12</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.01</td><td align="right" headers="Sent Packets" class='awrc'>157</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.01</td><td align="right" headers="Received Packets" class='awrc'>157</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>20.27</td><td align="right" class='awrnct'>28,504</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>20.08</td><td align="right" class='awrnct'>29,070</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>1.19</td><td align="right" class='awrc'>1,677</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1.18</td><td align="right" class='awrc'>1,710</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>2.52</td><td align="right" class='awrnc'>3,127</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2.49</td><td align="right" class='awrnc'>3,163</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12078"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Affinity Objects - Affinity objects remastered at the begin/end snapshot  </li>
<li class="awr"> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Affinity Objects - Affinity objects remastered at the begin/end snapshot . Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CountsperOps">Counts per Ops</th>
<th class="awrbg" colspan=" 6" id="TimeperOps(seconds)">Time per Ops (seconds)</th>
<th class="awrbg" colspan=" 2" id="AffinityObjects">Affinity Objects</th>
<th class="awrbg" colspan=" 3" id="ReadMostlyObjects">Read Mostly Objects</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Remaster Ops</th><th class="awrbg" scope="col" id="Remastered|Objects">Remastered Objects</th><th class="awrbg" scope="col" id="ReplayLocks|Received">Replay Locks Received</th><th class="awrbg" scope="col" id="ReplayLocks|Sent">Replay Locks Sent</th><th class="awrbg" scope="col" id="Resources|Cleaned">Resources Cleaned</th><th class="awrbg" scope="col" id="Remaster">Remaster</th><th class="awrbg" scope="col" id="Freeze">Freeze</th><th class="awrbg" scope="col" id="Cleanup">Cleanup</th><th class="awrbg" scope="col" id="Replay">Replay</th><th class="awrbg" scope="col" id="Fixwrite">Fixwrite</th><th class="awrbg" scope="col" id="Sync">Sync</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="Begin|(persistent)">Begin (persistent)</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrclb'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrc'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrc'>&#160;</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrclb'>&#160;</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrc'>&#160;</td><td align="right" headers="AffinityObjects Begin" class='awrclb'>1</td><td align="right" headers="AffinityObjects End" class='awrc'>1</td><td align="right" headers="ReadMostlyObjects Begin" class='awrclb'>3</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrc'>1</td><td align="right" headers="ReadMostlyObjects End" class='awrcrb'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrnclb'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrnc'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrnc'>&#160;</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrnclb'>&#160;</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrnc'>&#160;</td><td align="right" headers="AffinityObjects Begin" class='awrnclb'>3</td><td align="right" headers="AffinityObjects End" class='awrnc'>3</td><td align="right" headers="ReadMostlyObjects Begin" class='awrnclb'>3</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrnc'>1</td><td align="right" headers="ReadMostlyObjects End" class='awrncrb'>3</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>2</td><td align="right" class='awrct'>2</td><td align="right" class='awrclbt'>3</td><td align="right" class='awrct'>1</td><td align="right" class='awrcrbt'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Max</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnclb'>3</td><td align="right" class='awrnc'>1</td><td align="right" class='awrncrb'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="622"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12060">SQL ordered by Elapsed Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12061">SQL ordered by CPU Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12066">SQL ordered by User I/O Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12062">SQL ordered by Gets (Global)</a></li>
<li class="awr"><a class="awr" href="#12063">SQL ordered by Reads (Global)</a></li>
<li class="awr"><a class="awr" href="#12081">SQL ordered by UnOptimized Read Requests (Global)</a></li>
<li class="awr"><a class="awr" href="#12065">SQL ordered by Executions (Global)</a></li>
<li class="awr"><a class="awr" href="#12064">SQL ordered by Cluster Wait Time (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12060"></a>
<h3 class="awr">SQL ordered by Elapsed Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   98.3% of Total DB Time (s):		22,807</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total DB Time (s):	   22,807</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Elapsed Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>18,916.82</td><td align="right" headers="Total CPU(s)" class='awrc'>1,052.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>17,434.13</td><td align="right" headers="Total Gets" class='awrc'>7,437,385</td><td align="right" headers="Total Reads" class='awrc'>3,585,359</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Cluster(s)" class='awrc'>934.56</td><td align="right" headers="Total Execs" class='awrc'>1,237,901</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.90</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>82.94</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.85</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>65.81</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.44</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.41</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>3,480.66</td><td align="right" headers="Total CPU(s)" class='awrnc'>231.83</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,097.21</td><td align="right" headers="Total Gets" class='awrnc'>1,580,258</td><td align="right" headers="Total Reads" class='awrnc'>632,106</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Cluster(s)" class='awrnc'>232.10</td><td align="right" headers="Total Execs" class='awrnc'>218,485</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>15.26</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.80</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.15</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.92</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.73</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.90</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.38</td><td align="right" headers="Total CPU(s)" class='awrc'>41.64</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.29</td><td align="right" headers="Total Gets" class='awrc'>239,448</td><td align="right" headers="Total Reads" class='awrc'>109,424</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.48</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.38</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.64</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.29</td><td align="right" headers="PerExecution Gets" class='awrc'>239,448.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,424.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.02</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>32.29</td><td align="right" headers="Total IOWait(s)" class='awrnc'>525.64</td><td align="right" headers="Total Gets" class='awrnc'>257,366</td><td align="right" headers="Total Reads" class='awrnc'>115,071</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>22.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>32.29</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>525.64</td><td align="right" headers="PerExecution Gets" class='awrnc'>257,366.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,071.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>22.04</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.28</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.32</td><td align="right" headers="Total CPU(s)" class='awrc'>41.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.96</td><td align="right" headers="Total Gets" class='awrc'>241,027</td><td align="right" headers="Total Reads" class='awrc'>109,757</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.88</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.96</td><td align="right" headers="PerExecution Gets" class='awrc'>241,027.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,757.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.88</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.63</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.31</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.95</td><td align="right" headers="Total IOWait(s)" class='awrnc'>526.34</td><td align="right" headers="Total Gets" class='awrnc'>250,650</td><td align="right" headers="Total Reads" class='awrnc'>115,093</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>21.80</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.31</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.95</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>526.34</td><td align="right" headers="PerExecution Gets" class='awrnc'>250,650.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,093.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>21.80</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.22</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.85</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.30</td><td align="right" headers="Total CPU(s)" class='awrc'>41.65</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.00</td><td align="right" headers="Total Gets" class='awrc'>237,422</td><td align="right" headers="Total Reads" class='awrc'>109,129</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.67</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.65</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.00</td><td align="right" headers="PerExecution Gets" class='awrc'>237,422.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,129.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.67</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.03</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.27</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.62</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.00</td><td align="right" headers="Total Gets" class='awrnc'>213,991</td><td align="right" headers="Total Reads" class='awrnc'>98,549</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.47</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.27</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.62</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>213,991.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>98,549.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.47</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>1.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.93</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5yrdyuwb16swu">5yrdyuwb16swu</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.20</td><td align="right" headers="Total CPU(s)" class='awrc'>39.95</td><td align="right" headers="Total IOWait(s)" class='awrc'>510.35</td><td align="right" headers="Total Gets" class='awrc'>220,292</td><td align="right" headers="Total Reads" class='awrc'>99,794</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>31.99</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>39.95</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>510.35</td><td align="right" headers="PerExecution Gets" class='awrc'>220,292.00</td><td align="right" headers="PerExecution Reads" class='awrc'>99,794.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>31.99</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.55</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>1.95</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.36</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.20</td><td align="right" headers="Total CPU(s)" class='awrnc'>39.22</td><td align="right" headers="Total IOWait(s)" class='awrnc'>512.72</td><td align="right" headers="Total Gets" class='awrnc'>219,705</td><td align="right" headers="Total Reads" class='awrnc'>100,318</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>29.99</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.20</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>39.22</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>512.72</td><td align="right" headers="PerExecution Gets" class='awrnc'>219,705.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>100,318.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>29.99</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>1.94</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.37</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.55</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12061"></a>
<h3 class="awr">SQL ordered by CPU Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   82.4% of Total CPU Time (s): 	  1,566</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total CPU Time (s):	     1,566</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by CPU Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>1,052.30</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,916.82</td><td align="right" headers="Total IOWait(s)" class='awrc'>17,434.13</td><td align="right" headers="Total Gets" class='awrc'>7,437,385</td><td align="right" headers="Total Reads" class='awrc'>3,585,359</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Cluster(s)" class='awrc'>934.56</td><td align="right" headers="Total Execs" class='awrc'>1,237,901</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.90</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>67.20</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.94</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.65</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>65.81</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.44</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.41</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>231.83</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,480.66</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,097.21</td><td align="right" headers="Total Gets" class='awrnc'>1,580,258</td><td align="right" headers="Total Reads" class='awrnc'>632,106</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Cluster(s)" class='awrnc'>232.10</td><td align="right" headers="Total Execs" class='awrnc'>218,485</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>14.80</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.26</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.04</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.92</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.73</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.90</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>41.67</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.44</td><td align="right" headers="Total IOWait(s)" class='awrc'>506.37</td><td align="right" headers="Total Gets" class='awrc'>238,637</td><td align="right" headers="Total Reads" class='awrc'>108,746</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.43</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>41.67</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.44</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>506.37</td><td align="right" headers="PerExecution Gets" class='awrc'>238,637.00</td><td align="right" headers="PerExecution Reads" class='awrc'>108,746.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.11</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.57</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>41.65</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.30</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.00</td><td align="right" headers="Total Gets" class='awrnc'>237,422</td><td align="right" headers="Total Reads" class='awrnc'>109,129</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.67</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>41.65</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>237,422.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,129.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.67</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.10</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>41.64</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.38</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.29</td><td align="right" headers="Total Gets" class='awrc'>239,448</td><td align="right" headers="Total Reads" class='awrc'>109,424</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.48</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>41.64</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.38</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.29</td><td align="right" headers="PerExecution Gets" class='awrc'>239,448.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,424.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.48</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.02</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>41.40</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.52</td><td align="right" headers="Total IOWait(s)" class='awrnc'>506.85</td><td align="right" headers="Total Gets" class='awrnc'>240,645</td><td align="right" headers="Total Reads" class='awrnc'>109,763</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>41.40</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.52</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>506.85</td><td align="right" headers="PerExecution Gets" class='awrnc'>240,645.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,763.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.97</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>41.19</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.32</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.96</td><td align="right" headers="Total Gets" class='awrc'>241,027</td><td align="right" headers="Total Reads" class='awrc'>109,757</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.88</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>41.19</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.32</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.96</td><td align="right" headers="PerExecution Gets" class='awrc'>241,027.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,757.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.88</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.47</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>41.04</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.47</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.31</td><td align="right" headers="Total Gets" class='awrnc'>239,605</td><td align="right" headers="Total Reads" class='awrnc'>109,616</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.69</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>41.04</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.47</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.31</td><td align="right" headers="PerExecution Gets" class='awrnc'>239,605.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,616.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.69</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.95</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>41.02</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.31</td><td align="right" headers="Total IOWait(s)" class='awrc'>508.08</td><td align="right" headers="Total Gets" class='awrc'>240,549</td><td align="right" headers="Total Reads" class='awrc'>109,692</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.66</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>41.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.31</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>508.08</td><td align="right" headers="PerExecution Gets" class='awrc'>240,549.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,692.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.66</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.47</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.86</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>40.91</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.16</td><td align="right" headers="Total IOWait(s)" class='awrnc'>506.13</td><td align="right" headers="Total Gets" class='awrnc'>210,690</td><td align="right" headers="Total Reads" class='awrnc'>97,384</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.41</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>40.91</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.16</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>506.13</td><td align="right" headers="PerExecution Gets" class='awrnc'>210,690.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>97,384.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.41</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.61</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>1.86</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.30</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.01</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12066"></a>
<h3 class="awr">SQL ordered by User I/O Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   99.7% of Total User I/O Wait Time (s):	   20,596</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total User I/O Wait Time (s):	      20,596</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by User I/O Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>17,434.13</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,916.82</td><td align="right" headers="Total CPU(s)" class='awrc'>1,052.30</td><td align="right" headers="Total Gets" class='awrc'>7,437,385</td><td align="right" headers="Total Reads" class='awrc'>3,585,359</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Cluster(s)" class='awrc'>934.56</td><td align="right" headers="Total Execs" class='awrc'>1,237,901</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.90</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>84.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.94</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.20</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>65.81</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.44</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.41</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>3,097.21</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,480.66</td><td align="right" headers="Total CPU(s)" class='awrnc'>231.83</td><td align="right" headers="Total Gets" class='awrnc'>1,580,258</td><td align="right" headers="Total Reads" class='awrnc'>632,106</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Cluster(s)" class='awrnc'>232.10</td><td align="right" headers="Total Execs" class='awrnc'>218,485</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>15.04</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.26</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.80</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.92</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.73</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.90</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>508.96</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrc'>41.19</td><td align="right" headers="Total Gets" class='awrc'>241,027</td><td align="right" headers="Total Reads" class='awrc'>109,757</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.88</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>508.96</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.19</td><td align="right" headers="PerExecution Gets" class='awrc'>241,027.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,757.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.88</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.47</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.63</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#32m2a739zbzz3">32m2a739zbzz3</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>508.08</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.31</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.02</td><td align="right" headers="Total Gets" class='awrnc'>240,549</td><td align="right" headers="Total Reads" class='awrnc'>109,692</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.66</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>508.08</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.31</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.02</td><td align="right" headers="PerExecution Gets" class='awrnc'>240,549.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,692.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.47</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.62</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.86</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>507.31</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.47</td><td align="right" headers="Total CPU(s)" class='awrc'>41.04</td><td align="right" headers="Total Gets" class='awrc'>239,605</td><td align="right" headers="Total Reads" class='awrc'>109,616</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>34.69</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>507.31</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.47</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.04</td><td align="right" headers="PerExecution Gets" class='awrc'>239,605.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,616.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>34.69</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.95</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>507.29</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.38</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.64</td><td align="right" headers="Total Gets" class='awrnc'>239,448</td><td align="right" headers="Total Reads" class='awrnc'>109,424</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.48</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>507.29</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.38</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.64</td><td align="right" headers="PerExecution Gets" class='awrnc'>239,448.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,424.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.48</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.66</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.02</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>507.00</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="Total CPU(s)" class='awrc'>41.65</td><td align="right" headers="Total Gets" class='awrc'>237,422</td><td align="right" headers="Total Reads" class='awrc'>109,129</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.67</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>507.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.65</td><td align="right" headers="PerExecution Gets" class='awrc'>237,422.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,129.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.67</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.03</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>506.85</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.52</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.40</td><td align="right" headers="Total Gets" class='awrnc'>240,645</td><td align="right" headers="Total Reads" class='awrnc'>109,763</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>506.85</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.52</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.40</td><td align="right" headers="PerExecution Gets" class='awrnc'>240,645.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,763.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.97</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>506.37</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.44</td><td align="right" headers="Total CPU(s)" class='awrc'>41.67</td><td align="right" headers="Total Gets" class='awrc'>238,637</td><td align="right" headers="Total Reads" class='awrc'>108,746</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.43</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>506.37</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.44</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.67</td><td align="right" headers="PerExecution Gets" class='awrc'>238,637.00</td><td align="right" headers="PerExecution Reads" class='awrc'>108,746.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.43</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.11</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.57</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>506.13</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.16</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.91</td><td align="right" headers="Total Gets" class='awrnc'>210,690</td><td align="right" headers="Total Reads" class='awrnc'>97,384</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.41</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>506.13</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.16</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.91</td><td align="right" headers="PerExecution Gets" class='awrnc'>210,690.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>97,384.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.41</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>1.86</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.30</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.01</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12062"></a>
<h3 class="awr">SQL ordered by Gets (Global)</h3>
<ul>
<li class="awr">Total Buffer Gets:	11,300,825</li>
<li class="awr">Captured SQL account for   84.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Gets (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Gets" class='awrclb'>7,437,385</td><td align="right" headers="Total Reads" class='awrc'>3,585,359</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,916.82</td><td align="right" headers="Total CPU(s)" class='awrc'>1,052.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>17,434.13</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Cluster(s)" class='awrc'>934.56</td><td align="right" headers="Total Execs" class='awrc'>1,237,901</td><td align="right" headers="PerExecution Gets" class='awrclb'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.90</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>65.81</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.94</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.65</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.44</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.41</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Gets" class='awrnclb'>1,580,258</td><td align="right" headers="Total Reads" class='awrnc'>632,106</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,480.66</td><td align="right" headers="Total CPU(s)" class='awrnc'>231.83</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,097.21</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Cluster(s)" class='awrnc'>232.10</td><td align="right" headers="Total Execs" class='awrnc'>218,485</td><td align="right" headers="PerExecution Gets" class='awrnclb'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>13.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.92</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.26</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.80</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.04</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.73</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.90</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total Gets" class='awrclb'>519,300</td><td align="right" headers="Total Reads" class='awrc'>2</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.51</td><td align="right" headers="Total CPU(s)" class='awrc'>1.34</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.01</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>519,300.00</td><td align="right" headers="PerExecution Reads" class='awrc'>2.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.51</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>1.34</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>4.60</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td><td align="right" headers="Total Gets" class='awrnclb'>519,281</td><td align="right" headers="Total Reads" class='awrnc'>1</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>1.71</td><td align="right" headers="Total CPU(s)" class='awrnc'>1.54</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>519,281.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>1.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>1.71</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>1.54</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.10</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td><td align="right" headers="Total Gets" class='awrclb'>274,946</td><td align="right" headers="Total Reads" class='awrc'>121,230</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.86</td><td align="right" headers="Total CPU(s)" class='awrc'>29.93</td><td align="right" headers="Total IOWait(s)" class='awrc'>548.36</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>274,946.00</td><td align="right" headers="PerExecution Reads" class='awrc'>121,230.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.86</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>29.93</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>548.36</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.24</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.43</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.86</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>1.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total Gets" class='awrnclb'>271,950</td><td align="right" headers="Total Reads" class='awrnc'>120,868</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.61</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>547.63</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.57</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>271,950.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>120,868.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.61</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>547.63</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.57</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.41</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>1.92</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.66</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total Gets" class='awrclb'>257,366</td><td align="right" headers="Total Reads" class='awrc'>115,071</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrc'>32.29</td><td align="right" headers="Total IOWait(s)" class='awrc'>525.64</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>22.04</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>257,366.00</td><td align="right" headers="PerExecution Reads" class='awrc'>115,071.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>32.29</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>525.64</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>22.04</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.28</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.55</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.87</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total Gets" class='awrnclb'>250,650</td><td align="right" headers="Total Reads" class='awrnc'>115,093</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.31</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.95</td><td align="right" headers="Total IOWait(s)" class='awrnc'>526.34</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>21.80</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>250,650.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,093.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.31</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.95</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>526.34</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>21.80</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.22</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.56</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.85</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total Gets" class='awrclb'>244,389</td><td align="right" headers="Total Reads" class='awrc'>111,987</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.83</td><td align="right" headers="Total CPU(s)" class='awrc'>38.89</td><td align="right" headers="Total IOWait(s)" class='awrc'>516.58</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.14</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>244,389.00</td><td align="right" headers="PerExecution Reads" class='awrc'>111,987.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.83</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>38.89</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>516.58</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.14</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.16</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.51</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total Gets" class='awrnclb'>244,036</td><td align="right" headers="Total Reads" class='awrnc'>111,254</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.81</td><td align="right" headers="Total CPU(s)" class='awrnc'>39.92</td><td align="right" headers="Total IOWait(s)" class='awrnc'>513.31</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>29.32</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>244,036.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>111,254.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.81</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>39.92</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>513.31</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>29.32</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.16</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.55</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12063"></a>
<h3 class="awr">SQL ordered by Reads (Global)</h3>
<ul>
<li class="awr">Total Disk Reads:	4,235,980</li>
<li class="awr">Captured SQL account for   99.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Reads (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Reads" class='awrclb'>3,585,359</td><td align="right" headers="Total Gets" class='awrc'>7,437,385</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,916.82</td><td align="right" headers="Total CPU(s)" class='awrc'>1,052.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>17,434.13</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Cluster(s)" class='awrc'>934.56</td><td align="right" headers="Total Execs" class='awrc'>1,237,901</td><td align="right" headers="PerExecution Reads" class='awrclb'>2.90</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>84.64</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>65.81</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.94</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.65</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.44</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.41</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Reads" class='awrnclb'>632,106</td><td align="right" headers="Total Gets" class='awrnc'>1,580,258</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,480.66</td><td align="right" headers="Total CPU(s)" class='awrnc'>231.83</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,097.21</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Cluster(s)" class='awrnc'>232.10</td><td align="right" headers="Total Execs" class='awrnc'>218,485</td><td align="right" headers="PerExecution Reads" class='awrnclb'>2.89</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>14.92</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.26</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.80</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.04</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.73</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.90</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td><td align="right" headers="Total Reads" class='awrclb'>121,230</td><td align="right" headers="Total Gets" class='awrc'>274,946</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.86</td><td align="right" headers="Total CPU(s)" class='awrc'>29.93</td><td align="right" headers="Total IOWait(s)" class='awrc'>548.36</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>121,230.00</td><td align="right" headers="PerExecution Gets" class='awrc'>274,946.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.86</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>29.93</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>548.36</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.24</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.86</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.43</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>1.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total Reads" class='awrnclb'>120,868</td><td align="right" headers="Total Gets" class='awrnc'>271,950</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.61</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>547.63</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.57</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>120,868.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>271,950.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.61</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>547.63</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.57</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.85</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.41</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>1.92</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.66</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total Reads" class='awrclb'>115,093</td><td align="right" headers="Total Gets" class='awrc'>250,650</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.31</td><td align="right" headers="Total CPU(s)" class='awrc'>31.95</td><td align="right" headers="Total IOWait(s)" class='awrc'>526.34</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>21.80</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>115,093.00</td><td align="right" headers="PerExecution Gets" class='awrc'>250,650.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.31</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.95</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>526.34</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>21.80</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.72</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.22</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.56</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.85</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total Reads" class='awrnclb'>115,071</td><td align="right" headers="Total Gets" class='awrnc'>257,366</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>32.29</td><td align="right" headers="Total IOWait(s)" class='awrnc'>525.64</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>22.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>115,071.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>257,366.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>32.29</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>525.64</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>22.04</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.72</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.28</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.55</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total Reads" class='awrclb'>111,987</td><td align="right" headers="Total Gets" class='awrc'>244,389</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.83</td><td align="right" headers="Total CPU(s)" class='awrc'>38.89</td><td align="right" headers="Total IOWait(s)" class='awrc'>516.58</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.14</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>111,987.00</td><td align="right" headers="PerExecution Gets" class='awrc'>244,389.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.83</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>38.89</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>516.58</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.14</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.64</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.16</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.51</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total Reads" class='awrnclb'>111,254</td><td align="right" headers="Total Gets" class='awrnc'>244,036</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.81</td><td align="right" headers="Total CPU(s)" class='awrnc'>39.92</td><td align="right" headers="Total IOWait(s)" class='awrnc'>513.31</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>29.32</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>111,254.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>244,036.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.81</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>39.92</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>513.31</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>29.32</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.63</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.16</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.55</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total Reads" class='awrclb'>110,925</td><td align="right" headers="Total Gets" class='awrc'>243,399</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.13</td><td align="right" headers="Total CPU(s)" class='awrc'>40.89</td><td align="right" headers="Total IOWait(s)" class='awrc'>511.15</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>31.89</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>110,925.00</td><td align="right" headers="PerExecution Gets" class='awrc'>243,399.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.13</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>40.89</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>511.15</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>31.89</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.62</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.71</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td><td align="right" headers="Total Reads" class='awrnclb'>110,574</td><td align="right" headers="Total Gets" class='awrnc'>242,596</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.62</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.15</td><td align="right" headers="Total IOWait(s)" class='awrnc'>511.22</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>31.23</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>110,574.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>242,596.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.62</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.15</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>511.22</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>31.23</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.61</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.56</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12081"></a>
<h3 class="awr">SQL ordered by UnOptimized Read Requests (Global)</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    4,235,362</li>
<li class="awr">Captured SQL account for    2.4% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       4,235,362</li>
<li class="awr">Captured SQL account for    2.4% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by UnOptimized Read Requests (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 9" id="Total">Total</th>
<th class="awrbg" colspan=" 8" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 8" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#b7tjac76r5nmd">b7tjac76r5nmd</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>121,230</td><td align="right" headers="Total Requests" class='awrc'>121,230</td><td align="right" headers="Total Reads" class='awrc'>121,230</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.86</td><td align="right" headers="Total CPU(s)" class='awrc'>29.93</td><td align="right" headers="Total IOWait(s)" class='awrc'>548.36</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>121,230.00</td><td align="right" headers="PerExecution Requests" class='awrc'>121,230.00</td><td align="right" headers="PerExecution Reads" class='awrc'>121,230.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.86</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>29.93</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>548.36</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.24</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.86</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.86</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.86</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>1.91</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>120,868</td><td align="right" headers="Total Requests" class='awrnc'>120,868</td><td align="right" headers="Total Reads" class='awrnc'>120,868</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.61</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>547.63</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.57</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>120,868.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>120,868.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>120,868.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.61</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>547.63</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.57</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.85</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>1.92</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.66</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>115,093</td><td align="right" headers="Total Requests" class='awrc'>115,093</td><td align="right" headers="Total Reads" class='awrc'>115,093</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.31</td><td align="right" headers="Total CPU(s)" class='awrc'>31.95</td><td align="right" headers="Total IOWait(s)" class='awrc'>526.34</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>21.80</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>115,093.00</td><td align="right" headers="PerExecution Requests" class='awrc'>115,093.00</td><td align="right" headers="PerExecution Reads" class='awrc'>115,093.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.31</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.95</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>526.34</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>21.80</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.72</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.56</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.85</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>115,071</td><td align="right" headers="Total Requests" class='awrnc'>115,071</td><td align="right" headers="Total Reads" class='awrnc'>115,071</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>32.29</td><td align="right" headers="Total IOWait(s)" class='awrnc'>525.64</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>22.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>115,071.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>115,071.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,071.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>32.29</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>525.64</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>22.04</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.72</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.55</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>111,987</td><td align="right" headers="Total Requests" class='awrc'>111,987</td><td align="right" headers="Total Reads" class='awrc'>111,987</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.83</td><td align="right" headers="Total CPU(s)" class='awrc'>38.89</td><td align="right" headers="Total IOWait(s)" class='awrc'>516.58</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.14</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>111,987.00</td><td align="right" headers="PerExecution Requests" class='awrc'>111,987.00</td><td align="right" headers="PerExecution Reads" class='awrc'>111,987.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.83</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>38.89</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>516.58</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.14</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.64</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.64</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.51</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>111,254</td><td align="right" headers="Total Requests" class='awrnc'>111,254</td><td align="right" headers="Total Reads" class='awrnc'>111,254</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.81</td><td align="right" headers="Total CPU(s)" class='awrnc'>39.92</td><td align="right" headers="Total IOWait(s)" class='awrnc'>513.31</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>29.32</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>111,254.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>111,254.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>111,254.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.81</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>39.92</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>513.31</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>29.32</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.63</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.63</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.55</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>110,925</td><td align="right" headers="Total Requests" class='awrc'>110,925</td><td align="right" headers="Total Reads" class='awrc'>110,925</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.13</td><td align="right" headers="Total CPU(s)" class='awrc'>40.89</td><td align="right" headers="Total IOWait(s)" class='awrc'>511.15</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>31.89</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>110,925.00</td><td align="right" headers="PerExecution Requests" class='awrc'>110,925.00</td><td align="right" headers="PerExecution Reads" class='awrc'>110,925.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.13</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>40.89</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>511.15</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>31.89</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.62</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.71</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>110,574</td><td align="right" headers="Total Requests" class='awrnc'>110,574</td><td align="right" headers="Total Reads" class='awrnc'>110,574</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.62</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.15</td><td align="right" headers="Total IOWait(s)" class='awrnc'>511.22</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>31.23</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>110,574.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>110,574.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>110,574.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.62</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.15</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>511.22</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>31.23</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.61</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.56</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>110,442</td><td align="right" headers="Total Requests" class='awrc'>110,442</td><td align="right" headers="Total Reads" class='awrc'>110,442</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.66</td><td align="right" headers="Total CPU(s)" class='awrc'>40.64</td><td align="right" headers="Total IOWait(s)" class='awrc'>510.67</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>31.78</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>110,442.00</td><td align="right" headers="PerExecution Requests" class='awrc'>110,442.00</td><td align="right" headers="PerExecution Reads" class='awrc'>110,442.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.66</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>40.64</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>510.67</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>31.78</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.61</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.60</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.70</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>110,266</td><td align="right" headers="Total Requests" class='awrnc'>110,266</td><td align="right" headers="Total Reads" class='awrnc'>110,266</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.72</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.63</td><td align="right" headers="Total IOWait(s)" class='awrnc'>509.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.07</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>110,266.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>110,266.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>110,266.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.72</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.63</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>509.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.07</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.60</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12065"></a>
<h3 class="awr">SQL ordered by Executions (Global)</h3>
<ul>
<li class="awr">Total Executions:	1,466,483</li>
<li class="awr">Captured SQL account for   99.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Executions (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Execs" class='awrclb'>1,237,901</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,916.82</td><td align="right" headers="Total CPU(s)" class='awrc'>1,052.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>17,434.13</td><td align="right" headers="Total Gets" class='awrc'>7,437,385</td><td align="right" headers="Total Reads" class='awrc'>3,585,359</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Cluster(s)" class='awrc'>934.56</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.90</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>84.41</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.94</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.20</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.65</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>65.81</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>79.44</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Execs" class='awrnclb'>218,485</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,480.66</td><td align="right" headers="Total CPU(s)" class='awrnc'>231.83</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,097.21</td><td align="right" headers="Total Gets" class='awrnc'>1,580,258</td><td align="right" headers="Total Reads" class='awrnc'>632,106</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Cluster(s)" class='awrnc'>232.10</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>14.90</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.26</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.80</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.04</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>13.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.92</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>19.73</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td><td align="right" headers="Total Execs" class='awrclb'>460</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.11</td><td align="right" headers="Total CPU(s)" class='awrc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>936</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>452</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>2.03</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>0.98</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td><td align="right" headers="Total Execs" class='awrnclb'>446</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>893</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>2.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td><td align="right" headers="Total Execs" class='awrclb'>333</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.14</td><td align="right" headers="Total CPU(s)" class='awrc'>0.11</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>2,015</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>333</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>6.05</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td><td align="right" headers="Total Execs" class='awrnclb'>282</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.15</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.08</td><td align="right" headers="Total Gets" class='awrnc'>928</td><td align="right" headers="Total Reads" class='awrnc'>22</td><td align="right" headers="Total Rows" class='awrnc'>282</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>3.29</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.08</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Execs" class='awrclb'>181</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.41</td><td align="right" headers="Total CPU(s)" class='awrc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.04</td><td align="right" headers="Total Gets" class='awrc'>785</td><td align="right" headers="Total Reads" class='awrc'>10</td><td align="right" headers="Total Rows" class='awrc'>181</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.34</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.34</td><td align="right" headers="PerExecution Reads" class='awrc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.03</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td><td align="right" headers="Total Execs" class='awrnclb'>120</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.02</td><td align="right" headers="Total Gets" class='awrnc'>841</td><td align="right" headers="Total Reads" class='awrnc'>5</td><td align="right" headers="Total Rows" class='awrnc'>120</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.25</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.01</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.04</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.02</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td><td align="right" headers="Total Execs" class='awrclb'>94</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.07</td><td align="right" headers="Total CPU(s)" class='awrc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>51</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>94</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>0.54</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5cu0x10yu88sw">5cu0x10yu88sw</a></td><td align="right" headers="Total Execs" class='awrnclb'>62</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.05</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.02</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="Total Gets" class='awrnc'>375</td><td align="right" headers="Total Reads" class='awrnc'>5</td><td align="right" headers="Total Rows" class='awrnc'>62</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>6.05</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.08</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>merge into sys.wri$_index_usag...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12064"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time (Global)</h3>
<ul>
<li class="awr">Total Cluster Wait Time (s):	       1,176</li>
<li class="awr">Captured SQL account for   99.3% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Cluster Wait Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>934.56</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,916.82</td><td align="right" headers="Total CPU(s)" class='awrc'>1,052.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>17,434.13</td><td align="right" headers="Total Gets" class='awrc'>7,437,385</td><td align="right" headers="Total Reads" class='awrc'>3,585,359</td><td align="right" headers="Total Rows" class='awrc'>1,237,931</td><td align="right" headers="Total Execs" class='awrc'>1,237,901</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.90</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>79.44</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.94</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>67.20</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>84.65</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>65.81</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.41</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>232.10</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,480.66</td><td align="right" headers="Total CPU(s)" class='awrnc'>231.83</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,097.21</td><td align="right" headers="Total Gets" class='awrnc'>1,580,258</td><td align="right" headers="Total Reads" class='awrnc'>632,106</td><td align="right" headers="Total Rows" class='awrnc'>655,455</td><td align="right" headers="Total Execs" class='awrnc'>218,485</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>19.73</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.26</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.80</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>13.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.92</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.90</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>35.67</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="Total CPU(s)" class='awrc'>41.65</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.00</td><td align="right" headers="Total Gets" class='awrc'>237,422</td><td align="right" headers="Total Reads" class='awrc'>109,129</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>35.67</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.65</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.00</td><td align="right" headers="PerExecution Gets" class='awrc'>237,422.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,129.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.10</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#91g7mg52grvpz">91g7mg52grvpz</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>35.48</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.38</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.64</td><td align="right" headers="Total IOWait(s)" class='awrnc'>507.29</td><td align="right" headers="Total Gets" class='awrnc'>239,448</td><td align="right" headers="Total Reads" class='awrnc'>109,424</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>35.48</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.38</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.64</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>507.29</td><td align="right" headers="PerExecution Gets" class='awrnc'>239,448.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,424.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>3.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.66</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>35.43</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.44</td><td align="right" headers="Total CPU(s)" class='awrc'>41.67</td><td align="right" headers="Total IOWait(s)" class='awrc'>506.37</td><td align="right" headers="Total Gets" class='awrc'>238,637</td><td align="right" headers="Total Reads" class='awrc'>108,746</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>35.43</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.44</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.67</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>506.37</td><td align="right" headers="PerExecution Gets" class='awrc'>238,637.00</td><td align="right" headers="PerExecution Reads" class='awrc'>108,746.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.66</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.11</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.57</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>35.41</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.16</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.91</td><td align="right" headers="Total IOWait(s)" class='awrnc'>506.13</td><td align="right" headers="Total Gets" class='awrnc'>210,690</td><td align="right" headers="Total Reads" class='awrnc'>97,384</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>35.41</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.16</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.91</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>506.13</td><td align="right" headers="PerExecution Gets" class='awrnc'>210,690.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>97,384.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>3.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.86</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.30</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#d3r94djtpj7r9">d3r94djtpj7r9</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>35.27</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.97</td><td align="right" headers="Total CPU(s)" class='awrc'>40.63</td><td align="right" headers="Total IOWait(s)" class='awrc'>506.43</td><td align="right" headers="Total Gets" class='awrc'>215,983</td><td align="right" headers="Total Reads" class='awrc'>98,808</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>35.27</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.97</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>40.63</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>506.43</td><td align="right" headers="PerExecution Gets" class='awrc'>215,983.00</td><td align="right" headers="PerExecution Reads" class='awrc'>98,808.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>1.91</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.33</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>35.00</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>567.52</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.40</td><td align="right" headers="Total IOWait(s)" class='awrnc'>506.85</td><td align="right" headers="Total Gets" class='awrnc'>240,645</td><td align="right" headers="Total Reads" class='awrnc'>109,763</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>35.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>567.52</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.40</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>506.85</td><td align="right" headers="PerExecution Gets" class='awrnc'>240,645.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>109,763.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>2.97</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>34.69</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.47</td><td align="right" headers="Total CPU(s)" class='awrc'>41.04</td><td align="right" headers="Total IOWait(s)" class='awrc'>507.31</td><td align="right" headers="Total Gets" class='awrc'>239,605</td><td align="right" headers="Total Reads" class='awrc'>109,616</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>34.69</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.47</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.04</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>507.31</td><td align="right" headers="PerExecution Gets" class='awrc'>239,605.00</td><td align="right" headers="PerExecution Reads" class='awrc'>109,616.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>2.95</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.62</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.12</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>34.47</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.27</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.62</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.00</td><td align="right" headers="Total Gets" class='awrnc'>213,991</td><td align="right" headers="Total Reads" class='awrnc'>98,549</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>34.47</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.27</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.62</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>213,991.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>98,549.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>2.93</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.59</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.47</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.33</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="623"></a>
<h2 class="awr">
Global Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12071">System Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12072">Global Messaging Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12073">System Statistics (Absolute Values)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12071"></a>
<h3 class="awr">System Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>1,103</td><td align="right" class='awrnc'>1.82</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.91</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.11</td><td align="right" headers="perSecond Min" class='awrnc'>0.84</td><td align="right" headers="perSecond Max" class='awrncrb'>0.99</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>269</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.22</td><td align="right" headers="perSecond Max" class='awrcrb'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>897</td><td align="right" class='awrnc'>1.48</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.70</td><td align="right" headers="perSecond Max" class='awrncrb'>0.79</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.11</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>834</td><td align="right" class='awrc'>1.38</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.69</td><td align="right" headers="perSecond StdDev" class='awrc'>0.10</td><td align="right" headers="perSecond Min" class='awrc'>0.62</td><td align="right" headers="perSecond Max" class='awrcrb'>0.76</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>670</td><td align="right" class='awrnc'>1.11</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.55</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.49</td><td align="right" headers="perSecond Max" class='awrncrb'>0.62</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>691</td><td align="right" class='awrnc'>1.14</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.55</td><td align="right" headers="perSecond Max" class='awrncrb'>0.59</td></tr>
<tr><td scope="row" class='awrc'>ASSM wasted db state change</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO (bound) vector count</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Batched IO block miss count</td><td align="right" class='awrc'>1,194,379</td><td align="right" class='awrc'>1,975.50</td><td align="right" class='awrc'>5.44</td><td align="right" headers="perSecond Average" class='awrclb'>987.75</td><td align="right" headers="perSecond StdDev" class='awrc'>8.80</td><td align="right" headers="perSecond Min" class='awrc'>981.53</td><td align="right" headers="perSecond Max" class='awrcrb'>993.97</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO double miss count</td><td align="right" class='awrnc'>1,194,354</td><td align="right" class='awrnc'>1,975.46</td><td align="right" class='awrnc'>5.44</td><td align="right" headers="perSecond Average" class='awrnclb'>987.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.77</td><td align="right" headers="perSecond Min" class='awrnc'>981.53</td><td align="right" headers="perSecond Max" class='awrncrb'>993.93</td></tr>
<tr><td scope="row" class='awrc'>Batched IO same unit count</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO single block count</td><td align="right" class='awrnc'>1,194,360</td><td align="right" class='awrnc'>1,975.47</td><td align="right" class='awrnc'>5.44</td><td align="right" headers="perSecond Average" class='awrnclb'>987.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.77</td><td align="right" headers="perSecond Min" class='awrnc'>981.53</td><td align="right" headers="perSecond Max" class='awrncrb'>993.94</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector block count</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector read count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Block Cleanout Optim referenced</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>CCursor + sql area evicted</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>CPU used by this session</td><td align="right" class='awrc'>224,801</td><td align="right" class='awrc'>371.82</td><td align="right" class='awrc'>1.02</td><td align="right" headers="perSecond Average" class='awrclb'>185.91</td><td align="right" headers="perSecond StdDev" class='awrc'>9.71</td><td align="right" headers="perSecond Min" class='awrc'>179.04</td><td align="right" headers="perSecond Max" class='awrcrb'>192.78</td></tr>
<tr><td scope="row" class='awrnc'>CPU used when call started</td><td align="right" class='awrnc'>166,520</td><td align="right" class='awrnc'>275.42</td><td align="right" class='awrnc'>0.76</td><td align="right" headers="perSecond Average" class='awrnclb'>137.71</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.99</td><td align="right" headers="perSecond Min" class='awrnc'>129.94</td><td align="right" headers="perSecond Max" class='awrncrb'>145.49</td></tr>
<tr><td scope="row" class='awrc'>CR blocks created</td><td align="right" class='awrc'>1,483</td><td align="right" class='awrc'>2.45</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.23</td><td align="right" headers="perSecond StdDev" class='awrc'>0.60</td><td align="right" headers="perSecond Min" class='awrc'>0.80</td><td align="right" headers="perSecond Max" class='awrcrb'>1.65</td></tr>
<tr><td scope="row" class='awrnc'>Cached Commit SCN referenced</td><td align="right" class='awrnc'>3,181,015</td><td align="right" class='awrnc'>5,261.39</td><td align="right" class='awrnc'>14.49</td><td align="right" headers="perSecond Average" class='awrnclb'>2,630.70</td><td align="right" headers="perSecond StdDev" class='awrnc'>95.16</td><td align="right" headers="perSecond Min" class='awrnc'>2,563.41</td><td align="right" headers="perSecond Max" class='awrncrb'>2,697.99</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Receive Window</td><td align="right" class='awrc'>287</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.24</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Send Window</td><td align="right" class='awrnc'>287</td><td align="right" class='awrnc'>0.47</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.23</td><td align="right" headers="perSecond Max" class='awrncrb'>0.24</td></tr>
<tr><td scope="row" class='awrc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrc'>1,405,235</td><td align="right" class='awrc'>2,324.30</td><td align="right" class='awrc'>6.40</td><td align="right" headers="perSecond Average" class='awrclb'>1,162.15</td><td align="right" headers="perSecond StdDev" class='awrc'>1,575.69</td><td align="right" headers="perSecond Min" class='awrc'>47.96</td><td align="right" headers="perSecond Max" class='awrcrb'>2,276.33</td></tr>
<tr><td scope="row" class='awrnc'>Client Send Congestion Window</td><td align="right" class='awrnc'>410</td><td align="right" class='awrnc'>0.68</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.33</td><td align="right" headers="perSecond Max" class='awrncrb'>0.35</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Received</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrc'>149</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrnc'>107,214</td><td align="right" class='awrnc'>177.33</td><td align="right" class='awrnc'>0.49</td><td align="right" headers="perSecond Average" class='awrnclb'>88.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.87</td><td align="right" headers="perSecond Min" class='awrnc'>85.93</td><td align="right" headers="perSecond Max" class='awrncrb'>91.40</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrc'>113,088</td><td align="right" class='awrc'>187.05</td><td align="right" class='awrc'>0.52</td><td align="right" headers="perSecond Average" class='awrclb'>93.52</td><td align="right" headers="perSecond StdDev" class='awrc'>7.59</td><td align="right" headers="perSecond Min" class='awrc'>88.15</td><td align="right" headers="perSecond Max" class='awrcrb'>98.89</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Acked</td><td align="right" class='awrnc'>637,290</td><td align="right" class='awrnc'>1,054.08</td><td align="right" class='awrnc'>2.90</td><td align="right" headers="perSecond Average" class='awrnclb'>527.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>31.79</td><td align="right" headers="perSecond Min" class='awrnc'>504.56</td><td align="right" headers="perSecond Max" class='awrncrb'>549.52</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Received</td><td align="right" class='awrc'>249,357</td><td align="right" class='awrc'>412.44</td><td align="right" class='awrc'>1.14</td><td align="right" headers="perSecond Average" class='awrclb'>206.22</td><td align="right" headers="perSecond StdDev" class='awrc'>8.31</td><td align="right" headers="perSecond Min" class='awrc'>200.34</td><td align="right" headers="perSecond Max" class='awrcrb'>212.09</td></tr>
<tr><td scope="row" class='awrnc'>DB time</td><td align="right" class='awrnc'>2,400,996</td><td align="right" class='awrnc'>3,971.24</td><td align="right" class='awrnc'>10.94</td><td align="right" headers="perSecond Average" class='awrnclb'>1,985.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>140.00</td><td align="right" headers="perSecond Min" class='awrnc'>1,886.63</td><td align="right" headers="perSecond Max" class='awrncrb'>2,084.62</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoint buffers written</td><td align="right" class='awrc'>33,810</td><td align="right" class='awrc'>55.92</td><td align="right" class='awrc'>0.15</td><td align="right" headers="perSecond Average" class='awrclb'>27.96</td><td align="right" headers="perSecond StdDev" class='awrc'>1.22</td><td align="right" headers="perSecond Min" class='awrc'>27.10</td><td align="right" headers="perSecond Max" class='awrcrb'>28.82</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoints</td><td align="right" class='awrnc'>148</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>DBWR fusion writes</td><td align="right" class='awrc'>171</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.18</td></tr>
<tr><td scope="row" class='awrnc'>DBWR object drop buffers written</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>DBWR transaction table writes</td><td align="right" class='awrc'>565</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.47</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.44</td><td align="right" headers="perSecond Max" class='awrcrb'>0.49</td></tr>
<tr><td scope="row" class='awrnc'>DBWR undo block writes</td><td align="right" class='awrnc'>20,435</td><td align="right" class='awrnc'>33.80</td><td align="right" class='awrnc'>0.09</td><td align="right" headers="perSecond Average" class='awrnclb'>16.90</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>16.86</td><td align="right" headers="perSecond Max" class='awrncrb'>16.94</td></tr>
<tr><td scope="row" class='awrc'>DFO trees parallelized</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>Effective IO time</td><td align="right" class='awrnc'>140,119</td><td align="right" class='awrnc'>231.76</td><td align="right" class='awrnc'>0.64</td><td align="right" headers="perSecond Average" class='awrnclb'>231.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>231.76</td><td align="right" headers="perSecond Max" class='awrncrb'>231.76</td></tr>
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>660,505</td><td align="right" class='awrc'>1,092.47</td><td align="right" class='awrc'>3.01</td><td align="right" headers="perSecond Average" class='awrclb'>546.24</td><td align="right" headers="perSecond StdDev" class='awrc'>7.15</td><td align="right" headers="perSecond Min" class='awrc'>541.18</td><td align="right" headers="perSecond Max" class='awrcrb'>551.29</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>314</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.26</td><td align="right" headers="perSecond Max" class='awrncrb'>0.26</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>10,813,440</td><td align="right" class='awrc'>17,885.55</td><td align="right" class='awrc'>49.26</td><td align="right" headers="perSecond Average" class='awrclb'>8,942.77</td><td align="right" headers="perSecond StdDev" class='awrc'>5,288.95</td><td align="right" headers="perSecond Min" class='awrc'>5,202.92</td><td align="right" headers="perSecond Max" class='awrcrb'>12,682.62</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>54,058</td><td align="right" class='awrnc'>89.41</td><td align="right" class='awrnc'>0.25</td><td align="right" headers="perSecond Average" class='awrnclb'>44.71</td><td align="right" headers="perSecond StdDev" class='awrnc'>62.31</td><td align="right" headers="perSecond Min" class='awrnc'>0.65</td><td align="right" headers="perSecond Max" class='awrncrb'>88.77</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>3,424</td><td align="right" class='awrnc'>5.66</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>2.83</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.64</td><td align="right" headers="perSecond Min" class='awrnc'>1.67</td><td align="right" headers="perSecond Max" class='awrncrb'>3.99</td></tr>
<tr><td scope="row" class='awrc'>KTFB free req</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free space (block)</td><td align="right" class='awrnc'>2,776</td><td align="right" class='awrnc'>4.59</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.35</td><td align="right" headers="perSecond Min" class='awrnc'>2.05</td><td align="right" headers="perSecond Max" class='awrncrb'>2.54</td></tr>
<tr><td scope="row" class='awrc'>KTFB free time (ms)</td><td align="right" class='awrc'>405</td><td align="right" class='awrc'>0.67</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.33</td><td align="right" headers="perSecond StdDev" class='awrc'>0.32</td><td align="right" headers="perSecond Min" class='awrc'>0.11</td><td align="right" headers="perSecond Max" class='awrcrb'>0.56</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>706</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.68</td><td align="right" headers="perSecond Min" class='awrnc'>0.10</td><td align="right" headers="perSecond Max" class='awrncrb'>1.07</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>706</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.58</td><td align="right" headers="perSecond StdDev" class='awrc'>0.68</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>1.07</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>684</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.53</td><td align="right" headers="perSecond Max" class='awrncrb'>0.60</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>695</td><td align="right" class='awrc'>1.15</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.57</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.55</td><td align="right" headers="perSecond Max" class='awrcrb'>0.60</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>260</td><td align="right" class='awrc'>0.43</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.12</td><td align="right" headers="perSecond Max" class='awrcrb'>0.31</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.28</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>483</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.33</td><td align="right" headers="perSecond Max" class='awrncrb'>0.47</td></tr>
<tr><td scope="row" class='awrc'>application wait time</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>14,762</td><td align="right" class='awrnc'>24.42</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>12.21</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>12.21</td><td align="right" headers="perSecond Max" class='awrncrb'>12.21</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>332,994</td><td align="right" class='awrc'>550.77</td><td align="right" class='awrc'>1.52</td><td align="right" headers="perSecond Average" class='awrclb'>275.38</td><td align="right" headers="perSecond StdDev" class='awrc'>61.23</td><td align="right" headers="perSecond Min" class='awrc'>232.09</td><td align="right" headers="perSecond Max" class='awrcrb'>318.68</td></tr>
<tr><td scope="row" class='awrnc'>branch node splits</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>9,825,588</td><td align="right" class='awrc'>16,251.46</td><td align="right" class='awrc'>44.76</td><td align="right" headers="perSecond Average" class='awrclb'>8,125.73</td><td align="right" headers="perSecond StdDev" class='awrc'>1,252.04</td><td align="right" headers="perSecond Min" class='awrc'>7,240.40</td><td align="right" headers="perSecond Max" class='awrcrb'>9,011.06</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>3,163,934</td><td align="right" class='awrnc'>5,233.14</td><td align="right" class='awrnc'>14.41</td><td align="right" headers="perSecond Average" class='awrnclb'>2,616.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>48.56</td><td align="right" headers="perSecond Min" class='awrnc'>2,582.23</td><td align="right" headers="perSecond Max" class='awrncrb'>2,650.90</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>423,297</td><td align="right" class='awrc'>700.12</td><td align="right" class='awrc'>1.93</td><td align="right" headers="perSecond Average" class='awrclb'>350.06</td><td align="right" headers="perSecond StdDev" class='awrc'>440.13</td><td align="right" headers="perSecond Min" class='awrc'>38.84</td><td align="right" headers="perSecond Max" class='awrcrb'>661.28</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>50,640</td><td align="right" class='awrnc'>83.76</td><td align="right" class='awrnc'>0.23</td><td align="right" headers="perSecond Average" class='awrnclb'>41.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.50</td><td align="right" headers="perSecond Min" class='awrnc'>24.55</td><td align="right" headers="perSecond Max" class='awrncrb'>59.21</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>1,688,424</td><td align="right" class='awrc'>2,792.65</td><td align="right" class='awrc'>7.69</td><td align="right" headers="perSecond Average" class='awrclb'>1,396.32</td><td align="right" headers="perSecond StdDev" class='awrc'>16.60</td><td align="right" headers="perSecond Min" class='awrc'>1,384.59</td><td align="right" headers="perSecond Max" class='awrcrb'>1,408.06</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>427,009</td><td align="right" class='awrnc'>706.27</td><td align="right" class='awrnc'>1.95</td><td align="right" headers="perSecond Average" class='awrnclb'>353.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.88</td><td align="right" headers="perSecond Min" class='awrnc'>352.51</td><td align="right" headers="perSecond Max" class='awrncrb'>353.76</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>5,690</td><td align="right" class='awrc'>9.41</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>4.71</td><td align="right" headers="perSecond StdDev" class='awrc'>0.51</td><td align="right" headers="perSecond Min" class='awrc'>4.34</td><td align="right" headers="perSecond Max" class='awrcrb'>5.07</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>47,742,573,568</td><td align="right" class='awrnc'>78,966,066.58</td><td align="right" class='awrnc'>217,477.30</td><td align="right" headers="perSecond Average" class='awrnclb'>39,483,033.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>328,543.13</td><td align="right" headers="perSecond Min" class='awrnc'>39,250,718.22</td><td align="right" headers="perSecond Max" class='awrncrb'>39,715,348.36</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>2,572</td><td align="right" class='awrc'>4.25</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.13</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>2.12</td><td align="right" headers="perSecond Max" class='awrcrb'>2.13</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>3,177</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.63</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.90</td><td align="right" headers="perSecond Min" class='awrnc'>1.99</td><td align="right" headers="perSecond Max" class='awrncrb'>3.27</td></tr>
<tr><td scope="row" class='awrc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts only - consistent read gets</td><td align="right" class='awrnc'>72</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>cluster key scan block gets</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.17</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scans</td><td align="right" class='awrnc'>199</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.14</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>cluster wait time</td><td align="right" class='awrc'>117,596</td><td align="right" class='awrc'>194.50</td><td align="right" class='awrc'>0.54</td><td align="right" headers="perSecond Average" class='awrclb'>97.25</td><td align="right" headers="perSecond StdDev" class='awrc'>10.97</td><td align="right" headers="perSecond Min" class='awrc'>89.49</td><td align="right" headers="perSecond Max" class='awrcrb'>105.01</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate performed</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate requested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: block lost</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>660,158</td><td align="right" class='awrnc'>1,091.90</td><td align="right" class='awrnc'>3.01</td><td align="right" headers="perSecond Average" class='awrnclb'>545.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.54</td><td align="right" headers="perSecond Min" class='awrnc'>540.62</td><td align="right" headers="perSecond Max" class='awrncrb'>551.28</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>660,104</td><td align="right" class='awrc'>1,091.81</td><td align="right" class='awrc'>3.01</td><td align="right" headers="perSecond Average" class='awrclb'>545.90</td><td align="right" headers="perSecond StdDev" class='awrc'>7.53</td><td align="right" headers="perSecond Min" class='awrc'>540.58</td><td align="right" headers="perSecond Max" class='awrcrb'>551.23</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>264</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.22</td><td align="right" headers="perSecond Max" class='awrncrb'>0.22</td></tr>
<tr><td scope="row" class='awrc'>concurrency wait time</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>1,430,586</td><td align="right" class='awrnc'>2,366.20</td><td align="right" class='awrnc'>6.52</td><td align="right" headers="perSecond Average" class='awrnclb'>1,183.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>607.38</td><td align="right" headers="perSecond Min" class='awrnc'>753.62</td><td align="right" headers="perSecond Max" class='awrncrb'>1,612.59</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>10,119,596</td><td align="right" class='awrc'>16,737.78</td><td align="right" class='awrc'>46.10</td><td align="right" headers="perSecond Average" class='awrclb'>8,368.89</td><td align="right" headers="perSecond StdDev" class='awrc'>86.42</td><td align="right" headers="perSecond Min" class='awrc'>8,307.78</td><td align="right" headers="perSecond Max" class='awrcrb'>8,430.00</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>4,868,706</td><td align="right" class='awrnc'>8,052.82</td><td align="right" class='awrnc'>22.18</td><td align="right" headers="perSecond Average" class='awrnclb'>4,026.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>18.01</td><td align="right" headers="perSecond Min" class='awrnc'>4,013.68</td><td align="right" headers="perSecond Max" class='awrncrb'>4,039.15</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>4,767,147</td><td align="right" class='awrc'>7,884.85</td><td align="right" class='awrc'>21.72</td><td align="right" headers="perSecond Average" class='awrclb'>3,942.42</td><td align="right" headers="perSecond StdDev" class='awrc'>99.91</td><td align="right" headers="perSecond Min" class='awrc'>3,871.78</td><td align="right" headers="perSecond Max" class='awrcrb'>4,013.07</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>10,119,595</td><td align="right" class='awrnc'>16,737.78</td><td align="right" class='awrnc'>46.10</td><td align="right" headers="perSecond Average" class='awrnclb'>8,368.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>86.42</td><td align="right" headers="perSecond Min" class='awrnc'>8,307.78</td><td align="right" headers="perSecond Max" class='awrncrb'>8,430.00</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>5,250,889</td><td align="right" class='awrc'>8,684.95</td><td align="right" class='awrc'>23.92</td><td align="right" headers="perSecond Average" class='awrclb'>4,342.48</td><td align="right" headers="perSecond StdDev" class='awrc'>68.41</td><td align="right" headers="perSecond Min" class='awrc'>4,294.11</td><td align="right" headers="perSecond Max" class='awrcrb'>4,390.85</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>1,618,445</td><td align="right" class='awrnc'>2,676.90</td><td align="right" class='awrnc'>7.37</td><td align="right" headers="perSecond Average" class='awrnclb'>1,338.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>42.50</td><td align="right" headers="perSecond Min" class='awrnc'>1,308.40</td><td align="right" headers="perSecond Max" class='awrncrb'>1,368.50</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.05</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>1,803,111</td><td align="right" class='awrc'>2,982.34</td><td align="right" class='awrc'>8.21</td><td align="right" headers="perSecond Average" class='awrclb'>1,491.17</td><td align="right" headers="perSecond StdDev" class='awrc'>17.15</td><td align="right" headers="perSecond Min" class='awrc'>1,479.04</td><td align="right" headers="perSecond Max" class='awrcrb'>1,503.30</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>1,181,207</td><td align="right" class='awrnc'>1,953.71</td><td align="right" class='awrnc'>5.38</td><td align="right" headers="perSecond Average" class='awrnclb'>976.86</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.32</td><td align="right" headers="perSecond Min" class='awrnc'>970.97</td><td align="right" headers="perSecond Max" class='awrncrb'>982.74</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>746</td><td align="right" class='awrc'>1.23</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.62</td><td align="right" headers="perSecond StdDev" class='awrc'>0.73</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>1.13</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>1,180,461</td><td align="right" class='awrnc'>1,952.48</td><td align="right" class='awrnc'>5.38</td><td align="right" headers="perSecond Average" class='awrnclb'>976.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.04</td><td align="right" headers="perSecond Min" class='awrnc'>969.84</td><td align="right" headers="perSecond Max" class='awrncrb'>982.64</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>485,947</td><td align="right" class='awrc'>803.75</td><td align="right" class='awrc'>2.21</td><td align="right" headers="perSecond Average" class='awrclb'>401.88</td><td align="right" headers="perSecond StdDev" class='awrc'>1.90</td><td align="right" headers="perSecond Min" class='awrc'>400.54</td><td align="right" headers="perSecond Max" class='awrcrb'>403.22</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>334,054</td><td align="right" class='awrnc'>552.52</td><td align="right" class='awrnc'>1.52</td><td align="right" headers="perSecond Average" class='awrnclb'>276.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>61.31</td><td align="right" headers="perSecond Min" class='awrnc'>232.91</td><td align="right" headers="perSecond Max" class='awrncrb'>319.61</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>534,023</td><td align="right" class='awrc'>883.27</td><td align="right" class='awrc'>2.43</td><td align="right" headers="perSecond Average" class='awrclb'>441.64</td><td align="right" headers="perSecond StdDev" class='awrc'>16.86</td><td align="right" headers="perSecond Min" class='awrc'>429.72</td><td align="right" headers="perSecond Max" class='awrcrb'>453.55</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>5,240</td><td align="right" class='awrnc'>8.67</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>4.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.60</td><td align="right" headers="perSecond Min" class='awrnc'>3.91</td><td align="right" headers="perSecond Max" class='awrncrb'>4.76</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>631,660</td><td align="right" class='awrc'>1,044.76</td><td align="right" class='awrc'>2.88</td><td align="right" headers="perSecond Average" class='awrclb'>522.38</td><td align="right" headers="perSecond StdDev" class='awrc'>4.83</td><td align="right" headers="perSecond Min" class='awrc'>518.96</td><td align="right" headers="perSecond Max" class='awrcrb'>525.80</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>631,621</td><td align="right" class='awrnc'>1,044.70</td><td align="right" class='awrnc'>2.88</td><td align="right" headers="perSecond Average" class='awrnclb'>522.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.83</td><td align="right" headers="perSecond Min" class='awrnc'>518.94</td><td align="right" headers="perSecond Max" class='awrncrb'>525.76</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>676</td><td align="right" class='awrnc'>1.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.56</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.13</td><td align="right" headers="perSecond Min" class='awrnc'>0.46</td><td align="right" headers="perSecond Max" class='awrncrb'>0.65</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>1,466,483</td><td align="right" class='awrnc'>2,425.56</td><td align="right" class='awrnc'>6.68</td><td align="right" headers="perSecond Average" class='awrnclb'>1,212.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.78</td><td align="right" headers="perSecond Min" class='awrnc'>1,201.62</td><td align="right" headers="perSecond Max" class='awrncrb'>1,223.94</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>5,452,722,323</td><td align="right" class='awrc'>9,018,673.48</td><td align="right" class='awrc'>24,838.28</td><td align="right" headers="perSecond Average" class='awrclb'>4,509,336.74</td><td align="right" headers="perSecond StdDev" class='awrc'>4,031,320.20</td><td align="right" headers="perSecond Min" class='awrc'>1,658,762.89</td><td align="right" headers="perSecond Max" class='awrcrb'>7,359,910.59</td></tr>
<tr><td scope="row" class='awrnc'>file io wait time</td><td align="right" class='awrnc'>42,480,760,798</td><td align="right" class='awrnc'>70,263,011.00</td><td align="right" class='awrnc'>193,508.65</td><td align="right" headers="perSecond Average" class='awrnclb'>35,131,505.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,496,562.45</td><td align="right" headers="perSecond Min" class='awrnc'>34,073,276.04</td><td align="right" headers="perSecond Max" class='awrncrb'>36,189,734.96</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>4,310,421</td><td align="right" class='awrc'>7,129.42</td><td align="right" class='awrc'>19.63</td><td align="right" headers="perSecond Average" class='awrclb'>3,564.71</td><td align="right" headers="perSecond StdDev" class='awrc'>37.50</td><td align="right" headers="perSecond Min" class='awrc'>3,538.19</td><td align="right" headers="perSecond Max" class='awrcrb'>3,591.23</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>4,280,285</td><td align="right" class='awrnc'>7,079.58</td><td align="right" class='awrnc'>19.50</td><td align="right" headers="perSecond Average" class='awrnclb'>3,539.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.78</td><td align="right" headers="perSecond Min" class='awrnc'>3,513.78</td><td align="right" headers="perSecond Max" class='awrncrb'>3,565.80</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>27,251</td><td align="right" class='awrc'>45.07</td><td align="right" class='awrc'>0.12</td><td align="right" headers="perSecond Average" class='awrclb'>22.54</td><td align="right" headers="perSecond StdDev" class='awrc'>9.52</td><td align="right" headers="perSecond Min" class='awrc'>15.81</td><td align="right" headers="perSecond Max" class='awrcrb'>29.27</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout applied</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cleanout saved</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks created</td><td align="right" class='awrc'>52,445</td><td align="right" class='awrc'>86.74</td><td align="right" class='awrc'>0.24</td><td align="right" headers="perSecond Average" class='awrclb'>43.37</td><td align="right" headers="perSecond StdDev" class='awrc'>0.42</td><td align="right" headers="perSecond Min" class='awrc'>43.07</td><td align="right" headers="perSecond Max" class='awrcrb'>43.67</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks expanded</td><td align="right" class='awrnc'>239</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.40</td><td align="right" headers="perSecond Max" class='awrncrb'>0.40</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>2,287</td><td align="right" class='awrc'>3.78</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.89</td><td align="right" headers="perSecond StdDev" class='awrc'>2.23</td><td align="right" headers="perSecond Min" class='awrc'>0.32</td><td align="right" headers="perSecond Max" class='awrcrb'>3.47</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>383</td><td align="right" class='awrnc'>0.63</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.18</td><td align="right" headers="perSecond Min" class='awrnc'>0.19</td><td align="right" headers="perSecond Max" class='awrncrb'>0.44</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>967</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.41</td><td align="right" headers="perSecond Min" class='awrnc'>0.51</td><td align="right" headers="perSecond Max" class='awrncrb'>1.09</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>6,441</td><td align="right" class='awrc'>10.65</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>5.33</td><td align="right" headers="perSecond StdDev" class='awrc'>2.09</td><td align="right" headers="perSecond Min" class='awrc'>3.85</td><td align="right" headers="perSecond Max" class='awrcrb'>6.80</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>8,013</td><td align="right" class='awrc'>13.25</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>6.63</td><td align="right" headers="perSecond StdDev" class='awrc'>3.73</td><td align="right" headers="perSecond Min" class='awrc'>3.99</td><td align="right" headers="perSecond Max" class='awrcrb'>9.26</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>8,009</td><td align="right" class='awrnc'>13.25</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>6.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.75</td><td align="right" headers="perSecond Min" class='awrnc'>3.97</td><td align="right" headers="perSecond Max" class='awrncrb'>9.27</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>1,934</td><td align="right" class='awrc'>3.20</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.60</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>1.55</td><td align="right" headers="perSecond Max" class='awrcrb'>1.65</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>26,735</td><td align="right" class='awrnc'>44.22</td><td align="right" class='awrnc'>0.12</td><td align="right" headers="perSecond Average" class='awrnclb'>22.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.66</td><td align="right" headers="perSecond Min" class='awrnc'>20.93</td><td align="right" headers="perSecond Max" class='awrncrb'>23.29</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>26,733</td><td align="right" class='awrc'>44.22</td><td align="right" class='awrc'>0.12</td><td align="right" headers="perSecond Average" class='awrclb'>22.11</td><td align="right" headers="perSecond StdDev" class='awrc'>1.76</td><td align="right" headers="perSecond Min" class='awrc'>20.86</td><td align="right" headers="perSecond Max" class='awrcrb'>23.35</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read current</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>112,813</td><td align="right" class='awrnc'>186.59</td><td align="right" class='awrnc'>0.51</td><td align="right" headers="perSecond Average" class='awrnclb'>93.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>40.18</td><td align="right" headers="perSecond Min" class='awrnc'>64.89</td><td align="right" headers="perSecond Max" class='awrncrb'>121.71</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>165,123</td><td align="right" class='awrc'>273.11</td><td align="right" class='awrc'>0.75</td><td align="right" headers="perSecond Average" class='awrclb'>136.56</td><td align="right" headers="perSecond StdDev" class='awrc'>3.90</td><td align="right" headers="perSecond Min" class='awrc'>133.80</td><td align="right" headers="perSecond Max" class='awrcrb'>139.31</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>2,331,825</td><td align="right" class='awrnc'>3,856.83</td><td align="right" class='awrnc'>10.62</td><td align="right" headers="perSecond Average" class='awrnclb'>1,928.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>222.17</td><td align="right" headers="perSecond Min" class='awrnc'>1,771.32</td><td align="right" headers="perSecond Max" class='awrncrb'>2,085.51</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi bg</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>169</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.13</td><td align="right" headers="perSecond Max" class='awrncrb'>0.15</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read time waited</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read waits</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>1,928,050</td><td align="right" class='awrnc'>3,188.99</td><td align="right" class='awrnc'>8.78</td><td align="right" headers="perSecond Average" class='awrnclb'>1,594.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>187.38</td><td align="right" headers="perSecond Min" class='awrnc'>1,462.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1,726.99</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>1,792,077</td><td align="right" class='awrc'>2,964.09</td><td align="right" class='awrc'>8.16</td><td align="right" headers="perSecond Average" class='awrclb'>1,482.05</td><td align="right" headers="perSecond StdDev" class='awrc'>115.12</td><td align="right" headers="perSecond Min" class='awrc'>1,400.65</td><td align="right" headers="perSecond Max" class='awrcrb'>1,563.45</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>1,791,939</td><td align="right" class='awrnc'>2,963.86</td><td align="right" class='awrnc'>8.16</td><td align="right" headers="perSecond Average" class='awrnclb'>1,481.93</td><td align="right" headers="perSecond StdDev" class='awrnc'>114.29</td><td align="right" headers="perSecond Min" class='awrnc'>1,401.11</td><td align="right" headers="perSecond Max" class='awrncrb'>1,562.75</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock failures</td><td align="right" class='awrc'>1,242</td><td align="right" class='awrc'>2.05</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.05</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>2.05</td><td align="right" headers="perSecond Max" class='awrcrb'>2.05</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock grants</td><td align="right" class='awrnc'>250,555</td><td align="right" class='awrnc'>414.41</td><td align="right" class='awrnc'>1.14</td><td align="right" headers="perSecond Average" class='awrnclb'>207.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>290.24</td><td align="right" headers="perSecond Min" class='awrnc'>1.97</td><td align="right" headers="perSecond Max" class='awrncrb'>412.44</td></tr>
<tr><td scope="row" class='awrc'>gcs anti-locks created</td><td align="right" class='awrc'>52,287</td><td align="right" class='awrc'>86.48</td><td align="right" class='awrc'>0.24</td><td align="right" headers="perSecond Average" class='awrclb'>43.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.50</td><td align="right" headers="perSecond Min" class='awrc'>42.89</td><td align="right" headers="perSecond Max" class='awrcrb'>43.59</td></tr>
<tr><td scope="row" class='awrnc'>gcs data block access records</td><td align="right" class='awrnc'>4,270,099</td><td align="right" class='awrnc'>7,062.73</td><td align="right" class='awrnc'>19.45</td><td align="right" headers="perSecond Average" class='awrnclb'>3,531.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>31.00</td><td align="right" headers="perSecond Min" class='awrnc'>3,509.45</td><td align="right" headers="perSecond Max" class='awrncrb'>3,553.28</td></tr>
<tr><td scope="row" class='awrc'>gcs messages sent</td><td align="right" class='awrc'>4,645,590</td><td align="right" class='awrc'>7,683.80</td><td align="right" class='awrc'>21.16</td><td align="right" headers="perSecond Average" class='awrclb'>3,841.90</td><td align="right" headers="perSecond StdDev" class='awrc'>324.07</td><td align="right" headers="perSecond Min" class='awrc'>3,612.75</td><td align="right" headers="perSecond Max" class='awrcrb'>4,071.05</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock failures</td><td align="right" class='awrnc'>51,904</td><td align="right" class='awrnc'>85.85</td><td align="right" class='awrnc'>0.24</td><td align="right" headers="perSecond Average" class='awrnclb'>42.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.74</td><td align="right" headers="perSecond Min" class='awrnc'>28.26</td><td align="right" headers="perSecond Max" class='awrncrb'>57.59</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock grants</td><td align="right" class='awrc'>286,160</td><td align="right" class='awrc'>473.30</td><td align="right" class='awrc'>1.30</td><td align="right" headers="perSecond Average" class='awrclb'>236.65</td><td align="right" headers="perSecond StdDev" class='awrc'>123.86</td><td align="right" headers="perSecond Min" class='awrc'>149.07</td><td align="right" headers="perSecond Max" class='awrcrb'>324.24</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>6,375</td><td align="right" class='awrnc'>10.54</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>5.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.85</td><td align="right" headers="perSecond Min" class='awrnc'>4.67</td><td align="right" headers="perSecond Max" class='awrncrb'>5.87</td></tr>
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>1,045</td><td align="right" class='awrc'>1.73</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.86</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.83</td><td align="right" headers="perSecond Max" class='awrcrb'>0.89</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets sync</td><td align="right" class='awrnc'>271,448</td><td align="right" class='awrnc'>448.97</td><td align="right" class='awrnc'>1.24</td><td align="right" headers="perSecond Average" class='awrnclb'>224.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.62</td><td align="right" headers="perSecond Min" class='awrnc'>217.68</td><td align="right" headers="perSecond Max" class='awrncrb'>231.29</td></tr>
<tr><td scope="row" class='awrc'>global enqueue releases</td><td align="right" class='awrc'>270,346</td><td align="right" class='awrc'>447.15</td><td align="right" class='awrc'>1.23</td><td align="right" headers="perSecond Average" class='awrclb'>223.58</td><td align="right" headers="perSecond StdDev" class='awrc'>9.10</td><td align="right" headers="perSecond Min" class='awrc'>217.14</td><td align="right" headers="perSecond Max" class='awrcrb'>230.01</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>17,130</td><td align="right" class='awrnc'>28.33</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>14.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.87</td><td align="right" headers="perSecond Min" class='awrnc'>11.43</td><td align="right" headers="perSecond Max" class='awrncrb'>16.90</td></tr>
<tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>157,978</td><td align="right" class='awrc'>261.30</td><td align="right" class='awrc'>0.72</td><td align="right" headers="perSecond Average" class='awrclb'>130.65</td><td align="right" headers="perSecond StdDev" class='awrc'>21.69</td><td align="right" headers="perSecond Min" class='awrc'>115.31</td><td align="right" headers="perSecond Max" class='awrcrb'>145.99</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>461</td><td align="right" class='awrc'>0.76</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.38</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.37</td><td align="right" headers="perSecond Max" class='awrcrb'>0.39</td></tr>
<tr><td scope="row" class='awrnc'>in call idle wait time</td><td align="right" class='awrnc'>10,434,620</td><td align="right" class='awrnc'>17,258.83</td><td align="right" class='awrnc'>47.53</td><td align="right" headers="perSecond Average" class='awrnclb'>8,629.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.61</td><td align="right" headers="perSecond Min" class='awrnc'>8,626.86</td><td align="right" headers="perSecond Max" class='awrncrb'>8,631.97</td></tr>
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>500,620</td><td align="right" class='awrc'>828.01</td><td align="right" class='awrc'>2.28</td><td align="right" headers="perSecond Average" class='awrclb'>414.00</td><td align="right" headers="perSecond StdDev" class='awrc'>580.55</td><td align="right" headers="perSecond Min" class='awrc'>3.49</td><td align="right" headers="perSecond Max" class='awrcrb'>824.51</td></tr>
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>1,960,578</td><td align="right" class='awrnc'>3,242.77</td><td align="right" class='awrnc'>8.93</td><td align="right" headers="perSecond Average" class='awrnclb'>1,621.39</td><td align="right" headers="perSecond StdDev" class='awrnc'>597.34</td><td align="right" headers="perSecond Min" class='awrnc'>1,199.01</td><td align="right" headers="perSecond Max" class='awrncrb'>2,043.77</td></tr>
<tr><td scope="row" class='awrc'>index reclamation/extension switch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>leaf node 90-10 splits</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>leaf node splits</td><td align="right" class='awrc'>161</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>lob reads</td><td align="right" class='awrnc'>150</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.25</td></tr>
<tr><td scope="row" class='awrc'>lob writes</td><td align="right" class='awrc'>244</td><td align="right" class='awrc'>0.40</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrc'>0.27</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.40</td></tr>
<tr><td scope="row" class='awrnc'>lob writes unaligned</td><td align="right" class='awrnc'>243</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.27</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.39</td></tr>
<tr><td scope="row" class='awrc'>logical read bytes from cache</td><td align="right" class='awrc'>92,570,058,752</td><td align="right" class='awrc'>153,110,582.08</td><td align="right" class='awrc'>421,675.76</td><td align="right" headers="perSecond Average" class='awrclb'>76,555,291.04</td><td align="right" headers="perSecond StdDev" class='awrc'>782,034.74</td><td align="right" headers="perSecond Min" class='awrc'>76,002,308.97</td><td align="right" headers="perSecond Max" class='awrcrb'>77,108,273.10</td></tr>
<tr><td scope="row" class='awrnc'>logons cumulative</td><td align="right" class='awrnc'>189</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.16</td></tr>
<tr><td scope="row" class='awrc'>max cf enq hold time</td><td align="right" class='awrc'>125</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.21</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>256,151</td><td align="right" class='awrnc'>423.67</td><td align="right" class='awrnc'>1.17</td><td align="right" headers="perSecond Average" class='awrnclb'>211.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.89</td><td align="right" headers="perSecond Min" class='awrnc'>209.79</td><td align="right" headers="perSecond Max" class='awrncrb'>213.88</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>256,151</td><td align="right" class='awrc'>423.67</td><td align="right" class='awrc'>1.17</td><td align="right" headers="perSecond Average" class='awrclb'>211.84</td><td align="right" headers="perSecond StdDev" class='awrc'>2.89</td><td align="right" headers="perSecond Min" class='awrc'>209.79</td><td align="right" headers="perSecond Max" class='awrcrb'>213.88</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>5,233,521</td><td align="right" class='awrnc'>8,656.23</td><td align="right" class='awrnc'>23.84</td><td align="right" headers="perSecond Average" class='awrnclb'>4,328.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>65.10</td><td align="right" headers="perSecond Min" class='awrnc'>4,282.08</td><td align="right" headers="perSecond Max" class='awrncrb'>4,374.14</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>8,781,531</td><td align="right" class='awrc'>14,524.64</td><td align="right" class='awrc'>40.00</td><td align="right" headers="perSecond Average" class='awrclb'>7,262.32</td><td align="right" headers="perSecond StdDev" class='awrc'>324.10</td><td align="right" headers="perSecond Min" class='awrc'>7,033.14</td><td align="right" headers="perSecond Max" class='awrcrb'>7,491.49</td></tr>
<tr><td scope="row" class='awrnc'>non-idle wait time</td><td align="right" class='awrnc'>2,313,179</td><td align="right" class='awrnc'>3,825.99</td><td align="right" class='awrnc'>10.54</td><td align="right" headers="perSecond Average" class='awrnclb'>1,913.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>117.23</td><td align="right" headers="perSecond Min" class='awrnc'>1,830.10</td><td align="right" headers="perSecond Max" class='awrncrb'>1,995.89</td></tr>
<tr><td scope="row" class='awrc'>opened cursors cumulative</td><td align="right" class='awrc'>1,687,016</td><td align="right" class='awrc'>2,790.32</td><td align="right" class='awrc'>7.68</td><td align="right" headers="perSecond Average" class='awrclb'>1,395.16</td><td align="right" headers="perSecond StdDev" class='awrc'>18.36</td><td align="right" headers="perSecond Min" class='awrc'>1,382.18</td><td align="right" headers="perSecond Max" class='awrcrb'>1,408.14</td></tr>
<tr><td scope="row" class='awrnc'>parse count (describe)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>3,269</td><td align="right" class='awrnc'>5.41</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.70</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.54</td><td align="right" headers="perSecond Min" class='awrnc'>2.32</td><td align="right" headers="perSecond Max" class='awrncrb'>3.08</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>4,235,362</td><td align="right" class='awrc'>7,005.28</td><td align="right" class='awrc'>19.29</td><td align="right" headers="perSecond Average" class='awrclb'>3,502.64</td><td align="right" headers="perSecond StdDev" class='awrc'>27.08</td><td align="right" headers="perSecond Min" class='awrc'>3,483.49</td><td align="right" headers="perSecond Max" class='awrcrb'>3,521.79</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>34,701,148,160</td><td align="right" class='awrnc'>57,395,590.60</td><td align="right" class='awrnc'>158,070.91</td><td align="right" headers="perSecond Average" class='awrnclb'>28,697,795.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>215,935.28</td><td align="right" headers="perSecond Min" class='awrnc'>28,545,106.00</td><td align="right" headers="perSecond Max" class='awrncrb'>28,850,484.60</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>4,242,952</td><td align="right" class='awrc'>7,017.83</td><td align="right" class='awrc'>19.33</td><td align="right" headers="perSecond Average" class='awrclb'>3,508.91</td><td align="right" headers="perSecond StdDev" class='awrc'>27.25</td><td align="right" headers="perSecond Min" class='awrc'>3,489.64</td><td align="right" headers="perSecond Max" class='awrcrb'>3,528.19</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>36,064,473,088</td><td align="right" class='awrnc'>59,650,526.21</td><td align="right" class='awrnc'>164,281.13</td><td align="right" headers="perSecond Average" class='awrnclb'>29,825,263.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>208,859.22</td><td align="right" headers="perSecond Min" class='awrnc'>29,677,577.34</td><td align="right" headers="perSecond Max" class='awrncrb'>29,972,948.87</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>1,245</td><td align="right" class='awrc'>2.06</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>1.00</td><td align="right" headers="perSecond Max" class='awrcrb'>1.06</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>4,235,980</td><td align="right" class='awrnc'>7,006.30</td><td align="right" class='awrnc'>19.30</td><td align="right" headers="perSecond Average" class='awrnclb'>3,503.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>26.36</td><td align="right" headers="perSecond Min" class='awrnc'>3,484.51</td><td align="right" headers="perSecond Max" class='awrncrb'>3,521.79</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>4,235,942</td><td align="right" class='awrc'>7,006.23</td><td align="right" class='awrc'>19.30</td><td align="right" headers="perSecond Average" class='awrclb'>3,503.12</td><td align="right" headers="perSecond StdDev" class='awrc'>26.40</td><td align="right" headers="perSecond Min" class='awrc'>3,484.45</td><td align="right" headers="perSecond Max" class='awrcrb'>3,521.79</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>620</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>1.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1.03</td><td align="right" headers="perSecond Max" class='awrncrb'>1.03</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>603,006</td><td align="right" class='awrc'>997.37</td><td align="right" class='awrc'>2.75</td><td align="right" headers="perSecond Average" class='awrclb'>498.68</td><td align="right" headers="perSecond StdDev" class='awrc'>6.53</td><td align="right" headers="perSecond Min" class='awrc'>494.07</td><td align="right" headers="perSecond Max" class='awrcrb'>503.30</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>5,127,077,888</td><td align="right" class='awrnc'>8,480,170.40</td><td align="right" class='awrnc'>23,354.90</td><td align="right" headers="perSecond Average" class='awrnclb'>4,240,085.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>46,406.20</td><td align="right" headers="perSecond Min" class='awrnc'>4,207,271.06</td><td align="right" headers="perSecond Max" class='awrncrb'>4,272,899.33</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>809,411</td><td align="right" class='awrc'>1,338.76</td><td align="right" class='awrc'>3.69</td><td align="right" headers="perSecond Average" class='awrclb'>669.38</td><td align="right" headers="perSecond StdDev" class='awrc'>6.56</td><td align="right" headers="perSecond Min" class='awrc'>664.74</td><td align="right" headers="perSecond Max" class='awrcrb'>674.02</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>5,829,252,608</td><td align="right" class='awrnc'>9,641,564.95</td><td align="right" class='awrnc'>26,553.45</td><td align="right" headers="perSecond Average" class='awrnclb'>4,820,782.48</td><td align="right" headers="perSecond StdDev" class='awrnc'>59,075.70</td><td align="right" headers="perSecond Min" class='awrnc'>4,779,009.65</td><td align="right" headers="perSecond Max" class='awrncrb'>4,862,555.31</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>1,167</td><td align="right" class='awrc'>1.93</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.97</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.92</td><td align="right" headers="perSecond Max" class='awrcrb'>1.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>625,864</td><td align="right" class='awrnc'>1,035.18</td><td align="right" class='awrnc'>2.85</td><td align="right" headers="perSecond Average" class='awrnclb'>517.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.66</td><td align="right" headers="perSecond Min" class='awrnc'>513.58</td><td align="right" headers="perSecond Max" class='awrncrb'>521.59</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>755</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.62</td><td align="right" headers="perSecond StdDev" class='awrc'>0.74</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>1.14</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>617</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.51</td><td align="right" headers="perSecond StdDev" class='awrc'>0.72</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>1.02</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>625,109</td><td align="right" class='awrnc'>1,033.93</td><td align="right" class='awrnc'>2.85</td><td align="right" headers="perSecond Average" class='awrnclb'>516.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.40</td><td align="right" headers="perSecond Min" class='awrnc'>512.44</td><td align="right" headers="perSecond Max" class='awrncrb'>521.49</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>608,958</td><td align="right" class='awrc'>1,007.21</td><td align="right" class='awrc'>2.77</td><td align="right" headers="perSecond Average" class='awrclb'>503.61</td><td align="right" headers="perSecond StdDev" class='awrc'>10.50</td><td align="right" headers="perSecond Min" class='awrc'>496.18</td><td align="right" headers="perSecond Max" class='awrcrb'>511.03</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>1,057</td><td align="right" class='awrnc'>1.75</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.50</td><td align="right" headers="perSecond Min" class='awrnc'>0.52</td><td align="right" headers="perSecond Max" class='awrncrb'>1.23</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>1,236</td><td align="right" class='awrc'>2.04</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.99</td><td align="right" headers="perSecond Max" class='awrcrb'>1.05</td></tr>
<tr><td scope="row" class='awrnc'>queries parallelized</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>recursive calls</td><td align="right" class='awrc'>1,933,323</td><td align="right" class='awrc'>3,197.71</td><td align="right" class='awrc'>8.81</td><td align="right" headers="perSecond Average" class='awrclb'>1,598.86</td><td align="right" headers="perSecond StdDev" class='awrc'>15.26</td><td align="right" headers="perSecond Min" class='awrc'>1,588.07</td><td align="right" headers="perSecond Max" class='awrcrb'>1,609.64</td></tr>
<tr><td scope="row" class='awrnc'>recursive cpu usage</td><td align="right" class='awrnc'>213,495</td><td align="right" class='awrnc'>353.12</td><td align="right" class='awrnc'>0.97</td><td align="right" headers="perSecond Average" class='awrnclb'>176.56</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.31</td><td align="right" headers="perSecond Min" class='awrnc'>169.98</td><td align="right" headers="perSecond Max" class='awrncrb'>183.14</td></tr>
<tr><td scope="row" class='awrc'>redo KB read</td><td align="right" class='awrc'>708,078</td><td align="right" class='awrc'>1,171.16</td><td align="right" class='awrc'>3.23</td><td align="right" headers="perSecond Average" class='awrclb'>585.58</td><td align="right" headers="perSecond StdDev" class='awrc'>9.96</td><td align="right" headers="perSecond Min" class='awrc'>578.54</td><td align="right" headers="perSecond Max" class='awrcrb'>592.62</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrnc'>403,283</td><td align="right" class='awrnc'>667.03</td><td align="right" class='awrnc'>1.84</td><td align="right" headers="perSecond Average" class='awrnclb'>333.51</td><td align="right" headers="perSecond StdDev" class='awrnc'>11.87</td><td align="right" headers="perSecond Min" class='awrnc'>325.12</td><td align="right" headers="perSecond Max" class='awrncrb'>341.91</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written</td><td align="right" class='awrc'>1,333,131</td><td align="right" class='awrc'>2,204.99</td><td align="right" class='awrc'>6.07</td><td align="right" headers="perSecond Average" class='awrclb'>1,102.50</td><td align="right" headers="perSecond StdDev" class='awrc'>21.34</td><td align="right" headers="perSecond Min" class='awrc'>1,087.41</td><td align="right" headers="perSecond Max" class='awrcrb'>1,117.59</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 0)</td><td align="right" class='awrnc'>948,153</td><td align="right" class='awrnc'>1,568.24</td><td align="right" class='awrnc'>4.32</td><td align="right" headers="perSecond Average" class='awrnclb'>784.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.21</td><td align="right" headers="perSecond Min" class='awrnc'>779.02</td><td align="right" headers="perSecond Max" class='awrncrb'>789.22</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 1)</td><td align="right" class='awrc'>384,978</td><td align="right" class='awrc'>636.75</td><td align="right" class='awrc'>1.75</td><td align="right" headers="perSecond Average" class='awrclb'>318.38</td><td align="right" headers="perSecond StdDev" class='awrc'>28.55</td><td align="right" headers="perSecond Min" class='awrc'>298.19</td><td align="right" headers="perSecond Max" class='awrcrb'>338.56</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>941,184</td><td align="right" class='awrnc'>1,556.72</td><td align="right" class='awrnc'>4.29</td><td align="right" headers="perSecond Average" class='awrnclb'>778.36</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.49</td><td align="right" headers="perSecond Min" class='awrnc'>774.48</td><td align="right" headers="perSecond Max" class='awrncrb'>782.24</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>614,887,804</td><td align="right" class='awrc'>1,017,022.33</td><td align="right" class='awrc'>2,800.94</td><td align="right" headers="perSecond Average" class='awrclb'>508,511.16</td><td align="right" headers="perSecond StdDev" class='awrc'>10,130.40</td><td align="right" headers="perSecond Min" class='awrc'>501,347.89</td><td align="right" headers="perSecond Max" class='awrcrb'>515,674.44</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>344</td><td align="right" class='awrnc'>0.57</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.20</td><td align="right" headers="perSecond Max" class='awrncrb'>0.37</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>147</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.05</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>42,090</td><td align="right" class='awrc'>69.62</td><td align="right" class='awrc'>0.19</td><td align="right" headers="perSecond Average" class='awrclb'>34.81</td><td align="right" headers="perSecond StdDev" class='awrc'>7.62</td><td align="right" headers="perSecond Min" class='awrc'>29.42</td><td align="right" headers="perSecond Max" class='awrcrb'>40.19</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>1,849</td><td align="right" class='awrnc'>3.06</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.53</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.71</td><td align="right" headers="perSecond Min" class='awrnc'>1.02</td><td align="right" headers="perSecond Max" class='awrncrb'>2.03</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>46,041,572</td><td align="right" class='awrc'>76,152.61</td><td align="right" class='awrc'>209.73</td><td align="right" headers="perSecond Average" class='awrclb'>38,076.31</td><td align="right" headers="perSecond StdDev" class='awrc'>480.71</td><td align="right" headers="perSecond Min" class='awrc'>37,736.39</td><td align="right" headers="perSecond Max" class='awrcrb'>38,416.22</td></tr>
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>205,114</td><td align="right" class='awrnc'>339.26</td><td align="right" class='awrnc'>0.93</td><td align="right" headers="perSecond Average" class='awrnclb'>169.63</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>169.56</td><td align="right" headers="perSecond Max" class='awrncrb'>169.70</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack count</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack time</td><td align="right" class='awrnc'>7,787</td><td align="right" class='awrnc'>12.88</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>6.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.45</td><td align="right" headers="perSecond Min" class='awrnc'>4.00</td><td align="right" headers="perSecond Max" class='awrncrb'>8.88</td></tr>
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>1,043,535,813</td><td align="right" class='awrc'>1,726,003.56</td><td align="right" class='awrc'>4,753.52</td><td align="right" headers="perSecond Average" class='awrclb'>863,001.78</td><td align="right" headers="perSecond StdDev" class='awrc'>57,012.66</td><td align="right" headers="perSecond Min" class='awrc'>822,687.74</td><td align="right" headers="perSecond Max" class='awrcrb'>903,315.81</td></tr>
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>43,579,557</td><td align="right" class='awrnc'>72,080.55</td><td align="right" class='awrnc'>198.51</td><td align="right" headers="perSecond Average" class='awrnclb'>36,040.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,340.59</td><td align="right" headers="perSecond Min" class='awrnc'>33,678.12</td><td align="right" headers="perSecond Max" class='awrncrb'>38,402.43</td></tr>
<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>46,169,454</td><td align="right" class='awrnc'>76,364.24</td><td align="right" class='awrnc'>210.31</td><td align="right" headers="perSecond Average" class='awrnclb'>38,182.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,554.24</td><td align="right" headers="perSecond Min" class='awrnc'>35,668.89</td><td align="right" headers="perSecond Max" class='awrncrb'>40,695.35</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>127,312</td><td align="right" class='awrc'>210.57</td><td align="right" class='awrc'>0.58</td><td align="right" headers="perSecond Average" class='awrclb'>105.29</td><td align="right" headers="perSecond StdDev" class='awrc'>2.39</td><td align="right" headers="perSecond Min" class='awrc'>103.59</td><td align="right" headers="perSecond Max" class='awrcrb'>106.98</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>67,220</td><td align="right" class='awrnc'>111.18</td><td align="right" class='awrnc'>0.31</td><td align="right" headers="perSecond Average" class='awrnclb'>55.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.91</td><td align="right" headers="perSecond Min" class='awrnc'>53.53</td><td align="right" headers="perSecond Max" class='awrncrb'>57.65</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>5,599</td><td align="right" class='awrc'>9.26</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>4.63</td><td align="right" headers="perSecond StdDev" class='awrc'>0.30</td><td align="right" headers="perSecond Min" class='awrc'>4.42</td><td align="right" headers="perSecond Max" class='awrcrb'>4.84</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>210</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.17</td><td align="right" headers="perSecond Max" class='awrncrb'>0.18</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write time</td><td align="right" class='awrnc'>105,137</td><td align="right" class='awrnc'>173.90</td><td align="right" class='awrnc'>0.48</td><td align="right" headers="perSecond Average" class='awrnclb'>86.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.66</td><td align="right" headers="perSecond Min" class='awrnc'>82.95</td><td align="right" headers="perSecond Max" class='awrncrb'>90.95</td></tr>
<tr><td scope="row" class='awrc'>redo write time (usec)</td><td align="right" class='awrc'>1,051,377,800</td><td align="right" class='awrc'>1,738,974.19</td><td align="right" class='awrc'>4,789.24</td><td align="right" headers="perSecond Average" class='awrclb'>869,487.10</td><td align="right" headers="perSecond StdDev" class='awrc'>56,567.21</td><td align="right" headers="perSecond Min" class='awrc'>829,488.03</td><td align="right" headers="perSecond Max" class='awrcrb'>909,486.16</td></tr>
<tr><td scope="row" class='awrnc'>redo write total time</td><td align="right" class='awrnc'>1,065,232,859</td><td align="right" class='awrnc'>1,761,890.45</td><td align="right" class='awrnc'>4,852.36</td><td align="right" headers="perSecond Average" class='awrnclb'>880,945.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>55,470.77</td><td align="right" headers="perSecond Min" class='awrnc'>841,721.47</td><td align="right" headers="perSecond Max" class='awrncrb'>920,168.98</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay (usec)</td><td align="right" class='awrc'>24,349,747</td><td align="right" class='awrc'>40,274.47</td><td align="right" class='awrc'>110.92</td><td align="right" headers="perSecond Average" class='awrclb'>20,137.23</td><td align="right" headers="perSecond StdDev" class='awrc'>2,004.73</td><td align="right" headers="perSecond Min" class='awrc'>18,719.67</td><td align="right" headers="perSecond Max" class='awrcrb'>21,554.79</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay count</td><td align="right" class='awrnc'>200,457</td><td align="right" class='awrnc'>331.56</td><td align="right" class='awrnc'>0.91</td><td align="right" headers="perSecond Average" class='awrnclb'>165.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.24</td><td align="right" headers="perSecond Min" class='awrnc'>165.61</td><td align="right" headers="perSecond Max" class='awrncrb'>165.95</td></tr>
<tr><td scope="row" class='awrc'>redo writes</td><td align="right" class='awrc'>200,457</td><td align="right" class='awrc'>331.56</td><td align="right" class='awrc'>0.91</td><td align="right" headers="perSecond Average" class='awrclb'>165.78</td><td align="right" headers="perSecond StdDev" class='awrc'>0.24</td><td align="right" headers="perSecond Min" class='awrc'>165.61</td><td align="right" headers="perSecond Max" class='awrcrb'>165.95</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 0)</td><td align="right" class='awrnc'>121,993</td><td align="right" class='awrnc'>201.78</td><td align="right" class='awrnc'>0.56</td><td align="right" headers="perSecond Average" class='awrnclb'>100.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.99</td><td align="right" headers="perSecond Min" class='awrnc'>99.48</td><td align="right" headers="perSecond Max" class='awrncrb'>102.30</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 1)</td><td align="right" class='awrc'>78,464</td><td align="right" class='awrc'>129.78</td><td align="right" class='awrc'>0.36</td><td align="right" headers="perSecond Average" class='awrclb'>64.89</td><td align="right" headers="perSecond StdDev" class='awrc'>2.23</td><td align="right" headers="perSecond Min" class='awrc'>63.31</td><td align="right" headers="perSecond Max" class='awrcrb'>66.47</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive all</td><td align="right" class='awrnc'>200,457</td><td align="right" class='awrnc'>331.56</td><td align="right" class='awrnc'>0.91</td><td align="right" headers="perSecond Average" class='awrnclb'>165.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.24</td><td align="right" headers="perSecond Min" class='awrnc'>165.61</td><td align="right" headers="perSecond Max" class='awrncrb'>165.95</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive worker</td><td align="right" class='awrc'>200,457</td><td align="right" class='awrc'>331.56</td><td align="right" class='awrc'>0.91</td><td align="right" headers="perSecond Average" class='awrclb'>165.78</td><td align="right" headers="perSecond StdDev" class='awrc'>0.24</td><td align="right" headers="perSecond Min" class='awrc'>165.61</td><td align="right" headers="perSecond Max" class='awrcrb'>165.95</td></tr>
<tr><td scope="row" class='awrnc'>rollback changes - undo records applied</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rollbacks only - consistent read gets</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>root node splits</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>499,064</td><td align="right" class='awrc'>825.43</td><td align="right" class='awrc'>2.27</td><td align="right" headers="perSecond Average" class='awrclb'>412.72</td><td align="right" headers="perSecond StdDev" class='awrc'>581.31</td><td align="right" headers="perSecond Min" class='awrc'>1.67</td><td align="right" headers="perSecond Max" class='awrcrb'>823.76</td></tr>
<tr><td scope="row" class='awrnc'>saved cleanouts</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>saved cleanouts successfully completed</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>73,728</td><td align="right" class='awrnc'>121.95</td><td align="right" class='awrnc'>0.34</td><td align="right" headers="perSecond Average" class='awrnclb'>121.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>121.95</td><td align="right" headers="perSecond Max" class='awrncrb'>121.95</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>66,616</td><td align="right" class='awrnc'>110.18</td><td align="right" class='awrnc'>0.30</td><td align="right" headers="perSecond Average" class='awrnclb'>110.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>110.18</td><td align="right" headers="perSecond Max" class='awrncrb'>110.18</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read bytes</td><td align="right" class='awrc'>311,296</td><td align="right" class='awrc'>514.89</td><td align="right" class='awrc'>1.42</td><td align="right" headers="perSecond Average" class='awrclb'>514.89</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>514.89</td><td align="right" headers="perSecond Max" class='awrcrb'>514.89</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read ops</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>73,728</td><td align="right" class='awrc'>121.95</td><td align="right" class='awrc'>0.34</td><td align="right" headers="perSecond Average" class='awrclb'>121.95</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>121.95</td><td align="right" headers="perSecond Max" class='awrcrb'>121.95</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment chunks allocation from dispenser</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser allocations</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc ops</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>930</td><td align="right" class='awrc'>1.54</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.77</td><td align="right" headers="perSecond StdDev" class='awrc'>1.08</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>1.53</td></tr>
<tr><td scope="row" class='awrnc'>session connect time</td><td align="right" class='awrnc'>4,842</td><td align="right" class='awrnc'>8.01</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>4.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.13</td><td align="right" headers="perSecond Min" class='awrnc'>0.38</td><td align="right" headers="perSecond Max" class='awrncrb'>7.63</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>1,684,422</td><td align="right" class='awrc'>2,786.03</td><td align="right" class='awrc'>7.67</td><td align="right" headers="perSecond Average" class='awrclb'>1,393.01</td><td align="right" headers="perSecond StdDev" class='awrc'>18.33</td><td align="right" headers="perSecond Min" class='awrc'>1,380.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1,405.97</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>11,300,825</td><td align="right" class='awrnc'>18,691.53</td><td align="right" class='awrnc'>51.48</td><td align="right" headers="perSecond Average" class='awrnclb'>9,345.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>94.73</td><td align="right" headers="perSecond Min" class='awrnc'>9,278.78</td><td align="right" headers="perSecond Max" class='awrncrb'>9,412.75</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>1,651,833</td><td align="right" class='awrc'>2,732.13</td><td align="right" class='awrc'>7.52</td><td align="right" headers="perSecond Average" class='awrclb'>1,366.06</td><td align="right" headers="perSecond StdDev" class='awrc'>12.80</td><td align="right" headers="perSecond Min" class='awrc'>1,357.01</td><td align="right" headers="perSecond Max" class='awrcrb'>1,375.12</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>518</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.43</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.34</td><td align="right" headers="perSecond Max" class='awrncrb'>0.51</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>768,263</td><td align="right" class='awrc'>1,270.73</td><td align="right" class='awrc'>3.50</td><td align="right" headers="perSecond Average" class='awrclb'>635.36</td><td align="right" headers="perSecond StdDev" class='awrc'>816.44</td><td align="right" headers="perSecond Min" class='awrc'>58.05</td><td align="right" headers="perSecond Max" class='awrcrb'>1,212.67</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>44</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>2,891,303</td><td align="right" class='awrnc'>4,782.21</td><td align="right" class='awrnc'>13.17</td><td align="right" headers="perSecond Average" class='awrnclb'>2,391.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>61.64</td><td align="right" headers="perSecond Min" class='awrnc'>2,347.52</td><td align="right" headers="perSecond Max" class='awrncrb'>2,434.69</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>195</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.15</td><td align="right" headers="perSecond Max" class='awrcrb'>0.18</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>207</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.15</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>5,426,339</td><td align="right" class='awrc'>8,975.13</td><td align="right" class='awrc'>24.72</td><td align="right" headers="perSecond Average" class='awrclb'>4,487.57</td><td align="right" headers="perSecond StdDev" class='awrc'>632.99</td><td align="right" headers="perSecond Min" class='awrc'>4,039.97</td><td align="right" headers="perSecond Max" class='awrcrb'>4,935.16</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>10,985</td><td align="right" class='awrc'>18.17</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>9.08</td><td align="right" headers="perSecond StdDev" class='awrc'>4.11</td><td align="right" headers="perSecond Min" class='awrc'>6.18</td><td align="right" headers="perSecond Max" class='awrcrb'>11.99</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>546,150</td><td align="right" class='awrnc'>903.33</td><td align="right" class='awrnc'>2.49</td><td align="right" headers="perSecond Average" class='awrnclb'>451.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>138.42</td><td align="right" headers="perSecond Min" class='awrnc'>353.79</td><td align="right" headers="perSecond Max" class='awrncrb'>549.55</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>546,150</td><td align="right" class='awrc'>903.33</td><td align="right" class='awrc'>2.49</td><td align="right" headers="perSecond Average" class='awrclb'>451.67</td><td align="right" headers="perSecond StdDev" class='awrc'>138.42</td><td align="right" headers="perSecond Min" class='awrc'>353.79</td><td align="right" headers="perSecond Max" class='awrcrb'>549.55</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>702</td><td align="right" class='awrnc'>1.16</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.53</td><td align="right" headers="perSecond Max" class='awrncrb'>0.64</td></tr>
<tr><td scope="row" class='awrc'>total cf enq hold time</td><td align="right" class='awrc'>6,263</td><td align="right" class='awrc'>10.36</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>5.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.67</td><td align="right" headers="perSecond Min" class='awrc'>4.70</td><td align="right" headers="perSecond Max" class='awrcrb'>5.65</td></tr>
<tr><td scope="row" class='awrnc'>total number of cf enq holders</td><td align="right" class='awrnc'>317</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.25</td><td align="right" headers="perSecond Max" class='awrncrb'>0.28</td></tr>
<tr><td scope="row" class='awrc'>total number of times SMON posted</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>transaction rollbacks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrc'>1,429,531</td><td align="right" class='awrc'>2,364.46</td><td align="right" class='awrc'>6.51</td><td align="right" headers="perSecond Average" class='awrclb'>1,182.23</td><td align="right" headers="perSecond StdDev" class='awrc'>606.35</td><td align="right" headers="perSecond Min" class='awrc'>753.48</td><td align="right" headers="perSecond Max" class='awrcrb'>1,610.98</td></tr>
<tr><td scope="row" class='awrnc'>undo change vector size</td><td align="right" class='awrnc'>241,471,916</td><td align="right" class='awrnc'>399,393.74</td><td align="right" class='awrnc'>1,099.95</td><td align="right" headers="perSecond Average" class='awrnclb'>199,696.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,398.42</td><td align="right" headers="perSecond Min" class='awrnc'>197,293.82</td><td align="right" headers="perSecond Max" class='awrncrb'>202,099.92</td></tr>
<tr><td scope="row" class='awrc'>user I/O wait time</td><td align="right" class='awrc'>2,062,228</td><td align="right" class='awrc'>3,410.92</td><td align="right" class='awrc'>9.39</td><td align="right" headers="perSecond Average" class='awrclb'>1,705.46</td><td align="right" headers="perSecond StdDev" class='awrc'>113.74</td><td align="right" headers="perSecond Min" class='awrc'>1,625.03</td><td align="right" headers="perSecond Max" class='awrcrb'>1,785.89</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>1,298</td><td align="right" class='awrnc'>2.15</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.13</td><td align="right" headers="perSecond Min" class='awrnc'>0.98</td><td align="right" headers="perSecond Max" class='awrncrb'>1.17</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>219,529</td><td align="right" class='awrc'>363.10</td><td align="right" class='awrc'>1.00</td><td align="right" headers="perSecond Average" class='awrclb'>181.55</td><td align="right" headers="perSecond StdDev" class='awrc'>2.55</td><td align="right" headers="perSecond Min" class='awrc'>179.75</td><td align="right" headers="perSecond Max" class='awrcrb'>183.35</td></tr>
<tr><td scope="row" class='awrnc'>user logons cumulative</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user logouts cumulative</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>882</td><td align="right" class='awrnc'>1.46</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.30</td><td align="right" headers="perSecond Min" class='awrnc'>0.52</td><td align="right" headers="perSecond Max" class='awrncrb'>0.94</td></tr>
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12072"></a>
<h3 class="awr">Global Messaging Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>28,822</td><td align="right" class='awrnc'>47.67</td><td align="right" class='awrnc'>0.13</td><td align="right" headers="perSecond Average" class='awrnclb'>23.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>11.94</td><td align="right" headers="perSecond Min" class='awrnc'>15.39</td><td align="right" headers="perSecond Max" class='awrncrb'>32.28</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>66,601</td><td align="right" class='awrnc'>110.16</td><td align="right" class='awrnc'>0.30</td><td align="right" headers="perSecond Average" class='awrnclb'>55.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.22</td><td align="right" headers="perSecond Min" class='awrnc'>54.92</td><td align="right" headers="perSecond Max" class='awrncrb'>55.23</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>142,613</td><td align="right" class='awrc'>235.88</td><td align="right" class='awrc'>0.65</td><td align="right" headers="perSecond Average" class='awrclb'>117.94</td><td align="right" headers="perSecond StdDev" class='awrc'>3.78</td><td align="right" headers="perSecond Min" class='awrc'>115.27</td><td align="right" headers="perSecond Max" class='awrcrb'>120.61</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>142,614</td><td align="right" class='awrnc'>235.88</td><td align="right" class='awrnc'>0.65</td><td align="right" headers="perSecond Average" class='awrnclb'>117.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.79</td><td align="right" headers="perSecond Min" class='awrnc'>115.26</td><td align="right" headers="perSecond Max" class='awrncrb'>120.63</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>200,255</td><td align="right" class='awrc'>331.22</td><td align="right" class='awrc'>0.91</td><td align="right" headers="perSecond Average" class='awrclb'>165.61</td><td align="right" headers="perSecond StdDev" class='awrc'>0.26</td><td align="right" headers="perSecond Min" class='awrc'>165.43</td><td align="right" headers="perSecond Max" class='awrcrb'>165.79</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>72,159</td><td align="right" class='awrnc'>119.35</td><td align="right" class='awrnc'>0.33</td><td align="right" headers="perSecond Average" class='awrnclb'>59.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.52</td><td align="right" headers="perSecond Min" class='awrnc'>57.19</td><td align="right" headers="perSecond Max" class='awrncrb'>62.16</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs assume no cvt</td><td align="right" class='awrc'>11,602</td><td align="right" class='awrc'>19.19</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>9.59</td><td align="right" headers="perSecond StdDev" class='awrc'>1.11</td><td align="right" headers="perSecond Min" class='awrc'>8.81</td><td align="right" headers="perSecond Max" class='awrcrb'>10.38</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast to fg</td><td align="right" class='awrnc'>1,790,606</td><td align="right" class='awrnc'>2,961.65</td><td align="right" class='awrnc'>8.16</td><td align="right" headers="perSecond Average" class='awrnclb'>1,480.83</td><td align="right" headers="perSecond StdDev" class='awrnc'>114.05</td><td align="right" headers="perSecond Min" class='awrnc'>1,400.18</td><td align="right" headers="perSecond Max" class='awrncrb'>1,561.47</td></tr>
<tr><td scope="row" class='awrc'>gcs ast xid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs bidless ast to lms</td><td align="right" class='awrnc'>221</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.23</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.35</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked converts</td><td align="right" class='awrc'>57,287</td><td align="right" class='awrc'>94.75</td><td align="right" class='awrc'>0.26</td><td align="right" headers="perSecond Average" class='awrclb'>47.38</td><td align="right" headers="perSecond StdDev" class='awrc'>0.38</td><td align="right" headers="perSecond Min" class='awrc'>47.11</td><td align="right" headers="perSecond Max" class='awrcrb'>47.65</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked cr converts</td><td align="right" class='awrnc'>8,005</td><td align="right" class='awrnc'>13.24</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>6.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.48</td><td align="right" headers="perSecond Min" class='awrnc'>5.57</td><td align="right" headers="perSecond Max" class='awrncrb'>7.67</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible basts</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (global)</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (local)</td><td align="right" class='awrc'>21,513</td><td align="right" class='awrc'>35.58</td><td align="right" class='awrc'>0.10</td><td align="right" headers="perSecond Average" class='awrclb'>17.79</td><td align="right" headers="perSecond StdDev" class='awrc'>0.50</td><td align="right" headers="perSecond Min" class='awrc'>17.44</td><td align="right" headers="perSecond Max" class='awrcrb'>18.15</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>290,012</td><td align="right" class='awrnc'>479.68</td><td align="right" class='awrnc'>1.32</td><td align="right" headers="perSecond Average" class='awrnclb'>239.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>18.09</td><td align="right" headers="perSecond Min" class='awrnc'>227.05</td><td align="right" headers="perSecond Max" class='awrncrb'>252.63</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>171</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.18</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr grant</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs grant ast</td><td align="right" class='awrc'>1,790,827</td><td align="right" class='awrc'>2,962.02</td><td align="right" class='awrc'>8.16</td><td align="right" headers="perSecond Average" class='awrclb'>1,481.01</td><td align="right" headers="perSecond StdDev" class='awrc'>113.82</td><td align="right" headers="perSecond Min" class='awrc'>1,400.52</td><td align="right" headers="perSecond Max" class='awrcrb'>1,561.49</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>12,659</td><td align="right" class='awrnc'>20.94</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>10.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.13</td><td align="right" headers="perSecond Min" class='awrnc'>9.67</td><td align="right" headers="perSecond Max" class='awrncrb'>11.27</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>548,163</td><td align="right" class='awrc'>906.66</td><td align="right" class='awrc'>2.50</td><td align="right" headers="perSecond Average" class='awrclb'>453.33</td><td align="right" headers="perSecond StdDev" class='awrc'>1.44</td><td align="right" headers="perSecond Min" class='awrc'>452.31</td><td align="right" headers="perSecond Max" class='awrcrb'>454.35</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>1,755</td><td align="right" class='awrnc'>2.90</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>1.39</td><td align="right" headers="perSecond Max" class='awrncrb'>1.51</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>3,102,816</td><td align="right" class='awrc'>5,132.05</td><td align="right" class='awrc'>14.13</td><td align="right" headers="perSecond Average" class='awrclb'>2,566.02</td><td align="right" headers="perSecond StdDev" class='awrc'>14.87</td><td align="right" headers="perSecond Min" class='awrc'>2,555.51</td><td align="right" headers="perSecond Max" class='awrcrb'>2,576.54</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms write request msgs</td><td align="right" class='awrnc'>123</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs process time(ms)</td><td align="right" class='awrc'>174,512</td><td align="right" class='awrc'>288.64</td><td align="right" class='awrc'>0.79</td><td align="right" headers="perSecond Average" class='awrclb'>144.32</td><td align="right" headers="perSecond StdDev" class='awrc'>3.94</td><td align="right" headers="perSecond Min" class='awrc'>141.54</td><td align="right" headers="perSecond Max" class='awrcrb'>147.10</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs received</td><td align="right" class='awrnc'>4,641,999</td><td align="right" class='awrnc'>7,677.84</td><td align="right" class='awrnc'>21.15</td><td align="right" headers="perSecond Average" class='awrnclb'>3,838.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>322.07</td><td align="right" headers="perSecond Min" class='awrnc'>3,611.18</td><td align="right" headers="perSecond Max" class='awrncrb'>4,066.66</td></tr>
<tr><td scope="row" class='awrc'>gcs new served by master</td><td align="right" class='awrc'>371</td><td align="right" class='awrc'>0.61</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.61</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.61</td><td align="right" headers="perSecond Max" class='awrcrb'>0.61</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>2,404</td><td align="right" class='awrnc'>3.98</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.63</td><td align="right" headers="perSecond Min" class='awrnc'>1.54</td><td align="right" headers="perSecond Max" class='awrncrb'>2.43</td></tr>
<tr><td scope="row" class='awrc'>gcs queued converts</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant immediate</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs actual</td><td align="right" class='awrc'>8,814</td><td align="right" class='awrc'>14.58</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>7.29</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>7.24</td><td align="right" headers="perSecond Max" class='awrcrb'>7.34</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs logical</td><td align="right" class='awrnc'>1,827,753</td><td align="right" class='awrnc'>3,023.10</td><td align="right" class='awrnc'>8.33</td><td align="right" headers="perSecond Average" class='awrnclb'>1,511.55</td><td align="right" headers="perSecond StdDev" class='awrnc'>109.80</td><td align="right" headers="perSecond Min" class='awrnc'>1,433.91</td><td align="right" headers="perSecond Max" class='awrncrb'>1,589.19</td></tr>
<tr><td scope="row" class='awrc'>gcs stale cr</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.05</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>gcs undo cr</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs process time(ms)</td><td align="right" class='awrc'>222</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.17</td><td align="right" headers="perSecond Max" class='awrcrb'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs received</td><td align="right" class='awrnc'>6,352</td><td align="right" class='awrnc'>10.51</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>5.25</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.85</td><td align="right" headers="perSecond Min" class='awrnc'>4.65</td><td align="right" headers="perSecond Max" class='awrncrb'>5.85</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock allocation</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>60,075</td><td align="right" class='awrnc'>99.36</td><td align="right" class='awrnc'>0.27</td><td align="right" headers="perSecond Average" class='awrnclb'>49.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.70</td><td align="right" headers="perSecond Min" class='awrnc'>48.48</td><td align="right" headers="perSecond Max" class='awrncrb'>50.88</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>60,075</td><td align="right" class='awrc'>99.36</td><td align="right" class='awrc'>0.27</td><td align="right" headers="perSecond Average" class='awrclb'>49.68</td><td align="right" headers="perSecond StdDev" class='awrc'>1.70</td><td align="right" headers="perSecond Min" class='awrc'>48.48</td><td align="right" headers="perSecond Max" class='awrcrb'>50.88</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>4,600</td><td align="right" class='awrnc'>7.61</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>3.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.60</td><td align="right" headers="perSecond Min" class='awrnc'>1.97</td><td align="right" headers="perSecond Max" class='awrncrb'>5.64</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>533,992</td><td align="right" class='awrc'>883.22</td><td align="right" class='awrc'>2.43</td><td align="right" headers="perSecond Average" class='awrclb'>441.61</td><td align="right" headers="perSecond StdDev" class='awrc'>68.54</td><td align="right" headers="perSecond Min" class='awrc'>393.14</td><td align="right" headers="perSecond Max" class='awrcrb'>490.08</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>439,273</td><td align="right" class='awrnc'>726.56</td><td align="right" class='awrnc'>2.00</td><td align="right" headers="perSecond Average" class='awrnclb'>363.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>29.97</td><td align="right" headers="perSecond Min" class='awrnc'>342.09</td><td align="right" headers="perSecond Max" class='awrncrb'>384.47</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>2,552,209</td><td align="right" class='awrc'>4,221.34</td><td align="right" class='awrc'>11.63</td><td align="right" headers="perSecond Average" class='awrclb'>2,110.67</td><td align="right" headers="perSecond StdDev" class='awrc'>124.84</td><td align="right" headers="perSecond Min" class='awrc'>2,022.39</td><td align="right" headers="perSecond Max" class='awrcrb'>2,198.95</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>4,648,351</td><td align="right" class='awrnc'>7,688.35</td><td align="right" class='awrnc'>21.17</td><td align="right" headers="perSecond Average" class='awrnclb'>3,844.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>321.23</td><td align="right" headers="perSecond Min" class='awrnc'>3,617.03</td><td align="right" headers="perSecond Max" class='awrncrb'>4,071.32</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>2,015,050</td><td align="right" class='awrc'>3,332.89</td><td align="right" class='awrc'>9.18</td><td align="right" headers="perSecond Average" class='awrclb'>1,666.45</td><td align="right" headers="perSecond StdDev" class='awrc'>193.69</td><td align="right" headers="perSecond Min" class='awrc'>1,529.48</td><td align="right" headers="perSecond Max" class='awrcrb'>1,803.41</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>2,454,096</td><td align="right" class='awrnc'>4,059.07</td><td align="right" class='awrnc'>11.18</td><td align="right" headers="perSecond Average" class='awrnclb'>2,029.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>213.47</td><td align="right" headers="perSecond Min" class='awrnc'>1,878.59</td><td align="right" headers="perSecond Max" class='awrncrb'>2,180.48</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>34,877</td><td align="right" class='awrc'>57.69</td><td align="right" class='awrc'>0.16</td><td align="right" headers="perSecond Average" class='awrclb'>28.84</td><td align="right" headers="perSecond StdDev" class='awrc'>12.62</td><td align="right" headers="perSecond Min" class='awrc'>19.92</td><td align="right" headers="perSecond Max" class='awrcrb'>37.77</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>2,157,952</td><td align="right" class='awrnc'>3,569.25</td><td align="right" class='awrnc'>9.83</td><td align="right" headers="perSecond Average" class='awrnclb'>1,784.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>108.94</td><td align="right" headers="perSecond Min" class='awrnc'>1,707.59</td><td align="right" headers="perSecond Max" class='awrncrb'>1,861.66</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>167,349,244,796</td><td align="right" class='awrc'>276,795,498.60</td><td align="right" class='awrc'>762,310.42</td><td align="right" headers="perSecond Average" class='awrclb'>138,397,749.30</td><td align="right" headers="perSecond StdDev" class='awrc'>12,166,726.51</td><td align="right" headers="perSecond Min" class='awrc'>129,794,574.48</td><td align="right" headers="perSecond Max" class='awrcrb'>147,000,924.12</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>63,816</td><td align="right" class='awrnc'>105.55</td><td align="right" class='awrnc'>0.29</td><td align="right" headers="perSecond Average" class='awrnclb'>52.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.40</td><td align="right" headers="perSecond Min" class='awrnc'>49.66</td><td align="right" headers="perSecond Max" class='awrncrb'>55.89</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>4,648,351</td><td align="right" class='awrc'>7,688.35</td><td align="right" class='awrc'>21.17</td><td align="right" headers="perSecond Average" class='awrclb'>3,844.17</td><td align="right" headers="perSecond StdDev" class='awrc'>321.23</td><td align="right" headers="perSecond Min" class='awrc'>3,617.03</td><td align="right" headers="perSecond Max" class='awrcrb'>4,071.32</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>479,251</td><td align="right" class='awrnc'>792.68</td><td align="right" class='awrnc'>2.18</td><td align="right" headers="perSecond Average" class='awrnclb'>396.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>39.77</td><td align="right" headers="perSecond Min" class='awrnc'>368.22</td><td align="right" headers="perSecond Max" class='awrncrb'>424.47</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>2,341,415</td><td align="right" class='awrc'>3,872.69</td><td align="right" class='awrc'>10.67</td><td align="right" headers="perSecond Average" class='awrclb'>1,936.35</td><td align="right" headers="perSecond StdDev" class='awrc'>4.33</td><td align="right" headers="perSecond Min" class='awrc'>1,933.29</td><td align="right" headers="perSecond Max" class='awrcrb'>1,939.41</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>775,475</td><td align="right" class='awrnc'>1,282.63</td><td align="right" class='awrnc'>3.53</td><td align="right" headers="perSecond Average" class='awrnclb'>641.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>56.75</td><td align="right" headers="perSecond Min" class='awrnc'>601.19</td><td align="right" headers="perSecond Max" class='awrncrb'>681.45</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>2,551,646</td><td align="right" class='awrc'>4,220.42</td><td align="right" class='awrc'>11.62</td><td align="right" headers="perSecond Average" class='awrclb'>2,110.21</td><td align="right" headers="perSecond StdDev" class='awrc'>125.38</td><td align="right" headers="perSecond Min" class='awrc'>2,021.55</td><td align="right" headers="perSecond Max" class='awrcrb'>2,198.86</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages received</td><td align="right" class='awrnc'>284,138</td><td align="right" class='awrnc'>469.97</td><td align="right" class='awrnc'>1.29</td><td align="right" headers="perSecond Average" class='awrnclb'>234.98</td><td align="right" headers="perSecond StdDev" class='awrnc'>71.62</td><td align="right" headers="perSecond Min" class='awrnc'>184.34</td><td align="right" headers="perSecond Max" class='awrncrb'>285.63</td></tr>
<tr><td scope="row" class='awrc'>process batch messages sent</td><td align="right" class='awrc'>303,171</td><td align="right" class='awrc'>501.44</td><td align="right" class='awrc'>1.38</td><td align="right" headers="perSecond Average" class='awrclb'>250.72</td><td align="right" headers="perSecond StdDev" class='awrc'>76.26</td><td align="right" headers="perSecond Min" class='awrc'>196.80</td><td align="right" headers="perSecond Max" class='awrcrb'>304.64</td></tr>
<tr><td scope="row" class='awrnc'>receiver cycle time</td><td align="right" class='awrnc'>662,139</td><td align="right" class='awrnc'>1,095.18</td><td align="right" class='awrnc'>3.02</td><td align="right" headers="perSecond Average" class='awrnclb'>547.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.30</td><td align="right" headers="perSecond Min" class='awrnc'>530.40</td><td align="right" headers="perSecond Max" class='awrncrb'>564.77</td></tr>
<tr><td scope="row" class='awrc'>receiver loop count</td><td align="right" class='awrc'>2,833,214</td><td align="right" class='awrc'>4,686.12</td><td align="right" class='awrc'>12.91</td><td align="right" headers="perSecond Average" class='awrclb'>2,343.06</td><td align="right" headers="perSecond StdDev" class='awrc'>189.53</td><td align="right" headers="perSecond Min" class='awrc'>2,209.04</td><td align="right" headers="perSecond Max" class='awrcrb'>2,477.08</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12073"></a>
<h3 class="awr">System Statistics (Absolute Values)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Absolute Values)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Sessions">Sessions</th>
<th class="awrbg" colspan=" 2" id="OpenCursors">Open Cursors</th>
<th class="awrbg" colspan=" 2" id="SessionCachedCursors">Session Cached Cursors</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sessions Begin" class='awrclb'>111</td><td align="right" headers="Sessions End" class='awrc'>90</td><td align="right" headers="OpenCursors Begin" class='awrclb'>200</td><td align="right" headers="OpenCursors End" class='awrc'>114</td><td align="right" headers="SessionCachedCursors Begin" class='awrclb'>5,469</td><td align="right" headers="SessionCachedCursors End" class='awrcrb'>5,574</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sessions Begin" class='awrnclb'>111</td><td align="right" headers="Sessions End" class='awrnc'>91</td><td align="right" headers="OpenCursors Begin" class='awrnclb'>169</td><td align="right" headers="OpenCursors End" class='awrnc'>92</td><td align="right" headers="SessionCachedCursors Begin" class='awrnclb'>5,627</td><td align="right" headers="SessionCachedCursors End" class='awrncrb'>5,713</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>222</td><td align="right" class='awrct'>181</td><td align="right" class='awrclbt'>369</td><td align="right" class='awrct'>206</td><td align="right" class='awrclbt'>11,096</td><td align="right" class='awrcrbt'>11,287</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>111</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnclb'>185</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnclb'>5,548</td><td align="right" class='awrncrb'>5,644</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrclb'>22</td><td align="right" class='awrc'>16</td><td align="right" class='awrclb'>112</td><td align="right" class='awrcrb'>98</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="630"></a>
<h2 class="awr">
I/O Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12097">IO Profile (Global)</a></li>
<li class="awr"><a class="awr" href="#12076">IOStat by Function</a></li>
<li class="awr"><a class="awr" href="#12077">IOStat by File Type</a></li>
<li class="awr"><a class="awr" href="#12070">Segment Statistics (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12097"></a>
<h3 class="awr">IO Profile (Global)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IO Profile (Global)"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Read+Write/s</th><th class="awrbg" scope="col">Reads/s</th><th class="awrbg" scope="col">Writes/s</th></tr>
<tr><td class='awrc'>Total Requests</td><td align="right" class='awrc'>8,356.22</td><td align="right" class='awrc'>7,017.52</td><td align="right" class='awrc'>1,338.70</td></tr>
<tr><td class='awrnc'>Database Requests</td><td align="right" class='awrnc'>8,002.29</td><td align="right" class='awrnc'>7,004.96</td><td align="right" class='awrnc'>997.33</td></tr>
<tr><td class='awrc'>Optimized Requests</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo Requests</td><td align="right" class='awrnc'>331.54</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>331.54</td></tr>
<tr><td class='awrc'>Total (MB)</td><td align="right" class='awrc'>66.08</td><td align="right" class='awrc'>56.88</td><td align="right" class='awrc'>9.19</td></tr>
<tr><td class='awrnc'>Database (MB)</td><td align="right" class='awrnc'>62.82</td><td align="right" class='awrnc'>54.73</td><td align="right" class='awrnc'>8.09</td></tr>
<tr><td class='awrc'>Optimized Total (MB)</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo (MB)</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.97</td></tr>
<tr><td class='awrc'>Database (blocks)</td><td align="right" class='awrc'>8,041.12</td><td align="right" class='awrc'>7,005.99</td><td align="right" class='awrc'>1,035.13</td></tr>
<tr><td class='awrnc'>Via Buffer Cache (blocks)</td><td align="right" class='awrnc'>8,039.80</td><td align="right" class='awrnc'>7,005.92</td><td align="right" class='awrnc'>1,033.88</td></tr>
<tr><td class='awrc'>Direct (blocks)</td><td align="right" class='awrc'>1.31</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>1.25</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12076"></a>
<h3 class="awr">IOStat by Function</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<td>&#160;</td><td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>5,037,256</td><td align="right" headers="Requests IOs/s" class='awrc'>8,331.23</td><td align="right" headers="Requests Reads/s" class='awrc'>6,993.32</td><td align="right" headers="Requests Writes/s" class='awrc'>1,337.91</td><td align="right" headers="MB Total" class='awrclb'>39,845</td><td align="right" headers="MB IOMB/s" class='awrc'>65.90</td><td align="right" headers="MB ReadMB/s" class='awrc'>56.70</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>9.20</td><td align="right" class='awrc'>4.4M</td><td align="right" class='awrc'>4.89ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>4,220,713</td><td align="right" headers="Requests IOs/s" class='awrnc'>6,980.74</td><td align="right" headers="Requests Reads/s" class='awrnc'>6,980.74</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>32,984</td><td align="right" headers="MB IOMB/s" class='awrnc'>54.55</td><td align="right" headers="MB ReadMB/s" class='awrnc'>54.55</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>4.2M</td><td align="right" class='awrnc'>4.89ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>603,047</td><td align="right" headers="Requests IOs/s" class='awrc'>997.39</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>997.39</td><td align="right" headers="MB Total" class='awrclb'>4,887</td><td align="right" headers="MB IOMB/s" class='awrc'>8.08</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>8.08</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>8,701</td><td align="right" headers="Requests IOs/s" class='awrnc'>14.39</td><td align="right" headers="Requests Reads/s" class='awrnc'>12.36</td><td align="right" headers="Requests Writes/s" class='awrnc'>2.03</td><td align="right" headers="MB Total" class='awrnclb'>1,320</td><td align="right" headers="MB IOMB/s" class='awrnc'>2.18</td><td align="right" headers="MB ReadMB/s" class='awrnc'>2.15</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.03</td><td align="right" class='awrnc'>5135</td><td align="right" class='awrnc'>4.89ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>204,655</td><td align="right" headers="Requests IOs/s" class='awrc'>338.48</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>338.48</td><td align="right" headers="MB Total" class='awrclb'>649</td><td align="right" headers="MB IOMB/s" class='awrc'>1.07</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>1.07</td><td align="right" class='awrc'>200K</td><td align="right" class='awrc'>4.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>98</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.16</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.16</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>3</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>3.72ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Direct Reads</td><td align="right" headers="Requests Total" class='awrclb'>42</td><td align="right" headers="Requests IOs/s" class='awrc'>0.07</td><td align="right" headers="Requests Reads/s" class='awrc'>0.06</td><td align="right" headers="Requests Writes/s" class='awrc'>0.01</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>1</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,503,280</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,140.23</td><td align="right" headers="Requests Reads/s" class='awrnct'>3,475.94</td><td align="right" headers="Requests Writes/s" class='awrnct'>664.29</td><td align="right" headers="MB Total" class='awrnclbt'>19,807</td><td align="right" headers="MB IOMB/s" class='awrnct'>32.76</td><td align="right" headers="MB ReadMB/s" class='awrnct'>28.20</td><td align="right" headers="MB WriteMB/s" class='awrncrbt'>4.56</td><td align="right" class='awrnct'>2.2M</td><td align="right" class='awrnct'>5.13ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>2,097,875</td><td align="right" headers="Requests IOs/s" class='awrc'>3,469.72</td><td align="right" headers="Requests Reads/s" class='awrc'>3,469.72</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>16,396</td><td align="right" headers="MB IOMB/s" class='awrc'>27.12</td><td align="right" headers="MB ReadMB/s" class='awrc'>27.12</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>2.1M</td><td align="right" class='awrc'>5.15ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>DBWR</td><td align="right" headers="Requests Total" class='awrnclb'>298,748</td><td align="right" headers="Requests IOs/s" class='awrnc'>494.11</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>494.11</td><td align="right" headers="MB Total" class='awrnclb'>2,424</td><td align="right" headers="MB IOMB/s" class='awrnc'>4.01</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>4.01</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Others</td><td align="right" headers="Requests Total" class='awrclb'>4,308</td><td align="right" headers="Requests IOs/s" class='awrc'>7.13</td><td align="right" headers="Requests Reads/s" class='awrc'>6.16</td><td align="right" headers="Requests Writes/s" class='awrc'>0.97</td><td align="right" headers="MB Total" class='awrclb'>664</td><td align="right" headers="MB IOMB/s" class='awrc'>1.10</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.08</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.02</td><td align="right" class='awrc'>2520</td><td align="right" class='awrc'>4.75ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>102,305</td><td align="right" headers="Requests IOs/s" class='awrnc'>169.20</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>169.20</td><td align="right" headers="MB Total" class='awrnclb'>320</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.53</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.53</td><td align="right" class='awrnc'>99.8K</td><td align="right" class='awrnc'>4.70ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Direct Reads</td><td align="right" headers="Requests Total" class='awrclb'>42</td><td align="right" headers="Requests IOs/s" class='awrc'>0.07</td><td align="right" headers="Requests Reads/s" class='awrc'>0.06</td><td align="right" headers="Requests Writes/s" class='awrc'>0.01</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>2</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>1</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>2</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>2,533,976</td><td align="right" headers="Requests IOs/s" class='awrct'>4,191.00</td><td align="right" headers="Requests Reads/s" class='awrct'>3,517.38</td><td align="right" headers="Requests Writes/s" class='awrct'>673.62</td><td align="right" headers="MB Total" class='awrclbt'>20,038</td><td align="right" headers="MB IOMB/s" class='awrct'>33.14</td><td align="right" headers="MB ReadMB/s" class='awrct'>28.51</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>4.63</td><td align="right" class='awrct'>2.2M</td><td align="right" class='awrct'>4.66ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>2,122,838</td><td align="right" headers="Requests IOs/s" class='awrnc'>3,511.01</td><td align="right" headers="Requests Reads/s" class='awrnc'>3,511.01</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>16,588</td><td align="right" headers="MB IOMB/s" class='awrnc'>27.44</td><td align="right" headers="MB ReadMB/s" class='awrnc'>27.44</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>2.1M</td><td align="right" class='awrnc'>4.63ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>304,299</td><td align="right" headers="Requests IOs/s" class='awrc'>503.29</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>503.29</td><td align="right" headers="MB Total" class='awrclb'>2,463</td><td align="right" headers="MB IOMB/s" class='awrc'>4.07</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>4.07</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>4,393</td><td align="right" headers="Requests IOs/s" class='awrnc'>7.27</td><td align="right" headers="Requests Reads/s" class='awrnc'>6.21</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.06</td><td align="right" headers="MB Total" class='awrnclb'>656</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.08</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.07</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.02</td><td align="right" class='awrnc'>2615</td><td align="right" class='awrnc'>5.01ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>102,350</td><td align="right" headers="Requests IOs/s" class='awrc'>169.28</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>169.28</td><td align="right" headers="MB Total" class='awrclb'>329</td><td align="right" headers="MB IOMB/s" class='awrc'>0.54</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.54</td><td align="right" class='awrc'>100.2K</td><td align="right" class='awrc'>5.21ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>96</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.16</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.16</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>2</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>3.72ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12077"></a>
<h3 class="awr">IOStat by File Type</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by File Type"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<th class="awrbg" colspan=" 2" id="ServiceTime">Service Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col" id="Small|Read">Small Read</th><th class="awrbg" scope="col" id="Large|Read">Large Read</th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>5,037,822</td><td align="right" headers="Requests IOs/s" class='awrc'>8,332.17</td><td align="right" headers="Requests Reads/s" class='awrc'>6,994.37</td><td align="right" headers="Requests Writes/s" class='awrc'>1,337.80</td><td align="right" headers="MB Total" class='awrclb'>39,843</td><td align="right" headers="MB IOMB/s" class='awrc'>65.90</td><td align="right" headers="MB ReadMB/s" class='awrc'>56.70</td><td align="right" headers="MB WriteMB/s" class='awrc'>9.19</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>4.37ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1422.71ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>4,824,386</td><td align="right" headers="Requests IOs/s" class='awrnc'>7,979.16</td><td align="right" headers="Requests Reads/s" class='awrnc'>6,981.79</td><td align="right" headers="Requests Writes/s" class='awrnc'>997.38</td><td align="right" headers="MB Total" class='awrnclb'>37,866</td><td align="right" headers="MB IOMB/s" class='awrnc'>62.63</td><td align="right" headers="MB ReadMB/s" class='awrnc'>54.54</td><td align="right" headers="MB WriteMB/s" class='awrnc'>8.08</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>4.37ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>205,985</td><td align="right" headers="Requests IOs/s" class='awrc'>340.68</td><td align="right" headers="Requests Reads/s" class='awrc'>2.31</td><td align="right" headers="Requests Writes/s" class='awrc'>338.37</td><td align="right" headers="MB Total" class='awrclb'>1,853</td><td align="right" headers="MB IOMB/s" class='awrc'>3.06</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.99</td><td align="right" headers="MB WriteMB/s" class='awrc'>1.07</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1429.54ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>7,360</td><td align="right" headers="Requests IOs/s" class='awrnc'>12.17</td><td align="right" headers="Requests Reads/s" class='awrnc'>10.20</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.97</td><td align="right" headers="MB Total" class='awrnclb'>115</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.19</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.16</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.03</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>2.83ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>91</td><td align="right" headers="Requests IOs/s" class='awrc'>0.15</td><td align="right" headers="Requests Reads/s" class='awrc'>0.07</td><td align="right" headers="Requests Writes/s" class='awrc'>0.08</td><td align="right" headers="MB Total" class='awrclb'>9</td><td align="right" headers="MB IOMB/s" class='awrc'>0.01</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.54ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>12.33ms</td></tr>
<tr><td align="right" scope="row" class='awrnct'>1</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,503,565</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,140.70</td><td align="right" headers="Requests Reads/s" class='awrnct'>3,476.46</td><td align="right" headers="Requests Writes/s" class='awrnct'>664.24</td><td align="right" headers="MB Total" class='awrnclbt'>19,806</td><td align="right" headers="MB IOMB/s" class='awrnct'>32.76</td><td align="right" headers="MB ReadMB/s" class='awrnct'>28.20</td><td align="right" headers="MB WriteMB/s" class='awrnct'>4.56</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>4.61ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>1397.74ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>2,396,927</td><td align="right" headers="Requests IOs/s" class='awrc'>3,964.33</td><td align="right" headers="Requests Reads/s" class='awrc'>3,470.25</td><td align="right" headers="Requests Writes/s" class='awrc'>494.09</td><td align="right" headers="MB Total" class='awrclb'>18,815</td><td align="right" headers="MB IOMB/s" class='awrc'>31.12</td><td align="right" headers="MB ReadMB/s" class='awrc'>27.11</td><td align="right" headers="MB WriteMB/s" class='awrc'>4.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>4.61ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Log File</td><td align="right" headers="Requests Total" class='awrnclb'>102,985</td><td align="right" headers="Requests IOs/s" class='awrnc'>170.33</td><td align="right" headers="Requests Reads/s" class='awrnc'>1.17</td><td align="right" headers="Requests Writes/s" class='awrnc'>169.16</td><td align="right" headers="MB Total" class='awrnclb'>926</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.53</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.53</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>1410.89ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Control File</td><td align="right" headers="Requests Total" class='awrclb'>3,564</td><td align="right" headers="Requests IOs/s" class='awrc'>5.89</td><td align="right" headers="Requests Reads/s" class='awrc'>4.97</td><td align="right" headers="Requests Writes/s" class='awrc'>0.92</td><td align="right" headers="MB Total" class='awrclb'>56</td><td align="right" headers="MB IOMB/s" class='awrc'>0.09</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.08</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>2.82ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Temp File</td><td align="right" headers="Requests Total" class='awrnclb'>89</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.15</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.07</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.07</td><td align="right" headers="MB Total" class='awrnclb'>9</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.01</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.58ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>12.33ms</td></tr>
<tr><td align="right" scope="row" class='awrct'>2</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>2,534,257</td><td align="right" headers="Requests IOs/s" class='awrct'>4,191.47</td><td align="right" headers="Requests Reads/s" class='awrct'>3,517.91</td><td align="right" headers="Requests Writes/s" class='awrct'>673.56</td><td align="right" headers="MB Total" class='awrclbt'>20,037</td><td align="right" headers="MB IOMB/s" class='awrct'>33.14</td><td align="right" headers="MB ReadMB/s" class='awrct'>28.50</td><td align="right" headers="MB WriteMB/s" class='awrct'>4.64</td><td align="right" headers="ServiceTime Small|Read" class='awrclbt'>4.13ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrbt'>1448.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>2,427,459</td><td align="right" headers="Requests IOs/s" class='awrnc'>4,014.83</td><td align="right" headers="Requests Reads/s" class='awrnc'>3,511.54</td><td align="right" headers="Requests Writes/s" class='awrnc'>503.29</td><td align="right" headers="MB Total" class='awrnclb'>19,051</td><td align="right" headers="MB IOMB/s" class='awrnc'>31.51</td><td align="right" headers="MB ReadMB/s" class='awrnc'>27.43</td><td align="right" headers="MB WriteMB/s" class='awrnc'>4.08</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>4.13ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>103,000</td><td align="right" headers="Requests IOs/s" class='awrc'>170.35</td><td align="right" headers="Requests Reads/s" class='awrc'>1.14</td><td align="right" headers="Requests Writes/s" class='awrc'>169.21</td><td align="right" headers="MB Total" class='awrclb'>927</td><td align="right" headers="MB IOMB/s" class='awrc'>1.53</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.99</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.54</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1448.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>3,796</td><td align="right" headers="Requests IOs/s" class='awrnc'>6.28</td><td align="right" headers="Requests Reads/s" class='awrnc'>5.23</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.05</td><td align="right" headers="MB Total" class='awrnclb'>59</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.10</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.08</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.02</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>2.84ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>2</td><td align="right" headers="Requests IOs/s" class='awrc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>2.00ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12070"></a>
<h3 class="awr">Segment Statistics (Global)</h3>
<ul>
<li class="awr"> % Total shows % of statistic for each segment compared to the global cluster-wide total     (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants) </li>
<li class="awr"> % Capture shows % of statistic for each segment compared to the  total captured     by AWR for all segments during the snapshot interval</li>
<li class="awr">Captured Segments account for	80.1% of Total Logical Reads:	   11,300,825</li>
<li class="awr">Captured Segments account for	99.6% of Total Physical Reads:	     4,235,980</li>
<li class="awr">Captured Segments account for	99.7% of Total Physical Read Requests:	     4,235,362</li>
<li class="awr">Captured Segments account for	99.7% of Total UnOptimized Read Requests:	4,235,362</li>
<li class="awr">Captured Segments account for	 0.0% of Total Optimized  Read Requests:	       1</li>
<li class="awr">Captured Segments account for	 0.0% of Total Direct Physical Reads:		   38</li>
<li class="awr">Captured Segments account for	96.5% of Total Physical Writes: 	625,864</li>
<li class="awr">Captured Segments account for	99.6% of Total Physical Write Requests: 	603,006</li>
<li class="awr">Captured Segments account for	17.1% of Total Direct Physical Writes:		   755</li>
<li class="awr">Captured Segments account for	 0.0% of Total Table Scans:		  5</li>
<li class="awr">Captured Segments account for	78.4% of Total CR Blocks Received:	     8,013</li>
<li class="awr">Captured Segments account for	96.8% of Total Current Blocks Received: 	 26,735</li>
<li class="awr">Captured Segments account for	78.4% of Total CR Blocks Served:	   8,009</li>
<li class="awr">Captured Segments account for	96.8% of Total Current Blocks Served:	       26,733</li>
<li class="awr">Captured Segments account for	99.6% of Total Global Cache Remote Grants:	 1,928,050</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="Segment Statistics (Global). . % Total shows % of statistic for each segment compared to the global cluster-wide total (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants). % Capture shows % of statistic for each segment compared to the total captured by AWR for all segments during the snapshot interval"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%Capture</th></tr>
<tr><td class='awrc'>db block changes</td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>19,504</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>21.28</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>19,280</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>21.04</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>18,160</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.81</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER6</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73431</td><td align="right" class='awrnc'>73435</td><td align="right" class='awrnc'>17,392</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>18.98</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER28</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>17,312</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>18.89</td></tr>
<tr><td class='awrnc'>gc cr blocks received</td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>459</td><td align="right" class='awrnc'>5.73</td><td align="right" class='awrnc'>23.18</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER23</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73508</td><td align="right" class='awrc'>73516</td><td align="right" class='awrc'>415</td><td align="right" class='awrc'>5.18</td><td align="right" class='awrc'>20.96</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>398</td><td align="right" class='awrnc'>4.97</td><td align="right" class='awrnc'>20.10</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER31</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73552</td><td align="right" class='awrc'>73557</td><td align="right" class='awrc'>364</td><td align="right" class='awrc'>4.54</td><td align="right" class='awrc'>18.38</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>344</td><td align="right" class='awrnc'>4.29</td><td align="right" class='awrnc'>17.37</td></tr>
<tr><td class='awrc'>gc cr blocks served</td><td class='awrc'>USER8</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>459</td><td align="right" class='awrc'>5.73</td><td align="right" class='awrc'>23.18</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER23</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73508</td><td align="right" class='awrnc'>73516</td><td align="right" class='awrnc'>415</td><td align="right" class='awrnc'>5.18</td><td align="right" class='awrnc'>20.96</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>398</td><td align="right" class='awrc'>4.97</td><td align="right" class='awrc'>20.10</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER31</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73552</td><td align="right" class='awrnc'>73557</td><td align="right" class='awrnc'>364</td><td align="right" class='awrnc'>4.54</td><td align="right" class='awrnc'>18.38</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>344</td><td align="right" class='awrc'>4.30</td><td align="right" class='awrc'>17.37</td></tr>
<tr><td class='awrnc'>gc cu blocks received</td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>1,285</td><td align="right" class='awrnc'>4.81</td><td align="right" class='awrnc'>22.74</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,154</td><td align="right" class='awrc'>4.32</td><td align="right" class='awrc'>20.42</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER23</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73508</td><td align="right" class='awrnc'>73516</td><td align="right" class='awrnc'>1,084</td><td align="right" class='awrnc'>4.05</td><td align="right" class='awrnc'>19.18</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER31</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73552</td><td align="right" class='awrc'>73557</td><td align="right" class='awrc'>1,072</td><td align="right" class='awrc'>4.01</td><td align="right" class='awrc'>18.97</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>1,057</td><td align="right" class='awrnc'>3.95</td><td align="right" class='awrnc'>18.70</td></tr>
<tr><td class='awrc'>gc cu blocks served</td><td class='awrc'>USER8</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>1,285</td><td align="right" class='awrc'>4.81</td><td align="right" class='awrc'>22.74</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>1,154</td><td align="right" class='awrnc'>4.32</td><td align="right" class='awrnc'>20.42</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER23</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73508</td><td align="right" class='awrc'>73516</td><td align="right" class='awrc'>1,084</td><td align="right" class='awrc'>4.05</td><td align="right" class='awrc'>19.18</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER31</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73552</td><td align="right" class='awrnc'>73557</td><td align="right" class='awrnc'>1,072</td><td align="right" class='awrnc'>4.01</td><td align="right" class='awrnc'>18.97</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>1,057</td><td align="right" class='awrc'>3.95</td><td align="right" class='awrc'>18.70</td></tr>
<tr><td class='awrnc'>gc remote grants</td><td class='awrnc'>USER26</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73533</td><td align="right" class='awrnc'>73537</td><td align="right" class='awrnc'>62,560</td><td align="right" class='awrnc'>3.24</td><td align="right" class='awrnc'>20.64</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER18</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>61,793</td><td align="right" class='awrc'>3.20</td><td align="right" class='awrc'>20.39</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER31</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73552</td><td align="right" class='awrnc'>73557</td><td align="right" class='awrnc'>59,819</td><td align="right" class='awrnc'>3.10</td><td align="right" class='awrnc'>19.74</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER15</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>59,501</td><td align="right" class='awrc'>3.09</td><td align="right" class='awrc'>19.63</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER40</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73603</td><td align="right" class='awrnc'>73605</td><td align="right" class='awrnc'>59,392</td><td align="right" class='awrnc'>3.08</td><td align="right" class='awrnc'>19.60</td></tr>
<tr><td class='awrc'>logical reads</td><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td><td class='awrc'>USER$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>497,136</td><td align="right" class='awrc'>4.40</td><td align="right" class='awrc'>48.98</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73430</td><td align="right" class='awrnc'>73430</td><td align="right" class='awrnc'>130,320</td><td align="right" class='awrnc'>1.15</td><td align="right" class='awrnc'>12.84</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>129,984</td><td align="right" class='awrc'>1.15</td><td align="right" class='awrc'>12.81</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73417</td><td align="right" class='awrnc'>73417</td><td align="right" class='awrnc'>128,944</td><td align="right" class='awrnc'>1.14</td><td align="right" class='awrnc'>12.70</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>128,592</td><td align="right" class='awrc'>1.14</td><td align="right" class='awrc'>12.67</td></tr>
<tr><td class='awrnc'>physical reads</td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>121,154</td><td align="right" class='awrnc'>2.86</td><td align="right" class='awrnc'>20.75</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>120,845</td><td align="right" class='awrc'>2.85</td><td align="right" class='awrc'>20.70</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>114,923</td><td align="right" class='awrnc'>2.71</td><td align="right" class='awrnc'>19.69</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>114,901</td><td align="right" class='awrc'>2.71</td><td align="right" class='awrc'>19.68</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER28</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73541</td><td align="right" class='awrnc'>73548</td><td align="right" class='awrnc'>111,922</td><td align="right" class='awrnc'>2.64</td><td align="right" class='awrnc'>19.17</td></tr>
<tr><td class='awrc'>physical read requests</td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>121,154</td><td align="right" class='awrc'>2.86</td><td align="right" class='awrc'>20.75</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>120,845</td><td align="right" class='awrnc'>2.85</td><td align="right" class='awrnc'>20.70</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>114,923</td><td align="right" class='awrc'>2.71</td><td align="right" class='awrc'>19.69</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>114,901</td><td align="right" class='awrnc'>2.71</td><td align="right" class='awrnc'>19.68</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER28</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>111,922</td><td align="right" class='awrc'>2.64</td><td align="right" class='awrc'>19.17</td></tr>
<tr><td class='awrnc'>physical writes</td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>18,769</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>21.31</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>17,963</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.39</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>17,424</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.78</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>17,337</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.68</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>16,596</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>18.84</td></tr>
<tr><td class='awrc'>physical writes direct</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_131</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>129</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>physical write requests</td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>18,736</td><td align="right" class='awrnc'>3.11</td><td align="right" class='awrnc'>21.34</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>17,945</td><td align="right" class='awrc'>2.98</td><td align="right" class='awrc'>20.44</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>17,307</td><td align="right" class='awrnc'>2.87</td><td align="right" class='awrnc'>19.71</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>17,224</td><td align="right" class='awrc'>2.86</td><td align="right" class='awrc'>19.62</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>16,582</td><td align="right" class='awrnc'>2.75</td><td align="right" class='awrnc'>18.89</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12083"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> Summarized for all instances in the report </li>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="Library Cache Activity. . Summarized for all instances in the report. &quot;Pct Misses&quot; should be very low "><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>277</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>271</td><td align="right" class='awrc'>271</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>DBLINK</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>OBJECT ID</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>QUEUE</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>1,225</td><td align="right" class='awrc'>3.92</td><td align="right" class='awrc'>1,468,973</td><td align="right" class='awrc'>-0.03</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>71.79</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>85.71</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>85.71</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>378</td><td align="right" class='awrnc'>4.76</td><td align="right" class='awrnc'>6,985</td><td align="right" class='awrnc'>0.76</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,811</td><td align="right" class='awrnc'>6,310</td><td align="right" class='awrnc'>6,310</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="633"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12074">PGA Aggregate Target Statistics</a></li>
<li class="awr"><a class="awr" href="#12075">Process Memory Summary</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12074"></a>
<h3 class="awr">PGA Aggregate Target Statistics</h3>
<ul>
<li class="awr"> all stats are reported in MegaBytes</li>
</ul>
<table border="0" class="tdiff" summary="PGA Aggregate Target Statistics. . all stats are reported in MegaBytes"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="PGAAggrTarget">PGA Aggr Target</th>
<th class="awrbg" colspan=" 2" id="AutoPGATarget">Auto PGA Target</th>
<th class="awrbg" colspan=" 2" id="PGAMemAlloc">PGA Mem Alloc</th>
<th class="awrbg" colspan=" 2" id="AutoWorkareas">Auto Workareas</th>
<th class="awrbg" colspan=" 2" id="ManualWorkarea">Manual Workarea</th>
<th class="awrbg" colspan=" 2" id="GlobalMemBound">Global Mem Bound</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="PGAAggrTarget Begin" class='awrclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrclb'>1,880.29</td><td align="right" headers="AutoPGATarget End" class='awrc'>1,971.99</td><td align="right" headers="PGAMemAlloc Begin" class='awrclb'>1,341.44</td><td align="right" headers="PGAMemAlloc End" class='awrc'>1,223.43</td><td align="right" headers="AutoWorkareas Begin" class='awrclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrcrb'>321.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="PGAAggrTarget Begin" class='awrnclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrnc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrnclb'>2,128.14</td><td align="right" headers="AutoPGATarget End" class='awrnc'>2,194.79</td><td align="right" headers="PGAMemAlloc Begin" class='awrnclb'>1,083.90</td><td align="right" headers="PGAMemAlloc End" class='awrnc'>974.74</td><td align="right" headers="AutoWorkareas Begin" class='awrnclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrnc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrnclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrnc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrnclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrncrb'>321.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12075"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap I#: Instance number  </li>
<li class="awr"> Max Alloc is Maximum PGA allocation size at snapshot time </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by instance, Begin/End snapshot, Alloc (MB) </li>
</ul>
<table border="0" class="tdiff" summary="Process Memory Summary. . B: Begin Snap E: End Snap I#: Instance number . Max Alloc is Maximum PGA allocation size at snapshot time. Hist Max Alloc is the Historical Max Allocation for still-connected processes. ordered by instance, Begin/End snapshot, Alloc (MB) "><tr><th class="awrbg" scope="col">I#</th><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>158.25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.52</td><td align="right" class='awrc'>6.89</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>645.42</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4.96</td><td align="right" class='awrnc'>7.17</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>130</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>18.09</td><td align="right" class='awrc'>17.09</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>112</td><td align="right" class='awrc'>111</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>7.73</td><td align="right" class='awrnc'>6.05</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>63</td><td align="right" class='awrnc'>54</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>829.49</td><td align="right" class='awrc'>23.14</td><td align="right" class='awrc'>8.77</td><td align="right" class='awrc'>14.69</td><td align="right" class='awrc'>75</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>350</td><td align="right" class='awrc'>340</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>146.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.30</td><td align="right" class='awrnc'>7.62</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>34</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>554.48</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.09</td><td align="right" class='awrc'>7.73</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>8.23</td><td align="right" class='awrnc'>7.34</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>91</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>2.57</td><td align="right" class='awrc'>1.89</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>30</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>711.47</td><td align="right" class='awrnc'>9.23</td><td align="right" class='awrnc'>9.54</td><td align="right" class='awrnc'>15.88</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>276</td><td align="right" class='awrnc'>264</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>154.19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.85</td><td align="right" class='awrc'>7.22</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>40</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>650.99</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.01</td><td align="right" class='awrnc'>7.42</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>130</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>17.07</td><td align="right" class='awrc'>16.10</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>112</td><td align="right" class='awrc'>111</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>5.69</td><td align="right" class='awrnc'>4.42</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>52</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>827.94</td><td align="right" class='awrc'>20.52</td><td align="right" class='awrc'>9.11</td><td align="right" class='awrc'>15.20</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>344</td><td align="right" class='awrc'>333</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>143.06</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.21</td><td align="right" class='awrnc'>7.61</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>34</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>565.74</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.14</td><td align="right" class='awrc'>7.96</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>110</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>8.51</td><td align="right" class='awrnc'>7.65</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.36</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>92</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>1.48</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>28</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>718.78</td><td align="right" class='awrnc'>8.72</td><td align="right" class='awrnc'>9.48</td><td align="right" class='awrnc'>16.05</td><td align="right" class='awrnc'>71</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>278</td><td align="right" class='awrnc'>264</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="638"></a>
<h2 class="awr">
Supplemental Information
</h2>
<ul>
<li class="awr"><a class="awr" href="#12080">init.ora Parameters</a></li>
<li class="awr"><a class="awr" href="#12084">init.ora Multi-valued Parameters</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12080"></a>
<h3 class="awr">init.ora Parameters</h3>
<ul>
<li class="awr"> '*' indicates same value across all instances</li>
</ul>
<table border="0" class="tdiff" summary="This table displays values for init.ora parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>*</td><td class='awrc'>TRUE</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>*</td><td class='awrc'>DB</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>*</td><td class='awrnc'>TRUE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>*</td><td class='awrc'>19.0.0</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>*</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>*</td><td class='awrc'>8192</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>+DATA</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>*</td><td class='awrc'>example.com</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>*</td><td class='awrnc'>p30db</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>*</td><td class='awrc'>+FRA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>*</td><td class='awrnc'>274877906944</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>*</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>*</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>1</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">instance_number</div></td><td class='awrnc'>2</td><td class='awrnc'>2</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>listener_networks</td><td class='awrc'>*</td><td class='awrc'></td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>local_listener</td><td class='awrnc'>1</td><td class='awrnc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">local_listener</div></td><td class='awrc'>2</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>*</td><td class='awrnc'>AMERICAN</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>*</td><td class='awrc'>AMERICA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>*</td><td class='awrnc'>300</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>*</td><td class='awrc'>3371171840</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>*</td><td class='awrnc'>640</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>*</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>*</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>*</td><td class='awrc'>10133438464</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">thread</div></td><td class='awrc'>2</td><td class='awrc'>2</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>undo_tablespace</td><td class='awrnc'>1</td><td class='awrnc'>UNDOTBS1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">undo_tablespace</div></td><td class='awrc'>2</td><td class='awrc'>UNDOTBS2</td><td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12084"></a>
<h3 class="awr">init.ora Multi-valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more one value </li>
<li class="awr"> '*' indicates same value across all instances </li>
<li class="awr"> '(NULL)' indicates that the  parameter value was not set </li>
<li class="awr"> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="init.ora Multi-valued Parameters. . This section only displays parameters that have more one value. '*' indicates same value across all instances. '(NULL)' indicates that the parameter value was not set. A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td class='awrc'>control_files</td><td class='awrc'>*</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'></td></tr>
<tr><td class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>*</td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="07wu9h58t4tgt"></a>07wu9h58t4tgt</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '22';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0hnb5g8vhm4u9"></a>0hnb5g8vhm4u9</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0rjvf5n1k4aba"></a>0rjvf5n1k4aba</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '26';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrnc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="26ka4yp1faxn2"></a>26ka4yp1faxn2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '27';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="32m2a739zbzz3"></a>32m2a739zbzz3</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '24';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrnc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m 		  using dual								     on (m.obj# = :objn and							    (:pobjn = 0 or								m.obj# = :pobjn or							   m.obj# in (select obj#								 from tabpart$								    where bo# = :pobjn and obj# = :objn 				       union all								  select obj#								     from tabcompart$								where bo# = :pobjn and o
bj# = :objn					   union all								      select tsp.obj#								 from tabsubpart$ tsp,	tabcompart$ tcp 				     where tsp.pobj# = tcp.obj# 						  and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				     and tsp.obj# = :objn)))				      when matched then 							   update								      set inserts = decode(:reset,  1,	0,  inserts) + :ins,				 updates = decode(:reset,  1,  0,  updates) + :upd,				deletes = decode(:reset,  1,  0,  deletes) + :del,			       flags =	decode(:reset,	1,  0,	flags - bitand(flags,  :flag)) + :flag,        drop_segments = decode(:reset,  1,  0,  d
rop_segments) + :dropseg,	      timestamp = :time 						   when NOT matched then							insert (obj#,  inserts,  updates,  deletes,					       timestamp,  flags,  drop_segments)				    values (:objn,  :ins,  :upd,  :del,  :time,  :flag,  :dropseg)		     where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3kqrku32p6sfn"></a>3kqrku32p6sfn</td><td class='awrc'><pre_sqltext class="awr">MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#,  SYSTIMESTAMP CHGTIME,  ROUND(MAX(S.DELTA_READ_IO_BYTES/S.DELTA_TIME),  3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S,  GV$SQL_PLAN P,  OBJ$ O,  USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQL_ID AND S.SQL_PLAN_HASH_VALUE = P.PLAN_HASH_VALUE AND S.SQL_PLAN_LINE_ID = P.ID AND P.OBJECT_NAME = O.NAME AND (:B4 IS NULL OR O.OBJ# = :B4 ) AND O.OWNER# = U.USER# AND P.OBJECT_OWNER = U.NAME AND O.TYPE# = 2 AND S.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND P.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND S.SQL_PLAN_OPERATION = 'TABLE ACCESS' AND P.OPERATION = 'TABLE ACCESS' AND S.DELTA_TIME &gt; 0 AND S.DELTA_READ_IO_BYTES &gt; 0 AND FROM_TZ(S.SAMPLE_TIME,  :B3 ) &gt; :B2 AND (:B1 = 'ON' OR (:B1 = 'HADOOP_ONLY' AND EXISTS ( SELEC
T NULL FROM SYS.EXTERNAL_TAB$ ET WHERE ET.OBJ# = O.OBJ# AND TYPE$ IN ('ORACLE_HIVE',  'ORACLE_HDFS',  'ORACLE_BIGDATA')))) GROUP BY O.OBJ#) C WHERE NOT EXISTS (SELECT NULL FROM OPTSTAT_USER_PREFS$ PR WHERE PNAME = 'SCAN_RATE' AND C.OBJ# = PR.OBJ# AND (PR.SPARE1 IS NULL OR C.SCANRATE &lt;= TO_NUMBER(PR.VALCHAR))) ) SRC ON (D.OBJ#=SRC.OBJ# AND D.PNAME = 'SCAN_RATE') WHEN MATCHED THEN UPDATE SET D.VALCHAR= TO_CHAR(SRC.SCANRATE),  D.CHGTIME=SRC.CHGTIME,  D.SPARE1=1 WHEN NOT MATCHED THEN INSERT (OBJ#,  PNAME,  VALCHAR,  CHGTIME,  SPARE1) VALUES(SRC.OBJ#,  'SCAN_RATE',  TO_CHAR(SRC.SCANRATE),  SRC.CHGTIME,  1)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5cu0x10yu88sw"></a>5cu0x10yu88sw</td><td class='awrnc'><pre_sqltext class="awr">merge into sys.wri$_index_usage iu					     using dual 								   on (iu.obj# = :objn) 						       when matched then							     update									  set iu.total_access_count = iu.total_access_count + :ns,			    iu.total_rows_returned = iu.total_rows_returned + :rr,			  iu.total_exec_count = iu.total_exec_count + :ne,				iu.bucket_0_access_count = iu.bucket_0_access_count + :nsh0,		      iu.bucket_1_access_count = iu.bucket_1_access_count + :nsh1,		    iu.bucket_2_10_access_count = iu.bucket_2_10_access_count + :nsh2_10,	  iu.buc
ket_2_10_rows_returned = iu.bucket_2_10_rows_returned + 						  :nrh2_10,				     iu.bucket_11_100_access_count = iu.bucket_11_100_access_count +						     :nsh11_100,				iu.bucket_11_100_rows_returned = iu.bucket_11_100_rows_returned +						:nrh11_100,				   iu.bucket_101_1000_access_count = iu.bucket_101_1000_access_count +						   :nsh101_1000,			      iu.bucket_101_1000_rows_returned = iu.bucket_101_1000_rows_returned +					      :nrh101_1000,				 iu.bucket_1000_plus_access_count = iu.bucket_1000_plus_access_count +						 :nsh1000plus,				    iu.bucket_1000_plus_rows_returned = iu.bucket_1000_plus_rows_returned
				    + :nrh1000plus,			       last_used = SYSDATE						       when NOT matched then							     insert (iu.obj#,  iu.total_access_count,						    iu.total_rows_returned,							  iu.total_exec_count,								iu.bucket_0_access_count,						      iu.bucket_1_access_count, 						    iu.bucket_2_10_access_count,						  iu.bucket_2_10_rows_returned, 						iu.bucket_11_100_access_count,						      iu.bucket_11_100_rows_returned,						    iu.bucket_101_1000_access_count,
		  iu.bucket_101_1000_rows_returned,						iu.bucket_1000_plus_access_count,					      iu.bucket_1000_plus_rows_returned,					    iu.last_used)							 values (:objn,  :ns,  :rr,								 :ne,  :nsh0,  :nsh1,  :nsh2_10,  :nrh2_10,  :nsh11_100,  :nrh11_100,		       :nsh101_1000,  :nrh101_1000,  :nsh1000plus,  :nrh1000plus,			SYSDATE)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5mrhuphq8yfw1"></a>5mrhuphq8yfw1</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5pj6mtazkhmdd"></a>5pj6mtazkhmdd</td><td class='awrnc'><pre_sqltext class="awr">BEGIN /* KSXM:FLUSH DML_MON */	 dbms_stats_internal.gather_scan_rate_by_mmon;	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5q1jyzmr30cf9"></a>5q1jyzmr30cf9</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5wf99mx0r39xn"></a>5wf99mx0r39xn</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5yrdyuwb16swu"></a>5yrdyuwb16swu</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '12';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6hgs8vfsdc56c"></a>6hgs8vfsdc56c</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '11';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6x8682kb2y8vd"></a>6x8682kb2y8vd</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '20';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="7m9rphfj2sxqy"></a>7m9rphfj2sxqy</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '34';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="91g7mg52grvpz"></a>91g7mg52grvpz</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '31';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="93dyj9jyyg3mj"></a>93dyj9jyyg3mj</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '10';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="amnkmrsjh10nv"></a>amnkmrsjh10nv</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '28';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="b7tjac76r5nmd"></a>b7tjac76r5nmd</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '4';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt P
LS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_
schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DB
MS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEM
A = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-----------------------------------------------------------------------------------------------------------
-----------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
:= TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

   	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ran
dom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed.
 Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrnc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bz8m3my689x30"></a>bz8m3my689x30</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '23';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="cjr4y9wb6w69d"></a>cjr4y9wb6w69d</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '14';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="d3r94djtpj7r9"></a>d3r94djtpj7r9</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '19';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrnc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		       equality_preds	 = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds    + decode(bitand(:flag, 2), 0, 0, 1),    nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),	 range_preds	   = range_preds       + decode(bitand(:flag, 8), 0, 0, 1),    like_preds	 = like_preds	     + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	= null_preds	    + decode(bitand(:flag, 32), 0, 0, 1),    flags	       = flags + :flag - bitand(flags, :flag),	   timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)    values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrnc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="g679149chxm60"></a>g679149chxm60</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '6';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gdjc35y9zsuzm"></a>gdjc35y9zsuzm</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '40';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="gx190gu1265d2"></a>gx190gu1265d2</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '18';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="43"></a>
<h2 class="awr">
Active Session History(ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9981">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9980">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9984">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9983">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9982">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9979">Top Events</a></li>
<li class="awr"><a class="awr" href="#9985">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9978">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9977">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9981"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1936</td><td align="right" class='awrc'>76.68</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>70.51</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>70.51</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">1936</div></td><td align="right" class='awrnc'><div class="hidden">76.68250197941409342834520981789390340459</div></td>
<td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>3.37</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>3.37</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">1936</div></td><td align="right" class='awrc'><div class="hidden">76.68250197941409342834520981789390340459</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.26</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.70</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>369</td><td align="right" class='awrnc'>14.61</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>12.87</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>12.87</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9980"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1936</td><td align="right" class='awrc'>76.68</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>76.09</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>70.51</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>369</td><td align="right" class='awrnc'>14.61</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>14.45</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>12.87</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9984"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>10,32406</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.02</td>
<td class='awrc'>USER17</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>51/60 [ 84%]</td><td align="right" class='awrc'>10</td></tr>
<tr><td align="right" scope="row" class='awrnc'>11,22304</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.18</td>
<td class='awrnc'>USER25</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>55/60 [ 91%]</td><td align="right" class='awrnc'>8</td></tr>
<tr><td align="right" scope="row" class='awrc'>13,27134</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.10</td>
<td class='awrc'>USER12</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>53/60 [ 88%]</td><td align="right" class='awrc'>4</td></tr>
<tr><td align="right" scope="row" class='awrnc'>17,49539</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1.98</td>
<td class='awrnc'>USER22</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>50/60 [ 83%]</td><td align="right" class='awrnc'>5</td></tr>
<tr><td align="right" scope="row" class='awrc'>20,44918</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.02</td>
<td class='awrc'>USER8</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>51/60 [ 84%]</td><td align="right" class='awrc'>5</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9983"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9982"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>14.77</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>14.77</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9979"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>83.37</td><td align="right" class='awrc'>34.87</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td class='awrnc'>System I/O</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>4.16</td><td align="right" class='awrnc'>1.74</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>3.40</td><td align="right" class='awrc'>1.42</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td class='awrnc'>Cluster</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>3.37</td><td align="right" class='awrnc'>1.41</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>2.41</td><td align="right" class='awrc'>1.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9985"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>83.37</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24968196&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.04</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>4.16</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;4&quot;,&quot;1&quot;</td><td align="right" class='awrnc'>0.87</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9978"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73424</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.30</td>
<td class='awrc'>USER4.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73439</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.22</td>
<td class='awrnc'>USER9.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73464</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.10</td>
<td class='awrc'>USER12.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73481</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.22</td>
<td class='awrnc'>USER16.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73546</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.10</td>
<td class='awrc'>USER29.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9977"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>15:44:14   (46 secs)</td><td align="right" class='awrc'>217</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>187</td><td align="right" class='awrc'>7.40</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">15:44:14   (46 secs)</div></td><td align="right" class='awrnc'><div class="hidden">217</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.40</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">15:44:14   (46 secs)</div></td><td align="right" class='awrc'><div class="hidden">217</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.32</td></tr>
<tr><td align="right" class='awrnc'>15:45:00   (5.0 min)</td><td align="right" class='awrnc'>1,296</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1,094</td><td align="right" class='awrnc'>43.31</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">15:45:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">1296</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>3.33</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">15:45:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">1296</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>1.86</td></tr>
<tr><td align="right" class='awrc'>15:50:00   (4.3 min)</td><td align="right" class='awrc'>1,013</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>825</td><td align="right" class='awrc'>32.66</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">15:50:00   (4.3 min)</div></td><td align="right" class='awrnc'><div class="hidden">1013</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>2.18</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">15:50:00   (4.3 min)</div></td><td align="right" class='awrc'><div class="hidden">1013</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>48</td><td align="right" class='awrc'>1.90</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99994"></a>
<h2>ADDM Task ADDM:3393773525_157</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_157&apos;
	  ------------------------------------------

Analysis Period
---------------
AWR snapshot range from 156 to 157.
Time period starts at 10-FEB-20 03.44.14 PM
Time period ends at 10-FEB-20 03.54.19 PM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 22807 seconds.
The average number of active sessions was 37.7.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     37.47 | 99.4	  2
2  &quot;User I/O&quot; wait Class		       34.02 | 90.24	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.67 | 12.38	      5
4  Global Cache Messaging		     1.84 | 4.87	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 37.53 active sessions, 99.4% of total activity.
---------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  52.56	    ADDM:3393773525_1_157
    2	    p30db2  47.44	    ADDM:3393773525_2_157

   Recommendation 1: SQL Tuning
   Estimated benefit is 31.47 active sessions, 83.49% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 1237901 times and
      had an average elapsed time of 0.015 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 6 active sessions, 15.91% of total activity.
   -----------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 218485 times and
      had an average elapsed time of 0.015 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 34.07 active sessions, 90.24% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  52.36	    ADDM:3393773525_1_157
    2	    p30db2  47.64	    ADDM:3393773525_2_157

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.68 active sessions, 12.38% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  60		    ADDM:3393773525_1_157
    2	    p30db2  40		    ADDM:3393773525_2_157

   Recommendation 1: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER4.CF1&quot; with
      object ID 73424.
      Related Object
	 Database object with ID 73424.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 121154
      physical reads, 17424 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER9.CF1&quot; with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100220
      physical reads, 14261 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER12.CF1&quot; with
      object ID 73464.
      Related Object
	 Database object with ID 73464.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 99630
      physical reads, 14251 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER16.CF1&quot; with
      object ID 73481.
      Related Object
	 Database object with ID 73481.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114923
      physical reads, 17963 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .93 active sessions, 2.48% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER29.CF1&quot; with
      object ID 73546.
      Related Object
	 Database object with ID 73546.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 100720
      physical reads, 14234 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 34.02 active sessions, 90.24% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.84 active sessions, 4.87% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  55.26	    ADDM:3393773525_1_157
    2	    p30db2  44.74	    ADDM:3393773525_2_157

   Recommendation 1: Application Analysis
   Estimated benefit is 1.84 active sessions, 4.87% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 87% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.94 active sessions, 5.14% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    1	    p30db1  mcracpoc1.example.com  19.82	    52.48
    2	    p30db2  mcracpoc2.example.com  17.94	    47.52

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr_rac.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
NOTIFY  : 2020.02.10-15:54:39 : Compressing file: "awr_rac.html".
NOTIFY  : 2020.02.10-15:54:39 : Compressing file: "awr.html".
