semget failed: No such file or directory

semget failed: No such file or directory


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


SQL*Plus: Release 19.0.0.0.0 - Production on Sat Feb 8 09:43:54 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


SQL*Plus: Release 19.0.0.0.0 - Production on Sat Feb 8 09:43:54 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

Last Successful login time: Sat Feb 08 2020 09:43:51 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  Last Successful login time: Sat Feb 08 2020 09:43:51 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		2 p30db2

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		2 p30db2

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: text

Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: html


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using	       2 for instance number
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using	       2 for instance number


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Entering the number of days (n) will result in the most recent

(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.
Specify the number of days of snapshots to choose from


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.



Listing the last day's Completed Snapshots

Listing the last day's Completed Snapshots
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db2	     P30DB		 48  08 Feb 2020 07:54	  1
				 49  08 Feb 2020 08:04	  1
				 50  08 Feb 2020 08:13	  1
				 51  08 Feb 2020 08:23	  1
				 52  08 Feb 2020 08:25	  1
				 53  08 Feb 2020 08:35	  1
				 54  08 Feb 2020 08:38	  1
				 55  08 Feb 2020 08:48	  1
				 56  08 Feb 2020 08:50	  1
				 57  08 Feb 2020 09:00	  1
				 58  08 Feb 2020 09:03	  1
				 59  08 Feb 2020 09:13	  1
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db2	     P30DB		 48  08 Feb 2020 07:54	  1
				 49  08 Feb 2020 08:04	  1
				 50  08 Feb 2020 08:13	  1
				 51  08 Feb 2020 08:23	  1
				 52  08 Feb 2020 08:25	  1
				 53  08 Feb 2020 08:35	  1
				 54  08 Feb 2020 08:38	  1
				 55  08 Feb 2020 08:48	  1
				 56  08 Feb 2020 08:50	  1
				 57  08 Feb 2020 09:00	  1
				 58  08 Feb 2020 09:03	  1
				 59  08 Feb 2020 09:13	  1
				 60  08 Feb 2020 09:17	  1
				 61  08 Feb 2020 09:27	  1
				 62  08 Feb 2020 09:33	  1
				 63  08 Feb 2020 09:43	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 62

End   Snapshot Id specified: 63

				 60  08 Feb 2020 09:17	  1
				 61  08 Feb 2020 09:27	  1
				 62  08 Feb 2020 09:33	  1
				 63  08 Feb 2020 09:43	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 62

End   Snapshot Id specified: 63




Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_2_62_63.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_2_62_63.html.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.txt

Using the report name awr.html

WORKLOAD REPOSITORY report for

DB Name 	DB Id	 Unique Name DB Role	      Edition Release	 RAC CDB
------------ ----------- ----------- ---------------- ------- ---------- --- ---
P30DB	      3393773525 p30db	     PRIMARY	      EE      19.0.0.0.0 YES NO

Instance     Inst Num Startup Time
------------ -------- ---------------
p30db2		    2 08-Feb-20 07:52

Host Name	 Platform			  CPUs Cores Sockets Memory(GB)
---------------- -------------------------------- ---- ----- ------- ----------
mcracpoc2.exampl Linux x86 64-bit		     8	   4	   1	  31.40

	      Snap Id	   Snap Time	  Sessions Curs/Sess Instances
	    --------- ------------------- -------- --------- ---------
Begin Snap:	   62 08-Feb-20 09:33:49	91	 1.2	     2
  End Snap:	   63 08-Feb-20 09:43:51	89	 1.1	     2
   Elapsed:		  10.04 (mins)
   DB Time:		  19.03 (mins)

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name
---------------------------------------- ------- ------ ------------------------
Top SQL Statements			    1.90 1.E+02 ADDM:3393773525_2_63
Top Segments by "User I/O" and "Cluster"    1.90  90.21 ADDM:3393773525_2_63
Undersized SGA				    1.90  80.03 ADDM:3393773525_2_63
Global Cache Messaging			    1.90  17.93 ADDM:3393773525_2_63
Global Cache Congestion 		    1.90   2.19 ADDM:3393773525_2_63
Load Profile			Per Second   Per Transaction  Per Exec	Per Call
~~~~~~~~~~~~~~~ 	   ---------------   --------------- --------- ---------
	     DB Time(s):	       1.9		 0.2	  0.02	    6.60
	      DB CPU(s):	       0.4		 0.0	  0.00	    1.43
      Background CPU(s):	       0.2		 0.0	  0.00	    0.00
      Redo size (bytes):	 664,865.1	    53,223.8
  Logical read (blocks):	   5,626.9	       450.4
	  Block changes:	   1,648.7	       132.0
 Physical read (blocks):	   3,662.4	       293.2
Physical write (blocks):	     588.9		47.1
       Read IO requests:	   3,662.3	       293.2
      Write IO requests:	     503.2		40.3
	   Read IO (MB):	      28.6		 2.3
	  Write IO (MB):	       4.6		 0.4
	   IM scan rows:	       0.0		 0.0
Session Logical Read IM:	       0.0		 0.0
 RAC GC blocks received:	     110.3		 8.8
   RAC GC blocks served:	       2.8		 0.2
	     User calls:	       0.3		 0.0
	   Parses (SQL):	       2.2		 0.2
      Hard parses (SQL):	       0.1		 0.0
     SQL Work Area (MB):	       0.1		 0.0
		 Logons:	       0.0		 0.0
	    User logons:	       0.0		 0.0
	 Executes (SQL):	      86.5		 6.9
	      Rollbacks:	       0.0		 0.0
	   Transactions:	      12.5

Instance Efficiency Percentages (Target 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	    Buffer Nowait %:  100.00	   Redo NoWait %:  100.00
	    Buffer  Hit   %:   34.91	In-memory Sort %:  100.00
	    Library Hit   %:   99.85	    Soft Parse %:   97.70
	 Execute to Parse %:   97.50	     Latch Hit %:   99.99
Parse CPU to Parse Elapsd %:   75.00	 % Non-Parse CPU:   99.98
	  Flash Cache Hit %:	0.00

Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					   Total Wait	    Avg   % DB Wait
Event				     Waits Time (sec)	   Wait   time Class
------------------------------ ----------- ---------- --------- ------ --------
db file sequential read 	   394,796	565.6	 1.43ms   49.5 User I/O
db file parallel read		    39,790	259.9	 6.53ms   22.8 User I/O
DB CPU						246.9		  21.6
gc current grant 2-way		   249,510	 99.1  396.98us    8.7 Cluster
gc cr multi block grant 	    28,550	 33.4	 1.17ms    2.9 Cluster
gc cr multi block mixed 	    11,208	 29.9	 2.67ms    2.6 Cluster
gc cr grant 2-way		    45,426	 19.6  431.65us    1.7 Cluster
gc current grant busy		    28,112	 14.6  518.17us    1.3 Cluster
gc current block busy		    13,463	  5.9  439.95us     .5 Cluster
gcs drm freeze in enter server		 8	  2.7  337.10ms     .2 Other

Wait Classes by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
							  Avg		  Avg
					Total Wait	 Wait	% DB   Active
Wait Class		    Waits	Time (sec)	 Time	time Sessions
---------------- ---------------- ---------------- ---------- ------ --------
User I/O		  463,913	       828     1.78ms	72.5	  1.4
DB CPU					       247		21.6	  0.4
Cluster 		  380,221	       206   542.07us	18.0	  0.3
System I/O		   49,669		91     1.83ms	 7.9	  0.2
Other			   32,218		 8   245.13us	  .7	  0.0
Concurrency		      892		 0   128.14us	  .0	  0.0
Configuration			6		 0    11.94ms	  .0	  0.0
Application		      128		 0   232.27us	  .0	  0.0
Network 		      591		 0    50.22us	  .0	  0.0

Host CPU
~~~~~~~~		  Load Average
 CPUs Cores Sockets	Begin	    End     %User   %System	 %WIO	  %Idle
----- ----- ------- --------- --------- --------- --------- --------- ---------
    8	  4	  1	 1.51	   0.97       4.5	6.6	 10.1	   87.0

Instance CPU
~~~~~~~~~~~~
	      % of total CPU for Instance:	 8.0
	      % of busy  CPU for Instance:	61.3
  %DB time waiting for CPU - Resource Mgr:	 0.0

IO Profile		    Read+Write/Second	  Read/Second	 Write/Second
~~~~~~~~~~		    ----------------- --------------- ---------------
	    Total Requests:	      4,202.0	      3,666.6		535.4
	 Database Requests:	      4,165.5	      3,662.3		503.2
	Optimized Requests:		  0.0		  0.0		  0.0
	     Redo Requests:		 31.3		  0.0		 31.3
		Total (MB):		 34.6		 28.7		  5.9
	     Database (MB):		 33.2		 28.6		  4.6
      Optimized Total (MB):		  0.0		  0.0		  0.0
		 Redo (MB):		  1.3		  0.0		  1.3
	 Database (blocks):	      4,251.3	      3,662.4		588.9
 Via Buffer Cache (blocks):	      4,251.2	      3,662.4		588.8
	   Direct (blocks):		  0.1		  0.0		  0.1

Memory Statistics
~~~~~~~~~~~~~~~~~			Begin	       End
				 ------------ ------------
		  Host Mem (MB):     32,156.0	  32,156.0
		   SGA use (MB):      9,664.0	   9,664.0
		   PGA use (MB):      1,292.2	   1,280.4
    % Host Mem used for SGA+PGA:	34.07	     34.04

Cache Sizes			  Begin        End
~~~~~~~~~~~		     ---------- ----------
	       Buffer Cache:	 7,872M     7,872M  Std Block Size:	    8K
	   Shared Pool Size:	 1,186M     1,187M	Log Buffer:    20,612K
	     In-Memory Area:	     0M 	0M

 Shared Pool Statistics        Begin	End
~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ------  ------
	     Memory Usage %:   90.38   90.07
    % SQL with executions>1:   85.19   86.25
  % Memory for SQL w/exec>1:   88.11   90.68


Time Model Statistics			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> DB Time represents total time in user calls
-> DB CPU represents CPU time of foreground processes
-> Total CPU Time represents foreground and background processes
-> Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic
-> Ordered by % of DB time in descending order, followed by Statistic Name

								% of  % of Total
Statistic Name					     Time (s) DB Time	CPU Time
------------------------------------------ ------------------ ------- ----------
sql execute elapsed time			      1,142.0	100.0
DB CPU							246.9	 21.6	    68.7
PL/SQL execution elapsed time				  1.6	   .1
parse time elapsed					  0.0	   .0
connection management call elapsed time 		  0.0	   .0
repeated bind elapsed time				  0.0	   .0
DB time 					      1,142.1
background elapsed time 				179.3
background cpu time					112.4		    31.3
total CPU time						359.3
			  ------------------------------------------------------

Operating System Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> *TIME statistic values are diffed.
   All others display actual values.  End Value is displayed if different
-> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name

Statistic				   Value	End Value
------------------------- ---------------------- ----------------
FREE_MEMORY_BYTES		   6,253,129,728    6,269,161,472
INACTIVE_MEMORY_BYTES		   1,418,338,304    1,419,300,864
BUSY_TIME				  58,648
IDLE_TIME				 391,679
IOWAIT_TIME				  45,702
SYS_TIME				  29,799
USER_TIME				  20,265
LOAD					       2		1
RSRC_MGR_CPU_WAIT_TIME			       0
PHYSICAL_MEMORY_BYTES		  33,717,977,088
NUM_CPUS				       8
NUM_CPU_CORES				       4
NUM_CPU_SOCKETS 			       1
GLOBAL_RECEIVE_SIZE_MAX 	       4,194,304
GLOBAL_SEND_SIZE_MAX		       1,048,576
TCP_RECEIVE_SIZE_DEFAULT		  87,380
TCP_RECEIVE_SIZE_MAX		       6,291,456
TCP_RECEIVE_SIZE_MIN			   4,096
TCP_SEND_SIZE_DEFAULT			  16,384
TCP_SEND_SIZE_MAX		       4,194,304
TCP_SEND_SIZE_MIN			   4,096
			  ------------------------------------------------------

Operating System Statistics - Detail	   DB/Inst: P30DB/p30db2  Snaps: 62-63

Snap Time	    Load    %busy    %user     %sys    %idle  %iowait
--------------- -------- -------- -------- -------- -------- --------
08-Feb 09:33:49      1.5      N/A      N/A	N/A	 N/A	  N/A
08-Feb 09:43:51      1.0     13.0      4.5	6.6	87.0	 10.1
			  ------------------------------------------------------

Foreground Wait Class			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> ordered by wait time desc, waits desc
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
-> Captured Time accounts for	     112.1%  of Total DB time	    1,142.08 (s)
-> Total FG Wait Time:		   1,033.21 (s)  DB CPU time:	      246.93 (s)

				     %Time	Total Wait
Wait Class		       Waits -outs	  Time (s)   Avg wait  %DB time
-------------------- --------------- ----- --------------- ---------- ---------
User I/O		     434,588	 0	       825     1.90ms	   72.3
DB CPU						       247		   21.6
Cluster 		     378,740	 0	       205   540.82us	   17.9
Other				 465	27		 3     6.05ms	    0.2
Configuration			   4   100		 0    17.68ms	    0.0
Application			 120	 0		 0    57.74us	    0.0
System I/O			   8	 0		 0   259.63us	    0.0
Network 			 125	 0		 0     5.38us	    0.0
Concurrency			   1	 0		 0    96.00us	    0.0
			  ------------------------------------------------------


Foreground Wait Events			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Only events with Total Wait Time (s) >= .001 are shown
-> ordered by wait time desc, waits desc (idle events last)
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % DB
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
db file sequential read        394,796		  566	 1.43ms     52.5   49.5
db file parallel read		39,790		  260	 6.53ms      5.3   22.8
gc current grant 2-way	       249,510		   99  396.98us     33.2    8.7
gc cr multi block grant 	28,550		   33	 1.17ms      3.8    2.9
gc cr multi block mixed 	11,208		   30	 2.67ms      1.5    2.6
gc cr grant 2-way		45,426		   20  431.65us      6.0    1.7
gc current grant busy		28,112		   15  518.17us      3.7    1.3
gc current block busy		13,463		    6  439.95us      1.8     .5
gcs drm freeze in enter se	     8		    3  337.10ms      0.0     .2
gc current block 2-way		 1,828		    1  480.44us      0.2     .1
gc current grant congested	   210		    1	 3.40ms      0.0     .1
gc cr block 2-way		   369		    0	 1.32ms      0.0     .0
gc cr grant congested		    57		    0	 5.57ms      0.0     .0
undo segment extension		     4	 100	    0	17.68ms      0.0     .0
reliable message		     9		    0	 3.49ms      0.0     .0
enq: CR - block range reus	    24		    0	 1.26ms      0.0     .0
Disk file Mirror Read		     2		    0	12.57ms      0.0     .0
gc current block congested	     4		    0	 5.50ms      0.0     .0
KJC: Wait for msg sends to	   146		    0  117.47us      0.0     .0
enq: US - contention		    15		    0  648.47us      0.0     .0
IPC send completion sync	    12		    0  628.75us      0.0     .0
SQL*Net break/reset to cli	   120		    0	57.74us      0.0     .0
gc cr block congested		     2		    0	 3.26ms      0.0     .0
PX Deq: Slave Session Stat	     7		    0  699.29us      0.0     .0
latch: gc element		     6		    0  779.50us      0.0     .0
PX Deq: reap credit		   126	 100	    0	30.59us      0.0     .0
enq: PS - contention		     4		    0  895.75us      0.0     .0
latch: gcs resource hash	    12		    0  250.92us      0.0     .0
control file sequential re	     8		    0  259.63us      0.0     .0
gc cr grant busy		     1		    0	 1.27ms      0.0     .0
watchdog main loop		   800		2,400 3000.00ms      0.1
SQL*Net message from clien	   124		  600 4839.06ms      0.0
PX Deq: Execution Msg		    21		    0	20.74ms      0.0
PX Deq Credit: send blkd	    38		    0	 1.07ms      0.0
PX Deq: Msg Fragment		    24		    0  655.00us      0.0
			  ------------------------------------------------------


Background Wait Events			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
log file parallel write 	 7,711	   0	   57	 7.40ms      1.0   31.8
db file parallel write		26,052	   0	   31	 1.19ms      3.5   17.3
control file parallel writ	   280	   0	    2	 7.83ms      0.0    1.2
Disk file Mirror Read		   847	   0	    1	 1.73ms      0.1     .8
IMR slave acknowledgement	 1,806	   0	    1  641.72us      0.2     .6
ges lms sync during dynami	    37	  68	    1	27.41ms      0.0     .6
Sync ASM rebalance		    54	   0	    1	15.33ms      0.0     .5
ASM IO for non-blocking po	28,125	   0	    1	21.92us      3.7     .3
control file sequential re	 2,619	   0	    0  179.58us      0.3     .3
gc current block busy		   249	   0	    0	 1.72ms      0.0     .2
gcs log flush sync		   152	   0	    0	 2.32ms      0.0     .2
db file sequential read 	   342	   0	    0  947.47us      0.0     .2
gc current block 2-way		   709	   0	    0  436.72us      0.1     .2
PX Deq: reap credit		10,584	 100	    0	25.25us      1.4     .1
KJC: Wait for msg sends to	 2,253	  99	    0	88.30us      0.3     .1
AQ: RAC AQ Network		 6,014	 100	    0	25.80us      0.8     .1
CGS wait for IPC msg		 6,507	 100	    0	23.53us      0.9     .1
ASM file metadata operatio	   857	   0	    0  176.12us      0.1     .1
DFS lock handle 		   294	 100	    0  458.11us      0.0     .1
gc cr block busy		    14	   0	    0	 9.35ms      0.0     .1
latch free			   578	   0	    0  216.47us      0.1     .1
reliable message		    37	   0	    0	 2.86ms      0.0     .1
DLM cross inst call comple	   159	   0	    0  572.29us      0.0     .1
db file async I/O submit	13,076	   0	    0	 6.89us      1.7     .1
gc buffer busy release		    12	   0	    0	 7.49ms      0.0     .1
gc cr block 2-way		   150	   0	    0  560.95us      0.0     .0
gc current grant 2-way		   155	   0	    0  532.86us      0.0     .0
gc current grant busy		   100	   0	    0  718.93us      0.0     .0
enq: CR - block range reus	   102	   0	    0  616.98us      0.0     .0
oracle thread bootstrap 	     3	   0	    0	20.20ms      0.0     .0
direct path write temp		    12	   0	    0	 4.38ms      0.0     .0
KSV master wait 		   457	  99	    0  106.20us      0.1     .0
cursor: pin S wait on X 	     3	   0	    0	13.08ms      0.0     .0
IPC group service call		   464	   0	    0	62.50us      0.1     .0
library cache lock		    42	   0	    0  641.88us      0.0     .0
row cache lock			    21	 100	    0	 1.18ms      0.0     .0
enq: RO - fast object reus	     8	   0	    0	 2.85ms      0.0     .0
CSS operation: data query	    18	   0	    0	 1.20ms      0.0     .0
ksxr poll remote instances	   847	 100	    0	24.53us      0.1     .0
library cache pin		    33	   0	    0  562.18us      0.0     .0
CSS operation: data update	    21	   0	    0  801.86us      0.0     .0
PX Deq: Join ACK		     7	   0	    0	 2.37ms      0.0     .0
gc cr disk read 		    38	   0	    0  423.42us      0.0     .0
IPC send completion sync	   607	  99	    0	25.77us      0.1     .0
enq: CF - contention		    24	 100	    0  623.29us      0.0     .0
gc cr grant 2-way		    31	   0	    0  439.77us      0.0     .0
enq: WF - contention		    19	   0	    0  664.84us      0.0     .0
ges inquiry response		    15	   0	    0  549.87us      0.0     .0
enq: PS - contention		    10	  40	    0  750.90us      0.0     .0
enq: CO - master slave det	    10	 100	    0  711.40us      0.0     .0
latch: cache buffers lru c	    35	   0	    0  200.83us      0.0     .0
gc cr multi block mixed 	     7	   0	    0  931.00us      0.0     .0
direct path write		     1	   0	    0	 4.74ms      0.0     .0
libcache interrupt action	   787	   0	    0	 5.83us      0.1     .0
latch: gcs resource hash	    25	   0	    0  182.08us      0.0     .0
gc current multi block req	     8	   0	    0  563.88us      0.0     .0
os thread creation		     3	   0	    0	 1.45ms      0.0     .0
gc buffer busy acquire		     1	   0	    0	 3.78ms      0.0     .0
latch: gc element		     9	   0	    0  347.44us      0.0     .0
enq: DW - contention		     3	 100	    0	  .99ms      0.0     .0

Background Wait Events			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
Disk file operations I/O	    34	   0	    0	73.50us      0.0     .0
gc index operation		     1	   0	    0	 2.34ms      0.0     .0
gc cr block congested		     1	   0	    0	 1.81ms      0.0     .0
PGA memory operation		    85	   0	    0	21.13us      0.0     .0
db file scattered read		     7	   0	    0  249.29us      0.0     .0
enq: TA - contention		     2	   0	    0  858.50us      0.0     .0
enq: FB - contention		     4	   0	    0  420.00us      0.0     .0
enq: SM -  contention		     1	   0	    0	 1.11ms      0.0     .0
enq: US - contention		     2	   0	    0  547.50us      0.0     .0
rdbms ipc message		28,475	  40   13,724  481.98ms      3.8
PX Idle Wait			     7	   0   10,241 1462.97 s      0.0
Space Manager: slave idle	 2,521	   0	9,604 3809.80ms      0.3
class slave wait		 7,374	  81	3,908  529.96ms      1.0
wait for unread message on	   924	 100	1,808 1956.21ms      0.1
ges remote message		17,549	   0	1,204	68.61ms      2.3
GCR sleep			 4,012	   0	1,204  300.07ms      0.5
pmon timer			   401	 100	1,203 2999.93ms      0.1
DIAG idle wait			 7,538	  83	1,203  159.54ms      1.0
LGWR worker group idle		     2	   0	1,200  600.00 s      0.0
gcs yield cpu			41,050	  98	1,198	29.19ms      5.5
gcs remote message	       206,803	   0	1,172	 5.67ms     27.5
Data Guard: Gap Manager 	    11	   0	  660	60.00 s      0.0
smon timer			     6	  17	  621  103.54 s      0.0
ASM cluster membership cha	   345	  81	  605 1753.95ms      0.0
lreg timer			   201	 100	  604 3002.50ms      0.0
ASM background timer		   816	   0	  603  739.56ms      0.1
OFS idle			   201	 100	  603 3000.01ms      0.0
REPL Capture/Apply: RAC AQ	    10	 100	  602	60.23 s      0.0
heartbeat redo informer 	   602	   0	  602 1000.13ms      0.1
SCM slave idle			 6,045	   0	  602	99.58ms      0.8
PING				   517	  21	  600 1161.25ms      0.1
dispatcher timer		    10	 100	  600	60.01 s      0.0
AQPC idle			    20	 100	  600	30.00 s      0.0
Data Guard: Timer		     1	   0	  600  600.00 s      0.0
pman timer			   200	 100	  600 2999.70ms      0.0
Streams AQ: qmn coordinato	    42	   0	  588	14.00 s      0.0
Streams AQ: qmn slave idle	    21	   0	  588	28.00 s      0.0
PX Deq Credit: send blkd	    24	   0	    0  907.63us      0.0
RMA: IPC0 completion sync	   658	   0	    0	19.21us      0.1
PX Deq: Execute Reply		     7	   0	    0	 1.75ms      0.0
PX Deq: Parse Reply		     7	   0	    0	 1.01ms      0.0
			  ------------------------------------------------------


Wait Event Histogram			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    6013	 2.6  77.7  16.9   1.9	  .8	.1    .0
ASM IO for non-blocking p  28.2K   2.8	72.1  13.5   4.9   4.5	 1.6	.4    .1
ASM background starting        1 100.0
ASM file metadata operati    857  25.0	 1.9  58.7   7.0   3.0	 1.8   1.9    .8
AWR Flush		       2  50.0	      50.0
CGS wait for IPC msg	    6506	20.8  62.6  14.5   1.6	  .4	.1    .1
CSS operation: data query     18				      16.7  83.3
CSS operation: data updat     21				       4.8  95.2
DFS lock handle 	     294				 1.4  75.2  23.5
DLM cross inst call compl    159	      10.1    .6    .6	  .6  34.6  53.5
Disk file Mirror Read	     848					   100.0
Disk file operations I/O      34	 8.8  50.0  23.5   5.9	 2.9   8.8
GCR CSS group query	      18	83.3  16.7
GCR CSS group update	      19	78.9  10.5  10.5
IMR slave acknowledgement   1803	13.2  12.4   5.9  25.3	 8.7   5.7  28.7
IPC group service call	     465    .2	  .6  23.7  43.0  28.2	 3.4	.6    .2
IPC send completion sync     619	 3.2  77.5  15.0   1.1	 1.3	.6   1.1
KJC: Wait for msg sends t   2399	64.1  13.3   5.4   3.4	 2.1   5.8   6.0
KSV master wait 	     455	32.5  44.2  18.9   3.5	  .4	      .4
LGWR wait for redo copy        9  44.4	11.1	    11.1	22.2  11.1
PGA memory operation	      86   4.7	60.5  23.3   5.8   3.5	 2.3
PX Deq: Join ACK	       7				      14.3  85.7
PX Deq: Signal ACK EXT	       7	      57.1	  28.6	      14.3
PX Deq: Slave Session Sta     14	14.3  21.4		 7.1  28.6  28.6
PX Deq: reap credit	   10.7K	 9.0  72.6  15.9   1.8	  .5	.1    .0
SQL*Net break/reset to cl    120  39.2	 8.3	.8   3.3  39.2	 8.3	.8
SQL*Net message to client    126  96.0	 2.4   1.6
Sync ASM rebalance	      54   1.9	38.9	     3.7	 3.7   9.3  42.6
asynch descriptor resize       4  75.0	25.0
buffer busy waits	       1       100.0
control file parallel wri    280					   100.0
control file sequential r   2626	15.0  15.2   1.7   4.6	44.0  16.5   3.1
cursor: pin S wait on X        3					   100.0
db file async I/O submit   13.1K  94.2	 2.3   1.3   1.4    .5	  .2	.1    .0
db file parallel read	   39.8K				  .0   2.3  97.7
db file parallel write	   26.1K	  .2   2.3  10.7   6.7	11.6  13.7  54.7
db file scattered read	       7				42.9  57.1
db file sequential read   394.9K			    .0	 1.7  55.4  42.8
direct path write	       1					   100.0
direct path write temp	      12					   100.0
enq: CF - contention	      24				      16.7  83.3
enq: CO - master slave de     10				      10.0  90.0
enq: CR - block range reu    131				  .8  52.7  46.6
enq: DW - contention	       3					   100.0
enq: FB - contention	       4				      50.0  50.0
enq: HW - contention	       1					   100.0
enq: PS - contention	      14			   7.1	 7.1  21.4  64.3
enq: RO - fast object reu      8				      12.5  87.5
enq: SM -  contention	       1					   100.0
enq: TA - contention	       2				      50.0  50.0
enq: TD - KTF dump entrie      1					   100.0
enq: TK - Auto Task Seria      1					   100.0
enq: US - contention	      17				      35.3  64.7
enq: WF - contention	      19				      42.1  57.9
gc buffer busy acquire	       1					   100.0
gc buffer busy release	       8					   100.0
gc cr block 2-way	     519				 1.9  36.4  61.7
gc cr block busy	      13					   100.0
gc cr block congested	       3					   100.0
gc cr disk read 	      38				13.2  71.1  15.8

Wait Event Histogram			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
gc cr grant 2-way	   45.4K		      .1    .2	12.2  65.0  22.4
gc cr grant busy	       1					   100.0
gc cr grant congested	      57					   100.0
gc cr multi block grant    28.5K		      .0    .0	  .1   3.5  96.3
gc cr multi block mixed    11.2K			    .0	  .0	.6  99.4
gc current block 2-way	    2553		      .0    .1	 2.5  73.2  24.2
gc current block busy	   13.7K		      .1    .1	 2.4  76.4  21.0
gc current block congeste      4					   100.0
gc current grant 2-way	  249.4K		.0    .1    .2	21.6  60.1  18.0
gc current grant busy	   28.2K		.0    .0    .0	 2.6  68.2  29.1
gc current grant congeste    210					   100.0
gc current multi block re      7				      42.9  57.1
gc current split	       1				     100.0
gc index operation	       1					   100.0
gc quiesce		       1			       100.0
gcs drm freeze in enter s      8					   100.0
gcs log flush sync	     139	 8.6   5.8   4.3   3.6	 7.9  15.1  54.7
gcs remastering wait for       2	50.0  50.0
ges enter server mode	      35  85.7	 5.7	     8.6
ges inquiry response	      15				      60.0  40.0
ges ipc enter server mode     83  88.0	 8.4   2.4   1.2
ges lms sync during dynam     37			   2.7	 2.7   8.1  86.5
ges resource directory to      2 100.0
ksxr poll remote instance    850	 5.5  84.2   8.1   1.9	  .1	      .1
latch free		     581	 2.4	.7   1.5  20.8	51.6  17.7   5.2
latch: cache buffers chai      1			 100.0
latch: cache buffers lru      38	31.6	     2.6  18.4	26.3  10.5  10.5
latch: checkpoint queue l      1       100.0
latch: gc element	      15	20.0		   6.7	 6.7  26.7  40.0
latch: gcs resource hash      37	18.9  16.2  13.5  21.6	 5.4  13.5  10.8
latch: ges resource hash       3	33.3		  33.3	33.3
latch: messages 	       1       100.0
latch: object queue heade      3		    33.3	66.7
libcache interrupt action    787  91.6	 6.0   1.3    .8    .3	  .1
library cache lock	      41	       2.4		      63.4  34.1
library cache pin	      32				      50.0  50.0
log file parallel write     7698					   100.0
log file sequential read       1 100.0
oracle thread bootstrap        3					   100.0
os thread creation	       3					   100.0
reliable message	      48					   100.0
row cache lock		      21					   100.0
undo segment extension	       4	      25.0			    75.0
undo_retention publish re      2	50.0	    50.0
AQPC idle		      20					   100.0
ASM background timer	     816			    .1	14.8   1.3  83.7
ASM cluster membership ch    345					   100.0
DIAG idle wait		    7536		      .1   1.1	 2.1   3.2  93.6
Data Guard: Gap Manager       11					   100.0
Data Guard: Timer	       1					   100.0
GCR sleep		    4011					   100.0
OFS idle		     200					   100.0
PING			     517	       4.3  24.2  21.7	12.2   3.7  34.0
PX Deq Credit: send blkd      62	      33.9   4.8   8.1	 8.1  19.4  25.8
PX Deq: Execute Reply	       7	      14.3		      14.3  71.4
PX Deq: Execution Msg	      21				      23.8  76.2
PX Deq: Msg Fragment	      24   4.2	 8.3			      20.8  66.7
PX Deq: Parse Reply	       7				14.3  42.9  42.9
PX Idle Wait		       7					   100.0
REPL Capture/Apply: RAC A     10					   100.0

Wait Event Histogram			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
RMA: IPC0 completion sync    658	47.4  44.1   7.6    .6		.3
SCM slave idle		    6044				  .0	.1  99.9
SQL*Net message from clie    126			    .8	44.4   4.0  50.8
Space Manager: slave idle   2519	  .5	.1    .3   1.1	  .7	.3  97.0
Streams AQ: qmn coordinat     42			   2.4	42.9   4.8  50.0
Streams AQ: qmn slave idl     21					   100.0
class slave wait	    7372    .2	 4.6	.5   2.5   2.7	  .7	.1  88.7
dispatcher timer	      10					   100.0
gcs remote message	  206.6K	  .6   1.2   6.1   4.8	 6.3  18.8  62.2
gcs yield cpu		     41K    .0	  .3	.0    .1    .0	  .1	.1  99.3
ges remote message	   17.6K	  .4	.3    .2    .4	 3.5   2.6  92.4
heartbeat redo informer      603					   100.0
lreg timer		     201					   100.0
pman timer		     201					   100.0
pmon timer		     401					   100.0
rdbms ipc message	   28.5K    .0	 2.2	.8  19.8   3.9	 1.4	.7  71.2
smon timer		       6					   100.0
wait for unread message o    923					   100.0
watchdog main loop	     804					   100.0
			  ------------------------------------------------------


Wait Event Histogram (up to 64 us)	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    5844			   2.6	77.7  16.9   2.8
ASM IO for non-blocking p  26.3K		     2.8  72.1	13.5   4.9   6.6
ASM background starting        1		   100.0
ASM file metadata operati    793	       1.1  23.9   1.9	58.7   7.0   7.5
AWR Flush		       2		    50.0	50.0
CGS wait for IPC msg	    6365			  20.8	62.6  14.5   2.2
DLM cross inst call compl     17				10.1	.6  89.3
Disk file operations I/O      28			   8.8	50.0  23.5  17.6
GCR CSS group query	      18			  83.3	16.7
GCR CSS group update	      19			  78.9	10.5  10.5
IMR slave acknowledgement    569			  13.2	12.4   5.9  68.4
IPC group service call	     314		      .2    .6	23.7  43.0  32.5
IPC send completion sync     593			   3.2	77.5  15.0   4.2
KJC: Wait for msg sends t   1984			  64.1	13.3   5.4  17.3
KSV master wait 	     435			  32.5	44.2  18.9   4.4
LGWR wait for redo copy        6		    44.4  11.1	      11.1  33.3
PGA memory operation	      81		     4.7  60.5	23.3   5.8   5.8
PX Deq: Signal ACK EXT	       4				57.1	    42.9
PX Deq: Slave Session Sta      5			  14.3	21.4	    64.3
PX Deq: reap credit	   10.4K			   9.0	72.6  15.9   2.5
SQL*Net break/reset to cl     62		    39.2   8.3	  .8   3.3  48.3
SQL*Net message to client    126	       1.6  94.4   2.4	 1.6
Sync ASM rebalance	      24		     1.9  38.9	       3.7  55.6
asynch descriptor resize       4		    75.0  25.0
buffer busy waits	       1			 100.0
control file sequential r    835			  15.0	15.2   1.7  68.2
db file async I/O submit     13K	       2.4  91.8   2.3	 1.3   1.4    .8
db file parallel write	    3453			    .2	 2.3  10.7  86.8
gc cr grant 2-way	      58					.1  99.9
gc cr multi block grant        3					.0 100.0
gc current block 2-way	       1					.0 100.0
gc current block busy	       9					.1  99.9
gc current grant 2-way	     333				  .0	.1  99.9
gc current grant busy	       6				  .0	.0 100.0
gcs log flush sync	      26			   8.6	 5.8   4.3  81.3
gcs remastering wait for       2			  50.0	50.0
ges enter server mode	      35	      31.4  54.3   5.7	       8.6
ges ipc enter server mode     83		    88.0   8.4	 2.4   1.2
ges resource directory to      2		   100.0
ksxr poll remote instance    832			   5.5	84.2   8.1   2.1
latch free		      27			   2.4	  .7   1.5  95.4
latch: cache buffers lru      13			  31.6	       2.6  65.8
latch: checkpoint queue l      1			 100.0
latch: gc element	       3			  20.0		    80.0
latch: gcs resource hash      18			  18.9	16.2  13.5  51.4
latch: ges resource hash       1			  33.3		    66.7
latch: messages 	       1			 100.0
latch: object queue heade      1				      33.3  66.7
libcache interrupt action    784	       6.1  85.5   6.0	 1.3	.8    .4
library cache lock	       1				 2.4	    97.6
log file sequential read       1		   100.0
undo segment extension	       1				25.0	    75.0
undo_retention publish re      2			  50.0	      50.0
			  ------------------------------------------------------


Wait Event Histogram (up to 32 ms)	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	       1 100.0	  .0
ASM IO for non-blocking p     38  99.9	  .1	.0	    .0
ASM file metadata operati      6  99.2	  .1	.1    .1		.4    .1
CGS wait for IPC msg	       6  99.9	  .1	.0
CSS operation: data query     15  16.7	33.3  33.3  16.7
CSS operation: data updat     20   4.8	85.7   9.5
DFS lock handle 	      69  76.5	21.4   1.7    .3
DLM cross inst call compl     85  46.5	45.9   7.5
Disk file Mirror Read	     846	44.8  46.1   3.5   3.3	 1.4	.6    .2
IMR slave acknowledgement    515  71.3	 6.8  18.8   1.4   1.0	  .4	.2    .1
IPC group service call	       1  99.8	  .2
IPC send completion sync       7  98.9	  .8	.3
KJC: Wait for msg sends t    143  94.0	 5.3	.6    .0    .0
KSV master wait 	       1  99.6		.2			      .2
PX Deq: Join ACK	       6  14.3	28.6  14.3  14.3  28.6
PX Deq: Slave Session Sta      4  71.4	14.3  14.3
PX Deq: reap credit	       5 100.0	  .0	.0		  .0
Sync ASM rebalance	      17  57.4	 9.3			11.1  11.1  11.1
control file parallel wri    277		    17.5  76.8	 1.1   3.6   1.1
control file sequential r     82  96.9	 2.7	.3			.0
cursor: pin S wait on X        3			  33.3	      66.7
db file async I/O submit       3 100.0	  .0
db file parallel read	   38.4K   2.3	 6.3   9.8   6.1  61.7	 7.8   4.8   1.2
db file parallel write	   14.3K  45.3	18.4  20.9  11.8   2.2	  .9	.4    .0
db file sequential read     169K  57.2	12.2	.6  27.3   2.3	  .2	.2    .0
direct path write	       1			 100.0
direct path write temp	      12		    33.3  66.7
enq: CF - contention	      20  16.7	83.3
enq: CO - master slave de      9  10.0	80.0  10.0
enq: CR - block range reu     61  53.4	35.9   5.3   3.1   2.3
enq: DW - contention	       3	33.3  66.7
enq: FB - contention	       2  50.0	50.0
enq: HW - contention	       1       100.0
enq: PS - contention	       9  35.7	28.6  35.7
enq: RO - fast object reu      7  12.5	37.5  12.5  12.5  25.0
enq: SM -  contention	       1	     100.0
enq: TA - contention	       1  50.0	      50.0
enq: TD - KTF dump entrie      1       100.0
enq: TK - Auto Task Seria      1       100.0
enq: US - contention	      11  35.3	52.9  11.8
enq: WF - contention	      11  42.1	47.4  10.5
gc buffer busy acquire	       1		   100.0
gc buffer busy release	       8		    12.5  37.5	37.5  12.5
gc cr block 2-way	     320  38.3	16.6  35.6   8.9    .6
gc cr block busy	      13			  61.5	30.8   7.7
gc cr block congested	       3	      33.3  66.7
gc cr disk read 	       6  84.2	10.5   5.3
gc cr grant 2-way	   10.2K  77.6	20.1   1.7    .4    .2	  .0
gc cr grant busy	       1	     100.0
gc cr grant congested	      56	      15.8  56.1  24.6	       1.8   1.8
gc cr multi block grant    27.5K   3.7	42.0  49.7   3.9    .7	  .1	.0
gc cr multi block mixed    11.1K    .6	13.8  55.7  19.4   9.9	  .5	.0    .1
gc current block 2-way	     617  75.8	21.7   2.2    .2    .1
gc current block busy	    2866  79.0	18.8   1.7    .2    .2	  .1	.0    .0
gc current block congeste      4		    25.0  75.0
gc current grant 2-way	   44.8K  82.0	16.3   1.2    .3    .1	  .0	.0    .0
gc current grant busy	    8210  70.9	25.5   3.1    .3    .2	  .0	      .0
gc current grant congeste    210	      11.4  62.4  25.7	  .5
gc current multi block re      4  42.9	57.1
gc index operation	       1		   100.0

Wait Event Histogram (up to 32 ms)	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
gcs log flush sync	      76  45.3	 5.8   9.4  15.8  19.4	 2.9   1.4
ges inquiry response	       6  60.0	40.0
ges lms sync during dynam     24  13.5	 8.1   5.4   5.4	21.6  24.3  21.6
ksxr poll remote instance      1  99.9		.1
latch free		      30  94.8	 5.0	.2
latch: cache buffers lru       4  89.5	10.5
latch: gc element	       6  60.0	33.3   6.7
latch: gcs resource hash       4  89.2	 5.4   5.4
library cache lock	      14  65.9	24.4   4.9   2.4   2.4
library cache pin	      16  50.0	46.9   3.1
log file parallel write     7645		     2.3  75.3	19.5   2.2    .7
oracle thread bootstrap        3				     100.0
os thread creation	       3	     100.0
reliable message	      48	 6.3   2.1  85.4   6.3
row cache lock		      21	33.3  66.7
undo segment extension	       2  25.0				25.0  25.0  25.0
			  ------------------------------------------------------


Wait Event Histogram (up to 2 sec)	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   ms is milliseconds
   s is 1024 milliseconds (approximately 1 second)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			   64ms
Event			   to 2s <32ms <64ms <1/8s <1/4s <1/2s	 <1s   <2s  >=2s
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
ASM file metadata operati      1  99.9	  .1
Disk file Mirror Read	       2  99.8		.2
IMR slave acknowledgement      2  99.9		.1
KSV master wait 	       1  99.8	  .2
Sync ASM rebalance	       6  88.9	      11.1
control file parallel wri      3  98.9	  .7			  .4
db file parallel read	     470  98.8	 1.1	.1
db file parallel write	       8 100.0	  .0	.0
db file sequential read      134 100.0	  .0	.0
gc cr grant congested	       1  98.2	       1.8
gc cr multi block mixed       13  99.9		.0	    .0	  .1
gc current block busy	       2 100.0	  .0
gc current grant 2-way	       1 100.0				  .0
gc current grant busy	       1 100.0		.0
gcs drm freeze in enter s      8			 100.0
ges lms sync during dynam      8  78.4	      21.6
log file parallel write       53  99.3	  .5	.2
undo segment extension	       1  75.0	25.0
			  ------------------------------------------------------


Wait Event Histogram (up to 2 min)	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


Wait Event Histogram (up to 1 hr)	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


Service Statistics			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by DB Time

							   Physical	 Logical
Service Name		      DB Time (s)   DB CPU (s)	  Reads (K)    Reads (K)
---------------------------- ------------ ------------ ------------ ------------
p30db.example.com		    1,138	   246	      2,204	   3,357
SYS$BACKGROUND				0	     0		  0	      31
SYS$USERS				0	     0		  0	       0
p30dbXDB				0	     0		  0	       0
			  ------------------------------------------------------

Service Wait Class Stats		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Wait Class info for services in the Service Statistics section.
-> Total Waits and Time Waited displayed for the following wait
   classes:  User I/O, Concurrency, Administrative, Network
-> Time Waited (Wt Time) in seconds

Service Name
----------------------------------------------------------------
 User I/O  User I/O  Concurcy  Concurcy     Admin     Admin   Network	Network
Total Wts   Wt Time Total Wts	Wt Time Total Wts   Wt Time Total Wts	Wt Time
--------- --------- --------- --------- --------- --------- --------- ---------
p30db.example.com
   433988	824	    1	      0 	0	  0	    5	      0
SYS$BACKGROUND
    29434	  2	  881	      0 	0	  0	  464	      0
SYS$USERS
	0	  0	    0	      0 	0	  0	  120	      0
			  ------------------------------------------------------

Top 10 Channel Waits			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Top 10 Channel Waits by wait time

Channel
----------------------------------------------------------------
	       Total
		Wait
      Waits Time (s)  Avg Wait
----------- -------- ---------
kxfp control signal channel
	  4	   0  787.00us
obj broadcast channel
	  4	   0	3.27ms
RBR channel
	 40	   0	3.19ms
			  ------------------------------------------------------


Top Process Types by Wait Class 	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> This table displays top process types ordered by wait class

Proce Description		     Wait Class Type  Wait Time (sec
----- ------------------------------ ---------------- --------------
      Others (foregrounds + unclassi User I/O		       824.0
      Others (foregrounds + unclassi Cluster		       204.6
LGWR  Redo etc. 		     System I/O 		56.7
DBW0  db writer process 0	     System I/O 		30.9
      Others (foregrounds + unclassi Other			 2.8
CKPT  checkpoint		     System I/O 		 2.5
LMON  global enqueue service monitor Other			 2.3
M     MMON slave class 1	     Cluster			  .9
IMR   CGS IMR Slave		     User I/O			  .9
M     MMON slave class 1	     Other			  .6
DBW0  db writer process 0	     User I/O			  .6
CKPT  checkpoint		     User I/O			  .4
MMNL  Manageability Monitor Process  Other			  .4
M     MMON slave class 1	     User I/O			  .3
P     Parallel query slave	     Other			  .3
SMON  System Monitor Process	     Other			  .3
LM    global cache service process   Other			  .3
RS*   GCS RM Slave		     Other			  .2
QM*   QMON MS			     Other			  .2
MZ    MMON slave class 2	     User I/O			  .1
			  ------------------------------------------------------


Top Process Types by CPU Used		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> This table displays top process types ordered by CPU time

Proces Description		      CPU Time (sec)
------ ------------------------------ --------------
       Others (foregrounds + unclassi	       246.0
LM     global cache service process		55.8
VKTM   Virtual Keeper of TiMe process		27.2
DBW0   db writer process 0			20.1
RS*    GCS RM Slave				 8.2
M      MMON slave class 1			 6.0
LGWR   Redo etc.				 5.6
VKRM   Virtual sKeduler for Resource		 3.1
GCR    GCR Slaves (LMHB)			 3.0
IPC0   IPC Service 0				 2.8
DIA0   diagnosibility process 0 		 2.2
P      Parallel query slave			 1.4
LMON   global enqueue service monitor		 1.2
LMD0   global enqueue service daemon		 1.1
LMHB   lm heartbeat monitor			 1.1
LMD1   global enqueue service daemon		  .9
IMR    CGS IMR Slave				  .9
FENC   IOServer fence monitor			  .7
SCM    DLM Statistics Collection and		  .7
QM*    QMON MS					  .7
			  ------------------------------------------------------


SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   99.2% of Total DB Time (s):	    1,142
-> Captured PL/SQL account for	 99.7% of Total DB Time (s):	       1,142

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
	   637.5	  7,473 	 0.09	55.8   19.6   72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	   568.9	      1        568.95	49.8   20.9   75.0 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.9	      1        568.94	49.8   22.4   69.9 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   491.7	 42,415 	 0.01	43.1   23.0   73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	     0.9	      6 	 0.15	  .1	1.7	.0 6hnhqahphpk8n
select free_mb from v$asm_diskgroup_stat where name=:1

	     0.6	      2 	 0.28	  .0   76.9   12.1 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

	     0.5	      2 	 0.24	  .0   78.6   12.2 0w26sk6t6gq98
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

	     0.4	      2 	 0.22	  .0   76.9   13.3 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

	     0.3	     89 	 0.00	  .0	7.3    1.7 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	     0.2	      3 	 0.08	  .0   98.7	.0 22356bkgsdcnh
SELECT COUNT(*) FROM X$KSPPI A, X$KSPPCV2 B WHERE A.INDX + 1 = KSPFTCTXPN AND KS
PPINM = '_deferred_log_dest_is_valid' AND UPPER(KSPFTCTXVL)='TRUE'

			  ------------------------------------------------------


SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   97.3% of Total CPU Time (s):	       247
-> Captured PL/SQL account for	100.0% of Total CPU Time (s):		  247

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
     127.2	      1     127.21   51.5      568.9   22.4   69.9 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     125.1	  7,473       0.02   50.7      637.5   19.6   72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     118.8	      1     118.82   48.1      568.9   20.9   75.0 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     113.3	 42,415       0.00   45.9      491.7   23.0   73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

       0.4	      2       0.21    0.2	 0.6   76.9   12.1 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

       0.4	      2       0.19    0.2	 0.5   78.6   12.2 0w26sk6t6gq98
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

       0.3	      2       0.17    0.1	 0.4   76.9   13.3 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

       0.2	      3       0.08    0.1	 0.2   98.7	.0 22356bkgsdcnh
SELECT COUNT(*) FROM X$KSPPI A, X$KSPPCV2 B WHERE A.INDX + 1 = KSPFTCTXPN AND KS
PPINM = '_deferred_log_dest_is_valid' AND UPPER(KSPFTCTXVL)='TRUE'

       0.1	      1       0.12    0.0	 0.1   92.1	.0 dcbt0gjzjwwbs
insert into wrh$_sga_target_advice (dbid, per_pdb, con_dbid, snap_id, instance
_number, SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS) selec
t :dbid, 0 per_pdb, :srcdbid con_dbid, :snap_id, :instance_number, SGA_SI
ZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS FROM v$sga_target_advi

       0.1	      1       0.09    0.0	 0.1   94.7    3.9 1fvsn5j51ugz3
 begin dbms_rcvman.resetAll; end;

			  ------------------------------------------------------


SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   99.5% of Total User I/O Wait Time (s):
-> Captured PL/SQL account for	 99.5% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
     461.4	  7,473       0.06   55.7      637.5   19.6   72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     426.5	      1     426.51   51.5      568.9   20.9   75.0 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     397.5	      1     397.47   48.0      568.9   22.4   69.9 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     361.9	 42,415       0.01   43.7      491.7   23.0   73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

       0.1	      1       0.11    0.0	 0.2   21.5   73.1 5pj6mtazkhmdd
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

       0.1	      1       0.08    0.0	 0.1	5.8   96.4 03guhbfpak0w7
select /*+ index(idl_ub1$ i_idl_ub11) */ piece#,length,piece from idl_ub1$ where
 obj#=:1 and part=:2 and version=:3 order by piece#

       0.1	      2       0.03    0.0	 0.6   76.9   12.1 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

       0.1	      2       0.03    0.0	 0.5   78.6   12.2 0w26sk6t6gq98
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

       0.1	      2       0.03    0.0	 0.4   76.9   13.3 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

       0.0	      2       0.01    0.0	 0.1   60.4   41.2 atwuyuvqkf27w
SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE, BUCKET_START, B
UCKET_END, TM_GROUP_TYPE, TM_BUCKET_START, TM_BUCKET_END, SUM(TM_CPU_FIRST_BUCKE
T_VALUE) TM_CPU_FIRST_BUCKET_VALUE, SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDD
LE_BUCKETS_VALUE, SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE, SUM(TM

			  ------------------------------------------------------


SQL ordered by Gets			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    3,389,562
-> Captured SQL account for   99.5% of Total

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
  2,804,817	 42,415 	66.1   82.7	 491.7	  23  73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

  1,792,446	      1  1,792,446.0   52.9	 568.9	20.9	75 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

  1,564,773	      1  1,564,773.0   46.2	 568.9	22.4  69.9 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    543,691	  7,473 	72.8   16.0	 637.5	19.6  72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

      5,086	      1      5,086.0	0.2	   0.1	73.4   9.7 bjck50zs3nc95
insert into WRH$_SYSSTAT (dbid, per_pdb, con_dbid, snap_id, instance_number, s
tat_id, value) select /*+ use_hash(v$sysstat) */ :dbid, 0 per_pdb, :srcdbid
con_dbid, :snap_id, :instance_number, stat_id, value FROM v$sysstat syssta
t WHERE (1 = 1)

      4,676	      2      2,338.0	0.1	   0.6	76.9  12.1 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

      4,342	      2      2,171.0	0.1	   0.5	78.6  12.2 0w26sk6t6gq98
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

      4,160	      2      2,080.0	0.1	   0.4	76.9  13.3 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

      2,087	      1      2,087.0	0.1	   0.2	44.2   4.2 a95n8p4vpxmps
begin prvt_hdm.execute_slave_actions; end;

      2,077	      1      2,077.0	0.1	   0.2	43.7   4.2 drktaf71uygnb
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
 inst_id => :bind_inst, end_snap => :bind_snap, t
ime_left_in_secs => :bind_time); END;

			  ------------------------------------------------------


SQL ordered by Reads			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,206,194
-> Captured SQL account for   99.9% of Total

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
  1,878,864	 42,415       44.3   85.2      491.7   23.0   73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

  1,172,802	      1 1.1728E+06   53.2      568.9   20.9   75.0 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

  1,031,832	      1 1.0318E+06   46.8      568.9   22.4   69.9 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    324,702	  7,473       43.5   14.7      637.5   19.6   72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	 59	      2       29.5    0.0	 0.6   76.9   12.1 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

	 53	      2       26.5    0.0	 0.5   78.6   12.2 0w26sk6t6gq98
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

	 53	      2       26.5    0.0	 0.4   76.9   13.3 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

	 36	      1       36.0    0.0	 0.2   21.5   73.1 5pj6mtazkhmdd
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

	 26	      2       13.0    0.0	 0.1   60.4   41.2 atwuyuvqkf27w
SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE, BUCKET_START, B
UCKET_END, TM_GROUP_TYPE, TM_BUCKET_START, TM_BUCKET_END, SUM(TM_CPU_FIRST_BUCKE
T_VALUE) TM_CPU_FIRST_BUCKET_VALUE, SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDD
LE_BUCKETS_VALUE, SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE, SUM(TM

	 24	      1       24.0    0.0	 0.1	5.8   96.4 03guhbfpak0w7
select /*+ index(idl_ub1$ i_idl_ub11) */ piece#,length,piece from idl_ub1$ where
 obj#=:1 and part=:2 and version=:3 order by piece#

			  ------------------------------------------------------


SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db2  Snaps: 62-63
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,206,159
-> Captured SQL account for    0.0% of Total
-> Total UnOptimized Read Requests:	  2,206,159
-> Captured SQL account for    0.0% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
  1,172,802   1,172,802 	 1  1,172,802.0    0.0	 53.2 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

  1,031,832   1,031,832 	 1  1,031,832.0    0.0	 46.8 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	 36	     36 	 1	   36.0    0.0	  0.0 5pj6mtazkhmdd
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

	 26	     26 	 2	   13.0    0.0	  0.0 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

	 20	     20 	 2	   10.0    0.0	  0.0 0w26sk6t6gq98
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

	 19	     19        494	    0.0    0.0	  0.0 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	 17	     17 	 1	   17.0    0.0	  0.0 c9059z5ksrf1x
insert into wrh$_latch (dbid, per_pdb, con_dbid, snap_id, instance_number, lat
ch_hash, level#, gets, misses, sleeps, immediate_gets, immediate_misses, spin
_gets, sleep1, sleep2, sleep3, sleep4, wait_time) select :dbid, 0 per_pdb,
 :srcdbid con_dbid, :snap_id, :instance_number, hash, level#, gets, misses

	 14	     14 	 1	   14.0    0.0	  0.0 1fvsn5j51ugz3
 begin dbms_rcvman.resetAll; end;

	 14	     14 	30	    0.5    0.0	  0.0 49s332uhbnsma
 declare vsn varchar2(20); begin vsn :=
 dbms_rcvman.getPackageVersion; :pkg_vsn:pkg_vsn_i := vsn;
 if vsn is not null then :pkg_vsnub4 :=
 to_number(substr(vsn,1,2) || substr(vsn,4,2) || s

	 10	     10 	 1	   10.0    0.0	  0.0 a95n8p4vpxmps
begin prvt_hdm.execute_slave_actions; end;

			  ------------------------------------------------------


SQL ordered by Executions		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Executions:	      52,125
-> Captured SQL account for   97.8% of Total

					      Elapsed
 Executions   Rows Processed  Rows per Exec   Time (s)	%CPU   %IO    SQL Id
------------ --------------- -------------- ---------- ----- ----- -------------
      42,415	      42,416		1.0	 491.7	  23  73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

       7,473	     470,799	       63.0	 637.5	19.6  72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	 494		 494		1.0	   0.1	77.9  13.4 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	 158		 158		1.0	   0.1	78.6   9.7 3dbzmtf9ahvzt
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	  89		  89		1.0	   0.3	 7.3   1.7 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	  52		 836	       16.1	   0.0	31.2  54.4 2sxqgx5hx76qr
select /*+ rule */ bucket, endpoint, col#, epvalue, epvalue_raw, ep_repeat_count
, endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by b
ucket

	  37		  37		1.0	   0.0	94.8	 0 1rpgk59t8pvs6
 begin dbms_output.get_line(:line, :status); end;

	  30		  30		1.0	   0.1	88.5   9.9 49s332uhbnsma
 declare vsn varchar2(20); begin vsn :=
 dbms_rcvman.getPackageVersion; :pkg_vsn:pkg_vsn_i := vsn;
 if vsn is not null then :pkg_vsnub4 :=
 to_number(substr(vsn,1,2) || substr(vsn,4,2) || s

	  23		  23		1.0	   0.0	69.1  22.6 5cu0x10yu88sw
merge into sys.wri$_index_usage iu us
ing dual on (
iu.obj# = :objn) when mat
ched then update

	  22		  22		1.0	   0.0	37.4  45.1 5u7g54s63p4ts
select toid from type$ where package_obj#=:1 and typ_name=:2

			  ------------------------------------------------------


SQL ordered by Parse Calls		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Parse Calls:		1,302
-> Captured SQL account for   50.2% of Total

			    % Total
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
	 158	      158     12.14 3dbzmtf9ahvzt
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	 148	      494     11.37 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	  89	       89      6.84 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	  37	       37      2.84 1rpgk59t8pvs6
 begin dbms_output.get_line(:line, :status); end;

	  30	       30      2.30 49s332uhbnsma
 declare vsn varchar2(20); begin vsn :=
 dbms_rcvman.getPackageVersion; :pkg_vsn:pkg_vsn_i := vsn;
 if vsn is not null then :pkg_vsnub4 :=
 to_number(substr(vsn,1,2) || substr(vsn,4,2) || s

	  23	       23      1.77 5cu0x10yu88sw
merge into sys.wri$_index_usage iu us
ing dual on (
iu.obj# = :objn) when mat
ched then update

	  22	       22      1.69 5u7g54s63p4ts
select toid from type$ where package_obj#=:1 and typ_name=:2

	  20	       20      1.54 gjaap3w3qbf8c
select count(*) from ilmobj$ where rownum = 1

	  19	       19      1.46 6n2qqv1brfhpp
Module: SQL*Plus
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

	  16	       16      1.23 fkc81h2686aqc
Module: SQL*Plus
select pob.parttype from sys.indpart$ ip, sys.partobj$ pob where ip.bo# = pob.o
bj# and ip.obj# = :oid

	  16	       16      1.23 fs4p95w7yg25b
Module: SQL*Plus
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
bj# and tp.obj# = :oid

			  ------------------------------------------------------


SQL ordered by Sharable Memory		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Only Statements with Sharable Memory greater than 1048576 are displayed

Sharable Mem (b)  Executions   % Total	  SQL Id
---------------- ------------ -------- -------------
      21,989,193	    2	  1.77 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

       2,095,564	    2	  0.17 atwuyuvqkf27w
SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE, BUCKET_START, B
UCKET_END, TM_GROUP_TYPE, TM_BUCKET_START, TM_BUCKET_END, SUM(TM_CPU_FIRST_BUCKE
T_VALUE) TM_CPU_FIRST_BUCKET_VALUE, SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDD
LE_BUCKETS_VALUE, SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE, SUM(TM

       1,377,287       42,415	  0.11 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

       1,317,728	7,473	  0.11 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  ------------------------------------------------------


SQL ordered by Version Count		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Only Statements with Version Count greater than 20 are displayed

 Version
  Count   Executions	 SQL Id
-------- ------------ -------------
      47       42,415 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

      46	7,473 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  ------------------------------------------------------


SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    206
-> Captured SQL account for   99.4% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
	 119.9	      7,473   58.2	637.5	18.8   19.6   72.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	 113.4		  1   55.0	568.9	19.9   22.4   69.9 0sy7x6xzjg2yy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  91.2		  1   44.3	568.9	16.0   20.9   75.0 078ab5pdvxx3c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  84.5	     42,415   41.0	491.7	17.2   23.0   73.6 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	    .3		 89    0.1	  0.3	93.2	7.3    1.7 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	    .1		  1    0.0	  0.2	55.1   44.2    4.2 a95n8p4vpxmps
begin prvt_hdm.execute_slave_actions; end;

	    .1		  1    0.0	  0.2	56.0   43.7    4.2 drktaf71uygnb
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
 inst_id => :bind_inst, end_snap => :bind_snap, t
ime_left_in_secs => :bind_time); END;

	    .0		  1    0.0	  0.1	54.6   29.0   20.3 c9059z5ksrf1x
insert into wrh$_latch (dbid, per_pdb, con_dbid, snap_id, instance_number, lat
ch_hash, level#, gets, misses, sleeps, immediate_gets, immediate_misses, spin
_gets, sleep1, sleep2, sleep3, sleep4, wait_time) select :dbid, 0 per_pdb,
 :srcdbid con_dbid, :snap_id, :instance_number, hash, level#, gets, misses

	    .0		  1    0.0	  0.0	55.8   57.0	.0 3aa3xb3t0a9hb
 UPDATE wrh$_seg_stat_obj ob SET (snap_id, owner, object_name, subobject
_name, tablespace_name, object_type, partition_type, index_type, base_ob
j#, base_object_name, base_object_owner) = (SELECT snap_id + 1,
 nvl(ownername_kewrseg, owner), nvl(objname_kewrseg,

	    .0		494    0.0	  0.1	19.3   77.9   13.4 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	    .0		  1    0.0	  0.2	 9.8   21.5   73.1 5pj6mtazkhmdd
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

	    .0		  4    0.0	  0.0	92.4   15.9	.0 b0n14dkbkdpbb
select snap_interval, snapint_num, retention, retention_num, most_recent_snap_id

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    206
-> Captured SQL account for   99.4% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
, most_recent_snap_time, mrct_snap_time_num, status_flag, most_recent_purge_time
, mrct_purge_time_num, most_recent_split_id, most_recent_split_time, swrf_versio
n, registration_status, mrct_baseline_id, topnsql, mrct_bltmpl_id, src_dbid, src

	    .0		 10    0.0	  0.1	13.6   23.8   14.3 0kkhhb2w93cx0
update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,e
xtpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535, NULL, :13),groups=decod
e(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:
17),scanhint=:18, bitmapranges=:19 where ts#=:1 and file#=:2 and block#=:3

	    .0		  1    0.0	  0.1	 7.7   92.1	.0 dcbt0gjzjwwbs
insert into wrh$_sga_target_advice (dbid, per_pdb, con_dbid, snap_id, instance
_number, SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS) selec
t :dbid, 0 per_pdb, :srcdbid con_dbid, :snap_id, :instance_number, SGA_SI
ZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS FROM v$sga_target_advi

	    .0		 52    0.0	  0.0	27.7   31.2   54.4 2sxqgx5hx76qr
select /*+ rule */ bucket, endpoint, col#, epvalue, epvalue_raw, ep_repeat_count
, endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by b
ucket

	    .0		158    0.0	  0.1	 9.2   78.6    9.7 3dbzmtf9ahvzt
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	    .0		  2    0.0	  0.6	 1.2   76.9   12.1 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

	    .0		 19    0.0	  0.0	43.4   71.6	.0 6n2qqv1brfhpp
Module: SQL*Plus
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

	    .0		  1    0.0	  0.1	 9.4   73.4    9.7 bjck50zs3nc95
insert into WRH$_SYSSTAT (dbid, per_pdb, con_dbid, snap_id, instance_number, s
tat_id, value) select /*+ use_hash(v$sysstat) */ :dbid, 0 per_pdb, :srcdbid
con_dbid, :snap_id, :instance_number, stat_id, value FROM v$sysstat syssta
t WHERE (1 = 1)

			  ------------------------------------------------------


Key Instance Activity Stats		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
db block changes			    993,133	   1,648.7	   132.0
execute count				     52,125	      86.5	     6.9
gc cr block receive time		      2,640	       4.4	     0.4
gc cr blocks received			     11,443	      19.0	     1.5
gc current block receive time		      5,009	       8.3	     0.7
gc current blocks received		     54,999	      91.3	     7.3
logons cumulative				 10	       0.0	     0.0
opened cursors cumulative		     59,419	      98.6	     7.9
parse count (total)			      1,302	       2.2	     0.2
parse time elapsed				  8	       0.0	     0.0
physical reads				  2,206,194	   3,662.4	   293.2
physical writes 			    354,758	     588.9	    47.1
redo size				400,508,720	 664,865.1	53,223.8
session cursor cache hits		     58,791	      97.6	     7.8
session logical reads			  3,389,562	   5,626.9	   450.4
user calls					173	       0.3	     0.0
user commits				      7,525	      12.5	     1.0
workarea executions - optimal			304	       0.5	     0.0
			  ------------------------------------------------------


Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
ASSM bg: segment fix monitor			  1	       0.0	     0.0
ASSM cbk:blocks examined			479	       0.8	     0.1
ASSM cbk:blocks marked full			150	       0.3	     0.0
ASSM gsp:L1 bitmaps examined			373	       0.6	     0.1
ASSM gsp:L2 bitmap full 			 11	       0.0	     0.0
ASSM gsp:L2 bitmaps examined			103	       0.2	     0.0
ASSM gsp:Search all				 15	       0.0	     0.0
ASSM gsp:Search hint				 12	       0.0	     0.0
ASSM gsp:Search steal				 10	       0.0	     0.0
ASSM gsp:bump HWM				 10	       0.0	     0.0
ASSM gsp:get free block 			331	       0.6	     0.0
ASSM gsp:get free data block			246	       0.4	     0.0
ASSM gsp:get free index block			 85	       0.1	     0.0
ASSM gsp:good hint				315	       0.5	     0.0
ASSM rsv:fill reserve				  3	       0.0	     0.0
ASSM wasted db state change			  2	       0.0	     0.0
Batched IO (bound) vector count 		  0	       0.0	     0.0
Batched IO block miss count		  1,861,089	   3,089.5	   247.3
Batched IO double miss count		     40,398	      67.1	     5.4
Batched IO same unit count			  0	       0.0	     0.0
Batched IO single block count			354	       0.6	     0.1
Batched IO vector block count		  1,860,800	   3,089.0	   247.3
Batched IO vector read count		     39,872	      66.2	     5.3
Block Cleanout Optim referenced 		  0	       0.0	     0.0
CCursor + sql area evicted			 27	       0.0	     0.0
CPU used by this session		     31,215	      51.8	     4.2
CPU used when call started		     25,724	      42.7	     3.4
CR blocks created				 15	       0.0	     0.0
Cached Commit SCN referenced		  1,229,605	   2,041.2	   163.4
Client Advertised Receive Window		 14	       0.0	     0.0
Client Advertised Send Window			 14	       0.0	     0.0
Client Path Maximum Transmission	      2,900	       4.8	     0.4
Client Send Congestion Window			 20	       0.0	     0.0
Client Time (usec) Last Ack Rece		  2	       0.0	     0.0
Client Time (usec) Last Data Rec		  2	       0.0	     0.0
Client Time (usec) Last Data Sen		  4	       0.0	     0.0
Client Time (usec) Round Trip Ti	      2,461	       4.1	     0.3
Client Time (usec) Round Trip Ti	      2,242	       3.7	     0.3
Client Total Bytes Acked		     31,637	      52.5	     4.2
Client Total Bytes Received		     12,206	      20.3	     1.6
Client Total Number of Retransmi		  0	       0.0	     0.0
Commit SCN cached				  0	       0.0	     0.0
DBWR checkpoint buffers written 	     66,593	     110.6	     8.9
DBWR checkpoints				 57	       0.1	     0.0
DBWR fusion writes				136	       0.2	     0.0
DBWR object drop buffers written		  8	       0.0	     0.0
DBWR parallel query checkpoint b		  0	       0.0	     0.0
DBWR thread checkpoint buffers w		  0	       0.0	     0.0
DBWR transaction table writes			266	       0.4	     0.0
DBWR undo block writes			     19,161	      31.8	     2.6
DFO trees parallelized				  4	       0.0	     0.0
Effective IO time				  0	       0.0	     0.0
HSC Heap Segment Block Changes		    472,961	     785.1	    62.9
Heap Segment Array Inserts			180	       0.3	     0.0
Heap Segment Array Updates			  0	       0.0	     0.0
Heatmap Blklevel Flush Task Coun		  0	       0.0	     0.0
KTFB alloc req					 61	       0.1	     0.0
KTFB alloc space (block)		 15,794,176	  26,219.1	 2,098.9
KTFB alloc time (ms)			     16,346	      27.1	     2.2
KTFB apply req					 90	       0.2	     0.0

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
KTFB apply time (ms)			      3,376	       5.6	     0.5
KTFB free req					 38	       0.1	     0.0
KTFB free space (block) 		      1,144	       1.9	     0.2
KTFB free time (ms)				181	       0.3	     0.0
LOB table id lookup cache misses		  0	       0.0	     0.0
PX local messages recv'd			 36	       0.1	     0.0
PX local messages sent				 36	       0.1	     0.0
PX remote messages recv'd			 16	       0.0	     0.0
PX remote messages sent 			 78	       0.1	     0.0
Parallel operations not downgrad		  4	       0.0	     0.0
Requests to/from client 			126	       0.2	     0.0
SMON posted for instance recover		  0	       0.0	     0.0
SMON posted for undo segment shr		  5	       0.0	     0.0
SQL*Net roundtrips to/from clien		124	       0.2	     0.0
TBS Extension: tasks created			  0	       0.0	     0.0
TBS Extension: tasks executed			  0	       0.0	     0.0
active txn count during cleanout		233	       0.4	     0.0
auto extends on undo tablespace 		  0	       0.0	     0.0
background checkpoints completed		  0	       0.0	     0.0
background checkpoints started			  0	       0.0	     0.0
background timeouts			      5,354	       8.9	     0.7
blocks cleaned out using minact 	    311,792	     517.6	    41.4
branch node splits				  1	       0.0	     0.0
buffer is not pinned count		  6,493,370	  10,779.3	   862.9
buffer is pinned count			  3,106,219	   5,156.5	   412.8
bytes received via SQL*Net from 	    379,616	     630.2	    50.5
bytes sent via SQL*Net to client	     21,626	      35.9	     2.9
calls to get snapshot scn: kcmgs	     62,818	     104.3	     8.4
calls to kcmgas 			     17,184	      28.5	     2.3
calls to kcmgcs 			      2,687	       4.5	     0.4
cell physical IO interconnect by     25,619,271,680   42,529,306.9   3,404,554.4
change write time				618	       1.0	     0.1
cleanout - number of ktugct call		234	       0.4	     0.0
cleanouts and rollbacks - consis		  5	       0.0	     0.0
cleanouts only - consistent read		  7	       0.0	     0.0
cluster key scan block gets			268	       0.4	     0.0
cluster key scans				181	       0.3	     0.0
commit batch/immediate performed		  0	       0.0	     0.0
commit batch/immediate requested		  0	       0.0	     0.0
commit cleanout failures: block 		  4	       0.0	     0.0
commit cleanout failures: buffer		  1	       0.0	     0.0
commit cleanout failures: callba		 22	       0.0	     0.0
commit cleanout failures: cannot		  1	       0.0	     0.0
commit cleanouts			    472,672	     784.7	    62.8
commit cleanouts successfully co	    472,644	     784.6	    62.8
commit immediate performed			  0	       0.0	     0.0
commit immediate requested			  0	       0.0	     0.0
commit txn count during cleanout		112	       0.2	     0.0
consistent changes			      1,510	       2.5	     0.2
consistent gets 			  2,843,005	   4,719.5	   377.8
consistent gets examination		    103,145	     171.2	    13.7
consistent gets examination (fas	    102,923	     170.9	    13.7
consistent gets from cache		  2,843,005	   4,719.5	   377.8
consistent gets pin			  2,739,860	   4,548.3	   364.1
consistent gets pin (fastpath)		  2,627,406	   4,361.6	   349.2
cursor authentications				  9	       0.0	     0.0
cursor reload failures				  0	       0.0	     0.0
data blocks consistent reads - u		 27	       0.0	     0.0
db block changes			    993,133	   1,648.7	   132.0
db block gets				    546,557	     907.3	    72.6

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
db block gets direct				 43	       0.1	     0.0
db block gets from cache		    546,514	     907.2	    72.6
db block gets from cache (fastpa	     80,749	     134.1	    10.7
deferred (CURRENT) block cleanou	    315,799	     524.2	    42.0
dirty buffers inspected 		    244,925	     406.6	    32.6
enqueue conversions				574	       1.0	     0.1
enqueue releases			     24,708	      41.0	     3.3
enqueue requests			     24,714	      41.0	     3.3
enqueue timeouts				 10	       0.0	     0.0
enqueue waits					230	       0.4	     0.0
exchange deadlocks				  1	       0.0	     0.0
execute count				     52,125	      86.5	     6.9
fastpath consistent get quota li		  0	       0.0	     0.0
file io service time			 40,111,756	  66,587.6	 5,330.5
free buffer inspected			  2,348,587	   3,898.8	   312.1
free buffer requested			  2,292,957	   3,806.4	   304.7
gc blocks compressed			      1,626	       2.7	     0.2
gc blocks lost					 71	       0.1	     0.0
gc cleanout saved				  4	       0.0	     0.0
gc cr anti locks created			  0	       0.0	     0.0
gc cr anti locks shrunk 		      3,178	       5.3	     0.4
gc cr block build time				  1	       0.0	     0.0
gc cr block flush time				 11	       0.0	     0.0
gc cr block receive time		      2,640	       4.4	     0.4
gc cr blocks built				 76	       0.1	     0.0
gc cr blocks flushed				 16	       0.0	     0.0
gc cr blocks received			     11,443	      19.0	     1.5
gc cr blocks served			      1,446	       2.4	     0.2
gc cr multiblock grant time		    150,935	     250.6	    20.1
gc cr multiblock grants received	  1,810,189	   3,005.0	   240.6
gc current block flush time			 25	       0.0	     0.0
gc current block pin time			  0	       0.0	     0.0
gc current block receive time		      5,009	       8.3	     0.7
gc current blocks flushed			 23	       0.0	     0.0
gc current blocks pinned			  1	       0.0	     0.0
gc current blocks received		     54,999	      91.3	     7.3
gc current blocks served			253	       0.4	     0.0
gc force cr read cr				 68	       0.1	     0.0
gc force cr read current			  0	       0.0	     0.0
gc kbytes saved 			      9,164	      15.2	     1.2
gc kbytes sent				      4,428	       7.4	     0.6
gc local grants 			    822,416	   1,365.3	   109.3
gc merge pi bg					  0	       0.0	     0.0
gc merge pi fg					 26	       0.0	     0.0
gc no change made				  3	       0.0	     0.0
gc read time waited				  0	       0.0	     0.0
gc read wait timeouts				  0	       0.0	     0.0
gc read waits					  0	       0.0	     0.0
gc reader bypass grants 			572	       1.0	     0.1
gc reader bypass waits				 20	       0.0	     0.0
gc remote grants			  1,504,554	   2,497.6	   199.9
gc status messages received		    297,437	     493.8	    39.5
gc status messages sent 			190	       0.3	     0.0
gcs affinity lock failures			  0	       0.0	     0.0
gcs affinity lock grants		     20,051	      33.3	     2.7
gcs anti-locks created				  0	       0.0	     0.0
gcs data block access records		  2,302,675	   3,822.6	   306.0
gcs messages sent			  3,160,148	   5,246.0	   420.0
gcs stats management (SCM) proce		  5	       0.0	     0.0
ges messages sent			    273,542	     454.1	    36.4

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
global enqueue get time 			 77	       0.1	     0.0
global enqueue gets async			  0	       0.0	     0.0
global enqueue gets sync		     19,165	      31.8	     2.6
global enqueue releases 		     18,444	      30.6	     2.5
global undo segment hints helped		  0	       0.0	     0.0
heap block compress				  0	       0.0	     0.0
hot buffers moved to head of LRU	    535,525	     889.0	    71.2
immediate (CR) block cleanout ap		 12	       0.0	     0.0
immediate (CURRENT) block cleano		218	       0.4	     0.0
index crx state invalidation			  0	       0.0	     0.0
index crx upgrade (positioned)			 60	       0.1	     0.0
index fast full scans (full)			  1	       0.0	     0.0
index fetch by key			      1,475	       2.5	     0.2
index range scans			     50,510	      83.9	     6.7
leaf node 90-10 splits				  4	       0.0	     0.0
leaf node splits				 80	       0.1	     0.0
lob reads					 89	       0.2	     0.0
lob writes				      1,264	       2.1	     0.2
lob writes unaligned			      1,264	       2.1	     0.2
logical read bytes from cache	     27,766,939,648   46,094,546.0   3,689,958.8
logons cumulative				 10	       0.0	     0.0
max cf enq hold time				  1	       0.0	     0.0
messages received			     38,108	      63.3	     5.1
messages sent				     38,108	      63.3	     5.1
min active SCN optimization appl		  0	       0.0	     0.0
no work - consistent read gets		  2,735,198	   4,540.6	   363.5
non-idle wait count			  1,320,406	   2,191.9	   175.5
opened cursors cumulative		     59,419	      98.6	     7.9
parse count (describe)				  0	       0.0	     0.0
parse count (failures)				  0	       0.0	     0.0
parse count (hard)				 30	       0.1	     0.0
parse count (total)			      1,302	       2.2	     0.2
parse time cpu					  6	       0.0	     0.0
parse time elapsed				  8	       0.0	     0.0
physical read IO requests		  2,206,159	   3,662.3	   293.2
physical read bytes		     18,073,141,248   30,002,342.7   2,401,746.4
physical read total IO requests 	  2,208,728	   3,666.6	   293.5
physical read total bytes	     18,115,706,880   30,073,003.9   2,407,402.9
physical read total multi block 		  0	       0.0	     0.0
physical reads				  2,206,194	   3,662.4	   293.2
physical reads cache			  2,206,194	   3,662.4	   293.2
physical reads cache prefetch		  1,771,261	   2,940.4	   235.4
physical reads direct				  0	       0.0	     0.0
physical reads direct (lob)			  0	       0.0	     0.0
physical reads direct temporary 		  0	       0.0	     0.0
physical reads prefetch warmup			  0	       0.0	     0.0
physical write IO requests		    303,110	     503.2	    40.3
physical write bytes		      2,906,177,536    4,824,404.0     386,203.0
physical write total IO requests	    322,518	     535.4	    42.9
physical write total bytes	      3,747,194,880    6,220,536.0     497,966.1
physical write total multi block	      1,126	       1.9	     0.2
physical writes 			    354,758	     588.9	    47.1
physical writes direct				 49	       0.1	     0.0
physical writes direct (lob)			  6	       0.0	     0.0
physical writes direct temporary		 43	       0.1	     0.0
physical writes from cache		    354,709	     588.8	    47.1
physical writes non checkpoint		    351,649	     583.8	    46.7
pinned buffers inspected			438	       0.7	     0.1
prefetch warmup blocks aged out 		  0	       0.0	     0.0
prefetched blocks aged out befor		  0	       0.0	     0.0

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
process last non-idle time			600	       1.0	     0.1
recursive calls 			     75,082	     124.6	    10.0
recursive cpu usage			     24,998	      41.5	     3.3
redo KB read					  0	       0.0	     0.0
redo blocks checksummed by FG (e	    312,506	     518.8	    41.5
redo blocks written			    812,346	   1,348.5	   108.0
redo blocks written (group 0)			  0	       0.0	     0.0
redo blocks written (group 1)			  0	       0.0	     0.0
redo buffer allocation retries			  0	       0.0	     0.0
redo entries				    514,925	     854.8	    68.4
redo log space requests 			  0	       0.0	     0.0
redo size				400,508,720	 664,865.1	53,223.8
redo size for direct writes			  0	       0.0	     0.0
redo subscn max counts				 87	       0.1	     0.0
redo synch time 				  0	       0.0	     0.0
redo synch time (usec)				 13	       0.0	     0.0
redo synch time overhead (usec) 		  0	       0.0	     0.0
redo synch time overhead count (		  0	       0.0	     0.0
redo synch writes				  3	       0.0	     0.0
redo wastage				  2,238,244	   3,715.6	   297.4
redo write active strands		      9,383	      15.6	     1.3
redo write broadcast ack count			  0	       0.0	     0.0
redo write broadcast ack time			  0	       0.0	     0.0
redo write finish time			 58,101,079	  96,450.8	 7,721.1
redo write gather time			    712,150	   1,182.2	    94.6
redo write info find				  0	       0.0	     0.0
redo write info find fail			  0	       0.0	     0.0
redo write schedule time		    814,555	   1,352.2	   108.3
redo write size count (   4KB)			205	       0.3	     0.0
redo write size count (   8KB)			233	       0.4	     0.0
redo write size count (  16KB)			455	       0.8	     0.1
redo write size count (  32KB)			722	       1.2	     0.1
redo write size count ( 128KB)		      6,074	      10.1	     0.8
redo write size count ( 256KB)			  6	       0.0	     0.0
redo write size count ( 512KB)			  2	       0.0	     0.0
redo write size count (1024KB)			  2	       0.0	     0.0
redo write time 			      5,815	       9.7	     0.8
redo write time (usec)			 58,150,297	  96,532.5	 7,727.6
redo write total time			 58,380,232	  96,914.2	 7,758.2
redo write worker delay (usec)			  0	       0.0	     0.0
redo write worker delay count			  0	       0.0	     0.0
redo writes				      7,699	      12.8	     1.0
redo writes (group 0)				  0	       0.0	     0.0
redo writes (group 1)				  0	       0.0	     0.0
redo writes adaptive all		      7,699	      12.8	     1.0
redo writes adaptive worker			  0	       0.0	     0.0
remote Oradebug requests			  0	       0.0	     0.0
rollback changes - undo records 		  0	       0.0	     0.0
rollbacks only - consistent read		 10	       0.0	     0.0
rows fetched via callback			654	       1.1	     0.1
securefile allocation bytes		     49,152	      81.6	     6.5
securefile allocation chunks			  4	       0.0	     0.0
securefile bytes non-transformed	     35,947	      59.7	     4.8
securefile direct read bytes			  0	       0.0	     0.0
securefile direct read ops			  0	       0.0	     0.0
securefile direct write bytes		     49,152	      81.6	     6.5
securefile direct write ops			  4	       0.0	     0.0
securefile number of non-transfo		  4	       0.0	     0.0
segment cfs allocations 			  0	       0.0	     0.0
segment chunks allocation from d		  4	       0.0	     0.0

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
segment dispenser allocations			  4	       0.0	     0.0
segment dispenser load empty			  0	       0.0	     0.0
segment dispenser load tasks			  0	       0.0	     0.0
segment prealloc bytes				  0	       0.0	     0.0
segment prealloc ops				  3	       0.0	     0.0
segment prealloc tasks				  0	       0.0	     0.0
segment prealloc time (ms)			156	       0.3	     0.0
segment total chunk allocation			  0	       0.0	     0.0
session cursor cache hits		     58,791	      97.6	     7.8
session logical reads			  3,389,562	   5,626.9	   450.4
shared hash latch upgrades - no 	    424,296	     704.4	    56.4
shared hash latch upgrades - wai		  0	       0.0	     0.0
shared io pool buffer get succes		  4	       0.0	     0.0
sorts (memory)					290	       0.5	     0.0
sorts (rows)				     44,903	      74.5	     6.0
sql area evicted				 21	       0.0	     0.0
sql area purged 				  1	       0.0	     0.0
summed dirty queue length		  1,430,130	   2,374.1	   190.1
switch current caused by our pin		 57	       0.1	     0.0
switch current to new buffer			 57	       0.1	     0.0
table fetch by rowid			  4,536,700	   7,531.2	   602.9
table fetch continued row			 12	       0.0	     0.0
table scan blocks gotten		      2,379	       4.0	     0.3
table scan disk non-IMC rows got	     96,571	     160.3	    12.8
table scan rows gotten			     96,571	     160.3	    12.8
table scans (short tables)			290	       0.5	     0.0
temp space allocated (bytes)			  0	       0.0	     0.0
total cf enq hold time				427	       0.7	     0.1
total number of cf enq holders			 92	       0.2	     0.0
total number of times SMON poste		  5	       0.0	     0.0
transaction lock background get 		  0	       0.0	     0.0
transaction lock background gets		  0	       0.0	     0.0
transaction lock foreground requ		  0	       0.0	     0.0
transaction rollbacks				  0	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
undo change vector size 		164,630,564	 273,295.2	21,877.8
user calls					173	       0.3	     0.0
user commits				      7,525	      12.5	     1.0
user logons cumulative				  0	       0.0	     0.0
user logouts cumulative 			  2	       0.0	     0.0
workarea executions - optimal			304	       0.5	     0.0
write clones created in backgrou		  0	       0.0	     0.0
write clones created in foregrou		  0	       0.0	     0.0
			  ------------------------------------------------------


Instance Activity Stats - Absolute Values  DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Statistics with absolute values (should not be diffed)

Statistic			     Begin Value       End Value
-------------------------------- --------------- ---------------
logons current				      91	      89
opened cursors current			     105	      97
session cursor cache count		   7,295	   7,304
session pga memory		     559,756,976     551,470,688
session pga memory max		     715,099,728     703,208,960
session uga memory		     461,887,136     461,246,608
session uga memory max		   4,838,269,008   4,885,401,928
			  ------------------------------------------------------

Instance Activity Stats - Thread Activity  DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Statistics identified by '(derived)' come from sources other than SYSSTAT

Statistic				      Total  per Hour
-------------------------------- ------------------ ---------
log switches (derived)				  0	  .00
			  ------------------------------------------------------

IOStat by Function summary		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> ordered by (Data Read + Write) desc

		 Reads:  Reqs	 Data	Writes:  Reqs	 Data	 Waits:    Avg
Function Name	   Data per sec per sec    Data per sec per sec   Count    Time
--------------- ------- ------- ------- ------- ------- ------- ------- --------
Buffer Cache Re   16.8G  3659.6 28.591M      0M     0.0      0M  434.3K   1.92ms
DBWR		     0M     0.0      0M    2.7G   503.2  4.602M       0
LGWR		     0M     0.0      0M    793M    31.2  1.316M    7698   7.42ms
Others		    41M     4.4   .068M      9M     1.0   .015M    2058   1.30ms
Direct Writes	     0M     0.0      0M      0M     0.0      0M       0
TOTAL:		  16.9G  3663.9 28.659M    3.5G   535.4  5.933M    444K   2.01ms
			  ------------------------------------------------------

IOStat by Filetype summary		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Small Read and Large Read are average service times
-> Ordered by (Data Read + Write) desc

		Reads:	Reqs	Data   Writes:	Reqs	Data	  Small    Large
Filetype Name	  Data per sec per sec	  Data per sec per sec	   Read     Read
-------------- ------- ------- ------- ------- ------- ------- -------- --------
Data File	 16.8G	3659.4 28.588M	  2.7G	 503.2	4.602M 181.73us
Log File	    0M	   0.0	    0M	  792M	  31.2	1.315M
Control File	   41M	   4.4	 .068M	    9M	   0.9	 .015M	14.85us
Temp File	    0M	   0.0	    0M	    1M	   0.0	 .002M	  .00ns
TOTAL:		 16.9G	3663.8 28.656M	  3.5G	 535.4	5.933M 181.53us
			  ------------------------------------------------------

IOStat by Function/Filetype summary	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Ordered by (Data Read + Write) desc for each function

  Reads:  Reqs	  Data	 Writes:  Reqs	  Data	  Waits:      Avg
    Data per sec per sec    Data per sec per sec   Count     Time
 ------- ------- ------- ------- ------- ------- ------- ----------
 Buffer Cache Reads (Data File)
   16.8G  3659.4 28.589M      0M     0.0      0M  394.5K     1.45ms
Buffer Cache Reads
   16.8G  3659.4 28.589M      0M     0.0      0M  394.5K     1.45ms
 Buffer Cache Reads (Temp File)
      0M     0.0      0M      0M     0.0      0M      20   250.00us
 DBWR (Data File)
      0M     0.0      0M    2.7G   503.2  4.602M       0
DBWR
      0M     0.0      0M    2.7G   503.2  4.602M       0
 DBWR (Temp File)
      0M     0.0      0M      0M     0.0      0M       0
 LGWR (Log File)
      0M     0.0      0M    793M    31.2  1.316M       0
LGWR
      0M     0.0      0M    793M    31.2  1.316M       0
 Others (Control File)
     41M     4.4   .068M      9M     0.9   .015M    1778   267.19us
Others
     41M     4.4   .068M      9M     1.0   .015M    1778   267.19us
 Others (Data File)
      0M     0.0      0M      0M     0.0      0M       0
 Others (Temp File)
      0M     0.0      0M      0M     0.0      0M       0
 Direct Writes (Data File)
      0M     0.0      0M      0M     0.0      0M       0
Direct Writes
      0M     0.0      0M      0M     0.0      0M       0
TOTAL:
   16.9G  3663.8 28.657M    3.5G   535.4  5.933M  396.3K     1.44ms
			  ------------------------------------------------------


Tablespace IO Stats			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


File IO Stats				   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


Buffer Pool Statistics			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Standard block size Pools  D: default,  K: keep,  R: recycle
-> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k

							    Free   Writ   Buffer
     Number of Pool	  Buffer     Physical	 Physical   Buff   Comp     Busy
P      Buffers Hit%	    Gets	Reads	   Writes   Wait   Wait    Waits
--- ---------- ---- ------------ ------------ ----------- ------ ------ --------
D      917,088	 35    3,389,444    2,206,293	  354,709      0      0        3
			  ------------------------------------------------------

Checkpoint Activity			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Physical Writes:		       354,758

					  Other    Autotune	 Thread
       MTTR    Log Size    Log Ckpt    Settings        Ckpt	   Ckpt
     Writes	 Writes      Writes	 Writes      Writes	 Writes
----------- ----------- ----------- ----------- ----------- -----------
	  0	      0 	  0	      0      66,593	      0
			  ------------------------------------------------------

Instance Recovery Stats 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> B: Begin Snapshot,  E: End Snapshot

									    Estd
  Targt  Estd					  Log Ckpt Log Ckpt    Opt   RAC
  MTTR	 MTTR Recovery	Actual	 Target   Log Sz   Timeout Interval    Log Avail
   (s)	  (s) Estd IOs RedoBlks RedoBlks RedoBlks RedoBlks RedoBlks  Sz(M)  Time
- ----- ----- -------- -------- -------- -------- -------- -------- ------ -----
B     0     4	 19119	  31474 1.70E+07 1.70E+07      N/A	N/A    N/A     1
E     0    97	133647	 457183 1.70E+07 1.70E+07      N/A	N/A    N/A    33
			  ------------------------------------------------------

MTTR Advisory				       DB/Inst: P30DB/p30db2  Snap: 63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffer Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 63
-> Only rows with estimated physical reads >0 are displayed
-> ordered by Block Size, Buffers For Estimate

				    Est
				   Phys      Estimated			Est
    Size for   Size	 Buffers   Read     Phys Reads	   Est Phys %DBtime
P    Est (M) Factor  (thousands) Factor    (thousands)	  Read Time for Rds
--- -------- ------ ------------ ------ -------------- ------------ -------
D	 768	 .1	      89    1.2 	24,238		  1 6.6E+04
D      1,536	 .2	     179    1.2 	23,114		  1 6.3E+04
D      2,304	 .3	     268    1.1 	22,377		  1 6.1E+04
D      3,072	 .4	     358    1.1 	21,807		  1 5.9E+04
D      3,840	 .5	     447    1.1 	21,332		  1 5.8E+04
D      4,608	 .6	     537    1.1 	20,912		  1 5.7E+04
D      5,376	 .7	     626    1.1 	20,532		  1 5.6E+04
D      6,144	 .8	     716    1.0 	20,185		  1 5.5E+04
D      6,912	 .9	     805    1.0 	19,860		  1 5.4E+04
D      7,680	1.0	     895    1.0 	19,562		  1 5.3E+04
D      7,872	1.0	     917    1.0 	19,492		  1 5.3E+04
D      8,448	1.1	     984    1.0 	19,289		  1 5.2E+04
D      9,216	1.2	   1,074    1.0 	19,032		  1 5.2E+04
D      9,984	1.3	   1,163    1.0 	18,798		  1 5.1E+04
D     10,752	1.4	   1,253    1.0 	18,586		  1 5.0E+04
D     11,520	1.5	   1,342    0.9 	18,399		  1 5.0E+04
D     12,288	1.6	   1,432    0.9 	18,229		  1 4.9E+04
D     13,056	1.7	   1,521    0.9 	18,086		  1 4.9E+04
D     13,824	1.8	   1,610    0.9 	17,954		  1 4.9E+04
D     14,592	1.9	   1,700    0.9 	17,844		  1 4.8E+04
D     15,360	2.0	   1,789    0.9 	17,747		  1 4.8E+04
			  ------------------------------------------------------


PGA Aggr Summary			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory

PGA Cache Hit %   W/A MB Processed  Extra W/A MB Read/Written
--------------- ------------------ --------------------------
	  100.0 		61			    0
			  ------------------------------------------------------

PGA Aggr Target Stats			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> B: Begin Snap   E: End Snap (rows dentified with B or E contain data
   which is absolute i.e. not diffed over the interval)
-> Auto PGA Target - actual workarea memory target
-> W/A PGA Used    - amount of memory used for all Workareas (manual + auto)
-> %PGA W/A Mem    - percentage of PGA memory allocated to workareas
-> %Auto W/A Mem   - percentage of workarea memory controlled by Auto Mem Mgmt
-> %Man W/A Mem    - percentage of workarea memory under manual control

						%PGA  %Auto   %Man
    PGA Aggr   Auto PGA   PGA Mem    W/A PGA	 W/A	W/A    W/A Global Mem
   Target(M)  Target(M)  Alloc(M)    Used(M)	 Mem	Mem    Mem   Bound(K)
- ---------- ---------- ---------- ---------- ------ ------ ------ ----------
B      3,215	  1,951    1,292.2	  0.0	  .0	 .0	.0    329,210
E      3,215	  1,970    1,280.4	  0.0	  .0	 .0	.0    329,210
			  ------------------------------------------------------

PGA Aggr Target Histogram		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Optimal Executions are purely in-memory operations

  Low	  High
Optimal Optimal    Total Execs	Optimal Execs 1-Pass Execs M-Pass Execs
------- ------- -------------- -------------- ------------ ------------
     2K      4K 	   200		  200		 0	      0
    64K    128K 	    13		   13		 0	      0
   128K    256K 	    24		   24		 0	      0
   256K    512K 	    16		   16		 0	      0
   512K   1024K 	    22		   22		 0	      0
     1M      2M 	    28		   28		 0	      0
     2M      4M 	     1		    1		 0	      0
			  ------------------------------------------------------

PGA Memory Advisory			       DB/Inst: P30DB/p30db2  Snap: 63
-> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value
   where Estd PGA Overalloc Count is 0

				       Estd Extra    Estd P Estd PGA
PGA Target    Size	     W/A MB   W/A MB Read/    Cache Overallo	Estd
  Est (MB)   Factr	  Processed Written to Disk   Hit %    Count	Time
---------- ------- ---------------- ---------------- ------ -------- -------
       402     0.1	    8,616.6	       810.2   91.0	  36 3.1E+07
       804     0.3	    8,616.6	       745.8   92.0	  22 3.1E+07
     1,608     0.5	    8,616.6	       532.6   94.0	   0 3.0E+07
     2,411     0.8	    8,616.6		 0.0  100.0	   0 2.8E+07
     3,215     1.0	    8,616.6		 0.0  100.0	   0 2.8E+07
     3,858     1.2	    8,616.6		 0.0  100.0	   0 2.8E+07
     4,501     1.4	    8,616.6		 0.0  100.0	   0 2.8E+07
     5,144     1.6	    8,616.6		 0.0  100.0	   0 2.8E+07
     5,787     1.8	    8,616.6		 0.0  100.0	   0 2.8E+07
     6,430     2.0	    8,616.6		 0.0  100.0	   0 2.8E+07
     9,645     3.0	    8,616.6		 0.0  100.0	   0 2.8E+07
    12,860     4.0	    8,616.6		 0.0  100.0	   0 2.8E+07
    19,290     6.0	    8,616.6		 0.0  100.0	   0 2.8E+07
    25,720     8.0	    8,616.6		 0.0  100.0	   0 2.8E+07
			  ------------------------------------------------------


Shared Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 63
-> SP: Shared Pool     Est LC: Estimated Library Cache	 Factr: Factor
-> Note there is often a 1:Many correlation between a single logical object
   in the Library Cache, and the physical number of memory objects associated
   with it.  Therefore comparing the number of Lib Cache objects (e.g. in
   v$librarycache), with the number of Lib Cache Memory Objects is invalid.

				       Est LC Est LC  Est LC Est LC
  Shared    SP	 Est LC 		 Time	Time	Load   Load	  Est LC
    Pool  Size	   Size       Est LC	Saved  Saved	Time   Time	 Mem Obj
 Size(M) Factr	    (M)      Mem Obj	  (s)  Factr	 (s)  Factr	Hits (K)
-------- ----- -------- ------------ -------- ------ ------- ------ ------------
   1,408    .9	     17        1,395   56,276	  .9   6,466   93.7	   3,024
   1,440    .9	     46        2,021   56,543	  .9   6,199   89.8	   3,038
   1,472    .9	     78        2,522   58,096	  .9   4,646   67.3	   3,088
   1,504   1.0	    110        3,125   59,615	 1.0   3,127   45.3	   3,138
   1,536   1.0	    142        3,857   61,144	 1.0   1,598   23.2	   3,188
   1,568   1.0	    174        4,326   62,673	 1.0	  69	1.0	   3,237
   1,600   1.0	    205        5,683   62,676	 1.0	  66	1.0	   3,237
   1,632   1.0	    237        6,886   62,676	 1.0	  66	1.0	   3,238
   1,664   1.1	    269        7,856   62,676	 1.0	  66	1.0	   3,238
   1,696   1.1	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   1,728   1.1	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   1,760   1.1	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   1,792   1.1	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   1,824   1.2	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   1,856   1.2	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   1,888   1.2	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   2,048   1.3	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   2,208   1.4	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   2,368   1.5	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   2,528   1.6	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   2,688   1.7	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   2,848   1.8	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   3,008   1.9	    292        8,607   62,676	 1.0	  66	1.0	   3,238
   3,168   2.0	    292        8,607   62,676	 1.0	  66	1.0	   3,238
			  ------------------------------------------------------

SGA Target Advisory			       DB/Inst: P30DB/p30db2  Snap: 63

SGA Target   SGA Size	    Est DB     Est Physical
  Size (M)     Factor	  Time (s)	      Reads
---------- ---------- ------------ ----------------
     2,416	  0.3	    79,349	 24,238,180
     3,624	  0.4	    70,160	 23,113,497
     4,832	  0.5	    66,613	 21,807,540
     6,040	  0.6	    65,327	 21,331,938
     7,248	  0.8	    63,156	 20,532,770
     8,456	  0.9	    61,334	 19,860,299
     9,664	  1.0	    60,332	 19,491,902
    10,872	  1.1	    59,083	 19,031,893
    12,080	  1.3	    57,870	 18,585,529
    13,288	  1.4	    57,364	 18,398,406
    14,496	  1.5	    56,513	 18,086,536
    15,704	  1.6	    55,861	 17,844,836
    16,912	  1.8	    55,596	 17,747,377
    18,120	  1.9	    55,596	 17,747,377
    19,328	  2.0	    55,596	 17,747,377
			  ------------------------------------------------------

Streams Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Java Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffer Wait Statistics			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by wait time desc, waits desc

Class			 Waits Total Wait Time (s)  Avg Time (ms)
------------------ ----------- ------------------- --------------
data block		     2			 0		5
undo header		     1			 0		0
			  ------------------------------------------------------


Enqueue Activity			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
CR-Reuse Block Range (block range reuse ckpt)
	 524	      524	    0	      147	     0		  .77
RO-Multiple Object Reuse (fast object reuse)
	  40	       40	    0		8	     0		 2.88
WF-AWR Flush
	  19	       19	    0	       19	     0		  .89
US-Undo Segment
	 177	      177	    0	       17	     0		  .82
PS-PX Process Reservation
	  28	       28	    0	       14	     0		  .86
CF-Controlfile Transaction
       1,287	    1,287	    0	       24	     0		  .46
CO-KTUCLO Master Slave enq (master slave det)
	  10		0	   10	       10	     0		  .80
FB-Format Block
	  12	       12	    0		3	     0		 1.00
DW-In memory Dispenser
	   3		3	    0		3	     0		 1.00
TA-Instance Undo
	   2		2	    0		2	     0		  .50
HW-Segment High Water Mark
	 580	      580	    0		1	     0		 1.00
TD-KTF map table enqueue (KTF dump entries)
	   2		2	    0		1	     0		 1.00
TK-Auto Task Serialization (Auto Task Serialization)
	   1		1	    0		1	     0		 1.00
TM-DML
       8,284	    8,285	    0		0	     0		  N/A
TX-Transaction
       8,019	    8,019	    0		0	     0		  N/A
JG-Job Scheduler1
       2,520	    2,520	    0		0	     0		  N/A
JG-Job Scheduler1 (queue lock)
       2,520	    2,520	    0		0	     0		  N/A
SJ-KTSJ Slave Task Cancel (Slave Task Cancel)
	 418	      422	    0		0	     0		  N/A
TT-Tablespace
	 268	      268	    0		0	     0		  N/A
JG-Job Scheduler1 (q mem clnup lck)
	 240	      240	    0		0	     0		  N/A
DD-ASM Local Disk Group
	 200	      200	    0		0	     0		  N/A
IS-Instance State
	  77	       77	    0		0	     0		  N/A
BU-Buddy Instance Context (recovery set construct)
	  67	       67	    0		0	     0		  N/A
CU-Cursor
	  24	       24	    0		0	     0		  N/A
WT-AWR CDB-Wide Table Lock
	  17	       17	    0		0	     0		  N/A
TO-Temp Object
	  12	       12	    0		0	     0		  N/A
SE-Session Migration
	  10	       10	    0		0	     0		  N/A
TH-Threshold Chain (metric threshold evaluation)
	  10	       10	    0		0	     0		  N/A
AF-Advisor Framework (task serialization)
	   7		7	    0		0	     0		  N/A
MR-Media Recovery
	   4		4	    0		0	     0		  N/A

Enqueue Activity			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
RS-Reclaimable Space (write alert level)
	   4		4	    0		0	     0		  N/A
DA-Instance DP Array (Slave Process Array)
	   3		3	    0		0	     0		  N/A
PR-Process Startup
	   3		3	    0		0	     0		  N/A
PV-KSV slave startup (syncstart)
	   3		3	    0		0	     0		  N/A
AE-Edition Lock (lock)
	   2		2	    0		0	     0		  N/A
FP-File Object (global fob contention)
	   2		2	    0		0	     0		  N/A
RS-Reclaimable Space (read alert level)
	   2		2	    0		0	     0		  N/A
SH-Active Session History Flushing
	   2		2	    0		0	     0		  N/A
SQ-Sequence Cache
	   1		1	    0		0	     0		  N/A
			  ------------------------------------------------------


Undo Segment Summary			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Min/Max TR (mins) - Min and Max Tuned Retention (minutes)
-> STO - Snapshot Too Old count,  OOS - Out of Space count
-> Undo segment block stats:
-> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed
-> eS - expired   Stolen,   eR - expired   Released,   eU - expired   reUsed

Undo   Num Undo       Number of  Max Qry   Max Tx Min/Max   STO/     uS/uR/uU/
 TS# Blocks (K)    Transactions  Len (s) Concurcy TR (mins) OOS      eS/eR/eU
---- ---------- --------------- -------- -------- --------- ----- --------------
   5	   19.0 	  7,302    1,001	5 38.7/38.7 0/0   0/0/0/0/0/0
			  ------------------------------------------------------

Undo Segment Stats			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Most recent 35 Undostat rows, ordered by Time desc

		Num Undo    Number of Max Qry  Max Tx Tun Ret STO/    uS/uR/uU/
End Time	  Blocks Transactions Len (s)	Concy  (mins) OOS     eS/eR/eU
------------ ----------- ------------ ------- ------- ------- ----- ------------
08-Feb 09:42	  18,978	7,302	1,001	    5	   39 0/0   0/0/0/0/0/0
			  ------------------------------------------------------


Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
AQ Background: interrupt	      1    0.0		   0	       21    0.0
AQ Coord jobx_kwsbgsgn l	     20    0.0		   0		0    N/A
AQ Message drive state o	      1    0.0		   0		0    N/A
AQ Sharded master pool l	     20    0.0		   0		0    N/A
AQ deq hash table latch 	      1    0.0		   0		0    N/A
ASM Keyed state latch		      8    0.0		   0		0    N/A
ASM allocation			 34,572    0.0		   0		0    N/A
ASM connection state lat	  1,880    0.0		   0		0    N/A
ASM db client latch		    596    0.0		   0		0    N/A
ASM map headers 		      6    0.0		   0		0    N/A
ASM map operation freeli	    128    0.0		   0		0    N/A
ASM map operation hash t      5,067,817    0.0	  0.0	   0		0    N/A
ASM network background l	  2,043    0.0		   0		0    N/A
ASM network state latch 	     18    0.0		   0		0    N/A
ASM remote client latch 	     10    0.0		   0		0    N/A
AWR Alerted Metric Eleme	  5,260    0.0		   0		0    N/A
Autotask management		     10    0.0		   0		0    N/A
Change Notification Hash	    213    0.0		   0		0    N/A
Column stats entry latch	      1    0.0		   0		0    N/A
Consistent RBA			  7,709    0.0		   0		0    N/A
DML lock allocation		 16,616    0.0		   0		0    N/A
Event Group Locks		     14    0.0		   0		0    N/A
FIB s.o chain latch		      2    0.0		   0		0    N/A
FOB consolidated s.o lis	      2    0.0		   0		0    N/A
File State Object Pool P	      1    0.0		   0		0    N/A
GCS logfile block		      1    0.0		   0		0    N/A
GCS logfile write queue 	      1    0.0		   0		0    N/A
Hang Manager wait event 	     40    0.0		   0	    7,088    0.0
I/O Staticstics latch		      1    0.0		   0		0    N/A
ILM Stats Stripe Latch		      1    0.0		   0		0    N/A
ILM Stats main anchor la	     56    0.0		   0		0    N/A
ILM access tracking exte	      1    0.0		   0		0    N/A
ILM activity tracking la	      1    0.0		   0		0    N/A
IM Global dictionary lat	      1    0.0		   0		0    N/A
IM Global dictionary que	      1    0.0		   0		0    N/A
IM Global dictionary rw 	      1    0.0		   0		0    N/A
IM area sb latch		      1    0.0		   0		0    N/A
IM area scb latch		      1    0.0		   0		0    N/A
IM emb latch			      1    0.0		   0		0    N/A
IM seg hdr latch		      1    0.0		   0		0    N/A
IMFS defer write list		      1    0.0		   0		0    N/A
IMXT hash table latch		      1    0.0		   0		0    N/A
IPC other latch 		      7    0.0		   0		0    N/A
IPC stats buffer allocat	      1    0.0		   0		0    N/A
In memory undo latch		      1    0.0		   0		0    N/A
JS Sh mem access		    122    0.0		   0		0    N/A
JS broadcast add buf lat	    138    0.0		   0		0    N/A
JS broadcast drop buf la	    138    0.0		   0		0    N/A
JS broadcast load blnc l	    138    0.0		   0		0    N/A
JS queue access latch		      1    0.0		   0		0    N/A
JS queue state obj latch	  5,082    0.0		   0		0    N/A
JS slv state obj latch		      1    0.0		   0		0    N/A
KCNIBR - invalid block r	      1    0.0		   0		0    N/A
KDCStatHash latch		      1    0.0		   0		0    N/A
KDFI Buffer Latch		      1    0.0		   0		0    N/A
KDFI Hash Bucket Latch		      1    0.0		   0		0    N/A
KDFI Hash Elem Latch		      1    0.0		   0		0    N/A
KDMADO action list latch	      1    0.0		   0		0    N/A
KDMADO bll latch		      1    0.0		   0		0    N/A
KDMADO latch			      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
KFC FX Hash Latch		      1    0.0		   0		0    N/A
KFC Hash Latch			      1    0.0		   0		0    N/A
KFCL LE Freelist		      1    0.0		   0		0    N/A
KFIAS client latch		      1    0.0		   0		0    N/A
KFIAS cluster latch		      1    0.0		   0		0    N/A
KFIAS endpoint latch		      1    0.0		   0		0    N/A
KFIAS node latch		      1    0.0		   0		0    N/A
KFIAS process latch		      1    0.0		   0		0    N/A
KFIAS queue latch		      1    0.0		   0		0    N/A
KFK SGA Libload latch		  4,400    0.0		   0		0    N/A
KFMD SGA			    345    0.0		   0		0    N/A
KGNFS-NFS:SHM structure 	      1    0.0		   0		0    N/A
KGNFS-NFS:SVR LIST		    201    0.0		   0		0    N/A
KJC message pool KGH cal	      1    0.0		   0		0    N/A
KJC message pool free li	183,747    0.0	  0.0	   0	  291,046    0.1
KJC message pool pending	      1    0.0		   0		0    N/A
KJCT flow control latch 	991,830    0.0	  0.0	   0		0    N/A
KMG MMAN ready and start	    200    0.0		   0		0    N/A
KSFS OFS ctx level paren	      1    0.0		   0		0    N/A
KSFS OFS req layer paren	      1    0.0		   0		0    N/A
KSFS OFS sess layer pare	      1    0.0		   0		0    N/A
KSFS Receive and Send Qu	      1    0.0		   0		0    N/A
KSFS id table parent lat	      1    0.0		   0		0    N/A
KSFS ksfs_node latch		      1    0.0		   0		0    N/A
KSFSD name cache parent 	      1    0.0		   0		0    N/A
KSGL LS Segment latch		      1    0.0		   0		0    N/A
KSGL SGA anchor latch		      1    0.0		   0		0    N/A
KSIPC ASPC anchor latch 	      1    0.0		   0		0    N/A
KSIPC SGA allocation par	     34    0.0		   0		0    N/A
KSIPCGSN Hash Table latc	      1    0.0		   0		0    N/A
KSIPCGSN Namespace latch	      1    0.0		   0		0    N/A
KSK PDB IO STAT 		      1    0.0		   0		0    N/A
KSRMA SGA anchor latch		      1    0.0		   0		0    N/A
KSRMF SGA anchor latch		      1    0.0		   0		0    N/A
KSWL SGA anchor latch		      1    0.0		   0		0    N/A
KSXR hang analysis phase	     93    0.0		   0		0    N/A
KSXR hang analysis phase	    219    0.0		   0		0    N/A
KTF sga latch			      4    0.0		   0	      201    0.0
KTILM latch			      1    0.0		   0		0    N/A
KTU in-memory txn table 	      1    0.0		   0		0    N/A
KTURMA ODPSCN latch		      1    0.0		   0		0    N/A
KTURMA SGA allocation pa	      1    0.0		   0		0    N/A
KWQMN job cache list lat	     84    0.0		   0		0    N/A
Latch for NonceHistory		      1    0.0		   0		0    N/A
Locator state objects po	      1    0.0		   0		0    N/A
Lost write change tracki	      1    0.0		   0		0    N/A
Lsod array latch		      8    0.0		   0		0    N/A
MGA asr alloc latch		     10    0.0		   0		0    N/A
MGA heap latch			     13    0.0		   0		0    N/A
MGA shared context latch	  1,099    0.0		   0		0    N/A
MGA shared context root 	     26    0.0		   0		0    N/A
MQL Tracking Latch		      0    N/A		   0	       12    0.0
Memory Management Latch 	      0    N/A		   0	      200    0.0
Memory Queue			      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Subscriber 	      1    0.0		   0		0    N/A
Message cache latch		      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
MinActiveScn Latch		     30    0.0		   0		0    N/A
Mutex				      1    0.0		   0		0    N/A
Mutex Stats			      1    0.0		   0		0    N/A
Nologging Standby SCN Ti	    199    0.0		   0		0    N/A
OS process			    434    0.0		   0		0    N/A
OS process allocation		  1,220    0.0		   0		0    N/A
OS process: request allo	      8    0.0		   0		0    N/A
PDB Hash Table Latch		      1    0.0		   0		0    N/A
PDB LRU structure		      1    0.0		   0		0    N/A
PL/SQL warning settings 	     10    0.0		   0		0    N/A
PX hash array latch		      1    0.0		   0		0    N/A
Parent latch for depende	      1    0.0		   0		0    N/A
Parent latch for query h	      1    0.0		   0		0    N/A
Parent latch for segment	      1    0.0		   0		0    N/A
QMT				      1    0.0		   0		0    N/A
Real-time descriptor lat	  2,368    0.0		   0		0    N/A
Report Request stats lat	     42    0.0		   0		0    N/A
Report Request struct la	      4    0.0		   0		0    N/A
Request holder compeltio	      7    0.0		   0		0    N/A
Retry Ht elm latch		      1    0.0		   0		0    N/A
Retry bkt latch 		      1    0.0		   0		0    N/A
SGA IO buffer pool latch	     10    0.0		   0	       10    0.0
SGA Logging Bkt Latch		      1    0.0		   0		0    N/A
SGA Logging Log Latch		  2,829    0.0		   0		0    N/A
SGA blob parent 		      1    0.0		   0		0    N/A
SGA bucket locks		      1    0.0		   0		0    N/A
SGA heap locks			      1    0.0		   0		0    N/A
SGA pool locks			      1    0.0		   0		0    N/A
SO private so latch		     11    0.0		   0		7    0.0
SQL memory manager latch	      1    0.0		   0	      200    0.0
SQL memory manager worka	 14,650    0.0		   0		0    N/A
SR Stats Stripe Latch		      1    0.0		   0		0    N/A
Sched IM Job latch		     11    0.0		   0		0    N/A
Sched InMem Job Cache		      1    0.0		   0		0    N/A
Shared B-Tree			     22    0.0		   0		0    N/A
Streams Generic 		      1    0.0		   0		0    N/A
Subscriber Ht elm latch 	      1    0.0		   0		0    N/A
Testing 			      1    0.0		   0		0    N/A
Token Manager			      1    0.0		   0		0    N/A
Txn Ht elm latch		      1    0.0		   0		0    N/A
Txn bkt latch			      1    0.0		   0		0    N/A
UM object latch 		      1    0.0		   0		0    N/A
Undo Hint Latch 		      0    N/A		   0		6    0.0
WCR: sync			      1    0.0		   0		0    N/A
Write State Object Pool 	      1    0.0		   0		0    N/A
X$KSFQP 			      1    0.0		   0		0    N/A
XDB NFS Security Latch		      1    0.0		   0		0    N/A
XDB unused session pool 	      1    0.0		   0		0    N/A
XDB used session pool		      1    0.0		   0		0    N/A
active checkpoint queue 	 30,313    0.0		   0		0    N/A
active service list		  2,718    0.0		   0	      560    0.0
archive destination		     22    0.0		   0		0    N/A
begin backup scn array		      4    0.0		   0		0    N/A
buffer pool			      1    0.0		   0		0    N/A
business card			      9    0.0		   0		0    N/A
cache buffer handles		     77    0.0		   0		0    N/A
cache buffers chains	     14,722,060    0.0	  0.1	   0	4,154,805    0.0
cache buffers lru chain       2,484,250    0.1	  0.0	   0	2,659,805    0.1
cache table scan latch		      7    0.0		   0		7    0.0
call allocation 		    230    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
change notification clie	      1    0.0		   0		0    N/A
channel handle pool latc	     22    0.0		   0		0    N/A
channel operations paren	  1,862    0.1	  0.0	   0		0    N/A
checkpoint queue latch	      1,242,252    0.0	  0.0	   0	  468,795    0.0
client/application info 	     66    0.0		   0		0    N/A
compile environment latc	     12    0.0		   0		0    N/A
cp handoff latch		      1    0.0		   0		0    N/A
cp pool latch			      1    0.0		   0		0    N/A
cp server hash latch		      1    0.0		   0		0    N/A
cp sga latch			     10    0.0		   0		0    N/A
cp srv type state latch 	    601    0.0		   0		0    N/A
cp srv type wait latch		      1    0.0		   0		0    N/A
cr slave free list		      1    0.0		   0		0    N/A
cvmap freelist lock		      1    0.0		   0		0    N/A
deferred cleanup latch		     10    0.0		   0		0    N/A
dispatcher info 		      4    0.0		   0		0    N/A
dml lock allocation		     10    0.0		   0		0    N/A
done queue latch		      1    0.0		   0		0    N/A
dtp latch			      8    0.0		   0		0    N/A
dummy allocation		     23    0.0		   0		0    N/A
eighth spare latch - X p	      1    0.0		   0		0    N/A
eleventh spare latch - c	      1    0.0		   0		0    N/A
enqueue freelist latch		      1    0.0		   0	   16,760    0.0
enqueue hash chains		 69,541    0.0	  0.0	   0		0    N/A
enqueues			      5    0.0		   0		0    N/A
error message lists		     18    0.0		   0		0    N/A
fast space usage latch		      4    0.0		   0		0    N/A
fifteenth spare latch - 	      1    0.0		   0		0    N/A
file cache latch		    143    0.0		   0		0    N/A
flash file access latch 	      1    0.0		   0		0    N/A
flashback copy			      1    0.0		   0		0    N/A
fourteenth spare latch -	      1    0.0		   0		0    N/A
fourth Audit Vault latch	      1    0.0		   0		0    N/A
gc element		      9,470,003    0.0	  0.0	   0	  840,956    0.0
gc imc list			    320    0.0		   0		0    N/A
gc xid list			     88    0.0		   0		0    N/A
gcs affinity object free	      3    0.0		   0		0    N/A
gcs commit scn state		      1    0.0		   0		0    N/A
gcs nodemap pool		 14,413    0.0		   0		0    N/A
gcs opaque info freelist	 26,521    0.0		   0		0    N/A
gcs partitioned table ha      6,420,954    0.0	  0.0	   0	   28,492    0.0
gcs pcm hashed value buc	      1    0.0		   0		0    N/A
gcs remaster request que	      2    0.0		   0		0    N/A
gcs remastering latch		 14,145    0.0	  0.0	   0	      223    0.0
gcs resource freelist	      1,018,852    0.0	  0.0	   0	  764,529    0.0
gcs resource hash	      7,495,835    0.0	  0.1	   0	      169    0.0
gcs resource scan list		      1    0.0		   0		0    N/A
gcs resource timerq list	      1    0.0		   0		0    N/A
gcs resource validate li	      1    0.0		   0		0    N/A
gcs shadows freelist		176,520    0.0		   0		0    N/A
ges cached resource list	 13,125    0.0	  0.0	   0	   18,411    0.0
ges deadlock list		    146    0.0		   0		0    N/A
ges domain table		 36,813    0.0		   0		0    N/A
ges enqueue table freeli	 19,551    0.0	  0.0	   0		0    N/A
ges group table 		 37,703    0.0		   0		0    N/A
ges process hash list		  6,771    0.0		   0		0    N/A
ges process parent latch	 76,819    0.0		   0		0    N/A
ges process table freeli	      8    0.0		   0		0    N/A
ges remote lock freelist	    105    0.0		   0		0    N/A
ges resource hash list		 49,608    0.0	  0.4	   0	      865    0.0

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
ges resource scan list		      1    0.0		   0		0    N/A
ges resource table freel	  1,455    0.0		   0		0    N/A
ges s-lock bitvec freeli	    234    0.0		   0		0    N/A
ges timeout list		    169    0.0		   0		4    0.0
ges value block free lis	      1    0.0		   0		0    N/A
global tx hash mapping		      1    0.0		   0		0    N/A
granule from data transf	      1    0.0		   0		0    N/A
gws:Sharding global desc	     40    0.0		   0		0    N/A
hash table Sql Plan Find	     21    0.0		   0		0    N/A
hash table column usage 	    179    0.0		   0	      207    0.0
hash table expression us	      1    0.0		   0		0    N/A
hash table sql contorl l	      1    0.0		   0		0    N/A
heartbeat check 		      1    0.0		   0	      240    0.0
heartbeat structure mana	      0    N/A		   0	      301    0.0
imc buf hdl lat 		      1    0.0		   0		0    N/A
imc cr clone buf		      1    0.0		   0		0    N/A
imc hash lat			      1    0.0		   0		0    N/A
imc sj lat			      1    0.0		   0		0    N/A
imc srchsp lat			      1    0.0		   0		0    N/A
imc-txn-wrk-lat 		      1    0.0		   0		0    N/A
in-memory area latch		      1    0.0		   0		0    N/A
in-memory columnar segme	      1    0.0		   0		0    N/A
in-memory columnar ts ex	      1    0.0		   0		0    N/A
in-memory global pool la	      1    0.0		   0		0    N/A
interrupt manipulation		     33    0.0		   0		0    N/A
intra txn parallel recov	      1    0.0		   0		0    N/A
io pool granule list		      8    0.0		   0		0    N/A
io pool granule metadata	     17    0.0		   0		0    N/A
job workq parent latch		      1    0.0		   0		0    N/A
job_queue_processes para	     11    0.0		   0		0    N/A
k2q global data latch		    402    0.0		   0		0    N/A
k2q lock allocation		      1    0.0		   0		0    N/A
kKCN Cqn SGA			      1    0.0		   0		0    N/A
kcb DW scan objtemp hash	      1    0.0		   0		0    N/A
kcn buffer chains		      1    0.0		   0		0    N/A
kdlx hb parent latch		      1    0.0		   0		0    N/A
kgb parent			      1    0.0		   0		0    N/A
kgnfs mount latch		      1    0.0		   0		0    N/A
kjbr roi instance map		      1    0.0		   0		0    N/A
kjci objects freelist la	  1,447    0.0		   0		0    N/A
kjci process context lat	  1,191    1.3	  0.0	   0	   34,573    0.0
kjci process list latch 	    569    0.0		   0		0    N/A
kjci request sequence la	    159    0.0		   0		0    N/A
kjcipctx state object fr	      5    0.0		   0		0    N/A
kjoedcso state object fr	     10    0.0		   0		0    N/A
kjoeq omni enqueue hash 	      1    0.0		   0		0    N/A
kjoer owner hash bucket 	      1    0.0		   0		0    N/A
kjpm my inst data		     20    0.0		   0		0    N/A
kjsc Request obj freelis	      8    0.0		   0		0    N/A
kjsc Ring Buffer obj fre	      4    0.0		   0		0    N/A
kjsc protect control req	      4    0.0		   0	    6,046    0.0
kjsc protect warm up con	    116    0.0		   0		0    N/A
kjsca protect pkey hash 	  4,544    0.0		   0		0    N/A
kjsca protect service ha	  1,503    0.0		   0		0    N/A
kjscpss state object fre	      4    0.0		   0		0    N/A
kokc descriptor allocati	     16    0.0		   0		0    N/A
kpoxft latch			      0    N/A		   0		2    0.0
krso process			     21    0.0		   0		0    N/A
ksevn object root latch 	    200    0.0		   0		0    N/A
ksfv messages			      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
ksi resource reuse count	      1    0.0		   0		0    N/A
ksim group membership ca	    117    0.0		   0		0    N/A
ksim membership request 	      0    N/A		   0	      322    0.0
ksns object latch		      1    0.0		   0		0    N/A
kss move lock			      7    0.0		   0		0    N/A
ksuosstats global area		     48    0.0		   0	      230    0.0
ksutcpistat latch		      1    0.0		   0		0    N/A
ksv allocation latch		     22    0.0		   0		0    N/A
ksv class latch 		 13,230    0.0	  0.4	   0		0    N/A
ksv msg queue latch		     54    0.0		   0	       53    0.0
ksxp shared latch		      8    0.0		   0		0    N/A
ksxp so latch			      8    0.0		   0		0    N/A
ksz_so allocation latch 	      8    0.0		   0		0    N/A
ktfbn latch			    131    0.0		   0		0    N/A
ktm adg jrnls			      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg space			      1    0.0		   0		0    N/A
ktm adg stages			      1    0.0		   0		0    N/A
ktm adg worklink		      1    0.0		   0		0    N/A
ktm global data 		     30    0.0		   0		0    N/A
ktm prv jrnls			      1    0.0		   0		0    N/A
ktmpj HT ls			      1    0.0		   0		0    N/A
kwqbsn:qsga			     21    0.0		   0		0    N/A
kwslbmdl: metadata latch	     21    0.0		   0		0    N/A
kwslbql: queue latch		      1    0.0		   0		0    N/A
kwslbutl: uncommitted tx	      1    0.0		   0		0    N/A
kwsptQcachLt: queue cach	      1    0.0		   0		0    N/A
kwsptTrncTsksLt: trunc t	      1    0.0		   0		0    N/A
kwsptjobAdPtLt: AdPt lis	     14    0.0		   0		0    N/A
kwsslLat: skiplist latch	      1    0.0		   0		0    N/A
kxfxscanrate_latch		      1    0.0		   0		0    N/A
lgwr LWN SCN			  7,709    0.0		   0		0    N/A
list of block allocation	 29,988    0.0		   0		0    N/A
loader state object free	     24    0.0		   0		0    N/A
lob segment dispenser la	     10    0.0		   0		0    N/A
lob segment hash table l	     31    0.0		   0		0    N/A
lob segment query latch 	      1    0.0		   0		0    N/A
lock DBA buffer during m	      1    0.0		   0		0    N/A
log write info			      0    N/A		   0	    7,752    0.9
log write worker phase		      1    0.0		   0		0    N/A
logical standby cache		      1    0.0		   0		0    N/A
logminer context allocat	      1    0.0		   0		0    N/A
logminer local			      1    0.0		   0		0    N/A
logminer work area		      1    0.0		   0		0    N/A
longop free list parent 	      1    0.0		   0		0    N/A
managed standby 		     20    0.0		   0		0    N/A
message bitmap latch		      1    0.0		   0		0    N/A
message pool operations 	    692    0.3	  0.0	   0		0    N/A
messages			124,683    0.0	  0.0	   0		0    N/A
msg queue latch 		      1    0.0		   0		0    N/A
multiblock read objects 	 79,924    0.0	  0.0	   0		0    N/A
name-service memory obje	     58    0.0		   0		0    N/A
name-service namespace b	  3,103    0.0		   0		0    N/A
name-service pending que	     26    0.0		   0		0    N/A
name-service request que	  6,202    0.0		   0		0    N/A
ncodef allocation latch 	     10    0.0		   0		0    N/A
ninth spare latch - X pa	      1    0.0		   0		0    N/A
object queue header free	  1,456    0.0		   0		0    N/A
object queue header oper      5,767,845    0.0	  0.0	   0	    2,264    0.0

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
object queue memory		     18    0.0		   0		0    N/A
object stats modificatio	     12    0.0		   0		0    N/A
parallel query alloc buf	     79    0.0		   0	       90    0.0
parallel query stats		     20    0.0		   0		0    N/A
parallel txn reco latch 	    636    0.0		   0		0    N/A
parameter table manageme	     82    0.0		   0		0    N/A
pdb enqueue hash chains 	      1    0.0		   0		0    N/A
peshm				      1    0.0		   0		0    N/A
pesom_free_list 		      1    0.0		   0		0    N/A
pesom_hash_node 		      1    0.0		   0		0    N/A
pkey global statistics		      1    0.0		   0		0    N/A
pmon dead latch 		      9    0.0		   0		0    N/A
post/wait queue 		 35,737    0.1	  0.0	   0	   36,000    0.1
process allocation		  2,989    0.0		   0		0    N/A
process group creation		      8    0.0		   0		0    N/A
process memory detail		      1    0.0		   0		0    N/A
process pkey statistics 	      1    0.0		   0		0    N/A
process queue			     37    0.0		   0		0    N/A
process queue reference 	  1,071    0.0		   0	      152    0.0
qmn task queue latch		     84    0.0		   0		0    N/A
quarantine object		     10    0.0		   0		0    N/A
query server freelists		     41    0.0		   0		0    N/A
query server process		    436    0.0		   0		0    N/A
queued dump request		      2    0.0		   0		0    N/A
queuing load statistics 	      1    0.0		   0		0    N/A
read-moslty lock queue u	      1    0.0		   0		0    N/A
recovery domain hash buc	  2,262    0.0		   0		0    N/A
redo allocation 		 25,172    0.8	  0.0	   0	  514,726    0.2
redo copy			      1    0.0		   0	  515,086    0.0
redo transport task		      1    0.0		   0		0    N/A
redo writing			 55,385    0.0	  0.0	   0		0    N/A
remote tool request latc	     12    0.0		   0		0    N/A
resmgr group change latc	    124    0.0		   0		0    N/A
resmgr:active threads		    213    0.0		   0	    5,955    0.0
resmgr:actses change gro	     68    0.0		   0		0    N/A
resmgr:actses change sta	      3    0.0		   0		0    N/A
resmgr:free threads list	    128    0.0		   0		0    N/A
resmgr:plan CPU method		      1    0.0		   0		0    N/A
resmgr:plan change alloc	      1    0.0		   0		0    N/A
resmgr:plan change latch	      1    0.0		   0		0    N/A
resmgr:resource group CP	     21    0.0		   0		0    N/A
resmgr:schema config		    106    0.0		   0	       10    0.0
resmgr:session queuing		      1    0.0		   0		0    N/A
resumable state object		      4    0.0		   0		0    N/A
row cache objects		      1    0.0		   0		0    N/A
rt rmv count latch		      0    N/A		   0	      301    0.0
second Audit Vault latch	      1    0.0		   0		0    N/A
segmented array pool		      2    0.0		   0		0    N/A
sequence cache			     18    0.0		   0		0    N/A
service drain list		    602    0.0		   0		0    N/A
session allocation		  7,579    0.0		   0	    7,560    0.0
session idle bit		 15,461    0.0		   0		0    N/A
session queue latch		      1    0.0		   0		0    N/A
session state list latch	     22    0.0		   0		0    N/A
session statistics		     23    0.0		   0		0    N/A
session switching		     15    0.0		   0		0    N/A
session timer			    200    0.0		   0		0    N/A
seventh spare latch - X 	      1    0.0		   0		0    N/A
sga hash table parent la	      1    0.0		   0		0    N/A
shard latch			      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
shardgroup list latch		     25    0.0		   0		0    N/A
shared pool			  6,264    0.0		   0		9    0.0
shared pool sim alloc		      1    0.0		   0		0    N/A
shared pool simulator		    509    0.0		   0		0    N/A
shared server configurat	    202    0.0		   0		0    N/A
sim partition latch		      1    0.0		   0		0    N/A
simulator hash latch		566,728    0.0		   0		0    N/A
simulator lru latch		      1    0.0		   0	  375,725    0.0
sixth spare latch - X pa	      1    0.0		   0		0    N/A
sort extent pool		     98    0.0		   0		0    N/A
space background task la	  1,567   49.0	  0.8	   0	      397    3.3
state object free list		      2    0.0		   0		0    N/A
statistics aggregation		    145    0.0		   0		0    N/A
subscriber Ht bkt		      1    0.0		   0		0    N/A
tablespace key chain		      1    0.0		   0		0    N/A
temp lob duration state 	      4    0.0		   0		0    N/A
tenth spare latch - X pa	      1    0.0		   0		0    N/A
test excl. parent l0		      1    0.0		   0		0    N/A
test excl. parent2 l0		      1    0.0		   0		0    N/A
test excl. parent2 lmid 	      1    0.0		   0		0    N/A
test mixed exclusive		      1    0.0		   0		0    N/A
test mode exclusive		      1    0.0		   0		0    N/A
test open exclusive		      1    0.0		   0		0    N/A
test pdb exclusive		      1    0.0		   0		0    N/A
test shared parent2 lmid	      1    0.0		   0		0    N/A
thirteenth spare latch -	      1    0.0		   0		0    N/A
threshold alerts latch		     20    0.0		   0		0    N/A
transaction allocation		    294    0.0		   0		0    N/A
twelfth spare latch - ch	      1    0.0		   0		0    N/A
twenty-fifth spare latch	      1    0.0		   0		0    N/A
twenty-first spare latch	      1    0.0		   0		0    N/A
twenty-fourth spare latc	      1    0.0		   0		0    N/A
twenty-second spare latc	      1    0.0		   0		0    N/A
twenty-third spare latch	      1    0.0		   0		0    N/A
undo global data		 46,415    0.0	  0.0	   0		0    N/A
virtual circuit buffers 	      1    0.0		   0		0    N/A
virtual circuit holder		      1    0.0		   0		0    N/A
virtual circuit queues		      1    0.0		   0		0    N/A
			  ------------------------------------------------------


Latch Sleep Breakdown			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by misses desc

				       Get				   Spin
Latch Name			  Requests	 Misses      Sleeps	   Gets
-------------------------- --------------- ------------ ----------- -----------
cache buffers lru chain 	 2,484,250	  2,121 	 39	  2,083
space background task latc	     1,567	    768 	618	    205
gc element			 9,470,003	    693 	 17	    678
gcs resource hash		 7,495,835	    397 	 38	    360
KJCT flow control latch 	   991,830	    310 	  6	    304
object queue header operat	 5,767,845	    286 	  3	    283
gcs resource freelist		 1,018,852	    274 	  1	    273
KJC message pool free list	   183,747	     78 	  2	     76
messages			   124,683	     47 	  1	     46
checkpoint queue latch		 1,242,252	     23 	  1	     22
cache buffers chains		14,722,060	     20 	  1	     19
ges resource hash list		    49,608	      8 	  3	      5
ksv class latch 		    13,230	      5 	  2	      3
			  ------------------------------------------------------


Latch Miss Sources			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> only latches with sleeps are shown
-> ordered by name, sleeps desc

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
KJC message pool free li kjcspfmbq: free vector of	  0	     2	      0
KJCT flow control latch  kjctcsnd: send normal mess	  0	     4	      2
KJCT flow control latch  kjcts_sedeqv3: dequeue a v	  0	     2	      1
cache buffers chains	 kcbzibmlt: multi-block rea	  0	     1	      0
cache buffers lru chain  kcbzgb_2			  0	    32	      3
cache buffers lru chain  kcbzgws			  0	     7	      0
checkpoint queue latch	 kcbklbc_cql			  0	     1	      0
gc element		 kclollnumiter			  0	     8	      0
gc element		 kclnfndnewm			  0	     6	      3
gc element		 KCLUNLNK			  0	     1	      1
gc element		 kclplz 			  0	     1	      0
gc element		 kclrwrite			  0	     1	      0
gc element		 kclulb 			  0	     1	      1
gcs remastering latch	 kjfcdrmrfg drmfrz step 	  0	     1	      0
gcs resource freelist	 kjbrralc: reserve allocati	  0	     1	      0
gcs resource hash	 kclfwrite1			  0	    11	      3
gcs resource hash	 kjbclose_remaster		  0	     8	      4
gcs resource hash	 kjbrrcres_99			  0	     6	      0
gcs resource hash	 kjbcropen			  0	     4	      8
gcs resource hash	 kjbldrmrpst			  0	     3	      0
gcs resource hash	 kjbopen			  0	     3	      2
gcs resource hash	 kjblocalobj_nolock		  0	     1	      0
gcs resource hash	 kjbmprlst: shadow		  0	     1	      3
gcs resource hash	 kjbrrcfwst			  0	     1	      0
ges resource hash list	 kjlmfnd: search for lockp	  0	     2	      0
ges resource hash list	 kjakcai: search for resp b	  0	     1	      0
ksv class latch 	 ksvclsl: checkpool		  0	     2	      0
messages		 ksarcv: after wait		  0	     1	      0
object queue header oper kcbo_link_q			  0	     1	      0
object queue header oper kcbo_switch_mq_bg		  0	     1	      1
object queue header oper kcbo_unlink_q			  0	     1	      2
space background task la ktsj_grab_task 		  0	   456	    594
space background task la ktsj_detach_task		  0	   106	     24
space background task la ktsj_smco_purgeexpired 	  0	    51	      0
space background task la ktsj_smco_movetasks		  0	     5	      0
			  ------------------------------------------------------

Mutex Sleep Summary			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by number of sleeps desc

									 Wait
Mutex Type	      Location				     Sleeps    Time (ms)
--------------------- -------------------------------- ------------ ------------
Cursor Pin	      kkslce [KKSCHLPIN2]			 35	      39
			  ------------------------------------------------------


Parent Latch Statistics 		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Child Latch Statistics			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


Segments by Logical Reads		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Logical Reads:       3,389,562
-> Captured Segments account for   98.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				 Logical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404    1,679,472   49.55
USER2		     IOPS
CF1				TABLE	   73409      73415    1,465,328   43.23
USER1		     IOPS
I_CF1				INDEX	   73408      73408	  81,968    2.42
USER2		     IOPS
I_CF1				INDEX	   73422      73422	  72,800    2.15
SYS		     SYSAUX
WRH$_SYSSTAT_PK      3773525_33 INDEX	   73783      73783	   4,768     .14
			  ------------------------------------------------------

Segments by Physical Reads		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Physical Reads:       2,206,194
-> Captured Segments account for  102.2% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404    1,177,720   53.38
USER2		     IOPS
CF1				TABLE	   73409      73415    1,075,845   48.76
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	      25     .00
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	      25     .00
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	      18     .00
			  ------------------------------------------------------

Segments by Physical Read Requests	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Physical Read Requests:       2,206,159
-> Captured Segments account for  102.2% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			       Phys Read
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404    1,177,720   53.38
USER2		     IOPS
CF1				TABLE	   73409      73415    1,075,845   48.77
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	      25     .00
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	      25     .00
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	      18     .00
			  ------------------------------------------------------

Segments by UnOptimized Reads		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total UnOptimized Read Requests:	  2,206,159
-> Captured Segments account for  102.2% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			     UnOptimized
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404    1,177,720   53.38
USER2		     IOPS
CF1				TABLE	   73409      73415    1,075,845   48.77
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	      25     .00
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	      25     .00
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	      18     .00
			  ------------------------------------------------------

Segments by Optimized Reads		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Direct Physical Reads	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Physical Writes		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Physical Writes:	  354,758
-> Captured Segments account for   94.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404	 173,151   48.81
USER2		     IOPS
CF1				TABLE	   73409      73415	 161,450   45.51
SYS		     SYSAUX
WRH$_EVENT_HISTOGRAM 3773525_33 INDEX	   73834      73834	      52     .01
SYS		     SYSAUX
WRH$_SQLSTAT_INDEX   3773525_33 INDEX	   73749      73749	      31     .01
SYS		     SYSAUX
WRH$_CON_SYSTEM_EVEN 3773525_33 INDEX	   73894      73894	      22     .01
			  ------------------------------------------------------

Segments by Physical Write Requests	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Physical Write Requests:	  303,110
-> Captured Segments account for   99.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			      Phys Write
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404	 154,234   50.88
USER2		     IOPS
CF1				TABLE	   73409      73415	 146,786   48.43
SYS		     SYSAUX
WRH$_EVENT_HISTOGRAM 3773525_33 INDEX	   73834      73834	      21     .01
SYS		     SYSAUX
WRH$_SQLSTAT_INDEX   3773525_33 INDEX	   73749      73749	      18     .01
SYS		     SYSAUX
WRH$_SYSSTAT_PK      3773525_33 INDEX	   73783      73783	      16     .01
			  ------------------------------------------------------

Segments by Direct Physical Writes	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Direct Physical Writes:	      49
-> Captured Segments account for   12.2% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				  Direct
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	       2    4.08
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	       2    4.08
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	       2    4.08
			  ------------------------------------------------------

Segments by Table Scans 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Table Scans:		    1
-> Captured Segments account for  100.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				   Table
Object Name	       Name	Type	    Obj#   Dataobj#	   Scans  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSTEM
I_OBJ5				INDEX	      40	 40	       1  100.00
			  ------------------------------------------------------

Segments by DB Blocks Changes		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> % of Capture shows % of DB Block Changes for each top segment compared
-> with total DB Block Changes for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				DB Block    % of
Object Name	       Name	Type	    Obj#   Dataobj#	 Changes Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER1		     IOPS
CF1				TABLE	   73402      73404	 251,600   52.62
USER2		     IOPS
CF1				TABLE	   73409      73415	 219,888   45.99
SYS		     SYSAUX
WRH$_SYSSTAT_PK      3773525_33 INDEX	   73783      73783	   1,552     .32
SYS		     TEMP
SYS_TEMP_0FD9DFEE4_3		TABLE 4.2550E+09    5156992	   1,408     .29
SYS		     SYSTEM
COL_USAGE$			TABLE	     671	671	     576     .12
			  ------------------------------------------------------


Segments by Row Lock Waits		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by ITL Waits			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Buffer Busy Waits		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Global Cache Buffer Busy	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> % of Capture shows % of GC Buffer Busy for each top segment compared
-> with GC Buffer Busy for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								      GC
		     Subobject	Obj.				  Buffer    % of
Object Name	       Name	Type	    Obj#   Dataobj#	    Busy Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSTEM
SEG$				TABLE	      14	  8	       2  100.00
			  ------------------------------------------------------


Segments by CR Blocks Received		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total CR Blocks Received:	      11,443
-> Captured Segments account for   99.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								   CR
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER2		     IOPS
CF1				TABLE	   73409      73415	   9,482   82.86
USER1		     IOPS
CF1				TABLE	   73402      73404	   1,764   15.42
SYS		     SYSAUX
WRH$_SQL_PLAN			TABLE	   11147      11147	      28     .24
SYS		     SYSAUX
WRH$_SEG_STAT_OBJ		TABLE	   11339      11339	      20     .17
SYS		     SYSAUX
WRH$_PARAMETER_PK    3773525_33 INDEX	   73787      73787	      10     .09
			  ------------------------------------------------------

Segments by Current Blocks Received	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Current Blocks Received:	   54,999
-> Captured Segments account for   99.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								 Current
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER2		     IOPS
CF1				TABLE	   73409      73415	  48,733   88.61
USER1		     IOPS
CF1				TABLE	   73402      73404	   5,262    9.57
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	     108     .20
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	     108     .20
SYS		     SYSAUX
WRH$_SQLSTAT_INDEX   3773525_33 INDEX	   73749      73749	      29     .05
			  ------------------------------------------------------

Segments by Global Cache Remote Grants	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Total Global Cache Remote Grants:	   1,504,554
-> Captured Segments account for   99.9% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								      GC
		     Subobject	Obj.				  Remote
Object Name	       Name	Type	    Obj#   Dataobj#	  Grants  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER2		     IOPS
CF1				TABLE	   73409      73415	 889,246   59.10
USER1		     IOPS
CF1				TABLE	   73402      73404	 614,084   40.82
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	      21     .00
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	      19     .00
SYS		     SYSAUX
WRH$_SEG_STAT	     3773525_33 TABLE	   73789      73789	      19     .00
			  ------------------------------------------------------


Dictionary Cache Stats			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Pct Misses"  should be very low (< 2% in most cases)
-> "Final Usage" is the number of cache entries being used

				   Get	  Pct	 Scan	Pct	 Mod	  Final
Cache			      Requests	 Miss	 Reqs  Miss	Reqs	  Usage
------------------------- ------------ ------ ------- ----- -------- ----------
dc_awr_control			    14	 28.6	    0	N/A	   0	      1
dc_global_oids			   588	  0.2	    0	N/A	   0	    173
dc_histogram_data		   159	 23.9	    0	N/A	   0	  2,993
dc_histogram_defs		   291	 28.2	    0	N/A	   0	  4,779
dc_objects			 1,638	  1.5	    0	N/A	   0	  1,896
dc_props			   491	  0.0	    0	N/A	   0	      3
dc_rollback_segments		 3,031	  0.0	    0	N/A	   0	    320
dc_segments			   133	 11.3	    0	N/A	  14	    582
dc_sequences			     3	 33.3	    0	N/A	   3	      3
dc_tablespaces			   139	  0.0	    0	N/A	   0	      7
dc_users			   132	  0.0	    0	N/A	   0	    206
outstanding_alerts		     3	 66.7	    0	N/A	   0	      3
			  ------------------------------------------------------

Dictionary Cache Stats (RAC)		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Library Cache Activity			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations
--------------- ------------ ------ -------------- ------ ---------- --------
BODY			  14	0.0	       164    0.0	   0	    0
CLUSTER 		   4	0.0		 4    0.0	   0	    0
EDITION 		   2	0.0		 4    0.0	   0	    0
HINTSET OBJECT		   6   16.7		 6   16.7	   0	    0
INDEX			   1	0.0		 1  100.0	   1	    0
QUEUE			  60	0.0		60    0.0	   0	    0
SQL AREA		 600	1.0	    53,017    0.1	  12	    1
SQL AREA BUILD		  20   65.0		 0    N/A	   0	    0
SQL AREA STATS		  18   44.4		18   44.4	   0	    0
TABLE/PROCEDURE 	 118	0.0	     1,071    3.1	  18	    0
TRANSFORMATION		  60	0.0		60    0.0	   0	    0
TRIGGER 		   3	0.0		 3    0.0	   0	    0
			  ------------------------------------------------------

Library Cache Activity (RAC)		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		    GES Lock	  GES Pin      GES Pin	 GES Inval GES Invali-
Namespace	    Requests	 Requests     Releases	  Requests     dations
--------------- ------------ ------------ ------------ ----------- -----------
BODY			   0	      155	   155		 0	     0
CLUSTER 		   4		4	     4		 0	     0
EDITION 		   2		2	     2		 0	     0
HINTSET OBJECT		   6		6	     6		 0	     0
INDEX			   1		1	     1		 0	     0
QUEUE			  60	       60	    60		 0	     0
TABLE/PROCEDURE 	 194	      932	   932		 0	     0
TRANSFORMATION		  60	       60	    60		 0	     0
TRIGGER 		   0		3	     3		 0	     0
			  ------------------------------------------------------


Memory Dynamic Components		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Min/Max sizes since instance startup
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
-> ordered by Component

		 Begin Snap	Current 	Min	    Max   Oper Last Op
Component	  Size (Mb)   Size (Mb)   Size (Mb)   Size (Mb)  Count Typ/Mod
--------------- ----------- ----------- ----------- ----------- ------ -------
ASM Buffer Cach 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 16K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 2K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 32K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 4K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 8K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT buffer	   7,872.00    7,872.00    7,808.00    7,872.00      0 GRO/DEF
Data Transfer C 	.00	    .00 	.00	    .00      0 STA/
In Memory RO Ex 	.00	    .00 	.00	    .00      0 STA/
In Memory RW Ex 	.00	    .00 	.00	    .00      0 STA/
In-Memory Area		.00	    .00 	.00	    .00      0 STA/
KEEP buffer cac 	.00	    .00 	.00	    .00      0 STA/
PGA Target	   3,232.00    3,232.00    3,232.00    3,232.00      0 STA/
RECYCLE buffer		.00	    .00 	.00	    .00      0 STA/
SGA Target	   9,664.00    9,664.00    9,664.00    9,664.00      0 STA/
Shared IO Pool	     128.00	 128.00      128.00	 128.00      0 STA/
java pool		.00	    .00 	.00	    .00      0 STA/
large pool	      64.00	  64.00       64.00	  64.00      0 STA/
memoptimize buf 	.00	    .00 	.00	    .00      0 STA/
shared pool	   1,568.00    1,568.00    1,568.00    1,632.00      0 SHR/DEF
streams pool		.00	    .00 	.00	    .00      0 STA/
unified pga poo 	.00	    .00 	.00	    .00      0 STA/
			  ------------------------------------------------------

Memory Resize Operations Summary	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Memory Resize Ops			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Process Memory Summary			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> B: Begin Snap   E: End Snap
-> All rows below contain absolute values (i.e. not diffed over the interval)
-> Max Alloc is Maximum PGA Allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by Begin/End snapshot, Alloc (MB) desc
-> Top 10 containers by Alloc (MB) at end snapshot time are displayed

							     Hist
				     Avg  Std Dev     Max     Max
		Alloc	   Used    Alloc    Alloc   Alloc   Alloc    Num    Num
   Category	 (MB)	   (MB)     (MB)     (MB)    (MB)    (MB)   Proc  Alloc
 - -------- --------- --------- -------- -------- ------- ------- ------ ------
B Freeable     192.8	    .0	    6.0     10.6      43     N/A     32     32
  Other        573.5	   N/A	    5.2      8.0      39      39    110    110
  PL/SQL	10.7	   9.7	     .1       .4       2       3     92     92
  SQL		 3.2	   1.9	     .1       .2       1      11     43     34
  Total        780.2	  11.7	   11.4     19.1      84      52    277    268
E Freeable     189.4	    .0	    5.7     10.2      43     N/A     33     33
  Other        566.0	   N/A	    5.2      8.2      42      42    108    108
  PL/SQL	10.2	   9.2	     .1       .4       2       3     90     90
  SQL		 2.9	   1.9	     .1       .2       1      11     41     32
  Total        768.4	  11.1	   11.2     19.0      87      56    272    263
			  ------------------------------------------------------

SGA Memory Summary			   DB/Inst: P30DB/p30db2  Snaps: 62-63

						      End Size (Bytes)
SGA regions			Begin Size (Bytes)	(if different)
------------------------------ ------------------- -------------------
Database Buffers		     8,388,608,000
Fixed Size				12,445,928
Redo Buffers				21,106,688
Variable Size			     1,711,276,032
			       -------------------
sum				    10,133,436,648
			  ------------------------------------------------------

SGA breakdown difference by Pool and Name  DB/Inst: P30DB/p30db2  Snaps: 62-63
-> ordered by Pool, Name
-> N/A value for Begin MB or End MB indicates the size of that Pool/Name was
   insignificant, or zero in that snapshot

Pool   Name				    Begin MB	     End MB  % Diff
------ ------------------------------ -------------- -------------- -------
large  PX msg pool				15.0	       15.0    0.00
large  free memory				48.6	       48.6    0.00
shared ASH buffers				16.0	       16.0    0.00
shared KGLH0					45.0	       42.9   -4.57
shared KJSC rnb slots				18.4	       17.8   -3.11
shared SO private sga				29.0	       29.0    0.00
shared SQLA				       275.0	      274.8   -0.07
shared db_block_hash_buckets			32.0	       32.0    0.00
shared free memory			       114.2	      117.9    3.27
shared gc name table				32.0	       32.0    0.00
shared gcs dynamic resources			25.4	       25.4    0.00
shared gcs dynamic resources for		91.3	       91.3    0.00
shared gcs resources			       264.5	      264.5    0.00
shared gcs resv res hash bucket 		48.0	       48.0    0.00
shared gcs shadows			       144.3	      144.3    0.00
shared ges big msg buffers			26.3	       26.3    0.00
shared ksunfy_meta 1				25.0	       25.0    0.00
shared row cache				  .0		 .0    0.00
       buffer_cache			     7,872.0	    7,872.0    0.00
       fixed_sga				11.9	       11.9    0.00
       log_buffer				20.1	       20.1    0.00
       shared_io_pool			       128.0	      128.0    0.00
			  ------------------------------------------------------


Replication System Resource Usage	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication SGA Usage			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


GoldenGate Capture			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Capture Rate 		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Reader 		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Server 		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator Rate	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Reader and Server Rate    DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


XStream Capture 			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Capture Rate			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Reader			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Server			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator Rate		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Reader and Server Rate	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


Table Statistics by DML Operations	   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Table Statistics by Conflict Resolutions   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Large Transaction Statistics   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Long Running Transaction StatisticsDB/Inst: P30DB/p30db2  Snaps: 6

		  No data exists for this section of the report.
			  ------------------------------------------------------


Advanced Queue CPU/IO Usage		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffered Queues 			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffered Queue Subscribers		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Rule Set				   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues Rate			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queue Subscribers		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------


Resource Limit Stats			       DB/Inst: P30DB/p30db2  Snap: 63
-> Only rows with Current or Maximum Utilization > 80% of Limit are shown
-> For "UNLIMITED" resources, rows whose Current or Maximum Utilization
   exceeds 2*Initial Allocation are shown
-> Ordered by Resource Name

				  Current      Maximum	   Initial
Resource Name			Utilization  Utilization Allocation   Limit
------------------------------ ------------ ------------ ---------- ----------
ges_cache_ress			      2,762	   3,530	  0  UNLIMITED
			  ------------------------------------------------------

Shared Servers Activity 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Values represent averages for all samples

   Avg Total   Avg Active    Avg Total	 Avg Active    Avg Total   Avg Active
 Connections  Connections Shared Srvrs Shared Srvrs  Dispatchers  Dispatchers
------------ ------------ ------------ ------------ ------------ ------------
	   0		0	     1		  0	       1	    0
			  ------------------------------------------------------

Shared Servers Rates			   DB/Inst: P30DB/p30db2  Snaps: 62-63

  Common     Disp			 Common       Disp     Server
   Queue    Queue   Server    Server	  Queue      Queue	Total	  Server
 Per Sec  Per Sec Msgs/Sec    KB/Sec	  Total      Total	 Msgs  Total(KB)
-------- -------- -------- --------- ---------- ---------- ---------- ----------
       0	0	 0	 0.0	      0 	 0	    0	       0
			  ------------------------------------------------------

Shared Servers Utilization		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Statistics are combined for all servers
-> Incoming and Outgoing Net % are included in %Busy

  Total Server			  Incoming  Outgoing
      Time (s)	  %Busy    %Idle     Net %     Net %
-------------- -------- -------- --------- ---------
	   602	    0.0    100.0       0.0	 0.0
			  ------------------------------------------------------

Shared Servers Common Queue		   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Shared Servers Dispatchers		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ordered by %Busy, descending
-> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue
-> Name suffixes:
     "(N)" - dispatcher started between begin and end snapshots
     "(R)" - dispatcher re-started between begin and end snapshots

	      Avg Total Disp			    Total Total Queue  Avg Queue
Name	    Conns   Time (s)	%Busy	 %Idle	   Queued    Wait (s)  Wait (ms)
------- --------- ---------- -------- -------- ---------- ----------- ----------
D000	      0.0	 602	  0.0	 100.0		0	    0
			  ------------------------------------------------------


Modified Parameters			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> This section shows all the modified initialization parameters that
were in effect during the entire snapshot interval
-> End Value is displayed only if the parameter value was modified within
the snapshot interval

								End value
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
_ipddb_enable		      TRUE
audit_file_dest 	      /u01/app/oracle/admin/p30db/adump
audit_trail		      DB
cluster_database	      TRUE
compatible		      19.0.0
control_files		      +DATA/P30DB/CONTROLFILE/current.2
db_block_size		      8192
db_create_file_dest	      +DATA
db_domain		      example.com
db_name 		      p30db
db_recovery_file_dest	      +FRA
db_recovery_file_dest_size    274877906944
diagnostic_dest 	      /u01/app/oracle
dispatchers		      (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 	      2
listener_networks
local_listener		       (ADDRESS=(PROTOCOL=TCP)(HOST=192
nls_language		      AMERICAN
nls_territory		      AMERICA
open_cursors		      300
pga_aggregate_target	      3371171840
processes		      640
remote_listener 	       mcracpoc-scan.example.com:1521
remote_login_passwordfile     EXCLUSIVE
sga_target		      10133438464
thread			      2
undo_tablespace 	      UNDOTBS2
			  ------------------------------------------------------


Modified Multi-Valued Parameters	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> This section only displays parameters that have more than one value
->'(NULL)' indicates a missing parameter value
-> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot

								End value
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
control_files		      +DATA/P30DB/CONTROLFILE/current.2
			      +FRA/P30DB/CONTROLFILE/current.25
			  ------------------------------------------------------

Top SQL with Top Events 		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  35dumc2tpr9dv 	   203653710		       64	   47.76
db file sequential read 	 33.58 UPDATE				   33.58
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


CPU + Wait for CPU		  8.96 UPDATE				    8.21


gc current grant 2-way		  5.22 UPDATE				    5.22

	  bhdvtsvjhgvrh 	  1497866750		       52	   38.81
db file parallel read		 19.40 TABLE ACCESS - BY INDEX ROWID BAT   19.40
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


db file sequential read 	  6.72 TABLE ACCESS - BY INDEX ROWID BAT    6.72


CPU + Wait for CPU		  5.97 TABLE ACCESS - BY INDEX ROWID BAT    2.99

			  ------------------------------------------------------

Top SQL with Top Row Sources		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  35dumc2tpr9dv 	   203653710		       64	   47.76
UPDATE					   47.01 db file sequential read   33.58
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	  bhdvtsvjhgvrh 	  1497866750		       52	   38.81
TABLE ACCESS - BY INDEX ROWID BATCHED	   35.82 db file parallel read	   19.40
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


SELECT STATEMENT			    2.24 CPU + Wait for CPU	    2.24

			  ------------------------------------------------------

Top Sessions				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
      759,23810      43.28 db file sequential read	       20.15
USER2		     sqlplus@mcracp...m (TNS V1-V3)	  27/60 [ 45%]	     24

			   CPU + Wait for CPU			7.46
							  10/60 [ 17%]	      4

			   db file parallel read		7.46
							  10/60 [ 17%]	      0

      882,61001      43.28 db file sequential read	       20.15
USER1		     sqlplus@mcracp...m (TNS V1-V3)	  27/60 [ 45%]	     21

			   db file parallel read	       11.94
							  16/60 [ 27%]	      0

			   CPU + Wait for CPU			7.46
							  10/60 [ 17%]	      8

	4,59906       6.72 db file parallel write		4.48
SYS		     oracle@mcracpo...le.com (DBW0)	   6/60 [ 10%]	      0

			   CPU + Wait for CPU			2.24
							   3/60 [  5%]	      0

      127,34074       2.99 log file parallel write		2.99
SYS		     oracle@mcracpo...le.com (LGWR)	   4/60 [  7%]	      0

	3,14250       1.49 CPU + Wait for CPU			1.49
SYS		     oracle@mcracpo...le.com (LMS0)	   2/60 [  3%]	      0

			  ------------------------------------------------------

Top Blocking Sessions			   DB/Inst: P30DB/p30db2  Snaps: 62-63

		  No data exists for this section of the report.
			  ------------------------------------------------------

Top PL/SQL Procedures			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       47.76
   SQL								       47.76
			  ------------------------------------------------------

Top Events				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     40.30	 0.90
db file parallel read		    User I/O	    FOREGROUND
     19.40	 0.43
CPU + Wait for CPU		    CPU 	    FOREGROUND
     14.93	 0.33
CPU + Wait for CPU		    CPU 	    BACKGROUND
      5.97	 0.13
gc cr multi block request	    Cluster	    FOREGROUND
		 0.13
			  ------------------------------------------------------

Top Event P1/P2/P3 Values		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 40.30		  "2","24913683","1"	   0.75
file#			   block#		      blocks

db file parallel read		 19.40		       "1","61","61"	   4.48
files			   blocks		      requests

						       "1","58","58"	   2.24


						       "1","29","29"	   1.49


gc cr multi block request	  5.97		  "2","26425986","1"	   0.75
file#			   block#		      class#

db file parallel write		  4.48		"2","0","2147483647"	   0.75
requests		   interrupt		      timeout

log file parallel write 	  2.99			"2","32","2"	   0.75
files			   blocks		      requests

			  ------------------------------------------------------

Top DB Objects				   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------
	  73402      35.82 db file sequential read	       20.15
USER1.CF1 (TABLE)				      IOPS
			   db file parallel read	       11.94

			   gc cr multi block request		2.99

	  73409      35.82 db file sequential read	       20.15
USER2.CF1 (TABLE)				      IOPS
			   db file parallel read		7.46

			   gc current grant 2-way		4.48

			  ------------------------------------------------------

Activity Over Time			   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
09:33:49   (1.2 min)	   16 db file sequential read		   10	 7.46
			      CPU + Wait for CPU		    3	 2.24
			      gc cr multi block request 	    2	 1.49
09:35:00   (5.0 min)	   70 db file sequential read		   25	18.66
			      db file parallel read		   16	11.94
			      CPU + Wait for CPU		   14	10.45
09:40:00   (3.9 min)	   48 db file sequential read		   19	14.18
			      CPU + Wait for CPU		   11	 8.21
			      db file parallel read		    9	 6.72
			  ------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_2_63'
	  -------------------------------------------

Analysis Period
---------------
AWR snapshot range from 62 to 63.
Time period starts at 08-FEB-20 09.33.49 AM
Time period ends at 08-FEB-20 09.43.52 AM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db2, numbered 2 and hosted at
mcracpoc2.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 1142 seconds.
The average number of active sessions was 1.89.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     1.89 | 100 	  2
2  Top Segments by "User I/O" and "Cluster"  1.71 | 90.21	  2
3  Undersized SGA			     1.52 | 80.03	  1
4  Global Cache Messaging		     .34 | 17.93	  1
5  Global Cache Congestion		     .04 | 2.19 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 1.9 active sessions, 100% of total activity.
------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 1.04 active sessions, 55.17% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 7473 times and
      had an average elapsed time of 0.085 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER2.CF1" with object ID 73409 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE "USER1.CF1" with object ID 73402 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      "0sy7x6xzjg2yy" are responsible for 53% of the database time spent on
      the UPDATE statement with SQL_ID "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 0sy7x6xzjg2yy.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := '2';
	 v_update_pct PLS_INTEGER := '15';
	 v_max_loop_iterations PLS_INTEGER := '0';
	 v_seconds_to_run PLS_INTEGER := '600';
	 v_scale PLS_INTEGER := '1048576';
	 v_work_unit PLS_INTEGER := '64' ;
	 v_redo_stress	VARCHAR2(12) := 'LITE';
	 v_hot_schema_modulus PLS_INTEGER := '0';
	 v_do_hotspot	VARCHAR(7) := 'FALSE';
	 v_hotspot_mb  NUMBER := '8';
	 v_hotspot_offset_mb NUMBER := '16';
	 v_hotspot_modulus  PLS_INTEGER := '3';
	 v_sleep_modulus PLS_INTEGER := '0';
	 v_sleep_min NUMBER := '.1';
	 v_sleep_max NUMBER := '.5';
	 v_scan_query_pct PLS_INTEGER := '0';
	 v_obfuscate VARCHAR(5)  := 'FALSE';
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations > 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context('userenv','sid') from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,'YYYYDDMMHH24MISSFFFF');
	 -- DBMS_RANDOM.seed (val => v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now < v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' ||
	 (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks
	 ||  '	Random block ' || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid > ( v_random_block - v_work_unit ) ) AND  (custid <
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt >= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt >= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) >=  100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) >=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt >=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we've hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || '|' || v_total_time || '|' ||
	 v_total_cpu_tm || '|' || v_cpu_pct ;
	 END;

   Recommendation 2: SQL Tuning
   Estimated benefit is .85 active sessions, 44.83% of total activity.
   -------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 42415 times and
      had an average elapsed time of 0.011 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER1.CF1" with object ID 73402 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE "USER2.CF1" with object ID 73409 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      "078ab5pdvxx3c" are responsible for 53% of the database time spent on
      the SELECT statement with SQL_ID "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID 078ab5pdvxx3c.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := '1';
	 v_update_pct PLS_INTEGER := '15';
	 v_max_loop_iterations PLS_INTEGER := '0';
	 v_seconds_to_run PLS_INTEGER := '600';
	 v_scale PLS_INTEGER := '1048576';
	 v_work_unit PLS_INTEGER := '64' ;
	 v_redo_stress	VARCHAR2(12) := 'LITE';
	 v_hot_schema_modulus PLS_INTEGER := '0';
	 v_do_hotspot	VARCHAR(7) := 'FALSE';
	 v_hotspot_mb  NUMBER := '8';
	 v_hotspot_offset_mb NUMBER := '16';
	 v_hotspot_modulus  PLS_INTEGER := '3';
	 v_sleep_modulus PLS_INTEGER := '0';
	 v_sleep_min NUMBER := '.1';
	 v_sleep_max NUMBER := '.5';
	 v_scan_query_pct PLS_INTEGER := '0';
	 v_obfuscate VARCHAR(5)  := 'FALSE';
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations > 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context('userenv','sid') from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,'YYYYDDMMHH24MISSFFFF');
	 -- DBMS_RANDOM.seed (val => v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now < v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' ||
	 (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks
	 ||  '	Random block ' || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid > ( v_random_block - v_work_unit ) ) AND  (custid <
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt >= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt >= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) >=  100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) >=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt >=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we've hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || '|' || v_total_time || '|' ||
	 v_total_cpu_tm || '|' || v_cpu_pct ;
	 END;


Finding 2: Top Segments by "User I/O" and "Cluster"
Impact is 1.71 active sessions, 90.21% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .85 active sessions, 45.11% of total activity.
   -------------------------------------------------------------------
   Action
      Run "Segment Advisor" on TABLE "USER1.CF1" with object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Investigate application logic involving I/O on TABLE "USER1.CF1" with
      object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 57% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1177720 physical reads, 173151 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .85 active sessions, 45.11% of total activity.
   -------------------------------------------------------------------
   Action
      Run "Segment Advisor" on TABLE "USER2.CF1" with object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Investigate application logic involving I/O on TABLE "USER2.CF1" with
      object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 64% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1075845 physical reads, 161450 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 1.37 active sessions, 72.28% of total activity.


Finding 3: Undersized SGA
Impact is 1.52 active sessions, 80.03% of total activity.
---------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter "sga_target" was "9664 M" during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .52 active sessions, 27.49% of total activity.
   -------------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter "sga_target" to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 1.37 active sessions, 72.28% of total activity.


Finding 4: Global Cache Messaging
Impact is .34 active sessions, 17.93% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is .34 active sessions, 17.93% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 43% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is .34 active sessions, 17.93% of total activity.


Finding 5: Global Cache Congestion
Impact is .04 active sessions, 2.19% of total activity.
-------------------------------------------------------
Global Cache Service Processes (LMSn) in other instances were not processing
requests fast enough.

   Recommendation 1: Database Configuration
   Estimated benefit is .04 active sessions, 2.19% of total activity.
   ------------------------------------------------------------------
   Action
      Increase throughput of the Global Cache Service (LMSn) processes.
      Increase the number of Global Cache Service processes by increasing the
      value of the parameter "gcs_server_processes". Alternatively, if the
      host is CPU bound consider increasing the OS priority of the Global
      Cache Service processes.
   Rationale
      The value of parameter "gcs_server_processes" was "2" during the
      analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Inter-instance messaging was consuming significant database time on this
      instance.
      Impact is .34 active sessions, 17.93% of total activity.
	 Wait class "Cluster" was consuming significant database time.
	 Impact is .34 active sessions, 17.93% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

The database's maintenance windows were active during 100% of the analysis
period.

RAC Statistics  DB/Inst: P30DB/p30db2	Snaps: 62-63

				Begin	End
				----- -----
	   Number of Instances:     2	  2
	       Number of LMS's:     2	  2
      Number of realtime LMS's:     2	  2  (0 priority changes)


Global Cache Load Profile
~~~~~~~~~~~~~~~~~~~~~~~~~		   Per Second	    Per Transaction
				      ---------------	    ---------------
  Global Cache blocks received: 	       110.30		       8.83
    Global Cache blocks served: 		 2.82		       0.23
     GCS/GES messages received: 	     2,620.43		     209.77
	 GCS/GES messages sent: 	     5,700.42		     456.33
	    DBWR Fusion writes: 		 0.23		       0.02
 Estd Interconnect traffic (KB) 	     2,530.11


Global Cache Efficiency Percentages (Target local+remote 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Buffer access -  local cache %:   32.95
Buffer access - remote cache %:    1.96
Buffer access - 	disk %:   65.09
Global Cache Locality	     %:   35.34


Global Cache and Enqueue Services - Workload Characteristics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Avg global cache cr block receive time (us):		2,307.1
     Avg global cache current block receive time (us):		  910.7
			       Avg LMS process busy %:		    2.7

	    Avg global cache cr block build time (us):		  131.6
      Global cache log flushes for cr blocks served %:		    1.1
	    Avg global cache cr block flush time (us):		6,875.0

	 Avg global cache current block pin time (us):		    0.0
 Global cache log flushes for current blocks served %:		    9.5
       Avg global cache current block flush time (us):	       10,416.7

		     Avg global enqueue get time (us):		   40.2

Global Cache and Enqueue Services - Messaging Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Avg message sent queue time (us):		8,282.2
	     Avg message sent queue time on ksxp (us):		1,929.6
	  Avg message received kernel queue time (us):		    6.0
		 Avg message received queue time (us):		    3.6
		    Avg GCS message process time (us):		   14.7
		    Avg GES message process time (us):		   25.7

			    % of direct sent messages:		  15.79
			  % of indirect sent messages:		  84.01
			% of flow controlled messages:		   0.20
	  -------------------------------------------------------------

Cluster Interconnect
-> if Public/Source at End snap is different a '*' is displayed
~~~~~~~~~~~~~~~~~~~~
				    Begin			    End
	     --------------------------------------------------   -------
Interface    IP Address      Pub Source 			  Pub Src
----------   --------------- --- ------------------------------   --- ---
fg-priv:1    169.254.31.173  N

Global Messaging Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
Cluster reconfiguration count			 0	    0.0 	 0.0
Domain reconfiguration count			 0	    0.0 	 0.0
Global Enqueue S-optim Broadcasts		 6	    0.0 	 0.0
Global Enqueue S-optim S-lock get	     8,253	   13.7 	 1.1
Global Enqueue S-optim anti-locks		31	    0.1 	 0.0
KA local message waits				 0	    0.0 	 0.0
KA local messages received			 0	    0.0 	 0.0
KA messages received actual			 0	    0.0 	 0.0
KA messages received logical			 0	    0.0 	 0.0
KA requests failed				 0	    0.0 	 0.0
KA requests succeeded				 0	    0.0 	 0.0
Pseudo reconfiguration count			 0	    0.0 	 0.0
Pseudo rm reconfig count			 0	    0.0 	 0.0
acks for commit broadcast(actual)	       103	    0.2 	 0.0
acks for commit broadcast(logical	       139	    0.2 	 0.0
broadcast msgs on commit(actual)	     7,179	   11.9 	 1.0
broadcast msgs on commit(logical)	     7,701	   12.8 	 1.0
broadcast msgs on commit(wasted)	       259	    0.4 	 0.0
dynamically allocated gcs resourc		 0	    0.0 	 0.0
dynamically allocated gcs shadows		 0	    0.0 	 0.0
flow control messages received			 4	    0.0 	 0.0
flow control messages sent			 2	    0.0 	 0.0
gcs assume cvt					 0	    0.0 	 0.0
gcs assume no cvt			       146	    0.2 	 0.0
gcs ast to fg					84	    0.1 	 0.0
gcs ast xid					 0	    0.0 	 0.0
gcs bidless ast to lms				 0	    0.0 	 0.0
gcs blocked converts			     3,746	    6.2 	 0.5
gcs blocked cr converts 		     4,693	    7.8 	 0.6
gcs compatible basts				 9	    0.0 	 0.0
gcs compatible cr basts (global)		15	    0.0 	 0.0
gcs compatible cr basts (local) 	     9,681	   16.1 	 1.3
gcs cr basts to PIs				 0	    0.0 	 0.0
gcs cr requests to slave			 0	    0.0 	 0.0
gcs cr serve without current lock		 0	    0.0 	 0.0
gcs dbwr flush pi msgs			   230,536	  382.7 	30.6
gcs dbwr write request msgs		       133	    0.2 	 0.0
gcs error msgs					 0	    0.0 	 0.0
gcs flash read serve requests to		 0	    0.0 	 0.0
gcs force cr block only 			 0	    0.0 	 0.0
gcs force cr grant				 0	    0.0 	 0.0
gcs force cr no current 			 0	    0.0 	 0.0
gcs forward cr to pinged instance		 0	    0.0 	 0.0
gcs grant ast					84	    0.1 	 0.0
gcs grant request in partial open		 0	    0.0 	 0.0
gcs immediate (compatible) conver	    33,117	   55.0 	 4.4
gcs immediate (null) converts		   114,851	  190.7 	15.3
gcs immediate cr (compatible) con	     4,147	    6.9 	 0.6
gcs immediate cr (null) converts	   649,692	1,078.5 	86.3
gcs lms flush pi msgs				 0	    0.0 	 0.0
gcs lms write request msgs			 9	    0.0 	 0.0
gcs msgs process time(ms)		    18,792	   31.2 	 2.5
gcs msgs received			 1,279,340	2,123.8        170.0
gcs new served by master			95	    0.2 	 0.0
gcs out-of-order msgs				 2	    0.0 	 0.0
gcs pings refused			       119	    0.2 	 0.0
gcs pkey conflicts retry			 0	    0.0 	 0.0
gcs queued converts				 0	    0.0 	 0.0
gcs read-mostly failure unmount d		 0	    0.0 	 0.0
gcs reader bypass N->Xw ping loca		 0	    0.0 	 0.0

Global Messaging Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
gcs reader bypass N->Xw ping remo		 0	    0.0 	 0.0
gcs reader bypass grant X on assu		 0	    0.0 	 0.0
gcs reader bypass grant ast			 0	    0.0 	 0.0
gcs reader bypass grant fg ast			 0	    0.0 	 0.0
gcs reader bypass grant immediate	       572	    0.9 	 0.1
gcs recovery claim msgs 			 0	    0.0 	 0.0
gcs refuse xid					 1	    0.0 	 0.0
gcs refuse xid to fg				 1	    0.0 	 0.0
gcs refuse xid to lms				 0	    0.0 	 0.0
gcs refuse xid to master			 0	    0.0 	 0.0
gcs regular cr					 0	    0.0 	 0.0
gcs resources for dynamic sga			 0	    0.0 	 0.0
gcs retry convert request			 0	    0.0 	 0.0
gcs shadows for dynamic sga			 0	    0.0 	 0.0
gcs share recovery bast 			 0	    0.0 	 0.0
gcs side channel msgs actual		     4,361	    7.2 	 0.6
gcs side channel msgs logical		   364,101	  604.4 	48.4
gcs stale cr					58	    0.1 	 0.0
gcs undo cr					 0	    0.0 	 0.0
gcs write notification msgs			 0	    0.0 	 0.0
gcs writes refused				 0	    0.0 	 0.0
ges msgs process time(ms)			45	    0.1 	 0.0
ges msgs received			     1,749	    2.9 	 0.2
ges remote lock allocation		       -11	    0.0 	 0.0
global posts dropped				 0	    0.0 	 0.0
global posts queue time 			 0	    0.0 	 0.0
global posts queued				 0	    0.0 	 0.0
global posts requested				 0	    0.0 	 0.0
global posts sent				 0	    0.0 	 0.0
implicit batch messages received	       151	    0.3 	 0.0
implicit batch messages sent		    16,414	   27.2 	 2.2
lmd msg send time(ms)				 0	    0.0 	 0.0
lms(s) msg send time(ms)			 0	    0.0 	 0.0
messages flow controlled		     4,342	    7.2 	 0.6
messages queue sent actual		    77,946	  129.4 	10.4
messages queue sent logical		   283,483	  470.6 	37.7
messages received actual		   142,046	  235.8 	18.9
messages received logical		 1,281,089	2,126.7        170.2
messages sent directly			   348,236	  578.1 	46.3
messages sent indirectly		 1,852,933	3,076.0        246.2
messages sent not implicit batche	     7,285	   12.1 	 1.0
messages sent pbatched			 2,848,983	4,729.5        378.6
msgs causing lmd to send msgs			 0	    0.0 	 0.0
msgs causing lms(s) to send msgs		 0	    0.0 	 0.0
msgs received kernel queue time (    7,624,618,197 1.265726E+07  1,013,238.3
msgs received queue time (ms)		     4,627	    7.7 	 0.6
msgs received queued			 1,281,089	2,126.7        170.2
msgs sent queue time (ms)		 2,457,777	4,080.0        326.6
msgs sent queue time on ksxp (ms)	 1,021,423	1,695.6        135.7
msgs sent queued			   296,755	  492.6 	39.4
msgs sent queued on ksxp		   529,341	  878.7 	70.3
number of broadcasted resources 		 0	    0.0 	 0.0
number of directly freed master r		 0	    0.0 	 0.0
number of ges deadlock detected 		 0	    0.0 	 0.0
number of lock borrowed by LMD			 0	    0.0 	 0.0
number of received ODPS messages		 0	    0.0 	 0.0
number of received RBA messages 		 0	    0.0 	 0.0
number of resource borrowed by LM		 0	    0.0 	 0.0
number of sent ODPS messages			 0	    0.0 	 0.0
number of sent RBA messages			 0	    0.0 	 0.0

Global Messaging Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
process batch messages received 	   131,154	  217.7 	17.4
process batch messages sent		   163,680	  271.7 	21.8
receiver cycle time			    59,980	   99.6 	 8.0
receiver loop count			   224,384	  372.5 	29.8
			  ------------------------------------------------------


Global CR Server Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63

Statistic				    Total
------------------------------ ------------------
CR Block Requests			       76
CURRENT Block Requests			    1,398
Data Block Requests			       76
Undo Block Requests				0
TX Block Requests			    1,331
Current Results 			    1,446
Private results 				0
Zero Results					0
Disk Read Results			       28
Fail Results					0
Fairness Down Converts			       68
Light Works					2
Flushes 				       16
Builds					       76
Errors						0
			  ------------------------------------------------------

Global Current Server Statistics	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Pins    = CURRENT Block Pin Operations
-> Flushes = Redo Flush before CURRENT Block Served Operations

Statistic	  Total % <100us   % <1ms  % <10ms % <100ms    % <1s   % <10s
---------- ------------ -------- -------- -------- -------- -------- --------
Pins		      1   100.00
Flushes 	     24 		     62.50    37.50
			  ------------------------------------------------------

Global Cache Transfer Statistics	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested (Congst) - Block Transfer impacted by Remote System Load
-> ordered by CR + Current Blocks Received desc

			       CR			  Current
		 ----------------------------- -----------------------------
Inst Block	   Blocks      %      %      %	 Blocks      %	    %	   %
  No Class	 Received  Immed   Busy Congst Received  Immed	 Busy Congst
---- ----------- -------- ------ ------ ------ -------- ------ ------ ------
   1 data block    11,385   97.2     .1    2.7	 54,321   74.3	 25.1	  .6
   1 Others	       20  100.0     .0     .0	    669   95.7	  4.3	  .0
   1 undo header       23   78.3   21.7     .0	      2     .0	100.0	  .0
   1 undo block 	1  100.0     .0     .0	    N/A    N/A	  N/A	 N/A
			  ------------------------------------------------------

Global Cache Transfer Times (us)	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Avg Time - average time of all blocks (Immed,Busy,Congst) in us
-> Immed, Busy, Congst -  Average times in us
-> ordered by CR + Current Blocks Received desc

		    CR Avg Time (us)	     Current Avg Time (us)
	      --------------------------- ---------------------------
Inst Block
  No Class	 All  Immed   Busy Congst    All  Immed   Busy Congst
---- -------- ------ ------ ------ ------ ------ ------ ------ ------
   1 data blo	2311   2250   7117   4377    917   1052    460	 3424
   1 others	 430	430    N/A    N/A    428    419    612	  N/A
   1 undo hea	2811	386  11541    N/A    779    N/A    779	  N/A
   1 undo blo	 279	279    N/A    N/A    N/A    N/A    N/A	  N/A
			  ------------------------------------------------------

Global Cache Transfer (Immediate)	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> % of Blocks Received requiring 2 or 3 hops
-> ordered by CR + Current Blocks Received desc

				   CR			    Current
		      --------------------------- ---------------------------
 Src Block     Blocks  Immed Blks	%	%  Immed Blks	    %	    %
Inst Class	 Lost	 Received    2hop    3hop    Received	 2hop	 3hop
---- -------- ------- ----------- ------- ------- ----------- ------- -------
   1 data blo		   11,070   100.0     0.0      40,362	100.0	  0.0
   1 others		       20   100.0     0.0	  640	100.0	  0.0
   1 undo hea		       18   100.0     0.0	  N/A	  N/A	  N/A
   1 undo blo			1   100.0     0.0	  N/A	  N/A	  N/A
			  ------------------------------------------------------

Global Cache Times (Immediate)		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Blocks Lost, 2-hop and 3-hop Average times in (us)
-> ordered by CR + Current Blocks Received desc

		       CR Avg Time (us)   Current Avg Time (us)
		     -------------------- --------------------
 Src Block	Lost
Inst Class	Time  Immed   2hop   3hop  Immed   2hop   3hop
---- -------- ------ ------ ------ ------ ------ ------ ------
   1 data blo	       2250   2250    N/A   1052   1052    N/A
   1 others		430    430    N/A    419    419    N/A
   1 undo hea		386    386    N/A    N/A    N/A    N/A
   1 undo blo		279    279    N/A    N/A    N/A    N/A
			  ------------------------------------------------------

Interconnect Ping Latency Statistics	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Ping latency of the roundtrip of a message from this instance to -> target in
-> The target instance is identified by an instance number.
-> Average and standard deviation of ping latency is given in microseconds
-> for message sizes of 500 bytes and 8K.
-> Note that latency of a message from the instance to itself is used as
-> control, since message latency can include wait for CPU

   Target 500B Pin Avg La      Stddev  8K Ping Avg La	   Stddev
 Instance    Count 500B m    500B msg	 Count 8K msg	   8K msg
--------- -------- ------ ----------- -------- ------ -----------
	1	55    730	  .26	    60	  720	      .28
	2	55    367	  .16	    60	  379	      .17
			  ------------------------------------------------------

Interconnect Throughput by Client	   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Throughput of interconnect usage by major consumers
-> All throughput numbers are megabytes per second

			Send	 Receive
Used By 	  Mbytes/sec  Mbytes/sec
---------------- ----------- -----------
Global Cache		 .01	     .47
Parallel Query		 .00	     .00
DB Locks		1.62	     .39
DB Streams		 N/A	     N/A
Other			 .00	     .00
			  ------------------------------------------------------

Interconnect Device Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Throughput and errors of interconnect devices (at OS level)
-> All throughput numbers are megabytes per second

Device Name	IP Address	 Public Source
--------------- ---------------- ------ -------------------------------
				  Send	   Send
       Send	Send	 Send	Buffer	Carrier
 Mbytes/sec   Errors  Dropped  Overrun	   Lost
----------- -------- -------- -------- --------
			       Receive	Receive
    Receive  Receive  Receive	Buffer	  Frame
 Mbytes/sec   Errors  Dropped  Overrun	 Errors
----------- -------- -------- -------- --------
fg-priv:1	169.254.31.173	 NO
	.00	   0	    0	     0	      0
	.00	   0	    0	     0	      0
			  ------------------------------------------------------

Dynamic Remastering Statistics		   DB/Inst: P30DB/p30db2  Snaps: 62-63
-> Times are in seconds
-> Affinity objects - Affinity objects mastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot

							per    Begin	  End
Name					Total	Remaster Op	Snap	 Snap
-------------------------------- ------------ ------------- -------- --------
remaster ops				    1	       1.00
remastered objects			   20	      20.00
replayed locks received 	       51,015	  51,015.00
replayed locks sent		      270,897	 270,897.00
resources cleaned			    0	       0.00
remaster time (s)			  2.8	       2.75
freeze time (s) 			  0.0	       0.01
cleanup time (s)			  0.2	       0.20
replay time (s) 			  0.7	       0.71
fixwrite time (s)			  0.1	       0.10
sync time (s)				  1.7	       1.71
affinity objects					N/A	   9	   19
read-mostly objects					N/A	   1	    1
affinity objects (other inst)				N/A	  17	   10
read-mostly objects (persistent)			N/A	   0	    0
			  ------------------------------------------------------

End of Report
Report written to awr.txt
SQL> SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  text







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 62

End   Snapshot Id specified: 63



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_62_63.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.txt

<html lang="en"><head><title>AWR Report for DB: P30DB, Inst: p30db2, Snaps: 62-63</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY report for

</h1>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">DB Name</th><th class="awrbg" scope="col">DB Id</th><th class="awrbg" scope="col">Unique Name</th><th class="awrbg" scope="col">Role</th><th class="awrbg" scope="col">Edition</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">RAC</th><th class="awrbg" scope="col">CDB</th></tr>
<tr><td scope="row" class='awrnc'>P30DB</td><td align="right" class='awrnc'>3393773525</td><td class='awrnc'>p30db</td><td class='awrnc'>PRIMARY</td><td class='awrnc'>EE</td><td class='awrnc'>19.0.0.0.0</td><td class='awrnc'>YES</td><td class='awrnc'>NO</td></tr>
</table>
<p />
<p />
<table border="0" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Inst Num</th><th class="awrbg" scope="col">Startup Time</th></tr>
<tr><td scope="row" class='awrnc'>p30db2</td><td align="right" class='awrnc'>2</td><td class='awrnc'>08-Feb-20 07:52</td></tr>
</table>
<p />
<p />
<table border="0" width="600" class="tdiff" summary="This table displays host information">
<tr><th class="awrbg" scope="col">Host Name</th><th class="awrbg" scope="col">Platform</th><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Memory (GB)</th></tr>
<tr><td scope="row" class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>Linux x86 64-bit</td><td align="right" class='awrnc'>   8</td><td align="right" class='awrnc'>   4</td><td align="right" class='awrnc'>	1</td><td align="right" class='awrnc'>	 31.40</td></tr>
</table>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays snapshot information">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Snap Id</th><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Sessions</th><th class="awrbg" scope="col">Cursors/Session</th><th class="awrbg" scope="col">Instances</th></tr>
<tr><td scope="row" class='awrnc'>Begin Snap:</td><td align="right" class='awrnc'>62</td><td align="center" class='awrnc'>08-Feb-20 09:33:49</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>      1.2</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>End Snap:</td><td align="right" class='awrc'>63</td><td align="center" class='awrc'>08-Feb-20 09:43:51</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>      1.1</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>Elapsed:</td><td class='awrnc'>&#160;</td><td align="center" class='awrnc'>		   10.04 (mins)</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB Time:</td><td class='awrc'>&#160;</td><td align="center" class='awrc'>		19.03 (mins)</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>1.0E+02</td><td scope="row" class='awrc'>ADDM:3393773525_2_63</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrnc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrnc'>1.90</td><td align="right" class='awrnc'>90.21</td><td scope="row" class='awrnc'>ADDM:3393773525_2_63</td><td class='awrnc'>08-Feb-20 09:33</td><td class='awrnc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrc'>Undersized SGA</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>80.03</td><td scope="row" class='awrc'>ADDM:3393773525_2_63</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>1.90</td><td align="right" class='awrnc'>17.93</td><td scope="row" class='awrnc'>ADDM:3393773525_2_63</td><td class='awrnc'>08-Feb-20 09:33</td><td class='awrnc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrc'>Global Cache Congestion</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>2.19</td><td scope="row" class='awrc'>ADDM:3393773525_2_63</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td></tr>
</table><p />
<p />Load Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays load profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th><th class="awrbg" scope="col">Per Exec</th><th class="awrbg" scope="col">Per Call</th></tr>
<tr><td scope="row" class='awrc'>DB Time(s):</td><td align="right" class='awrc'>	       1.9</td><td align="right" class='awrc'>		     0.2</td><td align="right" class='awrc'>	  0.02</td><td align="right" class='awrc'>	6.60</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU(s):</td><td align="right" class='awrnc'>		0.4</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'>      0.00</td><td align="right" class='awrnc'>	    1.43</td></tr>
<tr><td scope="row" class='awrc'>Background CPU(s):</td><td align="right" class='awrc'> 	      0.2</td><td align="right" class='awrc'>		    0.0</td><td align="right" class='awrc'>	 0.00</td><td align="right" class='awrc'>      0.00</td></tr>
<tr><td scope="row" class='awrnc'>Redo size (bytes):</td><td align="right" class='awrnc'>	  664,865.1</td><td align="right" class='awrnc'>	  53,223.8</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logical read (blocks):</td><td align="right" class='awrc'>	      5,626.9</td><td align="right" class='awrc'>	      450.4</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Block changes:</td><td align="right" class='awrnc'>		1,648.7</td><td align="right" class='awrnc'>		 132.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Physical read (blocks):</td><td align="right" class='awrc'>	       3,662.4</td><td align="right" class='awrc'>	       293.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Physical write (blocks):</td><td align="right" class='awrnc'> 	    588.9</td><td align="right" class='awrnc'>		    47.1</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO requests:</td><td align="right" class='awrc'>		 3,662.3</td><td align="right" class='awrc'>		 293.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO requests:</td><td align="right" class='awrnc'>	      503.2</td><td align="right" class='awrnc'>	      40.3</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO (MB):</td><td align="right" class='awrc'>		28.6</td><td align="right" class='awrc'>	       2.3</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO (MB):</td><td align="right" class='awrnc'>		    4.6</td><td align="right" class='awrnc'>		   0.4</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM scan rows:</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Session Logical Read IM:</td><td align="right" class='awrnc'> 	      0.0</td><td align="right" class='awrnc'>		     0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks received:</td><td align="right" class='awrc'>	       110.3</td><td align="right" class='awrc'>	       8.8</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks served:</td><td align="right" class='awrnc'>		 2.8</td><td align="right" class='awrnc'>		0.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>User calls:</td><td align="right" class='awrc'>	       0.3</td><td align="right" class='awrc'>		     0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parses (SQL):</td><td align="right" class='awrnc'>		   2.2</td><td align="right" class='awrnc'>		  0.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hard parses (SQL):</td><td align="right" class='awrc'> 	      0.1</td><td align="right" class='awrc'>		    0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL Work Area (MB):</td><td align="right" class='awrnc'>		 0.1</td><td align="right" class='awrnc'>		0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logons:</td><td align="right" class='awrc'>		   0.0</td><td align="right" class='awrc'>		 0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>User logons:</td><td align="right" class='awrnc'>		  0.0</td><td align="right" class='awrnc'>		 0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Executes (SQL):</td><td align="right" class='awrc'>		  86.5</td><td align="right" class='awrc'>		 6.9</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Rollbacks:</td><td align="right" class='awrnc'>		0.0</td><td align="right" class='awrnc'>	       0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Transactions:</td><td align="right" class='awrc'>		12.5</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
Instance Efficiency Percentages (Target 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays instance efficiency percentages">
<tr><td scope="row" class='awrc'>Buffer Nowait %:</td><td align="right" class='awrc'>		100.00</td><td class='awrc'>Redo NoWait %:</td><td align="right" class='awrc'>		 100.00</td></tr>
<tr><td scope="row" class='awrnc'>Buffer  Hit	%:</td><td align="right" class='awrnc'> 	   34.91</td><td class='awrnc'>In-memory Sort %:</td><td align="right" class='awrnc'>		100.00</td></tr>
<tr><td scope="row" class='awrc'>Library Hit   %:</td><td align="right" class='awrc'>		 99.85</td><td class='awrc'>Soft Parse %:</td><td align="right" class='awrc'>		 97.70</td></tr>
<tr><td scope="row" class='awrnc'>Execute to Parse %:</td><td align="right" class='awrnc'>	      97.50</td><td class='awrnc'>Latch Hit %:</td><td align="right" class='awrnc'>	       99.99</td></tr>
<tr><td scope="row" class='awrc'>Parse CPU to Parse Elapsd %:</td><td align="right" class='awrc'>	     75.00</td><td class='awrc'>% Non-Parse CPU:</td><td align="right" class='awrc'>		99.98</td></tr>
<tr><td scope="row" class='awrnc'>Flash Cache Hit %:</td><td align="right" class='awrnc'>	      0.00</td></tr>
</table>

<p />Top 10 Foreground Events by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top 10 wait events by total wait time"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Wait Class</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>394,796</td><td align="right" class='awrc'>565.6</td><td align="right" class='awrc'>1.43ms</td><td align="right" class='awrc'>49.5</td><td class='awrc'>User I/O</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>39,790</td><td align="right" class='awrnc'>259.9</td><td align="right" class='awrnc'>6.53ms</td><td align="right" class='awrnc'>22.8</td><td class='awrnc'>User I/O</td></tr>
<tr><td scope="row" class='awrc'>DB CPU</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>246.9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>21.6</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>249,510</td><td align="right" class='awrnc'>99.1</td><td align="right" class='awrnc'>396.98us</td><td align="right" class='awrnc'>8.7</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>28,550</td><td align="right" class='awrc'>33.4</td><td align="right" class='awrc'>1.17ms</td><td align="right" class='awrc'>2.9</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>11,208</td><td align="right" class='awrnc'>29.9</td><td align="right" class='awrnc'>2.67ms</td><td align="right" class='awrnc'>2.6</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>45,426</td><td align="right" class='awrc'>19.6</td><td align="right" class='awrc'>431.65us</td><td align="right" class='awrc'>1.7</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>28,112</td><td align="right" class='awrnc'>14.6</td><td align="right" class='awrnc'>518.17us</td><td align="right" class='awrnc'>1.3</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>13,463</td><td align="right" class='awrc'>5.9</td><td align="right" class='awrc'>439.95us</td><td align="right" class='awrc'>.5</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>2.7</td><td align="right" class='awrnc'>337.10ms</td><td align="right" class='awrnc'>.2</td><td class='awrnc'>Other</td></tr>
</table><p />
<p />Wait Classes by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays wait class statistics ordered by total wait time"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait Time</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>463,913</td><td align="right" class='awrc'>828</td><td align="right" class='awrc'>1.78ms</td><td align="right" class='awrc'>72.5</td><td align="right" class='awrc'>1.4</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>247</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>21.6</td><td align="right" class='awrnc'>0.4</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>380,221</td><td align="right" class='awrc'>206</td><td align="right" class='awrc'>542.07us</td><td align="right" class='awrc'>18.0</td><td align="right" class='awrc'>0.3</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>49,669</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>1.83ms</td><td align="right" class='awrnc'>7.9</td><td align="right" class='awrnc'>0.2</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>32,218</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>245.13us</td><td align="right" class='awrc'>.7</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Concurrency</td><td align="right" class='awrnc'>892</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>128.14us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Configuration</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>11.94ms</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>232.27us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Network</td><td align="right" class='awrc'>591</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>50.22us</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
</table><p />

Host CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays system load statistics">
<tr><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Load Average Begin</th><th class="awrbg" scope="col">Load Average End</th><th class="awrbg" scope="col">%User</th><th class="awrbg" scope="col">%System</th><th class="awrbg" scope="col">%WIO</th><th class="awrbg" scope="col">%Idle</th></tr>
<tr><td align="right" class='awrc'>    8</td><td align="right" class='awrc'>	4</td><td align="right" class='awrc'>	 1</td><td align="right" class='awrc'>	 1.51</td><td align="right" class='awrc'>   0.97</td><td align="right" class='awrc'>   4.5</td><td align="right" class='awrc'>	 6.6</td><td align="right" class='awrc'>  10.1</td><td align="right" class='awrc'>  87.0</td></tr>
</table>
<p />
Instance CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays CPU usage and wait statistics">
<tr><th class="awrbg" scope="col">%Total CPU</th><th class="awrbg" scope="col">%Busy CPU</th><th class="awrbg" scope="col">%DB time waiting for CPU (Resource Manager)</th></tr>
<tr><td align="right" class='awrc'>	  8.0</td><td align="right" class='awrc'>      61.3</td><td align="right" class='awrc'>       0.0</td></tr>
</table>
<p />IO Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays IO profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Read+Write Per Second</th><th class="awrbg" scope="col">Read per Second</th><th class="awrbg" scope="col">Write Per Second</th></tr>
<tr><td scope="row" class='awrc'>Total Requests:</td><td align="right" class='awrc'>	       4,202.0</td><td align="right" class='awrc'>	     3,666.6</td><td align="right" class='awrc'>	     535.4</td></tr>
<tr><td scope="row" class='awrnc'>Database Requests:</td><td align="right" class='awrnc'>	    4,165.5</td><td align="right" class='awrnc'>	   3,662.3</td><td align="right" class='awrnc'> 	    503.2</td></tr>
<tr><td scope="row" class='awrc'>Optimized Requests:</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td><td align="right" class='awrc'>		   0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo Requests:</td><td align="right" class='awrnc'>		   31.3</td><td align="right" class='awrnc'>		   0.0</td><td align="right" class='awrnc'>		 31.3</td></tr>
<tr><td scope="row" class='awrc'>Total (MB):</td><td align="right" class='awrc'>	      34.6</td><td align="right" class='awrc'>		    28.7</td><td align="right" class='awrc'>		   5.9</td></tr>
<tr><td scope="row" class='awrnc'>Database (MB):</td><td align="right" class='awrnc'>		   33.2</td><td align="right" class='awrnc'>		  28.6</td><td align="right" class='awrnc'>		  4.6</td></tr>
<tr><td scope="row" class='awrc'>Optimized Total (MB):</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo (MB):</td><td align="right" class='awrnc'>		1.3</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'> 	      1.3</td></tr>
<tr><td scope="row" class='awrc'>Database (blocks):</td><td align="right" class='awrc'> 	  4,251.3</td><td align="right" class='awrc'>		3,662.4</td><td align="right" class='awrc'>		588.9</td></tr>
<tr><td scope="row" class='awrnc'>Via Buffer Cache (blocks):</td><td align="right" class='awrnc'>	    4,251.2</td><td align="right" class='awrnc'>	   3,662.4</td><td align="right" class='awrnc'> 	    588.8</td></tr>
<tr><td scope="row" class='awrc'>Direct (blocks):</td><td align="right" class='awrc'>		    0.1</td><td align="right" class='awrc'>		  0.0</td><td align="right" class='awrc'>		0.1</td></tr>
</table>
<p />
Memory Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays memory statistics">
<tr><th class="awrbg" scope="col"> </th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Host Mem (MB):</td><td align="right" class='awrc'>    32,156.0</td><td align="right" class='awrc'>    32,156.0</td></tr>
<tr><td scope="row" class='awrnc'>SGA use (MB):</td><td align="right" class='awrnc'>	 9,664.0</td><td align="right" class='awrnc'>	  9,664.0</td></tr>
<tr><td scope="row" class='awrc'>PGA use (MB):</td><td align="right" class='awrc'>     1,292.2</td><td align="right" class='awrc'>     1,280.4</td></tr>
<tr><td scope="row" class='awrc'>% Host Mem used for SGA+PGA:</td><td align="right" class='awrc'>   34.07</td><td align="right" class='awrc'>	34.04</td></tr>
</table>
<p />
Cache Sizes
<p />
<table border="0" width="600" class="tdiff" summary="This table displays cache sizes and other statistics for
		    different types of cache">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Buffer Cache:</td><td align="right" class='awrnc'>	 7,872M</td><td align="right" class='awrnc'>	 7,872M</td><td class='awrnc'>Std Block Size:</td><td align="right" class='awrnc'>	   8K</td></tr>
<tr><td scope="row" class='awrc'>Shared Pool Size:</td><td align="right" class='awrc'>	   1,186M</td><td align="right" class='awrc'>	  1,187M</td><td class='awrc'>Log Buffer:</td><td align="right" class='awrc'>	 20,612K</td></tr>
<tr><td scope="row" class='awrnc'>In-Memory Area:</td><td align="right" class='awrnc'>	       0M</td><td align="right" class='awrnc'>	       0M</td></tr>
</table>
<p />
Shared Pool Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays shared pool statistics">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Memory Usage %:</td><td align="right" class='awrc'>		90.38</td><td align="right" class='awrc'>	     90.07</td></tr>
<tr><td scope="row" class='awrnc'>% SQL with executions&gt;1:</td><td align="right" class='awrnc'>	      85.19</td><td align="right" class='awrnc'>	    86.25</td></tr>
<tr><td scope="row" class='awrc'>% Memory for SQL w/exec&gt;1:</td><td align="right" class='awrc'>	      88.11</td><td align="right" class='awrc'> 	   90.68</td></tr>
</table>
<p />
<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#21">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#22">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#23">Instance Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#24">IO Stats</a></li>
<li class="awr"><a class="awr" href="#25">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#26">Advisory Statistics</a></li>
<li class="awr"><a class="awr" href="#27">Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#28">Undo Statistics</a></li>
<li class="awr"><a class="awr" href="#29">Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#30">Segment Statistics</a></li>
<li class="awr"><a class="awr" href="#31">Dictionary Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#32">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#33">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#39">Replication Statistics (GoldenGate, XStream)</a></li>
<li class="awr"><a class="awr" href="#34">Advanced Queuing</a></li>
<li class="awr"><a class="awr" href="#6700">Resource Limit Statistics</a></li>
<li class="awr"><a class="awr" href="#37">Shared Server Statistics</a></li>
<li class="awr"><a class="awr" href="#36">Initialization Parameters</a></li>
<li class="awr"><a class="awr" href="#42">Active Session History (ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99995">ADDM Reports</a></li>
</ul>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<p />
<a class="awr" name="21"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1500">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#1600">Operating System Statistics</a></li>
<li class="awr"><a class="awr" href="#1610">Operating System Statistics - Detail</a></li>
<li class="awr"><a class="awr" href="#210">Foreground Wait Class</a></li>
<li class="awr"><a class="awr" href="#100">Foreground Wait Events</a></li>
<li class="awr"><a class="awr" href="#300">Background Wait Events</a></li>
<li class="awr"><a class="awr" href="#7400">Wait Event Histogram</a></li>
<li class="awr"><a class="awr" href="#7405">Wait Event Histogram (up to 64 us)</a></li>
<li class="awr"><a class="awr" href="#7410">Wait Event Histogram (up to 32 ms)</a></li>
<li class="awr"><a class="awr" href="#7420">Wait Event Histogram (up to 2 sec)</a></li>
<li class="awr"><a class="awr" href="#7430">Wait Event Histogram (up to 2 min)</a></li>
<li class="awr"><a class="awr" href="#7440">Wait Event Histogram (up to 1 hr)</a></li>
<li class="awr"><a class="awr" href="#5800">Service Statistics</a></li>
<li class="awr"><a class="awr" href="#5820">Service Wait Class Stats</a></li>
<li class="awr"><a class="awr" href="#5840">Top 10 Channel Waits</a></li>
<li class="awr"><a class="awr" href="#2310">Top Process Types by Wait Class</a></li>
<li class="awr"><a class="awr" href="#2320">Top Process Types by CPU Used</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1500"></a>
<h3 class="awr">Time Model Statistics</h3>
<ul>
<li class="awr">DB Time represents total time in user calls</li>
<li class="awr">DB CPU represents CPU time of foreground processes</li>
<li class="awr">Total CPU Time represents foreground and background processes</li>
<li class="awr">Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic</li>
<li class="awr">Ordered by % of DB time in descending order, followed by Statistic Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays different time model statistics. For each statistic, time and % of DB time are displayed"><tr><th class="awrbg" scope="col">Statistic Name</th><th class="awrbg" scope="col">Time (s)</th><th class="awrbg" scope="col">% of  DB Time</th><th class="awrbg" scope="col">% of Total CPU Time</th></tr>
<tr><td scope="row" class='awrc'>sql execute elapsed time</td><td align="right" class='awrc'>1,141.96</td><td align="right" class='awrc'>99.99</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>246.93</td><td align="right" class='awrnc'>21.62</td><td align="right" class='awrnc'>68.72</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL execution elapsed time</td><td align="right" class='awrc'>1.63</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>connection management call elapsed time</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>repeated bind elapsed time</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>1,142.08</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>background elapsed time</td><td align="right" class='awrnc'>179.32</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>background cpu time</td><td align="right" class='awrc'>112.39</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>31.28</td></tr>
<tr><td scope="row" class='awrnc'>total CPU time</td><td align="right" class='awrnc'>359.33</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1600"></a>
<h3 class="awr">Operating System Statistics</h3>
<ul>
<li class="awr"> *TIME statistic values are diffed.	 All others display actual values.  End Value is displayed if different </li>
<li class="awr"> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays operating systems statistics. For each statistic, actual value is displayed. If the end value is different, it is also displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>FREE_MEMORY_BYTES</td><td align="right" class='awrc'>6,253,129,728</td><td align="right" class='awrc'>6,269,161,472</td></tr>
<tr><td scope="row" class='awrnc'>INACTIVE_MEMORY_BYTES</td><td align="right" class='awrnc'>1,418,338,304</td><td align="right" class='awrnc'>1,419,300,864</td></tr>
<tr><td scope="row" class='awrc'>BUSY_TIME</td><td align="right" class='awrc'>58,648</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IDLE_TIME</td><td align="right" class='awrnc'>391,679</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IOWAIT_TIME</td><td align="right" class='awrc'>45,702</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SYS_TIME</td><td align="right" class='awrnc'>29,799</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>USER_TIME</td><td align="right" class='awrc'>20,265</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LOAD</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>RSRC_MGR_CPU_WAIT_TIME</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PHYSICAL_MEMORY_BYTES</td><td align="right" class='awrnc'>33,717,977,088</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPUS</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPU_CORES</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPU_SOCKETS</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GLOBAL_RECEIVE_SIZE_MAX</td><td align="right" class='awrnc'>4,194,304</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GLOBAL_SEND_SIZE_MAX</td><td align="right" class='awrc'>1,048,576</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_DEFAULT</td><td align="right" class='awrnc'>87,380</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_MAX</td><td align="right" class='awrc'>6,291,456</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_MIN</td><td align="right" class='awrnc'>4,096</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_DEFAULT</td><td align="right" class='awrc'>16,384</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_MAX</td><td align="right" class='awrnc'>4,194,304</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_MIN</td><td align="right" class='awrc'>4,096</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1610"></a>
<h3 class="awr">Operating System Statistics - Detail</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays some detailed operating systems statistics. load, % busy , % user, % sys, % idle, % iowait are displayed for begin and end snap time"><tr><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Load</th><th class="awrbg" scope="col">%busy</th><th class="awrbg" scope="col">%user</th><th class="awrbg" scope="col">%sys</th><th class="awrbg" scope="col">%idle</th><th class="awrbg" scope="col">%iowait</th></tr>
<tr><td scope="row" class='awrc'>08-Feb 09:33:49</td><td align="right" class='awrc'>1.51</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>08-Feb 09:43:51</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>13.02</td><td align="right" class='awrnc'>4.50</td><td align="right" class='awrnc'>6.62</td><td align="right" class='awrnc'>86.98</td><td align="right" class='awrnc'>10.15</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="210"></a>
<h3 class="awr">Foreground Wait Class</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> ordered by wait time desc, waits desc </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
<li class="awr">Captured Time accounts for	  112.1%  of Total DB time	 1,142.08 (s)</li>
<li class="awr">Total FG Wait Time:		1,033.21 (s)  DB CPU time:	   246.93 (s)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait class statistics"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">%DB time</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>434,588</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>825</td><td align="right" class='awrc'>1.90ms</td><td align="right" class='awrc'>72.28</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>247</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>21.62</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>378,740</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>540.82us</td><td align="right" class='awrc'>17.93</td></tr>
<tr><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>465</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>6.05ms</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>Configuration</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17.68ms</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>57.74us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>259.63us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>125</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.38us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>96.00us</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="100"></a>
<h3 class="awr">Foreground Wait Events</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Foreground Wait Events and their wait statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% DB time</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>394,796</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>566</td><td align="right" class='awrc'>1.43ms</td><td align="right" class='awrc'>52.46</td><td align="right" class='awrc'>49.52</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>39,790</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>260</td><td align="right" class='awrnc'>6.53ms</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>22.76</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>249,510</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>99</td><td align="right" class='awrc'>396.98us</td><td align="right" class='awrc'>33.16</td><td align="right" class='awrc'>8.67</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>28,550</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>1.17ms</td><td align="right" class='awrnc'>3.79</td><td align="right" class='awrnc'>2.92</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>11,208</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>2.67ms</td><td align="right" class='awrc'>1.49</td><td align="right" class='awrc'>2.62</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>45,426</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>431.65us</td><td align="right" class='awrnc'>6.04</td><td align="right" class='awrnc'>1.72</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>28,112</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>518.17us</td><td align="right" class='awrc'>3.74</td><td align="right" class='awrc'>1.28</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>13,463</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>439.95us</td><td align="right" class='awrnc'>1.79</td><td align="right" class='awrnc'>0.52</td></tr>
<tr><td scope="row" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>337.10ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.24</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>1,828</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>480.44us</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>210</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.40ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>369</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.32ms</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.57ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17.68ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.49ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.26ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12.57ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.50ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>146</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>117.47us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>648.47us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>628.75us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>57.74us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.26ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>699.29us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>779.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>126</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>30.59us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>895.75us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>250.92us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>259.63us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.27ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>watchdog main loop</td><td align="right" class='awrc'>800</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2,400</td><td align="right" class='awrc'>3000.00ms</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>4839.06ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execution Msg</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20.74ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.07ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>655.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="300"></a>
<h3 class="awr">Background Wait Events</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait events statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% bg time</th></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7,711</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>7.40ms</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>31.82</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>26,052</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>1.19ms</td><td align="right" class='awrnc'>3.46</td><td align="right" class='awrnc'>17.28</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>280</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>7.83ms</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>1.22</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>847</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.73ms</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.82</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1,806</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>641.72us</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.65</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>27.41ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.57</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>15.33ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.46</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>28,125</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>21.92us</td><td align="right" class='awrnc'>3.74</td><td align="right" class='awrnc'>0.34</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>2,619</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>179.58us</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>0.26</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>249</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.72ms</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.24</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>152</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.32ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>342</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>947.47us</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>709</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>436.72us</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.17</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10,584</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25.25us</td><td align="right" class='awrnc'>1.41</td><td align="right" class='awrnc'>0.15</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>2,253</td><td align="right" class='awrc'>99</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>88.30us</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>AQ: RAC AQ Network</td><td align="right" class='awrnc'>6,014</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25.80us</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6,507</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>23.53us</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>857</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>176.12us</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>294</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>458.11us</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9.35ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>578</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>216.47us</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.86ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>159</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>572.29us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>13,076</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6.89us</td><td align="right" class='awrnc'>1.74</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7.49ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>150</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>560.95us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>532.86us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>718.93us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>102</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>616.98us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20.20ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.38ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>457</td><td align="right" class='awrnc'>99</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>106.20us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>cursor: pin S wait on X</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>13.08ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>464</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>62.50us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>641.88us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.18ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.85ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.20ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>847</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>24.53us</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>562.18us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>801.86us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.37ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>423.42us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>607</td><td align="right" class='awrnc'>99</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25.77us</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>623.29us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>439.77us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>664.84us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>549.87us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>750.90us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>711.40us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>200.83us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>931.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.74ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>787</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.83us</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>182.08us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>563.88us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.45ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy acquire</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.78ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>347.44us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: DW - contention</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>.99ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>73.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.34ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.81ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>85</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>21.13us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>249.29us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>858.50us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>420.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.11ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>547.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rdbms ipc message</td><td align="right" class='awrnc'>28,475</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>13,724</td><td align="right" class='awrnc'>481.98ms</td><td align="right" class='awrnc'>3.78</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10,241</td><td align="right" class='awrc'>1462.97 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2,521</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9,604</td><td align="right" class='awrnc'>3809.80ms</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7,374</td><td align="right" class='awrc'>81</td><td align="right" class='awrc'>3,908</td><td align="right" class='awrc'>529.96ms</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" class='awrnc'>924</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1,808</td><td align="right" class='awrnc'>1956.21ms</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote message</td><td align="right" class='awrc'>17,549</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,204</td><td align="right" class='awrc'>68.61ms</td><td align="right" class='awrc'>2.33</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR sleep</td><td align="right" class='awrnc'>4,012</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,204</td><td align="right" class='awrnc'>300.07ms</td><td align="right" class='awrnc'>0.53</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pmon timer</td><td align="right" class='awrc'>401</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,203</td><td align="right" class='awrc'>2999.93ms</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7,538</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>1,203</td><td align="right" class='awrnc'>159.54ms</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group idle</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,200</td><td align="right" class='awrc'>600.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs yield cpu</td><td align="right" class='awrnc'>41,050</td><td align="right" class='awrnc'>98</td><td align="right" class='awrnc'>1,198</td><td align="right" class='awrnc'>29.19ms</td><td align="right" class='awrnc'>5.46</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>206,803</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,172</td><td align="right" class='awrc'>5.67ms</td><td align="right" class='awrc'>27.48</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>660</td><td align="right" class='awrnc'>60.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>smon timer</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>621</td><td align="right" class='awrc'>103.54 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>345</td><td align="right" class='awrnc'>81</td><td align="right" class='awrnc'>605</td><td align="right" class='awrnc'>1753.95ms</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>3002.50ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>816</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>603</td><td align="right" class='awrnc'>739.56ms</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OFS idle</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>603</td><td align="right" class='awrc'>3000.01ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>602</td><td align="right" class='awrnc'>60.23 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>602</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>602</td><td align="right" class='awrc'>1000.13ms</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6,045</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>602</td><td align="right" class='awrnc'>99.58ms</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>517</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>1161.25ms</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.01 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>30.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Timer</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>600.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>2999.70ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>588</td><td align="right" class='awrnc'>14.00 s</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>588</td><td align="right" class='awrc'>28.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>907.63us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>RMA: IPC0 completion sync</td><td align="right" class='awrc'>658</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>19.21us</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.75ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Parse Reply</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7400"></a>
<h3 class="awr">Wait Event Histogram</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (idle events last)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Total Waits</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&lt;128us">&lt;128us</th><th class="awrbg" scope="col" id="&lt;256us">&lt;256us</th><th class="awrbg" scope="col" id="&lt;512us">&lt;512us</th><th class="awrbg" scope="col" id="&gt;=512us">&gt;=512us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6013</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>77.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>28.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>72.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>857</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>25.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>58.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.8</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6506</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>62.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>83.3</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>95.2</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>294</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>75.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>23.5</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>159</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>34.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>53.5</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>848</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>34</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>78.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1803</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>25.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>28.7</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>465</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>43.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>28.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.2</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>619</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>77.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>2399</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>64.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>6.0</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>455</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>32.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>44.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>44.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>86</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>4.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>60.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>85.7</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>28.6</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>10.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>72.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>120</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>39.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>39.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>126</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>96.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>42.6</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>280</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>2626</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>44.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>3.1</td></tr>
<tr><td scope="row" class='awrc'>cursor: pin S wait on X</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>13.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>94.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>39.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>97.7</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>26.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>54.7</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>57.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>394.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>55.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>42.8</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>83.3</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>90.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>131</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>52.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>46.6</td></tr>
<tr><td scope="row" class='awrnc'>enq: DW - contention</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>64.3</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>87.5</td></tr>
<tr><td scope="row" class='awrc'>enq: SM -  contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>35.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>64.7</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>42.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>57.9</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy acquire</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>519</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>61.7</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>71.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>15.8</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>45.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>65.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>22.4</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>57</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>28.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>96.3</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>11.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>99.4</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>2553</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>73.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>24.2</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>13.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>76.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>21.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>249.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>60.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>18.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>28.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>68.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>29.1</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>210</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>57.1</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc quiesce</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>139</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>15.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>54.7</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering wait for read latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges enter server mode</td><td align="right" class='awrc'>35</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>85.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>40.0</td></tr>
<tr><td scope="row" class='awrc'>ges ipc enter server mode</td><td align="right" class='awrc'>83</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>88.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>37</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>86.5</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>850</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>581</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>51.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>5.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>10.5</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>37</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>10.8</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>787</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>91.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>41</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>63.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>34.1</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>32</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7698</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>48</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>undo segment extension</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>75.0</td></tr>
<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>816</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>83.7</td></tr>
<tr><td scope="row" class='awrc'>ASM cluster membership changes</td><td align="right" class='awrc'>345</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7536</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>93.6</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Gap Manager</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Timer</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4011</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>OFS idle</td><td align="right" class='awrnc'>200</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>517</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>24.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>34.0</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>62</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>33.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>25.8</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execute Reply</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>71.4</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>76.2</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>4.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.7</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Parse Reply</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>42.9</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>RMA: IPC0 completion sync</td><td align="right" class='awrc'>658</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>47.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>44.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6044</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>126</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.8</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2519</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.0</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrc'>42</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7372</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>88.7</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>206.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>62.2</td></tr>
<tr><td scope="row" class='awrnc'>gcs yield cpu</td><td align="right" class='awrnc'>41K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>99.3</td></tr>
<tr><td scope="row" class='awrc'>ges remote message</td><td align="right" class='awrc'>17.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.4</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat redo informer</td><td align="right" class='awrnc'>603</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>pman timer</td><td align="right" class='awrnc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>pmon timer</td><td align="right" class='awrc'>401</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>rdbms ipc message</td><td align="right" class='awrnc'>28.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>71.2</td></tr>
<tr><td scope="row" class='awrc'>smon timer</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" class='awrnc'>923</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>watchdog main loop</td><td align="right" class='awrc'>804</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7405"></a>
<h3 class="awr">Wait Event Histogram (up to 64 us)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds  </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1us  - 64us</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&gt;=64us">&gt;=64us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>5844</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>77.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>2.8</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>26.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>72.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>6.6</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>793</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>23.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>58.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>7.5</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6365</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>62.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>14.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>2.2</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>89.3</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>17.6</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>78.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>569</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>68.4</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>314</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>43.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>32.5</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>593</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>77.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.2</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1984</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>64.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>17.3</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>435</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>32.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>44.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>18.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>81</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>60.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>5.8</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>42.9</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>64.3</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>72.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>15.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>2.5</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net break/reset to client</td><td align="right" class='awrc'>62</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>39.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>48.3</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message to client</td><td align="right" class='awrnc'>126</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>94.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>55.6</td></tr>
<tr><td scope="row" class='awrnc'>asynch descriptor resize</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>835</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>68.2</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>13K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>91.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>.8</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>3453</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>86.8</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>58</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>333</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>26</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>81.3</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering wait for read latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges enter server mode</td><td align="right" class='awrc'>35</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>31.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>54.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges ipc enter server mode</td><td align="right" class='awrnc'>83</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>88.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>832</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>2.1</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>27</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>95.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>65.8</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>80.0</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>51.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>66.7</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>66.7</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>784</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>85.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>.4</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>97.6</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>75.0</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7410"></a>
<h3 class="awr">Wait Event Histogram (up to 32 ms)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds,	ms is 1024 microseconds (approximately 1 millisecond) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1ms  to 32ms</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms">&lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms">&lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&gt;=32ms">&gt;=32ms</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>85.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>69</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>76.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>85</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>46.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>846</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>44.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>46.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>515</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>71.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>98.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>143</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>94.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.2</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>71.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>57.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>11.1</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>277</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>17.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>76.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>82</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>96.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cursor: pin S wait on X</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>38.4K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>61.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>1.2</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>14.3K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>45.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>169K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>57.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>10.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>61</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>53.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>35.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>35.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>35.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>35.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>52.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>42.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>47.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy acquire</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>320</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>38.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>35.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>61.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>30.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>84.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>10.2K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>77.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>56.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>1.8</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>27.5K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>3.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>42.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>49.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>11.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>55.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>617</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>75.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>2866</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>79.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>44.8K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>82.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>8210</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>70.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>210</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>62.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>25.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>42.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>76</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>45.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrc'>24</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>13.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>24.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>21.6</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>94.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>89.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>89.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>65.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>24.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>46.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7645</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>75.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.7</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>48</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>85.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>25.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7420"></a>
<h3 class="awr">Wait Event Histogram (up to 2 sec)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 ms is milliseconds    s is 1024 milliseconds (approximately 1 second) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 64ms  to 2s</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms">&lt;64ms</th><th class="awrbg" scope="col" id="&lt;1/8s">&lt;1/8s</th><th class="awrbg" scope="col" id="&lt;1/4s">&lt;1/4s</th><th class="awrbg" scope="col" id="&lt;1/2s">&lt;1/2s</th><th class="awrbg" scope="col" id="&lt;1s">  &lt;1s</th><th class="awrbg" scope="col" id="&lt;2s">  &lt;2s</th><th class="awrbg" scope="col" id="&gt;=2s">&gt;=2s</th></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>88.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>470</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>98.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>134</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>78.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>53</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7430"></a>
<h3 class="awr">Wait Event Histogram (up to 2 min)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7440"></a>
<h3 class="awr">Wait Event Histogram (up to 1 hr)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5800"></a>
<h3 class="awr">Service Statistics</h3>
<ul>
<li class="awr"> ordered by DB Time</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service statistics. It displays service names and corresponding DB time, DB CPU, Physical reads, logical reads."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">DB Time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">Physical Reads (K)</th><th class="awrbg" scope="col">Logical Reads (K)</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td><td align="right" class='awrc'>1,138</td><td align="right" class='awrc'>246</td><td align="right" class='awrc'>2,204</td><td align="right" class='awrc'>3,357</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>31</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>p30dbXDB</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5820"></a>
<h3 class="awr">Service Wait Class Stats</h3>
<ul>
<li class="awr"> Wait Class info for services in the Service Statistics section.  </li>
<li class="awr"> Total Waits and Time Waited displayed for the following wait	  classes:  User I/O, Concurrency, Administrative, Network </li>
<li class="awr"> Time Waited (Wt Time) in seconds</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service wait class statistics. It displays user I/O total wait, user I/O wait time, concurrency total wait, concurrency wait time, etc."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">User I/O Total Wts</th><th class="awrbg" scope="col">User I/O Wt Time</th><th class="awrbg" scope="col">Concurcy Total Wts</th><th class="awrbg" scope="col">Concurcy Wt Time</th><th class="awrbg" scope="col">Admin Total Wts</th><th class="awrbg" scope="col">Admin Wt Time</th><th class="awrbg" scope="col">Network Total Wts</th><th class="awrbg" scope="col">Network Wt Time</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td>
<td align="right" class='awrc'>433988</td><td align="right" class='awrc'>824</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td>
<td align="right" class='awrnc'>29434</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>881</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>464</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td>
<td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5840"></a>
<h3 class="awr">Top 10 Channel Waits</h3>
<ul>
<li class="awr"> Top 10 Channel Waits by wait time </li>
</ul>
<table border="0" class="tdiff" summary="This table displays top 10 Channel Watis by wait time."><tr><th class="awrbg" scope="col">Channel</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Wait</th></tr>
<tr><td scope="row" class='awrc'>kxfp control signal channel</td>
<td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>787.00us</td></tr>
<tr><td scope="row" class='awrnc'>obj broadcast channel</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.27ms</td></tr>
<tr><td scope="row" class='awrc'>RBR channel</td>
<td align="right" class='awrc'>40</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.19ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2310"></a>
<h3 class="awr">Top Process Types by Wait Class</h3>
<ul>
<li class="awr"> This table displays top process types ordered by wait class</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by Wait Class. . This table displays top process types ordered by wait class"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">Wait Class Type</th><th class="awrbg" scope="col">Wait Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>823.98</td></tr>
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>204.63</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td scope="row" class='awrc'>Redo etc.</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>56.68</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>30.93</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>2.79</td></tr>
<tr><td scope="row" class='awrnc'>CKPT</td><td scope="row" class='awrnc'>checkpoint</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>2.45</td></tr>
<tr><td scope="row" class='awrc'>LMON</td><td scope="row" class='awrc'>global enqueue service monitor</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>2.32</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>0.95</td></tr>
<tr><td scope="row" class='awrc'>IMR</td><td scope="row" class='awrc'>CGS IMR Slave</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>0.94</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.63</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>0.61</td></tr>
<tr><td scope="row" class='awrnc'>CKPT</td><td scope="row" class='awrnc'>checkpoint</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>0.44</td></tr>
<tr><td scope="row" class='awrc'>MMNL</td><td scope="row" class='awrc'>Manageability Monitor Process 2</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.37</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>0.28</td></tr>
<tr><td scope="row" class='awrc'>P</td><td scope="row" class='awrc'>Parallel query slave</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.28</td></tr>
<tr><td scope="row" class='awrnc'>SMON</td><td scope="row" class='awrnc'>System Monitor Process</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.27</td></tr>
<tr><td scope="row" class='awrc'>LM</td><td scope="row" class='awrc'>global cache service process</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>RS*</td><td scope="row" class='awrnc'>GCS RM Slave</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.19</td></tr>
<tr><td scope="row" class='awrc'>QM*</td><td scope="row" class='awrc'>QMON MS</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>MZ</td><td scope="row" class='awrnc'>MMON slave class 2</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>0.14</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2320"></a>
<h3 class="awr">Top Process Types by CPU Used</h3>
<ul>
<li class="awr"> This table displays top process types ordered by CPU time</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by CPU Used. . This table displays top process types ordered by CPU time"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">CPU Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td align="right" class='awrc'>246.04</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td align="right" class='awrnc'>55.82</td></tr>
<tr><td scope="row" class='awrc'>VKTM</td><td scope="row" class='awrc'>Virtual Keeper of TiMe process</td><td align="right" class='awrc'>27.18</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td align="right" class='awrnc'>20.06</td></tr>
<tr><td scope="row" class='awrc'>RS*</td><td scope="row" class='awrc'>GCS RM Slave</td><td align="right" class='awrc'>8.16</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td align="right" class='awrnc'>6.04</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td scope="row" class='awrc'>Redo etc.</td><td align="right" class='awrc'>5.60</td></tr>
<tr><td scope="row" class='awrnc'>VKRM</td><td scope="row" class='awrnc'>Virtual sKeduler for Resource Manager</td><td align="right" class='awrnc'>3.06</td></tr>
<tr><td scope="row" class='awrc'>GCR</td><td scope="row" class='awrc'>GCR Slaves (LMHB)</td><td align="right" class='awrc'>2.98</td></tr>
<tr><td scope="row" class='awrnc'>IPC0</td><td scope="row" class='awrnc'>IPC Service 0</td><td align="right" class='awrnc'>2.76</td></tr>
<tr><td scope="row" class='awrc'>DIA0</td><td scope="row" class='awrc'>diagnosibility process 0</td><td align="right" class='awrc'>2.21</td></tr>
<tr><td scope="row" class='awrnc'>P</td><td scope="row" class='awrnc'>Parallel query slave</td><td align="right" class='awrnc'>1.41</td></tr>
<tr><td scope="row" class='awrc'>LMON</td><td scope="row" class='awrc'>global enqueue service monitor</td><td align="right" class='awrc'>1.24</td></tr>
<tr><td scope="row" class='awrnc'>LMD0</td><td scope="row" class='awrnc'>global enqueue service daemon 0</td><td align="right" class='awrnc'>1.14</td></tr>
<tr><td scope="row" class='awrc'>LMHB</td><td scope="row" class='awrc'>lm heartbeat monitor</td><td align="right" class='awrc'>1.14</td></tr>
<tr><td scope="row" class='awrnc'>LMD1</td><td scope="row" class='awrnc'>global enqueue service daemon 1</td><td align="right" class='awrnc'>0.91</td></tr>
<tr><td scope="row" class='awrc'>IMR</td><td scope="row" class='awrc'>CGS IMR Slave</td><td align="right" class='awrc'>0.90</td></tr>
<tr><td scope="row" class='awrnc'>FENC</td><td scope="row" class='awrnc'>IOServer fence monitor</td><td align="right" class='awrnc'>0.73</td></tr>
<tr><td scope="row" class='awrc'>SCM</td><td scope="row" class='awrc'>DLM Statistics Collection and Management Slave</td><td align="right" class='awrc'>0.71</td></tr>
<tr><td scope="row" class='awrnc'>QM*</td><td scope="row" class='awrnc'>QMON MS</td><td align="right" class='awrnc'>0.67</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="22"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#400">SQL ordered by Elapsed Time</a></li>
<li class="awr"><a class="awr" href="#500">SQL ordered by CPU Time</a></li>
<li class="awr"><a class="awr" href="#550">SQL ordered by User I/O Wait Time</a></li>
<li class="awr"><a class="awr" href="#600">SQL ordered by Gets</a></li>
<li class="awr"><a class="awr" href="#700">SQL ordered by Reads</a></li>
<li class="awr"><a class="awr" href="#740">SQL ordered by Physical Reads (UnOptimized)</a></li>
<li class="awr"><a class="awr" href="#800">SQL ordered by Executions</a></li>
<li class="awr"><a class="awr" href="#900">SQL ordered by Parse Calls</a></li>
<li class="awr"><a class="awr" href="#1000">SQL ordered by Sharable Memory</a></li>
<li class="awr"><a class="awr" href="#1100">SQL ordered by Version Count</a></li>
<li class="awr"><a class="awr" href="#1150">SQL ordered by Cluster Wait Time</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="400"></a>
<h3 class="awr">SQL ordered by Elapsed Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> % Total DB Time is the Elapsed Time of the SQL statement divided     into the Total Database Time multiplied by 100 </li>
<li class="awr"> %Total - Elapsed Time	as a percentage of Total DB time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   99.2% of Total DB Time (s):		 1,142</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total DB Time (s):	    1,142</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by elapsed time"><tr><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Elapsed Time per Exec (s) </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">	SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>637.51</td><td align="right" class='awrc'>7,473</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>55.82</td><td align="right" class='awrc'>19.63</td><td align="right" class='awrc'>72.38</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>568.95</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.95</td><td align="right" class='awrnc'>49.82</td><td align="right" class='awrnc'>20.88</td><td align="right" class='awrnc'>74.96</td><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>568.94</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.94</td><td align="right" class='awrc'>49.82</td><td align="right" class='awrc'>22.36</td><td align="right" class='awrc'>69.86</td><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>491.71</td><td align="right" class='awrnc'>42,415</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>43.05</td><td align="right" class='awrnc'>23.04</td><td align="right" class='awrnc'>73.61</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>1.66</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#6hnhqahphpk8n">6hnhqahphpk8n</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select free_mb from v$asm_disk...</td></tr>
<tr><td align="right" class='awrnc'>0.55</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>76.92</td><td align="right" class='awrnc'>12.11</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>0.48</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>78.64</td><td align="right" class='awrc'>12.21</td><td scope="row" class='awrc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>76.92</td><td align="right" class='awrnc'>13.29</td><td scope="row" class='awrnc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>7.34</td><td align="right" class='awrc'>1.70</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>98.66</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#22356bkgsdcnh">22356bkgsdcnh</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT COUNT(*) FROM X$KSPPI A...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="500"></a>
<h3 class="awr">SQL ordered by CPU Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - CPU Time	as a percentage of Total DB CPU </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   97.3% of Total CPU Time (s): 	    247</li>
<li class="awr">Captured PL/SQL account for  100.0% of Total CPU Time (s):	       247</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by CPU time"><tr><th class="awrbg" scope="col">CPU    Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">CPU per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>127.21</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>127.21</td><td align="right" class='awrc'>51.52</td><td align="right" class='awrc'>568.94</td><td align="right" class='awrc'>22.36</td><td align="right" class='awrc'>69.86</td><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>125.12</td><td align="right" class='awrnc'>7,473</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>50.67</td><td align="right" class='awrnc'>637.51</td><td align="right" class='awrnc'>19.63</td><td align="right" class='awrnc'>72.38</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>118.82</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>118.82</td><td align="right" class='awrc'>48.12</td><td align="right" class='awrc'>568.95</td><td align="right" class='awrc'>20.88</td><td align="right" class='awrc'>74.96</td><td scope="row" class='awrc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>113.27</td><td align="right" class='awrnc'>42,415</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>45.87</td><td align="right" class='awrnc'>491.71</td><td align="right" class='awrnc'>23.04</td><td align="right" class='awrnc'>73.61</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'>0.43</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>12.11</td><td scope="row" class='awrc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.48</td><td align="right" class='awrnc'>78.64</td><td align="right" class='awrnc'>12.21</td><td scope="row" class='awrnc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>13.29</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>98.66</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#22356bkgsdcnh">22356bkgsdcnh</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT COUNT(*) FROM X$KSPPI A...</td></tr>
<tr><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>92.10</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#dcbt0gjzjwwbs">dcbt0gjzjwwbs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrh$_sga_target_ad...</td></tr>
<tr><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>94.69</td><td align="right" class='awrnc'>3.86</td><td scope="row" class='awrnc'><a class="awr" href="#1fvsn5j51ugz3">1fvsn5j51ugz3</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> begin dbms_rcvman.resetAll; e...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="550"></a>
<h3 class="awr">SQL ordered by User I/O Wait Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - User I/O Time as a percentage of Total User I/O Wait time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   99.5% of Total User I/O Wait Time (s):	      828</li>
<li class="awr">Captured PL/SQL account for   99.5% of Total User I/O Wait Time (s):		 828</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by user I/O time"><tr><th class="awrbg" scope="col">User I/O Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">UIO per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>461.40</td><td align="right" class='awrc'>7,473</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>55.73</td><td align="right" class='awrc'>637.51</td><td align="right" class='awrc'>19.63</td><td align="right" class='awrc'>72.38</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>426.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>426.51</td><td align="right" class='awrnc'>51.51</td><td align="right" class='awrnc'>568.95</td><td align="right" class='awrnc'>20.88</td><td align="right" class='awrnc'>74.96</td><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>397.47</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>397.47</td><td align="right" class='awrc'>48.01</td><td align="right" class='awrc'>568.94</td><td align="right" class='awrc'>22.36</td><td align="right" class='awrc'>69.86</td><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>361.93</td><td align="right" class='awrnc'>42,415</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>43.71</td><td align="right" class='awrnc'>491.71</td><td align="right" class='awrnc'>23.04</td><td align="right" class='awrnc'>73.61</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>21.53</td><td align="right" class='awrc'>73.07</td><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>5.81</td><td align="right" class='awrnc'>96.37</td><td scope="row" class='awrnc'><a class="awr" href="#03guhbfpak0w7">03guhbfpak0w7</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_ub1$ i_id...</td></tr>
<tr><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>12.11</td><td scope="row" class='awrc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.48</td><td align="right" class='awrnc'>78.64</td><td align="right" class='awrnc'>12.21</td><td scope="row" class='awrnc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>13.29</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>60.40</td><td align="right" class='awrnc'>41.16</td><td scope="row" class='awrnc'><a class="awr" href="#atwuyuvqkf27w">atwuyuvqkf27w</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT /*+ OPT_PARAM('_fix_con...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="600"></a>
<h3 class="awr">SQL ordered by Gets</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - Buffer Gets	as a percentage of Total Buffer Gets </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Buffer Gets:	 3,389,562</li>
<li class="awr">Captured SQL account for   99.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by buffer gets"><tr><th class="awrbg" scope="col">Buffer Gets </th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Gets     per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">	%IO</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>2,804,817</td><td align="right" class='awrc'>42,415</td><td align="right" class='awrc'>66.13</td><td align="right" class='awrc'>82.75</td><td align="right" class='awrc'>491.71</td><td class='awrc'>23</td><td class='awrc'>73.6</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,792,446</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1,792,446.00</td><td align="right" class='awrnc'>52.88</td><td align="right" class='awrnc'>568.95</td><td class='awrnc'>20.9</td><td class='awrnc'>75</td><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>1,564,773</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1,564,773.00</td><td align="right" class='awrc'>46.16</td><td align="right" class='awrc'>568.94</td><td class='awrc'>22.4</td><td class='awrc'>69.9</td><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>543,691</td><td align="right" class='awrnc'>7,473</td><td align="right" class='awrnc'>72.75</td><td align="right" class='awrnc'>16.04</td><td align="right" class='awrnc'>637.51</td><td class='awrnc'>19.6</td><td class='awrnc'>72.4</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>5,086</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5,086.00</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.06</td><td class='awrc'>73.4</td><td class='awrc'>9.7</td><td scope="row" class='awrc'><a class="awr" href="#bjck50zs3nc95">bjck50zs3nc95</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into WRH$_SYSSTAT (dbid...</td></tr>
<tr><td align="right" class='awrnc'>4,676</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2,338.00</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.55</td><td class='awrnc'>76.9</td><td class='awrnc'>12.1</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>4,342</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2,171.00</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.48</td><td class='awrc'>78.6</td><td class='awrc'>12.2</td><td scope="row" class='awrc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td align="right" class='awrnc'>4,160</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2,080.00</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.44</td><td class='awrnc'>76.9</td><td class='awrnc'>13.3</td><td scope="row" class='awrnc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrc'>2,087</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>2,087.00</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.17</td><td class='awrc'>44.2</td><td class='awrc'>4.2</td><td scope="row" class='awrc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td align="right" class='awrnc'>2,077</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2,077.00</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.17</td><td class='awrnc'>43.7</td><td class='awrnc'>4.2</td><td scope="row" class='awrnc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="700"></a>
<h3 class="awr">SQL ordered by Reads</h3>
<ul>
<li class="awr"> %Total - Physical Reads as a percentage of Total Disk Reads </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Disk Reads:	2,206,194</li>
<li class="awr">Captured SQL account for   99.9% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by physical reads"><tr><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Reads	  per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>1,878,864</td><td align="right" class='awrc'>42,415</td><td align="right" class='awrc'>44.30</td><td align="right" class='awrc'>85.16</td><td align="right" class='awrc'>491.71</td><td align="right" class='awrc'>23.04</td><td align="right" class='awrc'>73.61</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,172,802</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1,172,802.00</td><td align="right" class='awrnc'>53.16</td><td align="right" class='awrnc'>568.95</td><td align="right" class='awrnc'>20.88</td><td align="right" class='awrnc'>74.96</td><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>1,031,832</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1,031,832.00</td><td align="right" class='awrc'>46.77</td><td align="right" class='awrc'>568.94</td><td align="right" class='awrc'>22.36</td><td align="right" class='awrc'>69.86</td><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>324,702</td><td align="right" class='awrnc'>7,473</td><td align="right" class='awrnc'>43.45</td><td align="right" class='awrnc'>14.72</td><td align="right" class='awrnc'>637.51</td><td align="right" class='awrnc'>19.63</td><td align="right" class='awrnc'>72.38</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>59</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>29.50</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>12.11</td><td scope="row" class='awrc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>26.50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.48</td><td align="right" class='awrnc'>78.64</td><td align="right" class='awrnc'>12.21</td><td scope="row" class='awrnc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td align="right" class='awrc'>53</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>26.50</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>13.29</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>36.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>21.53</td><td align="right" class='awrnc'>73.07</td><td scope="row" class='awrnc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td align="right" class='awrc'>26</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>13.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>60.40</td><td align="right" class='awrc'>41.16</td><td scope="row" class='awrc'><a class="awr" href="#atwuyuvqkf27w">atwuyuvqkf27w</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT /*+ OPT_PARAM('_fix_con...</td></tr>
<tr><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>24.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>5.81</td><td align="right" class='awrnc'>96.37</td><td scope="row" class='awrnc'><a class="awr" href="#03guhbfpak0w7">03guhbfpak0w7</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_ub1$ i_id...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="740"></a>
<h3 class="awr">SQL ordered by Physical Reads (UnOptimized)</h3>
<ul>
<li class="awr"> UnOptimized Read Reqs = Physical Read Reqs -	    (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile) </li>
<li class="awr"> %Opt	- Optimized Reads as percentage of SQL Read Requests </li>
<li class="awr"> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs</li>
<li class="awr">Total Physical Read Requests:	    2,206,159</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       2,206,159</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by unoptimized read requests"><tr><th class="awrbg" scope="col">UnOptimized Read Reqs</th><th class="awrbg" scope="col">Physical  Read Reqs</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">UnOptimized Reqs per Exec</th><th class="awrbg" scope="col">%Opt</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>1,172,802</td><td align="right" class='awrc'>1,172,802</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1,172,802.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>53.16</td><td scope="row" class='awrc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>1,031,832</td><td align="right" class='awrnc'>1,031,832</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1,031,832.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>46.77</td><td scope="row" class='awrnc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>36</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>36.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>13.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>20</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>10.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>494</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>17</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>17.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#c9059z5ksrf1x">c9059z5ksrf1x</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrh$_latch (dbid, ...</td></tr>
<tr><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>14.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#1fvsn5j51ugz3">1fvsn5j51ugz3</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> begin dbms_rcvman.resetAll; e...</td></tr>
<tr><td align="right" class='awrc'>14</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#49s332uhbnsma">49s332uhbnsma</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> declare vsn varchar2(20); beg...</td></tr>
<tr><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>10.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>begin prvt_hdm.execute_slave_a...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="800"></a>
<h3 class="awr">SQL ordered by Executions</h3>
<ul>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Executions:	   52,125</li>
<li class="awr">Captured SQL account for   97.8% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of executions"><tr><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Rows Processed</th><th class="awrbg" scope="col">Rows per Exec</th><th class="awrbg" scope="col">Elapsed	Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">  %IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>42,415</td><td align="right" class='awrc'>42,416</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>491.71</td><td class='awrc'>23</td><td class='awrc'>73.6</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>7,473</td><td align="right" class='awrnc'>470,799</td><td align="right" class='awrnc'>63.00</td><td align="right" class='awrnc'>637.51</td><td class='awrnc'>19.6</td><td class='awrnc'>72.4</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>494</td><td align="right" class='awrc'>494</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.09</td><td class='awrc'>77.9</td><td class='awrc'>13.4</td><td scope="row" class='awrc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrnc'>158</td><td align="right" class='awrnc'>158</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.09</td><td class='awrnc'>78.6</td><td class='awrnc'>9.7</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.31</td><td class='awrc'>7.3</td><td class='awrc'>1.7</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>836</td><td align="right" class='awrnc'>16.08</td><td align="right" class='awrnc'>0.03</td><td class='awrnc'>31.2</td><td class='awrnc'>54.4</td><td scope="row" class='awrnc'><a class="awr" href="#2sxqgx5hx76qr">2sxqgx5hx76qr</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ rule */ bucket, end...</td></tr>
<tr><td align="right" class='awrc'>37</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.00</td><td class='awrc'>94.8</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#1rpgk59t8pvs6">1rpgk59t8pvs6</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> begin dbms_output.get_line(:l...</td></tr>
<tr><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.10</td><td class='awrnc'>88.5</td><td class='awrnc'>9.9</td><td scope="row" class='awrnc'><a class="awr" href="#49s332uhbnsma">49s332uhbnsma</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> declare vsn varchar2(20); beg...</td></tr>
<tr><td align="right" class='awrc'>23</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.01</td><td class='awrc'>69.1</td><td class='awrc'>22.6</td><td scope="row" class='awrc'><a class="awr" href="#5cu0x10yu88sw">5cu0x10yu88sw</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>merge into sys.wri$_index_usag...</td></tr>
<tr><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.01</td><td class='awrnc'>37.4</td><td class='awrnc'>45.1</td><td scope="row" class='awrnc'><a class="awr" href="#5u7g54s63p4ts">5u7g54s63p4ts</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select toid from type$ where p...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="900"></a>
<h3 class="awr">SQL ordered by Parse Calls</h3>
<ul>
<li class="awr">Total Parse Calls:	     1,302</li>
<li class="awr">Captured SQL account for   50.2% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of parse calls"><tr><th class="awrbg" scope="col">Parse Calls</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total Parses</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>158</td><td align="right" class='awrc'>158</td><td align="right" class='awrc'>12.14</td><td scope="row" class='awrc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrnc'>148</td><td align="right" class='awrnc'>494</td><td align="right" class='awrnc'>11.37</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>6.84</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>2.84</td><td scope="row" class='awrnc'><a class="awr" href="#1rpgk59t8pvs6">1rpgk59t8pvs6</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> begin dbms_output.get_line(:l...</td></tr>
<tr><td align="right" class='awrc'>30</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>2.30</td><td scope="row" class='awrc'><a class="awr" href="#49s332uhbnsma">49s332uhbnsma</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> declare vsn varchar2(20); beg...</td></tr>
<tr><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>1.77</td><td scope="row" class='awrnc'><a class="awr" href="#5cu0x10yu88sw">5cu0x10yu88sw</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge into sys.wri$_index_usag...</td></tr>
<tr><td align="right" class='awrc'>22</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>1.69</td><td scope="row" class='awrc'><a class="awr" href="#5u7g54s63p4ts">5u7g54s63p4ts</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select toid from type$ where p...</td></tr>
<tr><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>1.54</td><td scope="row" class='awrnc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select count(*) from ilmobj$ w...</td></tr>
<tr><td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.46</td><td scope="row" class='awrc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>select ind.type#, ind.property...</td></tr>
<tr><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>1.23</td><td scope="row" class='awrnc'><a class="awr" href="#fkc81h2686aqc">fkc81h2686aqc</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>select pob.parttype from sys.i...</td></tr>
<tr><td align="right" class='awrc'>16</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>1.23</td><td scope="row" class='awrc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>select pob.parttype from sys.t...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1000"></a>
<h3 class="awr">SQL ordered by Sharable Memory</h3>
<ul>
<li class="awr">Only Statements with Sharable Memory greater than 1048576 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by amount of shared memory used"><tr><th class="awrbg" scope="col">Sharable Mem (b)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>21,989,193</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1.77</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrnc'>2,095,564</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.17</td><td scope="row" class='awrnc'><a class="awr" href="#atwuyuvqkf27w">atwuyuvqkf27w</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT /*+ OPT_PARAM('_fix_con...</td></tr>
<tr><td align="right" class='awrc'>1,377,287</td><td align="right" class='awrc'>42,415</td><td align="right" class='awrc'>0.11</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,317,728</td><td align="right" class='awrnc'>7,473</td><td align="right" class='awrnc'>0.11</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1100"></a>
<h3 class="awr">SQL ordered by Version Count</h3>
<ul>
<li class="awr">Only Statements with Version Count greater than 20 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by version counts"><tr><th class="awrbg" scope="col">Version Count </th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>47</td><td align="right" class='awrc'>42,415</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>7,473</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1150"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time</h3>
<ul>
<li class="awr"> %Total - Cluster Time	as a percentage of Total Cluster Wait Time </li>
<li class="awr"> %Clu	- Cluster Time	as a percentage of Elapsed Time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time </li>
<li class="awr"> Only SQL with Cluster Wait Time &gt; .005 seconds is reported</li>
<li class="awr">Total Cluster Wait Time (s):		 206</li>
<li class="awr">Captured SQL account for   99.4% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by cluster wait time"><tr><th class="awrbg" scope="col">Cluster Wait Time (s)</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed Time(s)</th><th class="awrbg" scope="col">%Clu</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>119.92</td><td align="right" class='awrc'>7,473</td><td align="right" class='awrc'>58.18</td><td align="right" class='awrc'>637.51</td><td align="right" class='awrc'>18.81</td><td align="right" class='awrc'>19.63</td><td align="right" class='awrc'>72.38</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>113.40</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>55.02</td><td align="right" class='awrnc'>568.94</td><td align="right" class='awrnc'>19.93</td><td align="right" class='awrnc'>22.36</td><td align="right" class='awrnc'>69.86</td><td scope="row" class='awrnc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>91.23</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>44.27</td><td align="right" class='awrc'>568.95</td><td align="right" class='awrc'>16.04</td><td align="right" class='awrc'>20.88</td><td align="right" class='awrc'>74.96</td><td scope="row" class='awrc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>84.48</td><td align="right" class='awrnc'>42,415</td><td align="right" class='awrnc'>40.99</td><td align="right" class='awrnc'>491.71</td><td align="right" class='awrnc'>17.18</td><td align="right" class='awrnc'>23.04</td><td align="right" class='awrnc'>73.61</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>93.16</td><td align="right" class='awrc'>7.34</td><td align="right" class='awrc'>1.70</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>55.09</td><td align="right" class='awrnc'>44.20</td><td align="right" class='awrnc'>4.22</td><td scope="row" class='awrnc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>56.04</td><td align="right" class='awrc'>43.73</td><td align="right" class='awrc'>4.25</td><td scope="row" class='awrc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
<tr><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>54.59</td><td align="right" class='awrnc'>28.97</td><td align="right" class='awrnc'>20.35</td><td scope="row" class='awrnc'><a class="awr" href="#c9059z5ksrf1x">c9059z5ksrf1x</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into wrh$_latch (dbid, ...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>55.75</td><td align="right" class='awrc'>57.05</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#3aa3xb3t0a9hb">3aa3xb3t0a9hb</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> UPDATE wrh$_seg_stat_obj ob S...</td></tr>
<tr><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>494</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>19.27</td><td align="right" class='awrnc'>77.91</td><td align="right" class='awrnc'>13.41</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>9.77</td><td align="right" class='awrc'>21.53</td><td align="right" class='awrc'>73.07</td><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>92.38</td><td align="right" class='awrnc'>15.89</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#b0n14dkbkdpbb">b0n14dkbkdpbb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select snap_interval, snapint_...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>13.64</td><td align="right" class='awrc'>23.83</td><td align="right" class='awrc'>14.27</td><td scope="row" class='awrc'><a class="awr" href="#0kkhhb2w93cx0">0kkhhb2w93cx0</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update seg$ set type#=:4, bloc...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>7.73</td><td align="right" class='awrnc'>92.10</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#dcbt0gjzjwwbs">dcbt0gjzjwwbs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into wrh$_sga_target_ad...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>27.71</td><td align="right" class='awrc'>31.21</td><td align="right" class='awrc'>54.39</td><td scope="row" class='awrc'><a class="awr" href="#2sxqgx5hx76qr">2sxqgx5hx76qr</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ rule */ bucket, end...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>158</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>9.21</td><td align="right" class='awrnc'>78.58</td><td align="right" class='awrnc'>9.70</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrc'>76.92</td><td align="right" class='awrc'>12.11</td><td scope="row" class='awrc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>43.35</td><td align="right" class='awrnc'>71.60</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>select ind.type#, ind.property...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>9.38</td><td align="right" class='awrc'>73.36</td><td align="right" class='awrc'>9.74</td><td scope="row" class='awrc'><a class="awr" href="#bjck50zs3nc95">bjck50zs3nc95</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into WRH$_SYSSTAT (dbid...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="03guhbfpak0w7"></a>03guhbfpak0w7</td><td class='awrc'><pre_sqltext class="awr">select /*+ index(idl_ub1$ i_idl_ub11) */ piece#, length, piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="078ab5pdvxx3c"></a>078ab5pdvxx3c</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '64' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0kkhhb2w93cx0"></a>0kkhhb2w93cx0</td><td class='awrc'><pre_sqltext class="awr">update seg$ set type#=:4, blocks=:5, extents=:6, minexts=:7, maxexts=:8, extsize=:9, extpct=:10, user#=:11, iniexts=:12, lists=decode(:13,  65535,  NULL,	:13), groups=decode(:14,  65535,  NULL,  :14),	cachehint=:15,	hwmincr=:16,  spare1=DECODE(:17, 0, NULL, :17), scanhint=:18,  bitmapranges=:19 where ts#=:1 and file#=:2 and block#=:3</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0sy7x6xzjg2yy"></a>0sy7x6xzjg2yy</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '64' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0w26sk6t6gq98"></a>0w26sk6t6gq98</td><td class='awrc'><pre_sqltext class="awr">SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="1fvsn5j51ugz3"></a>1fvsn5j51ugz3</td><td class='awrnc'><pre_sqltext class="awr">      begin
	 dbms_rcvman.resetAll;
      end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="1rpgk59t8pvs6"></a>1rpgk59t8pvs6</td><td class='awrc'><pre_sqltext class="awr">	   begin
	 dbms_output.get_line(:line,  :status);
      end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="22356bkgsdcnh"></a>22356bkgsdcnh</td><td class='awrnc'><pre_sqltext class="awr">SELECT COUNT(*) FROM X$KSPPI A,	X$KSPPCV2 B WHERE A.INDX + 1 = KSPFTCTXPN AND KSPPINM = '_deferred_log_dest_is_valid' AND UPPER(KSPFTCTXVL)='TRUE'</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="2sxqgx5hx76qr"></a>2sxqgx5hx76qr</td><td class='awrc'><pre_sqltext class="awr">select /*+ rule */ bucket,  endpoint,  col#,  epvalue,  epvalue_raw,  ep_repeat_count,  endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrnc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,  C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3aa3xb3t0a9hb"></a>3aa3xb3t0a9hb</td><td class='awrc'><pre_sqltext class="awr">  UPDATE  wrh$_seg_stat_obj  ob	  SET (snap_id,  owner,  object_name,  subobject_name,	tablespace_name,	  object_type,	partition_type,  index_type,  base_obj#,  base_object_name,	       base_object_owner) =	  (SELECT snap_id + 1,		      nvl(ownername_kewrseg,  owner),		     nvl(objname_kewrseg,  object_name),		nvl(subobjname_kewrseg,  subobject_name),		 nvl(tsname_kewrseg,  tablespace_name), 	       decode(objtype_kewrseg,	0,  object_type,		sys.dbms_swrf_internal.awr_decode_object_type(objtype_kewrseg,	18)),		    decode(ptype_kewrseg,  0,  partition_type,			     decode(ptype_kewrseg,  0,	'NONE',  1,  'RANGE',  2,  'HASH',			      3,  'SYSTEM',  4,  'LIST',   NULL,  'NONE',  'UNKNOWN')), 	       decode(indtype_kewrseg,	0,  index_type, 		   decode(indtype_kewrseg,			  1,  'NORMAL'||			  decode(bitand(iprop_kewrseg,	4),  0,  '',  4,  '/REV'),			  2,  'BITMAP',  3,  'CLUSTER',  4,  'IOT - TOP',			 5,  'IOT - NESTED',  6,  'SECONDARY',	7,  'ANSI',			   8,  'LOB',  9,  'DOMAIN')),		      coalesce(nullif(bobjn_kewrseg, 0),  so.base_obj#),		case bobjname_kewrseg		      when NULL then so.base_object_name		 else case length(bobjname_kewrseg)			   when 0 then so.base_object_name			  else bobjname_kewrseg 		     end		end,		    case bowname_kewrseg		 when NULL then so.base_object_owner		     else case length(bowname_kewrseg)			      when 0 then so.base_object_owner			      else bowname_kewrseg			end		   end		     FROM  wrh$_seg_stat_obj			  so JOIN  x$kewrtsegstat   io ON		(dbid = :dbid and con_dbid = con_dbid_kewrseg		     and ts# = tsn_kewrseg and obj# = objn_kewrseg		  and dataobj# = objd_kewrseg)		WHERE ob.dbid = so.dbid 	   AND ob.con_dbid = so.con_dbid	    AND ob.ts#	= so.ts#	    AND ob.obj# = so.obj#	     AND ob.dataobj# = so.dataobj#)    WHERE dbid = :dbid      AND object_name NOT LIKE '%MISSING%'	 AND object_name NOT LIKE '%TRANSIENT%'      AND (ts#,	obj#,  dataobj#,  con_dbid) in		 (SELECT tsn_kewrseg,  objn_kewrseg,  objd_kewrseg,  con_dbid_kewrseg		   FROM  x$kewrtsegstat  ) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrnc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m 		  using dual								     on (m.obj# = :objn and							    (:pobjn = 0 or								m.obj# = :pobjn or							   m.obj# in (select obj#								 from tabpart$								    where bo# = :pobjn and obj# = :objn 				       union all								  select obj#								     from tabcompart$								where bo# = :pobjn and obj# = :objn					   union all								      select tsp.obj#								 from tabsubpart$ tsp,	tabcompart$ tcp 				     where tsp.pobj# = tcp.obj# 						  and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				     and tsp.obj# = :objn)))				      when matched then 							   update								      set inserts = decode(:reset,  1,	0,  inserts) + :ins,				 updates = decode(:reset,  1,  0,  updates) + :upd,				deletes = decode(:reset,  1,  0,  deletes) + :del,			       flags =	decode(:reset,	1,  0,	flags - bitand(flags,  :flag)) + :flag,        drop_segments = decode(:reset,  1,  0,  drop_segments) + :dropseg,	      timestamp = :time 						   when NOT matched then							insert (obj#,  inserts,  updates,  deletes,					       timestamp,  flags,  drop_segments)				    values (:objn,  :ins,  :upd,  :del,  :time,  :flag,  :dropseg)		     where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="49s332uhbnsma"></a>49s332uhbnsma</td><td class='awrc'><pre_sqltext class="awr">	   declare
	 vsn  varchar2(20);
	    begin
	      vsn := dbms_rcvman.getPackageVersion;
	      :pkg_vsn:pkg_vsn_i := vsn;
	      if vsn is not null then
		 :pkg_vsnub4 :=
		   to_number(substr(vsn, 1, 2) || substr(vsn, 4, 2) ||
			     substr(vsn, 7, 2) || nvl(substr(vsn, 10, 2), '00'));
	      end if;
	    end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5cu0x10yu88sw"></a>5cu0x10yu88sw</td><td class='awrnc'><pre_sqltext class="awr">merge into sys.wri$_index_usage iu					     using dual 								   on (iu.obj# = :objn) 						       when matched then							     update									  set iu.total_access_count = iu.total_access_count + :ns,			    iu.total_rows_returned = iu.total_rows_returned + :rr,			  iu.total_exec_count = iu.total_exec_count + :ne,				iu.bucket_0_access_count = iu.bucket_0_access_count + :nsh0,		      iu.bucket_1_access_count = iu.bucket_1_access_count + :nsh1,		    iu.bucket_2_10_access_count = iu.bucket_2_10_access_count + :nsh2_10,	  iu.bucket_2_10_rows_returned = iu.bucket_2_10_rows_returned + 						  :nrh2_10,				     iu.bucket_11_100_access_count = iu.bucket_11_100_access_count +						     :nsh11_100,				iu.bucket_11_100_rows_returned = iu.bucket_11_100_rows_returned +						:nrh11_100,				   iu.bucket_101_1000_access_count = iu.bucket_101_1000_access_count +						   :nsh101_1000,			      iu.bucket_101_1000_rows_returned = iu.bucket_101_1000_rows_returned +					      :nrh101_1000,				 iu.bucket_1000_plus_access_count = iu.bucket_1000_plus_access_count +						 :nsh1000plus,				    iu.bucket_1000_plus_rows_returned = iu.bucket_1000_plus_rows_returned					    + :nrh1000plus,			       last_used = SYSDATE						       when NOT matched then							     insert (iu.obj#,  iu.total_access_count,						    iu.total_rows_returned,							  iu.total_exec_count,								iu.bucket_0_access_count,						      iu.bucket_1_access_count, 						    iu.bucket_2_10_access_count,						  iu.bucket_2_10_rows_returned, 						iu.bucket_11_100_access_count,						      iu.bucket_11_100_rows_returned,						    iu.bucket_101_1000_access_count,						  iu.bucket_101_1000_rows_returned,						iu.bucket_1000_plus_access_count,					      iu.bucket_1000_plus_rows_returned,					    iu.last_used)							 values (:objn,  :ns,  :rr,								 :ne,  :nsh0,  :nsh1,  :nsh2_10,  :nrh2_10,  :nsh11_100,  :nrh11_100,		       :nsh101_1000,  :nrh101_1000,  :nsh1000plus,  :nrh1000plus,			SYSDATE)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5pj6mtazkhmdd"></a>5pj6mtazkhmdd</td><td class='awrc'><pre_sqltext class="awr">BEGIN /* KSXM:FLUSH DML_MON */    dbms_stats_internal.gather_scan_rate_by_mmon;  END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5u7g54s63p4ts"></a>5u7g54s63p4ts</td><td class='awrnc'><pre_sqltext class="awr">select toid from type$ where package_obj#=:1 and typ_name=:2</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6hnhqahphpk8n"></a>6hnhqahphpk8n</td><td class='awrc'><pre_sqltext class="awr">select free_mb from v$asm_diskgroup_stat where name=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrnc'><pre_sqltext class="awr">select ind.type#,  ind.property,    base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,	sys.obj$  base_obj  where ind.obj#	    = :oid    and ind.dataobj#	    = :doid    and ind.bo#	   = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9yv5dwv8k0awg"></a>9yv5dwv8k0awg</td><td class='awrc'><pre_sqltext class="awr">WITH MONITOR_DATA AS (SELECT INST_ID,  KEY,  NVL2(PX_QCSID,  NULL,  STATUS) STATUS,  FIRST_REFRESH_TIME,  LAST_REFRESH_TIME,  REFRESH_COUNT,  PROCESS_NAME,  SID,	SQL_ID,  SQL_EXEC_START,  SQL_EXEC_ID,	DBOP_NAME,  DBOP_EXEC_ID,  SQL_PLAN_HASH_VALUE,  SQL_FULL_PLAN_HASH_VALUE,  SESSION_SERIAL#,  SQL_TEXT,  PX_SERVER#,  PX_SERVER_GROUP,	PX_SERVER_SET,	PX_QCINST_ID,  PX_QCSID,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) ELSE ELAPSED_TIME END ELAPSED_TIME,  QUEUING_TIME,  CPU_TIME,  APPLICATION_WAIT_TIME,  CONCURRENCY_WAIT_TIME,  CLUSTER_WAIT_TIME,	USER_IO_WAIT_TIME,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN 0 ELSE ELAPSED_TIME - (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) END OTHER_WAIT_TIME,  PLSQL_EXEC_TIME,  JAVA_EXEC_TIME,  FETCHES,	BUFFER_GETS,  IO_INTERCONNECT_BYTES IO_INTER_BYTES,  PHYSICAL_READ_REQUESTS READ_REQS,	PHYSICAL_READ_BYTES READ_BYTES,  PHYSICAL_WRITE_REQUESTS WRITE_REQS,  PHYSICAL_WRITE_BYTES WRITE_BYTES,  NVL(PHYSICAL_READ_BYTES,  0) + NVL(PHYSICAL_WRITE_BYTES,  0) IO_BYTES,  NVL(PHYSICAL_READ_REQUESTS,  0) + NVL(PHYSICAL_WRITE_REQUESTS,  0) IO_REQS,  IO_CELL_UNCOMPRESSED_BYTES IO_UNC_BYTES,	IO_CELL_OFFLOAD_ELIGIBLE_BYTES IO_ELIG_BYTES,  IO_CELL_OFFLOAD_RETURNED_BYTES IO_RET_BYTES,  USER# USERID,  USERNAME,  MODULE,	ACTION,  SERVICE_NAME,	CLIENT_IDENTIFIER,  CLIENT_INFO,  PROGRAM,  PLSQL_OBJECT_ID PL_OID,  PLSQL_SUBPROGRAM_ID PL_PROGID,  PLSQL_ENTRY_OBJECT_ID PL_ENTRY_OID,  PLSQL_ENTRY_SUBPROGRAM_ID PL_ENTRY_PROGID,  PX_MAXDOP MAX_DOP,  PX_IS_CROSS_INSTANCE,  PX_MAXDOP_INSTANCES MAX_DOP_INSTANCES,  PX_SERVERS_REQUESTED SERVERS_REQUESTED,  PX_SERVERS_ALLOCATED SERVERS_ALLOCATED,  ERROR_NUMBER,  ERROR_FACILITY,  ERROR_MESSAGE,  NVL2(OTHER_XML,  'Y',  NULL) HAS_OTHER_XML,	NVL2(BINDS_XML,  'Y',  NULL) HAS_BINDS_XML,  NVL2(RM_CONSUMER_GROUP,  NVL2(RM_LAST_ACTION_TIME,  TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ),	'00/00/0000 00:00:01') || XMLELEMENT( &quot;rminfo&quot;,  XMLATTRIBUTES( RM_LAST_ACTION AS &quot;rmlastact&quot;,  RM_LAST_ACTION_REASON AS &quot;rmlastreason&quot;,	TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ) AS &quot;rmlasttime&quot;,  RM_CONSUMER_GROUP AS &quot;rmcg&quot;)).GETSTRINGVAL(),  '00/00/0000 00:00:00') RM_INFO,  CON_NAME,  CON_ID FROM GV$ALL_SQL_MONITOR MO1 WHERE MO1.INST_ID BETWEEN :B11 AND :B10 AND MO1.SQL_ID = NVL(:B9 ,  MO1.SQL_ID) AND MO1.SQL_EXEC_START = NVL(:B8 ,  MO1.SQL_EXEC_START) AND MO1.SQL_EXEC_ID = NVL(:B7 ,  MO1.SQL_EXEC_ID) OR (MO1.DBOP_NAME = NVL(:B6 ,  MO1.DBOP_NAME) AND MO1.DBOP_EXEC_ID = NVL(:B5 ,  MO1.DBOP_EXEC_ID)) AND ((:B4 = 1 AND MO1.PX_QCSID IS NULL) OR (MO1.PX_SERVER_GROUP = NVL(:B3 ,  MO1.PX_SERVER_GROUP) AND MO1.PX_SERVER_SET = NVL(:B2 ,  MO1.PX_SERVER_SET) AND MO1.PX_SERVER# = NVL(:B1 ,  MO1.PX_SERVER#)))),  MONITOR_AGG AS (SELECT MAX_PX_QCSID,  MAX_KEY,  MAX_INST_ID,  MAX_SESSION_ID,  MAX_SESSION_SERIAL,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,	DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,  MAX_PLAN_HASH_VALUE,	MAX_FULL_PLAN_HASH_VALUE,  MAX_USERID,	MAX_PROGRAM,  MAX_USERNAME,  MAX_MODULE,  MAX_ACTION,  MAX_SERVICE_NAME,  MAX_CLIENT_ID,  MAX_CLIENT_INFO,  MAX_ERROR_NUMBER,  MAX_ERROR_FACILITY,  MAX_ERROR_MESSAGE,	QC_HAS_OTHER_XML,  QC_HAS_BINDS_XML,  MAX_PL_OID,  MAX_PL_PROGID,  MAX_PL_ENTRY_OID,  MAX_PL_ENTRY_PROGID,  MAX_SQL_ID,  MAX_SQL_EXEC_START,  MAX_SQL_EXEC_ID,	MAX_LAST_REFRESH_TIME,	MAX_DBOP_NAME,	MAX_DBOP_EXEC_ID,  CASE WHEN MAX_PL_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_OID AND P.SUBPROGRAM_ID = MAX_PL_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_NAME,  CASE WHEN MAX_PL_ENTRY_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,	NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_ENTRY_OID AND P.SUBPROGRAM_ID = MAX_PL_ENTRY_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_ENTRY_NAME,  MAX_STATUS,	SUM_REFRESH_COUNT,  MIN_FIRST_REFRESH_TIME,  SQLMON_TEXT,  SUM_ELAPSED_TIME,  MAX_ELAPSED_TIME,  MAX_QUEUING_TIME,  SUM_CPU_TIME,  SUM_USER_IO_WAIT_TIME,  SUM_APPLICATION_WAIT_TIME,  SUM_CONCURRENCY_WAIT_TIME,  SUM_CLUSTER_WAIT_TIME,  SUM_PLSQL_EXEC_TIME,  SUM_JAVA_EXEC_TIME,  SUM_OTHER_WAIT_TIME,  SUM_FETCHES,  SUM_BUFFER_GETS,  SUM_READ_REQS,  SUM_READ_BYTES,  SUM_WRITE_REQS,  SUM_WRITE_BYTES,	SUM_IO_BYTES,  SUM_IO_INTER_BYTES,  SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES,  SUM_IO_RET_BYTES,  DECODE(:B14 ,  1,  'db_name',  SYS_CONTEXT('userenv',  'db_unique_name')) DB_UNIQUE_NAME,  DECODE(:B14 ,	1,  'platform_name',  SYS.DBMS_UTILITY.PORT_STRING) PLATFORM_NAME,  DECODE(:B14 ,  1,  'host_name',  SYS_CONTEXT('userenv',  'server_host')) HOST_NAME,  AGG_RM_INFO MAX_RM_INFO,  MAX_CON_NAME,  DECODE(MAX_CON_ID,  0,  NULL,  MAX_CON_ID) MAX_CON_ID FROM (SELECT MAX(PX_QCSID) MAX_PX_QCSID,  MAX(CASE WHEN PX_QCSID IS NULL THEN KEY ELSE NULL END) MAX_KEY,  MAX(CASE WHEN PX_QCSID IS NULL THEN INST_ID ELSE NULL END) MAX_INST_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SID ELSE NULL END) MAX_SESSION_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SESSION_SERIAL# ELSE NULL END) MAX_SESSION_SERIAL,  MAX(MAX_DOP) MAX_PX_DOP,  MAX(MAX_DOP_INSTANCES) MAX_PX_DOP_INSTANCES,  MAX(PX_IS_CROSS_INSTANCE) MAX_PX_IS_CROSS_INSTANCE,  SUM(SERVERS_REQUESTED) SUM_SERVERS_REQUESTED,	SUM(SERVERS_ALLOCATED) SUM_SERVERS_ALLOCATED,  COUNT(DISTINCT INST_ID) DIST_INST_COUNT,  COUNT(DISTINCT PX_SERVER_GROUP) DIST_PX_GROUP_COUNT,  COUNT(DISTINCT PX_SERVER_SET) DIST_PX_SET_COUNT,  MAX(SQL_PLAN_HASH_VALUE) MAX_PLAN_HASH_VALUE,	MAX(SQL_FULL_PLAN_HASH_VALUE) MAX_FULL_PLAN_HASH_VALUE,  MAX(USERID) MAX_USERID,  MAX(PROGRAM) MAX_PROGRAM,  MAX(USERNAME) MAX_USERNAME,  MAX(MODULE) MAX_MODULE,  MAX(ACTION) MAX_ACTION,  MAX(SERVICE_NAME) MAX_SERVICE_NAME,  MAX(CLIENT_IDENTIFIER) MAX_CLIENT_ID,	MAX(CLIENT_INFO) MAX_CLIENT_INFO,  MAX(ERROR_NUMBER) MAX_ERROR_NUMBER,	MAX(ERROR_FACILITY) MAX_ERROR_FACILITY,  MAX(ERROR_MESSAGE) MAX_ERROR_MESSAGE,	MAX(NVL2(PX_QCSID,  HAS_OTHER_XML,  NULL)) QC_HAS_OTHER_XML,  MAX(HAS_BINDS_XML) QC_HAS_BINDS_XML,  MAX(PL_OID) MAX_PL_OID,  MAX(PL_PROGID) MAX_PL_PROGID,  MAX(PL_ENTRY_OID) MAX_PL_ENTRY_OID,  MAX(PL_ENTRY_PROGID) MAX_PL_ENTRY_PROGID,  MAX(SQL_ID) MAX_SQL_ID,  MAX(SQL_EXEC_START) MAX_SQL_EXEC_START,  MAX(SQL_EXEC_ID) MAX_SQL_EXEC_ID,  MAX(LAST_REFRESH_TIME) MAX_LAST_REFRESH_TIME,	MAX(STATUS) MAX_STATUS,  SUM(REFRESH_COUNT) SUM_REFRESH_COUNT,	MIN(FIRST_REFRESH_TIME) MIN_FIRST_REFRESH_TIME,  MAX(DBOP_NAME) MAX_DBOP_NAME,	MAX(DBOP_EXEC_ID) MAX_DBOP_EXEC_ID,  CASE WHEN :B13 = 0 THEN NULL ELSE MAX(SQL_TEXT) END SQLMON_TEXT,  SUM(ELAPSED_TIME) SUM_ELAPSED_TIME,  MAX(ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(QUEUING_TIME) MAX_QUEUING_TIME,  SUM(CPU_TIME) SUM_CPU_TIME,  SUM(USER_IO_WAIT_TIME) SUM_USER_IO_WAIT_TIME,  SUM(APPLICATION_WAIT_TIME) SUM_APPLICATION_WAIT_TIME,  SUM(CONCURRENCY_WAIT_TIME) SUM_CONCURRENCY_WAIT_TIME,	SUM(CLUSTER_WAIT_TIME) SUM_CLUSTER_WAIT_TIME,  SUM(PLSQL_EXEC_TIME) SUM_PLSQL_EXEC_TIME,  SUM(JAVA_EXEC_TIME) SUM_JAVA_EXEC_TIME,  SUM(OTHER_WAIT_TIME) SUM_OTHER_WAIT_TIME,  SUM(FETCHES) SUM_FETCHES,  SUM(BUFFER_GETS) SUM_BUFFER_GETS,  SUM(READ_REQS) SUM_READ_REQS,  SUM(READ_BYTES) SUM_READ_BYTES,  SUM(WRITE_REQS) SUM_WRITE_REQS,  SUM(WRITE_BYTES) SUM_WRITE_BYTES,	NVL(SUM(READ_BYTES),  0) + NVL(SUM(WRITE_BYTES),  0) SUM_IO_BYTES,  SUM(IO_INTER_BYTES) SUM_IO_INTER_BYTES,  SUM(IO_UNC_BYTES) S
UM_IO_UNC_BYTES,  SUM(IO_ELIG_BYTES) SUM_IO_ELIG_BYTES,  SUM(IO_RET_BYTES) SUM_IO_RET_BYTES,  MAX(RM_INFO) AGG_RM_INFO,  MAX(CON_NAME) MAX_CON_NAME,  MAX(CON_ID) MAX_CON_ID FROM MONITOR_DATA) MD),  ASH_DATA AS (SELECT AD0.INST_ID,	AD0.SESSION_ID,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.ACTIVITY_BUCKET_NUM,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.SQL,  AD0.TOP_LEVEL_SQL_ID,  AD0.DBOP_NAME,  AD0.IS_MONITORED_SQL,  AD0.IS_PX_SLAVE,  AD0.BUCKET_ACTIVITY_START,  AD0.ACTIVITY_START,	AD0.BUCKET_ACTIVITY_END,  AD0.ACTIVITY_END,  AD0.ACTIVITY_COUNT,  AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.IMQ_COUNT,  AD0.WAIT_COUNT,  AD0.CPU_COUNT,  AD0.OTHER_SQL_COUNT,  AD0.PX_SERVER_SET,	AD0.PX_DFO_ACTIVITY_COUNT,  AD0.DFO_MOST_ACTIVE_IID,  AD0.DFO_MOST_ACTIVE_SID,	(CASE WHEN AD0.DFO_MOST_ACTIVE_IID = AD0.INST_ID AND AD0.DFO_MOST_ACTIVE_SID = AD0.SESSION_ID AND (((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &gt;= AD0.PX_DOP * 1.05) OR ((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &lt;= AD0.PX_DOP *0.95)) AND (AD0.DFO_DURATION * 100) &gt; :B32 THEN AD0.ACTIVITY_COUNT ELSE NULL END) DFO_MOST_ACTIVE_COUNT,	AD0.BUCKET_DISTINCT_SAMPLES,  AD0.SQL_BUCKET_DISTINCT_SAMPLES,	CASE WHEN AD0.PX_SERVER_GROUP IS NULL AND AD0.IS_PX_SLAVE = 1 THEN 1 ELSE AD0.PX_SERVER_GROUP END PX_SERVER_GROUP,  AD0.PX_STEP_ID,  AD0.PX_DFO_PAIR_TYPE,  AD0.PX_DFO_PAIR_ID,  AD0.PX_STEP_ARG,  AD0.PX_DOP,	CASE WHEN AD0.PX_DOP IS NOT NULL AND AD0.PX_DOP &lt;&gt; AD0.PX_MIN_DOP AND AD0.PX_MIN_DOP != 0 THEN PX_MIN_DOP ELSE NULL END PX_MIN_DOP FROM (SELECT /*+ use_hash(ash) leading(mo) */ ASH.INST_ID,  ASH.IS_PX_SLAVE,  ASH.SESSION_ID,	ASH.PLAN_LINE_ID,  ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,  ASH.ACTIVITY_BUCKET_NUM,  ASH.PLAN_ACTIVITY_BUCKET_NUM,  ASH.SQL,  ASH.TOP_LEVEL_SQL_ID,  ASH.DBOP_NAME,  ASH.IS_MONITORED_SQL,  ASH.BUCKET_ACTIVITY_START,	ASH.ACTIVITY_START,  ASH.BUCKET_ACTIVITY_END,  ASH.ACTIVITY_END,  ASH.ACTIVITY_COUNT,  ASH.ACTIVITY_TYPE,  ASH.OTHER_SQL_ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  MO.PX_SERVER_SET,  ASH.PX_DFO_ACTIVITY_COUNT,	TRUNC(ASH.MOST_ACTIVE_IN_DFO / 10000000000) DFO_MOST_ACTIVE_COUNT,  MOD(TRUNC(ASH.MOST_ACTIVE_IN_DFO / 1000000),  10000) DFO_MOST_ACTIVE_IID,  MOD(ASH.MOST_ACTIVE_IN_DFO,  1000000) DFO_MOST_ACTIVE_SID,  ASH.DFO_DURATION,  ASH.BUCKET_DISTINCT_SAMPLES,  ASH.SQL_BUCKET_DISTINCT_SAMPLES,  MO.PX_SERVER_GROUP,  ASH.PX_STEP_ID,  ASH.PX_DFO_PAIR_TYPE,  ASH.PX_DFO_PAIR_ID,	ASH.PX_STEP_ARG,  ASH.PX_DOP,  ASH.PX_MIN_DOP FROM (SELECT /*+ no_merge */ MD.INST_ID,	MD.SID,  MD.SESSION_SERIAL#,  MD.PX_SERVER_SET,  MD.PX_SERVER_GROUP FROM MONITOR_DATA MD WHERE MD.SID IS NOT NULL OR :B31 = 1) MO,  (SELECT /*+ no_merge */ GVTF.INST_ID,  GVTF.GLOBAL_SAMPLE_ID,  GVTF.IS_PX_SLAVE,  GVTF.SESSION_ID,	GVTF.PLAN_LINE_ID,  GVTF.PLSQL_OBJECT_ID,  GVTF.PLSQL_SUBPROGRAM_ID,  GVTF.ACTIVITY_BUCKET_NUM,  GVTF.PLAN_ACTIVITY_BUCKET_NUM,  GVTF.SQL,  GVTF.TOP_LEVEL_SQL_ID,  GVTF.DBOP_NAME,  GVTF.IS_MONITORED_SQL,  GVTF.BUCKET_ACTIVITY_START,  GVTF.ACTIVITY_START,	GVTF.BUCKET_ACTIVITY_END,  GVTF.ACTIVITY_END,  GVTF.ACTIVITY_COUNT,  GVTF.ACTIVITY_TYPE,  GVTF.OTHER_SQL_ACTIVITY_TYPE,  GVTF.EVENT_NAME,  GVTF.IMQ_COUNT,  GVTF.WAIT_COUNT,  GVTF.CPU_COUNT,  GVTF.OTHER_SQL_COUNT,  MAX(GVTF.PER_SERVER_DFO_COUNT * 10000000000 + GVTF.INST_ID * 1000000 + GVTF.SESSION_ID) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID) MOST_ACTIVE_IN_DFO,  SUM(GVTF.ACTIVITY_COUNT) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID) PX_DFO_ACTIVITY_COUNT,  GVTF.DFO_DURATION,  GVTF.PX_STEP_ID,	GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID,  GVTF.PX_STEP_ARG,  GVTF.PX_DOP,  GVTF.PX_MIN_DOP,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.ACTIVITY_BUCKET_NUM) BUCKET_DISTINCT_SAMPLES,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.SQL,	GVTF.ACTIVITY_BUCKET_NUM) SQL_BUCKET_DISTINCT_SAMPLES FROM TABLE(SYS.GV$(CURSOR( (SELECT USERENV('INSTANCE') INST_ID,  ASH2.GLOBAL_SAMPLE_ID,  CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END ACTIVITY_BUCKET_NUM,  CASE WHEN :B29 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END PLAN_ACTIVITY_BUCKET_NUM,  ASH2.SQL,  ASH2.TOP_LEVEL_SQL_ID,  ASH2.DBOP_NAME,  ASH2.IS_MONITORED_SQL,  ASH2.PLAN_LINE_ID,  ASH2.PLSQL_OBJECT_ID,  ASH2.PLSQL_SUBPROGRAM_ID,  ASH2.ACTIVITY_TYPE,  ASH2.OTHER_SQL_ACTIVITY_TYPE,	ASH2.EVENT_NAME,  ASH2.IS_PX_SLAVE,  ASH2.SESSION_ID,  ASH2.PX_STEP_ID,  ASH2.PX_DFO_PAIR_TYPE,  ASH2.PX_DFO_PAIR_ID,  ASH2.PX_STEP_ARG,  CASE WHEN ASH2.PX_DFO_PAIR_ID IS NOT NULL THEN DECODE(ASH2.PX_DOP,  0,  :B28 ,  ASH2.PX_DOP) ELSE NULL END PX_DOP,  ASH2.PX_MIN_DOP,	:B20 + NUMTODSINTERVAL(:B26 * (ASH2.BUCKET_NUM-1),  'SECOND') BUCKET_ACTIVITY_START,  :B20 + NUMTODSINTERVAL( :B26 * ASH2.BUCKET_NUM - 1,  'SECOND') BUCKET_ACTIVITY_END,  ASH2.ACTIVITY_START,  ASH2.ACTIVITY_END,  ASH2.ACTIVITY_COUNT,  ASH2.IMQ_COUNT,  ASH2.WAIT_COUNT,  ASH2.CPU_COUNT,  ASH2.OTHER_SQL_COUNT,  SUM(ASH2.ACTIVITY_COUNT) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE,  DECODE(ASH2.PX_DFO_PAIR_ID,  NULL,  NULL,  ASH2.SESSION_ID)) PER_SERVER_DFO_COUNT,  CEIL((MAX(ASH2.MAX_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE) - MIN(ASH2.MIN_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE)) * 3600 * 24) DFO_DURATION FROM (SELECT ASH1.BUCKET_NUM,  ASH1.GLOBAL_SAMPLE_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.SESSION_ID,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG,  MAX(ASH1.SQL) SQL,  MAX(ASH1.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(ASH1.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(ASH1.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MIN(SAMPLE_DATE) MIN_SAMPLE_DATE,  MAX(SAMPLE_DATE) MAX_SAMPLE_DATE,  MAX(ASH1.IS_PX_SLAVE) IS_PX_SLAVE,  MAX(ASH1.PX_DOP) PX_DOP,	MIN(ASH1.PX_DOP) PX_MIN_DOP,  MIN(ASH1.SAMPLE_DATE) ACTIVITY_START,  MAX(ASH1.SAMPLE_DATE) ACTIVITY_END,  COUNT(ASH1.SQL) ACTIVITY_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME = 'in memory' THEN 1 ELSE NULL END) IMQ_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE != 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' AND ASH1.ACTIVITY_TYPE != 'Cpu' THEN 1 ELSE NULL END) WAIT_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME IS NULL THEN 1 ELSE NULL END) CPU_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' THEN 1 ELSE NULL END) OTHER_SQL_COUNT,  MAX(ASH1.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(ASH1.DBOP_NAME) DBOP_NAME FROM ( SELECT (CASE WHEN :B27 &gt; 1 THEN (TRUNC(DELTA_TIME_SECONDS/ :B26 ) + 1) ELSE 1 END) BUCKET_NUM,  ASH00.SQL,  ASH00.SAMPLE_DATE,  NVL2(DUP.C2,  TRUNC(DELTA_TIME_SECONDS/ (:B25 )) + 1,  NULL) GLOBAL_SAMPLE_ID,  NVL2(DUP.C2,  NULL,	ASH00.IS_MONITORED_SQL) IS_MONITORED_SQL,  NVL2(DUP.C2,  NULL,	ASH00.IN_INMEMORY_QUERY) IN_INMEMORY_QUERY,  NVL2(DUP.C2,  NULL,  ASH00.WAIT_CLASS) WAIT_CLASS,  NVL2(DUP.C2,  NULL,  ASH00.ACTIVITY_TYPE) ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.OTHER_SQL_ACTIVITY_TYPE) OTHER_SQL_ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,  ASH00.EVENT_NAME) EVENT_NAME,  NVL2(DUP.C2,  NULL,  ASH00.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  NVL2(DUP.C2,  NULL,  ASH00.DBOP_NAME) DBOP_NAME,  NVL2(DUP.C2,  NULL,  ASH00.IS_PX_SLAVE) IS_PX_SLAVE,  NVL2(DUP.C2,  NULL,  ASH00.SESSION_ID) SESSION_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_OBJECT_ID) PLSQL_OBJECT_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_SUBPROGRAM_ID) PLSQL_SUBPROGRAM_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLAN_LINE_ID) PLAN_LINE_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ID) PX_STEP_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ARG) PX_STEP_ARG,  NVL2(DUP.C2,  NULL,  ASH00.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  NVL2(DUP.C2,  NULL,	ASH00.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.PX_DOP) PX_DOP FROM (SELECT 1 C1,  NULL C2 FROM V$DUAL UNI
ON ALL SELECT 1 C1,  1 C2 FROM V$DUAL) DUP,  (SELECT /*+ no_merge */ 1 C1,  ASH000.SAMPLE_DATE,  ASH000.IS_MONITORED_SQL,  ((EXTRACT(SECOND FROM(DELTA_TIME)) + EXTRACT(MINUTE FROM(DELTA_TIME)) * 60 + EXTRACT(HOUR FROM(DELTA_TIME)) * 3600 + EXTRACT(DAY FROM(DELTA_TIME)) * 86400)) DELTA_TIME_SECONDS,  ASH000.IN_INMEMORY_QUERY,	ASH000.WAIT_CLASS,  DECODE(ASH000.IS_MONITORED_SQL,  1,  NVL(ASH000.WAIT_CLASS,  'Cpu'),  DECODE(SQL_ID,  NULL,  'Non SQL',  'Other SQL Execution')) ACTIVITY_TYPE,  NVL(ASH000.WAIT_CLASS,  'Cpu') OTHER_SQL_ACTIVITY_TYPE,  DECODE(:B24 ,  1,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 THEN NVL(ASH000.EVENT,  DECODE(ASH000.IN_INMEMORY_QUERY,  'Y',  'in memory',  ASH000.EVENT)) WHEN ASH000.SQL_ID IS NOT NULL THEN 'sql_id: ' || ASH000.SQL_ID WHEN ASH000.CALL_NAME IS NOT NULL THEN 'call: ' || ASH000.CALL_NAME ELSE 'anonymous: '|| ASH000.EVENT END,	NULL) EVENT_NAME,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 AND (NVL(ASH000.SQL_ID,  :B9 ) = :B9 OR NVL(ASH000.DBOP_NAME,	:B6 ) = :B6 ) THEN 'this' WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.SQL_ID IS NOT NULL AND ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID THEN ASH000.TOP_LEVEL_SQL_ID WHEN ASH000.SQL_ID IS NOT NULL THEN ASH000.SQL_ID ELSE NVL(CALL_NAME,  'anonymous') END SQL,  CASE WHEN ASH000.IS_PX_SLAVE = 0 AND (ASH000.SQL_ID IS NULL OR ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID) THEN ASH000.TOP_LEVEL_SQL_ID END TOP_LEVEL_SQL_ID,  ASH000.DBOP_NAME,  ASH000.IS_PX_SLAVE,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL != 1 THEN 65536 ELSE ASH000.SESSION_ID END SESSION_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_OBJECT_ID,  NULL) PLSQL_OBJECT_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_SUBPROGRAM_ID,  NULL) PLSQL_SUBPROGRAM_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.SQL_PLAN_LINE_ID,  NULL) PLAN_LINE_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ID,  NULL) PX_STEP_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL = 1 AND ASH000.PX_STEP_ID IN (1,  2,  3) THEN ASH000.PX_STEP_ARG ELSE NULL END PX_DFO_PAIR_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 0 OR ASH000.IS_MONITORED_SQL != 1 THEN NULL WHEN ASH000.PX_STEP_ID = 1 THEN 1 WHEN ASH000.PX_STEP_ID IN (2,  3) THEN 0 ELSE NULL END PX_DFO_PAIR_TYPE,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ARG,	NULL) PX_STEP_ARG,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_DOP,  NULL) PX_DOP FROM (SELECT ASH0.*,  CASE WHEN ASH0.IS_TARGET_SQL = 1 OR (ASH0.IS_PX_SLAVE = 1 AND ((NVL(ASH0.TOP_LEVEL_SQL_ID,	ASH0.SQL_ID) IS NOT NULL AND NVL(ASH0.TOP_LEVEL_SQL_ID,  ASH0.SQL_ID) = :B9 ) OR (SQL_ID IS NULL AND :B23 = 'Y'))) THEN 1 ELSE 0 END IS_MONITORED_SQL FROM (SELECT (CASE WHEN (ASH.SQL_ID = :B9 AND ASH.SQL_EXEC_ID = :B7 AND ASH.SQL_EXEC_START = :B8 ) THEN 1 ELSE 0 END) IS_TARGET_SQL,  ASH.SQL_ID,  ASH.SQL_PLAN_LINE_ID,	ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,	ASH.TOP_LEVEL_SQL_ID,  DECODE(ASH.SQL_ID,  NULL,  ASH.TOP_LEVEL_CALL_NAME,  NULL) CALL_NAME,  ASH.EVENT,  ASH.IN_INMEMORY_QUERY,  ASH.WAIT_CLASS,  ASH.SQL_EXEC_ID,  ASH.SQL_EXEC_START,  ASH.DBOP_NAME,  ASH.DBOP_EXEC_ID,  ASH.SESSION_ID,  ASH.SESSION_SERIAL#,  CASE WHEN QC_INSTANCE_ID IS NOT NULL AND (ASH.SESSION_ID != ASH.QC_SESSION_ID OR ASH.SESSION_SERIAL# != ASH.QC_SESSION_SERIAL# OR USERENV('instance') != ASH.QC_INSTANCE_ID) THEN 1 ELSE 0 END IS_PX_SLAVE,  SAMPLE_TIME - CAST(:B20 AS TIMESTAMP) DELTA_TIME,  CAST(FROM_TZ(ASH.SAMPLE_TIME,  DBTIMEZONE) AS DATE) SAMPLE_DATE,  TRUNC(MOD(PX_FLAGS/65536,  32)) PX_STEP_ID,  MOD(PX_FLAGS,  65536) PX_STEP_ARG,  TRUNC(PX_FLAGS/2097152) PX_DOP FROM V$ALL_ACTIVE_SESSION_HISTORY ASH WHERE ((ASH.SESSION_ID = :B19 AND ASH.SESSION_SERIAL# = :B18 AND USERENV('INSTANCE') = :B17 ) OR (ASH.QC_SESSION_ID IS NOT NULL AND ASH.QC_SESSION_ID = :B19 AND ASH.QC_SESSION_SERIAL# = :B18 AND ASH.QC_INSTANCE_ID = :B17 )) AND SAMPLE_TIME BETWEEN :B16 AND :B15 ) ASH0 WHERE (ASH0.SAMPLE_DATE BETWEEN :B20 + 1/24/3600 AND :B22 - 1/24/3600 OR (ASH0.SQL_ID = :B9 AND ASH0.SQL_EXEC_START = :B8 AND ASH0.SQL_EXEC_ID = :B7 ) OR (ASH0.DBOP_NAME = :B6 AND ASH0.DBOP_EXEC_ID = :B5 )) AND (:B21 IS NULL OR ASH0.SQL_PLAN_LINE_ID = :B21 ) AND (ASH0.IS_PX_SLAVE = 0 OR ASH0.SQL_ID IS NOT NULL)) ASH000 ) ASH00 WHERE ASH00.C1 = DUP.C1) ASH1 WHERE ASH1.BUCKET_NUM &gt; 0 AND ASH1.BUCKET_NUM &lt;= :B27 GROUP BY USERENV('INSTANCE'),  ASH1.GLOBAL_SAMPLE_ID,  ASH1.BUCKET_NUM,  ASH1.SESSION_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG) ASH2)))) GVTF WHERE GVTF.INST_ID BETWEEN :B11 AND :B10 ) ASH WHERE ASH.GLOBAL_SAMPLE_ID IS NULL AND ASH.SESSION_ID = MO.SID(+) AND ASH.INST_ID = MO.INST_ID(+)) AD0),  RESPONSE_TIME_DATA AS (SELECT ADH.BUCKET_NUM,  ADH.SQL_ROWNUM,  ADH.SQL,	ADH.TOP_LEVEL_SQL_ID,  ADH.DBOP_NAME,  ADH.PX_ID,  DECODE( ADH.PX_STEP_ID,  NULL,  NULL,  0,  NULL,  1,  'PX Server(s) - Executing Parent DFO',  2,  'PX Server(s) - Executing Child DFO',  3,	'PX Server(s) - Sampling Child DFO',  4,  'PX Server(s) - Joining Group',  5,  'QC - Scheduling Child DFO',  6,  'QC - Scheduling Parent DFO',	7,  'QC - Initializing Objects',  8,  'QC - Flushing Objects',	9,  'QC - Allocating Slaves',  10,  'QC - Initializing Granules',  11,	'PX Server(s) - Parsing Cursor',  12,  'PX Server(s) - Executing Cursor',  13,	'PX Server(s) - Preparing Transaction',  14,  'PX Server(s) - Joining Transaction',  15,  'PX Server(s) - Load Commit',  16,  'PX Server(s) - Aborting Transaction',  17,  'QC - Executing Child DFO',	18,  'QC - Executing Parent DFO',  'PX Step - ' || PX_STEP_ID) PX_STEP_ID,  ADH.PX_STEP_ARG,  ADH.PX_DFO_PAIR_ID,  ADH.PX_DOP,	ADH.PX_MIN_DOP,  ADH.DFO_MOST_ACTIVE_IID,  ADH.DFO_MOST_ACTIVE_SID,  ADH.DFO_MOST_ACTIVE_COUNT,  ADH.ACTIVITY_START,  ADH.ACTIVITY_END,  ADH.ACTIVITY_TYPE,  ADH.OTHER_SQL_ACTIVITY_TYPE,  ADH.EVENT_NAME,  ADH.PLAN_LINE_ID,  ADH.PLSQL_OBJECT_ID,  ADH.PLSQL_SUBPROGRAM_ID,  CASE WHEN PLSQL_ROWNUM = 1 AND ADH.PLSQL_OBJECT_ID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',	'.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = ADH.PLSQL_OBJECT_ID AND P.SUBPROGRAM_ID = ADH.PLSQL_SUBPROGRAM_ID),	'Unavailable') ELSE NULL END PLSQL_NAME,  ADH.ACTIVITY_COUNT,  ADH.BUCKET_ACTIVE_SECONDS,  ADH.BUCKET_IDLE_SECONDS,  (CASE WHEN ADH.IS_MONITORED_SQL = 0 THEN ADH.ACTIVE_SECONDS WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_CPU_HEIGHT &gt;= :B34 THEN DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  (ADH.DFO_PAIR_ACTIVITY_HEIGHT / ADH.DFO_PAIR_CPU_HEIGHT) * ADH.DFO_PAIR_TOTAL_SECONDS,  0) WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  (ADH.DFO_PAIR_ACTIVITY_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT))) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_ACTIVITY_HEIGHT) / ADH.PX_DOP ELSE ADH.ACTIVE_SECONDS END) RESP_TIME,  (CASE WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * (ADH.DFO_PAIR_IDLE_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT)) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_IDLE_HEIGHT) / ADH.PX_DOP ELSE 0 END) DFO_PAIR_IDLE_RESP_TIME,  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  ADH.DFO_PAIR_CPU_HEIGHT,	ADH.DFO_PAIR_IDLE_HEIGHT,  ADH.DFO_PAIR_TOTAL_HEIGHT,  ADH.DFO_PAIR_CPU_ACTIVITY,  ADH.DFO_PAIR_TOTAL_SECONDS FROM (SELECT ADH_1.*,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.PLSQL_OBJECT_ID,  ADH_1.PLSQL_SUBPROGRAM_ID ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) PLSQL_ROWNUM,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.SQL ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) SQL_ROWNUM,  (
CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP - ADH_1.DFO_PAIR_TOTAL_HEIGHT ELSE 0 END) DFO_PAIR_IDLE_HEIGHT,  (CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP ELSE ADH_1.DFO_PAIR_TOTAL_HEIGHT END) DFO_PAIR_TOTAL_HEIGHT_ADJ FROM (SELECT ADH_0.*,  (CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_TOTAL_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_TOTAL_HEIGHT,	(CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_CPU_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_CPU_HEIGHT,  (CASE WHEN ADH_0.PX_DFO_PAIR_ID IS NOT NULL AND ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.ACTIVITY_COUNT * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_ACTIVITY_HEIGHT FROM (SELECT AD3.*,  (SUM(DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  0,	AD3.ACTIVE_SECONDS)) OVER(PARTITION BY DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.BUCKET_NUM),  DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.PX_STEP_ARG))) DFO_PAIR_TOTAL_SECONDS FROM (SELECT AD2.*,  CASE WHEN AD2.IS_MONITORED_SQL = 0 THEN SQL_BUCKET_DISTINCT_SAMPLES * :B25 WHEN AD2.PX_ID IS NULL THEN AD2.ACTIVITY_COUNT * :B25 WHEN AD2.BUCKET_PARALLEL_MON_ACTIVITY &gt; 0 THEN (AD2.ACTIVITY_COUNT * AD2.BUCKET_PARALLEL_MON_SECONDS) / AD2.BUCKET_PARALLEL_MON_ACTIVITY ELSE 0 END ACTIVE_SECONDS,  CASE WHEN AD2.BUCKET_INTERVAL &gt; BUCKET_ACTIVE_SECONDS THEN AD2.BUCKET_INTERVAL - BUCKET_ACTIVE_SECONDS ELSE 0 END BUCKET_IDLE_SECONDS FROM (SELECT AD1.*,  (AD1.BUCKET_SERIAL_MON_ACTIVITY * :B25 ) BUCKET_SERIAL_MON_SECONDS,	(AD1.BUCKET_TOTAL_MON_ACTIVITY - AD1.BUCKET_SERIAL_MON_ACTIVITY) BUCKET_PARALLEL_MON_ACTIVITY,	(AD1.BUCKET_ACTIVE_SECONDS - (AD1.BUCKET_OTHER_ACTIVITY + AD1.BUCKET_SERIAL_MON_ACTIVITY) * :B25 ) BUCKET_PARALLEL_MON_SECONDS,  (AD1.BUCKET_OTHER_ACTIVITY * :B25 ) BUCKET_OTHER_SECONDS,  DECODE(AD1.PX_DFO_PAIR_ID,	NULL,  NULL,  SUM(AD1.ACTIVITY_COUNT) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_TOTAL_ACTIVITY,  DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  SUM(DECODE(AD1.ACTIVITY_TYPE,  'Cpu',  AD1.ACTIVITY_COUNT,  0)) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_CPU_ACTIVITY FROM (SELECT AD01.*,  NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  1,	AD01.ACTIVITY_COUNT,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0) BUCKET_TOTAL_MON_ACTIVITY,  (NVL(SUM(CASE WHEN AD01.IS_MONITORED_SQL = 1 AND AD01.PX_ID IS NULL THEN AD01.ACTIVITY_COUNT ELSE NULL END) OVER(PARTITION BY AD01.BUCKET_NUM),  0)) BUCKET_SERIAL_MON_ACTIVITY,  (NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  0,  AD01.SQL_BUCKET_DISTINCT_SAMPLES,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0)) BUCKET_OTHER_ACTIVITY,  (NVL(AD01.BUCKET_DISTINCT_SAMPLES,  0) * :B25 ) BUCKET_ACTIVE_SECONDS,  DECODE(AD01.BUCKET_NUM,  :B27 ,  MOD(:B32 ,  :B26 ),  :B26 ) BUCKET_INTERVAL FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.PX_ID,	AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.PLAN_LINE_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,	MAX(AD0.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(AD0.SQL) SQL,	MAX(AD0.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(AD0.DBOP_NAME) DBOP_NAME,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,  NULL,  NULL,  AD0.DFO_MOST_ACTIVE_IID)) DFO_MOST_ACTIVE_IID,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,	NULL,  NULL,  AD0.DFO_MOST_ACTIVE_SID)) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT,  MAX(PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MAX(AD0.PX_DOP) PX_DOP,  MIN(AD0.PX_MIN_DOP) PX_MIN_DOP,  MAX(AD0.BUCKET_DISTINCT_SAMPLES) BUCKET_DISTINCT_SAMPLES,	MAX(AD0.SQL_BUCKET_DISTINCT_SAMPLES) SQL_BUCKET_DISTINCT_SAMPLES FROM (SELECT AD00.*,  (CASE WHEN AD00.IS_MONITORED_SQL = 1 AND (AD00.SESSION_ID != :B19 OR AD00.INST_ID != :B17 ) THEN AD00.PX_SERVER_GROUP END) PX_ID FROM ASH_DATA AD00 WHERE :B33 = 1 ) AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.PX_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG ) AD01) AD1) AD2) AD3) ADH_0) ADH_1) ADH) SELECT /*+ no_monitor no_xml_query_rewrite
		 opt_param('_gby_hash_aggregation_enabled',  'false') */ XMLELEMENT( &quot;sql_monitor_report&quot;,  XMLATTRIBUTES(:B59 AS &quot;version&quot;,  TO_CHAR(:B58 ,  :B12 ) AS &quot;sysdate&quot;),  XMLELEMENT( &quot;report_parameters&quot;,  NULL,  CASE WHEN :B57 IS NOT NULL THEN XMLFOREST( :B57 AS &quot;dbop_name&quot;,  :B56 AS &quot;dbop_exec_id&quot;) ELSE XMLFOREST( :B55 AS
&quot;sql_id&quot;,  :B54 AS &quot;sql_exec_id&quot;) END,  XMLFOREST( :B53 AS &quot;session_id&quot;,	:B52 AS &quot;session_serial&quot;,  TO_CHAR(:B51 ,  :B12 ) AS &quot;sql_exec_start&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR(:B50 ,  :B12 ) AS &quot;interval_start&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;interval_end&quot;,  DECODE(:B49 ,  'Y',	:B48 ,	NULL) AS &quot;auto_refresh&quot;,  :B47 AS &quot;base_path&quot;),  CASE WHEN :B23 = 'Y' AND :B46 IS NOT NULL AND NOT (:B4 = 1 AND :B3 IS NULL AND :B2 IS NULL AND :B1 IS NULL) THEN XMLELEMENT( &quot;parallel_filter&quot;,	NULL,  XMLFOREST( DECODE(:B4 ,	1,  'yes',  'no') AS &quot;qc&quot;,  :B3 AS &quot;server_group&quot;,	:B2 AS &quot;server_set&quot;,	:B1 AS &quot;server_number&quot;)) ELSE NULL END),  CASE WHEN :B14 = 1 THEN XMLELEMENT( &quot;derived_parameters_testing&quot;,  NULL,	XMLFOREST(:B11 AS &quot;instance_id_low&quot;,	:B10 AS &quot;instance_id_high&quot;,  :B26 AS &quot;bucket_interval_sec&quot;,  :B32 AS &quot;interval_second&quot;,  :B27 AS &quot;bucket_calc_count&quot;,  :B45 AS &quot;bucket_calc_max_count&quot;,  :B13 AS &quot;sel_sqltext&quot;)) ELSE NULL END,  (SELECT XMLCONCAT( CASE WHEN :B46 IS NULL AND :B67 IS NULL THEN XMLELEMENT( &quot;target&quot;,  XMLATTRIBUTES(:B17 AS &quot;instance_id&quot;,  :B19 AS &quot;session_id&quot;,  :B18 AS &quot;session_serial&quot;,  NVL2(:B6 ,	NULL,  :B9 ) AS &quot;sql_id&quot;,  NVL2(:B6 ,  NULL,	TO_CHAR(:B8 ,  :B12 )) AS &quot;sql_exec_start&quot;,  NVL2(:B6 ,  NULL,  :B7 ) AS &quot;sql_exec_id&quot;,  NVL2(:B6 ,  :B6 ,	NULL) AS &quot;dbop_name&quot;,  NVL2(:B6 ,  :B5 ,  NULL) AS &quot;dbop_exec_id&quot;,	NVL2(:B6 ,  TO_CHAR(:B8 ,  :B12 ),  NULL) AS &quot;dbop_exec_start&quot;,  NVL2(:B6 ,  NULL,  MAX_PLAN_HASH_VALUE) AS &quot;sql_plan_hash&quot;,  NVL2(:B6 ,  NULL,  MAX_FULL_PLAN_HASH_VALUE) AS &quot;sql_full_plan_hash&quot;,  MAGG.DB_UNIQUE_NAME AS &quot;db_unique_name&quot;,  MAGG.PLATFORM_NAME AS &quot;db_platform_name&quot;,  MAGG.HOST_NAME AS &quot;report_host_name&quot;),  NVL2(SUM_SERVERS_REQUESTED,  XMLELEMENT( &quot;servers_requested&quot;,  NULL,  SUM_SERVERS_REQUESTED),  NULL),  NVL2(SUM_SERVERS_ALLOCATED,  XMLELEMENT( &quot;servers_allocated&quot;,	NULL,  SUM_SERVERS_ALLOCATED),	NULL),	NVL2(MAX_USERID,  XMLELEMENT( &quot;user_id&quot;,  NULL,  MAX_USERID),  NULL),  NVL2(MAX_USERNAME,  XMLELEMENT( &quot;user&quot;,  NULL,  MAX_USERNAME),  NULL),  NVL2(MAX_CON_ID,  XMLELEMENT( &quot;con_id&quot;,  NULL,  MAX_CON_ID),  NULL),  NVL2(MAX_CON_NAME,  XMLELEMENT( &quot;con_name&quot;,  NULL,  MAX_CON_NAME),  NULL),  NVL2(MAX_PROGRAM,  XMLELEMENT( &quot;program&quot;,  NULL,  MAX_PROGRAM),  NULL),  NVL2(MAX_MODULE,  XMLELEMENT( &quot;module&quot;,  NULL,  MAX_MODULE),  NULL),  NVL2(MAX_ACTION,  XMLELEMENT( &quot;action&quot;,  NULL,  MAX_ACTION),  NULL),  NVL2(MAX_SERVICE_NAME,  XMLELEMENT( &quot;service&quot;,  NULL,  MAX_SERVICE_NAME),  NULL),  NVL2(MAX_CLIENT_ID,  XMLELEMENT( &quot;client_id&quot;,  NULL,  MAX_CLIENT_ID),  NULL),  NVL2(MAX_CLIENT_INFO,  XMLELEMENT( &quot;client_info&quot;,  NULL,  MAX_CLIENT_INFO),  NULL),  NVL2(MAX_PL_ENTRY_OID,  XMLELEMENT( &quot;plsql_entry_object_id&quot;,  NULL,	MAX_PL_ENTRY_OID),  NULL),  NVL2(MAX_PL_ENTRY_PROGID,  XMLELEMENT( &quot;plsql_entry_subprogram_id&quot;,  NULL,  MAX_PL_ENTRY_PROGID),  NULL),  NVL2(MAX_PL_ENTRY_NAME,  XMLELEMENT( &quot;plsql_entry_name&quot;,  NULL,  MAX_PL_ENTRY_NAME),  NULL),  NVL2(MAX_PL_OID,  XMLELEMENT( &quot;plsql_object_id&quot;,  NULL,  MAX_PL_OID),  NULL),  NVL2(MAX_PL_PROGID,  XMLELEMENT( &quot;plsql_subprogram_id&quot;,  NULL,  MAX_PL_PROGID),  NULL),  NVL2(MAX_PL_NAME,	XMLELEMENT( &quot;plsql_name&quot;,  NULL,  MAX_PL_NAME),  NULL),  CASE WHEN (:B13 = 0 OR :B6 IS NOT NULL) THEN NULL ELSE XMLELEMENT( &quot;sql_fulltext&quot;,  XMLATTRIBUTES( NVL2(:B65 ,  'Y',  :B66 ) AS &quot;is_full&quot;),  NVL2(:B65 ,  :B65 ,  SQLMON_TEXT)) END,  XMLELEMENT( &quot;status&quot;,  NULL,  MAX_STATUS),  XMLELEMENT( &quot;refresh_count&quot;,  NULL,  SUM_REFRESH_COUNT),  XMLELEMENT( &quot;first_refresh_time&quot;,  NULL,  TO_CHAR(MIN_FIRST_REFRESH_TIME,  :B12 )),  XMLELEMENT( &quot;last_refresh_time&quot;,  NULL,  TO_CHAR(:B58 ,  :B12 )),  XMLELEMENT( &quot;duration&quot;,  NULL,  GREATEST(:B64 ,  LEAST(MAX_ELAPSED_TIME/1000000,  1),  CEIL(MAX_QUEUING_TIME/1000000))),  DECODE(MAX_RM_INFO,  '00/00/0000 00:00:00',  NULL,  XMLTYPE(SUBSTR(MAX_RM_INFO,	20))),	CASE WHEN (:B62 = 'Y') THEN XMLELEMENT( &quot;adaptive_plan&quot;,  XMLATTRIBUTES(:B63 AS &quot;is_final&quot;),  :B62 ) ELSE NULL END ) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  DECODE(NVL(SUM_ELAPSED_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  SUM_ELAPSED_TIME)),  DECODE(NVL(MAX_QUEUING_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX_QUEUING_TIME)),  DECODE(NVL(SUM_CPU_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  SUM_CPU_TIME)),  DECODE(NVL(SUM_USER_IO_WAIT_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  SUM_USER_IO_WAIT_TIME)),  DECODE(NVL(SUM_APPLICATION_WAIT_TIME,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  SUM_APPLICATION_WAIT_TIME)),  DECODE(NVL(SUM_CONCURRENCY_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  SUM_CONCURRENCY_WAIT_TIME)),  DECODE(NVL(SUM_CLUSTER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  SUM_CLUSTER_WAIT_TIME)),	DECODE(NVL(SUM_PLSQL_EXEC_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  SUM_PLSQL_EXEC_TIME)),  DECODE(NVL(SUM_JAVA_EXEC_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  SUM_JAVA_EXEC_TIME)),  DECODE(NVL(SUM_OTHER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  SUM_OTHER_WAIT_TIME)),  DECODE(NVL(SUM_FETCHES,  0),	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  SUM_FETCHES)),  DECODE(NVL(SUM_BUFFER_GETS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  SUM_BUFFER_GETS)),  DECODE(NVL(SUM_READ_REQS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  SUM_WRITE_REQS)),  DECODE(NVL(SUM_READ_REQS,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_READ_BYTES,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	SUM_READ_BYTES)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),	SUM_WRITE_REQS)),  DECODE(NVL(SUM_WRITE_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  SUM_WRITE_BYTES)),  DECODE(NVL(SUM_IO_UNC_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  SUM_IO_UNC_BYTES)),  DECODE(NVL(SUM_IO_ELIG_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  SUM_IO_ELIG_BYTES)),  DECODE(NVL(SUM_IO_RET_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  SUM_IO_RET_BYTES)),  CASE WHEN SUM_IO_INTER_BYTES IS NULL OR SUM_IO_BYTES = 0 OR SUM_IO_INTER_BYTES = SUM_IO_BYTES OR NVL(SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE
 XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(SUM_IO_BYTES / DECODE(SUM_IO_INTER_BYTES,	0,  1,	SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(SUM_IO_ELIG_BYTES,  0) = 0 OR SUM_IO_BYTES = 0 OR SUM_IO_UNC_BYTES = SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST(SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES) - SUM_IO_RET_BYTES) / SUM_IO_ELIG_BYTES,  2))) END),	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN SUM(ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME)) ELSE NULL END FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) ELSE NULL END,  NVL2(MAX_ERROR_NUMBER,  XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MAX_ERROR_NUMBER AS &quot;number&quot;,  MAX_ERROR_FACILITY AS &quot;facility&quot;),  MAX_ERROR_MESSAGE),  NULL),  CASE WHEN :B61 = 1 AND MAGG.QC_HAS_BINDS_XML = 'Y' THEN (SELECT XMLTYPE(BINDS_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = :B17 AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END,  CASE WHEN :B60 = 1 AND MAGG.QC_HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = MAGG.MAX_INST_ID AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) FROM MONITOR_AGG MAGG),  CASE WHEN :B44 = 1 THEN (SELECT CASE WHEN AT.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( :B41 AS
&quot;ash_missing_seconds&quot;,  TO_CHAR(AT.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,	TO_CHAR(AT.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AT.ACTIVITY_END - AT.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  AT.ACTIVITY_COUNT AS &quot;count&quot;,  AT.IMQ_COUNT AS &quot;imq_count&quot;,  AT.WAIT_COUNT AS &quot;wait_count&quot;,  AT.CPU_COUNT AS &quot;cpu_count&quot;,  DECODE(AT.OTHER_SQL_COUNT,  0,  NULL,  AT.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AT.ACTIVITY_TOTAL,	AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,	SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,	SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) AT,  (SELECT CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND(( :B22 - :B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  SUM(ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(IMQ_COUNT) IMQ_COUNT,  SUM(WAIT_COUNT) WAIT_COUNT,  SUM(CPU_COUNT) CPU_COUNT,  SUM(OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),	AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,	MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,	MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN AH.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  :B41 AS &quot;ash_missing_seconds&quot;,  TO_CHAR(AH.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(AH.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AH.ACTIVITY_END - AH.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  :B25 AS &quot;sample_interval&quot;,  :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,	ROUND((:B22 - :B20 ) *3600*24) + 1 AS &quot;bucket_duration&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B34 AS &quot;total_cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD2.ACTIVITY_START) ACTIVITY_START,	MAX(AD2.ACTIVITY_END) ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET_XML) ORDER BY AD2.BUCKET_NUM) GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  MAX(AD1.BUCKET_IDLE_SECONDS) BUCKET_IDLE_SECONDS,	XMLAGG( XMLCONCAT( CASE WHEN AD1.DFO_PAIR_IDLE_RESP_TIME != 0 AND DFO_PAIR_ROWNUM = 1 THEN XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( 'Parallel Skew' AS &quot;class&quot;,  AD1.PX_STEP_ARG AS &quot;line&quot;,  AD1.PX_ID AS &quot;px&quot;,	ROUND(AD1.DFO_PAIR_IDLE_RESP_TIME,  2) AS &quot;rt&quot;),  0) ELSE NULL END,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( NVL(AD1.OTHER_SQL,  AD1.RPI) AS &quot;sql&quot;,  AD1.NON_SQL AS &quot;non_sql&quot;,	AD1.CLASS AS &quot;class&quot;,  AD1.OTHER_SQL_CLASS AS &quot;other_sql_class&quot;,  AD1.EVENT AS &quot;event&quot;,  AD1.PLAN_LINE_ID AS &quot;line&quot;,  NVL2(AD1.PLSQL_OBJECT_ID,  AD1.PLSQL_OBJECT_ID||'.'|| AD1.PLSQL_SUBPROGRAM_ID,  NULL) AS &quot;plsql_id&quot;,  AD1.PLSQL_NAME AS &quot;plsql_name&quot;,  CASE WHEN AD1.SQL_ROWNUM = 1 THEN AD1.TOP_LEVEL_SQL_ID END AS &quot;top_sql_id&quot;,	CASE WHEN AD1.DBOP_NAME IS NOT NULL THEN AD1.DBOP_NAME END AS &quot;dbop_name&quot;,  CASE WHEN AD1.DFO_MOST_ACTIVE_IID IS NOT NULL AND :B68 = 'Y' THEN AD1.DFO_MOST_ACTIVE_IID END AS &quot;skew_iid&quot;,  DECODE(AD1.DFO_MOST_ACTIVE_COUNT,  NULL, NULL,  AD1.DFO_MOST_ACTIVE_SID) AS &quot;skew_sid&quot;,  AD1.DFO_MOST_ACTIVE_COUNT AS &quot;skew_count&quot;,  DECODE(AD1.PX_DOP,  :B28 ,  NULL,  AD1.PX_DOP) AS &quot;dop&quot;,  DECODE(AD1.PX_DOP,  AD1.PX_MIN_DOP,	NULL,  AD1.PX_MIN_DOP) AS &quot;min_dop&quot;,	AD1.PX_ID AS &quot;px&quot;,  AD1.PX_STEP_ID AS &quot;step&quot;,  AD1.PX_STEP_ARG AS &quot;arg&quot;,	DECODE(AD1.ACTIVITY_COUNT,  AD1.RESP_TIME,  NULL,  ROUND(AD1.RESP_TIME,  2)) AS &quot;rt&quot;),  AD1.ACTIVITY_COUNT)) ORDER BY AD1.PX_STEP_ID,  AD1.PX_STEP_ARG,  AD1.DFO_PAIR_ROWNUM) ACTIVITY_BUCKET_XML FROM (SELECT AD01.*,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.ACTIVITY_TYPE END CLASS,	CASE WHEN (AD01.ACTIVITY_TYPE = 'Other SQL Execution' OR AD01.ACTIVITY_TYPE = 'Non SQL') THEN AD01.OTHER_SQL_ACTIVITY_TYPE END OTHER_SQL_CLASS,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.EVENT_NAME END EVENT,  CASE WHEN AD01.SQL IN ('this',  'anonymous') THEN NULL ELSE AD01.SQL END RPI,  DECODE(AD01.ACTIVITY_TYPE,  'Other SQL Execution',  SUBSTR(AD01.EVENT_NAME,	9),  NULL) OTHER_SQL,  DECODE(AD01.ACTIVITY_TYPE,  'Non SQL',  AD01.EVENT_NAME,  NULL) NON_SQL,  ROW_NUMBER() OVER(PARTITION BY AD01.BUCKET_NUM,  AD01.PX_DFO_PAIR_ID ORDER BY AD01.ACTIVITY_TYPE,  AD01.EVENT_NAME,  AD01.PLAN_LINE_ID) DFO_PAIR_ROWNUM FROM RESPONSE_TIME_DATA AD01) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,  CASE WHEN :B23 = 'Y' THEN (SELECT XMLELEMENT( &quot;parallel_info&quot;,  XMLATTRIBUTES( :B17 AS &quot;qc_instance_id&quot;,  MAX_PX_QCSID AS &quot;qc_session_id&quot;,  MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MAX_PX_DOP AS &quot;dop&quot;,  MAX_PX_DOP_INSTANCES AS &quot;max_dop_instances&quot;,  DIST_INST_COUNT AS &quot;inst_count&quot;,  DIST_PX_GROUP_COUNT AS &quot;serv
er_group_count&quot;,  DIST_PX_SET_COUNT AS &quot;server_set_count&quot;),  CASE WHEN :B70 = 1 THEN PX_SESSIONS ELSE NULL END,	CASE WHEN :B68 = 'Y' THEN DECODE(:B69 ,  1,  PX_INSTANCES,  NULL) ELSE NULL END) FROM (SELECT MAX_PX_QCSID,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,  DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,	(SELECT XMLELEMENT( &quot;sessions&quot;,  XMLATTRIBUTES(MAX(PX_SESSION.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_SESSION.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_SESSION.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_SESSION.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_SESSION.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,  MAX(PX_SESSION.MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_SESSION.MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PX_SESSION.MAX_BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_SESSION.MAX_ELAPSED_TIME) AS &quot;max_elapsed_time&quot;),  XMLAGG(PX_SESSION.PX_SESSION_XML ORDER BY PX_SERVER_GROUP NULLS FIRST,  PX_SERVER_SET,  PX_SERVER#)) FROM (SELECT PX_SERVER_GROUP,  PX_SERVER_SET,  PX_SERVER#,	MAX(PI.MAX_ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(PI.MAX_IO_REQS) MAX_IO_REQS,  MAX(PI.MAX_IO_BYTES) MAX_IO_BYTES,  MAX(PI.MAX_BUFFER_GETS) MAX_BUFFER_GETS,  SUM(PI.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,  SUM(PI.WAIT_COUNT) WAIT_COUNT,  SUM(PI.CPU_COUNT) CPU_COUNT,	SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  XMLELEMENT( &quot;session&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;,  PROCESS_NAME AS &quot;process_name&quot;,  SID AS &quot;session_id&quot;,  SESSION_SERIAL# AS &quot;session_serial&quot;,  PX_SERVER_GROUP AS &quot;server_group&quot;,  PX_SERVER_SET AS &quot;server_set&quot;,  PX_SERVER# AS &quot;server_num&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MAX(ELAPSED_TIME)),	NULL),	NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MAX(APPLICATION_WAIT_TIME)),  NULL),  NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),	MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),  XMLELEMENT(
&quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),  MAX(OTHER_WAIT_TIME)),  NULL),  NVL2(MAX(FETCHES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MAX(WRITE_BYTES)),	NULL),	NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),	MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),	ROUND(MAX(IO_BYTES) / DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,	ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES), 0),  NVL(MAX(IO_ELIG_BYTES), 0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN SUM(PI.ACTIVITY_COUNT) &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.OTHER_SQL_COUNT)AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),	XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,  PI.EVENT_NAME)) ELSE NULL END,  CASE WHEN :B60 = 1 AND PI.HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = PI.INST_ID AND MON.KEY = PI.KEY AND MON.SID = PI.SID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) PX_SESSION_XML FROM (SELECT MO.HAS_OTHER_XML,  MO.KEY,  MO.INST_ID,  DECODE(MO.PROCESS_NAME,  'ora',  'PX Coordinator',	MO.PROCESS_NAME) PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  MAX(MO.IO_REQS) MAX_IO_REQS,  MAX(MO.IO_BYTES) MAX_IO_BYTES,  MAX(MO.BUFFER_GETS) MAX_BUFFER_GETS,  MAX(MO.ELAPSED_TIME) MAX_ELAPSED_TIME,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.ACTIVITY_COUNT)) ACTIVITY_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.IMQ_COUNT)) IMQ_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.WAIT_COUNT)) WAIT_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.CPU_COUNT)) CPU_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.OTHER_SQL_COUNT)) OTHER_SQL_COUNT,	MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END,	MAX(DECODE(MO.ELAPSED_TIME,  0,  NULL,	MO.ELAPSED_TIME)) ELAPSED_TIME,  MAX(DECODE(MO.QUEUING_TIME,  0,  NULL,  MO.QUEUING_TIME)) QUEUING_TIME,  MAX(DECODE(MO.CPU_TIME,  0,  NULL,  CPU_TIME)) CPU_TIME,  MAX(DECODE(MO.FETCHES,  0,	NULL,  FETCHES)) FETCHES,  MAX(DECODE(MO.BUFFER_GETS,  0,  NULL,  MO.BUFFER_GETS)) BUFFER_GETS,  MAX(DECODE(MO.IO_INTER_BYTES,	0,  NULL,  MO.IO_INTER_BYTES)) IO_INTER_BYTES,	MAX(DECODE(MO.READ_REQS,  0,  NULL,  MO.READ_REQS)) READ_REQS,	MAX(DECODE(MO.READ_BYTES,  0,  NULL,  MO.READ_BYTES)) READ_BYTES,  MAX(DECODE(MO.WRITE_REQS,  0,  NULL,  MO.WRITE_REQS)) WRITE_REQS,  MAX(DECODE(MO.WRITE_BYTES,  0,  NULL,  MO.WRITE_BYTES)) WRITE_BYTES,  MAX(DECODE(MO.IO_BYTES,  0,  NULL,	MO.IO_BYTES)) IO_BYTES,  MAX(DECODE(MO.IO_UNC_BYTES,  0,  NULL,  MO.IO_UNC_BYTES)) IO_UNC_BYTES,  MAX(DECODE(MO.IO_ELIG_BYTES,	0,  NULL,  MO.IO_ELIG_BYTES)) IO_ELIG_BYTES,  MAX(DECODE(MO.IO_RET_BYTES,  0,  NULL,  MO.IO_RET_BYTES)) IO_RET_BYTES,  MAX(DECODE(MO.APPLICATION_WAIT_TIME,  0,  NULL,	MO.APPLICATION_WAIT_TIME)) APPLICATION_WAIT_TIME,  MAX(DECODE(MO.CONCURRENCY_WAIT_TIME,  0,  NULL,  MO.CONCURRENCY_WAIT_TIME)) CONCURRENCY_WAIT_TIME,  MAX(DECODE(MO.CLUSTER_WAIT_TIME,  0,  NULL,  MO.CLUSTER_WAIT_TIME)) CLUSTER_WAIT_TIME,  MAX(DECODE(MO.USER_IO_WAIT_TIME,  0,  NULL,  MO.USER_IO_WAIT_TIME)) USER_IO_WAIT_TIME,  MAX(DECODE(PLSQL_EXEC_TIME,  0,	NULL,  PLSQL_EXEC_TIME)) PLSQL_EXEC_TIME,  MAX(DECODE(MO.JAVA_EXEC_TIME,  0,  NULL,  MO.JAVA_EXEC_TIME)) JAVA_EXEC_TIME,  MAX(DECODE(MO.OTHER_WAIT_TIME,  0,  NULL,  MO.OTHER_WAIT_TIME)) OTHER_WAIT_TIME FROM MONITOR_DATA MO,  (SELECT ASH1.INST_ID,	ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  SUM(ASH1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH1.IMQ_COUNT) IMQ_COUNT,  SUM(ASH1.WAIT_COUNT) WAIT_COUNT,  SUM(ASH1.CPU_COUNT) CPU_COUNT,  SUM(ASH1.OTHER_SQL_COUNT)OTHER_SQL_COUNT,	MIN(ASH1.ACTIVITY_START) ACTIVITY_START,  MAX(ASH1.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH1 GROUP BY ASH1.INST_ID,  ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,	ASH1.EVENT_NAME) ASH0 WHERE MO.INST_ID = ASH0.INST_ID(+) AND MO.SID = ASH0.SESSION_ID(+) AND (:B70 = 1 OR :B69 = 1) GROUP BY MO.INST_ID,  MO.KEY,  MO.HAS_OTHER_XML,  MO.PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) PI WHERE (:B70 = 1) GROUP BY PI.INST_ID,  PI.KEY,  PI.HAS_OTHER_XML,  PI.SID,  PI.PROCESS_NAME,  PI.SESSION_SERIAL#,  PI.PX_SERVER_GROUP,  PI.PX_SERVER_SET,  PI.PX_SERVER#) PX_SESSION) PX_SESSIONS,  (SELECT XMLELEMENT( &quot;instances&quot;,  XMLATTRIBUTES( MAX(PX_INSTANCE.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_INSTANCE.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_INSTANCE.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_INSTANCE.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_INSTANCE.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,	MAX(PX_INSTANCE.ELAPSED_TIME) AS &quot;max_elapsed_time&quot;,	MAX(PX_INSTANCE.BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_INSTANCE.IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_INSTANCE.IO_BYTES) AS &quot;max_io_bytes&quot;),  XMLAGG(PX_INSTANCE.PX_INSTANCES_XML ORDER BY INST_ID)) FROM (SELECT PI.INST_ID,  MAX(PI.ELAPSED_TIME) ELAPSED_TIME,  MAX(PI.IO_REQS) IO_REQS,  MAX(PI.IO_BYTES) IO_BYTES,	MAX(PI.BUFFER_GETS) BUFFER_GETS,  SUM(PI
.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,	SUM(PI.WAIT_COUNT) WAIT_COUNT,	SUM(PI.CPU_COUNT) CPU_COUNT,  SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	XMLELEMENT( &quot;instance&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),	MAX(ELAPSED_TIME)),  NULL),  NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name
&quot;),  MAX(APPLICATION_WAIT_TIME)),	NULL),	NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),	MAX(OTHER_WAIT_TIME)),	NULL),	NVL2(MAX(FETCHES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),	MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),	NULL),	NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),	NULL),	NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),	MAX(WRITE_BYTES)),  NULL),  NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),	0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MAX(IO_BYTES)/ DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),	0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES),  0),  NVL(MAX(IO_ELIG_BYTES),  0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN :B33 = 1 AND SUM(PI.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,	XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;end_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,	PI.EVENT_NAME)) ELSE NULL END) PX_INSTANCES_XML FROM (SELECT MO.INST_ID,  ASH.ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.ACTIVITY_COUNT,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  ASH.ACTIVITY_START,	ASH.ACTIVITY_END,  MO.ELAPSED_TIME,  MO.QUEUING_TIME,  MO.CPU_TIME,  MO.APPLICATION_WAIT_TIME,	MO.CONCURRENCY_WAIT_TIME,  MO.CLUSTER_WAIT_TIME,  MO.USER_IO_WAIT_TIME,  MO.PLSQL_EXEC_TIME,  MO.JAVA_EXEC_TIME,  MO.OTHER_WAIT_TIME,  MO.FETCHES,  MO.BUFFER_GETS,  MO.IO_INTER_BYTES,  MO.IO_BYTES,  MO.READ_REQS,  MO.READ_BYTES,  MO.WRITE_REQS,  MO.WRITE_BYTES,  MO.IO_REQS,  MO.IO_UNC_BYTES,  MO.IO_ELIG_BYTES,  MO.IO_RET_BYTES FROM (SELECT MO0.INST_ID,  SUM(MO0.ELAPSED_TIME) ELAPSED_TIME,  SUM(MO0.QUEUING_TIME) QUEUING_TIME,  SUM(MO0.CPU_TIME) CPU_TIME,  SUM(MO0.FETCHES) FETCHES,  SUM(MO0.BUFFER_GETS) BUFFER_GETS,  SUM(MO0.IO_INTER_BYTES) IO_INTER_BYTES,  SUM(MO0.IO_BYTES) IO_BYTES,  SUM(MO0.READ_REQS) READ_REQS,  SUM(MO0.READ_BYTES) READ_BYTES,  SUM(MO0.WRITE_REQS) WRITE_REQS,	SUM(MO0.WRITE_BYTES) WRITE_BYTES,  SUM(MO0.IO_REQS) IO_REQS,  SUM(MO0.IO_UNC_BYTES) IO_UNC_BYTES,  SUM(MO0.IO_ELIG_BYTES) IO_ELIG_BYTES,  SUM(MO0.IO_RET_BYTES) IO_RET_BYTES,  SUM(MO0.APPLICATION_WAIT_TIME) APPLICATION_WAIT_TIME,  SUM(MO0.CONCURRENCY_WAIT_TIME) CONCURRENCY_WAIT_TIME,  SUM(MO0.CLUSTER_WAIT_TIME) CLUSTER_WAIT_TIME,  SUM(MO0.USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,  SUM(MO0.PLSQL_EXEC_TIME) PLSQL_EXEC_TIME,  SUM(MO0.JAVA_EXEC_TIME) JAVA_EXEC_TIME,  SUM(MO0.OTHER_WAIT_TIME) OTHER_WAIT_TIME FROM MONITOR_DATA MO0 GROUP BY MO0.INST_ID) MO,  (SELECT ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  SUM(ASH0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH0.IMQ_COUNT) IMQ_COUNT,  SUM(ASH0.WAIT_COUNT) WAIT_COUNT,  SUM(ASH0.CPU_COUNT) CPU_COUNT,  SUM(ASH0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH0 GROUP BY ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) ASH,  MONITOR_AGG WHERE MO.INST_ID = ASH.INST_ID(+) AND MONITOR_AGG.DIST_INST_COUNT &gt; 0 ) PI GROUP BY PI.INST_ID)PX_INSTANCE) PX_INSTANCES FROM MONITOR_AGG)) ELSE NULL END,  XPLAN_XML,  CASE WHEN :B43 = 1 THEN (SELECT XMLELEMENT( &quot;plan_monitor&quot;,  XMLATTRIBUTES(MAX(PLI.MAX_LINE_ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PLI.OVERALL_MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PLI.OVERALL_MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PLI.MAX_LINE_IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PLI.MAX_LINE_CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PLI.MAX_LINE_WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PLI.MAX_LINE_OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;),  XMLAGG( XMLELEMENT( &quot;operation&quot;,  XMLATTRIBUTES( PLI.PLAN_LINE_ID AS &quot;id&quot;,  PLI.PARENT_ID AS &quot;parent_id&quot;,  PLI.OPERATION AS &quot;name&quot;,  PLI.OPTIONS AS &quot;options&quot;,	PLI.DEPTH AS &quot;depth&quot;,  PLI.POSITION AS &quot;position&quot;,	PLI.INACTIVE AS &quot;skp&quot;,  PLI.PX_TYPE AS &quot;px_type&quot;),	NVL2(PLI.OBJECT_NAME,  XMLELEMENT( &quot;object&quot;,	XMLATTRIBUTES(PLI.OBJECT_TYPE AS &quot;type&quot;),  XMLFOREST(PLI.OBJECT_OWNER AS &quot;owner&quot;),	XMLFOREST(PLI.OBJECT_NAME AS &quot;name&quot;)),  NULL),  XMLFOREST(PLI.PARTITION_START AS &quot;partition_start&quot;,  PLI.PARTITION_STOP AS &quot;partition_stop&quot;),  CASE WHEN PLI.CARDINALITY IS NULL AND PLI.BYTES IS NULL AND PLI.COST IS NULL AND PLI.TEMP_SPACE IS NULL AND PLI.TIME IS NULL THEN NULL ELSE XMLELEMENT( &quot;optimizer&quot;,  NULL,  NVL2(PLI.CARDINALITY,  XMLFOREST(PLI.CARDINALITY AS &quot;cardinality&quot;),  NULL),  NVL2(PLI.BYTES,  XMLFOREST(PLI.BYTES AS &quot;bytes&quot;),	NULL),	NVL2(PLI.COST,	XMLFOREST(PLI.COST AS &quot;cost&quot;),  NULL),  NVL2(PLI.CPU_COST,  XMLFOREST(PLI.CPU_COST AS &quot;cpu_cost&quot;),	NULL),	NVL2(PLI.IO_COST,  XMLFOREST(PLI.IO_COST AS &quot;io_cost&quot;),  NULL),  NVL2(PLI.TEMP_SPACE,  XMLFOREST(PLI.TEMP_SPACE AS &quot;temp&quot;),  NULL),  NVL2(PLI.TIME,  XMLFOREST(PLI.TIME AS &quot;time&quot;),  NULL)) END,	XMLELEMENT( &quot;stats&quot;,	XMLATTRIBUTES('plan_monitor' AS &quot;type&quot;),  NVL2(PLI.FIR
ST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_active' AS &quot;name&quot;),  TO_CHAR(FIRST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN PLI.FIRST_MOVE_TIME != PLI.FIRST_CHANGE_TIME THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_row' AS &quot;name&quot;),  TO_CHAR(FIRST_CHANGE_TIME,  :B12 )) ELSE NULL END,  NVL2(PLI.LAST_MOVE_TIME,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('last_active' AS &quot;name&quot;),  TO_CHAR(LAST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN (PLI.FIRST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  ROUND((LAST_MOVE_TIME - FIRST_MOVE_TIME) * 3600 * 24)+1) END,	CASE WHEN (PLI.OVERALL_LAST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('from_most_recent' AS &quot;name&quot;),  ROUND((PLI.OVERALL_LAST_MOVE_TIME - PLI.LAST_MOVE_TIME) * 3600 * 24)) END,  NVL2(PLI.LAST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'from_sql_exec_start' AS &quot;name&quot;),  ROUND( (FIRST_MOVE_TIME - :B8 ) * 3600*24)),  NULL),  NVL2(PLI.PERCENT_COMPLETE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('percent_complete' AS &quot;name&quot;),  PLI.PERCENT_COMPLETE),  NULL),  NVL2(PLI.TIME_REMAINING,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('time_left' AS &quot;name&quot;),  PLI.TIME_REMAINING),  NULL),  CASE WHEN PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('starts' AS &quot;name&quot;),  PLI.STARTS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_starts' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_STARTS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(MAX_STARTS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_STARTS/10000000000)) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('dop' AS
&quot;name&quot;),  PLI.DOP) ELSE NULL END,  CASE WHEN NEED_ROWS IS NOT NULL AND PLI.FIRST_MOVE_TIME IS NOT NULL THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cardinality' AS &quot;name&quot;),	PLI.OUTPUT_ROWS) ELSE NULL END,  CASE WHEN PLI.NEED_ROWS IS NOT NULL AND PLI.DOP &gt; 0 AND PLI.MAX_OUTPUT_ROWS IS NOT NULL AND (PLI.FIRST_MOVE_TIME IS NOT NULL) THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_card' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_OUTPUT_ROWS/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_OUTPUT_ROWS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_OUTPUT_ROWS/10000000000)) ELSE NULL END,  CASE WHEN PLI.MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('memory' AS &quot;name&quot;),  PLI.MEM) ELSE NULL END,  CASE WHEN PLI.MAX_MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_memory' AS &quot;name&quot;),	PLI.MAX_MEM) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MIN_MAX_MEM IS NOT NULL AND PLI.MAX_MEM
&gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'min_max_mem' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MIN_MAX_MEM/1000000),  10000),  NULL) AS &quot;iid&quot;,	MOD(MIN_MAX_MEM,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MIN_MAX_MEM/10000000000)) ELSE NULL END,  CASE WHEN PLI.TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('temp' AS &quot;name&quot;),  PLI.TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_temp' AS &quot;name&quot;),  PLI.MAX_TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('spill_count' AS &quot;name&quot;),  PLI.SPILL_COUNT) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_MAX_TEMP IS NOT NULL AND PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_max_temp' AS &quot;name&quot;,  DECODE(:B68 ,	'Y',  MOD(TRUNC(MAX_MAX_TEMP/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_MAX_TEMP,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_MAX_TEMP/10000000000)) ELSE NULL END,  CASE WHEN PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  PLI.READ_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_REQS IS NOT NULL AND PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_read_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',	MOD(TRUNC(PLI.MAX_READ_REQS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_REQS/10000000000)) ELSE NULL END,	CASE WHEN PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  PLI.READ_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_BYTES IS NOT NULL AND PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_read_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_READ_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_BYTES,	1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  PLI.WRITE_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_REQS IS NOT NULL AND PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_REQS/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_REQS/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  PLI.WRITE_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_BYTES IS NOT NULL AND PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_bytes' AS &quot;name&quot;,	DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_BYTES,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('io_inter_bytes' AS &quot;name&quot;),  PLI.IO_INTER_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_io_inter_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_IO_INTER_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_IO_INTER_BYTES, 1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_IO_INTER_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(PLI.IO_BYTES / DECODE(PLI.IO_INTER_BYTES,  0,  1,  PLI.IO_INTER_BYTES),  2)) ELSE NULL END),	NVL2(STAT_GID,	XMLELEMENT( &quot;rwsstats&quot;,  XMLATTRIBUTES( PLI.STAT_GID AS &quot;group_id&quot;),  DECODE(GID_ROWNUM,  1,  (SELECT XMLELEMENT( &quot;metadata&quot;,  NULL,  XMLAGG( XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( ROWNUM AS &quot;id&quot;,  NAME AS &quot;name&quot;,	DESCRIPTION AS &quot;desc&quot;,  TYPE AS &quot;type&quot;,  DECODE(FLAGS,  0,	NULL,  FLAGS) AS &quot;flags&quot;),  NULL) ORDER BY ID)) FROM V$SQL_MONITOR_STATNAME WHERE GROUP_ID = PLI.STAT_GID),  NULL),  NVL2(STAT1_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(1 AS &quot;id&quot;),  STAT1_VALUE),  NULL),  NVL2(STAT2_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(2 AS &quot;id&quot;),  STAT2_VALUE),  NULL),  NVL2(STAT3_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(3 AS &quot;id&quot;),  STAT3_VALUE),  NULL),  NVL2(STAT4_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(4 AS &quot;id&quot;),	STAT4_VALUE),  NULL),  NVL2(STAT5_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(5 AS &quot;id&quot;),  STAT5_VALUE),  NULL),  NVL2(STAT6_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(6 AS &quot;id&quot;),  STAT6_VALUE),  NULL),  NVL2(STAT7_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(7 AS &quot;id&quot;),  STAT7_VALUE),  NULL),  NVL2(STAT8_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(8 AS &quot;id&quot;),	STAT8_VALUE),  NULL),  NVL2(STAT9_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(9 AS &quot;id&quot;),  STAT9_VALUE),  NULL),  NVL2(STAT10_VALUE,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES(10 AS &quot;id&quot;),  STAT10_VALUE),  NULL)),  NULL),  CASE WHEN PLI.LINE_ACTIVITY_COUNT &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(PLI.LINE_ACTIVITY_START,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR(PLI.LINE_ACTIVITY_END,  :B12 ) AS &quot;end_time&quot;,  ROUND((PLI.LINE_ACTIVITY_END - PLI.LINE_ACTIVITY_START) * 3600*24) + 1 AS &quot;duration&quot;,  PLI.LINE_ACTIVITY_COUNT AS &quot;count&quot;,  PLI.LINE_IMQ_COUNT AS &quot;imq_count&quot;,	PLI.LINE_WAIT_COUNT AS &quot;wait_count&quot;,	PLI.LINE_CPU_COUNT AS &quot;cpu_count&quot;,  PLI.LINE_OTHER_SQL_COUNT AS &quot;other_sql_count&quot;,	:B40 AS &quot;cpu_cores&quot;,	:B39 AS &quot;hyperthread&quot;),  PLI.ACTIVITY_TOTAL,	PLI.PLAN_ACTIVITY_HISTO) ELSE NULL END) ORDER BY PLI.PLAN_LINE_ID) ) FROM (SELECT AT.MAX_LINE_ACTIVITY_COUNT,  PM.OVERALL_MAX_IO_REQS,	PM.OVERALL_MAX_IO_BYTES,  AT.MAX_LINE_IMQ_COUNT,  AT.MAX_LINE_CPU_COUNT,  AT.MAX_LINE_WAIT_COUNT,  AT.LINE_OTHER_SQL_COUNT,  AT.MAX_LINE_OTHER_SQL_COUNT,  PM.PLAN_LINE_ID,  PM.PARENT_ID,  PM.OPERATION,  PM.OPTIONS,	PM.DEPTH,  PM.POSITION,  PM.INACTIVE,  CASE WHEN PM.OPERATION = 'PX COORDINATOR' AND :B23 = 'Y' AND (PM.PX_SERVER_SET IS NOT NULL OR AH.PX_SERVER_SET IS NOT NULL) THEN 'QC' WHEN PM.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(PM.PX_SERVER_SET) WHEN AH.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(AH.PX_SERVER_SET) WHEN (:B23 = 'N' OR (PM.LAST_CHANGE_TIME IS NULL AND AT.LINE_ACTIVITY_END IS NULL)) THEN NULL ELSE 'QC' END PX_TYPE,  PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START,  PM.LAST_CHANGE_TIME,  PM.OVERALL_LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END,	AT.OVERALL_LINE_ACTIVITY_END,  LEAST(NVL(AT.LINE_ACTIVITY_START,  PM.FIRST_CHANGE_TIME),  NVL(PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START)) FIRST_MOVE_TIME,	GREATEST(NVL(AT.LINE_ACTIVITY_END,  PM.LAST_CHANGE_TIME),  NVL(PM.LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END)) LAST_MOVE_TIME,  GREATEST(NVL(AT.OVERALL_LINE_ACTIVITY_END,  PM.OVERALL_LAST_CHANGE_TIME),	NVL(PM.OVERALL_LAST_CHANGE_TIME,  AT.OVERALL_LINE_ACTIVITY_END)) OVERALL_LAST_MOVE_TIME,  CASE WHEN PM.STARTS IS NOT NULL AND PM.STARTS &gt; 0 THEN 1 ELSE 0 END HAS_EXECUTED,	PM.OBJECT_NAME,  PM.OBJECT_TYPE,  PM.OBJECT_OWNER,  PM.PARTITION_START,  PM.PARTITION_STOP,  PM.CARDINAL
ITY,  PM.BYTES,  PM.COST,  PM.TEMP_SPACE,  PM.TIME,  PM.CPU_COST,  PM.IO_COST,	LO.PERCENT_COMPLETE,  LO.TIME_REMAINING,  PM.STARTS,  PM.DOP,  PM.MAX_STARTS,  PM.OUTPUT_ROWS,	PM.NEED_ROWS,  PM.MAX_OUTPUT_ROWS,  PM.MEM,  PM.MAX_MEM,  PM.MIN_MAX_MEM,  PM.TEMP,  PM.MAX_TEMP,  PM.SPILL_COUNT,  PM.MAX_MAX_TEMP,  PM.READ_REQS,  PM.MAX_READ_REQS,	PM.READ_BYTES,	PM.MAX_READ_BYTES,  PM.WRITE_REQS,  PM.MAX_WRITE_REQS,	PM.WRITE_BYTES,  PM.MAX_WRITE_BYTES,  PM.IO_INTER_BYTES,  PM.IO_BYTES,	PM.MAX_IO_INTER_BYTES,	AT.LINE_ACTIVITY_COUNT,  AT.LINE_IMQ_COUNT,  AT.LINE_WAIT_COUNT,  AT.LINE_CPU_COUNT,  AT.ACTIVITY_TOTAL,  AH.PLAN_ACTIVITY_HISTO,  PM.STAT_GID,  PM.GID_ROWNUM,  PM.STAT1_VALUE,  PM.STAT2_VALUE,  PM.STAT3_VALUE,  PM.STAT4_VALUE,  PM.STAT5_VALUE,  PM.STAT6_VALUE,  PM.STAT7_VALUE,	PM.STAT8_VALUE,  PM.STAT9_VALUE,  PM.STAT10_VALUE FROM (SELECT AT0.*,  MAX(LINE_ACTIVITY_END) OVER() OVERALL_LINE_ACTIVITY_END,  MAX(LINE_ACTIVITY_COUNT) OVER() MAX_LINE_ACTIVITY_COUNT,  MAX(LINE_IMQ_COUNT) OVER() MAX_LINE_IMQ_COUNT,  MAX(LINE_CPU_COUNT) OVER() MAX_LINE_CPU_COUNT,  MAX(LINE_WAIT_COUNT) OVER() MAX_LINE_WAIT_COUNT,  MAX(LINE_OTHER_SQL_COUNT) OVER() MAX_LINE_OTHER_SQL_COUNT FROM (SELECT AD1.PLAN_LINE_ID,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) LINE_ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) LINE_IMQ_COUNT,  SUM(AD1.WAIT_COUNT) LINE_WAIT_COUNT,  SUM(AD1.OTHER_SQL_COUNT) LINE_OTHER_SQL_COUNT,  SUM(AD1.CPU_COUNT) LINE_CPU_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MAX(AD0.DFO_MOST_ACTIVE_IID) DFO_MOST_ACTIVE_IID,  MAX(AD0.DFO_MOST_ACTIVE_SID) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT FROM ASH_DATA AD0 WHERE AD0.PLAN_LINE_ID IS NOT NULL GROUP BY AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID) AT0) AT,	(SELECT AD2.PLAN_LINE_ID,  MIN(AD2.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD2.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD2.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD2.IMQ_COUNT) IMQ_COUNT,  SUM(AD2.WAIT_COUNT) WAIT_COUNT,  SUM(AD2.CPU_COUNT) CPU_COUNT,  SUM(AD2.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  CASE WHEN :B29 = 1 AND SUM(AD2.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND((:B22 -:B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG(XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),	AD2.ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END PLAN_ACTIVITY_HISTO FROM (SELECT AD1.PLAN_LINE_ID,  AD1.BUCKET_NUM,  MIN(AD1.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(NVL2(AD1.ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT),  NULL) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(NVL2(AD0.ACTIVITY_START,  AD0.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID,	AD1.BUCKET_NUM) AD2 GROUP BY AD2.PLAN_LINE_ID) AH,  (SELECT LO.SQL_PLAN_LINE_ID PLAN_LINE_ID,  DECODE(SUM(LO.TOTALWORK),  0,  NULL,  ROUND(SUM(LO.SOFAR)*100/SUM(LO.TOTALWORK))) PERCENT_COMPLETE,  MAX(LO.TIME_REMAINING) TIME_REMAINING FROM GV$SESSION_LONGOPS LO,  MONITOR_DATA MO WHERE (:B49 = 'Y' OR :B71 = 'DONE (ERROR)') AND LO.SQL_ID = :B9 AND LO.SQL_EXEC_START = :B8 AND LO.SQL_EXEC_ID = :B7 AND LO.INST_ID = MO.INST_ID AND LO.SID = MO.SID GROUP BY LO.SQL_PLAN_LINE_ID) LO,  (SELECT PM0.*,  CASE WHEN PM0.STARTS IS NULL OR PM0.STARTS = 0 OR PM0.OUTPUT_ROWS IS NULL THEN NULL ELSE 1 END NEED_ROWS,  ROW_NUMBER() OVER(PARTITION BY PM0.STAT_GID ORDER BY PM0.PLAN_LINE_ID ) GID_ROWNUM,  MAX(LAST_CHANGE_TIME) OVER() OVERALL_LAST_CHANGE_TIME,  MAX(MAX_IO_REQS) OVER() OVERALL_MAX_IO_REQS,  MAX(MAX_IO_BYTES) OVER() OVERALL_MAX_IO_BYTES FROM (SELECT /*+ leading(mo) use_hash(plm) */ PLM.PLAN_LINE_ID PLAN_LINE_ID,  PLM.PLAN_OPERATION OPERATION,	PLM.PLAN_OPTIONS OPTIONS,  MAX(PLM.PLAN_PARENT_ID) PARENT_ID,  MAX(PLM.PLAN_DEPTH) DEPTH,  MAX(PLM.PLAN_POSITION) POSITION,  MAX(PLM.PLAN_OPERATION_INACTIVE) INACTIVE,  MAX(PLM.PLAN_OBJECT_OWNER) OBJECT_OWNER,  MAX(PLM.PLAN_OBJECT_NAME) OBJECT_NAME,  MAX(PLM.PLAN_OBJECT_TYPE) OBJECT_TYPE,  MAX(PLM.PLAN_COST) COST,  MAX(PLM.PLAN_CARDINALITY) CARDINALITY,  MAX(PLM.PLAN_BYTES) BYTES,  MAX(PLM.PLAN_CPU_COST) CPU_COST,  MAX(PLM.PLAN_IO_COST) IO_COST,  MAX(PLM.PLAN_TEMP_SPACE) TEMP_SPACE,  MAX(PLM.PLAN_TIME) TIME,  MAX(PLM.PLAN_PARTITION_START) PARTITION_START,  MAX(PLM.PLAN_PARTITION_STOP) PARTITION_STOP,  MIN(PLM.FIRST_CHANGE_TIME) FIRST_CHANGE_TIME,	MAX(PLM.LAST_CHANGE_TIME) LAST_CHANGE_TIME,  MIN(PLM.LAST_CHANGE_TIME) MIN_LAST_CHANGE_TIME,  MIN(NVL2(PLM.FIRST_CHANGE_TIME,  MO.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  COUNT(CASE WHEN PLM.PAR IS NOT NULL AND PLM.STARTS IS NOT NULL AND PLM.STARTS &gt; 0 AND PLM.PLAN_LINE_ID != 0 AND PLM.PLAN_OPERATION != 'PX COORDINATOR' THEN 1 ELSE NULL END) DOP,  SUM(PLM.STARTS) STARTS,	MAX(NVL2(PAR,  PLM.STARTS * 10000000000 + PLM.ES,  NULL)) MAX_STARTS,  SUM(PLM.OUTPUT_ROWS) OUTPUT_ROWS,  MAX(NVL2(PAR,  PLM.OUTPUT_ROWS * 10000000000 +PLM.ES,  NULL)) MAX_OUTPUT_ROWS,  SUM(PLM.WORKAREA_MEM) MEM,  SUM(PLM.WORKAREA_MAX_MEM) MAX_MEM,  MIN(NVL2(PAR,  PLM.WORKAREA_MAX_MEM * 10000000000 + PLM.ES,  NULL)) MIN_MAX_MEM,  SUM(PLM.WORKAREA_TEMPSEG) TEMP,  SUM(PLM.WORKAREA_MAX_TEMPSEG) MAX_TEMP,  MAX(NVL2(PAR,  PLM.WORKAREA_MAX_TEMPSEG * 10000000000 + PLM.ES,  NULL)) MAX_MAX_TEMP,  COUNT(PLM.WORKAREA_MAX_TEMPSEG) SPILL_COUNT,  SUM(PLM.PHYSICAL_READ_REQUESTS) READ_REQS,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_READ_REQS,  SUM(PLM.PHYSICAL_READ_BYTES) READ_BYTES,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_READ_BYTES,  SUM(PLM.PHYSICAL_WRITE_REQUESTS) WRITE_REQS,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_REQS,  SUM(PLM.PHYSICAL_WRITE_BYTES) WRITE_BYTES,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_BYTES,  NVL(SUM(PLM.PHYSICAL_READ_BYTES),  0) + NVL(SUM(PLM.PHYSICAL_WRITE_BYTES),  0) IO_BYTES,  SUM(NVL(PLM.PHYSICA
L_READ_REQUESTS,  0) + NVL(PLM.PHYSICAL_WRITE_REQUESTS,  0)) MAX_IO_REQS,  SUM(NVL(PLM.PHYSICAL_READ_BYTES,  0) + NVL(PLM.PHYSICAL_WRITE_BYTES,  0)) MAX_IO_BYTES,  SUM(PLM.IO_INTERCONNECT_BYTES) IO_INTER_BYTES,  MAX(NVL2(PAR,  PLM.IO_INTERCONNECT_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_IO_INTER_BYTES,  MAX(OTHERSTAT_GROUP_ID) STAT_GID,  NVL(DECODE(MAX(OTHERSTAT_1_TYPE),	3,  MAX(OTHERSTAT_1_VALUE),  4,  MAX(OTHERSTAT_1_VALUE),  6,  MIN(OTHERSTAT_1_VALUE),  7,  MIN(OTHERSTAT_1_VALUE),  NULL),  SUM(DECODE(OTHERSTAT_1_TYPE,  1,  OTHERSTAT_1_VALUE,  2,  OTHERSTAT_1_VALUE,  NULL))) STAT1_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_2_TYPE),	3,  MAX(OTHERSTAT_2_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),	4,  MAX(RMAX1 + OTHERSTAT_2_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_2_VALUE),  NULL),  6,  MIN(OTHERSTAT_2_VALUE),  NULL)),	10000000000000000),  SUM(DECODE(OTHERSTAT_2_TYPE,  1,  OTHERSTAT_2_VALUE,  2,  OTHERSTAT_2_VALUE,  NULL))) STAT2_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_3_TYPE),  3,  MAX(OTHERSTAT_3_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_3_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_3_VALUE),  NULL),  6,  MIN(OTHERSTAT_3_VALUE),	NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_3_TYPE,  1,	OTHERSTAT_3_VALUE,  2,	OTHERSTAT_3_VALUE,  NULL))) STAT3_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_4_TYPE),  3,  MAX(OTHERSTAT_4_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_4_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_4_VALUE),  NULL),  6,	MIN(OTHERSTAT_4_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_4_TYPE,  1,  OTHERSTAT_4_VALUE,  2,  OTHERSTAT_4_VALUE,  NULL))) STAT4_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_5_TYPE),  3,  MAX(OTHERSTAT_5_VALUE),	5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_5_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_5_VALUE),  NULL),  6,  MIN(OTHERSTAT_5_VALUE),  NULL)),  10000000000000000),	SUM(DECODE(OTHERSTAT_5_TYPE,  1,  OTHERSTAT_5_VALUE,  2,  OTHERSTAT_5_VALUE,  NULL))) STAT5_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_6_TYPE),  3,	MAX(OTHERSTAT_6_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,	MAX(RMAX1 + OTHERSTAT_6_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_6_VALUE),  NULL),  6,  MIN(OTHERSTAT_6_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_6_TYPE,  1,  OTHERSTAT_6_VALUE,  2,  OTHERSTAT_6_VALUE,  NULL))) STAT6_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_7_TYPE),  3,  MAX(OTHERSTAT_7_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_7_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_7_VALUE),  NULL),  6,  MIN(OTHERSTAT_7_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_7_TYPE,	1,  OTHERSTAT_7_VALUE,	2,  OTHERSTAT_7_VALUE,	NULL))) STAT7_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_8_TYPE),  3,  MAX(OTHERSTAT_8_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_8_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_8_VALUE),	NULL),	6,  MIN(OTHERSTAT_8_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_8_TYPE,  1,  OTHERSTAT_8_VALUE,  2,  OTHERSTAT_8_VALUE,  NULL))) STAT8_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_9_TYPE),  3,  MAX(OTHERSTAT_9_VALUE),  5,	DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_9_VALUE),  7,	MIN(RMAX1 + OTHERSTAT_9_VALUE),  NULL),  6,  MIN(OTHERSTAT_9_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_9_TYPE,  1,  OTHERSTAT_9_VALUE,  2,  OTHERSTAT_9_VALUE,  NULL))) STAT9_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_10_TYPE),  3,  MAX(OTHERSTAT_10_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_10_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_10_VALUE),  NULL),  6,  MIN(OTHERSTAT_10_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_10_TYPE,  1,  OTHERSTAT_10_VALUE,  2,  OTHERSTAT_10_VALUE,  NULL))) STAT10_VALUE FROM (SELECT A.*,  OTHERSTAT_1_VALUE * 10000000000000000 RMAX1,  A.INST_ID * 1000000 + A.SID ES,  DECODE(A.PROCESS_NAME,  'ora',  NULL,  1) PAR FROM GV$ALL_SQL_PLAN_MONITOR A) PLM,  MONITOR_DATA MO WHERE PLM.SQL_ID = :B9 AND PLM.SQL_EXEC_START = :B8 AND PLM.SQL_EXEC_ID = :B7 AND PLM.INST_ID = MO.INST_ID AND PLM.INST_ID BETWEEN :B11 AND :B10 AND PLM.KEY = MO.KEY GROUP BY PLM.PLAN_LINE_ID,	PLM.PLAN_OPERATION,  PLM.PLAN_OPTIONS) PM0) PM WHERE AH.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND AT.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND LO.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND (:B21 IS NULL OR PM.PLAN_LINE_ID = :B21 )) PLI) ELSE NULL END,	CASE WHEN :B42 = 1 THEN DBMS_SQLTUNE.BUILD_STASH_XML( SESSION_ID=&gt;:B19 ,  SESSION_SERIAL=&gt;:B18 ,	SESSION_INST_ID=&gt;:B17 ,  PX_MODE=&gt;'yes',	START_TIME=&gt;:B20 ,  END_TIME=&gt;:B22 ,  MISSING_SECONDS=&gt; :B41 ,  INSTANCE_LOW_FILTER=&gt;:B11 ,  INSTANCE_HIGH_FILTER=&gt;:B10 ,  BUCKET_MAX_COUNT=&gt;NULL,  BUCKET_INTERVAL=&gt;:B26 ,  REPORT_LEVEL=&gt;'typical',  CPU_CORES=&gt;:B40 ,  IS_HYPER=&gt;:B39 ) ELSE NULL END),  (CASE WHEN :B38 = 1 THEN (SELECT XMLELEMENT( &quot;skewed_sessions&quot;,  XMLATTRIBUTES( DECODE(MIN(INST_ID),  NULL,  :B17 ,  MIN(INST_ID)) AS &quot;min_iid&quot;,	DECODE(MAX(INST_ID),  NULL,  :B17 ,  MAX(INST_ID)) AS
&quot;max_iid&quot;),  XMLAGG( XMLELEMENT( &quot;s&quot;,  XMLATTRIBUTES( INST_ID AS &quot;i&quot;),  SESSION_ID) ORDER BY INST_ID,  SESSION_ID)) FROM (SELECT SESS.* FROM (SELECT DECODE(AD.DFO_MOST_ACTIVE_IID,  :B17 ,  NULL,  AD.DFO_MOST_ACTIVE_IID) INST_ID,  AD.DFO_MOST_ACTIVE_SID SESSION_ID FROM ASH_DATA AD WHERE AD.DFO_MOST_ACTIVE_COUNT IS NOT NULL GROUP BY AD.DFO_MOST_ACTIVE_IID,  AD.DFO_MOST_ACTIVE_SID ORDER BY MAX(AD.DFO_MOST_ACTIVE_COUNT) DESC) SESS WHERE ROWNUM &lt;= 100)) ELSE NULL END),  (CASE WHEN :B37 = 1 THEN (SELECT XMLELEMENT( &quot;report_repository_summary&quot;,  CASE WHEN MA.MAX_DBOP_NAME IS NOT NULL THEN XMLELEMENT( &quot;dbop&quot;,  XMLATTRIBUTES('F' AS &quot;detail&quot;,  MA.MAX_DBOP_NAME AS &quot;dbop_name&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,  :B12 ) AS &quot;dbop_exec_start&quot;,  MA.MAX_DBOP_EXEC_ID AS &quot;dbop_exec_id&quot;),  XMLFOREST( MA.MAX_STATUS AS &quot;status&quot;,  TO_CHAR(NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME),  :B12 )AS
&quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 )AS &quot;last_refresh_time&quot;,  MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,  MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,	MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,	MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,  MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,	MA.MAX_PX_DOP AS &quot;dop&quot;,  MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;),  CASE WHEN MA.MAX_ERROR_NUMBER IS NULL THEN NULL ELSE XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MA.MAX_ERROR_NUMBER AS &quot;number&quot;,  MA.MAX_ERROR_FACILITY AS &quot;facility&quot;),  MA.MAX_ERROR_MESSAGE) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME))*86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,  0,  1,  MA.SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,  2))) END) ) ELSE XMLELEMENT( &quot;sql&quot;,  XMLATTRIBUTES( MA.MAX_SQL_ID AS &quot;sql_id&quot;,  TO_CHAR(MA.MAX_SQL_EXEC_START,  :B12 ) AS &quot;sql_exec_start&quot;,	MA.MAX_SQL_EXEC_ID AS &quot;sql_exec_id&quot;),  XMLFOREST(MA.MAX_STATUS AS &quot;status&quot;,  SUBSTR(MA.SQLMON_TEXT,  1,  100) AS &quot;sql_text&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,	:B12 ) AS &quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 ) AS &quot;last_refresh_time&quot;,	MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,	MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,  MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,  MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PLAN_HASH_VALUE AS &quot;plan_hash&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,	MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MA.MAX_PX_DOP AS &quot;dop&quot;,	MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;,  MA.SUM_SERVERS_REQUESTED AS &quot;px_servers_requested&quot;,  MA.SUM_SERVERS_ALLOCATED AS &quot;px_servers_allocated&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('duration' AS &quot;name&quot;),	GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- MA.MAX_SQL_EXEC_START) * 86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME
,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  DECODE(MA.SUM_IO_UNC_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MA.SUM_IO_UNC_BYTES)),  DECODE(MA.SUM_IO_ELIG_BYTES,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MA.SUM_IO_ELIG_BYTES)),  DECODE(MA.SUM_IO_RET_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MA.SUM_IO_RET_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,	0,  1,	MA.SUM_IO_INTER_BYTES),  2)) END,  CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,	0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,	2))) END) ) END) FROM MONITOR_AGG MA) ELSE NULL END) FROM (SELECT CASE WHEN V1.XPLAN_XML IS NULL OR V1.XPLAN_XML.EXISTSNODE('/error') &gt; 0 THEN NULL ELSE V1.XPLAN_XML END XPLAN_XML FROM (SELECT CASE WHEN :B36 = 1 THEN DBMS_XPLAN.BUILD_PLAN_XML( TABLE_NAME=&gt;'gv$all_sql_plan',  PLAN_TAG=&gt;'plan',	FILTER_PREDS=&gt;:B35 ,  FORMAT=&gt;'-PROJECTION +ALIAS +ADAPTIVE') ELSE NULL END XPLAN_XML FROM DUAL) V1) CONST_VIEW</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="a95n8p4vpxmps"></a>a95n8p4vpxmps</td><td class='awrnc'><pre_sqltext class="awr">begin prvt_hdm.execute_slave_actions; end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="atwuyuvqkf27w"></a>atwuyuvqkf27w</td><td class='awrc'><pre_sqltext class="awr">SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE,  BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END,  SUM(TM_CPU_FIRST_BUCKET_VALUE) TM_CPU_FIRST_BUCKET_VALUE,	SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE,	SUM(TM_DB_FIRST_BUCKET_VALUE) TM_DB_FIRST_BUCKET_VALUE,  SUM(TM_DB_MIDDLE_BUCKETS_VALUE) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(TM_DB_LAST_BUCKET_VALUE) TM_DB_LAST_BUCKET_VALUE,  SUM(RREQS_FIRST_BUCKET_VALUE) RREQS_FIRST_BUCKET_VALUE,  SUM(RREQS_MIDDLE_BUCKETS_VALUE) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(RREQS_LAST_BUCKET_VALUE) RREQS_LAST_BUCKET_VALUE,  SUM(WREQS_FIRST_BUCKET_VALUE) WREQS_FIRST_BUCKET_VALUE,  SUM(WREQS_MIDDLE_BUCKETS_VALUE) WREQS_MIDDLE_BUCKETS_VALUE,	SUM(WREQS_LAST_BUCKET_VALUE) WREQS_LAST_BUCKET_VALUE,  SUM(RBYTES_FIRST_BUCKET_VALUE) RBYTES_FIRST_BUCKET_VALUE,  SUM(RBYTES_MIDDLE_BUCKETS_VALUE) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(RBYTES_LAST_BUCKET_VALUE) RBYTES_LAST_BUCKET_VALUE,  SUM(WBYTES_FIRST_BUCKET_VALUE) WBYTES_FIRST_BUCKET_VALUE,  SUM(WBYTES_MIDDLE_BUCKETS_VALUE) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(WBYTES_LAST_BUCKET_VALUE) WBYTES_LAST_BUCKET_VALUE,  SUM(IBYTES_FIRST_BUCKET_VALUE) IBYTES_FIRST_BUCKET_VALUE,	SUM(IBYTES_MIDDLE_BUCKETS_VALUE) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(IBYTES_LAST_BUCKET_VALUE) IBYTES_LAST_BUCKET_VALUE,	SUM(CRBYTES_FIRST_BUCKET_VALUE) CRBYTES_FIRST_BUCKET_VALUE,  SUM(CRBYTES_MIDDLE_BUCKETS_VALUE) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(CRBYTES_LAST_BUCKET_VALUE) CRBYTES_LAST_BUCKET_VALUE,  SUM(PGA_ALLOC_FIRST_BUCKET_VALUE) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(PGA_ALLOC_MIDDLE_BUCKETS_VALUE) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(PGA_ALLOC_LAST_BUCKET_VALUE) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(TMP_ALLOC_FIRST_BUCKET_VALUE) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(TMP_ALLOC_MIDDLE_BUCKETS_VALUE) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(TMP_ALLOC_LAST_BUCKET_VALUE) TMP_ALLOC_LAST_BUCKET_VALUE FROM ( SELECT GROUP_TYPE,  BUCKET_START,  TM_BUCKET_START,  TM_BUCKET_END,  BUCKET_END,  TM_GROUP_TYPE,  SUM(GVTF.TM_CPU_FIRST_BUCKET_VALUE) TM_CPU_FIRST_BUCKET_VALUE,  SUM(GVTF.TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE,  SUM(GVTF.TM_DB_FIRST_BUCKET_VALUE) TM_DB_FIRST_BUCKET_VALUE,  SUM(GVTF.TM_DB_MIDDLE_BUCKETS_VALUE) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TM_DB_LAST_BUCKET_VALUE) TM_DB_LAST_BUCKET_VALUE,	SUM(GVTF.RREQS_FIRST_BUCKET_VALUE) RREQS_FIRST_BUCKET_VALUE,  SUM(GVTF.RREQS_MIDDLE_BUCKETS_VALUE) RREQS_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.RREQS_LAST_BUCKET_VALUE) RREQS_LAST_BUCKET_VALUE,  SUM(GVTF.WREQS_FIRST_BUCKET_VALUE) WREQS_FIRST_BUCKET_VALUE,  SUM(GVTF.WREQS_MIDDLE_BUCKETS_VALUE) WREQS_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.WREQS_LAST_BUCKET_VALUE) WREQS_LAST_BUCKET_VALUE,	SUM(GVTF.RBYTES_FIRST_BUCKET_VALUE) RBYTES_FIRST_BUCKET_VALUE,	SUM(GVTF.RBYTES_MIDDLE_BUCKETS_VALUE) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.RBYTES_LAST_BUCKET_VALUE) RBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.WBYTES_FIRST_BUCKET_VALUE) WBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.WBYTES_MIDDLE_BUCKETS_VALUE) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.WBYTES_LAST_BUCKET_VALUE) WBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.IBYTES_FIRST_BUCKET_VALUE) IBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.IBYTES_MIDDLE_BUCKETS_VALUE) IBYTES_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.IBYTES_LAST_BUCKET_VALUE) IBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.CRBYTES_FIRST_BUCKET_VALUE) CRBYTES_FIRST_BUCKET_VALUE,	SUM(GVTF.CRBYTES_MIDDLE_BUCKETS_VALUE) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.CRBYTES_LAST_BUCKET_VALUE) CRBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.PGA_ALLOC_FIRST_BUCKET_VALUE) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(GVTF.PGA_ALLOC_MIDDLE_BUCKETS_VALUE) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.PGA_ALLOC_LAST_BUCKET_VALUE) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(GVTF.TMP_ALLOC_FIRST_BUCKET_VALUE) TMP_ALLOC_FIRST_BUCKET_VALUE,	SUM(GVTF.TMP_ALLOC_MIDDLE_BUCKETS_VALUE) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TMP_ALLOC_LAST_BUCKET_VALUE) TMP_ALLOC_LAST_BUCKET_VALUE FROM TABLE(SYS.GV$(CURSOR( SELECT INST_ID,	GROUP_TYPE,  BUCKET_START,  TM_BUCKET_START,  TM_BUCKET_END,  BUCKET_END,  TM_GROUP_TYPE,  SUM(TM_DELTA_CPU_TIME * TM_FIRST_BUCKET_RATIO) TM_CPU_FIRST_BUCKET_VALUE,  SUM(TM_DELTA_CPU_TIME * TM_MIDDLE_BUCKETS_RATIO) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(TM_DELTA_CPU_TIME * TM_LAST_BUCKET_RATIO) TM_CPU_LAST_BUCKET_VALUE,  SUM(TM_DELTA_DB_TIME * TM_FIRST_BUCKET_RATIO) TM_DB_FIRST_BUCKET_VALUE,  SUM(TM_DELTA_DB_TIME * TM_MIDDLE_BUCKETS_RATIO) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(TM_DELTA_DB_TIME * TM_LAST_BUCKET_RATIO) TM_DB_LAST_BUCKET_VALUE,  SUM(DELTA_READ_REQUESTS * FIRST_BUCKET_RATIO) RREQS_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_REQUESTS * MIDDLE_BUCKETS_RATIO) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_REQUESTS * LAST_BUCKET_RATIO) RREQS_LAST_BUCKET_VALUE,	SUM(DELTA_WRITE_REQUESTS * FIRST_BUCKET_RATIO) WREQS_FIRST_BUCKET_VALUE,  SUM(DELTA_WRITE_REQUESTS * MIDDLE_BUCKETS_RATIO) WREQS_MIDDLE_BUCKETS_VALUE,	SUM(DELTA_WRITE_REQUESTS * LAST_BUCKET_RATIO) WREQS_LAST_BUCKET_VALUE,	SUM(DELTA_READ_BYTES * FIRST_BUCKET_RATIO) RBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_BYTES * MIDDLE_BUCKETS_RATIO) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_BYTES * LAST_BUCKET_RATIO) RBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_WRITE_BYTES * FIRST_BUCKET_RATIO) WBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_WRITE_BYTES * MIDDLE_BUCKETS_RATIO) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_WRITE_BYTES * LAST_BUCKET_RATIO) WBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * FIRST_BUCKET_RATIO) IBYTES_FIRST_BUCKET_VALUE,	SUM(DELTA_INTERCONNECT_BYTES * MIDDLE_BUCKETS_RATIO) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * LAST_BUCKET_RATIO) IBYTES_LAST_BUCKET_VALUE,	SUM(DELTA_READ_MEM_BYTES * FIRST_BUCKET_RATIO) CRBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_MEM_BYTES * MIDDLE_BUCKETS_RATIO) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_MEM_BYTES * LAST_BUCKET_RATIO) CRBYTES_LAST_BUCKET_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * FIRST_BUCKET_RATIO) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * MIDDLE_BUCKETS_RATIO) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * LAST_BUCKET_RATIO) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * FIRST_BUCKET_RATIO) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * MIDDLE_BUCKETS_RATIO) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * LAST_BUCKET_RATIO) TMP_ALLOC_LAST_BUCKET_VALUE FROM ( SELECT USERENV('INSTANCE') INST_ID,  ROW_ID,  SID,	SAMPLE_TIME,  CASE WHEN BUCKET_END IS NULL OR BUCKET_START IS NULL THEN NULL WHEN BUCKET_START = TM_BUCKET_START AND BUCKET_START = BUCKET_END THEN 'CO' WHEN BUCKET_START = TM_BUCKET_START THEN 'CM' WHEN BUCKET_START = BUCKET_END THEN 'SO' ELSE 'SM' END GROUP_TYPE,  CASE WHEN TM_BUCKET_START IS NULL OR BUCKET_END IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL WHEN TM_BUCKET_START = BUCKET_END THEN 'O' ELSE 'M' END TM_GROUP_TYPE,  START_SEG,  BUCKET_START,  BUCKET_START_OFFSET,  TM_START_SEG,  CASE WHEN TM_BUCKET_START IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL ELSE TM_BUCKET_START END TM_BUCKET_START,  CASE WHEN TM_BUCKET_START IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL ELSE BUCKET_END END TM_BUCKET_END,	TM_BUCKET_START_OFFSET,  LENGTH_SEG,  TM_LENGTH_SEG,  END_SEG,	BUCKET_END,  BUCKET_END_OFFSET,  CASE WHEN BUCKET_START != BUCKET_END THEN (:B9 - BUCKET_START_OFFSET) / LENGTH_SEG ELSE 1 END FIRST_BUCKET_RATIO,  CASE WHEN BUCKET_END &gt;= BUCKET_START + 2 THEN :B9 / LENGTH_SEG ELSE NULL END MIDDLE_BUCKETS_RATIO,  CASE WHEN BUCKET_START != BUCKET_END THEN BUCKET_END_OFFSET / LENGTH_SEG ELSE NULL END LAST_BUCKET_RATIO,  CASE WHEN TM_BUCKET_START != BUCKET_END THEN (:B9 - TM_BUCKET_START_OFFSET) / TM_LENGTH_SEG ELSE 1 END TM_FIRST_BUCKET_RATIO,  CASE WHEN BUCKET_END &gt;= TM_BUCKE
T_START + 2 THEN :B9 / TM_LENGTH_SEG ELSE NULL END TM_MIDDLE_BUCKETS_RATIO,  CASE WHEN TM_BUCKET_START != BUCKET_END THEN BUCKET_END_OFFSET / TM_LENGTH_SEG ELSE NULL END TM_LAST_BUCKET_RATIO,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,	DELTA_READ_IO_REQUESTS DELTA_READ_REQUESTS,  DELTA_WRITE_IO_REQUESTS DELTA_WRITE_REQUESTS,  DELTA_READ_IO_BYTES DELTA_READ_BYTES,  DELTA_WRITE_IO_BYTES DELTA_WRITE_BYTES,  DELTA_INTERCONNECT_IO_BYTES DELTA_INTERCONNECT_BYTES,  DELTA_READ_MEM_BYTES DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,	SAMPLE_TIME,  START_SEG,  TRUNC(START_SEG / :B9 ) BUCKET_START,  MOD(START_SEG,  :B9 ) BUCKET_START_OFFSET,  TM_START_SEG,  TRUNC(TM_START_SEG/:B9 ) TM_BUCKET_START,  MOD(TM_START_SEG,  :B9 ) TM_BUCKET_START_OFFSET,  TRUNC(END_SEG/:B9 ) BUCKET_END,  MOD(END_SEG,	:B9 ) BUCKET_END_OFFSET,  END_SEG,  LENGTH_SEG,  TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,	DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,	DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,	SID,  SAMPLE_TIME,  TIME_INTERVAL,  CASE WHEN START_SEG &lt; 0 THEN 0 ELSE START_SEG END START_SEG,  CASE WHEN TM_START_SEG &lt; 0 THEN 0 ELSE TM_START_SEG END TM_START_SEG,  CASE WHEN END_SEG &gt; TIME_INTERVAL THEN TIME_INTERVAL ELSE END_SEG END END_SEG,  (LENGTH_SEG - (CASE WHEN START_SEG &lt; 0 THEN -START_SEG ELSE 0 END + CASE WHEN END_SEG &gt; TIME_INTERVAL THEN END_SEG - TIME_INTERVAL ELSE 0 END)) LENGTH_SEG,  (TM_LENGTH_SEG - (CASE WHEN TM_START_SEG &lt; 0 THEN -TM_START_SEG ELSE 0 END + CASE WHEN END_SEG &gt; TIME_INTERVAL THEN END_SEG - TIME_INTERVAL ELSE 0 END)) TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,	TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,	PGA_ALLOCATED,	TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,  TIME_INTERVAL,  LENGTH_SEG,  TM_LENGTH_SEG,  END_SEG - TM_LENGTH_SEG TM_START_SEG,  END_SEG - LENGTH_SEG START_SEG,  END_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,	DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,  EXTRACT(SECOND FROM REL_SAMPLE_TIME_INT) + EXTRACT(MINUTE FROM REL_SAMPLE_TIME_INT)*60 + EXTRACT(HOUR FROM REL_SAMPLE_TIME_INT)*3600 + EXTRACT(DAY FROM REL_SAMPLE_TIME_INT)*3600*24 END_SEG,	TIME_INTERVAL,	DELTA_TIME/1000000 LENGTH_SEG,	TM_DELTA_TIME/1000000 TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,	DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROWNUM ROW_ID,  SESSION_ID SID,  CAST(FROM_TZ(SAMPLE_TIME,	DBTIMEZONE) AS DATE) SAMPLE_DATE,  SAMPLE_TIME,  (SAMPLE_TIME - CAST(:B8 AS TIMESTAMP)) REL_SAMPLE_TIME_INT,  TRUNC((:B7 - :B8 ) * 3600 * 24) TIME_INTERVAL,  :B8 AS BND_START_INTERVAL ,  :B7 AS BND_END_INTERVAL ,  TM_DELTA_TIME,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,	DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ASH0.* FROM V$ACTIVE_SESSION_HISTORY ASH0 WHERE SAMPLE_TIME BETWEEN :B6 AND :B5 AND ( (SESSION_ID = :B2 AND SESSION_SERIAL# = :B1 AND USERENV('INSTANCE') = :B3 ) OR (:B4 = 'yes' AND QC_INSTANCE_ID = :B3 AND QC_SESSION_ID = :B2 AND QC_SESSION_SERIAL# = :B1 ))) ) ASH1 WHERE SAMPLE_DATE &gt;= BND_START_INTERVAL AND SAMPLE_DATE &lt;= BND_END_INTERVAL + 120/3600/24 ) ) WHERE START_SEG &lt;= TIME_INTERVAL ) WHERE (LENGTH_SEG IS NOT NULL AND LENGTH_SEG &gt; 0) OR (TM_LENGTH_SEG IS NOT NULL AND TM_LENGTH_SEG &gt; 0)) ) GROUP BY INST_ID,  GROUP_TYPE,  BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END))) GVTF WHERE INST_ID &gt;= :B11 AND INST_ID &lt;= :B10 GROUP BY GROUP_TYPE,	BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END ) GROUP BY GROUPING SETS ( (GROUP_TYPE,  BUCKET_START,  BUCKET_END),  (TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END) )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="b0n14dkbkdpbb"></a>b0n14dkbkdpbb</td><td class='awrnc'><pre_sqltext class="awr">select snap_interval,  snapint_num,  retention,	retention_num,	most_recent_snap_id,  most_recent_snap_time,  mrct_snap_time_num,  status_flag,  most_recent_purge_time,  mrct_purge_time_num,	most_recent_split_id,  most_recent_split_time,	swrf_version,  registration_status,  mrct_baseline_id,	topnsql,  mrct_bltmpl_id,  src_dbid,  src_dbname,  t2s_dblink,	flush_type,  snap_align,  mrct_snap_step_tm,  mrct_snap_step_id,  tablespace_name from wrm$_wr_control where dbid = :dbid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bjck50zs3nc95"></a>bjck50zs3nc95</td><td class='awrnc'><pre_sqltext class="awr">insert into  WRH$_SYSSTAT  (dbid,  per_pdb,  con_dbid,  snap_id,  instance_number,  stat_id,  value)  select /*+ use_hash(v$sysstat) */	:dbid,	0 per_pdb,   :srcdbid  con_dbid,   :snap_id,  :instance_number,  stat_id,  value FROM	v$sysstat    sysstat  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="c9059z5ksrf1x"></a>c9059z5ksrf1x</td><td class='awrc'><pre_sqltext class="awr">insert into  wrh$_latch  (dbid,  per_pdb,	con_dbid,  snap_id,  instance_number,  latch_hash,  level#,  gets,  misses,	sleeps,  immediate_gets,  immediate_misses,  spin_gets,  sleep1,     sleep2,  sleep3,  sleep4,	wait_time)  select  :dbid,  0 per_pdb,	 :srcdbid  con_dbid,   :snap_id,  :instance_number,   hash,  level#,  gets,	misses,  sleeps,  immediate_gets,  immediate_misses,  spin_gets,     sleep1,  sleep2,  sleep3,	sleep4,  wait_time FROM   v$latch    ltch  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="dcbt0gjzjwwbs"></a>dcbt0gjzjwwbs</td><td class='awrnc'><pre_sqltext class="awr">insert into  wrh$_sga_target_advice  (dbid,  per_pdb,  con_dbid,  snap_id,  instance_number,	SGA_SIZE,  SGA_SIZE_FACTOR,  ESTD_DB_TIME,  ESTD_PHYSICAL_READS)  select  :dbid,  0 per_pdb,   :srcdbid  con_dbid,   :snap_id,	:instance_number,     SGA_SIZE,  SGA_SIZE_FACTOR,  ESTD_DB_TIME,  ESTD_PHYSICAL_READS  FROM   v$sga_target_advice    ta  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="drktaf71uygnb"></a>drktaf71uygnb</td><td class='awrc'><pre_sqltext class="awr">BEGIN
	  sys.prvt_hdm.auto_execute(
	    db_id =&gt; :bind_dbid,
	    inst_id =&gt; :bind_inst,
	    end_snap =&gt; :bind_snap,
	    time_left_in_secs =&gt; :bind_time);
	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrnc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		       equality_preds	 = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds    + decode(bitand(:flag, 2), 0, 0, 1),    nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),	 range_preds	   = range_preds       + decode(bitand(:flag, 8), 0, 0, 1),    like_preds	 = like_preds	     + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	= null_preds	    + decode(bitand(:flag, 32), 0, 0, 1),    flags	       = flags + :flag - bitand(flags, :flag),	   timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)    values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fhf8upax5cxsz"></a>fhf8upax5cxsz</td><td class='awrnc'><pre_sqltext class="awr">BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref,  :snap_id,	:pr_class,						 :rep_id,  :suc); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fkc81h2686aqc"></a>fkc81h2686aqc</td><td class='awrc'><pre_sqltext class="awr">select pob.parttype from sys.indpart$ ip,	sys.partobj$ pob  where ip.bo# = pob.obj# and ip.obj# = :oid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fs4p95w7yg25b"></a>fs4p95w7yg25b</td><td class='awrnc'><pre_sqltext class="awr">select pob.parttype from sys.tabpart$ tp,  sys.partobj$ pob  where tp.bo# = pob.obj# and tp.obj# = :oid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gjaap3w3qbf8c"></a>gjaap3w3qbf8c</td><td class='awrc'><pre_sqltext class="awr">select count(*) from ilmobj$ where rownum = 1</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="23"></a>
<h2 class="awr">
Instance Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1200">Key Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1250">Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1300">Instance Activity Stats - Absolute Values</a></li>
<li class="awr"><a class="awr" href="#1400">Instance Activity Stats - Thread Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1200"></a>
<h3 class="awr">Key Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Key Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>993,133</td><td align="right" class='awrc'>1,648.65</td><td align="right" class='awrc'>131.98</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>52,125</td><td align="right" class='awrnc'>86.53</td><td align="right" class='awrnc'>6.93</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>2,640</td><td align="right" class='awrc'>4.38</td><td align="right" class='awrc'>0.35</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>11,443</td><td align="right" class='awrnc'>19.00</td><td align="right" class='awrnc'>1.52</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>5,009</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>0.67</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>54,999</td><td align="right" class='awrnc'>91.30</td><td align="right" class='awrnc'>7.31</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>59,419</td><td align="right" class='awrnc'>98.64</td><td align="right" class='awrnc'>7.90</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>1,302</td><td align="right" class='awrc'>2.16</td><td align="right" class='awrc'>0.17</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>2,206,194</td><td align="right" class='awrc'>3,662.40</td><td align="right" class='awrc'>293.18</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>354,758</td><td align="right" class='awrnc'>588.92</td><td align="right" class='awrnc'>47.14</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>400,508,720</td><td align="right" class='awrc'>664,865.05</td><td align="right" class='awrc'>53,223.75</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>58,791</td><td align="right" class='awrnc'>97.60</td><td align="right" class='awrnc'>7.81</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>3,389,562</td><td align="right" class='awrc'>5,626.85</td><td align="right" class='awrc'>450.44</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>173</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>7,525</td><td align="right" class='awrc'>12.49</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>304</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>0.04</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1250"></a>
<h3 class="awr">Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>479</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>150</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>373</td><td align="right" class='awrnc'>0.62</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>331</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>0.41</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>85</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>315</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>1,861,089</td><td align="right" class='awrnc'>3,089.50</td><td align="right" class='awrnc'>247.32</td></tr>
<tr><td scope="row" class='awrc'>Batched IO double miss count</td><td align="right" class='awrc'>40,398</td><td align="right" class='awrc'>67.06</td><td align="right" class='awrc'>5.37</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO same unit count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO single block count</td><td align="right" class='awrc'>354</td><td align="right" class='awrc'>0.59</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>1,860,800</td><td align="right" class='awrnc'>3,089.02</td><td align="right" class='awrnc'>247.28</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>39,872</td><td align="right" class='awrc'>66.19</td><td align="right" class='awrc'>5.30</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>31,215</td><td align="right" class='awrnc'>51.82</td><td align="right" class='awrnc'>4.15</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>25,724</td><td align="right" class='awrc'>42.70</td><td align="right" class='awrc'>3.42</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>1,229,605</td><td align="right" class='awrc'>2,041.21</td><td align="right" class='awrc'>163.40</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>2,900</td><td align="right" class='awrnc'>4.81</td><td align="right" class='awrnc'>0.39</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>2,461</td><td align="right" class='awrc'>4.09</td><td align="right" class='awrc'>0.33</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>2,242</td><td align="right" class='awrnc'>3.72</td><td align="right" class='awrnc'>0.30</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>31,637</td><td align="right" class='awrc'>52.52</td><td align="right" class='awrc'>4.20</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>12,206</td><td align="right" class='awrnc'>20.26</td><td align="right" class='awrnc'>1.62</td></tr>
<tr><td scope="row" class='awrc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Commit SCN cached</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoint buffers written</td><td align="right" class='awrc'>66,593</td><td align="right" class='awrc'>110.55</td><td align="right" class='awrc'>8.85</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoints</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>DBWR fusion writes</td><td align="right" class='awrc'>136</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>DBWR object drop buffers written</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR parallel query checkpoint buffers written</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR thread checkpoint buffers written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR transaction table writes</td><td align="right" class='awrc'>266</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>DBWR undo block writes</td><td align="right" class='awrnc'>19,161</td><td align="right" class='awrnc'>31.81</td><td align="right" class='awrnc'>2.55</td></tr>
<tr><td scope="row" class='awrc'>DFO trees parallelized</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Effective IO time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>472,961</td><td align="right" class='awrc'>785.14</td><td align="right" class='awrc'>62.85</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Heatmap Blklevel Flush Task Count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc req</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc space (block)</td><td align="right" class='awrnc'>15,794,176</td><td align="right" class='awrnc'>26,219.14</td><td align="right" class='awrnc'>2,098.89</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc time (ms)</td><td align="right" class='awrc'>16,346</td><td align="right" class='awrc'>27.14</td><td align="right" class='awrc'>2.17</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply req</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply time (ms)</td><td align="right" class='awrc'>3,376</td><td align="right" class='awrc'>5.60</td><td align="right" class='awrc'>0.45</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free req</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>KTFB free space (block)</td><td align="right" class='awrc'>1,144</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free time (ms)</td><td align="right" class='awrnc'>181</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>LOB table id lookup cache misses</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for instance recovery</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SMON posted for undo segment shrink</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>TBS Extension: tasks created</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TBS Extension: tasks executed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>active txn count during cleanout</td><td align="right" class='awrc'>233</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>auto extends on undo tablespace</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background checkpoints completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background checkpoints started</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background timeouts</td><td align="right" class='awrc'>5,354</td><td align="right" class='awrc'>8.89</td><td align="right" class='awrc'>0.71</td></tr>
<tr><td scope="row" class='awrnc'>blocks cleaned out using minact</td><td align="right" class='awrnc'>311,792</td><td align="right" class='awrnc'>517.59</td><td align="right" class='awrnc'>41.43</td></tr>
<tr><td scope="row" class='awrc'>branch node splits</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>buffer is not pinned count</td><td align="right" class='awrnc'>6,493,370</td><td align="right" class='awrnc'>10,779.33</td><td align="right" class='awrnc'>862.91</td></tr>
<tr><td scope="row" class='awrc'>buffer is pinned count</td><td align="right" class='awrc'>3,106,219</td><td align="right" class='awrc'>5,156.48</td><td align="right" class='awrc'>412.79</td></tr>
<tr><td scope="row" class='awrnc'>bytes received via SQL*Net from client</td><td align="right" class='awrnc'>379,616</td><td align="right" class='awrnc'>630.18</td><td align="right" class='awrnc'>50.45</td></tr>
<tr><td scope="row" class='awrc'>bytes sent via SQL*Net to client</td><td align="right" class='awrc'>21,626</td><td align="right" class='awrc'>35.90</td><td align="right" class='awrc'>2.87</td></tr>
<tr><td scope="row" class='awrnc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrnc'>62,818</td><td align="right" class='awrnc'>104.28</td><td align="right" class='awrnc'>8.35</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgas</td><td align="right" class='awrc'>17,184</td><td align="right" class='awrc'>28.53</td><td align="right" class='awrc'>2.28</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgcs</td><td align="right" class='awrnc'>2,687</td><td align="right" class='awrnc'>4.46</td><td align="right" class='awrnc'>0.36</td></tr>
<tr><td scope="row" class='awrc'>cell physical IO interconnect bytes</td><td align="right" class='awrc'>25,619,271,680</td><td align="right" class='awrc'>42,529,306.85</td><td align="right" class='awrc'>3,404,554.38</td></tr>
<tr><td scope="row" class='awrnc'>change write time</td><td align="right" class='awrnc'>618</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>cleanout - number of ktugct calls</td><td align="right" class='awrc'>234</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cleanouts only - consistent read gets</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scan block gets</td><td align="right" class='awrnc'>268</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>cluster key scans</td><td align="right" class='awrc'>181</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate performed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: block lost</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: buffer being written</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: callback failure</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: cannot pin</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>472,672</td><td align="right" class='awrnc'>784.66</td><td align="right" class='awrnc'>62.81</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>472,644</td><td align="right" class='awrc'>784.61</td><td align="right" class='awrc'>62.81</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>112</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>consistent changes</td><td align="right" class='awrc'>1,510</td><td align="right" class='awrc'>2.51</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets</td><td align="right" class='awrnc'>2,843,005</td><td align="right" class='awrnc'>4,719.53</td><td align="right" class='awrnc'>377.81</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination</td><td align="right" class='awrc'>103,145</td><td align="right" class='awrc'>171.23</td><td align="right" class='awrc'>13.71</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination (fastpath)</td><td align="right" class='awrnc'>102,923</td><td align="right" class='awrnc'>170.86</td><td align="right" class='awrnc'>13.68</td></tr>
<tr><td scope="row" class='awrc'>consistent gets from cache</td><td align="right" class='awrc'>2,843,005</td><td align="right" class='awrc'>4,719.53</td><td align="right" class='awrc'>377.81</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin</td><td align="right" class='awrnc'>2,739,860</td><td align="right" class='awrnc'>4,548.31</td><td align="right" class='awrnc'>364.10</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin (fastpath)</td><td align="right" class='awrc'>2,627,406</td><td align="right" class='awrc'>4,361.63</td><td align="right" class='awrc'>349.16</td></tr>
<tr><td scope="row" class='awrnc'>cursor authentications</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cursor reload failures</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>993,133</td><td align="right" class='awrc'>1,648.65</td><td align="right" class='awrc'>131.98</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>546,557</td><td align="right" class='awrnc'>907.31</td><td align="right" class='awrnc'>72.63</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>546,514</td><td align="right" class='awrnc'>907.24</td><td align="right" class='awrnc'>72.63</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>80,749</td><td align="right" class='awrc'>134.05</td><td align="right" class='awrc'>10.73</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>315,799</td><td align="right" class='awrnc'>524.24</td><td align="right" class='awrnc'>41.97</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>244,925</td><td align="right" class='awrc'>406.59</td><td align="right" class='awrc'>32.55</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>574</td><td align="right" class='awrnc'>0.95</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>24,708</td><td align="right" class='awrc'>41.02</td><td align="right" class='awrc'>3.28</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>24,714</td><td align="right" class='awrnc'>41.03</td><td align="right" class='awrnc'>3.28</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>230</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>52,125</td><td align="right" class='awrnc'>86.53</td><td align="right" class='awrnc'>6.93</td></tr>
<tr><td scope="row" class='awrc'>fastpath consistent get quota limit</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>file io service time</td><td align="right" class='awrnc'>40,111,756</td><td align="right" class='awrnc'>66,587.58</td><td align="right" class='awrnc'>5,330.47</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>2,348,587</td><td align="right" class='awrc'>3,898.78</td><td align="right" class='awrc'>312.10</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>2,292,957</td><td align="right" class='awrnc'>3,806.43</td><td align="right" class='awrnc'>304.71</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>1,626</td><td align="right" class='awrc'>2.70</td><td align="right" class='awrc'>0.22</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>71</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>3,178</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>0.42</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>2,640</td><td align="right" class='awrnc'>4.38</td><td align="right" class='awrnc'>0.35</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>76</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>11,443</td><td align="right" class='awrc'>19.00</td><td align="right" class='awrc'>1.52</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>1,446</td><td align="right" class='awrnc'>2.40</td><td align="right" class='awrnc'>0.19</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grant time</td><td align="right" class='awrc'>150,935</td><td align="right" class='awrc'>250.56</td><td align="right" class='awrc'>20.06</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grants received</td><td align="right" class='awrnc'>1,810,189</td><td align="right" class='awrnc'>3,005.01</td><td align="right" class='awrnc'>240.56</td></tr>
<tr><td scope="row" class='awrc'>gc current block flush time</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block pin time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>5,009</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>0.67</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>54,999</td><td align="right" class='awrnc'>91.30</td><td align="right" class='awrnc'>7.31</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>253</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read current</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>9,164</td><td align="right" class='awrnc'>15.21</td><td align="right" class='awrnc'>1.22</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>4,428</td><td align="right" class='awrc'>7.35</td><td align="right" class='awrc'>0.59</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>822,416</td><td align="right" class='awrnc'>1,365.25</td><td align="right" class='awrnc'>109.29</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi bg</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read time waited</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read wait timeouts</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass grants</td><td align="right" class='awrc'>572</td><td align="right" class='awrc'>0.95</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass waits</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc remote grants</td><td align="right" class='awrc'>1,504,554</td><td align="right" class='awrc'>2,497.64</td><td align="right" class='awrc'>199.94</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages received</td><td align="right" class='awrnc'>297,437</td><td align="right" class='awrnc'>493.76</td><td align="right" class='awrnc'>39.53</td></tr>
<tr><td scope="row" class='awrc'>gc status messages sent</td><td align="right" class='awrc'>190</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock failures</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>20,051</td><td align="right" class='awrc'>33.29</td><td align="right" class='awrc'>2.66</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access records</td><td align="right" class='awrc'>2,302,675</td><td align="right" class='awrc'>3,822.56</td><td align="right" class='awrc'>306.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs messages sent</td><td align="right" class='awrnc'>3,160,148</td><td align="right" class='awrnc'>5,246.01</td><td align="right" class='awrnc'>419.95</td></tr>
<tr><td scope="row" class='awrc'>gcs stats management (SCM) process posts</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>273,542</td><td align="right" class='awrnc'>454.09</td><td align="right" class='awrnc'>36.35</td></tr>
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>77</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets async</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global enqueue gets sync</td><td align="right" class='awrc'>19,165</td><td align="right" class='awrc'>31.81</td><td align="right" class='awrc'>2.55</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue releases</td><td align="right" class='awrnc'>18,444</td><td align="right" class='awrnc'>30.62</td><td align="right" class='awrnc'>2.45</td></tr>
<tr><td scope="row" class='awrc'>global undo segment hints helped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>535,525</td><td align="right" class='awrc'>889.00</td><td align="right" class='awrc'>71.17</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>218</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>index crx state invalidation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>1,475</td><td align="right" class='awrc'>2.45</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>50,510</td><td align="right" class='awrnc'>83.85</td><td align="right" class='awrnc'>6.71</td></tr>
<tr><td scope="row" class='awrc'>leaf node 90-10 splits</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>leaf node splits</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>lob reads</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>lob writes</td><td align="right" class='awrnc'>1,264</td><td align="right" class='awrnc'>2.10</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>lob writes unaligned</td><td align="right" class='awrc'>1,264</td><td align="right" class='awrc'>2.10</td><td align="right" class='awrc'>0.17</td></tr>
<tr><td scope="row" class='awrnc'>logical read bytes from cache</td><td align="right" class='awrnc'>27,766,939,648</td><td align="right" class='awrnc'>46,094,545.98</td><td align="right" class='awrnc'>3,689,958.76</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>max cf enq hold time</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>messages received</td><td align="right" class='awrc'>38,108</td><td align="right" class='awrc'>63.26</td><td align="right" class='awrc'>5.06</td></tr>
<tr><td scope="row" class='awrnc'>messages sent</td><td align="right" class='awrnc'>38,108</td><td align="right" class='awrnc'>63.26</td><td align="right" class='awrnc'>5.06</td></tr>
<tr><td scope="row" class='awrc'>min active SCN optimization applied on CR</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>2,735,198</td><td align="right" class='awrnc'>4,540.57</td><td align="right" class='awrnc'>363.48</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>1,320,406</td><td align="right" class='awrc'>2,191.94</td><td align="right" class='awrc'>175.47</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>59,419</td><td align="right" class='awrnc'>98.64</td><td align="right" class='awrnc'>7.90</td></tr>
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (failures)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>1,302</td><td align="right" class='awrnc'>2.16</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>2,206,159</td><td align="right" class='awrc'>3,662.34</td><td align="right" class='awrc'>293.18</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>18,073,141,248</td><td align="right" class='awrnc'>30,002,342.74</td><td align="right" class='awrnc'>2,401,746.35</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>2,208,728</td><td align="right" class='awrc'>3,666.60</td><td align="right" class='awrc'>293.52</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>18,115,706,880</td><td align="right" class='awrnc'>30,073,003.88</td><td align="right" class='awrnc'>2,407,402.91</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>2,206,194</td><td align="right" class='awrnc'>3,662.40</td><td align="right" class='awrnc'>293.18</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>2,206,194</td><td align="right" class='awrc'>3,662.40</td><td align="right" class='awrc'>293.18</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>1,771,261</td><td align="right" class='awrnc'>2,940.38</td><td align="right" class='awrnc'>235.38</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads prefetch warmup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>303,110</td><td align="right" class='awrc'>503.18</td><td align="right" class='awrc'>40.28</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>2,906,177,536</td><td align="right" class='awrnc'>4,824,403.98</td><td align="right" class='awrnc'>386,202.99</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>322,518</td><td align="right" class='awrc'>535.40</td><td align="right" class='awrc'>42.86</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>3,747,194,880</td><td align="right" class='awrnc'>6,220,535.96</td><td align="right" class='awrnc'>497,966.10</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>1,126</td><td align="right" class='awrc'>1.87</td><td align="right" class='awrc'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>354,758</td><td align="right" class='awrnc'>588.92</td><td align="right" class='awrnc'>47.14</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>354,709</td><td align="right" class='awrnc'>588.84</td><td align="right" class='awrnc'>47.14</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>351,649</td><td align="right" class='awrc'>583.76</td><td align="right" class='awrc'>46.73</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>438</td><td align="right" class='awrnc'>0.73</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>prefetch warmup blocks aged out before use</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>prefetched blocks aged out before use</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>recursive calls</td><td align="right" class='awrnc'>75,082</td><td align="right" class='awrnc'>124.64</td><td align="right" class='awrnc'>9.98</td></tr>
<tr><td scope="row" class='awrc'>recursive cpu usage</td><td align="right" class='awrc'>24,998</td><td align="right" class='awrc'>41.50</td><td align="right" class='awrc'>3.32</td></tr>
<tr><td scope="row" class='awrnc'>redo KB read</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrc'>312,506</td><td align="right" class='awrc'>518.78</td><td align="right" class='awrc'>41.53</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written</td><td align="right" class='awrnc'>812,346</td><td align="right" class='awrnc'>1,348.54</td><td align="right" class='awrnc'>107.95</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 0)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 1)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo buffer allocation retries</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>514,925</td><td align="right" class='awrnc'>854.80</td><td align="right" class='awrnc'>68.43</td></tr>
<tr><td scope="row" class='awrc'>redo log space requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo size</td><td align="right" class='awrnc'>400,508,720</td><td align="right" class='awrnc'>664,865.05</td><td align="right" class='awrnc'>53,223.75</td></tr>
<tr><td scope="row" class='awrc'>redo size for direct writes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo subscn max counts</td><td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo synch time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time (usec)</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead (usec)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch writes</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo wastage</td><td align="right" class='awrnc'>2,238,244</td><td align="right" class='awrnc'>3,715.60</td><td align="right" class='awrnc'>297.44</td></tr>
<tr><td scope="row" class='awrc'>redo write active strands</td><td align="right" class='awrc'>9,383</td><td align="right" class='awrc'>15.58</td><td align="right" class='awrc'>1.25</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write finish time</td><td align="right" class='awrnc'>58,101,079</td><td align="right" class='awrnc'>96,450.78</td><td align="right" class='awrnc'>7,721.07</td></tr>
<tr><td scope="row" class='awrc'>redo write gather time</td><td align="right" class='awrc'>712,150</td><td align="right" class='awrc'>1,182.21</td><td align="right" class='awrc'>94.64</td></tr>
<tr><td scope="row" class='awrnc'>redo write info find</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write info find fail</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>814,555</td><td align="right" class='awrnc'>1,352.20</td><td align="right" class='awrnc'>108.25</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>233</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>455</td><td align="right" class='awrc'>0.76</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>722</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>6,074</td><td align="right" class='awrc'>10.08</td><td align="right" class='awrc'>0.81</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>5,815</td><td align="right" class='awrc'>9.65</td><td align="right" class='awrc'>0.77</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>58,150,297</td><td align="right" class='awrnc'>96,532.48</td><td align="right" class='awrnc'>7,727.61</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>58,380,232</td><td align="right" class='awrc'>96,914.18</td><td align="right" class='awrc'>7,758.17</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>7,699</td><td align="right" class='awrnc'>12.78</td><td align="right" class='awrnc'>1.02</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>7,699</td><td align="right" class='awrc'>12.78</td><td align="right" class='awrc'>1.02</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>remote Oradebug requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rollback changes - undo records applied</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rollbacks only - consistent read gets</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rows fetched via callback</td><td align="right" class='awrnc'>654</td><td align="right" class='awrnc'>1.09</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation bytes</td><td align="right" class='awrc'>49,152</td><td align="right" class='awrc'>81.59</td><td align="right" class='awrc'>6.53</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation chunks</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile bytes non-transformed</td><td align="right" class='awrc'>35,947</td><td align="right" class='awrc'>59.67</td><td align="right" class='awrc'>4.78</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read bytes</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read ops</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write bytes</td><td align="right" class='awrnc'>49,152</td><td align="right" class='awrnc'>81.59</td><td align="right" class='awrnc'>6.53</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write ops</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile number of non-transformed flushes</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment cfs allocations</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment chunks allocation from dispenser</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser allocations</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser load empty</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser load tasks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc bytes</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>156</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>segment total chunk allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>58,791</td><td align="right" class='awrc'>97.60</td><td align="right" class='awrc'>7.81</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>3,389,562</td><td align="right" class='awrnc'>5,626.85</td><td align="right" class='awrnc'>450.44</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>424,296</td><td align="right" class='awrc'>704.35</td><td align="right" class='awrc'>56.38</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>290</td><td align="right" class='awrnc'>0.48</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>44,903</td><td align="right" class='awrc'>74.54</td><td align="right" class='awrc'>5.97</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>1,430,130</td><td align="right" class='awrnc'>2,374.09</td><td align="right" class='awrnc'>190.05</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>4,536,700</td><td align="right" class='awrc'>7,531.16</td><td align="right" class='awrc'>602.88</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>2,379</td><td align="right" class='awrc'>3.95</td><td align="right" class='awrc'>0.32</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>96,571</td><td align="right" class='awrnc'>160.31</td><td align="right" class='awrnc'>12.83</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>96,571</td><td align="right" class='awrc'>160.31</td><td align="right" class='awrc'>12.83</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>290</td><td align="right" class='awrnc'>0.48</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>temp space allocated (bytes)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>total cf enq hold time</td><td align="right" class='awrnc'>427</td><td align="right" class='awrnc'>0.71</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>total number of cf enq holders</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>total number of times SMON posted</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock background get time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction lock background gets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock foreground requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent read rollbacks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>undo change vector size</td><td align="right" class='awrc'>164,630,564</td><td align="right" class='awrc'>273,295.19</td><td align="right" class='awrc'>21,877.82</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>173</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>7,525</td><td align="right" class='awrc'>12.49</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>user logons cumulative</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user logouts cumulative</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>304</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>write clones created in background</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in foreground</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1300"></a>
<h3 class="awr">Instance Activity Stats - Absolute Values</h3>
<ul>
<li class="awr"> Statistics with absolute values (should not be diffed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays absolute values of instance-related features. For each instance, activity begin value and end value are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Begin Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>logons current</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>89</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors current</td><td align="right" class='awrnc'>105</td><td align="right" class='awrnc'>97</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache count</td><td align="right" class='awrc'>7,295</td><td align="right" class='awrc'>7,304</td></tr>
<tr><td scope="row" class='awrnc'>session pga memory</td><td align="right" class='awrnc'>559,756,976</td><td align="right" class='awrnc'>551,470,688</td></tr>
<tr><td scope="row" class='awrc'>session pga memory max</td><td align="right" class='awrc'>715,099,728</td><td align="right" class='awrc'>703,208,960</td></tr>
<tr><td scope="row" class='awrnc'>session uga memory</td><td align="right" class='awrnc'>461,887,136</td><td align="right" class='awrnc'>461,246,608</td></tr>
<tr><td scope="row" class='awrc'>session uga memory max</td><td align="right" class='awrc'>4,838,269,008</td><td align="right" class='awrc'>4,885,401,928</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1400"></a>
<h3 class="awr">Instance Activity Stats - Thread Activity</h3>
<ul>
<li class="awr"> Statistics identified by '(derived)' come from sources other than SYSSTAT</li>
</ul>
<table border="0" class="tdiff" summary="This table displays thread activity stats in the instance. For each activity , total number of activity and activity per hour are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Hour</th></tr>
<tr><td scope="row" class='awrc'>log switches (derived)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="24"></a>
<h2 class="awr">
IO Stats
</h2>
<ul>
<li class="awr"><a class="awr" href="#8760">IOStat by Function summary</a></li>
<li class="awr"><a class="awr" href="#8770">IOStat by Filetype summary</a></li>
<li class="awr"><a class="awr" href="#8780">IOStat by Function/Filetype summary</a></li>
<li class="awr"><a class="awr" href="#1700">Tablespace IO Stats</a></li>
<li class="awr"><a class="awr" href="#1800">File IO Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8760"></a>
<h3 class="awr">IOStat by Function summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the IO Statistics for different functions. IO stats includes amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td scope="row" class='awrc'>Buffer Cache Reads</td><td align="right" class='awrc'>16.8G</td><td align="right" class='awrc'>3659.55</td><td align="right" class='awrc'>28.591M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>434.3K</td><td align="right" class='awrc'>1.92ms</td></tr>
<tr><td scope="row" class='awrnc'>DBWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.7G</td><td align="right" class='awrnc'>503.24</td><td align="right" class='awrnc'>4.602M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>793M</td><td align="right" class='awrc'>31.25</td><td align="right" class='awrc'>1.316M</td><td align="right" class='awrc'>7698</td><td align="right" class='awrc'>7.42ms</td></tr>
<tr><td scope="row" class='awrnc'>Others</td><td align="right" class='awrnc'>41M</td><td align="right" class='awrnc'>4.36</td><td align="right" class='awrnc'>.068M</td><td align="right" class='awrnc'>9M</td><td align="right" class='awrnc'>0.95</td><td align="right" class='awrnc'>.015M</td><td align="right" class='awrnc'>2058</td><td align="right" class='awrnc'>1.30ms</td></tr>
<tr><td scope="row" class='awrc'>Direct Writes</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TOTAL:</td><td align="right" class='awrnc'>16.9G</td><td align="right" class='awrnc'>3663.91</td><td align="right" class='awrnc'>28.659M</td><td align="right" class='awrnc'>3.5G</td><td align="right" class='awrnc'>535.44</td><td align="right" class='awrnc'>5.933M</td><td align="right" class='awrnc'>444K</td><td align="right" class='awrnc'>2.01ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8770"></a>
<h3 class="awr">IOStat by Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Small Read and Large Read are average service times </li>
<li class="awr"> Ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IO Statistics for different file types, such as data files, control files, log files and temp files. IO Statistics include amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Small Read</th><th class="awrbg" scope="col">Large Read</th></tr>
<tr><td scope="row" class='awrc'>Data File</td><td align="right" class='awrc'>16.8G</td><td align="right" class='awrc'>3659.41</td><td align="right" class='awrc'>28.588M</td><td align="right" class='awrc'>2.7G</td><td align="right" class='awrc'>503.22</td><td align="right" class='awrc'>4.602M</td><td align="right" class='awrc'>181.73us</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Log File</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>792M</td><td align="right" class='awrnc'>31.25</td><td align="right" class='awrnc'>1.315M</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Control File</td><td align="right" class='awrc'>41M</td><td align="right" class='awrc'>4.36</td><td align="right" class='awrc'>.068M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>14.85us</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Temp File</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>.00ns</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TOTAL:</td><td align="right" class='awrc'>16.9G</td><td align="right" class='awrc'>3663.80</td><td align="right" class='awrc'>28.656M</td><td align="right" class='awrc'>3.5G</td><td align="right" class='awrc'>535.44</td><td align="right" class='awrc'>5.933M</td><td align="right" class='awrc'>181.53us</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8780"></a>
<h3 class="awr">IOStat by Function/Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Ordered by (Data Read + Write) desc for each function</li>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function/Filetype summary. . 'Data' columns suffixed with M,G,T,P are in multiples of 1024 other columns suffixed with K,M,G,T,P are in multiples of 1000. Ordered by (Data Read + Write) desc for each function"><tr><th class="awrbg" scope="col">Function/File Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs	 per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time	</th></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Data File)
</td><td align="right" class='awrc'>16.8G</td><td align="right" class='awrc'>3659.39</td><td align="right" class='awrc'>28.589M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>394.5K</td><td align="right" class='awrc'>1.45ms</td></tr>
<tr><td scope="row" class='awrnc'>
Buffer Cache Reads
</td><td align="right" class='awrnc'>16.8G</td><td align="right" class='awrnc'>3659.43</td><td align="right" class='awrnc'>28.589M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>394.5K</td><td align="right" class='awrnc'>1.45ms</td></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Temp File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>250.00us</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.7G</td><td align="right" class='awrnc'>503.21</td><td align="right" class='awrnc'>4.602M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
DBWR
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.7G</td><td align="right" class='awrc'>503.24</td><td align="right" class='awrc'>4.602M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 LGWR (Log File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>793M</td><td align="right" class='awrc'>31.25</td><td align="right" class='awrc'>1.316M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
LGWR
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>793M</td><td align="right" class='awrnc'>31.25</td><td align="right" class='awrnc'>1.316M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Control File)
</td><td align="right" class='awrc'>41M</td><td align="right" class='awrc'>4.36</td><td align="right" class='awrc'>.068M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>1778</td><td align="right" class='awrc'>267.19us</td></tr>
<tr><td scope="row" class='awrnc'>
Others
</td><td align="right" class='awrnc'>41M</td><td align="right" class='awrnc'>4.36</td><td align="right" class='awrnc'>.068M</td><td align="right" class='awrnc'>9M</td><td align="right" class='awrnc'>0.95</td><td align="right" class='awrnc'>.015M</td><td align="right" class='awrnc'>1778</td><td align="right" class='awrnc'>267.19us</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Direct Writes (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
Direct Writes
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
TOTAL:
</td><td align="right" class='awrc'>16.9G</td><td align="right" class='awrc'>3663.79</td><td align="right" class='awrc'>28.657M</td><td align="right" class='awrc'>3.5G</td><td align="right" class='awrc'>535.44</td><td align="right" class='awrc'>5.933M</td><td align="right" class='awrc'>396.3K</td><td align="right" class='awrc'>1.44ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1700"></a>
<h3 class="awr">Tablespace IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1800"></a>
<h3 class="awr">File IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="25"></a>
<h2 class="awr">
Buffer Pool Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1900">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#1910">Checkpoint Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1900"></a>
<h3 class="awr">Buffer Pool Statistics</h3>
<ul>
<li class="awr"> Standard block size Pools  D: default,  K: keep,  R: recycle </li>
<li class="awr"> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer pool statistics for different types of buffers, such as default, keep, and recycle. Statistics include number of buffers, % Pool hit, buffer gets, physical reads, physical writes, free buffer wait, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Number of Buffers</th><th class="awrbg" scope="col">Pool Hit%</th><th class="awrbg" scope="col">Buffer Gets</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Free Buff Wait</th><th class="awrbg" scope="col">Writ Comp Wait</th><th class="awrbg" scope="col">Buffer Busy Waits</th></tr>
<tr><td scope="row" class='awrc'>D</td><td align="right" class='awrc'>917,088</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>3,389,444</td><td align="right" class='awrc'>2,206,293</td><td align="right" class='awrc'>354,709</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1910"></a>
<h3 class="awr">Checkpoint Activity</h3>
<ul>
<li class="awr">Total Physical Writes:			    354,758</li>
</ul>
<table border="0" class="tdiff" summary="This table displays checkpoint activity statistics. Statistics include MTTR writes, log size writes, autotune checkpoint writes, etc."><tr><th class="awrbg" scope="col">MTTR Writes</th><th class="awrbg" scope="col">Log Size Writes</th><th class="awrbg" scope="col">Log Ckpt Writes</th><th class="awrbg" scope="col">Other Settings Writes</th><th class="awrbg" scope="col">Autotune Ckpt Writes</th><th class="awrbg" scope="col">Thread Ckpt Writes</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>66,593</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="26"></a>
<h2 class="awr">
Advisory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2000">Instance Recovery Stats</a></li>
<li class="awr"><a class="awr" href="#2010">MTTR Advisory</a></li>
<li class="awr"><a class="awr" href="#2100">Buffer Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#2400">PGA Aggr Summary</a></li>
<li class="awr"><a class="awr" href="#2600">PGA Aggr Target Stats</a></li>
<li class="awr"><a class="awr" href="#2700">PGA Aggr Target Histogram</a></li>
<li class="awr"><a class="awr" href="#2800">PGA Memory Advisory</a></li>
<li class="awr"><a class="awr" href="#5500">Shared Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#6900">SGA Target Advisory</a></li>
<li class="awr"><a class="awr" href="#7100">Streams Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#5700">Java Pool Advisory</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2000"></a>
<h3 class="awr">Instance Recovery Stats</h3>
<ul>
<li class="awr"> B: Begin Snapshot,  E: End Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays instance recovery statistics at begin and end snapshot. It displays target MTTR, estimated MTTR, recovery estimated IO per second, redo blocks, target redo blocks, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Targt MTTR  (s) </th><th class="awrbg" scope="col">Estd MTTR (s)</th><th class="awrbg" scope="col">Recovery Estd IOs</th><th class="awrbg" scope="col">Actual  RedoBlks</th><th class="awrbg" scope="col">Target	RedoBlks</th><th class="awrbg" scope="col">Log Sz  RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Timeout RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Interval RedoBlks</th><th class="awrbg" scope="col">Opt Log Sz(M)</th><th class="awrbg" scope="col">Estd RAC Avail Time</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>19119</td><td align="right" class='awrc'>31474</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>97</td><td align="right" class='awrnc'>133647</td><td align="right" class='awrnc'>457183</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2010"></a>
<h3 class="awr">MTTR Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2100"></a>
<h3 class="awr">Buffer Pool Advisory</h3>
<ul>
<li class="awr"> Only rows with estimated physical reads &gt;0 are displayed </li>
<li class="awr"> ordered by Block Size, Buffers For Estimate</li>
</ul>
<table border="0" class="tdiff" summary="This table displays MTTR advisory. It displays size for estimate, dirty limit, estimated cache writes, estimated cache write factor, estimated total write, estimated total IO per second, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Size for Est (M)</th><th class="awrbg" scope="col">Size Factor</th><th class="awrbg" scope="col">Buffers (thousands)</th><th class="awrbg" scope="col">Est Phys Read Factor</th><th class="awrbg" scope="col">Estimated Phys Reads (thousands)</th><th class="awrbg" scope="col">Est Phys Read Time</th><th class="awrbg" scope="col">Est %DBtime for Rds</th></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>768</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1.24</td><td align="right" class='awrc'>24,238</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>65801.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>1,536</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>179</td><td align="right" class='awrnc'>1.19</td><td align="right" class='awrnc'>23,114</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>62750.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>2,304</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>268</td><td align="right" class='awrc'>1.15</td><td align="right" class='awrc'>22,377</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>60749.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>3,072</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>358</td><td align="right" class='awrnc'>1.12</td><td align="right" class='awrnc'>21,807</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>59204.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>3,840</td><td align="right" class='awrc'>0.49</td><td align="right" class='awrc'>447</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>21,332</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>57914.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>4,608</td><td align="right" class='awrnc'>0.59</td><td align="right" class='awrnc'>537</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>20,912</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>56775.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>5,376</td><td align="right" class='awrc'>0.68</td><td align="right" class='awrc'>626</td><td align="right" class='awrc'>1.05</td><td align="right" class='awrc'>20,532</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>55744.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>6,144</td><td align="right" class='awrnc'>0.78</td><td align="right" class='awrnc'>716</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>20,185</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>54801.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>6,912</td><td align="right" class='awrc'>0.88</td><td align="right" class='awrc'>805</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>19,860</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>53920.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>7,680</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>895</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>19,562</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>53110.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>7,872</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>917</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>19,492</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>52921.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>8,448</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>984</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>19,289</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>52369.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>9,216</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrc'>1,074</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>19,032</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>51674.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>9,984</td><td align="right" class='awrnc'>1.27</td><td align="right" class='awrnc'>1,163</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>18,798</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>51037.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>10,752</td><td align="right" class='awrc'>1.37</td><td align="right" class='awrc'>1,253</td><td align="right" class='awrc'>0.95</td><td align="right" class='awrc'>18,586</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>50462.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>11,520</td><td align="right" class='awrnc'>1.46</td><td align="right" class='awrnc'>1,342</td><td align="right" class='awrnc'>0.94</td><td align="right" class='awrnc'>18,399</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>49955.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>12,288</td><td align="right" class='awrc'>1.56</td><td align="right" class='awrc'>1,432</td><td align="right" class='awrc'>0.94</td><td align="right" class='awrc'>18,229</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>49494.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>13,056</td><td align="right" class='awrnc'>1.66</td><td align="right" class='awrnc'>1,521</td><td align="right" class='awrnc'>0.93</td><td align="right" class='awrnc'>18,086</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>49104.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>13,824</td><td align="right" class='awrc'>1.76</td><td align="right" class='awrc'>1,610</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>17,954</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>48746.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>14,592</td><td align="right" class='awrnc'>1.85</td><td align="right" class='awrnc'>1,700</td><td align="right" class='awrnc'>0.92</td><td align="right" class='awrnc'>17,844</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>48448.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>15,360</td><td align="right" class='awrc'>1.95</td><td align="right" class='awrc'>1,789</td><td align="right" class='awrc'>0.91</td><td align="right" class='awrc'>17,747</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>48184.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2400"></a>
<h3 class="awr">PGA Aggr Summary</h3>
<ul>
<li class="awr"> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate summary. It includes PGA cache hits, total wait time, average time for each class of buffer wait and WorkArea data processed."><tr><th class="awrbg" scope="col">PGA Cache Hit %</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Extra W/A MB Read/Written</th></tr>
<tr><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2600"></a>
<h3 class="awr">PGA Aggr Target Stats</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap (rows dentified with B or E contain data	 which is absolute i.e. not diffed over the interval) </li>
<li class="awr"> Auto PGA Target - actual workarea memory target </li>
<li class="awr"> W/A PGA Used	 - amount of memory used for all Workareas (manual + auto) </li>
<li class="awr"> %PGA W/A Mem	 - percentage of PGA memory allocated to workareas </li>
<li class="awr"> %Auto W/A Mem	 - percentage of workarea memory controlled by Auto Mem Mgmt </li>
<li class="awr"> %Man W/A Mem	 - percentage of workarea memory under manual control</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target statistics for begin and end snapshot. Statistics include PGA aggregate target, auto PGA target, PGA memory allocation, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">PGA Aggr Target(M)</th><th class="awrbg" scope="col">Auto PGA Target(M)</th><th class="awrbg" scope="col">PGA Mem  Alloc(M) </th><th class="awrbg" scope="col">W/A PGA  Used(M) </th><th class="awrbg" scope="col">%PGA W/A Mem</th><th class="awrbg" scope="col">%Auto W/A Mem</th><th class="awrbg" scope="col">%Man W/A Mem</th><th class="awrbg" scope="col">Global Mem Bound(K)</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>3,215</td><td align="right" class='awrc'>1,951</td><td align="right" class='awrc'>1,292.17</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>329,210</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>1,970</td><td align="right" class='awrnc'>1,280.36</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>329,210</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2700"></a>
<h3 class="awr">PGA Aggr Target Histogram</h3>
<ul>
<li class="awr"> Optimal Executions are purely in-memory operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target histograms."><tr><th class="awrbg" scope="col">  Low Optimal</th><th class="awrbg" scope="col">  High Optimal</th><th class="awrbg" scope="col">Total Execs</th><th class="awrbg" scope="col">Optimal Execs</th><th class="awrbg" scope="col">1-Pass Execs</th><th class="awrbg" scope="col">M-Pass Execs</th></tr>
<tr><td class='awrc'>2K</td><td class='awrc'>4K</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>64K</td><td class='awrnc'>128K</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>128K</td><td class='awrc'>256K</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>256K</td><td class='awrnc'>512K</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>512K</td><td class='awrc'>1024K</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>1M</td><td class='awrnc'>2M</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>2M</td><td class='awrc'>4M</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2800"></a>
<h3 class="awr">PGA Memory Advisory</h3>
<ul>
<li class="awr"> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value    where Estd PGA Overalloc Count is 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA memory advisory for different estimated PGA target sizes. It displays size factor, Workarea MB processed, estimated PGA cache hit, estimated extra Workarea MB read written to disk, etc., for each target size."><tr><th class="awrbg" scope="col">PGA Target Est (MB)</th><th class="awrbg" scope="col">Size Factr</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Estd Extra	 W/A MB Read/	Written to Disk </th><th class="awrbg" scope="col">Estd PGA Cache Hit %</th><th class="awrbg" scope="col">Estd PGA Overalloc Count</th><th class="awrbg" scope="col">Estd Time</th></tr>
<tr><td align="right" scope="row" class='awrc'>402</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>810.23</td><td align="right" class='awrc'>91.00</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>31,054,231</td></tr>
<tr><td align="right" scope="row" class='awrnc'>804</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>745.84</td><td align="right" class='awrnc'>92.00</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>30,842,125</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,608</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>532.64</td><td align="right" class='awrc'>94.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>30,139,778</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,411</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,215</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,858</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,501</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrnc'>5,144</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrc'>5,787</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,430</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,645</td><td align="right" class='awrc'>3.00</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,860</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,290</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>8,616.58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,385,129</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,720</td><td align="right" class='awrnc'>8.00</td><td align="right" class='awrnc'>8,616.58</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,385,129</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5500"></a>
<h3 class="awr">Shared Pool Advisory</h3>
<ul>
<li class="awr"> SP: Shared Pool     Est LC: Estimated Library Cache   Factr: Factor </li>
<li class="awr"> Note there is often a 1:Many correlation between a single logical object    in the Library Cache, and the physical number of memory objects associated    with it.  Therefore comparing the number of Lib Cache objects (e.g. in     v$librarycache), with the number of Lib Cache Memory Objects is invalid.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared pool advisory. Size factor, estimated library cache size, estimated library cache memory object and other info is displayed for different shared pool sizes"><tr><th class="awrbg" scope="col">Shared Pool Size(M)</th><th class="awrbg" scope="col">SP Size Factr</th><th class="awrbg" scope="col">Est LC Size (M)</th><th class="awrbg" scope="col">Est LC Mem Obj</th><th class="awrbg" scope="col">Est LC Time Saved (s)</th><th class="awrbg" scope="col">Est LC Time Saved Factr</th><th class="awrbg" scope="col">Est LC Load Time (s)</th><th class="awrbg" scope="col">Est LC Load Time Factr</th><th class="awrbg" scope="col">Est LC Mem Obj Hits (K)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1,408</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>1,395</td><td align="right" class='awrc'>56,276</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>6,466</td><td align="right" class='awrc'>93.71</td><td align="right" class='awrc'>3,024</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,440</td><td align="right" class='awrnc'>0.92</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>2,021</td><td align="right" class='awrnc'>56,543</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>6,199</td><td align="right" class='awrnc'>89.84</td><td align="right" class='awrnc'>3,038</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,472</td><td align="right" class='awrc'>0.94</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>2,522</td><td align="right" class='awrc'>58,096</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>4,646</td><td align="right" class='awrc'>67.33</td><td align="right" class='awrc'>3,088</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,504</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>3,125</td><td align="right" class='awrnc'>59,615</td><td align="right" class='awrnc'>0.95</td><td align="right" class='awrnc'>3,127</td><td align="right" class='awrnc'>45.32</td><td align="right" class='awrnc'>3,138</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,536</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>142</td><td align="right" class='awrc'>3,857</td><td align="right" class='awrc'>61,144</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>1,598</td><td align="right" class='awrc'>23.16</td><td align="right" class='awrc'>3,188</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,568</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>174</td><td align="right" class='awrnc'>4,326</td><td align="right" class='awrnc'>62,673</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>69</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>3,237</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,600</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>5,683</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,237</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,632</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>237</td><td align="right" class='awrnc'>6,886</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,664</td><td align="right" class='awrc'>1.06</td><td align="right" class='awrc'>269</td><td align="right" class='awrc'>7,856</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,696</td><td align="right" class='awrnc'>1.08</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,728</td><td align="right" class='awrc'>1.10</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,760</td><td align="right" class='awrnc'>1.12</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,792</td><td align="right" class='awrc'>1.14</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,824</td><td align="right" class='awrnc'>1.16</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,856</td><td align="right" class='awrc'>1.18</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,888</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,048</td><td align="right" class='awrc'>1.31</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,208</td><td align="right" class='awrnc'>1.41</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,368</td><td align="right" class='awrc'>1.51</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,528</td><td align="right" class='awrnc'>1.61</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,688</td><td align="right" class='awrc'>1.71</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,848</td><td align="right" class='awrnc'>1.82</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,008</td><td align="right" class='awrc'>1.92</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>8,607</td><td align="right" class='awrc'>62,676</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>3,238</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,168</td><td align="right" class='awrnc'>2.02</td><td align="right" class='awrnc'>292</td><td align="right" class='awrnc'>8,607</td><td align="right" class='awrnc'>62,676</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>3,238</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6900"></a>
<h3 class="awr">SGA Target Advisory</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA target advisory for different SGA target sizes. It displays SGA size factor, estimated DB time and estimated physical reads for different SGA target sizes."><tr><th class="awrbg" scope="col">SGA Target Size (M)</th><th class="awrbg" scope="col">SGA Size Factor</th><th class="awrbg" scope="col">Est DB Time (s)</th><th class="awrbg" scope="col">Est Physical Reads</th></tr>
<tr><td align="right" scope="row" class='awrc'>2,416</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>79,349</td><td align="right" class='awrc'>24,238,180</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,624</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>70,160</td><td align="right" class='awrnc'>23,113,497</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,832</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>66,613</td><td align="right" class='awrc'>21,807,540</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,040</td><td align="right" class='awrnc'>0.63</td><td align="right" class='awrnc'>65,327</td><td align="right" class='awrnc'>21,331,938</td></tr>
<tr><td align="right" scope="row" class='awrc'>7,248</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>63,156</td><td align="right" class='awrc'>20,532,770</td></tr>
<tr><td align="right" scope="row" class='awrnc'>8,456</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>61,334</td><td align="right" class='awrnc'>19,860,299</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,664</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>60,332</td><td align="right" class='awrc'>19,491,902</td></tr>
<tr><td align="right" scope="row" class='awrnc'>10,872</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>59,083</td><td align="right" class='awrnc'>19,031,893</td></tr>
<tr><td align="right" scope="row" class='awrc'>12,080</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>57,870</td><td align="right" class='awrc'>18,585,529</td></tr>
<tr><td align="right" scope="row" class='awrnc'>13,288</td><td align="right" class='awrnc'>1.38</td><td align="right" class='awrnc'>57,364</td><td align="right" class='awrnc'>18,398,406</td></tr>
<tr><td align="right" scope="row" class='awrc'>14,496</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>56,513</td><td align="right" class='awrc'>18,086,536</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15,704</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>55,861</td><td align="right" class='awrnc'>17,844,836</td></tr>
<tr><td align="right" scope="row" class='awrc'>16,912</td><td align="right" class='awrc'>1.75</td><td align="right" class='awrc'>55,596</td><td align="right" class='awrc'>17,747,377</td></tr>
<tr><td align="right" scope="row" class='awrnc'>18,120</td><td align="right" class='awrnc'>1.88</td><td align="right" class='awrnc'>55,596</td><td align="right" class='awrnc'>17,747,377</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,328</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>55,596</td><td align="right" class='awrc'>17,747,377</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7100"></a>
<h3 class="awr">Streams Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5700"></a>
<h3 class="awr">Java Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="27"></a>
<h2 class="awr">
Wait Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2300">Buffer Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#3000">Enqueue Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2300"></a>
<h3 class="awr">Buffer Wait Statistics</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer wait statistics. Statistics include waits, total wait time and average time for each class of buffer wait."><tr><th class="awrbg" scope="col">Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Time (ms)</th></tr>
<tr><td scope="row" class='awrc'>data block</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td></tr>
<tr><td scope="row" class='awrnc'>undo header</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3000"></a>
<h3 class="awr">Enqueue Activity</h3>
<ul>
<li class="awr"> only enqueues with requests are shown	</li>
<li class="awr"> Enqueue stats gathered prior to 10g should not be compared with 10g data </li>
<li class="awr"> ordered by Wait Time desc, Waits desc, Requests desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays enqueue activity statistics. Requests, success gets, failed gets, waits, wait time and average wait time are displayed for each enqueue type."><tr><th class="awrbg" scope="col">Enqueue Type (Request Reason)</th><th class="awrbg" scope="col">Requests</th><th class="awrbg" scope="col">Succ Gets</th><th class="awrbg" scope="col">Failed Gets</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Wt Time (s)</th><th class="awrbg" scope="col">Av Wt Time(ms)</th></tr>
<tr><td scope="row" class='awrc'>CR-Reuse Block Range (block range reuse ckpt)</td>
<td align="right" class='awrc'>524</td><td align="right" class='awrc'>524</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>147</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.77</td></tr>
<tr><td scope="row" class='awrnc'>RO-Multiple Object Reuse (fast object reuse)</td>
<td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.88</td></tr>
<tr><td scope="row" class='awrc'>WF-AWR Flush</td>
<td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.89</td></tr>
<tr><td scope="row" class='awrnc'>US-Undo Segment</td>
<td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.82</td></tr>
<tr><td scope="row" class='awrc'>PS-PX Process Reservation</td>
<td align="right" class='awrc'>28</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.86</td></tr>
<tr><td scope="row" class='awrnc'>CF-Controlfile Transaction</td>
<td align="right" class='awrnc'>1,287</td><td align="right" class='awrnc'>1,287</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.46</td></tr>
<tr><td scope="row" class='awrc'>CO-KTUCLO Master Slave enq (master slave det)</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.80</td></tr>
<tr><td scope="row" class='awrnc'>FB-Format Block</td>
<td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>DW-In memory Dispenser</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TA-Instance Undo</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.50</td></tr>
<tr><td scope="row" class='awrc'>HW-Segment High Water Mark</td>
<td align="right" class='awrc'>580</td><td align="right" class='awrc'>580</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TD-KTF map table enqueue (KTF dump entries)</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>TK-Auto Task Serialization (Auto Task Serialization)</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TM-DML</td>
<td align="right" class='awrnc'>8,284</td><td align="right" class='awrnc'>8,285</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TX-Transaction</td>
<td align="right" class='awrc'>8,019</td><td align="right" class='awrc'>8,019</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1</td>
<td align="right" class='awrnc'>2,520</td><td align="right" class='awrnc'>2,520</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1 (queue lock)</td>
<td align="right" class='awrc'>2,520</td><td align="right" class='awrc'>2,520</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SJ-KTSJ Slave Task Cancel (Slave Task Cancel)</td>
<td align="right" class='awrnc'>418</td><td align="right" class='awrnc'>422</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TT-Tablespace</td>
<td align="right" class='awrc'>268</td><td align="right" class='awrc'>268</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1 (q mem clnup lck)</td>
<td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DD-ASM Local Disk Group</td>
<td align="right" class='awrc'>200</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IS-Instance State</td>
<td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>BU-Buddy Instance Context (recovery set construct)</td>
<td align="right" class='awrc'>67</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CU-Cursor</td>
<td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>WT-AWR CDB-Wide Table Lock</td>
<td align="right" class='awrc'>17</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TO-Temp Object</td>
<td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SE-Session Migration</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TH-Threshold Chain (metric threshold evaluation)</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AF-Advisor Framework (task serialization)</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MR-Media Recovery</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>RS-Reclaimable Space (write alert level)</td>
<td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DA-Instance DP Array (Slave Process Array)</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PR-Process Startup</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PV-KSV slave startup (syncstart)</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AE-Edition Lock (lock)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FP-File Object (global fob contention)</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>RS-Reclaimable Space (read alert level)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SH-Active Session History Flushing</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQ-Sequence Cache</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="28"></a>
<h2 class="awr">
Undo Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3300">Undo Segment Summary</a></li>
<li class="awr"><a class="awr" href="#3400">Undo Segment Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3300"></a>
<h3 class="awr">Undo Segment Summary</h3>
<ul>
<li class="awr"> Min/Max TR (mins) - Min and Max Tuned Retention (minutes) </li>
<li class="awr"> STO - Snapshot Too Old count,	OOS - Out of Space count </li>
<li class="awr"> Undo segment block stats: </li>
<li class="awr"> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed </li>
<li class="awr"> eS - expired	Stolen,   eR - expired	 Released,   eU - expired   reUsed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays undo segment summary. It displays undo tablespace number, number of undo blocks, number of transactions, max query length, etc."><tr><th class="awrbg" scope="col">Undo TS#</th><th class="awrbg" scope="col">Num Undo Blocks (K)</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concurcy</th><th class="awrbg" scope="col">Min/Max TR (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">	uS/uR/uU/    eS/eR/eU</th></tr>
<tr><td align="right" scope="row" class='awrc'>5</td><td align="right" class='awrc'>18.98</td><td align="right" class='awrc'>7,302</td><td align="right" class='awrc'>1,001</td><td align="right" class='awrc'>5</td><td class='awrc'>38.7/38.7</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3400"></a>
<h3 class="awr">Undo Segment Stats</h3>
<ul>
<li class="awr"> Most recent 35 Undostat rows, ordered by Time desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the 35 most recent Undostat rows."><tr><th class="awrbg" scope="col">End Time</th><th class="awrbg" scope="col">Num Undo Blocks</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concy</th><th class="awrbg" scope="col">Tun Ret (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">  uS/uR/uU/   eS/eR/eU</th></tr>
<tr><td scope="row" class='awrc'>08-Feb 09:42</td><td align="right" class='awrc'>18,978</td><td align="right" class='awrc'>7,302</td><td align="right" class='awrc'>1,001</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>39</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="29"></a>
<h2 class="awr">
Latch Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3500">Latch Activity</a></li>
<li class="awr"><a class="awr" href="#3600">Latch Sleep Breakdown</a></li>
<li class="awr"><a class="awr" href="#3700">Latch Miss Sources</a></li>
<li class="awr"><a class="awr" href="#7500">Mutex Sleep Summary</a></li>
<li class="awr"><a class="awr" href="#3800">Parent Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#3900">Child Latch Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3500"></a>
<h3 class="awr">Latch Activity</h3>
<ul>
<li class="awr"> &quot;Get Requests&quot;, &quot;Pct Get Miss&quot; and &quot;Avg Slps/Miss&quot; are statistics for	 willing-to-wait latch get requests </li>
<li class="awr"> &quot;NoWait Requests&quot;, &quot;Pct NoWait Miss&quot; are for no-wait latch get requests </li>
<li class="awr"> &quot;Pct Misses&quot; for both should be very close to 0.0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch statistics. Get requests, % get miss, wait time, noWait requests are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Get Miss</th><th class="awrbg" scope="col">Avg Slps /Miss</th><th class="awrbg" scope="col">Wait Time (s)</th><th class="awrbg" scope="col">NoWait Requests</th><th class="awrbg" scope="col">Pct NoWait Miss</th></tr>
<tr><td scope="row" class='awrc'>AQ Background: interrupt command latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>AQ Coord jobx_kwsbgsgn latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ Message drive state object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQ Sharded master pool latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ deq hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM Keyed state latch</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM allocation</td><td align="right" class='awrc'>34,572</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM connection state latch</td><td align="right" class='awrnc'>1,880</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM db client latch</td><td align="right" class='awrc'>596</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map headers</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation freelist</td><td align="right" class='awrc'>128</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation hash table</td><td align="right" class='awrnc'>5,067,817</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM network background latch</td><td align="right" class='awrc'>2,043</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM network state latch</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM remote client latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AWR Alerted Metric Element list</td><td align="right" class='awrnc'>5,260</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Autotask management</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Change Notification Hash table latch</td><td align="right" class='awrnc'>213</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Column stats entry latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Consistent RBA</td><td align="right" class='awrnc'>7,709</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DML lock allocation</td><td align="right" class='awrc'>16,616</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Event Group Locks</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FIB s.o chain latch</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FOB consolidated s.o list latch</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>File State Object Pool Parent Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCS logfile block</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCS logfile write queue</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Hang Manager wait event statistics</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7,088</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>I/O Staticstics latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM Stats Stripe Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM Stats main anchor latch</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM access tracking extent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM activity tracking latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary rw latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM area sb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM area scb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM emb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM seg hdr latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMFS defer write list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMXT hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC other latch</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC stats buffer allocation latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>In memory undo latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS Sh mem access</td><td align="right" class='awrnc'>122</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast add buf latch</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast drop buf latch</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast load blnc latch</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS queue access latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS queue state obj latch</td><td align="right" class='awrc'>5,082</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS slv state obj latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KCNIBR - invalid block range tree</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDCStatHash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Buffer Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Hash Bucket Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Hash Elem Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO action list latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO bll latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFC FX Hash Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFC Hash Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFCL LE Freelist</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS client latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS cluster latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS endpoint latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS node latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS process latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFK SGA Libload latch</td><td align="right" class='awrnc'>4,400</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFMD SGA</td><td align="right" class='awrc'>345</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KGNFS-NFS:SHM structure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KGNFS-NFS:SVR LIST</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool KGH calls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool free list</td><td align="right" class='awrc'>183,747</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>291,046</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool pending avail list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>991,830</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KMG MMAN ready and startup request latch</td><td align="right" class='awrnc'>200</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS ctx level parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS req layer parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS sess layer parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS Receive and Send Queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS id table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS ksfs_node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFSD name cache parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSGL LS Segment latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSGL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPC ASPC anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPC SGA allocation parent latch</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPCGSN Hash Table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPCGSN Namespace latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSK PDB IO STAT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSRMA SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSRMF SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSWL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR hang analysis phase 1 latch</td><td align="right" class='awrnc'>93</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSXR hang analysis phase 2 latch</td><td align="right" class='awrc'>219</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTF sga latch</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTILM latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTU in-memory txn table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTURMA ODPSCN latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTURMA SGA allocation parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KWQMN job cache list latch</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Latch for NonceHistory</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Locator state objects pool parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Lost write change tracking</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Lsod array latch</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA asr alloc latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA heap latch</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context latch</td><td align="right" class='awrnc'>1,099</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context root latch</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MQL Tracking Latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Memory Management Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #3</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #4</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Subscriber</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Message cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MinActiveScn Latch</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Mutex</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Mutex Stats</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Nologging Standby SCN Time Map cache</td><td align="right" class='awrnc'>199</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process</td><td align="right" class='awrc'>434</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process allocation</td><td align="right" class='awrnc'>1,220</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process: request allocation</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PDB Hash Table Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PDB LRU structure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PL/SQL warning settings</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX hash array latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for dependency tracking</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for query hash table access</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for segments scanning</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>QMT</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Real-time descriptor latch</td><td align="right" class='awrnc'>2,368</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Report Request stats latch</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Report Request struct latch</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Request holder compeltion list latch</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Retry Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Retry bkt latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA IO buffer pool latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SGA Logging Bkt Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA Logging Log Latch</td><td align="right" class='awrnc'>2,829</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA blob parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA bucket locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA heap locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA pool locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SO private so latch</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL memory manager latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>200</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL memory manager workarea list latch</td><td align="right" class='awrc'>14,650</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SR Stats Stripe Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sched IM Job latch</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sched InMem Job Cache</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Shared B-Tree</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams Generic</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Subscriber Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Testing</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Token Manager</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Txn Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Txn bkt latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>UM object latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Undo Hint Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>WCR: sync</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Write State Object Pool Parent Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>X$KSFQP</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB NFS Security Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB unused session pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB used session pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>active checkpoint queue latch</td><td align="right" class='awrnc'>30,313</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>active service list</td><td align="right" class='awrc'>2,718</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>560</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>archive destination</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>begin backup scn array</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>business card</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cache buffer handles</td><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>14,722,060</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4,154,805</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers lru chain</td><td align="right" class='awrnc'>2,484,250</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2,659,805</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>cache table scan latch</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>call allocation</td><td align="right" class='awrnc'>230</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>change notification client cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>channel handle pool latch</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>channel operations parent latch</td><td align="right" class='awrc'>1,862</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>1,242,252</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>468,795</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>client/application info</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>compile environment latch</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp handoff latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp pool latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp server hash latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp sga latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp srv type state latch</td><td align="right" class='awrc'>601</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp srv type wait latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cr slave free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cvmap freelist lock</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>deferred cleanup latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher info</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dml lock allocation</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>done queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dtp latch</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dummy allocation</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>eighth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>eleventh spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enqueue freelist latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,760</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue hash chains</td><td align="right" class='awrnc'>69,541</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enqueues</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>error message lists</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fast space usage latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fifteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>file cache latch</td><td align="right" class='awrc'>143</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>flash file access latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>flashback copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fourteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fourth Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>9,470,003</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>840,956</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc imc list</td><td align="right" class='awrc'>320</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc xid list</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity object freelist latch</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs commit scn state</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs nodemap pool</td><td align="right" class='awrc'>14,413</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs opaque info freelist</td><td align="right" class='awrnc'>26,521</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs partitioned table hash</td><td align="right" class='awrc'>6,420,954</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,492</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pcm hashed value bucket hash</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remaster request queue</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering latch</td><td align="right" class='awrnc'>14,145</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>223</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>1,018,852</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>764,529</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>7,495,835</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>169</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs resource scan list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource timerq list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource validate list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows freelist</td><td align="right" class='awrnc'>176,520</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges cached resource lists</td><td align="right" class='awrc'>13,125</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>18,411</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges deadlock list</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges domain table</td><td align="right" class='awrc'>36,813</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>19,551</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges group table</td><td align="right" class='awrc'>37,703</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>6,771</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process parent latch</td><td align="right" class='awrc'>76,819</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process table freelist</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock freelist</td><td align="right" class='awrc'>105</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>49,608</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>865</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges resource scan list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource table freelist</td><td align="right" class='awrnc'>1,455</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges s-lock bitvec freelist</td><td align="right" class='awrc'>234</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges timeout list</td><td align="right" class='awrnc'>169</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges value block free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>global tx hash mapping</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>granule from data transfer cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gws:Sharding global descriptor latch</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table Sql Plan Finding latch</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table column usage latch</td><td align="right" class='awrnc'>179</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>207</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>hash table expression usage tracking latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table sql contorl latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat check</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>240</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat structure management</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>301</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>imc buf hdl lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc cr clone buf</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc hash lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc sj lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc srchsp lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc-txn-wrk-lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory area latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory columnar segment hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory columnar ts extent map chunk latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory global pool latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>interrupt manipulation</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>intra txn parallel recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>io pool granule list</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>io pool granule metadata list</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>job workq parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>job_queue_processes parameter latch</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>k2q global data latch</td><td align="right" class='awrc'>402</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>k2q lock allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kKCN Cqn SGA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kcb DW scan objtemp hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kcn buffer chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kdlx hb parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kgb parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kgnfs mount latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjbr roi instance map</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci objects freelist latch</td><td align="right" class='awrnc'>1,447</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci process context latch</td><td align="right" class='awrc'>1,191</td><td align="right" class='awrc'>1.34</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>34,573</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjci process list latch</td><td align="right" class='awrnc'>569</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci request sequence latch</td><td align="right" class='awrc'>159</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjcipctx state object freelist latch</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoedcso state object freelist latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoeq omni enqueue hash bucket latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoer owner hash bucket</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjpm my inst data</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc Request obj freelist latch</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc Ring Buffer obj freelist latch</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc protect control request queue</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6,046</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjsc protect warm up context</td><td align="right" class='awrnc'>116</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca protect pkey hash table bucket</td><td align="right" class='awrc'>4,544</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsca protect service hash table bucket</td><td align="right" class='awrnc'>1,503</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjscpss state object freelist latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kokc descriptor allocation latch</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kpoxft latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>krso process</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksevn object root latch</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksfv messages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksi resource reuse count</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksim group membership cache</td><td align="right" class='awrnc'>117</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksim membership request latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>322</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksns object latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kss move lock</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksuosstats global area</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>230</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksutcpistat latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv allocation latch</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv class latch</td><td align="right" class='awrc'>13,230</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.40</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv msg queue latch</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksxp shared latch</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxp so latch</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksz_so allocation latch</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktfbn latch</td><td align="right" class='awrnc'>131</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg jrnls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg lookuptable level 1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg lookuptable level 2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg space</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg stages</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg worklink</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm global data</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm prv jrnls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktmpj HT ls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwqbsn:qsga</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbmdl: metadata latch</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbql: queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbutl: uncommitted txn latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptQcachLt: queue cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptTrncTsksLt: trunc task latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptjobAdPtLt: AdPt list latch</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsslLat: skiplist latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kxfxscanrate_latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lgwr LWN SCN</td><td align="right" class='awrc'>7,709</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>list of block allocation</td><td align="right" class='awrnc'>29,988</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>loader state object freelist</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment dispenser latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment hash table latch</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment query latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lock DBA buffer during media recovery</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log write info</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7,752</td><td align="right" class='awrnc'>0.92</td></tr>
<tr><td scope="row" class='awrc'>log write worker phase</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logical standby cache</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer context allocation</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer local</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer work area</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>longop free list parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>managed standby</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>message bitmap latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>message pool operations parent latch</td><td align="right" class='awrc'>692</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>messages</td><td align="right" class='awrnc'>124,683</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>msg queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>multiblock read objects</td><td align="right" class='awrnc'>79,924</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service memory objects</td><td align="right" class='awrc'>58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service namespace bucket</td><td align="right" class='awrnc'>3,103</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service pending queue</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service request queue</td><td align="right" class='awrnc'>6,202</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ncodef allocation latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ninth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object queue header freelist</td><td align="right" class='awrc'>1,456</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>5,767,845</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2,264</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>object queue memory</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object stats modification</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel query alloc buffer</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parallel query stats</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel txn reco latch</td><td align="right" class='awrc'>636</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parameter table management</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pdb enqueue hash chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>peshm</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pesom_free_list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pesom_hash_node</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pkey global statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pmon dead latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>post/wait queue</td><td align="right" class='awrc'>35,737</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>36,000</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>process allocation</td><td align="right" class='awrnc'>2,989</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process group creation</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process memory detail</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process pkey statistics list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process queue</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process queue reference</td><td align="right" class='awrc'>1,071</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>152</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>qmn task queue latch</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>quarantine object</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>query server freelists</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>query server process</td><td align="right" class='awrc'>436</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>queued dump request</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>queuing load statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>read-moslty lock queue under pkey</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>recovery domain hash bucket</td><td align="right" class='awrc'>2,262</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>25,172</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>514,726</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>redo copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>515,086</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo transport task</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>redo writing</td><td align="right" class='awrc'>55,385</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote tool request latch</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr group change latch</td><td align="right" class='awrc'>124</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:active threads</td><td align="right" class='awrnc'>213</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5,955</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:actses change group</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:actses change state</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:free threads list</td><td align="right" class='awrc'>128</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan CPU method</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan change alloc latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan change latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:resource group CPU method</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:schema config</td><td align="right" class='awrnc'>106</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:session queuing</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resumable state object</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache objects</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>rt rmv count latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>301</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>second Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>segmented array pool</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sequence cache</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>service drain list</td><td align="right" class='awrnc'>602</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session allocation</td><td align="right" class='awrc'>7,579</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,560</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>session idle bit</td><td align="right" class='awrnc'>15,461</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session state list latch</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session statistics</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session switching</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session timer</td><td align="right" class='awrc'>200</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>seventh spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga hash table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shard latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shardgroup list latch</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>6,264</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared pool sim alloc</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool simulator</td><td align="right" class='awrnc'>509</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared server configuration</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sim partition latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>simulator hash latch</td><td align="right" class='awrc'>566,728</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>simulator lru latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>375,725</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>sixth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sort extent pool</td><td align="right" class='awrnc'>98</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>space background task latch</td><td align="right" class='awrc'>1,567</td><td align="right" class='awrc'>49.01</td><td align="right" class='awrc'>0.80</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>397</td><td align="right" class='awrc'>3.27</td></tr>
<tr><td scope="row" class='awrnc'>state object free list</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>statistics aggregation</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>subscriber Ht bkt</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tablespace key chain</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>temp lob duration state obj allocation</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tenth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent l0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent2 l0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent2 lmid cln</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test mixed exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test mode exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test open exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test pdb exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test shared parent2 lmid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thirteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>threshold alerts latch</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>transaction allocation</td><td align="right" class='awrnc'>294</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twelfth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fifth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-first spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fourth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-second spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-third spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>46,415</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit buffers</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit holder</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit queues</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3600"></a>
<h3 class="awr">Latch Sleep Breakdown</h3>
<ul>
<li class="awr"> ordered by misses desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch sleep statistics. Get requests, misses, sleeps, spin gets are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Misses</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Spin Gets</th></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>2,484,250</td><td align="right" class='awrc'>2,121</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>2,083</td></tr>
<tr><td scope="row" class='awrnc'>space background task latch</td><td align="right" class='awrnc'>1,567</td><td align="right" class='awrnc'>768</td><td align="right" class='awrnc'>618</td><td align="right" class='awrnc'>205</td></tr>
<tr><td scope="row" class='awrc'>gc element</td><td align="right" class='awrc'>9,470,003</td><td align="right" class='awrc'>693</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>678</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>7,495,835</td><td align="right" class='awrnc'>397</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>360</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>991,830</td><td align="right" class='awrc'>310</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>304</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>5,767,845</td><td align="right" class='awrnc'>286</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>283</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>1,018,852</td><td align="right" class='awrc'>274</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>273</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>183,747</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>76</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>124,683</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>46</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>1,242,252</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>22</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>14,722,060</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>19</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>49,608</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>5</td></tr>
<tr><td scope="row" class='awrc'>ksv class latch</td><td align="right" class='awrc'>13,230</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3700"></a>
<h3 class="awr">Latch Miss Sources</h3>
<ul>
<li class="awr"> only latches with sleeps are shown </li>
<li class="awr"> ordered by name, sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch miss sources. Place where latch was requested, no-wait misses, sleeps, waiter sleeps are displayed for each missed latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Where</th><th class="awrbg" scope="col">NoWait Misses</th><th class="awrbg" scope="col">   Sleeps</th><th class="awrbg" scope="col">Waiter Sleeps</th></tr>
<tr><td class='awrc'>KJC message pool free list</td><td class='awrc'>kjcspfmbq: free vector of msg buffers</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjctcsnd: send normal message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sedeqv3: dequeue a vector of msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbzibmlt: multi-block read: nowait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbzgb_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbzgws</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>checkpoint queue latch</td><td class='awrc'>kcbklbc_cql</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclollnumiter</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfndnewm</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>KCLUNLNK</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclplz</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclrwrite</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclulb</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>gcs remastering latch</td><td class='awrnc'>kjfcdrmrfg drmfrz step</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbrralc: reserve allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbclose_remaster</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>4</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrrcres_99</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbcropen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>8</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbldrmrpst</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbopen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjblocalobj_nolock</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmprlst: shadow</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrrcfwst</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjlmfnd: search for lockp by rename and inst id</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjakcai: search for resp by resname</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ksv class latch</td><td class='awrc'>ksvclsl: checkpool</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv: after wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_link_q</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_switch_mq_bg</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_unlink_q</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_grab_task</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>456</td><td align="right" class='awrnc'>594</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_detach_task</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>106</td><td align="right" class='awrc'>24</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_smco_purgeexpired</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_smco_movetasks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7500"></a>
<h3 class="awr">Mutex Sleep Summary</h3>
<ul>
<li class="awr"> ordered by number of sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the mutex sleep summary. Location, sleeps and wait time are displayed for each mutex type"><tr><th class="awrbg" scope="col">Mutex Type</th><th class="awrbg" scope="col">Location</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Wait    Time (ms)</th></tr>
<tr><td class='awrc'>Cursor Pin</td><td class='awrc'>kkslce [KKSCHLPIN2]</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>39</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3800"></a>
<h3 class="awr">Parent Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3900"></a>
<h3 class="awr">Child Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="30"></a>
<h2 class="awr">
Segment Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4000">Segments by Logical Reads</a></li>
<li class="awr"><a class="awr" href="#4100">Segments by Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4104">Segments by Physical Read Requests</a></li>
<li class="awr"><a class="awr" href="#4108">Segments by UnOptimized Reads</a></li>
<li class="awr"><a class="awr" href="#4106">Segments by Optimized Reads</a></li>
<li class="awr"><a class="awr" href="#4110">Segments by Direct Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4120">Segments by Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4124">Segments by Physical Write Requests</a></li>
<li class="awr"><a class="awr" href="#4130">Segments by Direct Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4140">Segments by Table Scans</a></li>
<li class="awr"><a class="awr" href="#4150">Segments by DB Blocks Changes</a></li>
<li class="awr"><a class="awr" href="#4200">Segments by Row Lock Waits</a></li>
<li class="awr"><a class="awr" href="#4300">Segments by ITL Waits</a></li>
<li class="awr"><a class="awr" href="#4400">Segments by Buffer Busy Waits</a></li>
<li class="awr"><a class="awr" href="#4450">Segments by Global Cache Buffer Busy</a></li>
<li class="awr"><a class="awr" href="#4500">Segments by CR Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4600">Segments by Current Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4605">Segments by Global Cache Remote Grants</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4000"></a>
<h3 class="awr">Segments by Logical Reads</h3>
<ul>
<li class="awr">Total Logical Reads:	   3,389,562</li>
<li class="awr">Captured Segments account for	98.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by logical reads. Owner, tablespace name, object type, logical read, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,679,472</td><td align="right" class='awrc'>49.55</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,465,328</td><td align="right" class='awrnc'>43.23</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>81,968</td><td align="right" class='awrc'>2.42</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73422</td><td align="right" class='awrnc'>73422</td><td align="right" class='awrnc'>72,800</td><td align="right" class='awrnc'>2.15</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SYSSTAT_PK</td><td class='awrc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>4,768</td><td align="right" class='awrc'>0.14</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4100"></a>
<h3 class="awr">Segments by Physical Reads</h3>
<ul>
<li class="awr">Total Physical Reads:	    2,206,194</li>
<li class="awr">Captured Segments account for  102.2% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical reads. Owner, tablespace name, object type, physical reads, etc. are displayed for each segment "><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	 Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,177,720</td><td align="right" class='awrc'>53.38</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,075,845</td><td align="right" class='awrnc'>48.76</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4104"></a>
<h3 class="awr">Segments by Physical Read Requests</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    2,206,159</li>
<li class="awr">Captured Segments account for  102.2% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical read requests. Owner, tablespace name, object type, physical read requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Read Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,177,720</td><td align="right" class='awrc'>53.38</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,075,845</td><td align="right" class='awrnc'>48.77</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4108"></a>
<h3 class="awr">Segments by UnOptimized Reads</h3>
<ul>
<li class="awr">Total UnOptimized Read Requests:       2,206,159</li>
<li class="awr">Captured Segments account for  102.2% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by unoptimized reads. Owner, tablespace name, object type, unoptimized reads, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">UnOptimized Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,177,720</td><td align="right" class='awrc'>53.38</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,075,845</td><td align="right" class='awrnc'>48.77</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4106"></a>
<h3 class="awr">Segments by Optimized Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4110"></a>
<h3 class="awr">Segments by Direct Physical Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4120"></a>
<h3 class="awr">Segments by Physical Writes</h3>
<ul>
<li class="awr">Total Physical Writes:	       354,758</li>
<li class="awr">Captured Segments account for	94.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical writes. Owner, tablespace name, object type, physical writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>173,151</td><td align="right" class='awrc'>48.81</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>161,450</td><td align="right" class='awrnc'>45.51</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>WRH$_SQLSTAT_INDEX</td><td class='awrnc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_CON_SYSTEM_EVENT_PK</td><td class='awrc'>WRH$_CON_SYSTEM_EVENT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73894</td><td align="right" class='awrc'>73894</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4124"></a>
<h3 class="awr">Segments by Physical Write Requests</h3>
<ul>
<li class="awr">Total Physical Write Requests:	       303,110</li>
<li class="awr">Captured Segments account for	99.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical write requests. Owner, tablespace name, object type, physical write requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Write Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>154,234</td><td align="right" class='awrc'>50.88</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>146,786</td><td align="right" class='awrnc'>48.43</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>WRH$_SQLSTAT_INDEX</td><td class='awrnc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SYSSTAT_PK</td><td class='awrc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4130"></a>
<h3 class="awr">Segments by Direct Physical Writes</h3>
<ul>
<li class="awr">Total Direct Physical Writes:		   49</li>
<li class="awr">Captured Segments account for	12.2% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by direct physical writes. Owner, tablespace name, object type, direct writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Direct Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4.08</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000011139C00004$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>4.08</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000011147C00038$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4.08</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4140"></a>
<h3 class="awr">Segments by Table Scans</h3>
<ul>
<li class="awr">Total Table Scans:		 1</li>
<li class="awr">Captured Segments account for  100.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by table scans. Owner, tablespace name, object type, table scans, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Table Scans</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td>
<td scope="row" class='awrc'>I_OBJ5</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4150"></a>
<h3 class="awr">Segments by DB Blocks Changes</h3>
<ul>
<li class="awr"> % of Capture shows % of DB Block Changes for each top segment compared  </li>
<li class="awr"> with total DB Block Changes for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by DB blocks changes. Owner, tablespace name, object type, db block changes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">DB Block Changes</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>251,600</td><td align="right" class='awrc'>52.62</td></tr>
<tr><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>219,888</td><td align="right" class='awrnc'>45.99</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SYSSTAT_PK</td><td class='awrc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>1,552</td><td align="right" class='awrc'>0.32</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>TEMP</td>
<td scope="row" class='awrnc'>SYS_TEMP_0FD9DFEE4_3B0369</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>4254990052</td><td align="right" class='awrnc'>5156992</td><td align="right" class='awrnc'>1,408</td><td align="right" class='awrnc'>0.29</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td>
<td scope="row" class='awrc'>COL_USAGE$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>671</td><td align="right" class='awrc'>671</td><td align="right" class='awrc'>576</td><td align="right" class='awrc'>0.12</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4200"></a>
<h3 class="awr">Segments by Row Lock Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4300"></a>
<h3 class="awr">Segments by ITL Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4400"></a>
<h3 class="awr">Segments by Buffer Busy Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4450"></a>
<h3 class="awr">Segments by Global Cache Buffer Busy</h3>
<ul>
<li class="awr"> % of Capture shows % of GC Buffer Busy for each top segment compared  </li>
<li class="awr"> with GC Buffer Busy for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by global cache buffer busy waits. Owner, tablespace name, object type, GC buffer busy waits, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Buffer Busy</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td>
<td scope="row" class='awrc'>SEG$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>100.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4500"></a>
<h3 class="awr">Segments by CR Blocks Received</h3>
<ul>
<li class="awr">Total CR Blocks Received:	   11,443</li>
<li class="awr">Captured Segments account for	99.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by CR blocks received. Owner, tablespace name, object type, CR blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">CR    Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>9,482</td><td align="right" class='awrc'>82.86</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>1,764</td><td align="right" class='awrnc'>15.42</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SQL_PLAN</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>11147</td><td align="right" class='awrc'>11147</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.24</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>WRH$_SEG_STAT_OBJ</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>11339</td><td align="right" class='awrnc'>11339</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_PARAMETER_PK</td><td class='awrc'>WRH$_PARAMETER_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73787</td><td align="right" class='awrc'>73787</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.09</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4600"></a>
<h3 class="awr">Segments by Current Blocks Received</h3>
<ul>
<li class="awr">Total Current Blocks Received:		54,999</li>
<li class="awr">Captured Segments account for	99.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by current blocks received. Owner, tablespace name, object type, Current blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Current Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>48,733</td><td align="right" class='awrc'>88.61</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>5,262</td><td align="right" class='awrnc'>9.57</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>0.20</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SQLSTAT_INDEX</td><td class='awrc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73749</td><td align="right" class='awrc'>73749</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4605"></a>
<h3 class="awr">Segments by Global Cache Remote Grants</h3>
<ul>
<li class="awr">Total Global Cache Remote Grants:	1,504,554</li>
<li class="awr">Captured Segments account for	99.9% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by gc remote grants. Owner, tablespace name, object type, gc remote grants, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Remote Grants</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>889,246</td><td align="right" class='awrc'>59.10</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>614,084</td><td align="right" class='awrnc'>40.82</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000011147C00038$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000007451C00009$$</td><td class='awrnc'>SYS_LOB_P256</td><td class='awrnc'>LOB PARTITION</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SEG_STAT</td><td class='awrc'>WRH$_SEG_STAT_3393773525_33</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>73789</td><td align="right" class='awrc'>73789</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="31"></a>
<h2 class="awr">
Dictionary Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4700">Dictionary Cache Stats</a></li>
<li class="awr"><a class="awr" href="#4800">Dictionary Cache Stats (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4700"></a>
<h3 class="awr">Dictionary Cache Stats</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low (&lt; 2% in most cases) </li>
<li class="awr"> &quot;Final Usage&quot; is the number of cache entries being used</li>
</ul>
<table border="0" class="tdiff" summary="This table displays dictionary cache statistics. Get requests, % misses, scan requests, final usage, etc. are displayed for each cache"><tr><th class="awrbg" scope="col">Cache</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Scan Reqs</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Mod Reqs</th><th class="awrbg" scope="col">Final Usage</th></tr>
<tr><td scope="row" class='awrc'>dc_awr_control</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>28.57</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_global_oids</td><td align="right" class='awrnc'>588</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>173</td></tr>
<tr><td scope="row" class='awrc'>dc_histogram_data</td><td align="right" class='awrc'>159</td><td align="right" class='awrc'>23.90</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,993</td></tr>
<tr><td scope="row" class='awrnc'>dc_histogram_defs</td><td align="right" class='awrnc'>291</td><td align="right" class='awrnc'>28.18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4,779</td></tr>
<tr><td scope="row" class='awrc'>dc_objects</td><td align="right" class='awrc'>1,638</td><td align="right" class='awrc'>1.53</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,896</td></tr>
<tr><td scope="row" class='awrnc'>dc_props</td><td align="right" class='awrnc'>491</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td></tr>
<tr><td scope="row" class='awrc'>dc_rollback_segments</td><td align="right" class='awrc'>3,031</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>320</td></tr>
<tr><td scope="row" class='awrnc'>dc_segments</td><td align="right" class='awrnc'>133</td><td align="right" class='awrnc'>11.28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>582</td></tr>
<tr><td scope="row" class='awrc'>dc_sequences</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>33.33</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td scope="row" class='awrnc'>dc_tablespaces</td><td align="right" class='awrnc'>139</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td></tr>
<tr><td scope="row" class='awrc'>dc_users</td><td align="right" class='awrc'>132</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>206</td></tr>
<tr><td scope="row" class='awrnc'>outstanding_alerts</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>66.67</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4800"></a>
<h3 class="awr">Dictionary Cache Stats (RAC)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="32"></a>
<h2 class="awr">
Library Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4900">Library Cache Activity</a></li>
<li class="awr"><a class="awr" href="#5000">Library Cache Activity (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4900"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Get requests, % misses, pin request, % miss, reloads, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>16.67</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>16.67</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>QUEUE</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>53,017</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>65.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>44.44</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>44.44</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>118</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,071</td><td align="right" class='awrnc'>3.08</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5000"></a>
<h3 class="awr">Library Cache Activity (RAC)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Ges lock requests, GES pin requests, GES pin releases, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>QUEUE</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>194</td><td align="right" class='awrc'>932</td><td align="right" class='awrc'>932</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRANSFORMATION</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRIGGER</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="33"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8500">Memory Dynamic Components</a></li>
<li class="awr"><a class="awr" href="#8600">Memory Resize Operations Summary</a></li>
<li class="awr"><a class="awr" href="#8650">Memory Resize Ops</a></li>
<li class="awr"><a class="awr" href="#7300">Process Memory Summary</a></li>
<li class="awr"><a class="awr" href="#5900">SGA Memory Summary</a></li>
<li class="awr"><a class="awr" href="#6100">SGA breakdown difference by Pool and Name</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8500"></a>
<h3 class="awr">Memory Dynamic Components</h3>
<ul>
<li class="awr"> Min/Max sizes since instance startup </li>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory dynamic component statistics. Begin snap size, current size, min size, etc. are displayed for each component"><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Begin Snap Size (Mb)</th><th class="awrbg" scope="col">Current Size (Mb)</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Oper Count</th><th class="awrbg" scope="col">Last Op Typ/Mod</th></tr>
<tr><td scope="row" class='awrc'>ASM Buffer Cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 16K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 2K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 32K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 4K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 8K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>7,808.00</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>0</td><td class='awrc'>GRO/DEF</td></tr>
<tr><td scope="row" class='awrnc'>Data Transfer Cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In Memory RO Extension Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>In Memory RW Extension Area</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In-Memory Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>KEEP buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>PGA Target</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>RECYCLE buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>SGA Target</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>Shared IO Pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>java pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>large pool</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>memoptimize buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,568.00</td><td align="right" class='awrnc'>1,568.00</td><td align="right" class='awrnc'>1,568.00</td><td align="right" class='awrnc'>1,632.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>SHR/DEF</td></tr>
<tr><td scope="row" class='awrc'>streams pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>unified pga pool</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8600"></a>
<h3 class="awr">Memory Resize Operations Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8650"></a>
<h3 class="awr">Memory Resize Ops</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7300"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap  </li>
<li class="awr"> All rows below contain absolute values (i.e. not diffed over the interval) </li>
<li class="awr"> Max Alloc is Maximum PGA Allocation size at snapshot time  </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by Begin/End snapshot, Alloc (MB) desc </li>
<li class="awr"> Top 10 containers by Alloc (MB) at end snapshot time are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays process memory summary. Allocation, used, average allocation, etc. are displayed for different category of process memory."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>192.75</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>10.56</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>32</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>573.53</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.21</td><td align="right" class='awrnc'>8.01</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>110</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>10.74</td><td align="right" class='awrc'>9.75</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>92</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>3.19</td><td align="right" class='awrnc'>1.93</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>34</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>780.21</td><td align="right" class='awrc'>11.68</td><td align="right" class='awrc'>11.43</td><td align="right" class='awrc'>19.13</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>277</td><td align="right" class='awrc'>268</td></tr>
<tr><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>189.38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.74</td><td align="right" class='awrnc'>10.22</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>565.97</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>8.19</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>108</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>10.17</td><td align="right" class='awrnc'>9.16</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>90</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>2.90</td><td align="right" class='awrc'>1.92</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>32</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>768.41</td><td align="right" class='awrnc'>11.08</td><td align="right" class='awrnc'>11.16</td><td align="right" class='awrnc'>19.01</td><td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>272</td><td align="right" class='awrnc'>263</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5900"></a>
<h3 class="awr">SGA Memory Summary</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA memory summary. For each SGA region, begin size and end size is displayed."><tr><th class="awrbg" scope="col">SGA regions</th><th class="awrbg" scope="col">Begin Size (Bytes)</th><th class="awrbg" scope="col">End Size (Bytes) (if different)</th></tr>
<tr><td scope="row" class='awrc'>Database Buffers</td><td align="right" class='awrc'>8,388,608,000</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Fixed Size</td><td align="right" class='awrnc'>12,445,928</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Redo Buffers</td><td align="right" class='awrc'>21,106,688</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Variable Size</td><td align="right" class='awrnc'>1,711,276,032</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6100"></a>
<h3 class="awr">SGA breakdown difference by Pool and Name</h3>
<ul>
<li class="awr"> ordered by Pool, Name	</li>
<li class="awr"> N/A value for Begin MB or End MB indicates the size of that Pool/Name was    insignificant, or zero in that snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA breakdown difference. For each pool name, begin and end size are displayed."><tr><th class="awrbg" scope="col">Pool</th><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Begin MB</th><th class="awrbg" scope="col">End MB</th><th class="awrbg" scope="col">% Diff</th></tr>
<tr><td class='awrc'>large</td><td class='awrc'>PX msg pool</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>large</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ASH buffers</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KGLH0</td><td align="right" class='awrnc'>44.97</td><td align="right" class='awrnc'>42.91</td><td align="right" class='awrnc'>-4.57</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>KJSC rnb slots</td><td align="right" class='awrc'>18.41</td><td align="right" class='awrc'>17.84</td><td align="right" class='awrc'>-3.11</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>SO private sga</td><td align="right" class='awrnc'>28.97</td><td align="right" class='awrnc'>28.97</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>SQLA</td><td align="right" class='awrc'>274.97</td><td align="right" class='awrc'>274.77</td><td align="right" class='awrc'>-0.07</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>db_block_hash_buckets</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>free memory</td><td align="right" class='awrc'>114.16</td><td align="right" class='awrc'>117.90</td><td align="right" class='awrc'>3.27</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gc name table</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs dynamic resources</td><td align="right" class='awrc'>25.42</td><td align="right" class='awrc'>25.42</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs dynamic resources for</td><td align="right" class='awrnc'>91.31</td><td align="right" class='awrnc'>91.31</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs resources</td><td align="right" class='awrc'>264.52</td><td align="right" class='awrc'>264.52</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs resv res hash bucket</td><td align="right" class='awrnc'>48.00</td><td align="right" class='awrnc'>48.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs shadows</td><td align="right" class='awrc'>144.28</td><td align="right" class='awrc'>144.28</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>ges big msg buffers</td><td align="right" class='awrnc'>26.29</td><td align="right" class='awrnc'>26.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ksunfy_meta 1</td><td align="right" class='awrc'>25.03</td><td align="right" class='awrc'>25.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>row cache</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>buffer_cache</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>fixed_sga</td><td align="right" class='awrnc'>11.87</td><td align="right" class='awrnc'>11.87</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>log_buffer</td><td align="right" class='awrc'>20.13</td><td align="right" class='awrc'>20.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>shared_io_pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="39"></a>
<h2 class="awr">
Replication Statistics (GoldenGate, XStream)
</h2>
<ul>
<li class="awr"><a class="awr" href="#9000">Replication System Resource Usage</a></li>
<li class="awr"><a class="awr" href="#9010">Replication SGA Usage</a></li>
<li class="awr"><a class="awr" href="#9020">GoldenGate Capture</a></li>
<li class="awr"><a class="awr" href="#9030">GoldenGate Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9040">GoldenGate Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9041">GoldenGate Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9042">GoldenGate Apply Server</a></li>
<li class="awr"><a class="awr" href="#9051">GoldenGate Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9050">GoldenGate Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9060">XStream Capture</a></li>
<li class="awr"><a class="awr" href="#9070">XStream Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9080">XStream Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9081">XStream Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9082">XStream Apply Server</a></li>
<li class="awr"><a class="awr" href="#9091">XStream Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9090">XStream Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9100">Table Statistics by DML Operations</a></li>
<li class="awr"><a class="awr" href="#9110">Table Statistics by Conflict Resolutions</a></li>
<li class="awr"><a class="awr" href="#9120">Replication Large Transaction Statistics</a></li>
<li class="awr"><a class="awr" href="#9130">Replication Long Running Transaction Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9000"></a>
<h3 class="awr">Replication System Resource Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9010"></a>
<h3 class="awr">Replication SGA Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9020"></a>
<h3 class="awr">GoldenGate Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9030"></a>
<h3 class="awr">GoldenGate Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9040"></a>
<h3 class="awr">GoldenGate Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9041"></a>
<h3 class="awr">GoldenGate Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9042"></a>
<h3 class="awr">GoldenGate Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9051"></a>
<h3 class="awr">GoldenGate Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9050"></a>
<h3 class="awr">GoldenGate Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9060"></a>
<h3 class="awr">XStream Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9070"></a>
<h3 class="awr">XStream Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9080"></a>
<h3 class="awr">XStream Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9081"></a>
<h3 class="awr">XStream Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9082"></a>
<h3 class="awr">XStream Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9091"></a>
<h3 class="awr">XStream Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9090"></a>
<h3 class="awr">XStream Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9100"></a>
<h3 class="awr">Table Statistics by DML Operations</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9110"></a>
<h3 class="awr">Table Statistics by Conflict Resolutions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9120"></a>
<h3 class="awr">Replication Large Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9130"></a>
<h3 class="awr">Replication Long Running Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="34"></a>
<h2 class="awr">
Advanced Queuing
</h2>
<ul>
<li class="awr"><a class="awr" href="#6150">Advanced Queue CPU/IO Usage</a></li>
<li class="awr"><a class="awr" href="#6400">Buffered Queues</a></li>
<li class="awr"><a class="awr" href="#6500">Buffered Queue Subscribers</a></li>
<li class="awr"><a class="awr" href="#6600">Rule Set</a></li>
<li class="awr"><a class="awr" href="#7600">Persistent Queues</a></li>
<li class="awr"><a class="awr" href="#7610">Persistent Queues Rate</a></li>
<li class="awr"><a class="awr" href="#7700">Persistent Queue Subscribers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6150"></a>
<h3 class="awr">Advanced Queue CPU/IO Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6400"></a>
<h3 class="awr">Buffered Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6500"></a>
<h3 class="awr">Buffered Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6600"></a>
<h3 class="awr">Rule Set</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7600"></a>
<h3 class="awr">Persistent Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7610"></a>
<h3 class="awr">Persistent Queues Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7700"></a>
<h3 class="awr">Persistent Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="6700"></a>
<h3 class="awr">Resource Limit Stats</h3>
<ul>
<li class="awr"> Only rows with Current or Maximum Utilization &gt; 80% of Limit are shown  </li>
<li class="awr"> For &quot;UNLIMITED&quot; resources, rows whose Current or Maximum Utilization    exceeds 2*Initial Allocation are shown </li>
<li class="awr"> Ordered by Resource Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays resource limit statistics. Current utilization, maximum utilization, initial allocation and limit are displayed for each resource name"><tr><th class="awrbg" scope="col">Resource Name</th><th class="awrbg" scope="col">Current	 Utilization</th><th class="awrbg" scope="col">Maximum	 Utilization</th><th class="awrbg" scope="col">  Initial Allocation</th><th class="awrbg" scope="col">	Limit</th></tr>
<tr><td scope="row" class='awrc'>ges_cache_ress</td><td align="right" class='awrc'>2,762</td><td align="right" class='awrc'>3,530</td><td class='awrc'>0</td><td class='awrc'>UNLIMITED</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="37"></a>
<h2 class="awr">
Shared Server Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8710">Shared Servers Activity</a></li>
<li class="awr"><a class="awr" href="#8720">Shared Servers Rates</a></li>
<li class="awr"><a class="awr" href="#8730">Shared Servers Utilization</a></li>
<li class="awr"><a class="awr" href="#8740">Shared Servers Common Queue</a></li>
<li class="awr"><a class="awr" href="#8750">Shared Servers Dispatchers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8710"></a>
<h3 class="awr">Shared Servers Activity</h3>
<ul>
<li class="awr"> Values represent averages for all samples</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers activity statistics. It displays average total connections, average active connections, average total shared servers, etc."><tr><th class="awrbg" scope="col">Avg Total Connections</th><th class="awrbg" scope="col">Avg Active Connections</th><th class="awrbg" scope="col">Avg Total Shared Srvrs</th><th class="awrbg" scope="col">Avg Active Shared Srvrs</th><th class="awrbg" scope="col">Avg Total Dispatchers</th><th class="awrbg" scope="col">Avg Active Dispatchers</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8720"></a>
<h3 class="awr">Shared Servers Rates</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers rate statistics. It displays common queue per second, disp queue per second, server messages per second, common queue total, etc."><tr><th class="awrbg" scope="col">Common Queue Per Sec</th><th class="awrbg" scope="col">Disp Queue Per Sec</th><th class="awrbg" scope="col">Server Msgs/Sec</th><th class="awrbg" scope="col">Server KB/Sec</th><th class="awrbg" scope="col">Common Queue Total</th><th class="awrbg" scope="col">Disp Queue Total</th><th class="awrbg" scope="col">Server Total Msgs</th><th class="awrbg" scope="col">Server Total(KB)</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8730"></a>
<h3 class="awr">Shared Servers Utilization</h3>
<ul>
<li class="awr"> Statistics are combined for all servers </li>
<li class="awr"> Incoming and Outgoing Net % are included in %Busy</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers utilization statistics. It displays total server time second, % busy, % idle, incoming net %, outgoing net %, etc."><tr><th class="awrbg" scope="col">Total Server Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Incoming Net %</th><th class="awrbg" scope="col">Outgoing Net %</th></tr>
<tr><td align="right" class='awrc'>602</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8740"></a>
<h3 class="awr">Shared Servers Common Queue</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8750"></a>
<h3 class="awr">Shared Servers Dispatchers</h3>
<ul>
<li class="awr"> Ordered by %Busy, descending </li>
<li class="awr"> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue </li>
<li class="awr"> Name suffixes:       &quot;(N)&quot; - dispatcher started between begin and end snapshots	&quot;(R)&quot; - dispatcher re-started between begin and end snapshots</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers dispatcher statistics. Average connections, total dispatch time, % busy, % idle, total queued, total queued wait, etc. are displayed for each dispatcher"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Avg Conns</th><th class="awrbg" scope="col">Total Disp Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Total Queued</th><th class="awrbg" scope="col">Total Queue Wait (s)</th><th class="awrbg" scope="col">Avg Queue Wait (ms)</th></tr>
<tr><td scope="row" class='awrc'>D000</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>602</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="36"></a>
<h2 class="awr">
Initialization Parameters
</h2>
<ul>
<li class="awr"><a class="awr" href="#6800">Modified Parameters</a></li>
<li class="awr"><a class="awr" href="#6850">Modified Multi-Valued Parameters</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6800"></a>
<h3 class="awr">Modified Parameters</h3>
<ul>
<li class="awr"> This section shows all the modified initialization parameters that  were in effect during the entire snapshot interval </li>
<li class="awr"> End Value is displayed only if the parameter value was modified within the snapshot interval</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of the modified initialization parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>TRUE</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>DB</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>TRUE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>19.0.0</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>8192</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>+DATA</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>example.com</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>p30db</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>+FRA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>274877906944</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>2</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>listener_networks</td><td class='awrnc'>&#160;&#160;</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>local_listener</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>AMERICAN</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>AMERICA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>300</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>3371171840</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>640</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>10133438464</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>2</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_tablespace</td><td class='awrc'>UNDOTBS2</td><td class='awrc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6850"></a>
<h3 class="awr">Modified Multi-Valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more than one value </li>
<li class="awr">'(NULL)' indicates a missing parameter value </li>
<li class="awr"> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot'</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of multi-valued parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>control_files</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="42"></a>
<h2 class="awr">
Active Session History (ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9990">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9989">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9993">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9992">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9991">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9988">Top Events</a></li>
<li class="awr"><a class="awr" href="#9994">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9987">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9986">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9990"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>47.76</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>33.58</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>33.58</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrnc'><div class="hidden">203653710</div></td><td align="right" class='awrnc'><div class="hidden">64</div></td><td align="right" class='awrnc'><div class="hidden">47.76119402985074626865671641791044776119</div></td>
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>8.96</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>8.21</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">64</div></td><td align="right" class='awrc'><div class="hidden">47.76119402985074626865671641791044776119</div></td>
<td class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>5.22</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>5.22</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrnc'>1497866750</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>38.81</td>
<td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>19.40</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>19.40</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">52</div></td><td align="right" class='awrc'><div class="hidden">38.80597014925373134328358208955223880597</div></td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>6.72</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>6.72</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">52</div></td><td align="right" class='awrnc'><div class="hidden">38.80597014925373134328358208955223880597</div></td>
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>5.97</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>2.99</td>
<td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9989"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>47.76</td>
<td class='awrc'>UPDATE</td><td align="right" class='awrc'>47.01</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>33.58</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrnc'>1497866750</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>38.81</td>
<td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>35.82</td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>19.40</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">52</div></td><td align="right" class='awrc'><div class="hidden">38.80597014925373134328358208955223880597</div></td>
<td class='awrc'>SELECT STATEMENT</td><td align="right" class='awrc'>2.24</td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.24</td>
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9993"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>759,23810</td><td align="right" class='awrc'>43.28</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>20.15</td>
<td class='awrc'>USER2</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>27/60 [ 45%]</td><td align="right" class='awrc'>24</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">759,23810</div></td><td align="right" class='awrnc'><div class="hidden">43.28358208955223880597014925373134328358</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>7.46</td>
<td class='awrnc'><div class="hidden">USER2</div></td><td class='awrnc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrnc'>10/60 [ 17%]</td><td align="right" class='awrnc'>4</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">759,23810</div></td><td align="right" class='awrc'><div class="hidden">43.28358208955223880597014925373134328358</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>7.46</td>
<td class='awrc'><div class="hidden">USER2</div></td><td class='awrc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrc'>10/60 [ 17%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>882,61001</td><td align="right" class='awrnc'>43.28</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>20.15</td>
<td class='awrnc'>USER1</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>27/60 [ 45%]</td><td align="right" class='awrnc'>21</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">882,61001</div></td><td align="right" class='awrc'><div class="hidden">43.28358208955223880597014925373134328358</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>11.94</td>
<td class='awrc'><div class="hidden">USER1</div></td><td class='awrc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrc'>16/60 [ 27%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">882,61001</div></td><td align="right" class='awrnc'><div class="hidden">43.28358208955223880597014925373134328358</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>7.46</td>
<td class='awrnc'><div class="hidden">USER1</div></td><td class='awrnc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrnc'>10/60 [ 17%]</td><td align="right" class='awrnc'>8</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,59906</td><td align="right" class='awrc'>6.72</td><td class='awrc'>db file parallel write</td><td align="right" class='awrc'>4.48</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (DBW0)</td><td align="right" class='awrc'>6/60 [ 10%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">4,59906</div></td><td align="right" class='awrnc'><div class="hidden">6.71641791044776119402985074626865671642</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>2.24</td>
<td class='awrnc'><div class="hidden">SYS</div></td><td class='awrnc'><div class="hidden">oracle@mcracpo...le.com (DBW0)</div></td><td align="right" class='awrnc'>3/60 [  5%]</td><td align="right" class='awrnc'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>127,34074</td><td align="right" class='awrc'>2.99</td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>2.99</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (LGWR)</td><td align="right" class='awrc'>4/60 [  7%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,14250</td><td align="right" class='awrnc'>1.49</td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>1.49</td>
<td class='awrnc'>SYS</td><td class='awrnc'>oracle@mcracpo...le.com (LMS0)</td><td align="right" class='awrnc'>2/60 [  3%]</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9992"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9991"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>47.76</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>47.76</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9988"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>40.30</td><td align="right" class='awrc'>0.90</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td class='awrnc'>User I/O</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>19.40</td><td align="right" class='awrnc'>0.43</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>14.93</td><td align="right" class='awrc'>0.33</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>5.97</td><td align="right" class='awrnc'>0.13</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block request</td><td class='awrc'>Cluster</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'><div class="hidden">5.97014925373134328358208955223880597015</div></td><td align="right" class='awrc'>0.13</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9994"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>40.30</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24913683&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.75</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>19.40</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;61&quot;,&quot;61&quot;</td><td align="right" class='awrnc'>4.48</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">db file parallel read</div></td><td align="right" class='awrc'><div class="hidden">19.40298507462686567164179104477611940299</div></td><td align="right" class='awrc'>&quot;1&quot;,&quot;58&quot;,&quot;58&quot;</td><td align="right" class='awrc'>2.24</td>
<td class='awrc'><div class="hidden">files</div></td><td class='awrc'><div class="hidden">blocks</div></td><td class='awrc'><div class="hidden">requests</div></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">db file parallel read</div></td><td align="right" class='awrnc'><div class="hidden">19.40298507462686567164179104477611940299</div></td><td align="right" class='awrnc'>&quot;1&quot;,&quot;29&quot;,&quot;29&quot;</td><td align="right" class='awrnc'>1.49</td>
<td class='awrnc'><div class="hidden">files</div></td><td class='awrnc'><div class="hidden">blocks</div></td><td class='awrnc'><div class="hidden">requests</div></td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>5.97</td><td align="right" class='awrc'>&quot;2&quot;,&quot;26425986&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.75</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>class#</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>4.48</td><td align="right" class='awrnc'>&quot;2&quot;,&quot;0&quot;,&quot;2147483647&quot;</td><td align="right" class='awrnc'>0.75</td>
<td class='awrnc'>requests</td><td class='awrnc'>interrupt</td><td class='awrnc'>timeout</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>2.99</td><td align="right" class='awrc'>&quot;2&quot;,&quot;32&quot;,&quot;2&quot;</td><td align="right" class='awrc'>0.75</td>
<td class='awrc'>files</td><td class='awrc'>blocks</td><td class='awrc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9987"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73402</td><td align="right" class='awrc'>35.82</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>20.15</td>
<td class='awrc'>USER1.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73402</div></td><td align="right" class='awrnc'><div class="hidden">35.8208955223880597014925373134328358209</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>11.94</td>
<td class='awrnc'><div class="hidden">USER1.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">73402</div></td><td align="right" class='awrc'><div class="hidden">35.8208955223880597014925373134328358209</div></td><td class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>2.99</td>
<td class='awrc'><div class="hidden">USER1.CF1 (TABLE)</div></td><td class='awrc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrnc'>73409</td><td align="right" class='awrnc'>35.82</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>20.15</td>
<td class='awrnc'>USER2.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">73409</div></td><td align="right" class='awrc'><div class="hidden">35.8208955223880597014925373134328358209</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>7.46</td>
<td class='awrc'><div class="hidden">USER2.CF1 (TABLE)</div></td><td class='awrc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73409</div></td><td align="right" class='awrnc'><div class="hidden">35.8208955223880597014925373134328358209</div></td><td class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>4.48</td>
<td class='awrnc'><div class="hidden">USER2.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9986"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>09:33:49   (1.2 min)</td><td align="right" class='awrc'>16</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>7.46</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">09:33:49   (1.2 min)</div></td><td align="right" class='awrnc'><div class="hidden">16</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>2.24</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">09:33:49   (1.2 min)</div></td><td align="right" class='awrc'><div class="hidden">16</div></td><td class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1.49</td></tr>
<tr><td align="right" class='awrnc'>09:35:00   (5.0 min)</td><td align="right" class='awrnc'>70</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>18.66</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">09:35:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">70</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>11.94</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">09:35:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">70</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>10.45</td></tr>
<tr><td align="right" class='awrc'>09:40:00   (3.9 min)</td><td align="right" class='awrc'>48</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>14.18</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">09:40:00   (3.9 min)</div></td><td align="right" class='awrnc'><div class="hidden">48</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>8.21</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">09:40:00   (3.9 min)</div></td><td align="right" class='awrc'><div class="hidden">48</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>6.72</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99995"></a>
<h2>ADDM Task ADDM:3393773525_2_63</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_2_63&apos;
	  -------------------------------------------

Analysis Period
---------------
AWR snapshot range from 62 to 63.
Time period starts at 08-FEB-20 09.33.49 AM
Time period ends at 08-FEB-20 09.43.52 AM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db2, numbered 2 and hosted at
mcracpoc2.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 1142 seconds.
The average number of active sessions was 1.89.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     1.89 | 100 	  2
2  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  1.71 | 90.21	      2
3  Undersized SGA			     1.52 | 80.03	  1
4  Global Cache Messaging		     .34 | 17.93	  1
5  Global Cache Congestion		     .04 | 2.19 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 1.9 active sessions, 100% of total activity.
------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 1.04 active sessions, 55.17% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 7473 times and
      had an average elapsed time of 0.085 seconds.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER2.CF1&quot; with object ID 73409 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER1.CF1&quot; with object ID 73402 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      &quot;0sy7x6xzjg2yy&quot; are responsible for 53% of the database time spent on
      the UPDATE statement with SQL_ID &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 0sy7x6xzjg2yy.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := &apos;2&apos;;
	 v_update_pct PLS_INTEGER := &apos;15&apos;;
	 v_max_loop_iterations PLS_INTEGER := &apos;0&apos;;
	 v_seconds_to_run PLS_INTEGER := &apos;600&apos;;
	 v_scale PLS_INTEGER := &apos;1048576&apos;;
	 v_work_unit PLS_INTEGER := &apos;64&apos; ;
	 v_redo_stress	VARCHAR2(12) := &apos;LITE&apos;;
	 v_hot_schema_modulus PLS_INTEGER := &apos;0&apos;;
	 v_do_hotspot	VARCHAR(7) := &apos;FALSE&apos;;
	 v_hotspot_mb  NUMBER := &apos;8&apos;;
	 v_hotspot_offset_mb NUMBER := &apos;16&apos;;
	 v_hotspot_modulus  PLS_INTEGER := &apos;3&apos;;
	 v_sleep_modulus PLS_INTEGER := &apos;0&apos;;
	 v_sleep_min NUMBER := &apos;.1&apos;;
	 v_sleep_max NUMBER := &apos;.5&apos;;
	 v_scan_query_pct PLS_INTEGER := &apos;0&apos;;
	 v_obfuscate VARCHAR(5)  := &apos;FALSE&apos;;
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := &apos;ALTER SESSION SET CURRENT_SCHEMA = user&apos; ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations &gt; 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context(&apos;userenv&apos;,&apos;sid&apos;) from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,&apos;YYYYDDMMHH24MISSFFFF&apos;);
	 -- DBMS_RANDOM.seed (val =&gt; v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( &apos;step 1 &apos; || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE &apos;ALTER SESSION SET CURRENT_SCHEMA = user1&apos;;
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = &apos;TRUE&apos; ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( &apos;v_loop_cnt &apos; || v_loop_cnt || &apos; base &apos; ||
	 (v_hotspot_base  + v_work_unit + 1)  || &apos; zone &apos; || v_hotspot_blocks
	 ||  &apos;  Random block &apos; || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt;
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt &gt;= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) &gt;=	100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) &gt;=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we&apos;ve hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || &apos;|&apos; || v_total_time || &apos;|&apos; ||
	 v_total_cpu_tm || &apos;|&apos; || v_cpu_pct ;
	 END;

   Recommendation 2: SQL Tuning
   Estimated benefit is .85 active sessions, 44.83% of total activity.
   -------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 42415 times and
      had an average elapsed time of 0.011 seconds.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER1.CF1&quot; with object ID 73402 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER2.CF1&quot; with object ID 73409 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      &quot;078ab5pdvxx3c&quot; are responsible for 53% of the database time spent on
      the SELECT statement with SQL_ID &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID 078ab5pdvxx3c.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := &apos;1&apos;;
	 v_update_pct PLS_INTEGER := &apos;15&apos;;
	 v_max_loop_iterations PLS_INTEGER := &apos;0&apos;;
	 v_seconds_to_run PLS_INTEGER := &apos;600&apos;;
	 v_scale PLS_INTEGER := &apos;1048576&apos;;
	 v_work_unit PLS_INTEGER := &apos;64&apos; ;
	 v_redo_stress	VARCHAR2(12) := &apos;LITE&apos;;
	 v_hot_schema_modulus PLS_INTEGER := &apos;0&apos;;
	 v_do_hotspot	VARCHAR(7) := &apos;FALSE&apos;;
	 v_hotspot_mb  NUMBER := &apos;8&apos;;
	 v_hotspot_offset_mb NUMBER := &apos;16&apos;;
	 v_hotspot_modulus  PLS_INTEGER := &apos;3&apos;;
	 v_sleep_modulus PLS_INTEGER := &apos;0&apos;;
	 v_sleep_min NUMBER := &apos;.1&apos;;
	 v_sleep_max NUMBER := &apos;.5&apos;;
	 v_scan_query_pct PLS_INTEGER := &apos;0&apos;;
	 v_obfuscate VARCHAR(5)  := &apos;FALSE&apos;;
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := &apos;ALTER SESSION SET CURRENT_SCHEMA = user&apos; ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations &gt; 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context(&apos;userenv&apos;,&apos;sid&apos;) from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,&apos;YYYYDDMMHH24MISSFFFF&apos;);
	 -- DBMS_RANDOM.seed (val =&gt; v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( &apos;step 1 &apos; || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE &apos;ALTER SESSION SET CURRENT_SCHEMA = user1&apos;;
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = &apos;TRUE&apos; ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( &apos;v_loop_cnt &apos; || v_loop_cnt || &apos; base &apos; ||
	 (v_hotspot_base  + v_work_unit + 1)  || &apos; zone &apos; || v_hotspot_blocks
	 ||  &apos;  Random block &apos; || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt;
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt &gt;= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) &gt;=	100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) &gt;=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we&apos;ve hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || &apos;|&apos; || v_total_time || &apos;|&apos; ||
	 v_total_cpu_tm || &apos;|&apos; || v_cpu_pct ;
	 END;


Finding 2: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 1.71 active sessions, 90.21% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .85 active sessions, 45.11% of total activity.
   -------------------------------------------------------------------
   Action
      Run &quot;Segment Advisor&quot; on TABLE &quot;USER1.CF1&quot; with object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Investigate application logic involving I/O on TABLE &quot;USER1.CF1&quot; with
      object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 57% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1177720 physical reads, 173151 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .85 active sessions, 45.11% of total activity.
   -------------------------------------------------------------------
   Action
      Run &quot;Segment Advisor&quot; on TABLE &quot;USER2.CF1&quot; with object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Investigate application logic involving I/O on TABLE &quot;USER2.CF1&quot; with
      object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 64% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1075845 physical reads, 161450 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 1.37 active sessions, 72.28% of total activity.


Finding 3: Undersized SGA
Impact is 1.52 active sessions, 80.03% of total activity.
---------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter &quot;sga_target&quot; was &quot;9664 M&quot; during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .52 active sessions, 27.49% of total activity.
   -------------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter &quot;sga_target&quot; to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 1.37 active sessions, 72.28% of total activity.


Finding 4: Global Cache Messaging
Impact is .34 active sessions, 17.93% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is .34 active sessions, 17.93% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 43% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is .34 active sessions, 17.93% of total activity.


Finding 5: Global Cache Congestion
Impact is .04 active sessions, 2.19% of total activity.
-------------------------------------------------------
Global Cache Service Processes (LMSn) in other instances were not processing
requests fast enough.

   Recommendation 1: Database Configuration
   Estimated benefit is .04 active sessions, 2.19% of total activity.
   ------------------------------------------------------------------
   Action
      Increase throughput of the Global Cache Service (LMSn) processes.
      Increase the number of Global Cache Service processes by increasing the
      value of the parameter &quot;gcs_server_processes&quot;. Alternatively, if the
      host is CPU bound consider increasing the OS priority of the Global
      Cache Service processes.
   Rationale
      The value of parameter &quot;gcs_server_processes&quot; was &quot;2&quot; during the
      analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Inter-instance messaging was consuming significant database time on this
      instance.
      Impact is .34 active sessions, 17.93% of total activity.
	 Wait class &quot;Cluster&quot; was consuming significant database time.
	 Impact is .34 active sessions, 17.93% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

The database&apos;s maintenance windows were active during 100% of the analysis
period.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="9997"></a>
<a class="awr" name="9997"></a><h3 class="awr">RAC Statistics</h3>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about RAC instances">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Number of Instances:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>	 2</td></tr>
<tr><td scope="row" class='awrc'>Number of LMS's:</td><td align="right" class='awrc'>	 2</td><td align="right" class='awrc'>	  2</td></tr>
<tr><td scope="row" class='awrnc'>Number of realtime LMS's:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>    2</td><td class='awrnc'> (0 priority changes)</td></tr>
</table><p />
Global Cache Load Profile
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about global cache load
		     profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks received:</td><td align="right" class='awrnc'>		   110.30</td><td align="right" class='awrnc'>		       8.83</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks served:</td><td align="right" class='awrc'>		 2.82</td><td align="right" class='awrc'>		  0.23</td></tr>
<tr><td scope="row" class='awrnc'>GCS/GES messages received:</td><td align="right" class='awrnc'>	      2,620.43</td><td align="right" class='awrnc'>		  209.77</td></tr>
<tr><td scope="row" class='awrc'>GCS/GES messages sent:</td><td align="right" class='awrc'>		5,700.42</td><td align="right" class='awrc'>		   456.33</td></tr>
<tr><td scope="row" class='awrnc'>DBWR Fusion writes:</td><td align="right" class='awrnc'>		   0.23</td><td align="right" class='awrnc'>		     0.02</td></tr>
<tr><td scope="row" class='awrc'>Estd Interconnect traffic (KB)</td><td align="right" class='awrc'>		2,530.11</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
Global Cache Efficiency Percentages (Target local+remote 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays global cache efficiency percentages">
<tr><td scope="row" class='awrnc'>Buffer access -  local cache %:</td><td align="right" class='awrnc'>	32.95</td></tr>
<tr><td scope="row" class='awrc'>Buffer access - remote cache %:</td><td align="right" class='awrc'>   1.96</td></tr>
<tr><td scope="row" class='awrnc'>Buffer access -	  disk %:</td><td align="right" class='awrnc'>	65.09</td></tr>
<tr><td scope="row" class='awrc'>Global Cache Locality	      %:</td><td align="right" class='awrc'>  35.34</td></tr>
</table><p />
Global Cache and Enqueue Services - Workload Characteristics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays workload characteristics for global
		    cache and enqueue services">
<tr><td scope="row" class='awrnc'>Avg global cache cr block receive time (us):</td><td align="right" class='awrnc'>	    2,307.1</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache current block receive time (us):</td><td align="right" class='awrc'>		 910.7</td></tr>
<tr><td scope="row" class='awrnc'>Avg LMS process busy %:</td><td align="right" class='awrnc'>		   2.7</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block build time (us):</td><td align="right" class='awrc'> 	  131.6</td></tr>
<tr><td scope="row" class='awrnc'>Global cache log flushes for cr blocks served %:</td><td align="right" class='awrnc'> 	    1.1</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block flush time (us):</td><td align="right" class='awrc'> 	6,875.0</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block pin time (us):</td><td align="right" class='awrnc'>		 0.0</td></tr>
<tr><td scope="row" class='awrc'>Global cache log flushes for current blocks served %:</td><td align="right" class='awrc'>	       9.5</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block flush time (us):</td><td align="right" class='awrnc'>	      10,416.7</td></tr>
<tr><td scope="row" class='awrc'>Avg global enqueue get time (us):</td><td align="right" class='awrc'>		  40.2</td></tr>
</table><p />
Global Cache and Enqueue Services - Messaging Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays messaging statistics for Global Cache
		    and Enqueue Services">
<tr><td scope="row" class='awrnc'>Avg message sent queue time (us):</td><td align="right" class='awrnc'>	 8,282.2</td></tr>
<tr><td scope="row" class='awrc'>Avg message sent queue time on ksxp (us):</td><td align="right" class='awrc'>	       1,929.6</td></tr>
<tr><td scope="row" class='awrnc'>Avg message received kernel queue time (us):</td><td align="right" class='awrnc'>		6.0</td></tr>
<tr><td scope="row" class='awrc'>Avg message received queue time (us):</td><td align="right" class='awrc'>	       3.6</td></tr>
<tr><td scope="row" class='awrnc'>Avg GCS message process time (us):</td><td align="right" class='awrnc'>	     14.7</td></tr>
<tr><td scope="row" class='awrc'>Avg GES message process time (us):</td><td align="right" class='awrc'> 	   25.7</td></tr>
<tr><td scope="row" class='awrnc'>% of direct sent messages:</td><td align="right" class='awrnc'>   15.79</td></tr>
<tr><td scope="row" class='awrc'>% of indirect sent messages:</td><td align="right" class='awrc'>   84.01</td></tr>
<tr><td scope="row" class='awrnc'>% of flow controlled messages:</td><td align="right" class='awrnc'>	 0.20</td></tr>
</table><p />
<hr />
<p />Cluster Interconnect<p />
<ul>
<li class="awr"> if Public/Source at End snap is different a '*' is displayed</li>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect. . if Public/Source at End snap is different a '*' is displayed"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 2" id="End">End</th>
</tr><tr>
<th class="awrbg" scope="col">Interface</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Src">Src</th></tr>
<tr><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.31.173</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End Pub" class='awrclb'>&#160;</td><td headers="End Src" class='awrcrb'>&#160;</td></tr>
</table><p />
<a class="awr" name="top"></a>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5100"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global messaging statistics. Total, per second, per transaction values are displayed for each statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>Cluster reconfiguration count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Domain reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>8,253</td><td align="right" class='awrnc'>13.70</td><td align="right" class='awrnc'>1.10</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA local message waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA local messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA messages received actual</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA messages received logical</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA requests failed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA requests succeeded</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Pseudo reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Pseudo rm reconfig count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>139</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>7,179</td><td align="right" class='awrnc'>11.92</td><td align="right" class='awrnc'>0.95</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>7,701</td><td align="right" class='awrc'>12.78</td><td align="right" class='awrc'>1.02</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>259</td><td align="right" class='awrnc'>0.43</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>dynamically allocated gcs resources</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>dynamically allocated gcs shadows</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs assume cvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs assume no cvt</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gcs ast to fg</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast xid</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>3,746</td><td align="right" class='awrnc'>6.22</td><td align="right" class='awrnc'>0.50</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>4,693</td><td align="right" class='awrc'>7.79</td><td align="right" class='awrc'>0.62</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>9,681</td><td align="right" class='awrnc'>16.07</td><td align="right" class='awrnc'>1.29</td></tr>
<tr><td scope="row" class='awrc'>gcs cr basts to PIs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs cr requests to slave</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs cr serve without current lock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>230,536</td><td align="right" class='awrnc'>382.70</td><td align="right" class='awrnc'>30.64</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>133</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs error msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs flash read serve requests to slave</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr no current</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs forward cr to pinged instance</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs grant request in partial open</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>33,117</td><td align="right" class='awrnc'>54.98</td><td align="right" class='awrnc'>4.40</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>114,851</td><td align="right" class='awrc'>190.66</td><td align="right" class='awrc'>15.26</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>4,147</td><td align="right" class='awrnc'>6.88</td><td align="right" class='awrnc'>0.55</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>649,692</td><td align="right" class='awrc'>1,078.52</td><td align="right" class='awrc'>86.34</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms flush pi msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>18,792</td><td align="right" class='awrnc'>31.20</td><td align="right" class='awrnc'>2.50</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>1,279,340</td><td align="right" class='awrc'>2,123.77</td><td align="right" class='awrc'>170.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>95</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>119</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gcs pkey conflicts retry</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly failure unmount db</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass N-&gt;Xw ping local</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass N-&gt;Xw ping remote</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant X on assume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant ast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant fg ast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>572</td><td align="right" class='awrc'>0.95</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>gcs recovery claim msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to master</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs regular cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs resources for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs retry convert request</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs share recovery bast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>4,361</td><td align="right" class='awrnc'>7.24</td><td align="right" class='awrnc'>0.58</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>364,101</td><td align="right" class='awrc'>604.43</td><td align="right" class='awrc'>48.39</td></tr>
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>58</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>1,749</td><td align="right" class='awrc'>2.90</td><td align="right" class='awrc'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>-11</td><td align="right" class='awrnc'>-0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts dropped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts queue time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts queued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts sent</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>151</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>16,414</td><td align="right" class='awrc'>27.25</td><td align="right" class='awrc'>2.18</td></tr>
<tr><td scope="row" class='awrnc'>lmd msg send time(ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lms(s) msg send time(ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>4,342</td><td align="right" class='awrnc'>7.21</td><td align="right" class='awrnc'>0.58</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>77,946</td><td align="right" class='awrc'>129.39</td><td align="right" class='awrc'>10.36</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>283,483</td><td align="right" class='awrnc'>470.60</td><td align="right" class='awrnc'>37.67</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>142,046</td><td align="right" class='awrc'>235.80</td><td align="right" class='awrc'>18.88</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>1,281,089</td><td align="right" class='awrnc'>2,126.67</td><td align="right" class='awrnc'>170.24</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>348,236</td><td align="right" class='awrc'>578.09</td><td align="right" class='awrc'>46.28</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>1,852,933</td><td align="right" class='awrnc'>3,075.96</td><td align="right" class='awrnc'>246.24</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>7,285</td><td align="right" class='awrc'>12.09</td><td align="right" class='awrc'>0.97</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>2,848,983</td><td align="right" class='awrnc'>4,729.46</td><td align="right" class='awrnc'>378.60</td></tr>
<tr><td scope="row" class='awrc'>msgs causing lmd to send msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>msgs causing lms(s) to send msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>7,624,618,197</td><td align="right" class='awrc'>12,657,257.82</td><td align="right" class='awrc'>1,013,238.30</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>4,627</td><td align="right" class='awrnc'>7.68</td><td align="right" class='awrnc'>0.61</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>1,281,089</td><td align="right" class='awrc'>2,126.67</td><td align="right" class='awrc'>170.24</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>2,457,777</td><td align="right" class='awrnc'>4,080.04</td><td align="right" class='awrnc'>326.61</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>1,021,423</td><td align="right" class='awrc'>1,695.61</td><td align="right" class='awrc'>135.74</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>296,755</td><td align="right" class='awrnc'>492.63</td><td align="right" class='awrnc'>39.44</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>529,341</td><td align="right" class='awrc'>878.73</td><td align="right" class='awrc'>70.34</td></tr>
<tr><td scope="row" class='awrnc'>number of broadcasted resources</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of directly freed master res</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of ges deadlock detected</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of lock borrowed by LMD</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of received ODPS messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of received RBA messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of resource borrowed by LMD</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of sent ODPS messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of sent RBA messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>131,154</td><td align="right" class='awrc'>217.72</td><td align="right" class='awrc'>17.43</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>163,680</td><td align="right" class='awrnc'>271.72</td><td align="right" class='awrnc'>21.75</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>59,980</td><td align="right" class='awrc'>99.57</td><td align="right" class='awrc'>7.97</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>224,384</td><td align="right" class='awrnc'>372.49</td><td align="right" class='awrnc'>29.82</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5200"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global CR served statistics. For each statistics, total value is shown"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th></tr>
<tr><td scope="row" class='awrc'>CR Block Requests</td><td align="right" class='awrc'>76</td></tr>
<tr><td scope="row" class='awrnc'>CURRENT Block Requests</td><td align="right" class='awrnc'>1,398</td></tr>
<tr><td scope="row" class='awrc'>Data Block Requests</td><td align="right" class='awrc'>76</td></tr>
<tr><td scope="row" class='awrnc'>Undo Block Requests</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TX Block Requests</td><td align="right" class='awrc'>1,331</td></tr>
<tr><td scope="row" class='awrnc'>Current Results</td><td align="right" class='awrnc'>1,446</td></tr>
<tr><td scope="row" class='awrc'>Private results</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>Zero Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Disk Read Results</td><td align="right" class='awrc'>28</td></tr>
<tr><td scope="row" class='awrnc'>Fail Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Fairness Down Converts</td><td align="right" class='awrc'>68</td></tr>
<tr><td scope="row" class='awrnc'>Light Works</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>Flushes</td><td align="right" class='awrc'>16</td></tr>
<tr><td scope="row" class='awrnc'>Builds</td><td align="right" class='awrnc'>76</td></tr>
<tr><td scope="row" class='awrc'>Errors</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5300"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
<li class="awr"> Pins	 = CURRENT Block Pin Operations </li>
<li class="awr"> Flushes = Redo Flush before CURRENT Block Served Operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global current served statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td scope="row" class='awrc'>Pins</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Flushes</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>62.50</td><td align="right" class='awrnc'>37.50</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="7"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#5400">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#5450">Global Cache Transfer Times (us)</a></li>
<li class="awr"><a class="awr" href="#5460">Global Cache Transfer (Immediate)</a></li>
<li class="awr"><a class="awr" href="#5470">Global Cache Times (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5400"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested (Congst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer stats. CR, blocks received, % immediate, % busy, % congestion are displayed for each instance and block class"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CR">CR</th>
<th class="awrbg" colspan=" 4" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" headers="CR Blocks|Received" class='awrclb'>11,385</td><td align="right" headers="CR %|Immed" class='awrc'>97.23</td><td align="right" headers="CR %|Busy" class='awrc'>0.07</td><td align="right" headers="CR %|Congst" class='awrc'>2.70</td><td align="right" headers="Current Blocks|Received" class='awrclb'>54,321</td><td align="right" headers="Current %|Immed" class='awrc'>74.30</td><td align="right" headers="Current %|Busy" class='awrc'>25.14</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.56</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>Others</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>20</td><td align="right" headers="CR %|Immed" class='awrnc'>100.00</td><td align="right" headers="CR %|Busy" class='awrnc'>0.00</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>669</td><td align="right" headers="Current %|Immed" class='awrnc'>95.67</td><td align="right" headers="Current %|Busy" class='awrnc'>4.33</td><td align="right" headers="Current %|Congst" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" headers="CR Blocks|Received" class='awrclb'>23</td><td align="right" headers="CR %|Immed" class='awrc'>78.26</td><td align="right" headers="CR %|Busy" class='awrc'>21.74</td><td align="right" headers="CR %|Congst" class='awrc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrclb'>2</td><td align="right" headers="Current %|Immed" class='awrc'>0.00</td><td align="right" headers="Current %|Busy" class='awrc'>100.00</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>1</td><td align="right" headers="CR %|Immed" class='awrnc'>100.00</td><td align="right" headers="CR %|Busy" class='awrnc'>0.00</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|Immed" class='awrnc'>&#160;</td><td align="right" headers="Current %|Busy" class='awrnc'>&#160;</td><td align="right" headers="Current %|Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5450"></a>
<h3 class="awr">Global Cache Transfer Times (us)</h3>
<ul>
<li class="awr"> Avg Time - average time of all blocks (Immed,Busy,Congst) in us </li>
<li class="awr"> Immed, Busy, Congst -	Average times in us </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer time statistics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2311</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>2250</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>7117</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>4377</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>917</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>1052</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>460</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>3424</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>others</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>430</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>430</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>428</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>419</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>612</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2811</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>386</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>11541</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>779</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>779</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>279</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>279</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5460"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> % of Blocks Received requiring 2 or 3 hops </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CR">CR</th>
<th class="awrbg" colspan=" 3" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Blocks Lost</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>11,070</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>40,362</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>20</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>640</td><td align="right" headers="Current %|2hop" class='awrnc'>100.00</td><td align="right" headers="Current %|3hop" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>18</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>1</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrnc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5470"></a>
<h3 class="awr">Global Cache Times (Immediate)</h3>
<ul>
<li class="awr"> Blocks Lost, 2-hop and 3-hop Average times in (us) </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache times (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Lost Time</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>2250</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>2250</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>1052</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>1052</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>430</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>430</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>419</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>419</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>386</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>386</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>279</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>279</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#7800">Interconnect Latency Stats</a></li>
<li class="awr"><a class="awr" href="#7900">Interconnect Throughput by Client</a></li>
<li class="awr"><a class="awr" href="#8000">Interconnect Device Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7800"></a>
<h3 class="awr">Interconnect Ping Latency Statistics</h3>
<ul>
<li class="awr"> Ping latency of the roundtrip of a message from this instance to </li>
<li class="awr"> target instances.  </li>
<li class="awr"> The target instance is identified by an instance number. </li>
<li class="awr"> Average and standard deviation of ping latency is given in microseconds </li>
<li class="awr"> for message sizes of 500 bytes and 8K. </li>
<li class="awr"> Note that latency of a message from the instance to itself is used as </li>
<li class="awr"> control, since message latency can include wait for CPU</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IC ping latency statistics"><tr><th class="awrbg" scope="col">Target Instance</th><th class="awrbg" scope="col">500B Ping Count</th><th class="awrbg" scope="col">Avg Latency 500B msg</th><th class="awrbg" scope="col">Stddev 500B msg</th><th class="awrbg" scope="col">8K Ping Count</th><th class="awrbg" scope="col">Avg Latency 8K msg</th><th class="awrbg" scope="col">Stddev 8K msg</th></tr>
<tr><td align="right" class='awrc'>1</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>730</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>720</td><td align="right" class='awrc'>0.28</td></tr>
<tr><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>367</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>379</td><td align="right" class='awrnc'>0.17</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7900"></a>
<h3 class="awr">Interconnect Throughput by Client</h3>
<ul>
<li class="awr"> Throughput of interconnect usage by major consumers </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect throughput by client statistics"><tr><th class="awrbg" scope="col">Used By</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Receive Mbytes/sec</th></tr>
<tr><td scope="row" class='awrc'>Global Cache</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.47</td></tr>
<tr><td scope="row" class='awrnc'>Parallel Query</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DB Locks</td><td align="right" class='awrc'>1.62</td><td align="right" class='awrc'>0.39</td></tr>
<tr><td scope="row" class='awrnc'>DB Streams</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8000"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Throughput and errors of interconnect devices (at OS level) </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect device statistics. IP address, public, source, etc. are displayed for each device"><tr><th class="awrbg" scope="col">Device Name</th><th class="awrbg" scope="col">IP Address</th><th class="awrbg" scope="col">Public</th><th class="awrbg" scope="col">Source</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Send Errors</th><th class="awrbg" scope="col">Send Dropped</th><th class="awrbg" scope="col">Send Buffer Overrun</th><th class="awrbg" scope="col">Send Carrier Lost</th><th class="awrbg" scope="col">Receive Mbytes/sec</th><th class="awrbg" scope="col">Receive Errors</th><th class="awrbg" scope="col">Receive Dropped</th><th class="awrbg" scope="col">Receive Buffer Overrun</th><th class="awrbg" scope="col">Receive Frame Errors</th></tr>
<tr><td scope="row" class='awrc'>fg-priv:1</td><td class='awrc'>169.254.31.173</td><td class='awrc'>NO</td><td class='awrc'>&#160;</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8790"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Times are in seconds </li>
<li class="awr"> Affinity objects - Affinity objects mastered at the begin/end snapshot </li>
<li class="awr"> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Times are in seconds. Affinity objects - Affinity objects mastered at the begin/end snapshot. Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Remaster Op</th><th class="awrbg" scope="col">Begin Snap</th><th class="awrbg" scope="col">End Snap</th></tr>
<tr><td scope="row" class='awrc'>remaster ops</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remastered objects</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>replayed locks received</td><td align="right" class='awrc'>51,015</td><td align="right" class='awrc'>51,015.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>replayed locks sent</td><td align="right" class='awrnc'>270,897</td><td align="right" class='awrnc'>270,897.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resources cleaned</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remaster time (s)</td><td align="right" class='awrnc'>2.8</td><td align="right" class='awrnc'>2.75</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>freeze time (s)</td><td align="right" class='awrc'>0.0</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cleanup time (s)</td><td align="right" class='awrnc'>0.2</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>replay time (s)</td><td align="right" class='awrc'>0.7</td><td align="right" class='awrc'>0.71</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fixwrite time (s)</td><td align="right" class='awrnc'>0.1</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sync time (s)</td><td align="right" class='awrc'>1.7</td><td align="right" class='awrc'>1.71</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>affinity objects</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>19</td></tr>
<tr><td scope="row" class='awrc'>read-mostly objects</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>affinity objects (other inst)</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>10</td></tr>
<tr><td scope="row" class='awrc'>read-mostly objects (persistent)</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

WORKLOAD REPOSITORY REPORT (RAC)

Database Summary
~~~~~~~~~~~~~~~~
				   Database					   Snapshot Ids     Number of Instances     Number of Hosts	Report Total (minutes)
-----------------------------------------------------------------------------	-----------------   ------------------	 ------------------   ------------------------
	 Id Name      Unique Name Role		   Edition RAC CDB Block Size	   Begin      End   In Report	 Total	 In Report    Total	  DB time Elapsed time
----------- --------- ----------- ---------------- ------- --- --- ----------	-------- --------   --------- --------	 --------- --------   ----------- ------------
 3393773525 P30DB     p30db	  PRIMARY	   EE	   YES NO	 8192	      62       63	    2	     2		 2	  2	    19.07	 10.04
Database Instances Included In Report
-> Listed in order of instance number, I#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
																      Avg Active
  I# Instance  Host	  Startup	  Begin Snap Time End Snap Time   Release	  Elapsed Time(min) DB time(min) Up Time(hrs)	Sessions Platform
---- --------- ---------- --------------- --------------- --------------- --------------- ----------------- ------------ ------------ ---------- ---------------
   1 p30db1    mcracpoc1. 08-Feb-20 07:52 08-Feb-20 09:33 08-Feb-20 09:43 19.0.0.0.0		      10.03	    0.04	 1.85	    0.00 Linux x86 64-bi
   2 p30db2    mcracpoc2. 08-Feb-20 07:52 08-Feb-20 09:33 08-Feb-20 09:43 19.0.0.0.0		      10.03	   19.03	 1.85	    1.90 Linux x86 64-bi

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name		       Begin Snap Time End Snap Time
---------------------------------------- ------- ------ ------------------------------ --------------- ---------------
Top SQL Statements			    1.90 1.E+02 ADDM:3393773525_63	       08-Feb-20 09:33 08-Feb-20 09:43
Top Segments by "User I/O" and "Cluster"    1.90  90.11 ADDM:3393773525_63	       08-Feb-20 09:33 08-Feb-20 09:43
Undersized SGA				    1.90  79.88 ADDM:3393773525_63	       08-Feb-20 09:33 08-Feb-20 09:43
Global Cache Messaging			    1.90  17.95 ADDM:3393773525_63	       08-Feb-20 09:33 08-Feb-20 09:43
Global Cache Congestion 		    1.90   2.16 ADDM:3393773525_63	       08-Feb-20 09:33 08-Feb-20 09:43
Cache Sizes
-> All values are in Megabytes
-> Listed in order of instance number, I#
-> End values displayed only if different from Begin values
~~~~~~~~~~~
	 Memory Target	       Sga Target	    DB Cache	      Shared Pool	   Large Pool	       Java Pool	  Streams Pool	       PGA Target
       -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------
  I#	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End   Log Buffer
----   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   ----------
   1			      9,664		  8,000 	      1,440		     64 						      3,232		     19.4
   2			      9,664		  7,872 	      1,568		     64 						      3,232		     19.4
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~
 Avg			      9,664		  7,936 	      1,504		     64 						      3,232		     19.4
 Min			      9,664		  7,872 	      1,440		     64 						      3,232		     19.4
 Max			      9,664		  8,000 	      1,568		     64 						      3,232		     19.4

OS Statistics By Instance		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Listed in order of instance number, I#
-> End values are diplayed only if different from begin values

	      CPU		Load			  % CPU 				  Time (s)			 Memory 	    End Values
       -----------------   -------------   ----------------------------------	--------------------------------------------   ----------   -------------------------
  I#   #CPUs #Core #Sckt    Begin    End   % Busy  % Usr  % Sys  % WIO	% Idl		  Busy		 Idle	       Total	       MB   #CPU #Cor #Sck Memory (M)
----   ----- ----- -----   ------ ------   ------ ------ ------ ------ ------	-------------- -------------- --------------   ----------   ---- ---- ---- ----------
   1	   8	 4     1       .3     .8      9.7    3.0    5.4     .8	 90.3		 440.4	      4,085.9	     4,526.2	 32,156.0
   2	   8	 4     1      1.5    1.0     13.0    4.5    6.6   10.1	 87.0		 586.5	      3,916.8	     4,503.3	 32,156.0
 ~~~										~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum										       1,026.9	      8,002.6	     9,029.5
			  --------------------------------------------------------------------------------------------------------------------


Time Model				   DB/Inst: P30DB/p30db1  Snaps: 62-63

					 SQL Exec		     Hard Parse
  I#	DB time (s)	DB CPU (s)	  Ela (s)  Parse Ela (s)	Ela (s) PL/SQL Ela (s)	 Java Ela (s)	 bg time (s)	 bg CPU (s)
---- -------------- -------------- -------------- -------------- -------------- -------------- -------------- -------------- --------------
   1		2.1	       1.1	      2.0	     0.1	    0.1 	   0.4		  0.0	       117.9	      184.6
   2	    1,142.1	     246.9	  1,142.0	     0.0	    0.0 	   1.6		  0.0	       179.3	      112.4
 ~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	    1,144.2	     248.1	  1,143.9	     0.1	    0.1 	   2.1		  0.0	       297.2	      297.0
 Avg	      572.1	     124.0	    572.0	     0.0	    0.0 	   1.0		  0.0	       148.6	      148.5
 Std	      806.1	     173.8	    806.1	     0.1	    0.0 	   0.8		  0.0		43.4	       51.0
			  --------------------------------------------------------------------------------------------------------------------

Time Model - % of DB time		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]

							      % DB time 							      % bg time
		      ----------------------------------------------------------------------------------------- 		   --------------
	    % Total													 % Total
  I#	    DB time	      DB CPU   SQL Exec Ela	 Parse Ela     Hard Parse     PL/SQL Ela       Java Ela 	 bg time	   bg CPU
---- --------------   -------------- -------------- -------------- -------------- -------------- --------------   --------------   --------------
   1		0.2		53.2	       94.2	       4.0	      2.4	     0.0	    0.0 	    39.7	    156.6
   2	       99.8		21.6	      100.0	       0.0	      0.0	     0.0	    0.0 	    60.3	     62.7
 ~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
 Avg	       50.0		37.4	       97.1	       2.0	      1.2	     0.0	    0.0 	    50.0	    109.6
			  --------------------------------------------------------------------------------------------------------------------


Foreground Wait Classes -  % of Total DB timeDB/Inst: P30DB/p30db1  Snaps: 62-
-> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time

	  User I/O	 Sys I/O	 Other	      Applic	    Commit	 Network      Concurcy	      Config	   Cluster	   Admin     Scheduler	      DB CPU
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------
	      72.2	     0.0	   0.3		 0.0	       0.0	     0.0	   0.0		 0.0	      18.0	     N/A	   N/A		21.7
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes 		   DB/Inst: P30DB/p30db1  Snaps: 62-63

  I#   User I/O(s)    Sys I/O(s)      Other(s)	  Applic (s)	Commit (s)   Network (s)  Concurcy (s)	  Config (s)   Cluster (s)     Admin (s) Scheduler (s)	  DB CPU (s)	    DB time
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- --------------
   1	       0.1	     0.0	   0.4		 0.0	       0.0	     0.0	   0.0		 0.0	       0.7	     N/A	   N/A		 1.1		2.1
   2	     825.5	     0.0	   2.8		 0.0	       N/A	     0.0	   0.0		 0.1	     204.8	     N/A	   N/A	       246.9	    1,142.1
 ~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	     825.6	     0.0	   3.2		 0.0	       0.0	     0.0	   0.0		 0.1	     205.5	     0.0	   0.0	       248.1	    1,144.2
 Avg	     412.8	     0.0	   1.6		 0.0	       0.0	     0.0	   0.0		 0.0	     102.7	     N/A	   N/A	       124.0	      572.1
 Std	     583.6	     0.0	   1.7		 0.0	       N/A	     0.0	   0.0		 0.0	     144.4	     N/A	   N/A	       173.8	      806.1
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes -  % of DB time    DB/Inst: P30DB/p30db1  Snaps: 62-63
-> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time

										      % DB time
       -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
																						       % Total
  I#	    User I/O	   Sys I/O	   Other	Applic	      Commit	   Network	Concurcy	Config	     Cluster	     Admin     Scheduler	DB CPU	       DB time
----   ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------	 -------------
   1		 4.5	       1.0	    17.2	   0.0		 0.6	       0.0	     0.2	   0.1		31.3	       N/A	     N/A	  53.2		   0.2
   2		72.3	       0.0	     0.2	   0.0		 N/A	       0.0	     0.0	   0.0		17.9	       N/A	     N/A	  21.6		  99.8
 ~~~   ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~
 Avg		38.4	       0.5	     8.7	   0.0		 0.6	       0.0	     0.1	   0.1		24.6	       N/A	     N/A	  37.4
			  --------------------------------------------------------------------------------------------------------------------


Top Timed Events			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time '	       : Per-instance 'Wait Time Avg ' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			  395,342	0.0	     566.00   1.43ms	49.47	     .98ms   536.23us	  1.43ms   633.51us    2
       User I/O   db file parallel read 			   39,790	0.0	     259.90   6.53ms	22.71	    6.53ms     6.53ms	  6.53ms	       2
		  DB CPU					      N/A	N/A	     248.06		21.68						       2
       Cluster	  gc current grant 2-way			  249,713	0.0	      99.16 397.11us	 8.67	  514.91us   397.07us	632.76us   166.66us    2
       System I/O log file parallel write			    7,910	0.0	      58.55   7.40ms	 5.12	    7.44ms     7.40ms	  7.48ms    55.61us    2
       Cluster	  gc cr multi block grant			   28,550	0.0	      33.36   1.17ms	 2.92	    1.17ms     1.17ms	  1.17ms	       2
       System I/O db file parallel write			   26,176	0.0	      31.51   1.20ms	 2.75	    2.26ms     1.19ms	  3.34ms     1.52ms    2
       Cluster	  gc cr multi block mixed			   11,216	0.0	      29.90   2.67ms	 2.61	    1.75ms   836.00us	  2.67ms     1.29ms    2
       Cluster	  gc cr grant 2-way				   45,460	0.0	      19.62 431.65us	 1.72	  454.16us   431.65us	476.67us    31.83us    2
       Cluster	  gc current grant busy 			   28,382	0.0	      14.71 518.40us	 1.29	  477.70us   436.53us	518.88us    58.23us    2

   1   System I/O log file parallel write			      199	0.0	       1.49   7.48ms	70.58
       System I/O control file parallel write			      252	0.0	       1.20   4.75ms	56.72
		  DB CPU					      N/A	N/A	       1.12		53.18
       Other	  ges lms sync during dynamic remastering	       31      80.6	       1.10  35.59ms	52.32
       Other	  ASM file metadata operation			    2,195	0.0	       1.05 480.26us	49.99
       Other	  KSV master wait				    1,034      43.5	       0.95 921.96us	45.21
       Other	  Sync ASM rebalance				       54	0.0	       0.88  16.23ms	41.57
       Cluster	  gc cr block 2-way				    1,437	0.0	       0.61 422.17us	28.77
       System I/O db file parallel write			      160	0.0	       0.53   3.34ms	25.32
       System I/O control file sequential read			    3,026	0.0	       0.52 172.80us	24.80

   2   User I/O   db file sequential read			  395,137	0.0	     565.89   1.43ms	49.55
       User I/O   db file parallel read 			   39,790	0.0	     259.90   6.53ms	22.76
		  DB CPU					      N/A	N/A	     246.93		21.62
       Cluster	  gc current grant 2-way			  249,663	0.0	      99.13 397.07us	 8.68
       System I/O log file parallel write			    7,711	0.0	      57.06   7.40ms	 5.00
       Cluster	  gc cr multi block grant			   28,550	0.0	      33.36   1.17ms	 2.92
       System I/O db file parallel write			   26,016	0.0	      30.97   1.19ms	 2.71
       Cluster	  gc cr multi block mixed			   11,215	0.0	      29.90   2.67ms	 2.62
       Cluster	  gc cr grant 2-way				   45,457	0.0	      19.62 431.65us	 1.72
       Cluster	  gc current grant busy 			   28,215	0.0	      14.64 518.88us	 1.28
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Foreground Events		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Foreground Activity is captured in release 11g and above
-> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			  394,925	0.0	     565.65   1.43ms	49.44	    1.05ms   672.50us	  1.43ms   537.44us    2
       User I/O   db file parallel read 			   39,790	0.0	     259.90   6.53ms	22.76	    6.53ms     6.53ms	  6.53ms	       1
		  DB CPU					      N/A	N/A	     248.06		21.68						       2
       Cluster	  gc current grant 2-way			  249,560	0.0	      99.08 397.03us	 8.66	  514.87us   396.98us	632.76us   166.72us    2
       Cluster	  gc cr multi block grant			   28,550	0.0	      33.36   1.17ms	 2.92	    1.17ms     1.17ms	  1.17ms	       1
       Cluster	  gc cr multi block mixed			   11,208	0.0	      29.90   2.67ms	 2.61	    2.67ms     2.67ms	  2.67ms	       2
       Cluster	  gc cr grant 2-way				   45,427	0.0	      19.61 431.64us	 1.71	  398.32us   365.00us	431.65us    47.13us    2
       Cluster	  gc current grant busy 			   28,273	0.0	      14.64 517.65us	 1.28	  472.71us   427.25us	518.17us    64.28us    2
       Cluster	  gc current block busy 			   13,680	0.0	       6.27 458.56us	 0.55	    1.03ms   439.95us	  1.61ms   829.82us    2
       Other	  gcs drm freeze in enter server mode			8	0.0	       2.70 337.10ms	 0.24	  337.10ms   337.10ms	337.10ms	       1

   1		  DB CPU					      N/A	N/A	       1.12		53.18
       Cluster	  gc current block busy 			      217	0.0	       0.35   1.61ms	16.60
       Other	  reliable message					1	0.0	       0.31 314.85ms	14.93
       Cluster	  gc buffer busy release				9	0.0	       0.09  10.02ms	 4.28
       User I/O   db file sequential read			      129	0.0	       0.09 672.50us	 4.11
       Cluster	  gc current grant busy 			      161	0.0	       0.07 427.25us	 3.26
       Cluster	  gc cr block busy					7	0.0	       0.05   7.67ms	 2.54
       Cluster	  gc cr block 2-way				       92	0.0	       0.04 423.15us	 1.85
       Cluster	  gc current grant 2-way			       50	0.0	       0.03 632.76us	 1.50
       System I/O control file sequential read			      136	0.0	       0.02 157.72us	 1.02

   2   User I/O   db file sequential read			  394,796	0.0	     565.57   1.43ms	49.52
       User I/O   db file parallel read 			   39,790	0.0	     259.90   6.53ms	22.76
		  DB CPU					      N/A	N/A	     246.93		21.62
       Cluster	  gc current grant 2-way			  249,510	0.0	      99.05 396.98us	 8.67
       Cluster	  gc cr multi block grant			   28,550	0.0	      33.36   1.17ms	 2.92
       Cluster	  gc cr multi block mixed			   11,208	0.0	      29.90   2.67ms	 2.62
       Cluster	  gc cr grant 2-way				   45,426	0.0	      19.61 431.65us	 1.72
       Cluster	  gc current grant busy 			   28,112	0.0	      14.57 518.17us	 1.28
       Cluster	  gc current block busy 			   13,463	0.0	       5.92 439.95us	 0.52
       Other	  gcs drm freeze in enter server mode			8	0.0	       2.70 337.10ms	 0.24
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Background Events		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> % of bg time: % of background elapsed time
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *		  background cpu time				      N/A	N/A	     296.96		99.92						       2
       System I/O log file parallel write			    7,911	0.0	      58.55   7.40ms	19.70	    7.43ms     7.40ms	  7.46ms    42.58us    2
       System I/O db file parallel write			   26,212	0.0	      31.52   1.20ms	10.61	    2.26ms     1.19ms	  3.34ms     1.52ms    2
       System I/O control file parallel write			      532	0.0	       3.39   6.37ms	 1.14	    6.29ms     4.75ms	  7.83ms     2.18ms    2
       Other	  ges lms sync during dynamic remastering	       68      73.5	       2.12  31.14ms	 0.71	   31.50ms    27.41ms	 35.59ms     5.78ms    2
       User I/O   Disk file Mirror Read 			    1,644	0.0	       1.77   1.08ms	 0.60	    1.06ms   375.37us	  1.73ms      .96ms    2
       Other	  Sync ASM rebalance				      108	0.0	       1.70  15.78ms	 0.57	   15.78ms    15.33ms	 16.23ms   634.55us    2
       Other	  IMR slave acknowledgement msg 		    3,615	0.0	       1.58 437.07us	 0.53	  437.24us   232.75us	641.72us   289.18us    2
       Other	  ASM file metadata operation			    3,052	0.0	       1.21 394.86us	 0.41	  328.19us   176.12us	480.26us   215.06us    2
       Other	  KSV master wait				    1,491      60.6	       1.00 671.92us	 0.34	  514.08us   106.20us	921.96us   576.83us    2

   1		  background cpu time				      N/A	N/A	     184.56	       156.58
       System I/O log file parallel write			      200	0.0	       1.49   7.46ms	 1.27
       System I/O control file parallel write			      252	0.0	       1.20   4.75ms	 1.01
       Other	  ges lms sync during dynamic remastering	       31      80.6	       1.10  35.59ms	 0.94
       Other	  ASM file metadata operation			    2,195	0.0	       1.05 480.26us	 0.89
       Other	  KSV master wait				    1,034      43.5	       0.95 921.96us	 0.81
       Other	  Sync ASM rebalance				       54	0.0	       0.88  16.23ms	 0.74
       Cluster	  gc cr block 2-way				    1,345	0.0	       0.57 422.10us	 0.48
       System I/O db file parallel write			      160	0.0	       0.53   3.34ms	 0.45
       System I/O control file sequential read			    2,890	0.0	       0.50 173.51us	 0.43

   2		  background cpu time				      N/A	N/A	     112.39		62.68
       System I/O log file parallel write			    7,711	0.0	      57.06   7.40ms	31.82
       System I/O db file parallel write			   26,052	0.0	      30.99   1.19ms	17.28
       System I/O control file parallel write			      280	0.0	       2.19   7.83ms	 1.22
       User I/O   Disk file Mirror Read 			      847	0.0	       1.47   1.73ms	 0.82
       Other	  IMR slave acknowledgement msg 		    1,806	0.0	       1.16 641.72us	 0.65
       Other	  ges lms sync during dynamic remastering	       37      67.6	       1.01  27.41ms	 0.57
       Other	  Sync ASM rebalance				       54	0.0	       0.83  15.33ms	 0.46
       User I/O   ASM IO for non-blocking poll			   28,125	0.0	       0.62  21.92us	 0.34
       System I/O control file sequential read			    2,619	0.0	       0.47 179.58us	 0.26
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
User I/O   db file sequential read			   394,925	 0.0	      565.65   1.43ms	 49.44	     1.05ms   672.50us	   1.43ms   537.44us
User I/O   db file parallel read			    39,790	 0.0	      259.90   6.53ms	 22.71	     6.53ms	6.53ms	   6.53ms
Cluster    gc current grant 2-way			   249,560	 0.0	       99.08 397.03us	  8.66	   514.87us   396.98us	 632.76us   166.72us
Cluster    gc cr multi block grant			    28,550	 0.0	       33.36   1.17ms	  2.92	     1.17ms	1.17ms	   1.17ms
Cluster    gc cr multi block mixed			    11,208	 0.0	       29.90   2.67ms	  2.61	     2.67ms	2.67ms	   2.67ms
Cluster    gc cr grant 2-way				    45,427	 0.0	       19.61 431.64us	  1.71	   398.32us   365.00us	 431.65us    47.13us
Cluster    gc current grant busy			    28,273	 0.0	       14.64 517.65us	  1.28	   472.71us   427.25us	 518.17us    64.28us
Cluster    gc current block busy			    13,680	 0.0		6.27 458.56us	  0.55	     1.03ms   439.95us	   1.61ms   829.82us
Other	   gcs drm freeze in enter server mode			 8	 0.0		2.70 337.10ms	  0.24	   337.10ms   337.10ms	 337.10ms
Cluster    gc current block 2-way			     1,871	 0.0		0.90 480.33us	  0.08	   477.88us   475.33us	 480.44us     3.62us
Cluster    gc current grant congested			       210	 0.0		0.71   3.40ms	  0.06	     3.40ms	3.40ms	   3.40ms
Cluster    gc cr block 2-way				       461	 0.0		0.53   1.14ms	  0.05	   873.52us   423.15us	   1.32ms   636.91us
Other	   reliable message					10	 0.0		0.35  34.63ms	  0.03	   159.17ms	3.49ms	 314.85ms   220.17ms
Cluster    gc cr grant congested				57	 0.0		0.32   5.57ms	  0.03	     5.57ms	5.57ms	   5.57ms
Cluster    gc buffer busy release				 9	 0.0		0.09  10.02ms	  0.01	    10.02ms    10.02ms	  10.02ms
Configurat undo segment extension				 4     100.0		0.07  17.68ms	  0.01	    17.68ms    17.68ms	  17.68ms
Cluster    gc cr block busy					 7	 0.0		0.05   7.67ms	  0.00	     7.67ms	7.67ms	   7.67ms
User I/O   Disk file Mirror Read				36	 0.0		0.03 889.53us	  0.00	     6.39ms   202.44us	  12.57ms     8.75ms
Other	   enq: CR - block range reuse ckpt			24	 0.0		0.03   1.26ms	  0.00	     1.26ms	1.26ms	   1.26ms
System I/O control file sequential read 		       144	 0.0		0.02 163.38us	  0.00	   208.67us   157.72us	 259.63us    72.06us
Cluster    gc current block congested				 4	 0.0		0.02   5.50ms	  0.00	     5.50ms	5.50ms	   5.50ms
Other	   KJC: Wait for msg sends to complete		       154	 0.0		0.02 137.54us	  0.00	   310.61us   117.47us	 503.75us   273.14us
Other	   IPC send completion sync				24	 0.0		0.02 634.75us	  0.00	   634.75us   628.75us	 640.75us     8.49us
Commit	   log file sync					 2	 0.0		0.01   6.03ms	  0.00	     6.03ms	6.03ms	   6.03ms
Other	   enq: WF - contention 				18	 0.0		0.01 606.11us	  0.00	   606.11us   606.11us	 606.11us
Other	   enq: US - contention 				15	 0.0		0.01 648.47us	  0.00	   648.47us   648.47us	 648.47us
Other	   PX Deq: Slave Session Stats				14	 0.0		0.01 541.50us	  0.00	   541.50us   383.71us	 699.29us   223.14us
Applicatio SQL*Net break/reset to client		       120	 0.0		0.01  57.74us	  0.00	    57.74us    57.74us	  57.74us
Other	   PX Deq: reap credit				       223     100.0		0.01  30.21us	  0.00	    30.15us    29.72us	  30.59us   612.11ns
Other	   CSS initialization					 2	 0.0		0.01   3.36ms	  0.00	     3.36ms	3.36ms	   3.36ms
Cluster    gc cr block congested				 2	 0.0		0.01   3.26ms	  0.00	     3.26ms	3.26ms	   3.26ms
Other	   enq: PS - contention 				 8	 0.0		0.01 791.13us	  0.00	   791.13us   686.50us	 895.75us   147.96us
Concurrenc row cache lock					 6     100.0		0.01 852.33us	  0.00	   852.33us   852.33us	 852.33us
Other	   latch: gc element					 6	 0.0		0.00 779.50us	  0.00	   779.50us   779.50us	 779.50us
Other	   enq: FB - contention 				 7	 0.0		0.00 491.86us	  0.00	   491.86us   491.86us	 491.86us
Other	   latch: gcs resource hash				12	 0.0		0.00 250.92us	  0.00	   250.92us   250.92us	 250.92us
Other	   DLM cross inst call completion			 7	 0.0		0.00 377.00us	  0.00	   377.00us   377.00us	 377.00us
Cluster    gc cr grant busy					 4	 0.0		0.00 629.75us	  0.00	   843.50us   416.00us	   1.27ms   604.58us
Cluster    gc current multi block request			 3	 0.0		0.00 696.00us	  0.00	   696.00us   696.00us	 696.00us
Configurat enq: HW - contention 				 3	 0.0		0.00 682.67us	  0.00	   682.67us   682.67us	 682.67us
Cluster    gc index operation					 1	 0.0		0.00   1.94ms	  0.00	     1.94ms	1.94ms	   1.94ms
Other	   PGA memory operation 			       119	 0.0		0.00  15.08us	  0.00	    64.61us    14.23us	 115.00us    71.26us
Other	   CSS operation: action				 2	 0.0		0.00 805.00us	  0.00	   805.00us   805.00us	 805.00us
Other	   CSS operation: query 				 6	 0.0		0.00 184.83us	  0.00	   184.83us   184.83us	 184.83us
User I/O   Disk file operations I/O				11	 0.0		0.00  82.64us	  0.00	    82.64us    82.64us	  82.64us
Network    SQL*Net message to client			       135	 0.0		0.00   5.29us	  0.00	     5.61us	5.23us	   6.00us   547.44ns
Other	   enq: AF - task serialization 			 1	 0.0		0.00 707.00us	  0.00	   707.00us   707.00us	 707.00us
Other	   ges ipc enter server mode				57	 0.0		0.00   6.49us	  0.00	     6.49us	6.49us	   6.49us
Cluster    gc current split					 1	 0.0		0.00 283.00us	  0.00	   283.00us   283.00us	 283.00us
Other	   ges enter server mode				29	 0.0		0.00   8.34us	  0.00	     8.34us	8.34us	   8.34us
Other	   latch: object queue header operation 		 2	 0.0		0.00 120.00us	  0.00	   120.00us   120.00us	 120.00us
Other	   latch free						 4	 0.0		0.00  38.00us	  0.00	    38.00us    38.00us	  38.00us
Concurrenc latch: cache buffers chains				 1	 0.0		0.00  96.00us	  0.00	    96.00us    96.00us	  96.00us
Network    IPC group service call				 5	 0.0		0.00  11.00us	  0.00	    15.88us	7.75us	  24.00us    11.49us
Other	   latch: cache buffers lru chain			 3	 0.0		0.00  10.33us	  0.00	    10.33us    10.33us	  10.33us
User I/O   ASM IO for non-blocking poll 			 1	 0.0		0.00  27.00us	  0.00	    27.00us    27.00us	  27.00us
Other	   AWR Flush						 2	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us
Other	   asynch descriptor resize				 1     100.0		0.00   9.00us	  0.00	     9.00us	9.00us	   9.00us
Other	   ges resource directory to be unfrozen		 1	 0.0		0.00   4.00us	  0.00	     4.00us	4.00us	   4.00us
Idle	   watchdog main loop				     1,604	 0.0	    4,803.00 2994.39m	419.77	  2994.40ms  2988.81ms	3000.00ms     7.91ms
Foreground Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   SQL*Net message from client			       135	 0.0	      600.05 4444.82m	 52.44	  2419.84ms   632.09us	4839.06ms  3421.28ms
Idle	   PX Deq: Execution Msg				42	 0.0		0.95  22.51ms	  0.08	    22.51ms    20.74ms	  24.28ms     2.50ms
Idle	   PX Deq Credit: send blkd				38	 0.0		0.04   1.07ms	  0.00	     1.07ms	1.07ms	   1.07ms
Idle	   PX Deq: Msg Fragment 				48	 0.0		0.03 591.52us	  0.00	   591.52us   528.04us	 655.00us    89.77us
			  --------------------------------------------------------------------------------------------------------------------

Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
System I/O log file parallel write			     7,911	 0.0	       58.55   7.40ms	  0.20	     7.43ms	7.40ms	   7.46ms    42.58us
System I/O db file parallel write			    26,212	 0.0	       31.52   1.20ms	  0.11	     2.26ms	1.19ms	   3.34ms     1.52ms
System I/O control file parallel write			       532	 0.0		3.39   6.37ms	  0.01	     6.29ms	4.75ms	   7.83ms     2.18ms
Other	   ges lms sync during dynamic remastering		68	73.5		2.12  31.14ms	  0.01	    31.50ms    27.41ms	  35.59ms     5.78ms
User I/O   Disk file Mirror Read			     1,644	 0.0		1.77   1.08ms	  0.01	     1.06ms   375.37us	   1.73ms      .96ms
Other	   Sync ASM rebalance				       108	 0.0		1.70  15.78ms	  0.01	    15.78ms    15.33ms	  16.23ms   634.55us
Other	   IMR slave acknowledgement msg		     3,615	 0.0		1.58 437.07us	  0.01	   437.24us   232.75us	 641.72us   289.18us
Other	   ASM file metadata operation			     3,052	 0.0		1.21 394.86us	  0.00	   328.19us   176.12us	 480.26us   215.06us
Other	   KSV master wait				     1,491	60.6		1.00 671.92us	  0.00	   514.08us   106.20us	 921.96us   576.83us
System I/O control file sequential read 		     5,509	 0.0		0.97 176.40us	  0.00	   176.55us   173.51us	 179.58us     4.29us
Other	   gcs log flush sync				       366	 0.0		0.69   1.88ms	  0.00	     1.94ms	1.56ms	   2.32ms   532.87us
Cluster    gc cr block 2-way				     1,495	 0.0		0.65 436.04us	  0.00	   491.53us   422.10us	 560.95us    98.18us
User I/O   ASM IO for non-blocking poll 		    28,408	 0.0		0.62  21.91us	  0.00	    21.78us    21.65us	  21.92us   188.41ns
Other	   PX Deq: reap credit				    21,235     100.0		0.53  25.15us	  0.00	    25.15us    25.06us	  25.25us   132.75ns
Cluster    gc current block busy			       273	 0.0		0.44   1.63ms	  0.00	     1.16ms   597.96us	   1.72ms   796.38us
User I/O   db file sequential read			       418	 0.0		0.35 830.64us	  0.00	   626.20us   304.92us	 947.47us   454.35us
Cluster    gc current block 2-way			       726	 0.0		0.32 445.63us	  0.00	   627.09us   436.72us	 817.47us   269.23us
Other	   AQ: RAC AQ Network				    12,027     100.0		0.31  25.94us	  0.00	    25.94us    25.80us	  26.09us   203.07ns
Other	   CGS wait for IPC msg 			    13,003     100.0		0.30  22.87us	  0.00	    22.87us    22.21us	  23.53us   930.82ns
Other	   DFS lock handle				       643     100.0		0.29 453.10us	  0.00	   453.50us   448.88us	 458.11us     6.52us
Other	   latch free					     1,175	 0.0		0.25 212.20us	  0.00	   212.27us   208.06us	 216.47us     5.95us
Other	   KJC: Wait for msg sends to complete		     2,269	98.5		0.21  92.79us	  0.00	   406.49us    88.30us	 724.69us   450.00us
Cluster    gc cr block busy					23	 0.0		0.19   8.21ms	  0.00	     7.90ms	6.44ms	   9.35ms     2.06ms
Other	   LGWR any worker group				41	 0.0		0.17   4.16ms	  0.00	     4.16ms	4.16ms	   4.16ms
System I/O log file sequential read			       338	 0.0		0.16 481.76us	  0.00	   245.08us	7.00us	 483.17us   336.70us
Other	   DLM cross inst call completion		       240	 0.0		0.14 586.63us	  0.00	   593.53us   572.29us	 614.78us    30.04us
Other	   reliable message					52	 0.0		0.14   2.71ms	  0.00	     2.59ms	2.33ms	   2.86ms   376.92us
Other	   LGWR all worker groups				21	 0.0		0.14   6.44ms	  0.00	     6.44ms	6.44ms	   6.44ms
Other	   enq: CR - block range reuse ckpt		       174	 0.0		0.10 582.54us	  0.00	   575.37us   533.75us	 616.98us    58.85us
Other	   gcs remastering wait for read latch			 7	 0.0		0.10  14.36ms	  0.00	    10.06ms    18.50us	  20.10ms    14.20ms
Other	   oracle thread bootstrap				 5	 0.0		0.10  20.01ms	  0.00	    19.96ms    19.71ms	  20.20ms   348.01us
System I/O db file async I/O submit			    13,206	 0.0		0.09   6.90us	  0.00	     7.70us	6.89us	   8.52us     1.15us
Cluster    gc buffer busy release				12	 0.0		0.09   7.49ms	  0.00	     7.49ms	7.49ms	   7.49ms
Cluster    gc current grant 2-way			       155	 0.0		0.08 532.86us	  0.00	   532.86us   532.86us	 532.86us
Cluster    gc current grant busy			       106	 0.0		0.08 717.03us	  0.00	   702.13us   685.33us	 718.93us    23.76us
Network    IPC group service call			       926	 0.0		0.06  64.22us	  0.00	    64.23us    62.50us	  65.95us     2.44us
User I/O   Disk file operations I/O			       331	 0.0		0.06 176.09us	  0.00	   130.67us    73.50us	 187.84us    80.85us
User I/O   direct path write temp				12	 0.0		0.05   4.38ms	  0.00	     4.38ms	4.38ms	   4.38ms
Other	   LGWR worker group ordering				18	 0.0		0.04   2.44ms	  0.00	     2.44ms	2.44ms	   2.44ms
Other	   ksxr poll remote instances			     1,714     100.0		0.04  23.77us	  0.00	    23.77us    23.01us	  24.53us     1.08us
Other	   CSS operation: data query				37	 0.0		0.04   1.08ms	  0.00	     1.09ms	 .98ms	   1.20ms   154.85us
Concurrenc library cache lock					61	 0.0		0.04 645.05us	  0.00	   646.97us   641.88us	 652.05us     7.19us
Concurrenc cursor: pin S wait on X				 3	 0.0		0.04  13.08ms	  0.00	    13.08ms    13.08ms	  13.08ms
Other	   ges inquiry response 				57	 0.0		0.04 673.70us	  0.00	   633.90us   549.87us	 717.93us   118.84us
Other	   enq: CF - contention 				61	70.5		0.04 618.69us	  0.00	   619.50us   615.70us	 623.29us     5.37us
Other	   CSS operation: data update				42	 0.0		0.03 807.29us	  0.00	   807.29us   801.86us	 812.71us     7.68us
Other	   PX Deq: Join ACK					14	 0.0		0.03   2.42ms	  0.00	     2.42ms	2.37ms	   2.47ms    70.21us
Other	   IPC send completion sync			     1,213	99.3		0.03  26.61us	  0.00	    26.61us    25.77us	  27.45us     1.18us
Concurrenc row cache lock					30     100.0		0.03   1.05ms	  0.00	      .97ms   753.00us	   1.18ms   303.85us
Cluster    gc cr disk read					66	 0.0		0.03 458.21us	  0.00	   464.42us   423.42us	 505.43us    57.99us
Concurrenc library cache pin					55	 0.0		0.03 546.98us	  0.00	   543.18us   524.18us	 562.18us    26.87us
Applicatio enq: RO - fast object reuse				12	 0.0		0.03   2.13ms	  0.00	     1.77ms   689.50us	   2.85ms     1.53ms
Cluster    gc cr grant 2-way					33	 0.0		0.01 445.39us	  0.00	   486.14us   439.77us	 532.50us    65.57us
Other	   enq: WF - contention 				20	 0.0		0.01 680.60us	  0.00	   822.42us   664.84us	    .98ms   222.85us
Other	   enq: PS - contention 				16	37.5		0.01 788.25us	  0.00	   800.70us   750.90us	 850.50us    70.43us
Concurrenc libcache interrupt action by LCK		     1,652	 0.0		0.01   6.23us	  0.00	     6.21us	5.83us	   6.59us   537.22ns
Cluster    gc cr multi block mixed				 8	 0.0		0.01 919.13us	  0.00	   883.50us   836.00us	 931.00us    67.18us
Other	   os thread creation					 5	 0.0		0.01   1.44ms	  0.00	     1.44ms	1.43ms	   1.45ms    14.38us
Other	   enq: CO - master slave det				10     100.0		0.01 711.40us	  0.00	   711.40us   711.40us	 711.40us
Other	   latch: gcs resource hash				51	 0.0		0.01 139.24us	  0.00	   140.06us    98.04us	 182.08us    59.43us
Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Other	   latch: cache buffers lru chain			35	 0.0		0.01 200.83us	  0.00	   200.83us   200.83us	 200.83us
Other	   enq: DW - contention 				 6     100.0		0.01   1.13ms	  0.00	     1.13ms	 .99ms	   1.28ms   209.30us
Other	   wait list latch free 				 6	 0.0		0.01   1.12ms	  0.00	     1.12ms	1.12ms	   1.12ms
Cluster    gc cr grant busy					 3	 0.0		0.01   1.94ms	  0.00	     1.94ms	1.94ms	   1.94ms
User I/O   direct path write					 1	 0.0		0.00   4.74ms	  0.00	     4.74ms	4.74ms	   4.74ms
Cluster    gc current multi block request			 8	 0.0		0.00 563.88us	  0.00	   563.88us   563.88us	 563.88us
Other	   PGA memory operation 			       219	 0.0		0.00  18.24us	  0.00	    18.77us    16.40us	  21.13us     3.34us
Cluster    gc buffer busy acquire				 1	 0.0		0.00   3.78ms	  0.00	     3.78ms	3.78ms	   3.78ms
Other	   enq: SM -  contention				 4	 0.0		0.00 855.00us	  0.00	   939.33us   770.67us	   1.11ms   238.53us
Commit	   log file sync					 1	 0.0		0.00   3.29ms	  0.00	     3.29ms	3.29ms	   3.29ms
Other	   latch: gc element					 9	 0.0		0.00 347.44us	  0.00	   347.44us   347.44us	 347.44us
Other	   enq: TA - contention 				 4	 0.0		0.00 703.00us	  0.00	   703.00us   547.50us	 858.50us   219.91us
Cluster    gc index operation					 1	 0.0		0.00   2.34ms	  0.00	     2.34ms	2.34ms	   2.34ms
Other	   PX Deq: Slave Session Stats				14	 0.0		0.00 146.93us	  0.00	   146.93us   114.14us	 179.71us    46.37us
Cluster    gc cr block congested				 1	 0.0		0.00   1.81ms	  0.00	     1.81ms	1.81ms	   1.81ms
User I/O   db file scattered read				 7	 0.0		0.00 249.29us	  0.00	   249.29us   249.29us	 249.29us
Other	   enq: FB - contention 				 4	 0.0		0.00 420.00us	  0.00	   420.00us   420.00us	 420.00us
Other	   enq: TK - Auto Task Serialization			 2     100.0		0.00 732.00us	  0.00	   732.00us   563.00us	 901.00us   239.00us
Concurrenc latch: cache buffers chains				30	 0.0		0.00  46.87us	  0.00	    46.87us    46.87us	  46.87us
Other	   enq: TD - KTF dump entries				 2	 0.0		0.00 592.00us	  0.00	   592.00us   467.00us	 717.00us   176.78us
Other	   enq: US - contention 				 2	 0.0		0.00 547.50us	  0.00	   547.50us   547.50us	 547.50us
Other	   PX Deq: Signal ACK EXT				14	 0.0		0.00  68.21us	  0.00	    68.21us    52.14us	  84.29us    22.73us
Configurat enq: HW - contention 				 2	 0.0		0.00 477.00us	  0.00	   477.00us   477.00us	 477.00us
Other	   LGWR wait for redo copy				10	 0.0		0.00  77.70us	  0.00	    80.94us    76.89us	  85.00us     5.74us
Other	   GCR CSS group update 				38	 0.0		0.00  14.18us	  0.00	    14.18us    12.79us	  15.58us     1.97us
Other	   CSS operation: action				 2	 0.0		0.00 268.00us	  0.00	   268.00us   268.00us	 268.00us
Other	   GCR CSS group query					37	 0.0		0.00  14.24us	  0.00	    14.22us    13.39us	  15.05us     1.18us
Cluster    gc current split					 1	 0.0		0.00 478.00us	  0.00	   478.00us   478.00us	 478.00us
Other	   latch: ges resource hash list			 5	 0.0		0.00  81.80us	  0.00	    74.08us    35.50us	 112.67us    54.57us
Other	   ges enter server mode				15	 0.0		0.00  14.47us	  0.00	    13.78us    10.33us	  17.22us     4.87us
Cluster    gc quiesce						 1	 0.0		0.00 195.00us	  0.00	   195.00us   195.00us	 195.00us
Other	   latch: object queue header operation 		 1	 0.0		0.00 175.00us	  0.00	   175.00us   175.00us	 175.00us
Other	   ges ipc enter server mode				26	 0.0		0.00   6.27us	  0.00	     6.27us	6.27us	   6.27us
Other	   latch: messages					 2	 0.0		0.00  53.00us	  0.00	    53.00us    13.00us	  93.00us    56.57us
Other	   undo_retention publish retry 			 4	 0.0		0.00  25.75us	  0.00	    25.75us    25.50us	  26.00us   353.55ns
Concurrenc buffer busy waits					 3	 0.0		0.00  25.67us	  0.00	    22.25us    12.00us	  32.50us    14.50us
Other	   asynch descriptor resize				 7     100.0		0.00   6.86us	  0.00	     6.83us	6.67us	   7.00us   235.70ns
Concurrenc row cache mutex					 1	 0.0		0.00  35.00us	  0.00	    35.00us    35.00us	  35.00us
Other	   ges2 LMON to wake up LMD - mrcvr			 2	 0.0		0.00  15.00us	  0.00	    15.00us    15.00us	  15.00us
Other	   AWR Flush						 2	 0.0		0.00  11.00us	  0.00	    11.00us    11.00us	  11.00us
Network    SQL*Net message to client				 5	 0.0		0.00   4.00us	  0.00	     4.00us	4.00us	   4.00us      .00ns
Other	   ges resource directory to be unfrozen		 4	 0.0		0.00   4.25us	  0.00	     4.25us	4.00us	   4.50us   353.55ns
Other	   latch: checkpoint queue latch			 1	 0.0		0.00  12.00us	  0.00	    12.00us    12.00us	  12.00us
Other	   ASM background starting				 1	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us
Idle	   rdbms ipc message				    42,084	53.7	   27,569.98 655.12ms	 92.77	   749.68ms   481.98ms	1017.38ms   378.58ms
Idle	   PX Idle Wait 					14	 0.0	   20,478.60 1462.76	 68.91	  1462.76 s  1462.54 s	1462.97 s   306.07ms
Idle	   Space Manager: slave idle wait		     5,058	 0.0	   19,205.32 3797.02m	 64.62	  3797.06ms  3784.32ms	3809.80ms    18.01ms
Idle	   class slave wait				    15,031	79.7	    8,117.71 540.06ms	 27.32	   539.88ms   529.96ms	 549.80ms    14.03ms
Idle	   wait for unread message on broadcast cha	     1,848     100.0	    3,615.05 1956.20m	 12.16	  1956.20ms  1956.18ms	1956.21ms    17.86us
Idle	   ges remote message				    34,843	 0.0	    2,408.22  69.12ms	  8.10	    69.12ms    68.61ms	  69.63ms   718.57us
Idle	   GCR sleep					     8,024	 0.0	    2,407.70 300.06ms	  8.10	   300.06ms   300.05ms	 300.07ms    13.43us
Idle	   pmon timer					       802     100.0	    2,405.93 2999.92m	  8.10	  2999.92ms  2999.91ms	2999.93ms    12.65us
Idle	   DIAG idle wait				    15,024	83.3	    2,405.42 160.11ms	  8.09	   160.11ms   159.54ms	 160.67ms   796.01us
Idle	   LGWR worker group idle			       178	 0.0	    2,403.20  13.50 s	  8.09	   303.42 s  6836.37ms	 600.00 s   419.43 s
Idle	   gcs yield cpu				    81,449	98.5	    2,400.07  29.47ms	  8.08	    29.47ms    29.19ms	  29.74ms   388.32us
Idle	   gcs remote message				   820,979	 0.0	    2,284.42   2.78ms	  7.69	     3.74ms	1.81ms	   5.67ms     2.73ms
Idle	   smon timer						 9	33.3	    1,516.95 168.55 s	  5.10	   201.06 s   103.54 s	 298.57 s   137.91 s
Idle	   Data Guard: Gap Manager				22	 0.0	    1,320.01  60.00 s	  4.44	    60.00 s    60.00 s	  60.00 s    79.45us
Idle	   Streams AQ: waiting for time management		 0	 N/A	    1,210.00		  4.07
Idle	   ASM cluster membership changes		       689	83.2	    1,207.23 1752.15m	  4.06	  1752.15ms  1750.35ms	1753.95ms     2.55ms
Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   ASM background timer 			     2,360	 0.0	    1,206.97 511.43ms	  4.06	   565.21ms   390.86ms	 739.56ms   246.57ms
Idle	   OFS idle					       402     100.0	    1,206.01 3000.03m	  4.06	  3000.03ms  3000.01ms	3000.04ms    18.56us
Idle	   REPL Capture/Apply: RAC AQ qmn coordinat		20     100.0	    1,204.50  60.22 s	  4.05	    60.22 s    60.22 s	  60.23 s     1.35ms
Idle	   heartbeat redo informer			     1,204	 0.0	    1,204.15 1000.13m	  4.05	  1000.13ms  1000.13ms	1000.13ms   170.32ns
Idle	   SCM slave idle				    12,069	 0.0	    1,204.13  99.77ms	  4.05	    99.77ms    99.58ms	  99.96ms   266.90us
Idle	   lreg timer					       400     100.3	    1,204.00 3009.99m	  4.05	  3010.03ms  3002.50ms	3017.56ms    10.65ms
Idle	   pman timer					       401     100.0	    1,202.88 2999.71m	  4.05	  2999.71ms  2999.70ms	2999.71ms     5.92us
Idle	   PING 					     1,080	20.4	    1,200.74 1111.79m	  4.04	  1113.81ms  1066.37ms	1161.25ms    67.09ms
Idle	   shared server idle wait				 0	 N/A	    1,200.23		  4.04
Idle	   dispatcher timer					20     100.0	    1,200.11  60.01 s	  4.04	    60.01 s    60.01 s	  60.01 s    36.70us
Idle	   AQPC idle						40     100.0	    1,200.02  30.00 s	  4.04	    30.00 s    30.00 s	  30.00 s   111.19us
Idle	   Data Guard: Timer					 2	 0.0	    1,200.00 600.00 s	  4.04	   600.00 s   600.00 s	 600.00 s   103.24us
Idle	   Streams AQ: qmn coordinator idle wait		84	 0.0	    1,176.04  14.00 s	  3.96	    14.00 s    14.00 s	  14.00 s     5.84us
Idle	   Streams AQ: qmn slave idle wait			42	 0.0	    1,176.04  28.00 s	  3.96	    28.00 s    28.00 s	  28.00 s    33.57us
Idle	   PX Deq: Execute Reply				76	 0.0		0.10   1.36ms	  0.00	     1.54ms	1.32ms	   1.75ms   304.56us
Idle	   RMA: IPC0 completion sync			     1,315	 0.0		0.03  19.25us	  0.00	    19.25us    19.21us	  19.28us    49.74ns
Idle	   PX Deq Credit: send blkd				24	 0.0		0.02 907.63us	  0.00	   907.63us   907.63us	 907.63us
Idle	   PX Deq: Parse Reply					14	 0.0		0.01 881.71us	  0.00	   881.71us   757.57us	   1.01ms   175.56us
Idle	   SQL*Net message from client				 6	 0.0		0.01   1.01ms	  0.00	   842.75us   331.50us	   1.35ms   723.02us
			  --------------------------------------------------------------------------------------------------------------------

Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
AQ: RAC AQ Network	     12K					   11.1     68.6     17.4      1.9	0.8	 0.2   0.0(3)	0.0(2)	 0.0(1)
ASM IO for non-blocking p  28.5K				   2.7	   72.2     13.5      4.9      4.5	1.6	 0.4	  0.1	0.0(5)		  0.0(1)
ASM background starting        1				 100.0
ASM file metadata operati   3051			  0.7	  17.8	    5.1     47.2      8.8      2.6	5.4	 2.4	  0.2	   3.9	    3.5      2.2	       0.1	0.1
AWR Flush		       4				  75.0		    25.0
CGS wait for IPC msg	     13K					   27.0     56.3     14.6      1.5	0.5	 0.1   0.0(5)	0.0(2)
CSS initialization	       2						    50.0								    50.0
CSS operation: action	       4					   25.0 						 75.0
CSS operation: data query     37											29.7	 21.6	  40.5	    8.1
CSS operation: data updat     42											 4.8	 83.3	  11.9
CSS operation: query	       6				  83.3									  16.7
DFS lock handle 	     693								       0.3	1.2	75.6	 20.6	   2.0	    0.1      0.1
DLM cross inst call compl    245						     9.8      0.8      0.4	0.8	33.5	 46.1	   7.8	    0.8
Disk file Mirror Read	    1678								       0.4     26.9	18.2	 26.2	  23.5	    1.8      1.7      0.7      0.4	0.1	 0.1
Disk file operations I/O     343				   0.9	    3.5      5.2      2.3     29.2     45.5	12.2	  0.9	   0.3
GCR CSS group query	      37					   78.4     18.9      2.7
GCR CSS group update	      38					   71.1     23.7      5.3
IMR slave acknowledgement   3609					   14.7     12.4      5.2     25.2	8.3	16.5	  6.6	   9.6	    0.7      0.5      0.2      0.1   0.0(1)	 0.1
IPC group service call	     931				   0.5	    0.6     24.6     42.2     26.3	4.5	 0.9	  0.3
IPC send completion sync    1237					    5.2     72.9     17.5      1.4	1.1	 1.0	  0.6	   0.4
KJC: Wait for msg sends t   2423					   63.4     13.1      5.6      3.5	2.3	 5.9	  5.2	   0.7	    0.1      0.1
KSV master wait 	    1489				   0.1	   20.6     26.3     11.2     12.5	8.3	 0.9	  0.3	   7.4	    6.9      5.4			0.1
LGWR all worker groups	      19														   47.4     10.5     42.1
LGWR any worker group	      51												  3.9	   9.8	   56.9     21.6      3.9      3.9
LGWR wait for redo copy       10				  40.0	   10.0 	     10.0     10.0     20.0	10.0
LGWR worker group orderin     20				   5.0	    5.0      5.0					  5.0	  10.0	   50.0     20.0
PGA memory operation	     337				  28.8	   52.5     12.2      3.9      0.9	1.2	 0.3	  0.3
PX Deq: Join ACK	      14											14.3	 28.6	  14.3	   14.3     28.6
PX Deq: Signal ACK EXT	      14						    64.3      7.1     14.3	7.1	 7.1
PX Deq: Slave Session Sta     28					    7.1     25.0      3.6     10.7	3.6	28.6	 10.7	  10.7
PX Deq: reap credit	   21.5K					   11.1     69.7     16.7      1.6	0.6	 0.2	  0.1	0.0(1)			   0.0(1)
SQL*Net break/reset to cl    120				  39.2	    8.3      0.8      3.3     39.2	8.3	 0.8
SQL*Net message to client    140			  2.9	  92.1	    2.9      2.1
Sync ASM rebalance	     108				   1.9	   40.7 	      1.9		4.6	 8.3	  9.3				     12.0      9.3	0.9	10.2	  0.9
asynch descriptor resize       8				  62.5	   37.5
buffer busy waits	       3					   33.3     33.3     33.3
control file parallel wri    532														   30.5     64.7      2.1      2.1	0.6				    0.2
control file sequential r   5651					   11.7     16.0      1.6      7.7     42.7	17.5	  2.4	   0.3	 0.0(1) 		    0.0(1)
cursor: pin S wait on X        3															    33.3	      66.7
db file async I/O submit   13.2K			  2.4	  91.8	    2.3      1.3      1.5      0.5	0.2	 0.1   0.0(3)
db file parallel read	   39.8K									     0.0(2)	 2.3	  6.3	   9.8	    6.1     61.7      7.8      4.8	1.1	 0.1
db file parallel write	   26.2K					    0.2      2.3     10.7      6.7     11.6	13.8	 18.4	  20.9	   11.8      2.2      1.0      0.4   0.0(6)   0.0(4)
db file scattered read	       8									       37.5	50.0	 12.5
db file sequential read   395.1K								   0.0(18)	1.7	55.4	 12.2	   0.6	   27.3      2.3      0.2      0.2 0.0(132)   0.0(2)
direct path write	       1															   100.0
direct path write temp	      12														   33.3     66.7
enq: AF - task serializat      1												100.0
enq: CF - contention	      61											24.6	 73.8	   1.6
enq: CO - master slave de     10											10.0	 80.0	  10.0
enq: CR - block range reu    235										0.4	48.1	 39.6	   6.8	    3.4      1.7
enq: DW - contention	       6												 33.3	  66.7
enq: FB - contention	       8											75.0	 25.0
enq: HW - contention	       2												100.0
enq: PS - contention	      24								       4.2	4.2	16.7	 41.7	  33.3
enq: RO - fast object reu     12											16.7	 50.0	   8.3	    8.3     16.7
enq: SM -  contention	       4											25.0	 25.0	  50.0
enq: TA - contention	       5											40.0	 40.0	  20.0
enq: TD - KTF dump entrie      3											33.3	 66.7
enq: TK - Auto Task Seria      2												100.0
enq: US - contention	      17											35.3	 52.9	  11.8
Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
enq: WF - contention	      38										2.6	50.0	 36.8	   7.9	    2.6
gc buffer busy acquire	       1														  100.0
gc buffer busy release	      16														   12.5     37.5     37.5     12.5
gc cr block 2-way	    1947										2.5	67.1	 16.8	  11.0	    2.5      0.2
gc cr block busy	      29															    72.4     24.1      3.4
gc cr block congested	       3													  33.3	   66.7
gc cr disk read 	      66								       1.5     10.6	66.7	 13.6	   7.6
gc cr grant 2-way	   45.5K							      0.1      0.2     12.2	65.0	 20.1	   1.7	    0.4      0.2   0.0(6)
gc cr grant busy	       4												 25.0	  50.0	   25.0
gc cr grant congested	      57													  15.8	   56.1     24.6	       1.8		 1.8
gc cr multi block grant    28.5K							   0.0(3)   0.0(2)	0.1	 3.5	 42.0	  49.6	    3.9      0.7      0.1   0.0(1)
gc cr multi block mixed    11.2K								    0.0(1)   0.0(4)	 0.6	 13.8	  55.7	   19.4      9.9      0.5   0.0(3)	      0.0(1)		0.0(4)	    0.1
gc current block 2-way	    2607							   0.0(1)      0.1	2.6	73.1	 21.6	   2.2	    0.3      0.1
gc current block busy	   13.9K							      0.1      0.1	2.4	76.3	 18.7	   1.7	    0.2      0.2      0.1   0.0(5)   0.0(4)
gc current block congeste      4														   25.0     75.0
gc current grant 2-way	  249.5K						  0.0(1)      0.1      0.2     21.6	60.1	 16.3	   1.2	    0.3      0.1  0.0(21)   0.0(1)					 0.0(1)
gc current grant busy	   28.3K						  0.0(4)   0.0(2)  0.0(14)	2.7	68.1	 25.5	   3.1	    0.3      0.2   0.0(6)		      0.0(1)
gc current grant congeste    210													  11.4	   62.4     25.7      0.5
gc current multi block re     11											36.4	 63.6
gc current split	       2										       100.0
gc index operation	       2													  50.0	   50.0
gc quiesce		       1									      100.0
gcs drm freeze in enter s      8																						 100.0
gcs log flush sync	     335					    7.8      6.9      4.5      5.4     11.9	11.0	  8.7	  11.0	   15.2     13.7      2.7      1.2
gcs remastering wait for       7					   28.6     14.3	      28.6		14.3									14.3
ges enter server mode	      44			 25.0	  59.1	    4.5 	      9.1      2.3
ges inquiry response	      59										1.7	35.6	 55.9	   5.1	    1.7
ges ipc enter server mode     83				  88.0	    8.4      2.4      1.2
ges lms sync during dynam     68								       1.5	2.9	 4.4	  5.9	   5.9	    5.9 	     11.8     38.2		23.5
ges resource directory to      5				 100.0
ges2 LMON to wake up LMD       2					   50.0     50.0
ksxr poll remote instance   1747					    8.2     82.1      7.1      2.2	0.3	 0.1		   0.1
latch free		    1178					    2.2      0.7      1.2     21.2     52.2	17.7	  4.5	   0.3
latch: cache buffers chai     31					   64.5 	      6.5     22.6	3.2	 3.2
latch: cache buffers lru      38					   31.6 	      2.6     18.4     26.3	10.5	 10.5
latch: checkpoint queue l      1					  100.0
latch: gc element	      15					   20.0 		       6.7	6.7	26.7	 33.3	   6.7
latch: gcs resource hash      63					   30.2     14.3     12.7     19.0	3.2	11.1	  6.3	   3.2
latch: ges resource hash       6					   33.3 	     16.7     33.3     16.7
latch: messages 	       2					   50.0 		      50.0
latch: object queue heade      3							     33.3	       66.7
libcache interrupt action   1650			  7.8	  82.9	    7.1      1.0      0.6      0.3	0.2		  0.1
library cache lock	      60						     1.7				56.7	 33.3	   3.3	    3.3      1.7
library cache pin	      54											55.6	 40.7	   3.7
log file parallel write     7905														    3.1     74.5     19.3      2.3	0.5	 0.2
log file sequential read     338				   0.3			     16.3      7.4     27.2	16.3	 10.9	  21.0	    0.6
log file sync		       3													  33.3	   33.3 	     33.3
oracle thread bootstrap        5																	     100.0
os thread creation	       5													 100.0
reliable message	      79												 11.4	  12.7	   69.6      3.8	       1.3				   1.3
row cache lock		      34												 52.9	  47.1
row cache mutex 	       1							    100.0
undo segment extension	       4						    25.0									     25.0     25.0     25.0
undo_retention publish re      4				  25.0	   25.0 	     50.0
wait list latch free	       6													 100.0
			  --------------------------------------------------------------------------------------------------------------------


System Statistics			   DB/Inst: P30DB/p30db1  Snaps: 62-63

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	       Reads	    Reads	Writes	   Size (k)	 Changes	Calls	     Execs	 Parses     Logons	   Txns
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   5,738,459	      245	 1,092	      4,058	  13,405	   56	     2,178	  1,575 	10	     54
   2	   3,389,562	2,206,194      354,758	    391,122	 993,133	  173	    52,125	  1,302 	10	  7,525
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   9,128,021	2,206,439      355,850	    395,180    1,006,538	  229	    54,303	  2,877 	20	  7,579
 Avg	   4,564,011	1,103,220      177,925	    197,590	 503,269	  115	    27,152	  1,439 	10	  3,790
 Std	   1,660,921	1,559,841      250,080	    273,695	 692,772	   83	    35,318	    193 	 0	  5,283
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Second		   DB/Inst: P30DB/p30db1  Snaps: 62-63

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	     Reads/s	  Reads/s     Writes/s	 Size (k)/s    Changes/s      Calls/s	   Execs/s     Parses/s   Logons/s	 Txns/s
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	    9,526.23	      0.4	   1.8		6.7	    22.3	  0.1	       3.6	    2.6       0.02	    0.1
   2	    5,626.85	  3,662.4	 588.9	      649.3	 1,648.7	  0.3	      86.5	    2.2       0.02	   12.5
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   15,153.08	  3,662.8	 590.7	      656.0	 1,670.9	  0.4	      90.1	    4.8       0.03	   12.6
 Avg	    7,576.54	  1,831.4	 295.4	      328.0	   835.5	  0.2	      45.1	    2.4       0.02	    6.3
 Std	    2,757.28	  2,589.4	 415.1	      454.3	 1,150.0	  0.1	      58.6	    0.3       0.00	    8.8
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Transaction	   DB/Inst: P30DB/p30db1  Snaps: 62-63

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	    Reads/tx	 Reads/tx    Writes/tx	Size (k)/tx   Changes/tx     Calls/tx	  Execs/tx    Parses/tx  Logons/tx
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ----------
   1	  106,267.76	      4.5	  20.2	       75.2	   248.2	  1.0	      40.3	   29.2       0.19
   2	      450.44	    293.2	  47.1	       52.0	   132.0	  0.0	       6.9	    0.2       0.00
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~
 Avg	   53,359.10	    148.9	  33.7	       63.6	   190.1	  0.5	      23.6	   14.7       0.09
			  --------------------------------------------------------------------------------------------------------------------


SysStat and Global Messaging  - RAC	   DB/Inst: P30DB/p30db1  Snaps: 62-63

	   Blocks Received	      Blocks Served	       CPU (seconds)						Messages				       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir	  Lost	  Failure
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	       272	 1,450	      55,040	  11,465	  N/A	       0	3,431,458	   2,678      1,526,095      52,732	   7,357      59,239	     0		0
   2	    54,999	11,443		 253	   1,446	  N/A	       0	1,576,777	   1,749      3,160,338     273,542	 348,236   1,852,933	    71		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	    55,271	12,893	      55,293	  12,911	    0	       0	5,008,235	   4,427      4,686,433     326,274	 355,593   1,912,172	    71		0
 Avg	    27,636	 6,447	      27,647	   6,456	  N/A	       0	2,504,118	   2,214      2,343,217     163,137	 177,797     956,086	    36		0
 Std	    38,698	 7,066	      38,740	   7,085	  N/A	       0	1,311,458	     657      1,155,584     156,136	 241,038   1,268,333	    50		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Sec)- RACDB/Inst: P30DB/p30db1  Snaps: 62-63

     Blocks Received Per Second   Blocks Served per Second   CPU seconds per Second				     Messages Per Second				  GC Blks     GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent    GES Sent  Sent Direct  Sent Indir	Lost/s	   Fail/s
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	      0.45	  2.41	       91.37	   19.03	  N/A	    0.00	 5,696.45	    4.45       2,533.42       87.54	    12.2       98.34	     0		0
   2	     91.30	 19.00		0.42	    2.40	  N/A	    0.00	 2,617.53	    2.90       5,246.32      454.09	   578.1    3,075.96	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	     91.75	 21.40	       91.79	   21.43	 0.00	    0.00	 8,313.98	    7.35       7,779.74      541.63	   590.3    3,174.30	     0		0
 Avg	     45.88	 10.70	       45.90	   10.72	  N/A	    0.00	 4,156.99	    3.67       3,889.87      270.82	   295.2    1,587.15	     0		0
 Std	     64.24	 11.73	       64.31	   11.76	  N/A	    0.00	 2,177.13	    1.09       1,918.31      259.19	   400.1    2,105.50	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Tx)- RAC DB/Inst: P30DB/p30db1  Snaps: 62-63

	Blocks Received per Tx	      Blocks Served	    CPU (seconds) per Tx				Messages per Transaction			       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   ------	--------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir   Lost/T	 Fail/Tx
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   ------	--------
   1	      5.04	 26.85	    1,019.26	  212.31	  N/A	    0.00	63,545.52	   49.59      28,261.02      976.52	   136.2    1,097.02	  0.0	     0.0
   2	      7.31	  1.52		0.03	    0.19	  N/A	    0.00	   209.54	    0.23	 419.98       36.35	    46.3      246.24	  0.0	     0.0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~	~~~~~~~~
 Avg	      6.17	 14.19	      509.65	  106.25	  N/A	    0.00	31,877.53	   24.91      14,340.50      506.43	    91.3      671.63	  0.0	     0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Efficiency Percentages	   DB/Inst: P30DB/p30db1  Snaps: 62-63

	       Buffer Access
       -----------------------------
  I#	   Local % Remote %   Disk %	Locality %
----   ----------- -------- --------   -----------
   1	     99.97     0.03	0.00	     60.92
   2	     32.95     1.96    65.09	     35.34
			  --------------------------------------------------------------------------------------------------------------------

Global Latency Characteristics		   DB/Inst: P30DB/p30db1  Snaps: 62-63

				CR Blocks				  CU Blocks
		 ---------------------------------------   ---------------------------------------
	GE Get	   Receive     Build	 Flush Log Flush     Receive	   Pin	   Flush Log Flush
  I# Time (us)	 Time (us) Time (us) Time (us) CR Srvd %   Time (us) Time (us) Time (us) CU Srvd %
---- ---------	 --------- --------- --------- ---------   --------- --------- --------- ---------
   1	    51	       497	 839	  9231	     0.1	1544	     0	   12609       0.0
   2	    40	      2307	 132	  6875	     1.1	 911	     0	   10417       9.5
			  --------------------------------------------------------------------------------------------------------------------

Global Messaging Statistics		   DB/Inst: P30DB/p30db1  Snaps: 62-63

	     Queue Time (us)	    Process Time (us)	      % Messages Sent
       --------------------------   -----------------	--------------------------
  I#	   Sent  on ksxp Received   GCS msgs GES msgs	  Direct Indirect Flow Ctr
----   -------- -------- --------   -------- --------	-------- -------- --------
   1	     38     1177	8	  19	   20	    11.0     88.9      0.1
   2	   8282     1930	4	  15	   26	    15.8     84.0      0.2
			  --------------------------------------------------------------------------------------------------------------------


Global CR Server Statistics		   DB/Inst: P30DB/p30db1  Snaps: 62-63

			   Block Requests					   Results			 Fairness      Light		   Total
       -----------------------------------------------------   ----------------------------------------------	----------   --------	--------------------------
  I#		CR	    CU	      Data     Undo	  TX	   Current Private	 Zero  Dsk Rd	 Fail	 Down Conv	Works	   Flushes     Builds Erro
----   ----------- ----------- ----------- -------- --------   ----------- ------- ---------- ------- -------	----------   --------	---------- ---------- ----
   1	    11,420	    82	    11,420	  1	  22	    11,458	 0	    3	   38	    0	    11,370	6,810		13     11,422	 0
   2		76	 1,398		76	  0    1,331	     1,446	 0	    0	   28	    0		68	    2		16	   76	 0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~ ~~~~~~~ ~~~~~~~~~~ ~~~~~~~ ~~~~~~~	~~~~~~~~~~   ~~~~~~~~	~~~~~~~~~~ ~~~~~~~~~~ ~~~~
 Sum	    11,496	 1,480	    11,496	  1    1,353	    12,904	 0	    3	   66	    0	    11,438	6,812		29     11,498	 0
 Avg	     5,748	   740	     5,748	  1	 677	     6,452	 0	    2	   33	    0	     5,719	3,406		15	5,749	 0
 Std	     8,021	   931	     8,021	  1	 926	     7,080	 0	    2	    7	    0	     7,992	4,814		 2	8,023	 0
			  --------------------------------------------------------------------------------------------------------------------

Global Current Server Statistics	   DB/Inst: P30DB/p30db1  Snaps: 62-63

  I#	    Pins % <100us   % <1ms  % <10ms % <100ms	% <1s	% <10s	   Flushes % <100us   % <1ms  % <10ms % <100ms	  % <1s   % <10s
---- ----------- -------- -------- -------- -------- -------- -------- ----------- -------- -------- -------- -------- -------- --------
   1	       1     0.00   100.00     0.00	0.00	 0.00	  0.00		23     0.00	4.35	43.48	 52.17	   0.00     0.00
   2	       1   100.00     0.00     0.00	0.00	 0.00	  0.00		24     0.00	0.00	62.50	 37.50	   0.00     0.00
 ~~~ ~~~~~~~~~~~						       ~~~~~~~~~~~
 Sum	       2								47
 Avg	       1								24
 Std	       0								 1
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Transfer Statistics	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested  (Cngst) - Block Transfer impacted by Remote System Load
-> All - average time of All blocks (Immed,Busy,Cngst) in us
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block		       CR Blocks		       Current Blocks		       CR Avg Time (us) 	  Current Avg Time (us)
---------   ------------   --------------------------------   --------------------------------	 ---------------------------   ---------------------------
Dest  Src   Class	      Received %Immed  %Busy %Cngst	 Received %Immed  %Busy %Cngst	    All  Immed	 Busy  Cngst	  All  Immed   Busy  Cngst
---- ----   ------------   ----------- ------ ------ ------   ----------- ------ ------ ------	 ------ ------ ------ ------   ------ ------ ------ ------
   1	2   undo header 	 1,331	 99.3	 0.7	0.0		0    N/A    N/A    N/A	    455    414	 6440	 N/A	  N/A	 N/A	N/A    N/A
	2   data block		    76	 90.8	 9.2	0.0	      210   15.2   84.8    0.0	   1262    612	 7666	 N/A	 1842	 707   2047    N/A
	2   others		    39	100.0	 0.0	0.0	       45   53.3   46.7    0.0	    446    446	  N/A	 N/A	  411	 424	395    N/A

   2	1   data block		11,385	 97.2	 0.1	2.7	   54,321   74.3   25.1    0.6	   2311   2250	 7117	4377	  917	1052	460   3424
	1   others		    20	100.0	 0.0	0.0	      669   95.7    4.3    0.0	    430    430	  N/A	 N/A	  428	 419	612    N/A
	1   undo header 	    23	 78.3	21.7	0.0		2    0.0  100.0    0.0	   2811    386	11541	 N/A	  779	 N/A	779    N/A
	1   undo block		     1	100.0	 0.0	0.0		0    N/A    N/A    N/A	    279    279	  N/A	 N/A	  N/A	 N/A	N/A    N/A
			  --------------------------------------------------------------------------------------------------------------------

Global Cache Transfer (Immediate)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block	     Lost Blocks	 Immediate CR Blocks	     Immediate Current Blocks	   Immed CR Avg Time (us)   Immed Current Avg Time (us)
---------   ------------   --------------   ----------------------------   ----------------------------   -----------------------   -----------------------
Dest  Src   Class	     Count Time(u      Received  %2-hop   %3-hop      Received	%2-hop	 %3-hop     Total   2-hop   3-hop     Total   2-hop   3-hop
---- ----   ------------   ------- ------   ----------- ------- --------   ----------- ------- --------   ------- ------- -------   ------- ------- -------
   1	2   undo header 	 0    N/A	  1,322   100.0      0.0	     0	   N/A	    N/A       414     414     N/A	N/A	N/A	N/A
	2   data block		 0    N/A	     69   100.0      0.0	    32	 100.0	    0.0       612     612     N/A	707	707	N/A
	2   others		 0    N/A	     39   100.0      0.0	    24	 100.0	    0.0       446     446     N/A	424	424	N/A
	2   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A

   2	1   data block		 0    N/A	 11,070   100.0      0.0	40,362	 100.0	    0.0      2250    2250     N/A      1052    1052	N/A
	1   others		 0    N/A	     20   100.0      0.0	   640	 100.0	    0.0       430     430     N/A	419	419	N/A
	1   undo header 	 0    N/A	     18   100.0      0.0	     0	   N/A	    N/A       386     386     N/A	N/A	N/A	N/A
	1   undo block		 0    N/A	      1   100.0      0.0	     0	   N/A	    N/A       279     279     N/A	N/A	N/A	N/A
			  --------------------------------------------------------------------------------------------------------------------


Cluster Interconnect			   DB/Inst: P30DB/p30db1  Snaps: 62-63

					 Begin					  End (if different from Begin)
		  --------------------------------------------------   --------------------------------------------------
  I# NAME	  IP Address	  Pub Source			       IP Address      Pub Source
---- ----------   --------------- --- ------------------------------   --------------- --- ------------------------------
   1 fg-priv:1	  169.254.22.248  N
   2 fg-priv:1	  169.254.31.173  N
			  --------------------------------------------------------------------------------------------------------------------

Ping Statistics 			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Latency of the roundtrip of a message from  Src Instance to the Target instances

 Instance#	       500 bytes		    8 Kbytes
-----------   --------------------------   --------------------------
		    Ping    Avg      Std	 Ping	 Avg	  Std
 Src Target	   Count Time(us)    Dev	Count Time(us)	  Dev
---- ------   ---------- -------- ------   ---------- -------- ------
   1	  1	      55      474    0.2	   60	   460	  0.1
	  2	      55      729    0.3	   60	   726	  0.3

   2	  1	      55      730    0.3	   60	   720	  0.3
	  2	      55      367    0.2	   60	   379	  0.2
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics		   DB/Inst: P30DB/p30db1  Snaps: 62-63

				   Sent (MB)							     Received (MB)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	    535.0      281.5	    0.1      237.5	  1.0	    14.8	993.8	     4.5	1.1	 976.0	      1.0	11.2
   2	    993.6	 4.3	    1.1      976.0	  1.0	    11.2	534.5	   281.1	0.1	 237.4	      1.0	14.8
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	  1,528.6      285.8	    1.2    1,213.5	  2.0	    26.0      1,528.3	   285.6	1.2    1,213.5	      2.0	26.0
 Avg	    764.3      142.9	    0.6      606.7	  1.0	    13.0	764.2	   142.8	0.6	 606.7	      1.0	13.0
 Std	    324.3      196.0	    0.7      522.2	  0.0	     2.6	324.8	   195.6	0.7	 522.3	      0.0	 2.6
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 62-63

				  Sent (MB/s)							    Received (MB/s)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	      0.9	 0.5	    0.0        0.4	  0.0	     0.0	  1.6	     0.0	0.0	   1.6	      0.0	 0.0
   2	      1.6	 0.0	    0.0        1.6	  0.0	     0.0	  0.9	     0.5	0.0	   0.4	      0.0	 0.0
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	      2.5	 0.5	    0.0        2.0	  0.0	     0.0	  2.5	     0.5	0.0	   2.0	      0.0	 0.0
 Avg	      1.3	 0.2	    0.0        1.0	  0.0	     0.0	  1.3	     0.2	0.0	   1.0	      0.0	 0.0
 Std	      0.5	 0.3	    0.0        0.9	  0.0	     0.0	  0.5	     0.3	0.0	   0.9	      0.0	 0.0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> null means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	    902.5    1,836,375	     0	     0	     0	     0	       4,498.7	  1,765,387	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	    709.4      986,004	     0	     0	     0	     0	       1,124.0	  1,207,563	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.1	   205	     0	     0	     0	     0		   0.0		268	  0	  0	  0	  0
       fg-pub:1   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      2.0	 3,056	     0	     0	     0	     0		   1.2	      3,099	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     23.5	12,061	     0	     0	     0	     0		  23.5	     12,061	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	  4,503.6    1,859,375	     0	     0	     0	     0		 883.1	  1,821,565	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	  1,109.5      656,664	     0	     0	     0	     0		 712.7	  1,295,031	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	   319	     0	     0	     0	     0		   0.1		261	  0	  0	  0	  0
       fg-pub:1   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      2.0	 3,068	     0	     0	     0	     0		   1.2	      3,108	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      8.8      130,856	     0	     0	     0	     0		   8.8	    130,856	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							  7,261.5    5,487,983	     0	     0	     0	     0	       7,253.3	  6,239,199	  0	  0	  0	  0
 Avg							    427.1      322,823	     0	     0	     0	     0		 426.7	    367,012	  0	  0	  0	  0
 Std							  1,110.5      636,328	     0	     0	     0	     0	       1,109.5	    675,344	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> Blank  means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	      1.5	 3,049	     0	     0	     0	     0		   7.5	      2,931	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	      1.2	 1,637	     0	     0	     0	     0		   1.9	      2,005	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:1   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	    20	     0	     0	     0	     0		   0.0		 20	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	      7.5	 3,087	     0	     0	     0	     0		   1.5	      3,024	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	      1.8	 1,090	     0	     0	     0	     0		   1.2	      2,150	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	     1	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:1   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   217	     0	     0	     0	     0		   0.0		217	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							     12.1	 9,110	     0	     0	     0	     0		  12.0	     10,357	  0	  0	  0	  0
 Avg							      0.7	   536	     0	     0	     0	     0		   0.7		609	  0	  0	  0	  0
 Std							      1.8	 1,056	     0	     0	     0	     0		   1.8	      1,121	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Dynamic Remastering Statistics		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Affinity Objects - Affinity objects remastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot

				   Counts per Ops					 Time per Ops (seconds) 			 Affinity Objects		  Read Mostly Objects
		---------------------------------------------------   -----------------------------------------------------------   -------------------------	--------------------------------------
     Remaster	  Remastered Replay Locks Replay Locks	  Resources														    Begin
  I#	  Ops	     Objects	 Received	  Sent	    Cleaned    Remaster    Freeze   Cleanup    Replay  Fixwrite      Sync	   Begin	  End	       Begin (persistent)	   End
---- --------	------------ ------------ ------------ ------------   --------- --------- --------- --------- --------- ---------   ------------ ------------	------------ ------------ ------------
   1	    1		20.0	270,897.0     51,015.0		0.0	   2.74      0.00      0.17	 0.74	   0.19      1.61	      17	   10		   1		0	     1
   2	    1		20.0	 51,015.0    270,897.0		0.0	   2.75      0.01      0.20	 0.71	   0.10      1.71	       9	   19		   1		0	     1
 ~~~ ~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~   ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~   ~~~~~~~~~~~~ ~~~~~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~
 Avg	    1		20.0	160,956.0    160,956.0		0.0	   2.75      0.01      0.19	 0.73	   0.15      1.66	      13	   15		   1		0	     1
 Max				270,897.0    270,897.0		0.0	   2.75      0.01      0.20	 0.74	   0.19      1.71	      17	   19		   1		0	     1
			  --------------------------------------------------------------------------------------------------------------------


SQL ordered by Elapsed Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Captured SQL account for   99.3% of Total DB Time (s):	    1,144
-> Captured PL/SQL account for	 99.8% of Total DB Time (s):	       1,144

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	  Elapsed (s)	  CPU (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	DB time   DB CPU  IO Wait     Gets    Reads  Cluster	Execs
-------------	------------- ----------- ----------- -------------- ------------ ------------ ----------- ------------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	       637.51	   125.12      461.40	     543,691	  324,702      470,799	    119.92	  7,473 	   0.09        0.02	   0.06 	  72.8	       43.5	    63.0	0.02	   55.7     50.4      0.6      6.0     14.7	57.8	 13.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

078ab5pdvxx3c	       568.95	   118.82      426.51	   1,792,446	1,172,802	     1	     91.23	      1 	 568.95      118.82	 426.51    1,792,446.0	1,172,802.0	     1.0       91.23	   49.7     47.9      0.5     19.6     53.2	44.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0sy7x6xzjg2yy	       568.94	   127.21      397.47	   1,564,773	1,031,832	     1	    113.40	      1 	 568.94      127.21	 397.47    1,564,773.0	1,031,832.0	     1.0      113.40	   49.7     51.3      0.5     17.1     46.8	54.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bhdvtsvjhgvrh	       491.71	   113.27      361.93	   2,804,817	1,878,864	42,416	     84.48	 42,415 	   0.01        0.00	   0.01 	  66.1	       44.3	     1.0	0.00	   43.0     45.7      0.4     30.7     85.2	40.7	 78.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

6hnhqahphpk8n		 1.90	     0.03	 0.00		   0		0	    12	      0.00	     12 	   0.16        0.00	   0.00 	   0.0		0.0	     1.0	0.00	    0.2      0.0      0.0      0.0	0.0	 0.0	  0.0
select free_mb from v$asm_diskgroup_stat where name=:1

491wcfyfd6wc1		 1.89	     0.84	 0.08	      19,346	      113	     1	      0.65	      1 	   1.89        0.84	   0.08       19,346.0	      113.0	     1.0	0.65	    0.2      0.3      0.0      0.2	0.0	 0.3	  0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

5pj6mtazkhmdd		 0.70	     0.56	 0.12	     264,188	       38	     2	      0.02	      2 	   0.35        0.28	   0.06      132,094.0	       19.0	     1.0	0.01	    0.1      0.2      0.0      2.9	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

3kqrku32p6sfn		 0.69	     0.67	 0.00	     263,542		2	     0	      0.00	      1 	   0.69        0.67	   0.00      263,542.0		2.0	     0.0	0.00	    0.1      0.3      0.0      2.9	0.0	 0.0	  0.0
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ

f7xnvp44nukp7		 0.57	     0.04	 0.01		 802	       13	   181	      0.53	    181 	   0.00        0.00	   0.00 	   4.4		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.3	  0.3
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

fhf8upax5cxsz		 0.55	     0.43	 0.07	       4,676	       59	     2	      0.01	      2 	   0.28        0.21	   0.03        2,338.0	       29.5	     1.0	0.00	    0.0      0.2      0.0      0.1	0.0	 0.0	  0.0
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by CPU Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Captured SQL account for   97.3% of Total CPU Time (s):	       248
-> Captured PL/SQL account for	100.2% of Total CPU Time (s):		  248

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	    CPU (s)   Elapsed (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs       CPU (s)	Elapsed (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	 DB CPU  DB time  IO Wait     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
0sy7x6xzjg2yy	     127.21	   568.94      397.47	   1,564,773	1,031,832	     1	    113.40	      1        127.21	     568.94	 397.47    1,564,773.0	1,031,832.0	     1.0      113.40	   51.3     49.7     48.0     17.1     46.8	54.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

35dumc2tpr9dv	     125.12	   637.51      461.40	     543,691	  324,702      470,799	    119.92	  7,473 	 0.02	       0.09	   0.06 	  72.8	       43.5	    63.0	0.02	   50.4     55.7     55.7      6.0     14.7	57.8	 13.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

078ab5pdvxx3c	     118.82	   568.95      426.51	   1,792,446	1,172,802	     1	     91.23	      1        118.82	     568.95	 426.51    1,792,446.0	1,172,802.0	     1.0       91.23	   47.9     49.7     51.5     19.6     53.2	44.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bhdvtsvjhgvrh	     113.27	   491.71      361.93	   2,804,817	1,878,864	42,416	     84.48	 42,415 	 0.00	       0.01	   0.01 	  66.1	       44.3	     1.0	0.00	   45.7     43.0     43.7     30.7     85.2	40.7	 78.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

491wcfyfd6wc1	       0.84	     1.89	 0.08	      19,346	      113	     1	      0.65	      1 	 0.84	       1.89	   0.08       19,346.0	      113.0	     1.0	0.65	    0.3      0.2      0.0      0.2	0.0	 0.3	  0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

3kqrku32p6sfn	       0.67	     0.69	 0.00	     263,542		2	     0	      0.00	      1 	 0.67	       0.69	   0.00      263,542.0		2.0	     0.0	0.00	    0.3      0.1      0.0      2.9	0.0	 0.0	  0.0
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ

5pj6mtazkhmdd	       0.56	     0.70	 0.12	     264,188	       38	     2	      0.02	      2 	 0.28	       0.35	   0.06      132,094.0	       19.0	     1.0	0.01	    0.2      0.1      0.0      2.9	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

fhf8upax5cxsz	       0.43	     0.55	 0.07	       4,676	       59	     2	      0.01	      2 	 0.21	       0.28	   0.03        2,338.0	       29.5	     1.0	0.00	    0.2      0.0      0.0      0.1	0.0	 0.0	  0.0
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

0w26sk6t6gq98	       0.38	     0.48	 0.06	       4,342	       53	     2	      0.00	      2 	 0.19	       0.24	   0.03        2,171.0	       26.5	     1.0	0.00	    0.2      0.0      0.0      0.0	0.0	 0.0	  0.0
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

9yv5dwv8k0awg	       0.35	     0.45	 0.06	       4,224	       53	     2	      0.00	      2 	 0.18	       0.23	   0.03        2,112.0	       26.5	     1.0	0.00	    0.1      0.0      0.0      0.0	0.0	 0.0	  0.0
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by User I/O Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Captured SQL account for   99.4% of Total User I/O Wait Time (s):		 828
-> Captured PL/SQL account for	 99.5% of Total User I/O Wait Time (s): 	    828

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	 IOWait (s)   Elapsed (s)     CPU (s)		Gets	    Reads	  Rows Cluster (s)	  Execs    IOWait (s)	Elapsed (s)	CPU (s) 	  Gets	      Reads	    Rows Cluster (s)	IO Wait  DB time   DB CPU     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	     461.40	   637.51      125.12	     543,691	  324,702      470,799	    119.92	  7,473 	 0.06	       0.09	   0.02 	  72.8	       43.5	    63.0	0.02	   55.7     55.7     50.4      6.0     14.7	57.8	 13.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

078ab5pdvxx3c	     426.51	   568.95      118.82	   1,792,446	1,172,802	     1	     91.23	      1        426.51	     568.95	 118.82    1,792,446.0	1,172,802.0	     1.0       91.23	   51.5     49.7     47.9     19.6     53.2	44.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0sy7x6xzjg2yy	     397.47	   568.94      127.21	   1,564,773	1,031,832	     1	    113.40	      1        397.47	     568.94	 127.21    1,564,773.0	1,031,832.0	     1.0      113.40	   48.0     49.7     51.3     17.1     46.8	54.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bhdvtsvjhgvrh	     361.93	   491.71      113.27	   2,804,817	1,878,864	42,416	     84.48	 42,415 	 0.01	       0.01	   0.00 	  66.1	       44.3	     1.0	0.00	   43.7     43.0     45.7     30.7     85.2	40.7	 78.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

5pj6mtazkhmdd	       0.12	     0.70	 0.56	     264,188	       38	     2	      0.02	      2 	 0.06	       0.35	   0.28      132,094.0	       19.0	     1.0	0.01	    0.0      0.1      0.2      2.9	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

491wcfyfd6wc1	       0.08	     1.89	 0.84	      19,346	      113	     1	      0.65	      1 	 0.08	       1.89	   0.84       19,346.0	      113.0	     1.0	0.65	    0.0      0.2      0.3      0.2	0.0	 0.3	  0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

fhf8upax5cxsz	       0.07	     0.55	 0.43	       4,676	       59	     2	      0.01	      2 	 0.03	       0.28	   0.21        2,338.0	       29.5	     1.0	0.00	    0.0      0.0      0.2      0.1	0.0	 0.0	  0.0
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

0w26sk6t6gq98	       0.06	     0.48	 0.38	       4,342	       53	     2	      0.00	      2 	 0.03	       0.24	   0.19        2,171.0	       26.5	     1.0	0.00	    0.0      0.0      0.2      0.0	0.0	 0.0	  0.0
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

9yv5dwv8k0awg	       0.06	     0.45	 0.35	       4,224	       53	     2	      0.00	      2 	 0.03	       0.23	   0.18        2,112.0	       26.5	     1.0	0.00	    0.0      0.0      0.1      0.0	0.0	 0.0	  0.0
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

3kqrku32p6sfn	       0.00	     0.69	 0.67	     263,542		2	     0	      0.00	      1 	 0.00	       0.69	   0.67      263,542.0		2.0	     0.0	0.00	    0.0      0.1      0.3      2.9	0.0	 0.0	  0.0
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Gets (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Total Buffer Gets:	    9,128,021
-> Captured SQL account for   40.0% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id		  Gets	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	    Gets	Reads	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	   Gets    Reads  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	-------------- ------------ ------------- ----------- ----------- ------------ ----------- ------------   -------------- ------------ ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     2,804,817	  1,878,864	   491.71      113.27	   361.93	42,416	     84.48	 42,415 	    66.1	 44.3	       0.01	   0.00        0.01	     1.0	0.00	   30.7     85.2     43.0     45.7     43.7	40.7	 78.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

078ab5pdvxx3c	     1,792,446	  1,172,802	   568.95      118.82	   426.51	     1	     91.23	      1      1,792,446.0  1,172,802.0	     568.95	 118.82      426.51	     1.0       91.23	   19.6     53.2     49.7     47.9     51.5	44.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0sy7x6xzjg2yy	     1,564,773	  1,031,832	   568.94      127.21	   397.47	     1	    113.40	      1      1,564,773.0  1,031,832.0	     568.94	 127.21      397.47	     1.0      113.40	   17.1     46.8     49.7     51.3     48.0	54.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

35dumc2tpr9dv	       543,691	    324,702	   637.51      125.12	   461.40      470,799	    119.92	  7,473 	    72.8	 43.5	       0.09	   0.02        0.06	    63.0	0.02	    6.0     14.7     55.7     50.4     55.7	57.8	 13.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

5pj6mtazkhmdd	       264,188		 38	     0.70	 0.56	     0.12	     2	      0.02	      2        132,094.0	 19.0	       0.35	   0.28        0.06	     1.0	0.01	    2.9      0.0      0.1      0.2	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

3kqrku32p6sfn	       263,542		  2	     0.69	 0.67	     0.00	     0	      0.00	      1        263,542.0	  2.0	       0.69	   0.67        0.00	     0.0	0.00	    2.9      0.0      0.1      0.3	0.0	 0.0	  0.0
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ

491wcfyfd6wc1		19,346		113	     1.89	 0.84	     0.08	     1	      0.65	      1 	19,346.0	113.0	       1.89	   0.84        0.08	     1.0	0.65	    0.2      0.0      0.2      0.3	0.0	 0.3	  0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

bjck50zs3nc95		10,075		 20	     0.10	 0.08	     0.01	 4,072	      0.01	      2 	 5,037.5	 10.0	       0.05	   0.04        0.00	 2,036.0	0.01	    0.1      0.0      0.0      0.0	0.0	 0.0	  0.0
insert into WRH$_SYSSTAT (dbid, per_pdb, con_dbid, snap_id, instance_number, s
tat_id, value) select /*+ use_hash(v$sysstat) */ :dbid, 0 per_pdb, :srcdbid
con_dbid, :snap_id, :instance_number, stat_id, value FROM v$sysstat syssta
t WHERE (1 = 1)

6ajkhukk78nsr		 4,689		  1	     0.31	 0.18	     0.00	     1	      0.13	      1 	 4,689.0	  1.0	       0.31	   0.18        0.00	     1.0	0.13	    0.1      0.0      0.0      0.1	0.0	 0.1	  0.0
begin prvt_hdm.auto_execute( :dbid, :inst_num , :end_snap_id ); end;

fhf8upax5cxsz		 4,676		 59	     0.55	 0.43	     0.07	     2	      0.01	      2 	 2,338.0	 29.5	       0.28	   0.21        0.03	     1.0	0.00	    0.1      0.0      0.0      0.2	0.0	 0.0	  0.0
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Reads (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Total Disk Reads:	   2,206,439
-> Captured SQL account for   99.9% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Reads	       Gets   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	 Reads		 Gets	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	  Reads     Gets  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	------------ -------------- ------------- ----------- ----------- ------------ ----------- ------------   ------------ -------------- ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,878,864	  2,804,817	   491.71      113.27	   361.93	42,416	     84.48	 42,415 	  44.3		 66.1	       0.01	   0.00        0.01	     1.0	0.00	   85.2     30.7     43.0     45.7     43.7	40.7	 78.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

078ab5pdvxx3c	   1,172,802	  1,792,446	   568.95      118.82	   426.51	     1	     91.23	      1    1,172,802.0	  1,792,446.0	     568.95	 118.82      426.51	     1.0       91.23	   53.2     19.6     49.7     47.9     51.5	44.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0sy7x6xzjg2yy	   1,031,832	  1,564,773	   568.94      127.21	   397.47	     1	    113.40	      1    1,031,832.0	  1,564,773.0	     568.94	 127.21      397.47	     1.0      113.40	   46.8     17.1     49.7     51.3     48.0	54.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

35dumc2tpr9dv	     324,702	    543,691	   637.51      125.12	   461.40      470,799	    119.92	  7,473 	  43.5		 72.8	       0.09	   0.02        0.06	    63.0	0.02	   14.7      6.0     55.7     50.4     55.7	57.8	 13.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

491wcfyfd6wc1		 113	     19,346	     1.89	 0.84	     0.08	     1	      0.65	      1 	 113.0	     19,346.0	       1.89	   0.84        0.08	     1.0	0.65	    0.0      0.2      0.2      0.3	0.0	 0.3	  0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

fhf8upax5cxsz		  59	      4,676	     0.55	 0.43	     0.07	     2	      0.01	      2 	  29.5	      2,338.0	       0.28	   0.21        0.03	     1.0	0.00	    0.0      0.1      0.0      0.2	0.0	 0.0	  0.0
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

0w26sk6t6gq98		  53	      4,342	     0.48	 0.38	     0.06	     2	      0.00	      2 	  26.5	      2,171.0	       0.24	   0.19        0.03	     1.0	0.00	    0.0      0.0      0.0      0.2	0.0	 0.0	  0.0
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

9yv5dwv8k0awg		  53	      4,224	     0.45	 0.35	     0.06	     2	      0.00	      2 	  26.5	      2,112.0	       0.23	   0.18        0.03	     1.0	0.00	    0.0      0.0      0.0      0.1	0.0	 0.0	  0.0
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

5pj6mtazkhmdd		  38	    264,188	     0.70	 0.56	     0.12	     2	      0.02	      2 	  19.0	    132,094.0	       0.35	   0.28        0.06	     1.0	0.01	    0.0      2.9      0.1      0.2	0.0	 0.0	  0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

c9059z5ksrf1x		  32	      3,721	     0.12	 0.04	     0.02	 1,966	      0.06	      2 	  16.0	      1,860.5	       0.06	   0.02        0.01	   983.0	0.03	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
insert into wrh$_latch (dbid, per_pdb, con_dbid, snap_id, instance_number, lat
ch_hash, level#, gets, misses, sleeps, immediate_gets, immediate_misses, spin
_gets, sleep1, sleep2, sleep3, sleep4, wait_time) select :dbid, 0 per_pdb,
 :srcdbid con_dbid, :snap_id, :instance_number, hash, level#, gets, misses

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by UnOptimized Read Requests (Global)DB/Inst: P30DB/p30db1	Snaps:
-> Total Physical Read Requests:       2,206,397
-> Captured SQL account for    0.0% of Total
-> Total UnOptimized Read Requests:	  2,206,397
-> Captured SQL account for    0.0% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

								       Total													 Per Execution									    Percentage of Total
		------------------------------------------------------------------------------------------------------------------   -----------------------------------------------------------------------------------------------------   -----------------------------------------------------------------
   SQL Id	 UnOptimized	 Requests	 Reads	 Elapsed (s)	 CPU (s)  IOWait (s)	     Rows Cluster (s)	     Execs    UnOptimized     Requests	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)   UnOptimized Requests  Reads DB time DB CPU IO Wait Cluster  Execs
-------------	------------ ------------ ------------ ------------- ----------- ----------- ------------ ----------- ------------   ------------ ------------ ------------ ------------- ----------- ----------- ------------ -----------   ----------- -------- ------ ------- ------ ------- ------- ------
078ab5pdvxx3c	   1,172,802	1,172,802    1,172,802	      568.95	  118.82      426.51		1	91.23		 1    1,172,802.0  1,172,802.0	1,172,802.0	   568.95      118.82	   426.51	   1.0	     91.23	    53.2     53.2   53.2    49.7   47.9    51.5    44.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0sy7x6xzjg2yy	   1,031,832	1,031,832    1,031,832	      568.94	  127.21      397.47		1      113.40		 1    1,031,832.0  1,031,832.0	1,031,832.0	   568.94      127.21	   397.47	   1.0	    113.40	    46.8     46.8   46.8    49.7   51.3    48.0    54.7    0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

491wcfyfd6wc1		 249	      249	   113		1.89	    0.84	0.08		1	 0.65		 1	    249.0	 249.0	      113.0	     1.89	 0.84	     0.08	   1.0	      0.65	     0.0      0.0    0.0     0.2    0.3     0.0     0.3    0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

88v8xahbcrsjp		  49	       49	     5		0.02	    0.01	0.00	       13	 0.00		 1	     49.0	  49.0		5.0	     0.02	 0.01	     0.00	  13.0	      0.00	     0.0      0.0    0.0     0.0    0.0     0.0     0.0    0.0
insert into WRH$_IOSTAT_FILETYPE (dbid, per_pdb, con_dbid, snap_id, instance_n
umber, filetype_id, small_read_megabytes, small_write_megabytes, lar
ge_read_megabytes, large_write_megabytes, small_read_reqs, small_write_reqs,
 small_sync_read_reqs, large_read_reqs, large_write_reqs, small_read_ser

5pj6mtazkhmdd		  38	       38	    38		0.70	    0.56	0.12		2	 0.02		 2	     19.0	  19.0	       19.0	     0.35	 0.28	     0.06	   1.0	      0.01	     0.0      0.0    0.0     0.1    0.2     0.0     0.0    0.0
BEGIN /* KSXM:FLUSH DML_MON */ dbms_stats_internal.gather_scan_rate_by_mmon;
 END;

fhf8upax5cxsz		  26	       26	    59		0.55	    0.43	0.07		2	 0.01		 2	     13.0	  13.0	       29.5	     0.28	 0.21	     0.03	   1.0	      0.00	     0.0      0.0    0.0     0.0    0.2     0.0     0.0    0.0
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

0w26sk6t6gq98		  20	       20	    53		0.48	    0.38	0.06		2	 0.00		 2	     10.0	  10.0	       26.5	     0.24	 0.19	     0.03	   1.0	      0.00	     0.0      0.0    0.0     0.0    0.2     0.0     0.0    0.0
SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL

f3ww8rgva3hrs		  19	       19	    19		0.13	    0.10	0.01	      781	 0.03	       786	      0.0	   0.0		0.0	     0.00	 0.00	     0.00	   1.0	      0.00	     0.0      0.0    0.0     0.0    0.0     0.0     0.0    1.4
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

c9059z5ksrf1x		  17	       17	    32		0.12	    0.04	0.02	    1,966	 0.06		 2	      8.5	   8.5	       16.0	     0.06	 0.02	     0.01	 983.0	      0.03	     0.0      0.0    0.0     0.0    0.0     0.0     0.0    0.0
insert into wrh$_latch (dbid, per_pdb, con_dbid, snap_id, instance_number, lat
ch_hash, level#, gets, misses, sleeps, immediate_gets, immediate_misses, spin
_gets, sleep1, sleep2, sleep3, sleep4, wait_time) select :dbid, 0 per_pdb,
 :srcdbid con_dbid, :snap_id, :instance_number, hash, level#, gets, misses

a1xgxtssv5rrp		  16	       16	     0		0.05	    0.01	0.03		2	 0.00		 2	      8.0	   8.0		0.0	     0.03	 0.01	     0.01	   1.0	      0.00	     0.0      0.0    0.0     0.0    0.0     0.0     0.0    0.0
select sum(used_blocks), ts.ts# from GV$SORT_SEGMENT gv, ts$ ts where gv.tab
lespace_name = ts.name and ts.bitmapped <> 0 group by ts.ts#

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Executions (Global)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Total Executions:	      54,303
-> Captured SQL account for   96.6% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Execs   Elapsed (s)     CPU (s)	IOWait (s)	     Gets	 Reads	       Rows Cluster (s)     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	  Execs  DB time   DB CPU  IO Wait     Gets    Reads  Cluster
-------------	------------ ------------- ----------- ----------- -------------- ------------ ------------ -----------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	      42,415	    491.71	113.27	    361.93	2,804,817    1,878,864	     42,416	  84.48 	   0.01        0.00	   0.01 	  66.1	       44.3	     1.0	0.00	   78.1     43.0     45.7     43.7     30.7	85.2	 40.7
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	       7,473	    637.51	125.12	    461.40	  543,691      324,702	    470,799	 119.92 	   0.09        0.02	   0.06 	  72.8	       43.5	    63.0	0.02	   13.8     55.7     50.4     55.7	6.0	14.7	 57.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

f3ww8rgva3hrs		 786	      0.13	  0.10	      0.01	    2,615	    19		781	   0.03 	   0.00        0.00	   0.00 	   3.3		0.0	     1.0	0.00	    1.4      0.0      0.0      0.0	0.0	 0.0	  0.0
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

24djtk7r8fz33		 399	      0.03	  0.03	      0.00	      808	     0		390	   0.00 	   0.00        0.00	   0.00 	   2.0		0.0	     1.0	0.00	    0.7      0.0      0.0      0.0	0.0	 0.0	  0.0
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

3dbzmtf9ahvzt		 305	      0.13	  0.10	      0.01	    2,223	     6		305	   0.01 	   0.00        0.00	   0.00 	   7.3		0.0	     1.0	0.00	    0.6      0.0      0.0      0.0	0.0	 0.0	  0.0
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

f7xnvp44nukp7		 181	      0.57	  0.04	      0.01	      802	    13		181	   0.53 	   0.00        0.00	   0.00 	   4.4		0.1	     1.0	0.00	    0.3      0.0      0.0      0.0	0.0	 0.0	  0.3
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

fdsrx9wqyqtmu		 144	      0.04	  0.01	      0.00	      525	     0		144	   0.02 	   0.00        0.00	   0.00 	   3.6		0.0	     1.0	0.00	    0.3      0.0      0.0      0.0	0.0	 0.0	  0.0
INSERT INTO wri$_adv_parameters(task_id,name,datatype,value,flags,description)
 VALUES (:task_id_num, :name, :datatype, :value, :flags, :descripti
on)

2p9fv35c7zxtg		  65	      0.02	  0.01	      0.00	      355	     0		 30	   0.01 	   0.00        0.00	   0.00 	   5.5		0.0	     0.5	0.00	    0.1      0.0      0.0      0.0	0.0	 0.0	  0.0
select /* KSXM:LOAD_DML_INF *//*+ leading(o) index(m) use_nl(m) */ nv
l(m.inserts, 0) ins, nvl(m.updates, 0) upd, nvl(m.deletes, 0) del, nvl(
m.drop_segments, 0) dropseg, nvl(m.flags, 0) flags, nvl(ro
wcnt, 0) rowcnt, o.pobjn pobjn from

87gaftwrm2h68		  63	      0.00	  0.00	      0.00	      147	     0		 21	   0.00 	   0.00        0.00	   0.00 	   2.3		0.0	     0.3	0.00	    0.1      0.0      0.0      0.0	0.0	 0.0	  0.0
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

2sxqgx5hx76qr		  52	      0.03	  0.01	      0.02	      169	     6		836	   0.01 	   0.00        0.00	   0.00 	   3.3		0.1	    16.1	0.00	    0.1      0.0      0.0      0.0	0.0	 0.0	  0.0
select /*+ rule */ bucket, endpoint, col#, epvalue, epvalue_raw, ep_repeat_count
, endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by b
ucket

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Cluster Wait Time (Global)  DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Total Cluster Wait Time (s): 	    207
-> Captured SQL account for   99.0% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	Cluster (s)   Elapsed (s)     CPU (s)  IOWait (s)	    Gets	Reads	      Rows	  Execs   Cluster (s)	Elapsed (s)	CPU (s)  IOWait (s)	      Gets	  Reads 	Rows	Cluster  DB time   DB CPU     Gets  IO Wait    Reads	Execs
-------------	----------- ------------- ----------- ----------- -------------- ------------ ------------ ------------   ----------- ------------- ----------- ----------- -------------- ------------ ------------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	     119.92	   637.51      125.12	   461.40	 543,691      324,702	   470,799	  7,473 	 0.02	       0.09	   0.02        0.06	      72.8	   43.5 	63.0	   57.8     55.7     50.4     55.7	6.0	14.7	 13.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

0sy7x6xzjg2yy	     113.40	   568.94      127.21	   397.47      1,564,773    1,031,832		 1	      1        113.40	     568.94	 127.21      397.47    1,564,773.0  1,031,832.0 	 1.0	   54.7     49.7     51.3     48.0     17.1	46.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

078ab5pdvxx3c	      91.23	   568.95      118.82	   426.51      1,792,446    1,172,802		 1	      1 	91.23	     568.95	 118.82      426.51    1,792,446.0  1,172,802.0 	 1.0	   44.0     49.7     47.9     51.5     19.6	53.2	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '64' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bhdvtsvjhgvrh	      84.48	   491.71      113.27	   361.93      2,804,817    1,878,864	    42,416	 42,415 	 0.00	       0.01	   0.00        0.01	      66.1	   44.3 	 1.0	   40.7     43.0     45.7     43.7     30.7	85.2	 78.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

491wcfyfd6wc1	       0.65	     1.89	 0.84	     0.08	  19,346	  113		 1	      1 	 0.65	       1.89	   0.84        0.08	  19,346.0	  113.0 	 1.0	    0.3      0.2      0.3      0.0	0.2	 0.0	  0.0
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

f7xnvp44nukp7	       0.53	     0.57	 0.04	     0.01	     802	   13	       181	    181 	 0.00	       0.00	   0.00        0.00	       4.4	    0.1 	 1.0	    0.3      0.0      0.0      0.0	0.0	 0.0	  0.3
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

6ajkhukk78nsr	       0.13	     0.31	 0.18	     0.00	   4,689	    1		 1	      1 	 0.13	       0.31	   0.18        0.00	   4,689.0	    1.0 	 1.0	    0.1      0.0      0.1      0.0	0.1	 0.0	  0.0
begin prvt_hdm.auto_execute( :dbid, :inst_num , :end_snap_id ); end;

a95n8p4vpxmps	       0.09	     0.17	 0.08	     0.01	   2,087	   10		 1	      1 	 0.09	       0.17	   0.08        0.01	   2,087.0	   10.0 	 1.0	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
begin prvt_hdm.execute_slave_actions; end;

drktaf71uygnb	       0.09	     0.17	 0.07	     0.01	   2,077	   10		 1	      1 	 0.09	       0.17	   0.07        0.01	   2,077.0	   10.0 	 1.0	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
 inst_id => :bind_inst, end_snap => :bind_snap, t
ime_left_in_secs => :bind_time); END;

c9059z5ksrf1x	       0.06	     0.12	 0.04	     0.02	   3,721	   32	     1,966	      2 	 0.03	       0.06	   0.02        0.01	   1,860.5	   16.0        983.0	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
insert into wrh$_latch (dbid, per_pdb, con_dbid, snap_id, instance_number, lat
ch_hash, level#, gets, misses, sleeps, immediate_gets, immediate_misses, spin
_gets, sleep1, sleep2, sleep3, sleep4, wait_time) select :dbid, 0 per_pdb,
 :srcdbid con_dbid, :snap_id, :instance_number, hash, level#, gets, misses

			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
ASSM bg: segment fix monitor						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM cbk:blocks examined						    953 	   1.6		0.1		0.8	      0.0	    0.8 	  0.8
ASSM cbk:blocks marked full						    286 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
ASSM gsp:L1 bitmaps examined						    725 	   1.2		0.1		0.6	      0.0	    0.6 	  0.6
ASSM gsp:L2 bitmap full 						     30 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:L2 bitmaps examined						    235 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
ASSM gsp:Search all							     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search hint							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search steal							     14 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:bump HWM							     14 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:get free block 						    669 	   1.1		0.1		0.6	      0.0	    0.5 	  0.6
ASSM gsp:get free data block						    500 	   0.8		0.1		0.4	      0.0	    0.4 	  0.4
ASSM gsp:get free index block						    169 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
ASSM gsp:good hint							    543 	   0.9		0.1		0.5	      0.1	    0.4 	  0.5
ASSM rsv:fill reserve							      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM wasted db state change						      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO (bound) vector count 					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO block miss count					      1,861,092        3,089.5	      245.6	    1,544.8	  2,184.6	    0.0       3,089.5
Batched IO double miss count						 40,398 	  67.1		5.3	       67.1	      N/A	   67.1 	 67.1
Batched IO same unit count						      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO single block count						    355 	   0.6		0.0		0.3	      0.4	    0.0 	  0.6
Batched IO vector block count					      1,860,800        3,089.0	      245.5	    3,089.0	      N/A	3,089.0       3,089.0
Batched IO vector read count						 39,872 	  66.2		5.3	       66.2	      N/A	   66.2 	 66.2
Block Cleanout Optim referenced 					     26 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
CCursor + sql area evicted						     29 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
CPU used by this session						 48,279 	  80.1		6.4	       40.1	     16.6	   28.3 	 51.8
CPU used when call started						 25,823 	  42.9		3.4	       21.4	     30.1	    0.2 	 42.7
CR blocks created							  6,798 	  11.3		0.9		5.6	      7.9	    0.0 	 11.3
Cached Commit SCN referenced					      1,229,605        2,041.2	      162.2	    2,041.2	      N/A	2,041.2       2,041.2
Client Advertised Receive Window					     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Advertised Send Window						     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Path Maximum Transmission Unit(MTU)				 68,435 	 113.6		9.0	       56.8	     73.5	    4.8 	108.8
Client Send Congestion Window						     30 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Ack Received					      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Client Time (usec) Last Data Received					      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Client Time (usec) Last Data Sent					      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Client Time (usec) Round Trip Time					  6,635 	  11.0		0.9		5.5	      2.0	    4.1 	  6.9
Client Time (usec) Round Trip Time Variance				 10,202 	  16.9		1.3		8.5	      6.7	    3.7 	 13.2
Client Total Bytes Acked						 36,114 	  60.0		4.8	       30.0	     31.9	    7.4 	 52.5
Client Total Bytes Received						 17,340 	  28.8		2.3	       14.4	      8.3	    8.5 	 20.3
DB time 								120,341 	 199.8	       15.9	       99.9	    140.6	    0.4 	199.3
DBWR checkpoint buffers written 					 67,628 	 112.3		8.9	       56.1	     77.0	    1.7 	110.5
DBWR checkpoints							    114 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
DBWR fusion writes							    146 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
DBWR object drop buffers written					      8 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
DBWR transaction table writes						    440 	   0.7		0.1		0.4	      0.1	    0.3 	  0.4
DBWR undo block writes							 19,578 	  32.5		2.6	       16.3	     22.0	    0.7 	 31.8
DFO trees parallelized							      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
HSC Heap Segment Block Changes						474,227 	 787.2	       62.6	      393.6	    553.7	    2.1 	785.1
Heap Segment Array Inserts						    348 	   0.6		0.0		0.3	      0.0	    0.3 	  0.3
Heap Segment Array Updates						     12 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
KTFB alloc req								     73 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
KTFB alloc space (block)					     16,580,608       27,524.7	    2,187.7	   13,762.3	 17,616.6	1,305.5      26,219.1
KTFB alloc time (ms)							 30,863 	  51.2		4.1	       25.6	      2.1	   24.1 	 27.1
KTFB apply req								    114 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
KTFB apply time (ms)							  4,558 	   7.6		0.6		3.8	      2.6	    2.0 	  5.6
KTFB free req								     53 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
KTFB free space (block) 						  1,384 	   2.3		0.2		1.1	      1.1	    0.4 	  1.9
KTFB free time (ms)							    265 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
PX local messages recv'd						     72 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
PX local messages sent							     72 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
PX remote messages recv'd						     94 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
PX remote messages sent 						     94 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
Parallel operations not downgraded					      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Requests to/from client 						    137 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
SMON posted for undo segment shrink					      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
SQL*Net roundtrips to/from client					    135 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
active txn count during cleanout					    443 	   0.7		0.1		0.4	      0.0	    0.3 	  0.4
application wait time							      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
background timeouts							 10,711 	  17.8		1.4		8.9	      0.0	    8.9 	  8.9
blocks cleaned out using minact 					311,982 	 517.9	       41.2	      259.0	    365.8	    0.3 	517.6
branch node splits							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
buffer is not pinned count					      7,024,860       11,661.6	      926.9	    5,830.8	  6,998.2	  882.3      10,779.3
buffer is pinned count						      3,109,576        5,162.1	      410.3	    2,581.0	  3,642.2	    5.6       5,156.5
bytes received via SQL*Net from client					382,978 	 635.8	       50.5	      317.9	    441.7	    5.6 	630.2
bytes sent via SQL*Net to client					 26,203 	  43.5		3.5	       21.7	     20.0	    7.6 	 35.9
calls to get snapshot scn: kcmgss					 65,365 	 108.5		8.6	       54.3	     70.7	    4.2 	104.3
calls to kcmgas 							 21,772 	  36.1		2.9	       18.1	     14.8	    7.6 	 28.5
calls to kcmgcs 							  5,351 	   8.9		0.7		4.4	      0.0	    4.4 	  4.5
cell physical IO interconnect bytes				 26,471,282,176   43,943,702.1	3,492,714.4    21,971,851.1  29,072,632.8   1,414,395.3  42,529,306.8
change write time							    625 	   1.0		0.1		0.5	      0.7	    0.0 	  1.0
cleanout - number of ktugct calls					  7,306 	  12.1		1.0		6.1	      8.0	    0.4 	 11.7
cleanouts and rollbacks - consistent read gets				      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
cleanouts only - consistent read gets					     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
cluster key scan block gets						    435 	   0.7		0.1		0.4	      0.1	    0.3 	  0.4
cluster key scans							    311 	   0.5		0.0		0.3	      0.1	    0.2 	  0.3
cluster wait time							 20,734 	  34.4		2.7	       17.2	     24.0	    0.2 	 34.2
commit batch/immediate performed					      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit batch/immediate requested					      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanout failures: block lost					     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: buffer being written				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanout failures: callback failure				     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: cannot pin					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanouts							473,623 	 786.2	       62.5	      393.1	    553.7	    1.6 	784.7
commit cleanouts successfully completed 				473,562 	 786.1	       62.5	      393.1	    553.7	    1.5 	784.6
commit immediate performed						      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit immediate requested						      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit txn count during cleanout					    222 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
concurrency wait time							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
consistent changes						      5,429,631        9,013.6	      716.4	    4,506.8	  6,370.0	    2.5       9,011.0
consistent gets 						      8,566,031       14,220.1	    1,130.2	    7,110.1	  3,380.7	4,719.5       9,500.6
consistent gets examination					      5,797,552        9,624.3	      764.9	    4,812.2	  6,563.3	  171.2       9,453.1
consistent gets examination (fastpath)				      5,685,440        9,438.2	      750.2	    4,719.1	  6,432.2	  170.9       9,267.4
consistent gets from cache					      8,566,031       14,220.1	    1,130.2	    7,110.1	  3,380.7	4,719.5       9,500.6
consistent gets pin						      2,768,479        4,595.8	      365.3	    2,297.9	  3,182.5	   47.5       4,548.3
consistent gets pin (fastpath)					      2,647,573        4,395.1	      349.3	    2,197.6	  3,060.5	   33.5       4,361.6
cursor authentications							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
data blocks consistent reads - undo records applied			    123 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
db block changes						      1,006,538        1,670.9	      132.8	      835.5	  1,150.0	   22.3       1,648.7
db block gets								561,990 	 932.9	       74.2	      466.5	    623.5	   25.6 	907.3
db block gets direct							     43 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
db block gets from cache						561,947 	 932.9	       74.1	      466.4	    623.4	   25.6 	907.2
db block gets from cache (fastpath)					 91,756 	 152.3	       12.1	       76.2	     81.9	   18.3 	134.0
deferred (CURRENT) block cleanout applications				316,236 	 525.0	       41.7	      262.5	    370.2	    0.7 	524.2
dirty buffers inspected 						244,925 	 406.6	       32.3	      406.6	      N/A	  406.6 	406.6
enqueue conversions							    891 	   1.5		0.1		0.7	      0.3	    0.5 	  1.0
enqueue releases							 34,069 	  56.6		4.5	       28.3	     18.0	   15.5 	 41.0
enqueue requests							 34,077 	  56.6		4.5	       28.3	     18.0	   15.5 	 41.0
enqueue timeouts							     10 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
enqueue waits								    420 	   0.7		0.1		0.3	      0.0	    0.3 	  0.4

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
exchange deadlocks							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
execute count								 54,303 	  90.1		7.2	       45.1	     58.6	    3.6 	 86.5
file io service time						     40,113,164       66,589.9	    5,292.7	   33,295.0	 47,082.9	    2.3      66,587.6
file io wait time						  6,095,209,076   10,118,360.2	  804,223.4	5,059,180.1   7,137,750.6      12,028.3  10,106,331.9
free buffer inspected						      2,350,558        3,902.0	      310.1	    1,951.0	  2,754.5	    3.3       3,898.8
free buffer requested						      2,302,111        3,821.6	      303.7	    1,910.8	  2,680.8	   15.2       3,806.4
gc blocks compressed							 67,619 	 112.3		8.9	       56.1	     75.6	    2.7 	109.6
gc blocks lost								     71 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
gc cleanout saved							     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr anti locks shrunk 						  3,186 	   5.3		0.4		2.6	      3.7	    0.0 	  5.3
gc cr block build time							    959 	   1.6		0.1		0.8	      1.1	    0.0 	  1.6
gc cr block flush time							     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr block receive time						  2,712 	   4.5		0.4		2.3	      3.0	    0.1 	  4.4
gc cr blocks built							 11,498 	  19.1		1.5		9.5	     13.3	    0.1 	 19.0
gc cr blocks flushed							     29 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr blocks received							 12,893 	  21.4		1.7	       10.7	     11.7	    2.4 	 19.0
gc cr blocks served							 12,911 	  21.4		1.7	       10.7	     11.8	    2.4 	 19.0
gc cr multiblock grant time						150,936 	 250.6	       19.9	      125.3	    177.2	    0.0 	250.6
gc cr multiblock grants received				      1,810,197        3,005.0	      238.8	    1,502.5	  2,124.9	    0.0       3,005.0
gc current block flush time						     54 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc current block receive time						  5,051 	   8.4		0.7		4.2	      5.8	    0.1 	  8.3
gc current blocks flushed						     47 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks pinned						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks received						 55,271 	  91.8		7.3	       45.9	     64.2	    0.5 	 91.3
gc current blocks served						 55,293 	  91.8		7.3	       45.9	     64.3	    0.4 	 91.4
gc force cr read cr							    135 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gc kbytes saved 							292,664 	 485.8	       38.6	      242.9	    322.0	   15.2 	470.6
gc kbytes sent								252,968 	 419.9	       33.4	      210.0	    286.5	    7.4 	412.6
gc local grants 							822,893        1,366.0	      108.6	      683.0	    964.8	    0.8       1,365.3
gc merge pi fg								     62 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gc no change made							      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass grants 						    601 	   1.0		0.1		0.5	      0.6	    0.0 	  0.9
gc reader bypass waits							     24 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc remote grants						      1,504,860        2,498.1	      198.6	    1,249.1	  1,765.7	    0.5       2,497.6
gc status messages received						297,629 	 494.1	       39.3	      247.0	    348.9	    0.3 	493.8
gc status messages sent 						297,676 	 494.2	       39.3	      247.1	    349.0	    0.3 	493.8
gcs affinity lock grants						 20,305 	  33.7		2.7	       16.9	     23.2	    0.4 	 33.3
gcs data block access records					      2,345,624        3,893.9	      309.5	    1,946.9	  2,652.5	   71.3       3,822.6
gcs messages sent						      4,388,757        7,285.6	      579.1	    3,642.8	  2,267.3	2,039.6       5,246.0
gcs stats management (SCM) process posts				      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges messages sent							326,274 	 541.6	       43.0	      270.8	    259.2	   87.5 	454.1
global enqueue get time 						    128 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
global enqueue gets sync						 29,089 	  48.3		3.8	       24.1	     10.8	   16.5 	 31.8
global enqueue releases 						 27,768 	  46.1		3.7	       23.0	     10.7	   15.5 	 30.6
heap block compress							      9 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
hot buffers moved to head of LRU					535,539 	 889.0	       70.7	      444.5	    628.6	    0.0 	889.0
immediate (CR) block cleanout applications				     24 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
immediate (CURRENT) block cleanout applications 			    450 	   0.7		0.1		0.4	      0.0	    0.4 	  0.4
in call idle wait time						      9,977,691       16,563.6	    1,316.5	    8,281.8	     78.2	8,226.5       8,337.1
index crx upgrade (positioned)						     60 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
index fast full scans (full)						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
index fetch by key							266,414 	 442.3	       35.2	      221.1	    309.3	    2.4 	439.8
index range scans							314,014 	 521.3	       41.4	      260.6	    250.0	   83.8 	437.4
leaf node 90-10 splits							      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
leaf node splits							    157 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
lob reads								     99 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
lob writes								  1,286 	   2.1		0.2		1.1	      1.5	    0.0 	  2.1
lob writes unaligned							  1,286 	   2.1		0.2		1.1	      1.5	    0.0 	  2.1
logical read bytes from cache					 74,776,395,776  124,133,434.9	9,866,261.5    62,066,717.5  22,588,061.5  46,094,546.0  78,038,889.0
logons cumulative							     20 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
max cf enq hold time							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
messages received							 39,112 	  64.9		5.2	       32.5	     43.6	    1.7 	 63.3
messages sent								 39,112 	  64.9		5.2	       32.5	     43.6	    1.7 	 63.3
no work - consistent read gets					      2,745,580        4,557.8	      362.3	    2,278.9	  3,198.5	   17.2       4,540.6
non-idle wait count						      1,375,452        2,283.3	      181.5	    1,141.7	  1,485.3	   91.4       2,191.9
non-idle wait time							114,484 	 190.0	       15.1	       95.0	    131.4	    2.1 	187.9
opened cursors cumulative						 61,491 	 102.1		8.1	       51.0	     67.3	    3.4 	 98.6
parse count (hard)							     40 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
parse count (total)							  2,877 	   4.8		0.4		2.4	      0.3	    2.2 	  2.6
parse time cpu								      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse time elapsed							     13 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
physical read IO requests					      2,206,397        3,662.7	      291.1	    1,831.4	  2,589.4	    0.4       3,662.3
physical read bytes						 18,075,148,288   30,005,674.6	2,384,898.8    15,002,837.3  21,212,504.1	3,331.8  30,002,342.7
physical read total IO requests 				      2,212,876        3,673.5	      292.0	    1,836.7	  2,587.8	    6.9       3,666.6
physical read total bytes					 18,907,655,680   31,387,692.7	2,494,742.8    15,693,846.3  20,335,199.6   1,314,688.8  30,073,003.9
physical read total multi block requests				    721 	   1.2		0.1		1.2	      N/A	    1.2 	  1.2
physical reads							      2,206,439        3,662.8	      291.1	    1,831.4	  2,589.4	    0.4       3,662.4
physical reads cache						      2,206,439        3,662.8	      291.1	    1,831.4	  2,589.4	    0.4       3,662.4
physical reads cache prefetch					      1,771,268        2,940.4	      233.7	    1,470.2	  2,079.2	    0.0       2,940.4
physical write IO requests						303,888 	 504.5	       40.1	      252.2	    354.9	    1.3 	503.2
physical write bytes						  2,915,123,200    4,839,254.4	  384,631.6	2,419,627.2   3,400,867.9      14,850.4   4,824,404.0
physical write total IO requests					324,224 	 538.2	       42.8	      269.1	    376.6	    2.8 	535.4
physical write total bytes					  3,773,096,960    6,263,535.2	  497,835.7	3,131,767.6   4,368,178.1      42,999.2   6,220,536.0
physical write total multi block requests				  1,152 	   1.9		0.2		1.0	      1.3	    0.0 	  1.9
physical writes 							355,850 	 590.7	       47.0	      295.4	    415.1	    1.8 	588.9
physical writes direct							     52 	   0.1		0.0		0.0	      0.1	    0.0 	  0.1
physical writes direct (lob)						      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
physical writes direct temporary tablespace				     43 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
physical writes from cache						355,798 	 590.6	       46.9	      295.3	    415.1	    1.8 	588.8
physical writes non checkpoint						352,209 	 584.7	       46.5	      292.3	    412.1	    0.9 	583.8
pinned buffers inspected						    656 	   1.1		0.1		0.5	      0.3	    0.4 	  0.7
pinned cursors current							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
process last non-idle time						  1,203 	   2.0		0.2		1.0	      0.0	    1.0 	  1.0
recursive calls 							 95,034 	 157.8	       12.5	       78.9	     64.7	   33.1 	124.6
recursive cpu usage							 40,901 	  67.9		5.4	       33.9	     10.7	   26.4 	 41.5
redo KB read								423,871 	 703.7	       55.9	      703.7	      N/A	  703.7 	703.7
redo blocks checksummed by FG (exclusive)				316,692 	 525.7	       41.8	      262.9	    361.9	    6.9 	518.8
redo blocks written							820,841        1,362.6	      108.3	      681.3	    943.6	   14.1       1,348.5
redo blocks written (group 0)						  7,649 	  12.7		1.0	       12.7	      N/A	   12.7 	 12.7
redo blocks written (group 1)						    846 	   1.4		0.1		1.4	      N/A	    1.4 	  1.4
redo entries								522,092 	 866.7	       68.9	      433.3	    596.0	   11.9 	854.8
redo size							    404,664,548      671,764.0	   53,392.9	  335,882.0	465,252.3	6,899.0     664,865.0
redo subscn max counts							    170 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
redo synch time 							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo synch time (usec)							 15,447 	  25.6		2.0	       12.8	     18.1	    0.0 	 25.6
redo synch time overhead (usec) 					    282 	   0.5		0.0		0.5	      N/A	    0.5 	  0.5
redo synch time overhead count (  2ms)					      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo synch writes							      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo wastage							      2,294,992        3,809.8	      302.8	    1,904.9	  2,560.7	   94.2       3,715.6
redo write active strands						  9,595 	  15.9		1.3		8.0	     10.8	    0.4 	 15.6
redo write finish time						     59,804,808       99,279.1	    7,890.9	   49,639.5	 66,201.1	2,828.3      96,450.8
redo write gather time							786,321        1,305.3	      103.7	      652.7	    748.9	  123.1       1,182.2
redo write info find							      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo write schedule time						891,130        1,479.3	      117.6	      739.7	    866.3	  127.1       1,352.2
redo write size count (   4KB)						    342 	   0.6		0.0		0.3	      0.1	    0.2 	  0.3
redo write size count (   8KB)						    254 	   0.4		0.0		0.2	      0.2	    0.0 	  0.4
redo write size count (  16KB)						    480 	   0.8		0.1		0.4	      0.5	    0.0 	  0.8
redo write size count (  32KB)						    731 	   1.2		0.1		0.6	      0.8	    0.0 	  1.2
redo write size count ( 128KB)						  6,085 	  10.1		0.8		5.1	      7.1	    0.0 	 10.1
redo write size count ( 256KB)						      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
redo write size count ( 512KB)						      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write size count (1024KB)						      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write time 							  5,986 	   9.9		0.8		5.0	      6.6	    0.3 	  9.7
redo write time (usec)						     59,861,558       99,373.3	    7,898.3	   49,686.6	 66,250.0	2,840.8      96,532.5
redo write total time						     60,154,920       99,860.3	    7,937.1	   49,930.1	 66,445.5	2,946.1      96,914.2
redo write worker delay (usec)						 57,663 	  95.7		7.6	       95.7	      N/A	   95.7 	 95.7
redo write worker delay count						    212 	   0.4		0.0		0.4	      N/A	    0.4 	  0.4
redo writes								  7,911 	  13.1		1.0		6.6	      8.8	    0.4 	 12.8
redo writes (group 0)							    164 	   0.3		0.0		0.3	      N/A	    0.3 	  0.3
redo writes (group 1)							     48 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
redo writes adaptive all						  7,911 	  13.1		1.0		6.6	      8.8	    0.4 	 12.8
redo writes adaptive worker						    212 	   0.4		0.0		0.4	      N/A	    0.4 	  0.4
rollback changes - undo records applied 				      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
rollbacks only - consistent read gets					     25 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
rows fetched via callback						264,429 	 439.0	       34.9	      219.5	    308.9	    1.1 	437.9
securefile allocation bytes						 73,728 	 122.4		9.7	       61.2	     28.8	   40.8 	 81.6
securefile allocation chunks						      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
securefile bytes non-transformed					 66,717 	 110.8		8.8	       55.4	      6.1	   51.1 	 59.7
securefile direct write bytes						 73,728 	 122.4		9.7	       61.2	     28.8	   40.8 	 81.6
securefile direct write ops						      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
securefile number of non-transformed flushes				     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment chunks allocation from dispenser				      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment dispenser allocations						      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc ops							      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc time (ms)						    201 	   0.3		0.0		0.2	      0.1	    0.1 	  0.3
session connect time							    603 	   1.0		0.1		1.0	      N/A	    1.0 	  1.0
session cursor cache hits						 60,429 	 100.3		8.0	       50.2	     67.1	    2.7 	 97.6
session logical reads						      9,128,021       15,153.1	    1,204.4	    7,576.5	  2,757.3	5,626.8       9,526.2
shared hash latch upgrades - no wait					432,863 	 718.6	       57.1	      359.3	    488.0	   14.2 	704.4
shared hash latch upgrades - wait					     47 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
shared io pool buffer get success					      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
sorts (memory)								    461 	   0.8		0.1		0.4	      0.1	    0.3 	  0.5
sorts (rows)								 69,309 	 115.1		9.1	       57.5	     24.1	   40.5 	 74.5
sql area evicted							     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
sql area purged 							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
summed dirty queue length					      1,430,130        2,374.1	      188.7	    2,374.1	      N/A	2,374.1       2,374.1
switch current caused by our pin					    104 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
switch current to new buffer						    108 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
table fetch by rowid						      4,801,613        7,970.9	      633.5	    3,985.5	  5,014.4	  439.8       7,531.2
table fetch continued row						     13 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
table scan blocks gotten						  4,928 	   8.2		0.7		4.1	      0.2	    3.9 	  4.2
table scan disk non-IMC rows gotten					212,562 	 352.9	       28.0	      176.4	     22.8	  160.3 	192.6
table scan rows gotten							212,562 	 352.9	       28.0	      176.4	     22.8	  160.3 	192.6
table scans (short tables)						    548 	   0.9		0.1		0.5	      0.0	    0.4 	  0.5
total cf enq hold time							  1,488 	   2.5		0.2		1.2	      0.7	    0.7 	  1.8
total number of cf enq holders						    245 	   0.4		0.0		0.2	      0.1	    0.2 	  0.3
total number of times SMON posted					      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
transaction rollbacks							      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
transaction tables consistent reads - undo records applied	      5,427,957        9,010.8	      716.2	    9,010.8	      N/A	9,010.8       9,010.8
undo change vector size 					    166,101,232      275,736.6	   21,916.0	  137,868.3	191,522.5	2,441.4     273,295.2
user I/O wait time							 82,798 	 137.4	       10.9	       68.7	     97.1	    0.1 	137.4
user calls								    229 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
user commits								  7,579 	  12.6		1.0		6.3	      8.8	    0.1 	 12.5
user logons cumulative							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
user logouts cumulative 						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
workarea executions - optimal						    509 	   0.8		0.1		0.4	      0.1	    0.3 	  0.5
			  --------------------------------------------------------------------------------------------------------------------


Global Messaging Statistics (Global)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Global Enqueue S-optim Broadcasts sent					     68 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
Global Enqueue S-optim S-lock gets					 15,615 	  25.9		2.1	       13.0	      1.0	   12.2 	 13.7
Global Enqueue S-optim anti-locks crea					     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
acks for commit broadcast(actual)					  6,946 	  11.5		0.9		5.8	      7.9	    0.2 	 11.4
acks for commit broadcast(logical)					  7,320 	  12.2		1.0		6.1	      8.3	    0.2 	 11.9
broadcast msgs on commit(actual)					  7,320 	  12.2		1.0		6.1	      8.3	    0.2 	 11.9
broadcast msgs on commit(logical)					  7,905 	  13.1		1.0		6.6	      8.8	    0.3 	 12.8
broadcast msgs on commit(wasted)					    305 	   0.5		0.0		0.3	      0.3	    0.1 	  0.4
flow control messages received						      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
flow control messages sent						      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs assume no cvt							 42,538 	  70.6		5.6	       35.3	     49.6	    0.2 	 70.4
gcs ast to fg								297,513 	 493.9	       39.3	      246.9	    349.0	    0.1 	493.8
gcs bidless ast to lms							 27,583 	  45.8		3.6	       45.8	      N/A	   45.8 	 45.8
gcs blocked converts							 17,354 	  28.8		2.3	       14.4	     11.6	    6.2 	 22.6
gcs blocked cr converts 						 12,910 	  21.4		1.7	       10.7	      4.1	    7.8 	 13.6
gcs compatible basts							     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (global)					     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (local) 					 41,349 	  68.6		5.5	       34.3	     25.8	   16.1 	 52.6
gcs dbwr flush pi msgs							230,786 	 383.1	       30.5	      191.6	    270.3	    0.4 	382.7
gcs dbwr write request msgs						    143 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
gcs grant ast								325,096 	 539.7	       42.9	      269.8	    381.4	    0.1 	539.5
gcs immediate (compatible) converts					 97,559 	 162.0	       12.9	       81.0	     36.8	   55.0 	107.0
gcs immediate (null) converts						325,934 	 541.1	       43.0	      270.5	    113.0	  190.7 	350.4
gcs immediate cr (compatible) converts					 23,915 	  39.7		3.2	       19.9	     18.3	    6.9 	 32.8
gcs immediate cr (null) converts				      1,856,477        3,081.9	      245.0	    1,540.9	    653.9	1,078.5       2,003.3
gcs lms write request msgs						    104 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
gcs msgs process time(ms)						 82,287 	 136.6	       10.9	       68.3	     52.5	   31.2 	105.4
gcs msgs received						      4,710,606        7,819.9	      621.5	    3,910.0	  2,526.0	2,123.8       5,696.1
gcs new served by master						    193 	   0.3		0.0		0.2	      0.0	    0.2 	  0.2
gcs out-of-order msgs							     72 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
gcs pings refused							 10,850 	  18.0		1.4		9.0	     12.5	    0.2 	 17.8
gcs reader bypass grant immediate					    601 	   1.0		0.1		0.5	      0.6	    0.0 	  0.9
gcs refuse xid								      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs refuse xid to fg							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs side channel msgs actual						  4,404 	   7.3		0.6		3.7	      5.1	    0.1 	  7.2
gcs side channel msgs logical						366,015 	 607.6	       48.3	      303.8	    425.1	    3.2 	604.4
gcs stale cr								    135 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gcs undo cr								      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges msgs process time(ms)						     98 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
ges msgs received							  4,427 	   7.3		0.6		3.7	      1.1	    2.9 	  4.4
ges remote lock allocation						     55 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
implicit batch messages received					 16,560 	  27.5		2.2	       13.7	     19.1	    0.3 	 27.2
implicit batch messages sent						 16,566 	  27.5		2.2	       13.8	     19.1	    0.3 	 27.2
messages flow controlled						  4,398 	   7.3		0.6		3.7	      5.0	    0.1 	  7.2
messages queue sent actual						212,085 	 352.1	       28.0	      176.0	     66.0	  129.4 	222.7
messages queue sent logical						284,930 	 473.0	       37.6	      236.5	    331.1	    2.4 	470.6
messages received actual						671,498        1,114.7	       88.6	      557.4	    454.8	  235.8 	878.9
messages received logical					      4,715,033        7,827.3	      622.1	    3,913.6	  2,527.1	2,126.7       5,700.6
messages sent directly							355,593 	 590.3	       46.9	      295.2	    400.1	   12.2 	578.1
messages sent indirectly					      1,912,172        3,174.3	      252.3	    1,587.2	  2,105.5	   98.3       3,076.0
messages sent not implicit batched					  7,344 	  12.2		1.0		6.1	      8.5	    0.1 	 12.1
messages sent pbatched						      4,119,248        6,838.2	      543.5	    3,419.1	  1,853.1	2,108.7       4,729.5
msgs received kernel queue time (ns)				 47,030,412,358   78,073,551.7	6,205,358.5    39,036,775.8  37,306,272.1  12,657,257.8  65,416,293.8
msgs received queue time (ms)						 30,936 	  51.4		4.1	       25.7	     25.5	    7.7 	 43.7
msgs received queued						      4,715,033        7,827.3	      622.1	    3,913.6	  2,527.1	2,126.7       5,700.6
msgs sent queue time (ms)					      2,462,939        4,088.6	      325.0	    2,044.3	  2,879.0	    8.6       4,080.0
msgs sent queue time on ksxp (ms)				      1,188,734        1,973.4	      156.8	      986.7	  1,002.6	  277.7       1,695.6
msgs sent queued							431,158 	 715.7	       56.9	      357.9	    190.6	  223.1 	492.6
msgs sent queued on ksxp						671,479        1,114.7	       88.6	      557.3	    454.5	  236.0 	878.7
process batch messages received 					290,494 	 482.2	       38.3	      241.1	     33.1	  217.7 	264.5

Global Messaging Statistics (Global)	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
process batch messages sent						295,058 	 489.8	       38.9	      244.9	     37.9	  218.1 	271.7
receiver cycle time							232,230 	 385.5	       30.6	      192.8	    131.8	   99.6 	285.9
receiver loop count							856,091        1,421.2	      113.0	      710.6	    478.1	  372.5       1,048.7
			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Absolute Values)	   DB/Inst: P30DB/p30db1  Snaps: 62-63

	    Sessions		   Open Cursors 	    Session Cached Cursors
       -----------------   ---------------------------	 ---------------------------
  I#	  Begin      End	    Begin	   End		  Begin 	 End
----   -------- --------   -------------- ------------	 -------------- ------------
   1	     90       90	      120	   120		  8,428        8,390
   2	     91       89	      105	    97		  7,295        7,304
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~	 ~~~~~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    181      179	      225	   217		 15,723       15,694
 Avg	     91       90	      113	   109		  7,862        7,847
 Std	      1        1	       11	    16		    801 	 768
			  --------------------------------------------------------------------------------------------------------------------

IO Profile (Global)			   DB/Inst: P30DB/p30db1  Snaps: 62-63

Statistic			  Read+Write/s	      Reads/s	    Writes/s
------------------------------ --------------- -------------- --------------
Total Requests			      4,211.64	     3,673.42	      538.22
Database Requests		      4,167.13	     3,662.67	      504.46
Optimized Requests			  0.00		 0.00		0.00
Redo Requests				 13.13		  N/A	       13.13
Total (MB)				 35.91		29.93		5.97
Database (MB)				 33.23		28.62		4.61
Optimized Total (MB)			  0.00		 0.00		0.00
Redo (MB)				  0.64		  N/A		0.64
Database (blocks)		      4,253.45	     3,662.74	      590.72
Via Buffer Cache (blocks)	      4,253.37	     3,662.74	      590.63
Direct (blocks) 			  0.09		 0.00		0.09
			  --------------------------------------------------------------------------------------------------------------------

IOStat by Function			   DB/Inst: P30DB/p30db1  Snaps: 62-63

					   Requests						 MB
		       ------------------------------------------------   ------------------------------------------------
															      Waits:	Avg
  I# Function Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s     Count	Time
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   ------- --------
   * Total		  2,535,533    4,209.04    3,670.81	 538.23 	21,617	     35.88	 29.91	      5.97    447.1K   2.00ms
     Buffer Cache Re	  2,204,764    3,659.95    3,659.95	   0.00 	17,225	     28.59	 28.59	      0.00    434.6K   1.91ms
     DBWR		    303,921	 504.52        0.00	 504.52 	 2,781	      4.62	  0.00	      4.62	   0
     Others		      7,619	  12.65       10.85	   1.80 	   810	      1.34	  1.32	      0.03	4659 949.85us
     LGWR		     19,228	  31.92        0.00	  31.92 	   801	      1.33	  0.00	      1.33	7900   7.43ms
     Direct Writes		  1	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	   0

   1 Total		      5,880	   9.76        6.96	   2.80 	   779	      1.29	  1.25	      0.04	3085   1.13ms
     Others		      4,417	   7.33        6.49	   0.84 	   760	      1.26	  1.25	      0.01	2601 676.14us
     DBWR			775	   1.29        0.00	   1.29 	     9	      0.01	  0.00	      0.01	   0
     LGWR			406	   0.67        0.00	   0.67 	     8	      0.01	  0.00	      0.01	 202   7.86ms
     Buffer Cache Re		282	   0.47        0.47	   0.00 	     2	      0.00	  0.00	      0.00	 282 505.78us

   2 Total		  2,529,653    4,199.28    3,663.85	 535.43 	20,838	     34.59	 28.66	      5.93	444K   2.01ms
     Buffer Cache Re	  2,204,482    3,659.49    3,659.49	   0.00 	17,223	     28.59	 28.59	      0.00    434.3K   1.92ms
     DBWR		    303,146	 503.23        0.00	 503.23 	 2,772	      4.60	  0.00	      4.60	   0
     LGWR		     18,822	  31.24        0.00	  31.24 	   793	      1.32	  0.00	      1.32	7698   7.42ms
     Others		      3,202	   5.32        4.36	   0.95 	    50	      0.08	  0.07	      0.01	2058   1.30ms
     Direct Writes		  1	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	   0
			  --------------------------------------------------------------------------------------------------------------------

IOStat by File Type			   DB/Inst: P30DB/p30db1  Snaps: 62-63

					   Requests						 MB				Service Time
		       ------------------------------------------------   ------------------------------------------------   -----------------
																Small	 Large
  I# Filetype Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s	 Read	  Read
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   -------- --------
   * Total		  2,535,460    4,208.92    3,670.69	 538.23 	21,615	     35.88	 29.91	      5.97   181.26us 1383.96m
     Data File		  2,508,590    4,164.31    3,659.81	 504.50 	20,004	     33.21	 28.59	      4.61   181.72us
     Log File		     20,105	  33.37        1.46	  31.92 	 1,505	      2.50	  1.17	      1.33    19.23us 1383.96m
     Control File	      6,716	  11.15        9.38	   1.77 	   105	      0.17	  0.15	      0.03     8.49us
     Temp File			 49	   0.08        0.03	   0.05 	     1	      0.00	  0.00	      0.00	.00ns

   1 Total		      5,872	   9.75        6.95	   2.80 	   779	      1.29	  1.25	      0.04     8.08us 1383.96m
     Log File		      1,281	   2.13        1.46	   0.67 	   713	      1.18	  1.17	      0.01    19.23us 1383.96m
     Control File	      3,529	   5.86        5.02	   0.84 	    55	      0.09	  0.08	      0.01     2.98us
     Data File		      1,062	   1.76        0.47	   1.29 	    11	      0.02	  0.00	      0.01    56.34us

   2 Total		  2,529,588    4,199.17    3,663.74	 535.43 	20,836	     34.59	 28.66	      5.93   181.53us
     Data File		  2,507,528    4,162.55    3,659.34	 503.21 	19,993	     33.19	 28.59	      4.60   181.73us
     Log File		     18,824	  31.25        0.00	  31.25 	   792	      1.31	  0.00	      1.31
     Control File	      3,187	   5.29        4.36	   0.93 	    50	      0.08	  0.07	      0.01    14.85us
     Temp File			 49	   0.08        0.03	   0.05 	     1	      0.00	  0.00	      0.00	.00ns
			  --------------------------------------------------------------------------------------------------------------------


Segment Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   39.6% of Total Logical Reads:       9,128,021
-> Captured Segments account for  102.2% of Total Physical Reads:	2,206,439
-> Captured Segments account for  102.2% of Total Physical Read Requests:	2,206,397
-> Captured Segments account for  102.2% of Total UnOptimized Read Requests:	   2,206,397
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	       1
-> Captured Segments account for   94.2% of Total Physical Writes:	   355,850
-> Captured Segments account for   99.2% of Total Physical Write Requests:	   303,888
-> Captured Segments account for   17.3% of Total Direct Physical Writes:	       52
-> Captured Segments account for  100.0% of Total Table Scans:		     3
-> Captured Segments account for   88.8% of Total CR Blocks Received:	       12,893
-> Captured Segments account for   98.8% of Total Current Blocks Received:	    55,271
-> Captured Segments account for   88.7% of Total CR Blocks Served:	     12,911
-> Captured Segments account for   98.7% of Total Current Blocks Served:	  55,293
-> Captured Segments account for   99.9% of Total Global Cache Remote Grants:	    1,504,860
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
buffer busy waits	 SYS	    SYSAUX     WRI$_ADV_PARAMETERS_	       INDEX	   8697       8697	      1    N/A	  100.0
db block changes	 USER1	    IOPS       CF1			       TABLE	  73402      73404	251,600    N/A	   52.7
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	219,888    N/A	   46.1
			 SYS	    SYSAUX     WRH$_SYSSTAT_PK	    3773525_33 INDEX	  73783      73783	  3,152    N/A	    0.7
			 SYS	    TEMP       SYS_TEMP_0FD9DFEE4_3	       TABLE 4.2550E+09    5156992	  1,408    N/A	    0.3
			 SYS	    SYSAUX     WRH$_LATCH_PK	    3773525_33 INDEX	  73763      73763	  1,168    N/A	    0.2
gc buffer busy		 SYS	    SYSTEM     SEG$			       TABLE	     14 	 8	      2    N/A	  100.0
gc cr blocks received	 USER2	    IOPS       CF1			       TABLE	  73409      73415	  9,482   73.5	   83.8
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  1,764   13.7	   15.6
			 SYS	    SYSAUX     WRH$_SQL_PLAN		       TABLE	  11147      11147	     32    0.2	    0.3
			 SYS	    SYSAUX     WRH$_PARAMETER_PK    3773525_33 INDEX	  73787      73787	     22    0.2	    0.2
			 SYS	    SYSAUX     WRH$_SEG_STAT_OBJ	       TABLE	  11339      11339	     20    0.2	    0.2
gc cr blocks served	 USER2	    IOPS       CF1			       TABLE	  73409      73415	  9,482   73.4	   83.8
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  1,764   13.7	   15.6
			 SYS	    SYSAUX     WRH$_SQL_PLAN		       TABLE	  11147      11147	     32    0.2	    0.3
			 SYS	    SYSAUX     WRH$_PARAMETER_PK    3773525_33 INDEX	  73787      73787	     22    0.2	    0.2
			 SYS	    SYSAUX     WRH$_SEG_STAT_OBJ	       TABLE	  11339      11339	     20    0.2	    0.2
gc cu blocks received	 USER2	    IOPS       CF1			       TABLE	  73409      73415	 48,733   88.2	   89.7
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  5,262    9.5	    9.7
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	    109    0.2	    0.2
			 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	    109    0.2	    0.2
			 SYS	    SYSAUX     WRH$_SQLSTAT_INDEX   3773525_33 INDEX	  73749      73749	     61    0.1	    0.1
			 SYS	    SYSAUX     WRM$_SNAPSHOT_DETAIL	       INDEX	  11582      11582	     42    0.1	    0.1
gc cu blocks served	 USER2	    IOPS       CF1			       TABLE	  73409      73415	 48,733   88.1	   89.7
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	  5,262    9.5	    9.7
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	    109    0.2	    0.2
			 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	    109    0.2	    0.2
			 SYS	    SYSAUX     WRH$_SQLSTAT_INDEX   3773525_33 INDEX	  73749      73749	     61    0.1	    0.1
			 SYS	    SYSAUX     WRM$_SNAPSHOT_DETAIL	       INDEX	  11582      11582	     42    0.1	    0.1
gc remote grants	 USER2	    IOPS       CF1			       TABLE	  73409      73415	889,246   59.1	   59.1
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	614,084   40.8	   40.8
			 SYS	    SYSAUX     WRH$_EVENT_HISTOGRAM 3773525_33 INDEX	  73834      73834	     32    0.0	    0.0
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	     25    0.0	    0.0
			 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	     25    0.0	    0.0
			 SYS	    SYSAUX     WRH$_SEG_STAT	    3773525_33 TABLE	  73789      73789	     21    0.0	    0.0
logical reads		 USER1	    IOPS       CF1			       TABLE	  73402      73404    1,681,248   18.4	   47.0
			 USER2	    IOPS       CF1			       TABLE	  73409      73415    1,474,368   16.2	   41.3
			 SYS	    SYSTEM     USER$			       TABLE	     22 	10	263,168    2.9	    7.4
			 USER1	    IOPS       I_CF1			       INDEX	  73408      73408	 81,968    0.9	    2.3
			 USER2	    IOPS       I_CF1			       INDEX	  73422      73422	 72,800    0.8	    2.0
physical reads		 USER1	    IOPS       CF1			       TABLE	  73402      73404    1,177,720   53.4	   52.3
			 USER2	    IOPS       CF1			       TABLE	  73409      73415    1,075,845   48.8	   47.7
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	     49    0.0	    0.0
			 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	     49    0.0	    0.0
			 SYS	    SYSAUX     SYS_LOB0000007451C00 S_LOB_P256 LOB P	  73950      73950	     36    0.0	    0.0
			 SYS	    SYSAUX     SMON_SCN_TIME		       TABLE	    425        423	     24    0.0	    0.0
physical read requests	 USER1	    IOPS       CF1			       TABLE	  73402      73404    1,177,720   53.4	   52.3
			 USER2	    IOPS       CF1			       TABLE	  73409      73415    1,075,845   48.8	   47.7
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	     49    0.0	    0.0
			 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	     49    0.0	    0.0
			 SYS	    SYSAUX     SYS_LOB0000007451C00 S_LOB_P256 LOB P	  73950      73950	     36    0.0	    0.0
			 SYS	    SYSAUX     WRH$_SYSSTAT_PK	    3773525_33 INDEX	  73783      73783	     20    0.0	    0.0
physical writes 	 USER1	    IOPS       CF1			       TABLE	  73402      73404	173,151    N/A	   51.7
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	161,450    N/A	   48.2
			 SYS	    SYSAUX     WRH$_EVENT_HISTOGRAM 3773525_33 INDEX	  73834      73834	     71    N/A	    0.0
			 SYS	    SYSAUX     WRH$_SQLSTAT_INDEX   3773525_33 INDEX	  73749      73749	     45    N/A	    0.0
			 SYS	    SYSAUX     WRH$_SYSSTAT_PK	    3773525_33 INDEX	  73783      73783	     32    N/A	    0.0
physical writes direct	 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	      5    N/A	   55.6
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	      2    N/A	   22.2
			 SYS	    SYSAUX     SYS_LOB0000007451C00 S_LOB_P256 LOB P	  73950      73950	      2    N/A	   22.2

Segment Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   39.6% of Total Logical Reads:       9,128,021
-> Captured Segments account for  102.2% of Total Physical Reads:	2,206,439
-> Captured Segments account for  102.2% of Total Physical Read Requests:	2,206,397
-> Captured Segments account for  102.2% of Total UnOptimized Read Requests:	   2,206,397
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	       1
-> Captured Segments account for   94.2% of Total Physical Writes:	   355,850
-> Captured Segments account for   99.2% of Total Physical Write Requests:	   303,888
-> Captured Segments account for   17.3% of Total Direct Physical Writes:	       52
-> Captured Segments account for  100.0% of Total Table Scans:		     3
-> Captured Segments account for   88.8% of Total CR Blocks Received:	       12,893
-> Captured Segments account for   98.8% of Total Current Blocks Received:	    55,271
-> Captured Segments account for   88.7% of Total CR Blocks Served:	     12,911
-> Captured Segments account for   98.7% of Total Current Blocks Served:	  55,293
-> Captured Segments account for   99.9% of Total Global Cache Remote Grants:	    1,504,860
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
physical write requests  USER1	    IOPS       CF1			       TABLE	  73402      73404	154,234   50.8	   51.2
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	146,786   48.3	   48.7
			 SYS	    SYSAUX     WRH$_EVENT_HISTOGRAM 3773525_33 INDEX	  73834      73834	     40    0.0	    0.0
			 SYS	    SYSAUX     WRH$_SYSSTAT_PK	    3773525_33 INDEX	  73783      73783	     31    0.0	    0.0
			 SYS	    SYSAUX     WRH$_SQLSTAT_INDEX   3773525_33 INDEX	  73749      73749	     27    0.0	    0.0
table scans		 SYS	    SYSTEM     I_OBJ5			       INDEX	     40 	40	      3    N/A	  100.0
			  --------------------------------------------------------------------------------------------------------------------

Library Cache Activity			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Summarized for all instances in the report
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-	  GES Lock	GES Pin      GES Pin   GES Inval GES Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations	  Requests     Requests     Releases	Requests     dations
--------------- ------------ ------ -------------- ------ ---------- -------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0		 2	      2 	   2	       0	   0
BODY			  31	0.0	       182    0.0	   0	    0		 1	    173 	 173	       0	   0
CLUSTER 		   7	0.0		 7    0.0	   0	    0		 7	      7 	   7	       0	   0
DBLINK			   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
EDITION 		   5	0.0		10    0.0	   0	    0		 5	      5 	   5	       0	   0
HINTSET OBJECT		   6   16.7		 6   16.7	   0	    0		 6	      6 	   6	       0	   0
INDEX			   2	0.0		 2   50.0	   1	    0		 2	      2 	   2	       0	   0
QUEUE			  60	0.0		60    0.0	   0	    0		60	     60 	  60	       0	   0
SCHEMA			   1	0.0		 0    N/A	   0	    0		 1	      0 	   0	       0	   0
SQL AREA		 944	1.3	    56,394    0.1	  14	    3		 0	      0 	   0	       0	   0
SQL AREA BUILD		  28   71.4		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
SQL AREA STATS		  28   57.1		28   57.1	   0	    0		 0	      0 	   0	       0	   0
TABLE/PROCEDURE 	 165	0.0	     1,412    3.5	  28	    0	       401	  1,198        1,198	       0	   0
TRANSFORMATION		  60	0.0		60    0.0	   0	    0		60	     60 	  60	       0	   0
TRIGGER 		  10	0.0		10    0.0	   0	    0		 0	     10 	  10	       0	   0
			  --------------------------------------------------------------------------------------------------------------------


PGA Aggregate Target Statistics 	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> all stats are reported in MegaBytes

	  PGA Aggr Target	   Auto PGA Target	      PGA Mem Alloc		Auto Workareas		 Manual Workarea	   Global Mem Bound
       ---------------------   -----------------------	 -----------------------   -----------------------   -----------------------   -----------------------
  I#	    Begin	 End	      Begin	   End		Begin	     End	  Begin        End	    Begin	 End	      Begin	   End
----   ---------- ----------   ------------ ----------	 ------------ ----------   ------------ ----------   ------------ ----------   ------------ ----------
   1	  3,215.0    3,215.0	    2,149.8    2,155.6	      1,093.2	 1,092.9	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
   2	  3,215.0    3,215.0	    1,951.3    1,969.5	      1,292.2	 1,280.4	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
			  --------------------------------------------------------------------------------------------------------------------


Process Memory Summary			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> B: Begin Snap   E: End Snap I#: Instance number
-> Max Alloc is Maximum PGA allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by instance, Begin/End snapshot, Alloc (MB)

							     Hist
					Avg Std Dev    Max    Max
		     Alloc     Used   Alloc   Alloc  Alloc  Alloc   Num   Num
  I#   Category       (MB)     (MB)    (MB)    (MB)   (MB)   (MB)  Proc Alloc
---- - ---------- -------- -------- ------- ------- ------ ------ ----- -----
   1 B Freeable      207.3	 .0	6.1    10.5	42    N/A    34    34
       Other	     618.0	N/A	5.7	8.5	42     42   109   109
       PL/SQL	       7.5	6.4	 .1	 .3	 2	3    91    91
       SQL	       4.5	2.8	 .1	 .2	 1     17    43    35
       Total	     837.2	9.1    12.0    19.5	86     62   277   269
     E Freeable      212.8	 .0	6.3    10.5	42    N/A    34    34
       Other	     613.4	N/A	5.6	8.5	42     42   109   109
       PL/SQL	       7.5	6.4	 .1	 .3	 2	3    91    91
       SQL	       3.3	2.3	 .1	 .2	 1     17    43    31
       Total	     837.0	8.7    12.0    19.5	86     62   277   265
   2 B Freeable      192.8	 .0	6.0    10.6	43    N/A    32    32
       Other	     573.5	N/A	5.2	8.0	39     39   110   110
       PL/SQL	      10.7	9.7	 .1	 .4	 2	3    92    92
       SQL	       3.2	1.9	 .1	 .2	 1     11    43    34
       Total	     780.2     11.7    11.4    19.1	84     52   277   268
     E Freeable      189.4	 .0	5.7    10.2	43    N/A    33    33
       Other	     566.0	N/A	5.2	8.2	42     42   108   108
       PL/SQL	      10.2	9.2	 .1	 .4	 2	3    90    90
       SQL	       2.9	1.9	 .1	 .2	 1     11    41    32
       Total	     768.4     11.1    11.2    19.0	87     56   272   263
			  --------------------------------------------------------------------------------------------------------------------


init.ora Parameters			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> '*' indicates same value across all instances

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
_ipddb_enable			* TRUE
audit_file_dest 		* /u01/app/oracle/admin/p30db/adump
audit_trail			* DB
cluster_database		* TRUE
compatible			* 19.0.0
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581, +FRA/
db_block_size			* 8192
db_create_file_dest		* +DATA
db_domain			* example.com
db_name 			* p30db
db_recovery_file_dest		* +FRA
db_recovery_file_dest_size	* 274877906944
diagnostic_dest 		* /u01/app/oracle
dispatchers			* (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 		1 1
				2 2
listener_networks		*
local_listener			1  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522
				2  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522
nls_language			* AMERICAN
nls_territory			* AMERICA
open_cursors			* 300
pga_aggregate_target		* 3371171840
processes			* 640
remote_listener 		*  mcracpoc-scan.example.com:1521
remote_login_passwordfile	* EXCLUSIVE
sga_target			* 10133438464
thread				1 1
				2 2
undo_tablespace 		1 UNDOTBS1
				2 UNDOTBS2
			  --------------------------------------------------------------------------------------------------------------------


init.ora Multi-valued Parameters	   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> This section only displays parameters that have more one value
-> '*' indicates same value across all instances
-> '(NULL)' indicates that the	parameter value was not set
-> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581
				* +FRA/P30DB/CONTROLFILE/current.257.1031594583
			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Events 		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  35dumc2tpr9dv 	   203653710		       64	   44.76
db file sequential read 	 31.47 UPDATE				   31.47
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


CPU + Wait for CPU		  8.39 UPDATE				    7.69


gc current grant 2-way		  4.90 UPDATE				    4.90

	  bhdvtsvjhgvrh 	  1497866750		       52	   36.36
db file parallel read		 18.18 TABLE ACCESS - BY INDEX ROWID BAT   18.18
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


db file sequential read 	  6.29 TABLE ACCESS - BY INDEX ROWID BAT    6.29


CPU + Wait for CPU		  5.59 TABLE ACCESS - BY INDEX ROWID BAT    2.80

			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Row Sources		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  35dumc2tpr9dv 	   203653710		       64	   44.76
UPDATE					   44.06 db file sequential read   31.47
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	  bhdvtsvjhgvrh 	  1497866750		       52	   36.36
TABLE ACCESS - BY INDEX ROWID BATCHED	   33.57 db file parallel read	   18.18
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


SELECT STATEMENT			    2.10 CPU + Wait for CPU	    2.10

			  --------------------------------------------------------------------------------------------------------------------

Top Sessions				   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
      759,23810      40.56 db file sequential read	       18.88
USER2		     sqlplus@mcracp...m (TNS V1-V3)	  27/60 [ 45%]	     24

			   CPU + Wait for CPU			6.99
							  10/60 [ 17%]	      4

			   db file parallel read		6.99
							  10/60 [ 17%]	      0

      882,61001      40.56 db file sequential read	       18.88
USER1		     sqlplus@mcracp...m (TNS V1-V3)	  27/60 [ 45%]	     21

			   db file parallel read	       11.19
							  16/60 [ 27%]	      0

			   CPU + Wait for CPU			6.99
							  10/60 [ 17%]	      8

	4,59906       6.29 db file parallel write		4.20
SYS		     oracle@mcracpo...le.com (DBW0)	   6/60 [ 10%]	      0

			   CPU + Wait for CPU			2.10
							   3/60 [  5%]	      0

      127,34074       2.80 log file parallel write		2.80
SYS		     oracle@mcracpo...le.com (LGWR)	   4/60 [  7%]	      0

	3,26754       2.10 CPU + Wait for CPU			2.10
SYS		     oracle@mcracpo...le.com (LMS0)	   3/60 [  5%]	      0

			  --------------------------------------------------------------------------------------------------------------------

Top Blocking Sessions			   DB/Inst: P30DB/p30db1  Snaps: 62-63

		  No data exists for this section of the report.
			  --------------------------------------------------------------------------------------------------------------------

Top PL/SQL Procedures			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       44.76
   SQL								       44.76
			  --------------------------------------------------------------------------------------------------------------------

Top Events				   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     37.76	 0.90
db file parallel read		    User I/O	    FOREGROUND
     18.18	 0.43
CPU + Wait for CPU		    CPU 	    FOREGROUND
     13.99	 0.33
CPU + Wait for CPU		    CPU 	    BACKGROUND
     10.49	 0.25
gc cr multi block request	    Cluster	    FOREGROUND
      5.59	 0.13
			  --------------------------------------------------------------------------------------------------------------------

Top Event P1/P2/P3 Values		   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 37.76		  "2","24913683","1"	   0.70
file#			   block#		      blocks

db file parallel read		 18.18		       "1","61","61"	   4.20
files			   blocks		      requests

						       "1","58","58"	   2.10


						       "1","29","29"	   1.40


gc cr multi block request	  5.59		  "2","26425986","1"	   0.70
file#			   block#		      class#

db file parallel write		  4.20		"2","0","2147483647"	   0.70
requests		   interrupt		      timeout

log file parallel write 	  2.80			"2","32","2"	   0.70
files			   blocks		      requests

			  --------------------------------------------------------------------------------------------------------------------

Top DB Objects				   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available.

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------------
	  73402      33.57 db file sequential read	       18.88
USER1.CF1 (TABLE)				      IOPS
			   db file parallel read	       11.19

			   gc cr multi block request		2.80

	  73409      33.57 db file sequential read	       18.88
USER2.CF1 (TABLE)				      IOPS
			   db file parallel read		6.99

			   gc current grant 2-way		4.20

			  --------------------------------------------------------------------------------------------------------------------

Activity Over Time			   DB/Inst: P30DB/p30db1  Snaps: 62-63
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
09:33:49   (1.2 min)	   16 db file sequential read		   10	 6.99
			      CPU + Wait for CPU		    3	 2.10
			      gc cr multi block request 	    2	 1.40
09:35:00   (5.0 min)	   75 db file sequential read		   25	17.48
			      CPU + Wait for CPU		   19	13.29
			      db file parallel read		   16	11.19
09:40:00   (3.9 min)	   52 db file sequential read		   19	13.29
			      CPU + Wait for CPU		   13	 9.09
			      db file parallel read		    9	 6.29
			  --------------------------------------------------------------------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_63'
	  -----------------------------------------

Analysis Period
---------------
AWR snapshot range from 62 to 63.
Time period starts at 08-FEB-20 09.33.49 AM
Time period ends at 08-FEB-20 09.43.52 AM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 1144 seconds.
The average number of active sessions was 1.9.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     1.9 | 100		  2
2  Top Segments by "User I/O" and "Cluster"  1.71 | 90.11	  2
3  Undersized SGA			     1.52 | 79.88	  1
4  Global Cache Messaging		     .34 | 17.95	  1
5  Global Cache Congestion		     .04 | 2.16 	  2


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 1.9 active sessions, 100% of total activity.
------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: SQL Tuning
   Estimated benefit is 1.05 active sessions, 55.17% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 7473 times and
      had an average elapsed time of 0.085 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER2.CF1" with object ID 73409 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE "USER1.CF1" with object ID 73402 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      "0sy7x6xzjg2yy" are responsible for 53% of the database time spent on
      the UPDATE statement with SQL_ID "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 0sy7x6xzjg2yy.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := '2';
	 v_update_pct PLS_INTEGER := '15';
	 v_max_loop_iterations PLS_INTEGER := '0';
	 v_seconds_to_run PLS_INTEGER := '600';
	 v_scale PLS_INTEGER := '1048576';
	 v_work_unit PLS_INTEGER := '64' ;
	 v_redo_stress	VARCHAR2(12) := 'LITE';
	 v_hot_schema_modulus PLS_INTEGER := '0';
	 v_do_hotspot	VARCHAR(7) := 'FALSE';
	 v_hotspot_mb  NUMBER := '8';
	 v_hotspot_offset_mb NUMBER := '16';
	 v_hotspot_modulus  PLS_INTEGER := '3';
	 v_sleep_modulus PLS_INTEGER := '0';
	 v_sleep_min NUMBER := '.1';
	 v_sleep_max NUMBER := '.5';
	 v_scan_query_pct PLS_INTEGER := '0';
	 v_obfuscate VARCHAR(5)  := 'FALSE';
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations > 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context('userenv','sid') from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,'YYYYDDMMHH24MISSFFFF');
	 -- DBMS_RANDOM.seed (val => v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now < v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' ||
	 (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks
	 ||  '	Random block ' || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid > ( v_random_block - v_work_unit ) ) AND  (custid <
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt >= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt >= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) >=  100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) >=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt >=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we've hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || '|' || v_total_time || '|' ||
	 v_total_cpu_tm || '|' || v_cpu_pct ;
	 END;

   Recommendation 2: SQL Tuning
   Estimated benefit is .85 active sessions, 44.83% of total activity.
   -------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 42415 times and
      had an average elapsed time of 0.011 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER1.CF1" with object ID 73402 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE "USER2.CF1" with object ID 73409 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      "078ab5pdvxx3c" are responsible for 53% of the database time spent on
      the SELECT statement with SQL_ID "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID 078ab5pdvxx3c.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := '1';
	 v_update_pct PLS_INTEGER := '15';
	 v_max_loop_iterations PLS_INTEGER := '0';
	 v_seconds_to_run PLS_INTEGER := '600';
	 v_scale PLS_INTEGER := '1048576';
	 v_work_unit PLS_INTEGER := '64' ;
	 v_redo_stress	VARCHAR2(12) := 'LITE';
	 v_hot_schema_modulus PLS_INTEGER := '0';
	 v_do_hotspot	VARCHAR(7) := 'FALSE';
	 v_hotspot_mb  NUMBER := '8';
	 v_hotspot_offset_mb NUMBER := '16';
	 v_hotspot_modulus  PLS_INTEGER := '3';
	 v_sleep_modulus PLS_INTEGER := '0';
	 v_sleep_min NUMBER := '.1';
	 v_sleep_max NUMBER := '.5';
	 v_scan_query_pct PLS_INTEGER := '0';
	 v_obfuscate VARCHAR(5)  := 'FALSE';
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations > 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context('userenv','sid') from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,'YYYYDDMMHH24MISSFFFF');
	 -- DBMS_RANDOM.seed (val => v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now < v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' ||
	 (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks
	 ||  '	Random block ' || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid > ( v_random_block - v_work_unit ) ) AND  (custid <
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt >= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt >= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) >=  100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) >=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt >=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we've hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || '|' || v_total_time || '|' ||
	 v_total_cpu_tm || '|' || v_cpu_pct ;
	 END;


Finding 2: Top Segments by "User I/O" and "Cluster"
Impact is 1.71 active sessions, 90.11% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Segment Tuning
   Estimated benefit is .85 active sessions, 45.06% of total activity.
   -------------------------------------------------------------------
   Action
      Run "Segment Advisor" on TABLE "USER1.CF1" with object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Investigate application logic involving I/O on TABLE "USER1.CF1" with
      object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 57% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1177720 physical reads, 173151 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .85 active sessions, 45.06% of total activity.
   -------------------------------------------------------------------
   Action
      Run "Segment Advisor" on TABLE "USER2.CF1" with object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Investigate application logic involving I/O on TABLE "USER2.CF1" with
      object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 65% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1075845 physical reads, 161450 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 1.37 active sessions, 72.15% of total activity.


Finding 3: Undersized SGA
Impact is 1.52 active sessions, 79.88% of total activity.
---------------------------------------------------------
The SGA was inadequately sized in some instances, causing additional I/O or
hard parses.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Examine instance ADDM
   Estimated benefit is 1.52 active sessions, 79.88% of total activity.
   --------------------------------------------------------------------
   Action
      Increase the size of the SGA on affected instances. Check the ADDM
      analysis of affected instances for more details.


Finding 4: Global Cache Messaging
Impact is .34 active sessions, 17.95% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Application Analysis
   Estimated benefit is .34 active sessions, 17.95% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 43% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is .34 active sessions, 17.96% of total activity.


Finding 5: Global Cache Congestion
Impact is .04 active sessions, 2.16% of total activity.
-------------------------------------------------------
Global Cache Service Processes (LMSn) were not processing requests fast
enough.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Database Configuration
   Estimated benefit is .04 active sessions, 2.16% of total activity.
   ------------------------------------------------------------------
   Action
      Increase throughput of the Global Cache Service (LMSn) processes.
      Increase the number of Global Cache Service processes by increasing the
      value of the parameter "gcs_server_processes". Alternatively, if the
      host is CPU bound consider increasing the OS priority of the Global
      Cache Service processes.
   Rationale
      The value of parameter "gcs_server_processes" was "2" during the
      analysis period.

   Recommendation 2: Database Configuration
   Estimated benefit is .04 active sessions, 2.16% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate cause of congestion on blocks received from remote instance
      "p30db1".
   Rationale
      This problem is often related to CPU bottleneck, virtual memory paging
      or inappropriate LMSn process priority in the remote instance.

   Symptoms That Led to the Finding:
   ---------------------------------
      Inter-instance messaging was consuming significant database time.
      Impact is .34 active sessions, 17.95% of total activity.
	 Wait class "Cluster" was consuming significant database time.
	 Impact is .34 active sessions, 17.96% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    2	    p30db2  mcracpoc2.example.com  1.9		    99.82
    1	    p30db1  mcracpoc1.example.com  0		    .18

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

The database's maintenance windows were active during 100% of the analysis
period.

End of Report
Report written to awr_rac.txt
SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  html







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 62

End   Snapshot Id specified: 63



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_62_63.html.	To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.html

<html lang="en"><head><title>AWR RAC Report for DB: P30DB, Snaps: 62-63</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY REPORT (RAC)

</h1>
<p />Database Summary<p />
<ul>
</ul>
<table border="0" class="tdiff" summary="Database Summary"><tr>
<th class="awrbg" colspan=" 8" id="Database">Database</th>
<th class="awrbg" colspan=" 2" id="SnapshotIds">Snapshot Ids</th>
<th class="awrbg" colspan=" 2" id="NumberofInstances">Number of Instances</th>
<th class="awrbg" colspan=" 2" id="NumberofHosts">Number of Hosts</th>
<th class="awrbg" colspan=" 2" id="ReportTotal(minutes)">Report Total (minutes)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Id">Id</th><th class="awrbg" scope="col" id="Name">Name</th><th class="awrbg" scope="col" id="UniqueName">Unique Name</th><th class="awrbg" scope="col" id="Role">Role</th><th class="awrbg" scope="col" id="Edition">Edition</th><th class="awrbg" scope="col" id="RAC">RAC</th><th class="awrbg" scope="col" id="CDB">CDB</th><th class="awrbg" scope="col" id="BlockSize">Block Size</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="Elapsedtime">Elapsed time</th></tr>
<tr><td align="right" headers="Database Id" class='awrclb'>3393773525</td><td headers="Database Name" class='awrc'>P30DB</td><td headers="Database UniqueName" class='awrc'>p30db</td><td headers="Database Role" class='awrc'>PRIMARY</td><td headers="Database Edition" class='awrc'>EE</td><td headers="Database RAC" class='awrc'>YES</td><td headers="Database CDB" class='awrc'>NO</td><td align="right" headers="Database BlockSize" class='awrc'>8192</td><td align="right" headers="SnapshotIds Begin" class='awrclb'>62</td><td align="right" headers="SnapshotIds End" class='awrc'>63</td><td align="right" headers="NumberofInstances InReport" class='awrclb'>2</td><td align="right" headers="NumberofInstances Total" class='awrc'>2</td><td align="right" headers="NumberofHosts InReport" class='awrclb'>2</td><td align="right" headers="NumberofHosts Total" class='awrc'>2</td><td align="right" headers="ReportTotal(minutes) DBtime" class='awrclb'>19.07</td><td align="right" headers="ReportTotal(minutes) Elapsedtime" class='awrcrb'>10.04</td></tr>
</table><p />
<p />Database Instances Included In Report<p />
<ul>
<li class="awr"> Listed in order of instance number, I#</li>
</ul>
<table border="0" class="tdiff" summary="Database Instances Included In Report. . Listed in order of instance number, I#"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Host</th><th class="awrbg" scope="col">Startup</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">Elapsed Time(min)</th><th class="awrbg" scope="col">DB time(min)</th><th class="awrbg" scope="col">Up Time(hrs)</th><th class="awrbg" scope="col">Avg Active Sessions</th><th class="awrbg" scope="col">Platform</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>p30db1</td><td class='awrc'>mcracpoc1.example.com</td><td class='awrc'>08-Feb-20 07:52</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td><td class='awrc'>19.0.0.0.0</td><td align="right" class='awrc'>10.03</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>1.85</td><td align="right" class='awrc'>0.00</td><td class='awrc'>Linux x86 64-bit</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>p30db2</td><td class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>08-Feb-20 07:52</td><td class='awrnc'>08-Feb-20 09:33</td><td class='awrnc'>08-Feb-20 09:43</td><td class='awrnc'>19.0.0.0.0</td><td align="right" class='awrnc'>10.03</td><td align="right" class='awrnc'>19.03</td><td align="right" class='awrnc'>1.85</td><td align="right" class='awrnc'>1.90</td><td class='awrnc'>Linux x86 64-bit</td></tr>
</table><p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>1.0E+02</td><td scope="row" class='awrc'>ADDM:3393773525_63</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrnc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrnc'>1.90</td><td align="right" class='awrnc'>90.11</td><td scope="row" class='awrnc'>ADDM:3393773525_63</td><td class='awrnc'>08-Feb-20 09:33</td><td class='awrnc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrc'>Undersized SGA</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>79.88</td><td scope="row" class='awrc'>ADDM:3393773525_63</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>1.90</td><td align="right" class='awrnc'>17.95</td><td scope="row" class='awrnc'>ADDM:3393773525_63</td><td class='awrnc'>08-Feb-20 09:33</td><td class='awrnc'>08-Feb-20 09:43</td></tr>
<tr><td class='awrc'>Global Cache Congestion</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>2.16</td><td scope="row" class='awrc'>ADDM:3393773525_63</td><td class='awrc'>08-Feb-20 09:33</td><td class='awrc'>08-Feb-20 09:43</td></tr>
</table><p />
<p />Cache Sizes<p />
<ul>
<li class="awr"> All values are in Megabytes </li>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values displayed only if different from Begin values</li>
</ul>
<table border="0" class="tdiff" summary="Cache Sizes. . All values are in Megabytes. Listed in order of instance number, I#. End values displayed only if different from Begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="MemoryTarget">Memory Target</th>
<th class="awrbg" colspan=" 2" id="SgaTarget">Sga Target</th>
<th class="awrbg" colspan=" 2" id="DBCache">DB Cache</th>
<th class="awrbg" colspan=" 2" id="SharedPool">Shared Pool</th>
<th class="awrbg" colspan=" 2" id="LargePool">Large Pool</th>
<th class="awrbg" colspan=" 2" id="JavaPool">Java Pool</th>
<th class="awrbg" colspan=" 2" id="StreamsPool">Streams Pool</th>
<th class="awrbg" colspan=" 2" id="PGATarget">PGA Target</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col">Log Buffer</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="MemoryTarget Begin" class='awrclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrclb'>8,000</td><td align="right" headers="DBCache End" class='awrc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrclb'>1,440</td><td align="right" headers="SharedPool End" class='awrc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrclb'>64</td><td align="right" headers="LargePool End" class='awrc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrclb'>3,232</td><td align="right" headers="PGATarget End" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="MemoryTarget Begin" class='awrnclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrnc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrnclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrnc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrnclb'>7,872</td><td align="right" headers="DBCache End" class='awrnc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrnclb'>1,568</td><td align="right" headers="SharedPool End" class='awrnc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrnclb'>64</td><td align="right" headers="LargePool End" class='awrnc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrnc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrnc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrnclb'>3,232</td><td align="right" headers="PGATarget End" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>9,664</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>7,936</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>1,504</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>64</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3,232</td><td align="right" class='awrcrbt'>&#160;</td><td align="right" class='awrct'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Min</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>9,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7,872</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,440</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3,232</td><td align="right" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Max</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>9,664</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>8,000</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>1,568</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>64</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>3,232</td><td align="right" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
</table><p />

<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#12010">OS Statistics</a></li>
<li class="awr"><a class="awr" href="#629">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#621">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#639">Global Activity Load Profile</a></li>
<li class="awr"><a class="awr" href="#605">Global Cache and Enqueue Statistics Summary</a></li>
<li class="awr"><a class="awr" href="#12033">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#12034">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#607">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#608">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#622">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#623">Global Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#630">I/O Statistics</a></li>
<li class="awr"><a class="awr" href="#12083">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#633">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#638">Supplemental Information</a></li>
<li class="awr"><a class="awr" href="#43">Active Session History(ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99994">ADDM Reports</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<a class="awr" name="12010"></a>
<h3 class="awr">OS Statistics By Instance</h3>
<ul>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values are diplayed only if different from begin values</li>
</ul>
<table border="0" class="tdiff" summary="OS Statistics By Instance. . Listed in order of instance number, I#. End values are diplayed only if different from begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="CPU">CPU</th>
<th class="awrbg" colspan=" 2" id="Load">Load</th>
<th class="awrbg" colspan=" 5" id="%CPU">% CPU</th>
<th class="awrbg" colspan=" 3" id="Time(s)">Time (s)</th>
<th class="awrbg" colspan=" 1" id="Memory">Memory</th>
<th class="awrbg" colspan=" 4" id="EndValues">End Values</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="%Busy">% Busy</th><th class="awrbg" scope="col" id="%Usr">% Usr</th><th class="awrbg" scope="col" id="%Sys">% Sys</th><th class="awrbg" scope="col" id="%WIO">% WIO</th><th class="awrbg" scope="col" id="%Idl">% Idl</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Idle">Idle</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="MB">MB</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Memory(M)">Memory (M)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="CPU #CPUs" class='awrclb'>8</td><td align="right" headers="CPU #Cores" class='awrc'>4</td><td align="right" headers="CPU #Sckts" class='awrc'>1</td><td align="right" headers="Load Begin" class='awrclb'>0.30</td><td align="right" headers="Load End" class='awrc'>0.79</td><td align="right" headers="%CPU %Busy" class='awrclb'>9.73</td><td align="right" headers="%CPU %Usr" class='awrc'>2.98</td><td align="right" headers="%CPU %Sys" class='awrc'>5.43</td><td align="right" headers="%CPU %WIO" class='awrc'>0.83</td><td align="right" headers="%CPU %Idl" class='awrc'>90.27</td><td align="right" headers="Time(s) Busy" class='awrclb'>440.39</td><td align="right" headers="Time(s) Idle" class='awrc'>4,085.85</td><td align="right" headers="Time(s) Total" class='awrc'>4,526.24</td><td align="right" headers="Memory MB" class='awrclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="CPU #CPUs" class='awrnclb'>8</td><td align="right" headers="CPU #Cores" class='awrnc'>4</td><td align="right" headers="CPU #Sckts" class='awrnc'>1</td><td align="right" headers="Load Begin" class='awrnclb'>1.51</td><td align="right" headers="Load End" class='awrnc'>0.97</td><td align="right" headers="%CPU %Busy" class='awrnclb'>13.02</td><td align="right" headers="%CPU %Usr" class='awrnc'>4.50</td><td align="right" headers="%CPU %Sys" class='awrnc'>6.62</td><td align="right" headers="%CPU %WIO" class='awrnc'>10.15</td><td align="right" headers="%CPU %Idl" class='awrnc'>86.98</td><td align="right" headers="Time(s) Busy" class='awrnclb'>586.48</td><td align="right" headers="Time(s) Idle" class='awrnc'>3,916.79</td><td align="right" headers="Time(s) Total" class='awrnc'>4,503.27</td><td align="right" headers="Memory MB" class='awrnclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrnclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrnc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrnc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclbt'>1,026.87</td><td align="right" class='awrct'>8,002.64</td><td align="right" class='awrct'>9,029.51</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="629"></a>
<h2 class="awr">
Time Model Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12014">Time Model</a></li>
<li class="awr"><a class="awr" href="#12015">Time Model - % of DB time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12014"></a>
<h3 class="awr">Time Model</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Time Model"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">DB time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">SQL Exec Ela (s)</th><th class="awrbg" scope="col">Parse Ela (s)</th><th class="awrbg" scope="col">Hard Parse Ela (s)</th><th class="awrbg" scope="col">PL/SQL Ela (s)</th><th class="awrbg" scope="col">Java Ela (s)</th><th class="awrbg" scope="col">bg time (s)</th><th class="awrbg" scope="col">bg CPU (s)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>2.11</td><td align="right" class='awrc'>1.12</td><td align="right" class='awrc'>1.99</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.43</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>117.87</td><td align="right" class='awrc'>184.56</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1,142.08</td><td align="right" class='awrnc'>246.93</td><td align="right" class='awrnc'>1,141.96</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>179.32</td><td align="right" class='awrnc'>112.39</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>1,144.19</td><td align="right" class='awrct'>248.06</td><td align="right" class='awrct'>1,143.95</td><td align="right" class='awrct'>0.09</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrct'>2.07</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>297.19</td><td align="right" class='awrct'>296.96</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>572.10</td><td align="right" class='awrnc'>124.03</td><td align="right" class='awrnc'>571.97</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>148.59</td><td align="right" class='awrnc'>148.48</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>806.08</td><td align="right" class='awrc'>173.82</td><td align="right" class='awrc'>806.08</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.85</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>43.45</td><td align="right" class='awrc'>51.03</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12015"></a>
<h3 class="awr">Time Model - % of DB time</h3>
<ul>
<li class="awr"> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]</li>
</ul>
<table border="0" class="tdiff" summary="Time Model - % of DB time. . % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 6" id="%DBtime">% DB time</th>
<td>&#160;</td><th class="awrbg" colspan=" 1" id="%bgtime">% bg time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">% Total DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="SQLExecEla">SQL Exec Ela</th><th class="awrbg" scope="col" id="ParseEla">Parse Ela</th><th class="awrbg" scope="col" id="HardParse">Hard Parse</th><th class="awrbg" scope="col" id="PL/SQLEla">PL/SQL Ela</th><th class="awrbg" scope="col" id="JavaEla">Java Ela</th><th class="awrbg" scope="col">% Total bg time</th><th class="awrbg" scope="col" id="bgCPU">bg CPU</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>0.18</td><td align="right" headers="%DBtime DBCPU" class='awrclb'>53.18</td><td align="right" headers="%DBtime SQLExecEla" class='awrc'>94.25</td><td align="right" headers="%DBtime ParseEla" class='awrc'>3.96</td><td align="right" headers="%DBtime HardParse" class='awrc'>2.44</td><td align="right" headers="%DBtime PL/SQLEla" class='awrc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrc'>0.00</td><td align="right" class='awrc'>39.66</td><td align="right" headers="%bgtime bgCPU" class='awrcbb'>156.58</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>99.82</td><td align="right" headers="%DBtime DBCPU" class='awrnclb'>21.62</td><td align="right" headers="%DBtime SQLExecEla" class='awrnc'>99.99</td><td align="right" headers="%DBtime ParseEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrnc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrnc'>0.00</td><td align="right" class='awrnc'>60.34</td><td align="right" headers="%bgtime bgCPU" class='awrncbb'>62.68</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrclbt'>37.40</td><td align="right" class='awrct'>97.12</td><td align="right" class='awrct'>1.98</td><td align="right" class='awrct'>1.22</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrcbbt'>109.63</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="621"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12011">Foreground Wait Classes -	% of Total DB time</a></li>
<li class="awr"><a class="awr" href="#12012">Foreground Wait Classes</a></li>
<li class="awr"><a class="awr" href="#12013">Foreground Wait Classes -	% of DB time </a></li>
<li class="awr"><a class="awr" href="#12050">Top Timed Events</a></li>
<li class="awr"><a class="awr" href="#12051">Top Timed Foreground Events</a></li>
<li class="awr"><a class="awr" href="#12052">Top Timed Background Events</a></li>
<li class="awr"><a class="awr" href="#12053">Foreground Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12054">Background Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12055">Wait Event Histogram (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12011"></a>
<h3 class="awr">Foreground Wait Classes -  % of Total DB time</h3>
<ul>
<li class="awr"> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of Total DB time. . Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time"><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">User I/O</th><th class="awrbg" scope="col">Sys I/O</th><th class="awrbg" scope="col">Other</th><th class="awrbg" scope="col">Applic</th><th class="awrbg" scope="col">Commit</th><th class="awrbg" scope="col">Network</th><th class="awrbg" scope="col">Concurcy</th><th class="awrbg" scope="col">Config</th><th class="awrbg" scope="col">Cluster</th><th class="awrbg" scope="col">Admin</th><th class="awrbg" scope="col">Scheduler</th><th class="awrbg" scope="col">DB CPU</th></tr>
<tr><td class='awrc'>&#160;</td><td align="right" class='awrc'>72.15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>17.96</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>21.68</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12012"></a>
<h3 class="awr">Foreground Wait Classes</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">User I/O(s)</th><th class="awrbg" scope="col">Sys I/O(s)</th><th class="awrbg" scope="col">Other(s)</th><th class="awrbg" scope="col">Applic (s)</th><th class="awrbg" scope="col">Commit (s)</th><th class="awrbg" scope="col">Network (s)</th><th class="awrbg" scope="col">Concurcy (s)</th><th class="awrbg" scope="col">Config (s)</th><th class="awrbg" scope="col">Cluster (s)</th><th class="awrbg" scope="col">Admin (s)</th><th class="awrbg" scope="col">Scheduler (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1.12</td><td align="right" class='awrc'>2.11</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>825.49</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2.81</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>204.83</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>246.93</td><td align="right" class='awrnc'>1,142.08</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>825.58</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>3.18</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.07</td><td align="right" class='awrct'>205.49</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>248.06</td><td align="right" class='awrct'>1,144.19</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>412.79</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1.59</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>102.75</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>124.03</td><td align="right" class='awrnc'>572.10</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>583.64</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1.73</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>144.37</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>173.82</td><td align="right" class='awrc'>806.08</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12013"></a>
<h3 class="awr">Foreground Wait Classes -  % of DB time </h3>
<ul>
<li class="awr"> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of DB time . . % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 12" id="%DBtime">% DB time</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="UserI/O">User I/O</th><th class="awrbg" scope="col" id="SysI/O">Sys I/O</th><th class="awrbg" scope="col" id="Other">Other</th><th class="awrbg" scope="col" id="Applic">Applic</th><th class="awrbg" scope="col" id="Commit">Commit</th><th class="awrbg" scope="col" id="Network">Network</th><th class="awrbg" scope="col" id="Concurcy">Concurcy</th><th class="awrbg" scope="col" id="Config">Config</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Admin">Admin</th><th class="awrbg" scope="col" id="Scheduler">Scheduler</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col">% Total DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="%DBtime UserI/O" class='awrclb'>4.49</td><td align="right" headers="%DBtime SysI/O" class='awrc'>1.02</td><td align="right" headers="%DBtime Other" class='awrc'>17.25</td><td align="right" headers="%DBtime Applic" class='awrc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrc'>0.57</td><td align="right" headers="%DBtime Network" class='awrc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrc'>0.24</td><td align="right" headers="%DBtime Config" class='awrc'>0.10</td><td align="right" headers="%DBtime Cluster" class='awrc'>31.29</td><td align="right" headers="%DBtime Admin" class='awrc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrcrb'>53.18</td><td align="right" class='awrc'>0.18</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="%DBtime UserI/O" class='awrnclb'>72.28</td><td align="right" headers="%DBtime SysI/O" class='awrnc'>0.00</td><td align="right" headers="%DBtime Other" class='awrnc'>0.25</td><td align="right" headers="%DBtime Applic" class='awrnc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Network" class='awrnc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrnc'>0.00</td><td align="right" headers="%DBtime Config" class='awrnc'>0.01</td><td align="right" headers="%DBtime Cluster" class='awrnc'>17.93</td><td align="right" headers="%DBtime Admin" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrnc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrncrb'>21.62</td><td align="right" class='awrnc'>99.82</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>38.38</td><td align="right" class='awrct'>0.51</td><td align="right" class='awrct'>8.75</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.57</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.12</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrct'>24.61</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrcrbt'>37.40</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12050"></a>
<h3 class="awr">Top Timed Events</h3>
<ul>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time ' 	     : Per-instance 'Wait Time Avg ' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Events. . Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time ' : Per-instance 'Wait Time Avg ' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>395,342</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>566.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>49.47</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>536.23us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>633.51us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>39,790</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>259.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>22.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>248.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>21.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>249,713</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>99.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>397.11us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>514.91us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>397.07us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>632.76us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>166.66us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>7,910</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>58.55</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.12</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.48ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>55.61us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>28,550</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>33.36</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>26,176</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>31.51</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.20ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.75</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>1.52ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>11,216</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>29.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>836.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>1.29ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>45,460</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>431.65us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.72</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>454.16us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>431.65us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>476.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>31.83us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>28,382</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>518.40us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>477.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>436.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>518.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>58.23us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>199</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>1.49</td><td align="right" headers="WaitTime AvgWait" class='awrct'>7.48ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>70.58</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>252</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>56.72</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>53.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrnclb'>31</td><td align="right" headers="Event %Timeouts" class='awrnc'>80.65</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>35.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>52.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>2,195</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>480.26us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>49.99</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrnclb'>1,034</td><td align="right" headers="Event %Timeouts" class='awrnc'>43.52</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>921.96us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>45.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrclb'>54</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.88</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>41.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,437</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>422.17us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>28.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>160</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.53</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>25.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>3,026</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>172.80us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>24.80</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>395,137</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>565.89</td><td align="right" headers="WaitTime AvgWait" class='awrct'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>49.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>39,790</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>259.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>22.76</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>246.93</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>21.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>249,663</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>99.13</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>397.07us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>7,711</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>57.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>28,550</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>33.36</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>26,016</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>30.97</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>11,215</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>29.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>45,457</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>431.65us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.72</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>28,215</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.64</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>518.88us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12051"></a>
<h3 class="awr">Top Timed Foreground Events</h3>
<ul>
<li class="awr"> Foreground Activity is captured in release 11g and above </li>
<li class="awr"> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Foreground Events. . Foreground Activity is captured in release 11g and above. For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>394,925</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>565.65</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>49.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>672.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>537.44us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>39,790</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>259.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>22.76</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>248.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>21.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>249,560</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>99.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>397.03us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>514.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>396.98us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>632.76us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>166.72us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrclb'>28,550</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>33.36</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>1</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>11,208</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>29.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>45,427</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.61</td><td align="right" headers="WaitTime AvgWait" class='awrc'>431.64us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>398.32us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>365.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>431.65us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>47.13us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>28,273</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.64</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>517.65us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>472.71us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>427.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>518.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>64.28us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>13,680</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.27</td><td align="right" headers="WaitTime AvgWait" class='awrc'>458.56us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>439.95us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>829.82us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>337.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>337.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>337.10ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>337.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>&#160;</td><td headers="Wait Event" class='awrct'>DB CPU</td><td align="right" headers="Event Waits" class='awrclbt'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrct'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>1.12</td><td align="right" headers="WaitTime AvgWait" class='awrct'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrct'>53.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>217</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>16.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.31</td><td align="right" headers="WaitTime AvgWait" class='awrc'>314.85ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>14.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>129</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>672.50us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>161</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>427.25us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.26</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.54</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>92</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>423.15us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>50</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>632.76us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.50</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>136</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>157.72us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>394,796</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>565.57</td><td align="right" headers="WaitTime AvgWait" class='awrct'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>49.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>39,790</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>259.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>22.76</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>246.93</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>21.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>249,510</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>99.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>396.98us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrclb'>28,550</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>33.36</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>11,208</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>29.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>45,426</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.61</td><td align="right" headers="WaitTime AvgWait" class='awrc'>431.65us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.72</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>28,112</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.57</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>518.17us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>13,463</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.92</td><td align="right" headers="WaitTime AvgWait" class='awrc'>439.95us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>337.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12052"></a>
<h3 class="awr">Top Timed Background Events</h3>
<ul>
<li class="awr"> % of bg time: % of background elapsed time </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Background Events. . % of bg time: % of background elapsed time. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>background cpu time</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>296.96</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>99.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>7,911</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>58.55</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>19.70</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>42.58us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>26,212</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>31.52</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.20ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>10.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>1.52ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>532</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>2.18ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrclb'>68</td><td align="right" headers="Event %Timeouts" class='awrc'>73.53</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>31.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>31.50ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>27.41ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>35.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>5.78ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>1,644</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.77</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>375.37us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrclb'>108</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>15.78ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>15.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>15.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>16.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>634.55us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>3,615</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.58</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>437.07us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>437.24us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>232.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>641.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>289.18us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>3,052</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.21</td><td align="right" headers="WaitTime AvgWait" class='awrc'>394.86us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.41</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>328.19us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>176.12us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>480.26us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>215.06us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrnclb'>1,491</td><td align="right" headers="Event %Timeouts" class='awrnc'>60.56</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>671.92us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>514.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>106.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>921.96us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>576.83us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>&#160;</td><td headers="Wait Event" class='awrct'>background cpu time</td><td align="right" headers="Event Waits" class='awrclbt'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrct'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>184.56</td><td align="right" headers="WaitTime AvgWait" class='awrct'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrct'>156.58</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>200</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.49</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.46ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>252</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.20</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrnclb'>31</td><td align="right" headers="Event %Timeouts" class='awrnc'>80.65</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>35.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.94</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>2,195</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>480.26us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrnclb'>1,034</td><td align="right" headers="Event %Timeouts" class='awrnc'>43.52</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>921.96us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrclb'>54</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.88</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.74</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,345</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.57</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>422.10us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.48</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>160</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.53</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.45</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>2,890</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>173.51us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>&#160;</td><td headers="Wait Event" class='awrct'>background cpu time</td><td align="right" headers="Event Waits" class='awrclbt'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrct'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>112.39</td><td align="right" headers="WaitTime AvgWait" class='awrct'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrct'>62.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>7,711</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>57.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>31.82</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>26,052</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>30.99</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>17.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>280</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.83ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>847</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.73ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.82</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>1,806</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>641.72us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrclb'>37</td><td align="right" headers="Event %Timeouts" class='awrc'>67.57</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.41ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>54</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.46</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>28,125</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>21.92us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>2,619</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>179.58us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.26</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12053"></a>
<h3 class="awr">Foreground Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>394,925</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>565.65</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>49.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>672.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>537.44us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>39,790</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>259.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>22.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.53ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>249,560</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>99.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>397.03us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>8.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>514.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>396.98us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>632.76us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>166.72us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>28,550</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>33.36</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrclb'>11,208</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>29.90</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.61</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>45,427</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>431.64us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>398.32us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>365.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>431.65us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>47.13us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>28,273</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>14.64</td><td align="right" headers="WaitTime AvgWait" class='awrc'>517.65us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>472.71us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>427.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>518.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>64.28us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>13,680</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>458.56us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>439.95us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>829.82us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>337.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>337.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>337.10ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>337.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,871</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.90</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>480.33us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>477.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>475.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>480.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.62us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrclb'>210</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.71</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.40ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>461</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.53</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>873.52us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>423.15us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>636.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.35</td><td align="right" headers="WaitTime AvgWait" class='awrc'>34.63ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>159.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>314.85ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>220.17ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>57</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.32</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.57ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.57ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.57ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.57ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>10.02ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>10.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>10.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>undo segment extension</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>17.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>17.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>17.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>17.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.67ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>889.53us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.39ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>202.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>12.57ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>8.75ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>24</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>144</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>163.38us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>208.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>157.72us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>259.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>72.06us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.50ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.50ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.50ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.50ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>154</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>137.54us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>310.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>117.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>503.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>273.14us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>24</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>634.75us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>634.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>628.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>640.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>8.49us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrclb'>18</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>606.11us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>606.11us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>606.11us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>606.11us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>15</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>648.47us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>648.47us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>648.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>648.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrclb'>14</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>541.50us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>541.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>383.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>699.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>223.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>SQL*Net break/reset to client</td><td align="right" headers="Event Waits" class='awrnclb'>120</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>57.74us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>57.74us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>57.74us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>57.74us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>223</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>30.21us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>30.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.72us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>30.59us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>612.11ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS initialization</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>791.13us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>791.13us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>686.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>895.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>147.96us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>852.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>852.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>852.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>852.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>779.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>779.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>779.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>779.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>491.86us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>491.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>491.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>491.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>250.92us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>250.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>250.92us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>250.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>377.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>377.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>377.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>377.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>629.75us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>843.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>416.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>604.58us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>696.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>696.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>696.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>696.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>682.67us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>682.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>682.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>682.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc index operation</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>119</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.08us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>64.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>14.23us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>115.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>71.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>805.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>805.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>805.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>805.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: query</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>184.83us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>184.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>184.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>184.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>82.64us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>82.64us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>82.64us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>82.64us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>135</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.29us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.23us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>547.44ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>707.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>707.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>707.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>707.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges ipc enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>57</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.49us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.49us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current split</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>283.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>283.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>283.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>283.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>29</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.34us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>8.34us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.34us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>8.34us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>120.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>120.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>120.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>120.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>38.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>38.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>38.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>38.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>96.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>96.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>96.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>96.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>24.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>11.49us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>10.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>10.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>10.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>27.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>27.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>27.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>27.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>watchdog main loop</td><td align="right" headers="Event Waits" class='awrnclb'>1,604</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4,803.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2994.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>419.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2994.40ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2988.81ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3000.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>7.91ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>135</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>600.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4444.82ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>52.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2419.84ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>632.09us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4839.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3421.28ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execution Msg</td><td align="right" headers="Event Waits" class='awrnclb'>42</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>22.51ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>22.51ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>20.74ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>24.28ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.50ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrclb'>38</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Msg Fragment</td><td align="right" headers="Event Waits" class='awrnclb'>48</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>591.52us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>591.52us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>528.04us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>655.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>89.77us</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12054"></a>
<h3 class="awr">Background Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%bgtime">%bg time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>7,911</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>58.55</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.40ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>42.58us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>26,212</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>31.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.20ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.52ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>532</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.37ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.18ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrnclb'>68</td><td align="right" headers="Event %Timeouts" class='awrnc'>73.53</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>31.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>31.50ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>27.41ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>35.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.78ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>1,644</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.77</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.08ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>375.37us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>.96ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>108</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>15.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>16.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>634.55us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>3,615</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.58</td><td align="right" headers="WaitTime AvgWait" class='awrc'>437.07us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>437.24us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>232.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>641.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>289.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>3,052</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>394.86us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>328.19us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>176.12us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>480.26us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>215.06us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrclb'>1,491</td><td align="right" headers="Event %Timeouts" class='awrc'>60.56</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>671.92us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>514.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>106.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>921.96us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>576.83us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>5,509</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.97</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>176.40us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>176.55us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>173.51us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>179.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.29us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrclb'>366</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.69</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.88ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>532.87us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,495</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.65</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>436.04us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>491.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>422.10us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>560.95us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>98.18us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>28,408</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>21.91us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>21.78us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>21.65us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>21.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>188.41ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrnclb'>21,235</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.53</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.15us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>25.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.25us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>132.75ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>273</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.44</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.63ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>597.96us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.72ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>796.38us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>418</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>830.64us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>626.20us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>304.92us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>947.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>454.35us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>726</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.32</td><td align="right" headers="WaitTime AvgWait" class='awrc'>445.63us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>627.09us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>436.72us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>817.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>269.23us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AQ: RAC AQ Network</td><td align="right" headers="Event Waits" class='awrnclb'>12,027</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.31</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.94us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>25.94us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>26.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>203.07ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CGS wait for IPC msg</td><td align="right" headers="Event Waits" class='awrclb'>13,003</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>22.87us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>22.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>22.21us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>23.53us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>930.82ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DFS lock handle</td><td align="right" headers="Event Waits" class='awrnclb'>643</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>453.10us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>453.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>448.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>458.11us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.52us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch free</td><td align="right" headers="Event Waits" class='awrclb'>1,175</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>212.20us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>212.27us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>208.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>216.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.95us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>2,269</td><td align="right" headers="Event %Timeouts" class='awrnc'>98.55</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>92.79us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>406.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>88.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>724.69us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>450.00us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrclb'>23</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.90ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.06ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>41</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.17</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.16ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.16ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.16ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.16ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>338</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.16</td><td align="right" headers="WaitTime AvgWait" class='awrc'>481.76us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>245.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>483.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>336.70us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrnclb'>240</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>586.63us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>593.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>572.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>614.78us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>30.04us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>52</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.71ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.59ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.86ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>376.92us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>21</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.44ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.44ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>174</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>582.54us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>575.37us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>533.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>616.98us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>58.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs remastering wait for read latch</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>10.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>18.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>20.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.20ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>oracle thread bootstrap</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>20.01ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>19.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>19.71ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>20.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>348.01us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file async I/O submit</td><td align="right" headers="Event Waits" class='awrnclb'>13,206</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.90us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>8.52us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.15us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>12</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.49ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.49ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.49ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>155</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>532.86us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>532.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>532.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>532.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>106</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>717.03us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>702.13us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>685.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>718.93us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>23.76us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>926</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>64.22us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>64.23us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>62.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>65.95us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.44us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>331</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>176.09us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>130.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>73.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>187.84us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>80.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write temp</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.38ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.38ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>18</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.44ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.44ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ksxr poll remote instances</td><td align="right" headers="Event Waits" class='awrnclb'>1,714</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>23.77us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>23.77us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>23.01us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>24.53us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.08us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data query</td><td align="right" headers="Event Waits" class='awrclb'>37</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.08ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>154.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>61</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>645.05us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>646.97us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>641.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>652.05us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>7.19us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>cursor: pin S wait on X</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.08ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrnclb'>57</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>673.70us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>633.90us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>549.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>717.93us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>118.84us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrclb'>61</td><td align="right" headers="Event %Timeouts" class='awrc'>70.49</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>618.69us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>619.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>615.70us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>623.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.37us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: data update</td><td align="right" headers="Event Waits" class='awrnclb'>42</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>807.29us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>807.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>801.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>812.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>7.68us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrclb'>14</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.42ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.42ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>70.21us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,213</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.26</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>26.61us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>26.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.77us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>27.45us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.18us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.97ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>753.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>303.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr disk read</td><td align="right" headers="Event Waits" class='awrnclb'>66</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>458.21us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>464.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>423.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>505.43us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>57.99us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache pin</td><td align="right" headers="Event Waits" class='awrclb'>55</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>546.98us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>543.18us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>524.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>562.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>26.87us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>689.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.85ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.53ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>33</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>445.39us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>486.14us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>439.77us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>532.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>65.57us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>20</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>680.60us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>822.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>664.84us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>222.85us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>37.50</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>788.25us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>800.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>750.90us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>850.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>70.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>libcache interrupt action by LCK</td><td align="right" headers="Event Waits" class='awrnclb'>1,652</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.23us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.59us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>537.22ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>919.13us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>883.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>836.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>931.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>67.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>os thread creation</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.44ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.45ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.38us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CO - master slave det</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>711.40us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>711.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>711.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>711.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrnclb'>51</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>139.24us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>140.06us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>98.04us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>182.08us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>59.43us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>35</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>200.83us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>200.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>200.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>200.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: DW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.28ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>209.30us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>wait list latch free</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.74ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.74ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.74ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>563.88us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>563.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>563.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>563.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrclb'>219</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>18.24us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>18.77us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>16.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>21.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.34us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy acquire</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.78ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.78ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: SM -  contention</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>855.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>939.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>770.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>238.53us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.29ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.29ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>347.44us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>347.44us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>347.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>347.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TA - contention</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>703.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>703.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>547.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>858.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>219.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc index operation</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.34ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>146.93us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>146.93us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>114.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>179.71us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>46.37us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.81ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.81ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.81ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>249.29us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>249.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>249.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>249.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>420.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>420.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>420.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>420.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TK - Auto Task Serialization</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>732.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>732.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>563.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>901.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>239.00us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>46.87us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>46.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>46.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>46.87us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>592.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>592.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>467.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>717.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>176.78us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>547.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>547.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>547.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>547.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>68.21us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>68.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>52.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>84.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>22.73us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>477.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>477.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>477.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>477.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR wait for redo copy</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>77.70us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>80.94us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>76.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>85.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.74us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>GCR CSS group update</td><td align="right" headers="Event Waits" class='awrclb'>38</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.18us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.18us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>12.79us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>15.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.97us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>268.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>268.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>268.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>268.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>GCR CSS group query</td><td align="right" headers="Event Waits" class='awrclb'>37</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.24us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.39us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>15.05us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current split</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>478.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>478.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>478.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>478.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>81.80us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>74.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>35.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>112.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>54.57us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>15</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.47us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>13.78us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>10.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>17.22us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.87us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc quiesce</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>195.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>195.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>195.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>195.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>175.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>175.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>175.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>175.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges ipc enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>26</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.27us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.27us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.27us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.27us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: messages</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>53.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>53.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>13.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>93.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>56.57us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>undo_retention publish retry</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>25.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>25.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>26.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.67us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>22.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>32.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.50us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.86us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>235.70ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache mutex</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>35.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>35.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>35.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>35.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>15.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>15.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>15.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>15.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>.00ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: checkpoint queue latch</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>12.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>12.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>12.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM background starting</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>rdbms ipc message</td><td align="right" headers="Event Waits" class='awrclb'>42,084</td><td align="right" headers="Event %Timeouts" class='awrc'>53.69</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>27,569.98</td><td align="right" headers="WaitTime AvgWait" class='awrc'>655.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>92.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>749.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>481.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1017.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>378.58ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Idle Wait</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>20,478.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1462.76 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>68.91</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1462.76 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1462.54 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1462.97 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>306.07ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Space Manager: slave idle wait</td><td align="right" headers="Event Waits" class='awrclb'>5,058</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19,205.32</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3797.02ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>64.62</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3797.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3784.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3809.80ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>18.01ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>class slave wait</td><td align="right" headers="Event Waits" class='awrnclb'>15,031</td><td align="right" headers="Event %Timeouts" class='awrnc'>79.68</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8,117.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>540.06ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>27.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>539.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>529.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>549.80ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.03ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>wait for unread message on broadcast channel</td><td align="right" headers="Event Waits" class='awrclb'>1,848</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3,615.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1956.20ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>12.16</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1956.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1956.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1956.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>17.86us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ges remote message</td><td align="right" headers="Event Waits" class='awrnclb'>34,843</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,408.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>69.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>8.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>69.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>68.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>69.63ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>718.57us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>GCR sleep</td><td align="right" headers="Event Waits" class='awrclb'>8,024</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,407.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>300.06ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>8.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>300.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>300.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>300.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>13.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>pmon timer</td><td align="right" headers="Event Waits" class='awrnclb'>802</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,405.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2999.92ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>8.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2999.92ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2999.91ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2999.93ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>12.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>DIAG idle wait</td><td align="right" headers="Event Waits" class='awrclb'>15,024</td><td align="right" headers="Event %Timeouts" class='awrc'>83.30</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,405.42</td><td align="right" headers="WaitTime AvgWait" class='awrc'>160.11ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>8.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>160.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>159.54ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>160.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>796.01us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>LGWR worker group idle</td><td align="right" headers="Event Waits" class='awrnclb'>178</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,403.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>13.50 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>8.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>303.42 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6836.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>419.43 s</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>gcs yield cpu</td><td align="right" headers="Event Waits" class='awrclb'>81,449</td><td align="right" headers="Event %Timeouts" class='awrc'>98.49</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,400.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.47ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>8.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.47ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>388.32us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs remote message</td><td align="right" headers="Event Waits" class='awrnclb'>820,979</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,284.42</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>7.69</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.74ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.81ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.73ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>smon timer</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>33.33</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,516.95</td><td align="right" headers="WaitTime AvgWait" class='awrc'>168.55 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>5.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>201.06 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>103.54 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>298.57 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>137.91 s</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Data Guard: Gap Manager</td><td align="right" headers="Event Waits" class='awrnclb'>22</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,320.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>60.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>79.45us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: waiting for time management or cleanup tasks</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,210.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM cluster membership changes</td><td align="right" headers="Event Waits" class='awrnclb'>689</td><td align="right" headers="Event %Timeouts" class='awrnc'>83.16</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,207.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1752.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1752.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1750.35ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1753.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.55ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ASM background timer</td><td align="right" headers="Event Waits" class='awrclb'>2,360</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,206.97</td><td align="right" headers="WaitTime AvgWait" class='awrc'>511.43ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>565.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>390.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>739.56ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>246.57ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>OFS idle</td><td align="right" headers="Event Waits" class='awrnclb'>402</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,206.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3000.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3000.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3000.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3000.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>18.56us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,204.50</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.22 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.22 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.22 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.23 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.35ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat redo informer</td><td align="right" headers="Event Waits" class='awrnclb'>1,204</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,204.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1000.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1000.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1000.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1000.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>170.32ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SCM slave idle</td><td align="right" headers="Event Waits" class='awrclb'>12,069</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,204.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>99.77ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>99.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>99.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>99.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>266.90us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>lreg timer</td><td align="right" headers="Event Waits" class='awrnclb'>400</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.25</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,204.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3009.99ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3010.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3002.50ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3017.56ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>10.65ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pman timer</td><td align="right" headers="Event Waits" class='awrclb'>401</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,202.88</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.71ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.71ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.92us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PING</td><td align="right" headers="Event Waits" class='awrnclb'>1,080</td><td align="right" headers="Event %Timeouts" class='awrnc'>20.37</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.74</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1111.79ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1113.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1066.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1161.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>67.09ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>shared server idle wait</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>dispatcher timer</td><td align="right" headers="Event Waits" class='awrnclb'>20</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>60.01 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>36.70us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>AQPC idle</td><td align="right" headers="Event Waits" class='awrclb'>40</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>30.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>4.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>111.19us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Data Guard: Timer</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>600.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>4.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>103.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" headers="Event Waits" class='awrclb'>84</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,176.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>3.96</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.84us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>42</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,176.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>28.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>3.96</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>33.57us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrclb'>76</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>304.56us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,315</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>19.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>19.21us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>19.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>49.74ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrclb'>24</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>907.63us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>907.63us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>907.63us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>907.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>881.71us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>881.71us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>757.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>175.56us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.01ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>842.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>331.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>723.02us</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12055"></a>
<h3 class="awr">Wait Event Histogram (Global)</h3>
<ul>
<li class="awr"> When % of Total Waits is  0.0 the count is displayed in parenthesis</li>
</ul>
<table border="0" class="tdiff" summary="This table displays wait event histogram information"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 22" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us"> &lt;8us</th><th class="awrbg" scope="col" id="&lt;16us"> &lt;16us</th><th class="awrbg" scope="col" id="&lt;32us"> &lt;32us</th><th class="awrbg" scope="col" id="&lt;64us"> &lt;64us</th><th class="awrbg" scope="col" id="&lt;128us"> &lt;128us</th><th class="awrbg" scope="col" id="&lt;256us"> &lt;256us</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms"> &lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms"> &lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms"> &lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms"> &lt;64ms</th><th class="awrbg" scope="col" id="&lt;128ms"> &lt;128ms</th><th class="awrbg" scope="col" id="&lt;256ms"> &lt;256ms</th><th class="awrbg" scope="col" id="&lt;512ms"> &lt;512ms</th><th class="awrbg" scope="col" id="&lt;1s"> &lt;1s</th><th class="awrbg" scope="col" id="&gt;=1s"> &gt;=1s</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>12K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>68.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>28.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>72.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>3051</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>47.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>13K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>27.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>56.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>37</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>29.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>40.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>42</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>693</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>75.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>245</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>46.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>1678</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>26.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>26.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>343</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>29.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group query</td><td align="right" class='awrnc'>37</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>78.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group update</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>71.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>3609</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>25.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>931</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>42.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>1237</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>72.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>17.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>2423</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>63.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1489</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>47.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>42.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>51</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>56.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>337</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>28.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>52.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>64.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>21.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>69.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>120</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>39.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>39.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>140</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>40.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>532</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>30.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>64.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>5651</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>42.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cursor: pin S wait on X</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>13.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>91.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>39.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>61.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>26.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>395.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.0(18)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>55.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(132)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: AF - task serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>61</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>73.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>235</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>48.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>39.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>35.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>52.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy acquire</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>1947</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>67.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>29</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>72.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>66</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>10.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>45.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>65.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>57</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>56.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>28.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>42.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>49.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>11.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>55.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>2607</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>73.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>13.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>76.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>249.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>60.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(21)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>28.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.0(14)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>68.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>210</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>62.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>25.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>63.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current split</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc quiesce</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>335</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>44</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>59.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>59</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>35.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>55.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges ipc enter server mode</td><td align="right" class='awrnc'>83</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>88.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrc'>68</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>38.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>1747</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>82.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>1178</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>52.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>31</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>64.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>63</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>30.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1650</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>82.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>60</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>56.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>55.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>40.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7905</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>74.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>338</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>27.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>79</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>69.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>52.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>47.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache mutex</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo segment extension</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>wait list latch free</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="639"></a>
<h2 class="awr">
Global Activity Load Profile
</h2>
<ul>
<li class="awr"><a class="awr" href="#12016">System Statistics</a></li>
<li class="awr"><a class="awr" href="#12017">System Statistics - Per Second</a></li>
<li class="awr"><a class="awr" href="#12018">System Statistics - Per Transaction</a></li>
<li class="awr"><a class="awr" href="#12030">SysStat and Global Messaging  - RAC</a></li>
<li class="awr"><a class="awr" href="#12031">SysStat and Global Messaging (per Sec)- RAC</a></li>
<li class="awr"><a class="awr" href="#12032">SysStat and Global Messaging (per Tx)- RAC</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12016"></a>
<h3 class="awr">System Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Redo Size (k)</th><th class="awrbg" scope="col">Block Changes</th><th class="awrbg" scope="col">User Calls</th><th class="awrbg" scope="col">Execs</th><th class="awrbg" scope="col">Parses</th><th class="awrbg" scope="col">Logons</th><th class="awrbg" scope="col">Txns</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>5,738,459</td><td align="right" class='awrc'>245</td><td align="right" class='awrc'>1,092</td><td align="right" class='awrc'>4,058</td><td align="right" class='awrc'>13,405</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>2,178</td><td align="right" class='awrc'>1,575</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>54</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>3,389,562</td><td align="right" class='awrnc'>2,206,194</td><td align="right" class='awrnc'>354,758</td><td align="right" class='awrnc'>391,122</td><td align="right" class='awrnc'>993,133</td><td align="right" class='awrnc'>173</td><td align="right" class='awrnc'>52,125</td><td align="right" class='awrnc'>1,302</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>7,525</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>9,128,021</td><td align="right" class='awrct'>2,206,439</td><td align="right" class='awrct'>355,850</td><td align="right" class='awrct'>395,180</td><td align="right" class='awrct'>1,006,538</td><td align="right" class='awrct'>229</td><td align="right" class='awrct'>54,303</td><td align="right" class='awrct'>2,877</td><td align="right" class='awrct'>20</td><td align="right" class='awrct'>7,579</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>4,564,011</td><td align="right" class='awrnc'>1,103,220</td><td align="right" class='awrnc'>177,925</td><td align="right" class='awrnc'>197,590</td><td align="right" class='awrnc'>503,269</td><td align="right" class='awrnc'>115</td><td align="right" class='awrnc'>27,152</td><td align="right" class='awrnc'>1,439</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>3,790</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1,660,921</td><td align="right" class='awrc'>1,559,841</td><td align="right" class='awrc'>250,080</td><td align="right" class='awrc'>273,695</td><td align="right" class='awrc'>692,772</td><td align="right" class='awrc'>83</td><td align="right" class='awrc'>35,318</td><td align="right" class='awrc'>193</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5,283</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12017"></a>
<h3 class="awr">System Statistics - Per Second</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Second"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/s</th><th class="awrbg" scope="col">Physical Reads/s</th><th class="awrbg" scope="col">Physical Writes/s</th><th class="awrbg" scope="col">Redo Size (k)/s</th><th class="awrbg" scope="col">Block Changes/s</th><th class="awrbg" scope="col">User Calls/s</th><th class="awrbg" scope="col">Execs/s</th><th class="awrbg" scope="col">Parses/s</th><th class="awrbg" scope="col">Logons/s</th><th class="awrbg" scope="col">Txns/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>9,526.23</td><td align="right" class='awrc'>0.41</td><td align="right" class='awrc'>1.81</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>22.25</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>3.62</td><td align="right" class='awrc'>2.61</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>5,626.85</td><td align="right" class='awrnc'>3,662.40</td><td align="right" class='awrnc'>588.92</td><td align="right" class='awrnc'>649.28</td><td align="right" class='awrnc'>1,648.65</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>86.53</td><td align="right" class='awrnc'>2.16</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>12.49</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>15,153.08</td><td align="right" class='awrct'>3,662.80</td><td align="right" class='awrct'>590.73</td><td align="right" class='awrct'>656.02</td><td align="right" class='awrct'>1,670.90</td><td align="right" class='awrct'>0.38</td><td align="right" class='awrct'>90.15</td><td align="right" class='awrct'>4.78</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrct'>12.58</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>7,576.54</td><td align="right" class='awrnc'>1,831.40</td><td align="right" class='awrnc'>295.36</td><td align="right" class='awrnc'>328.01</td><td align="right" class='awrnc'>835.45</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>45.07</td><td align="right" class='awrnc'>2.39</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>6.29</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>2,757.28</td><td align="right" class='awrc'>2,589.42</td><td align="right" class='awrc'>415.15</td><td align="right" class='awrc'>454.35</td><td align="right" class='awrc'>1,150.04</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>58.63</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>8.77</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12018"></a>
<h3 class="awr">System Statistics - Per Transaction</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Transaction"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/tx</th><th class="awrbg" scope="col">Physical Reads/tx</th><th class="awrbg" scope="col">Physical Writes/tx</th><th class="awrbg" scope="col">Redo Size (k)/tx</th><th class="awrbg" scope="col">Block Changes/tx</th><th class="awrbg" scope="col">User Calls/tx</th><th class="awrbg" scope="col">Execs/tx</th><th class="awrbg" scope="col">Parses/tx</th><th class="awrbg" scope="col">Logons/tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>106,267.76</td><td align="right" class='awrc'>4.54</td><td align="right" class='awrc'>20.22</td><td align="right" class='awrc'>75.16</td><td align="right" class='awrc'>248.24</td><td align="right" class='awrc'>1.04</td><td align="right" class='awrc'>40.33</td><td align="right" class='awrc'>29.17</td><td align="right" class='awrc'>0.19</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>450.44</td><td align="right" class='awrnc'>293.18</td><td align="right" class='awrnc'>47.14</td><td align="right" class='awrnc'>51.98</td><td align="right" class='awrnc'>131.98</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>6.93</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>53,359.10</td><td align="right" class='awrct'>148.86</td><td align="right" class='awrct'>33.68</td><td align="right" class='awrct'>63.57</td><td align="right" class='awrct'>190.11</td><td align="right" class='awrct'>0.53</td><td align="right" class='awrct'>23.63</td><td align="right" class='awrct'>14.67</td><td align="right" class='awrct'>0.09</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12030"></a>
<h3 class="awr">SysStat and Global Messaging  - RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging  - RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceived">Blocks Received</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)">CPU (seconds)</th>
<th class="awrbg" colspan=" 6" id="Messages">Messages</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost">Lost</th><th class="awrbg" scope="col" id="Failure">Failure</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceived GCCurrent" class='awrclb'>272</td><td align="right" headers="BlocksReceived GCCR" class='awrc'>1,450</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>55,040</td><td align="right" headers="BlocksServed GCCR" class='awrc'>11,465</td><td align="right" headers="CPU(seconds) GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrc'>0</td><td align="right" headers="Messages GCSReceived" class='awrclb'>3,431,458</td><td align="right" headers="Messages GESReceived" class='awrc'>2,678</td><td align="right" headers="Messages GCSSent" class='awrc'>1,526,095</td><td align="right" headers="Messages GESSent" class='awrc'>52,732</td><td align="right" headers="Messages SentDirect" class='awrc'>7,357</td><td align="right" headers="Messages SentIndir" class='awrc'>59,239</td><td align="right" headers="GCBlks Lost" class='awrclb'>0</td><td align="right" headers="GCCR Failure" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceived GCCurrent" class='awrnclb'>54,999</td><td align="right" headers="BlocksReceived GCCR" class='awrnc'>11,443</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>253</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>1,446</td><td align="right" headers="CPU(seconds) GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrnc'>0</td><td align="right" headers="Messages GCSReceived" class='awrnclb'>1,576,777</td><td align="right" headers="Messages GESReceived" class='awrnc'>1,749</td><td align="right" headers="Messages GCSSent" class='awrnc'>3,160,338</td><td align="right" headers="Messages GESSent" class='awrnc'>273,542</td><td align="right" headers="Messages SentDirect" class='awrnc'>348,236</td><td align="right" headers="Messages SentIndir" class='awrnc'>1,852,933</td><td align="right" headers="GCBlks Lost" class='awrnclb'>71</td><td align="right" headers="GCCR Failure" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>55,271</td><td align="right" class='awrct'>12,893</td><td align="right" class='awrclbt'>55,293</td><td align="right" class='awrct'>12,911</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>5,008,235</td><td align="right" class='awrct'>4,427</td><td align="right" class='awrct'>4,686,433</td><td align="right" class='awrct'>326,274</td><td align="right" class='awrct'>355,593</td><td align="right" class='awrct'>1,912,172</td><td align="right" class='awrclbt'>71</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>27,636</td><td align="right" class='awrnc'>6,447</td><td align="right" class='awrnclb'>27,647</td><td align="right" class='awrnc'>6,456</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2,504,118</td><td align="right" class='awrnc'>2,214</td><td align="right" class='awrnc'>2,343,217</td><td align="right" class='awrnc'>163,137</td><td align="right" class='awrnc'>177,797</td><td align="right" class='awrnc'>956,086</td><td align="right" class='awrnclb'>36</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>38,698</td><td align="right" class='awrc'>7,066</td><td align="right" class='awrclb'>38,740</td><td align="right" class='awrc'>7,085</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1,311,458</td><td align="right" class='awrc'>657</td><td align="right" class='awrc'>1,155,584</td><td align="right" class='awrc'>156,136</td><td align="right" class='awrc'>241,038</td><td align="right" class='awrc'>1,268,333</td><td align="right" class='awrclb'>50</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12031"></a>
<h3 class="awr">SysStat and Global Messaging (per Sec)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Sec)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedPerSecond">Blocks Received Per Second</th>
<th class="awrbg" colspan=" 2" id="BlocksServedperSecond">Blocks Served per Second</th>
<th class="awrbg" colspan=" 2" id="CPUsecondsperSecond">CPU seconds per Second</th>
<th class="awrbg" colspan=" 6" id="MessagesPerSecond">Messages Per Second</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent</th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/s">Lost/s</th><th class="awrbg" scope="col" id="Fail/s">Fail/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrclb'>0.45</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrc'>2.41</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrclb'>91.37</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrc'>19.03</td><td align="right" headers="CPUsecondsperSecond GC" class='awrclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrclb'>5,696.45</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrc'>4.45</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrc'>2,533.42</td><td align="right" headers="MessagesPerSecond GESSent" class='awrc'>87.54</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrc'>12.21</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrc'>98.34</td><td align="right" headers="GCBlks Lost/s" class='awrclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrnclb'>91.30</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrnc'>19.00</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrnclb'>0.42</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrnc'>2.40</td><td align="right" headers="CPUsecondsperSecond GC" class='awrnclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrnclb'>2,617.53</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrnc'>2.90</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrnc'>5,246.32</td><td align="right" headers="MessagesPerSecond GESSent" class='awrnc'>454.09</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrnc'>578.09</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrnc'>3,075.96</td><td align="right" headers="GCBlks Lost/s" class='awrnclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>91.75</td><td align="right" class='awrct'>21.40</td><td align="right" class='awrclbt'>91.79</td><td align="right" class='awrct'>21.43</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>8,313.98</td><td align="right" class='awrct'>7.35</td><td align="right" class='awrct'>7,779.74</td><td align="right" class='awrct'>541.63</td><td align="right" class='awrct'>590.30</td><td align="right" class='awrct'>3,174.30</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>45.88</td><td align="right" class='awrnc'>10.70</td><td align="right" class='awrnclb'>45.90</td><td align="right" class='awrnc'>10.72</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>4,156.99</td><td align="right" class='awrnc'>3.67</td><td align="right" class='awrnc'>3,889.87</td><td align="right" class='awrnc'>270.82</td><td align="right" class='awrnc'>295.15</td><td align="right" class='awrnc'>1,587.15</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>64.24</td><td align="right" class='awrc'>11.73</td><td align="right" class='awrclb'>64.31</td><td align="right" class='awrc'>11.76</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>2,177.13</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>1,918.31</td><td align="right" class='awrc'>259.19</td><td align="right" class='awrc'>400.14</td><td align="right" class='awrc'>2,105.50</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12032"></a>
<h3 class="awr">SysStat and Global Messaging (per Tx)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Tx)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedperTx">Blocks Received per Tx</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)perTx">CPU (seconds) per Tx</th>
<th class="awrbg" colspan=" 6" id="MessagesperTransaction">Messages per Transaction</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/Tx">Lost/Tx</th><th class="awrbg" scope="col" id="Fail/Tx">Fail/Tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrclb'>5.04</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrc'>26.85</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>1,019.26</td><td align="right" headers="BlocksServed GCCR" class='awrc'>212.31</td><td align="right" headers="CPU(seconds)perTx GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrclb'>63,545.52</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrc'>49.59</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrc'>28,261.02</td><td align="right" headers="MessagesperTransaction GESSent" class='awrc'>976.52</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrc'>136.24</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrc'>1,097.02</td><td align="right" headers="GCBlks Lost/Tx" class='awrclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrcbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrnclb'>7.31</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrnc'>1.52</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>0.03</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>0.19</td><td align="right" headers="CPU(seconds)perTx GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrnclb'>209.54</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrnc'>0.23</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrnc'>419.98</td><td align="right" headers="MessagesperTransaction GESSent" class='awrnc'>36.35</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrnc'>46.28</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrnc'>246.24</td><td align="right" headers="GCBlks Lost/Tx" class='awrnclb'>0.01</td><td align="right" headers="GCCR Fail/Tx" class='awrncbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>6.17</td><td align="right" class='awrct'>14.19</td><td align="right" class='awrclbt'>509.65</td><td align="right" class='awrct'>106.25</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>31,877.53</td><td align="right" class='awrct'>24.91</td><td align="right" class='awrct'>14,340.50</td><td align="right" class='awrct'>506.43</td><td align="right" class='awrct'>91.26</td><td align="right" class='awrct'>671.63</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrcbbt'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="605"></a>
<h2 class="awr">
Global Cache and Enqueue Statistics Summary
</h2>
<ul>
<li class="awr"><a class="awr" href="#12019">Global Cache Efficiency Percentages</a></li>
<li class="awr"><a class="awr" href="#12020">Global Latency Characteristics</a></li>
<li class="awr"><a class="awr" href="#12021">Global Messaging Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12019"></a>
<h3 class="awr">Global Cache Efficiency Percentages</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Cache Efficiency Percentages"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="BufferAccess">Buffer Access</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Local%">Local %</th><th class="awrbg" scope="col" id="Remote%">Remote %</th><th class="awrbg" scope="col" id="Disk%">Disk %</th><th class="awrbg" scope="col">Locality %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BufferAccess Local%" class='awrclb'>99.97</td><td align="right" headers="BufferAccess Remote%" class='awrc'>0.03</td><td align="right" headers="BufferAccess Disk%" class='awrcrb'>0.00</td><td align="right" class='awrc'>60.92</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BufferAccess Local%" class='awrnclb'>32.95</td><td align="right" headers="BufferAccess Remote%" class='awrnc'>1.96</td><td align="right" headers="BufferAccess Disk%" class='awrncrb'>65.09</td><td align="right" class='awrnc'>35.34</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12020"></a>
<h3 class="awr">Global Latency Characteristics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Latency Characteristics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CUBlocks">CU Blocks</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">GE Get Time (us)</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Build|Time(us)">Build Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CRSrvd%">Log Flush CR Srvd %</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Pin|Time(us)">Pin Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CUSrvd%">Log Flush CU Srvd %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>51</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrclb'>497</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrc'>839</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrc'>9231</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrc'>0.11</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrclb'>1544</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrc'>12609</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrcrb'>0.04</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>40</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrnclb'>2307</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrnc'>132</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrnc'>6875</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrnc'>1.11</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrnclb'>911</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrnc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrnc'>10417</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrncrb'>9.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12021"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="QueueTime(us)">Queue Time (us)</th>
<th class="awrbg" colspan=" 2" id="ProcessTime(us)">Process Time (us)</th>
<th class="awrbg" colspan=" 3" id="%MessagesSent">% Messages Sent</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Sent">Sent</th><th class="awrbg" scope="col" id="onksxp">on ksxp</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="GCSmsgs">GCS msgs</th><th class="awrbg" scope="col" id="GESmsgs">GES msgs</th><th class="awrbg" scope="col" id="Direct">Direct</th><th class="awrbg" scope="col" id="Indirect">Indirect</th><th class="awrbg" scope="col" id="FlowCtrl">Flow Ctrl</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="QueueTime(us) Sent" class='awrclb'>38</td><td align="right" headers="QueueTime(us) onksxp" class='awrc'>1177</td><td align="right" headers="QueueTime(us) Received" class='awrc'>8</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrclb'>19</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrc'>20</td><td align="right" headers="%MessagesSent Direct" class='awrclb'>11.04</td><td align="right" headers="%MessagesSent Indirect" class='awrc'>88.88</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrcrb'>0.08</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="QueueTime(us) Sent" class='awrnclb'>8282</td><td align="right" headers="QueueTime(us) onksxp" class='awrnc'>1930</td><td align="right" headers="QueueTime(us) Received" class='awrnc'>4</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrnclb'>15</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrnc'>26</td><td align="right" headers="%MessagesSent Direct" class='awrnclb'>15.79</td><td align="right" headers="%MessagesSent Indirect" class='awrnc'>84.01</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrncrb'>0.20</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12033"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global CR Server Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 5" id="BlockRequests">Block Requests</th>
<th class="awrbg" colspan=" 5" id="Results">Results</th>
<th class="awrbg" colspan=" 1" id="Fairness">Fairness</th>
<th class="awrbg" colspan=" 1" id="Light">Light</th>
<th class="awrbg" colspan=" 3" id="Total">Total</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="CR">CR</th><th class="awrbg" scope="col" id="CU">CU</th><th class="awrbg" scope="col" id="Data">Data</th><th class="awrbg" scope="col" id="Undo">Undo</th><th class="awrbg" scope="col" id="TX">TX</th><th class="awrbg" scope="col" id="Current">Current</th><th class="awrbg" scope="col" id="Private">Private</th><th class="awrbg" scope="col" id="Zero">Zero</th><th class="awrbg" scope="col" id="DskRd">Dsk Rd</th><th class="awrbg" scope="col" id="Fail">Fail</th><th class="awrbg" scope="col" id="DownConv">Down Conv</th><th class="awrbg" scope="col" id="Works">Works</th><th class="awrbg" scope="col" id="Flushes">Flushes</th><th class="awrbg" scope="col" id="Builds">Builds</th><th class="awrbg" scope="col" id="Errors">Errors</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlockRequests CR" class='awrclb'>11,420</td><td align="right" headers="BlockRequests CU" class='awrc'>82</td><td align="right" headers="BlockRequests Data" class='awrc'>11,420</td><td align="right" headers="BlockRequests Undo" class='awrc'>1</td><td align="right" headers="BlockRequests TX" class='awrc'>22</td><td align="right" headers="Results Current" class='awrclb'>11,458</td><td align="right" headers="Results Private" class='awrc'>0</td><td align="right" headers="Results Zero" class='awrc'>3</td><td align="right" headers="Results DskRd" class='awrc'>38</td><td align="right" headers="Results Fail" class='awrc'>0</td><td align="right" headers="Fairness DownConv" class='awrclb'>11,370</td><td align="right" headers="Light Works" class='awrclb'>6,810</td><td align="right" headers="Total Flushes" class='awrclb'>13</td><td align="right" headers="Total Builds" class='awrc'>11,422</td><td align="right" headers="Total Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlockRequests CR" class='awrnclb'>76</td><td align="right" headers="BlockRequests CU" class='awrnc'>1,398</td><td align="right" headers="BlockRequests Data" class='awrnc'>76</td><td align="right" headers="BlockRequests Undo" class='awrnc'>0</td><td align="right" headers="BlockRequests TX" class='awrnc'>1,331</td><td align="right" headers="Results Current" class='awrnclb'>1,446</td><td align="right" headers="Results Private" class='awrnc'>0</td><td align="right" headers="Results Zero" class='awrnc'>0</td><td align="right" headers="Results DskRd" class='awrnc'>28</td><td align="right" headers="Results Fail" class='awrnc'>0</td><td align="right" headers="Fairness DownConv" class='awrnclb'>68</td><td align="right" headers="Light Works" class='awrnclb'>2</td><td align="right" headers="Total Flushes" class='awrnclb'>16</td><td align="right" headers="Total Builds" class='awrnc'>76</td><td align="right" headers="Total Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>11,496</td><td align="right" class='awrct'>1,480</td><td align="right" class='awrct'>11,496</td><td align="right" class='awrct'>1</td><td align="right" class='awrct'>1,353</td><td align="right" class='awrclbt'>12,904</td><td align="right" class='awrct'>0</td><td align="right" class='awrct'>3</td><td align="right" class='awrct'>66</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>11,438</td><td align="right" class='awrclbt'>6,812</td><td align="right" class='awrclbt'>29</td><td align="right" class='awrct'>11,498</td><td align="right" class='awrcrbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>5,748</td><td align="right" class='awrnc'>740</td><td align="right" class='awrnc'>5,748</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>677</td><td align="right" class='awrnclb'>6,452</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>5,719</td><td align="right" class='awrnclb'>3,406</td><td align="right" class='awrnclb'>15</td><td align="right" class='awrnc'>5,749</td><td align="right" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>8,021</td><td align="right" class='awrc'>931</td><td align="right" class='awrc'>8,021</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>926</td><td align="right" class='awrclb'>7,080</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>7,992</td><td align="right" class='awrclb'>4,814</td><td align="right" class='awrclb'>2</td><td align="right" class='awrc'>8,023</td><td align="right" class='awrcrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12034"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Current Server Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Pins</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th><th class="awrbg" scope="col">Flushes</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.35</td><td align="right" class='awrc'>43.48</td><td align="right" class='awrc'>52.17</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>62.50</td><td align="right" class='awrnc'>37.50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrct'>47</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="607"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12035">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#12036">Global Cache Transfer (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12035"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested  (Cngst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> All - average time of All blocks (Immed,Busy,Cngst) in us </li>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer Statistics. . Immediate (Immed) - Block Transfer NOT impacted by Remote Processing Delays. Busy (Busy) - Block Transfer impacted by Remote Contention. Congested (Cngst) - Block Transfer impacted by Remote System Load. All - average time of All blocks (Immed,Busy,Cngst) in us. Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CurrentBlocks">Current Blocks</th>
<th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrclb'>1,331</td><td align="right" headers="CRBlocks %Immed" class='awrc'>99.32</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.68</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>0</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>&#160;</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>455</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>414</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6440</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>data block</td><td align="right" headers="CRBlocks Received" class='awrnclb'>76</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>90.79</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>9.21</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>210</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>15.24</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>84.76</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>1262</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>612</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>7666</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1842</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>707</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>2047</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>39</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>45</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>53.33</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>46.67</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>446</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>446</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>411</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>424</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>395</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclbt'>2</td><td align="right" headers="Instance# Src" class='awrnct'>1</td><td headers="Block Class" class='awrnclbt'>data block</td><td align="right" headers="CRBlocks Received" class='awrnclbt'>11,385</td><td align="right" headers="CRBlocks %Immed" class='awrnct'>97.23</td><td align="right" headers="CRBlocks %Busy" class='awrnct'>0.07</td><td align="right" headers="CRBlocks %Cngst" class='awrnct'>2.70</td><td align="right" headers="CurrentBlocks Received" class='awrnclbt'>54,321</td><td align="right" headers="CurrentBlocks %Immed" class='awrnct'>74.30</td><td align="right" headers="CurrentBlocks %Busy" class='awrnct'>25.14</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnct'>0.56</td><td align="right" headers="CRAvgTime(us) All" class='awrnclbt'>2311</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnct'>2250</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnct'>7117</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnct'>4377</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclbt'>917</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnct'>1052</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnct'>460</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrbt'>3424</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>20</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>669</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>95.67</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>4.33</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>430</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>430</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>428</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>419</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>612</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrnclb'>23</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>78.26</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>21.74</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>2</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>100.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>2811</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>386</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>11541</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>779</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>779</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo block</td><td align="right" headers="CRBlocks Received" class='awrclb'>1</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>0</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>&#160;</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>279</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>279</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12036"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer (Immediate). . Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 2" id="LostBlocks">Lost Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCRBlocks">Immediate CR Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCurrentBlocks">Immediate Current Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmedCRAvgTime(us)">Immed CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="ImmedCurrentAvgTime(us)">Immed Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Count">Count</th><th class="awrbg" scope="col" id="Time(us)">Time(us)</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>1,322</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>414</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>414</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>data block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>69</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>32</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>612</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>612</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>707</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>707</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>39</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>24</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>446</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>446</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>424</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>424</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="LostBlocks Count" class='awrclbt'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrct'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclbt'>11,070</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclbt'>40,362</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclbt'>2250</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrct'>2250</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrct'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclbt'>1052</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrct'>1052</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>20</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>640</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>430</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>430</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>419</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>419</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>18</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>386</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>386</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>1</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>279</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>279</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="608"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12040">Cluster Interconnect</a></li>
<li class="awr"><a class="awr" href="#12045">Ping Statistics</a></li>
<li class="awr"><a class="awr" href="#12041">Interconnect Client Statistics</a></li>
<li class="awr"><a class="awr" href="#12042">Interconnect Client Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12043">Interconnect Device Statistics</a></li>
<li class="awr"><a class="awr" href="#12044">Interconnect Device Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12078">Dynamic Remastering Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12040"></a>
<h3 class="awr">Cluster Interconnect</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 3" id="End(ifdifferentfromBegin)">End (if different from Begin)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrnclb'>169.254.31.173</td><td headers="Begin Pub" class='awrnc'>N</td><td headers="Begin Source" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrnclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12045"></a>
<h3 class="awr">Ping Statistics</h3>
<ul>
<li class="awr"> Latency of the roundtrip of a message from  Src Instance to the Target instances</li>
</ul>
<table border="0" class="tdiff" summary="Ping Statistics. . Latency of the roundtrip of a message from Src Instance to the Target instances"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 3" id="500bytes">500 bytes</th>
<th class="awrbg" colspan=" 3" id="8Kbytes">8 Kbytes</th>
</tr><tr>
<th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Target">Target</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th></tr>
<tr><td align="right" headers="Instance# Src" class='awrclb'>1</td><td align="right" headers="Instance# Target" class='awrc'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrc'>474</td><td align="right" headers="500bytes Std|Dev" class='awrc'>0.16</td><td align="right" headers="8Kbytes Ping|Count" class='awrclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrc'>460</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrb'>0.13</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>729</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.30</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>726</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.29</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrclbt'>2</td><td align="right" headers="Instance# Target" class='awrct'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclbt'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrct'>730</td><td align="right" headers="500bytes Std|Dev" class='awrct'>0.26</td><td align="right" headers="8Kbytes Ping|Count" class='awrclbt'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrct'>720</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrbt'>0.28</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>55</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>367</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.16</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>60</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>379</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.17</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12041"></a>
<h3 class="awr">Interconnect Client Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB)">Sent (MB)</th>
<th class="awrbg" colspan=" 6" id="Received(MB)">Received (MB)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB) Total" class='awrclb'>534.99</td><td align="right" headers="Sent(MB) Cache" class='awrc'>281.51</td><td align="right" headers="Sent(MB) IPQ" class='awrc'>0.13</td><td align="right" headers="Sent(MB) DLM" class='awrc'>237.49</td><td align="right" headers="Sent(MB) PNG" class='awrc'>1.01</td><td align="right" headers="Sent(MB) Misc" class='awrc'>14.84</td><td align="right" headers="Received(MB) Total" class='awrclb'>993.81</td><td align="right" headers="Received(MB) Cache" class='awrc'>4.48</td><td align="right" headers="Received(MB) IPQ" class='awrc'>1.11</td><td align="right" headers="Received(MB) DLM" class='awrc'>976.05</td><td align="right" headers="Received(MB) PNG" class='awrc'>1.01</td><td align="right" headers="Received(MB) Misc" class='awrcrb'>11.17</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB) Total" class='awrnclb'>993.60</td><td align="right" headers="Sent(MB) Cache" class='awrnc'>4.32</td><td align="right" headers="Sent(MB) IPQ" class='awrnc'>1.11</td><td align="right" headers="Sent(MB) DLM" class='awrnc'>976.00</td><td align="right" headers="Sent(MB) PNG" class='awrnc'>1.01</td><td align="right" headers="Sent(MB) Misc" class='awrnc'>11.17</td><td align="right" headers="Received(MB) Total" class='awrnclb'>534.51</td><td align="right" headers="Received(MB) Cache" class='awrnc'>281.09</td><td align="right" headers="Received(MB) IPQ" class='awrnc'>0.13</td><td align="right" headers="Received(MB) DLM" class='awrnc'>237.44</td><td align="right" headers="Received(MB) PNG" class='awrnc'>1.01</td><td align="right" headers="Received(MB) Misc" class='awrncrb'>14.84</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>1,528.59</td><td align="right" class='awrct'>285.83</td><td align="right" class='awrct'>1.24</td><td align="right" class='awrct'>1,213.50</td><td align="right" class='awrct'>2.02</td><td align="right" class='awrct'>26.01</td><td align="right" class='awrclbt'>1,528.33</td><td align="right" class='awrct'>285.57</td><td align="right" class='awrct'>1.24</td><td align="right" class='awrct'>1,213.49</td><td align="right" class='awrct'>2.02</td><td align="right" class='awrcrbt'>26.01</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>764.30</td><td align="right" class='awrnc'>142.91</td><td align="right" class='awrnc'>0.62</td><td align="right" class='awrnc'>606.75</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>13.00</td><td align="right" class='awrnclb'>764.16</td><td align="right" class='awrnc'>142.78</td><td align="right" class='awrnc'>0.62</td><td align="right" class='awrnc'>606.75</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrncrb'>13.00</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>324.29</td><td align="right" class='awrc'>196.01</td><td align="right" class='awrc'>0.69</td><td align="right" class='awrc'>522.20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>2.60</td><td align="right" class='awrclb'>324.77</td><td align="right" class='awrc'>195.59</td><td align="right" class='awrc'>0.69</td><td align="right" class='awrc'>522.27</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>2.60</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12042"></a>
<h3 class="awr">Interconnect Client Statistics (per Second)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics (per Second)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB/s)">Sent (MB/s)</th>
<th class="awrbg" colspan=" 6" id="Received(MB/s)">Received (MB/s)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB/s) Total" class='awrclb'>0.89</td><td align="right" headers="Sent(MB/s) Cache" class='awrc'>0.47</td><td align="right" headers="Sent(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrc'>0.39</td><td align="right" headers="Sent(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrclb'>1.65</td><td align="right" headers="Received(MB/s) Cache" class='awrc'>0.01</td><td align="right" headers="Received(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrc'>1.62</td><td align="right" headers="Received(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrcrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB/s) Total" class='awrnclb'>1.65</td><td align="right" headers="Sent(MB/s) Cache" class='awrnc'>0.01</td><td align="right" headers="Sent(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrnc'>1.62</td><td align="right" headers="Sent(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrnc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrnclb'>0.89</td><td align="right" headers="Received(MB/s) Cache" class='awrnc'>0.47</td><td align="right" headers="Received(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrnc'>0.39</td><td align="right" headers="Received(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrncrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>2.54</td><td align="right" class='awrct'>0.47</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>2.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.04</td><td align="right" class='awrclbt'>2.54</td><td align="right" class='awrct'>0.47</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>2.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrcrbt'>0.04</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1.27</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnclb'>1.27</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrncrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0.54</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.87</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>0.54</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.87</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12043"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> null means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics. . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. null means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>902.45</td><td align="right" headers="Sent Packets" class='awrc'>1,836,375</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>4,498.72</td><td align="right" headers="Received Packets" class='awrc'>1,765,387</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>709.38</td><td align="right" headers="Sent Packets" class='awrnc'>986,004</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1,123.98</td><td align="right" headers="Received Packets" class='awrnc'>1,207,563</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.05</td><td align="right" headers="Sent Packets" class='awrnc'>205</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.03</td><td align="right" headers="Received Packets" class='awrnc'>268</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.22</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.23</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.04</td><td align="right" headers="Sent Packets" class='awrnc'>3,056</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.17</td><td align="right" headers="Received Packets" class='awrnc'>3,099</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>23.51</td><td align="right" headers="Sent Packets" class='awrc'>12,061</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>23.51</td><td align="right" headers="Received Packets" class='awrc'>12,061</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>4,503.63</td><td align="right" headers="Sent Packets" class='awrnc'>1,859,375</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>883.11</td><td align="right" headers="Received Packets" class='awrnc'>1,821,565</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1,109.52</td><td align="right" headers="Sent Packets" class='awrc'>656,664</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>712.67</td><td align="right" headers="Received Packets" class='awrc'>1,295,031</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.04</td><td align="right" headers="Sent Packets" class='awrc'>319</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.07</td><td align="right" headers="Received Packets" class='awrc'>261</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.12</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.21</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.03</td><td align="right" headers="Sent Packets" class='awrnc'>3,068</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.17</td><td align="right" headers="Received Packets" class='awrnc'>3,108</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>8.85</td><td align="right" headers="Sent Packets" class='awrc'>130,856</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>8.85</td><td align="right" headers="Received Packets" class='awrc'>130,856</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>7,261.50</td><td align="right" class='awrnct'>5,487,983</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>7,253.26</td><td align="right" class='awrnct'>6,239,199</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>427.15</td><td align="right" class='awrc'>322,823</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>426.66</td><td align="right" class='awrc'>367,012</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,110.47</td><td align="right" class='awrnc'>636,328</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>1,109.49</td><td align="right" class='awrnc'>675,344</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12044"></a>
<h3 class="awr">Interconnect Device Statistics (per Second)</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> Blank	means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics (per Second). . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. Blank means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1.50</td><td align="right" headers="Sent Packets" class='awrc'>3,049</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>7.47</td><td align="right" headers="Received Packets" class='awrc'>2,931</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1.18</td><td align="right" headers="Sent Packets" class='awrnc'>1,637</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.87</td><td align="right" headers="Received Packets" class='awrnc'>2,005</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.22</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.23</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.04</td><td align="right" headers="Sent Packets" class='awrc'>20</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.04</td><td align="right" headers="Received Packets" class='awrc'>20</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>7.48</td><td align="right" headers="Sent Packets" class='awrnc'>3,087</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.47</td><td align="right" headers="Received Packets" class='awrnc'>3,024</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1.84</td><td align="right" headers="Sent Packets" class='awrc'>1,090</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>1.18</td><td align="right" headers="Received Packets" class='awrc'>2,150</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>1</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.12</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.21</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.01</td><td align="right" headers="Sent Packets" class='awrc'>217</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.01</td><td align="right" headers="Received Packets" class='awrc'>217</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>12.05</td><td align="right" class='awrnct'>9,110</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>12.04</td><td align="right" class='awrnct'>10,357</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>0.71</td><td align="right" class='awrc'>536</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>0.71</td><td align="right" class='awrc'>609</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1.84</td><td align="right" class='awrnc'>1,056</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>1.84</td><td align="right" class='awrnc'>1,121</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12078"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Affinity Objects - Affinity objects remastered at the begin/end snapshot  </li>
<li class="awr"> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Affinity Objects - Affinity objects remastered at the begin/end snapshot . Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CountsperOps">Counts per Ops</th>
<th class="awrbg" colspan=" 6" id="TimeperOps(seconds)">Time per Ops (seconds)</th>
<th class="awrbg" colspan=" 2" id="AffinityObjects">Affinity Objects</th>
<th class="awrbg" colspan=" 3" id="ReadMostlyObjects">Read Mostly Objects</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Remaster Ops</th><th class="awrbg" scope="col" id="Remastered|Objects">Remastered Objects</th><th class="awrbg" scope="col" id="ReplayLocks|Received">Replay Locks Received</th><th class="awrbg" scope="col" id="ReplayLocks|Sent">Replay Locks Sent</th><th class="awrbg" scope="col" id="Resources|Cleaned">Resources Cleaned</th><th class="awrbg" scope="col" id="Remaster">Remaster</th><th class="awrbg" scope="col" id="Freeze">Freeze</th><th class="awrbg" scope="col" id="Cleanup">Cleanup</th><th class="awrbg" scope="col" id="Replay">Replay</th><th class="awrbg" scope="col" id="Fixwrite">Fixwrite</th><th class="awrbg" scope="col" id="Sync">Sync</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="Begin|(persistent)">Begin (persistent)</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrclb'>20.00</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrc'>270,897.00</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrc'>51,015.00</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrc'>0.00</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrclb'>2.74</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrc'>0.00</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrc'>0.17</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrc'>0.74</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrc'>0.19</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrc'>1.61</td><td align="right" headers="AffinityObjects Begin" class='awrclb'>17</td><td align="right" headers="AffinityObjects End" class='awrc'>10</td><td align="right" headers="ReadMostlyObjects Begin" class='awrclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrc'>0</td><td align="right" headers="ReadMostlyObjects End" class='awrcrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrnclb'>20.00</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrnc'>51,015.00</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrnc'>270,897.00</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrnc'>0.00</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrnclb'>2.75</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrnc'>0.01</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrnc'>0.20</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrnc'>0.71</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrnc'>0.10</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrnc'>1.71</td><td align="right" headers="AffinityObjects Begin" class='awrnclb'>9</td><td align="right" headers="AffinityObjects End" class='awrnc'>19</td><td align="right" headers="ReadMostlyObjects Begin" class='awrnclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrnc'>0</td><td align="right" headers="ReadMostlyObjects End" class='awrncrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>1</td><td align="right" class='awrclbt'>20.00</td><td align="right" class='awrct'>160,956.00</td><td align="right" class='awrct'>160,956.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>2.75</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.19</td><td align="right" class='awrct'>0.73</td><td align="right" class='awrct'>0.15</td><td align="right" class='awrct'>1.66</td><td align="right" class='awrclbt'>13</td><td align="right" class='awrct'>15</td><td align="right" class='awrclbt'>1</td><td align="right" class='awrct'>0</td><td align="right" class='awrcrbt'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Max</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>270,897.00</td><td align="right" class='awrnc'>270,897.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>2.75</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.74</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>1.71</td><td align="right" class='awrnclb'>17</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnclb'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="622"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12060">SQL ordered by Elapsed Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12061">SQL ordered by CPU Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12066">SQL ordered by User I/O Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12062">SQL ordered by Gets (Global)</a></li>
<li class="awr"><a class="awr" href="#12063">SQL ordered by Reads (Global)</a></li>
<li class="awr"><a class="awr" href="#12081">SQL ordered by UnOptimized Read Requests (Global)</a></li>
<li class="awr"><a class="awr" href="#12065">SQL ordered by Executions (Global)</a></li>
<li class="awr"><a class="awr" href="#12064">SQL ordered by Cluster Wait Time (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12060"></a>
<h3 class="awr">SQL ordered by Elapsed Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   99.3% of Total DB Time (s):		 1,144</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total DB Time (s):	    1,144</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Elapsed Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>637.51</td><td align="right" headers="Total CPU(s)" class='awrc'>125.12</td><td align="right" headers="Total IOWait(s)" class='awrc'>461.40</td><td align="right" headers="Total Gets" class='awrc'>543,691</td><td align="right" headers="Total Reads" class='awrc'>324,702</td><td align="right" headers="Total Rows" class='awrc'>470,799</td><td align="right" headers="Total Cluster(s)" class='awrc'>119.92</td><td align="right" headers="Total Execs" class='awrc'>7,473</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.09</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Gets" class='awrc'>72.75</td><td align="right" headers="PerExecution Reads" class='awrc'>43.45</td><td align="right" headers="PerExecution Rows" class='awrc'>63.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>55.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>50.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.56</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>5.96</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>14.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>57.81</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>13.76</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.95</td><td align="right" headers="Total CPU(s)" class='awrnc'>118.82</td><td align="right" headers="Total IOWait(s)" class='awrnc'>426.51</td><td align="right" headers="Total Gets" class='awrnc'>1,792,446</td><td align="right" headers="Total Reads" class='awrnc'>1,172,802</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.95</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>118.82</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>426.51</td><td align="right" headers="PerExecution Gets" class='awrnc'>1,792,446.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>1,172,802.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>49.73</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>47.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.51</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>19.64</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>53.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>43.98</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.94</td><td align="right" headers="Total CPU(s)" class='awrc'>127.21</td><td align="right" headers="Total IOWait(s)" class='awrc'>397.47</td><td align="right" headers="Total Gets" class='awrc'>1,564,773</td><td align="right" headers="Total Reads" class='awrc'>1,031,832</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>113.40</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.94</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>127.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>397.47</td><td align="right" headers="PerExecution Gets" class='awrc'>1,564,773.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,031,832.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>113.40</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>49.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>51.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.48</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>17.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>46.76</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>54.66</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>491.71</td><td align="right" headers="Total CPU(s)" class='awrnc'>113.27</td><td align="right" headers="Total IOWait(s)" class='awrnc'>361.93</td><td align="right" headers="Total Gets" class='awrnc'>2,804,817</td><td align="right" headers="Total Reads" class='awrnc'>1,878,864</td><td align="right" headers="Total Rows" class='awrnc'>42,416</td><td align="right" headers="Total Cluster(s)" class='awrnc'>84.48</td><td align="right" headers="Total Execs" class='awrnc'>42,415</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>66.13</td><td align="right" headers="PerExecution Reads" class='awrnc'>44.30</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>42.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>45.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.44</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>30.73</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>85.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>40.72</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>78.11</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6hnhqahphpk8n">6hnhqahphpk8n</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>1.90</td><td align="right" headers="Total CPU(s)" class='awrc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>0</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>12</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>12</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.16</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>0.00</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.02</td>
<td class='awrc'>select free_mb from v$asm_disk...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>1.89</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.84</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.08</td><td align="right" headers="Total Gets" class='awrnc'>19,346</td><td align="right" headers="Total Reads" class='awrnc'>113</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.65</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>1.89</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.08</td><td align="right" headers="PerExecution Gets" class='awrnc'>19,346.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>113.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.21</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.31</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>0.70</td><td align="right" headers="Total CPU(s)" class='awrc'>0.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.12</td><td align="right" headers="Total Gets" class='awrc'>264,188</td><td align="right" headers="Total Reads" class='awrc'>38</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Gets" class='awrc'>132,094.00</td><td align="right" headers="PerExecution Reads" class='awrc'>19.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>0.69</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.67</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>263,542</td><td align="right" headers="Total Reads" class='awrnc'>2</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.69</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.67</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>263,542.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.27</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>0.57</td><td align="right" headers="Total CPU(s)" class='awrc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Gets" class='awrc'>802</td><td align="right" headers="Total Reads" class='awrc'>13</td><td align="right" headers="Total Rows" class='awrc'>181</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.53</td><td align="right" headers="Total Execs" class='awrc'>181</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.43</td><td align="right" headers="PerExecution Reads" class='awrc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.26</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.33</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>0.55</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.43</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="Total Gets" class='awrnc'>4,676</td><td align="right" headers="Total Reads" class='awrnc'>59</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,338.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>29.50</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.17</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12061"></a>
<h3 class="awr">SQL ordered by CPU Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   97.3% of Total CPU Time (s): 	    248</li>
<li class="awr">Captured PL/SQL account for  100.2% of Total CPU Time (s):	       248</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by CPU Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>127.21</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="Total IOWait(s)" class='awrc'>397.47</td><td align="right" headers="Total Gets" class='awrc'>1,564,773</td><td align="right" headers="Total Reads" class='awrc'>1,031,832</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>113.40</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>127.21</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>397.47</td><td align="right" headers="PerExecution Gets" class='awrc'>1,564,773.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,031,832.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>113.40</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>51.28</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.72</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>47.98</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>17.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>46.76</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>54.66</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>125.12</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>637.51</td><td align="right" headers="Total IOWait(s)" class='awrnc'>461.40</td><td align="right" headers="Total Gets" class='awrnc'>543,691</td><td align="right" headers="Total Reads" class='awrnc'>324,702</td><td align="right" headers="Total Rows" class='awrnc'>470,799</td><td align="right" headers="Total Cluster(s)" class='awrnc'>119.92</td><td align="right" headers="Total Execs" class='awrnc'>7,473</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="PerExecution Gets" class='awrnc'>72.75</td><td align="right" headers="PerExecution Reads" class='awrnc'>43.45</td><td align="right" headers="PerExecution Rows" class='awrnc'>63.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>50.44</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>55.72</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>55.70</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>5.96</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>57.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>13.76</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>118.82</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.95</td><td align="right" headers="Total IOWait(s)" class='awrc'>426.51</td><td align="right" headers="Total Gets" class='awrc'>1,792,446</td><td align="right" headers="Total Reads" class='awrc'>1,172,802</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>91.23</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>118.82</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.95</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>426.51</td><td align="right" headers="PerExecution Gets" class='awrc'>1,792,446.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,172,802.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>91.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>47.90</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.73</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>51.48</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>19.64</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>53.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>43.98</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>113.27</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>491.71</td><td align="right" headers="Total IOWait(s)" class='awrnc'>361.93</td><td align="right" headers="Total Gets" class='awrnc'>2,804,817</td><td align="right" headers="Total Reads" class='awrnc'>1,878,864</td><td align="right" headers="Total Rows" class='awrnc'>42,416</td><td align="right" headers="Total Cluster(s)" class='awrnc'>84.48</td><td align="right" headers="Total Execs" class='awrnc'>42,415</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>66.13</td><td align="right" headers="PerExecution Reads" class='awrnc'>44.30</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>45.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>42.97</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>43.69</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>30.73</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>85.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>40.72</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>78.11</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>0.84</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.08</td><td align="right" headers="Total Gets" class='awrc'>19,346</td><td align="right" headers="Total Reads" class='awrc'>113</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.65</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.84</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.08</td><td align="right" headers="PerExecution Gets" class='awrc'>19,346.00</td><td align="right" headers="PerExecution Reads" class='awrc'>113.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.65</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>0.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.17</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.21</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>0.67</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.69</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>263,542</td><td align="right" headers="Total Reads" class='awrnc'>2</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.67</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.69</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>263,542.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>0.27</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>0.56</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.70</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.12</td><td align="right" headers="Total Gets" class='awrc'>264,188</td><td align="right" headers="Total Reads" class='awrc'>38</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.28</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.35</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Gets" class='awrc'>132,094.00</td><td align="right" headers="PerExecution Reads" class='awrc'>19.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>0.23</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.06</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>0.43</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="Total Gets" class='awrnc'>4,676</td><td align="right" headers="Total Reads" class='awrnc'>59</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.21</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,338.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>29.50</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>0.17</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>0.38</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.48</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.06</td><td align="right" headers="Total Gets" class='awrc'>4,342</td><td align="right" headers="Total Reads" class='awrc'>53</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.19</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.24</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution Gets" class='awrc'>2,171.00</td><td align="right" headers="PerExecution Reads" class='awrc'>26.50</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>0.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>0.35</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.45</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="Total Gets" class='awrnc'>4,224</td><td align="right" headers="Total Reads" class='awrnc'>53</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.18</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.23</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,112.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>26.50</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>0.14</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12066"></a>
<h3 class="awr">SQL ordered by User I/O Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   99.4% of Total User I/O Wait Time (s):	      828</li>
<li class="awr">Captured PL/SQL account for   99.5% of Total User I/O Wait Time (s):		 828</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by User I/O Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>461.40</td><td align="right" headers="Total Elapsed(s)" class='awrc'>637.51</td><td align="right" headers="Total CPU(s)" class='awrc'>125.12</td><td align="right" headers="Total Gets" class='awrc'>543,691</td><td align="right" headers="Total Reads" class='awrc'>324,702</td><td align="right" headers="Total Rows" class='awrc'>470,799</td><td align="right" headers="Total Cluster(s)" class='awrc'>119.92</td><td align="right" headers="Total Execs" class='awrc'>7,473</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.06</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.09</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Gets" class='awrc'>72.75</td><td align="right" headers="PerExecution Reads" class='awrc'>43.45</td><td align="right" headers="PerExecution Rows" class='awrc'>63.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>55.70</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>55.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>50.44</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>5.96</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>14.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>57.81</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>13.76</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>426.51</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.95</td><td align="right" headers="Total CPU(s)" class='awrnc'>118.82</td><td align="right" headers="Total Gets" class='awrnc'>1,792,446</td><td align="right" headers="Total Reads" class='awrnc'>1,172,802</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>426.51</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.95</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>118.82</td><td align="right" headers="PerExecution Gets" class='awrnc'>1,792,446.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>1,172,802.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>51.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>49.73</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>47.90</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>19.64</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>53.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>43.98</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>397.47</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="Total CPU(s)" class='awrc'>127.21</td><td align="right" headers="Total Gets" class='awrc'>1,564,773</td><td align="right" headers="Total Reads" class='awrc'>1,031,832</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>113.40</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>397.47</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>127.21</td><td align="right" headers="PerExecution Gets" class='awrc'>1,564,773.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,031,832.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>113.40</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>47.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>51.28</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>17.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>46.76</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>54.66</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>361.93</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>491.71</td><td align="right" headers="Total CPU(s)" class='awrnc'>113.27</td><td align="right" headers="Total Gets" class='awrnc'>2,804,817</td><td align="right" headers="Total Reads" class='awrnc'>1,878,864</td><td align="right" headers="Total Rows" class='awrnc'>42,416</td><td align="right" headers="Total Cluster(s)" class='awrnc'>84.48</td><td align="right" headers="Total Execs" class='awrnc'>42,415</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>66.13</td><td align="right" headers="PerExecution Reads" class='awrnc'>44.30</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>43.69</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>42.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>45.66</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>30.73</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>85.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>40.72</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>78.11</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>0.12</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.70</td><td align="right" headers="Total CPU(s)" class='awrc'>0.56</td><td align="right" headers="Total Gets" class='awrc'>264,188</td><td align="right" headers="Total Reads" class='awrc'>38</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.06</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.28</td><td align="right" headers="PerExecution Gets" class='awrc'>132,094.00</td><td align="right" headers="PerExecution Reads" class='awrc'>19.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.23</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>0.08</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>1.89</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.84</td><td align="right" headers="Total Gets" class='awrnc'>19,346</td><td align="right" headers="Total Reads" class='awrnc'>113</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.65</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.08</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>1.89</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.84</td><td align="right" headers="PerExecution Gets" class='awrnc'>19,346.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>113.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.65</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.34</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.21</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.31</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>0.07</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.55</td><td align="right" headers="Total CPU(s)" class='awrc'>0.43</td><td align="right" headers="Total Gets" class='awrc'>4,676</td><td align="right" headers="Total Reads" class='awrc'>59</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.01</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.28</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.21</td><td align="right" headers="PerExecution Gets" class='awrc'>2,338.00</td><td align="right" headers="PerExecution Reads" class='awrc'>29.50</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.17</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>0.06</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.48</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.38</td><td align="right" headers="Total Gets" class='awrnc'>4,342</td><td align="right" headers="Total Reads" class='awrnc'>53</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.24</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.19</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,171.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>26.50</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.15</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>0.06</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.45</td><td align="right" headers="Total CPU(s)" class='awrc'>0.35</td><td align="right" headers="Total Gets" class='awrc'>4,224</td><td align="right" headers="Total Reads" class='awrc'>53</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.23</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.18</td><td align="right" headers="PerExecution Gets" class='awrc'>2,112.00</td><td align="right" headers="PerExecution Reads" class='awrc'>26.50</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.14</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>0.00</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.69</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.67</td><td align="right" headers="Total Gets" class='awrnc'>263,542</td><td align="right" headers="Total Reads" class='awrnc'>2</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.69</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.67</td><td align="right" headers="PerExecution Gets" class='awrnc'>263,542.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.27</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12062"></a>
<h3 class="awr">SQL ordered by Gets (Global)</h3>
<ul>
<li class="awr">Total Buffer Gets:	 9,128,021</li>
<li class="awr">Captured SQL account for   40.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Gets (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Gets" class='awrclb'>2,804,817</td><td align="right" headers="Total Reads" class='awrc'>1,878,864</td><td align="right" headers="Total Elapsed(s)" class='awrc'>491.71</td><td align="right" headers="Total CPU(s)" class='awrc'>113.27</td><td align="right" headers="Total IOWait(s)" class='awrc'>361.93</td><td align="right" headers="Total Rows" class='awrc'>42,416</td><td align="right" headers="Total Cluster(s)" class='awrc'>84.48</td><td align="right" headers="Total Execs" class='awrc'>42,415</td><td align="right" headers="PerExecution Gets" class='awrclb'>66.13</td><td align="right" headers="PerExecution Reads" class='awrc'>44.30</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>30.73</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>85.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>42.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>45.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>43.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>40.72</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>78.11</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total Gets" class='awrnclb'>1,792,446</td><td align="right" headers="Total Reads" class='awrnc'>1,172,802</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.95</td><td align="right" headers="Total CPU(s)" class='awrnc'>118.82</td><td align="right" headers="Total IOWait(s)" class='awrnc'>426.51</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>1,792,446.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>1,172,802.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.95</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>118.82</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>426.51</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>19.64</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>53.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>49.73</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>47.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>51.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>43.98</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total Gets" class='awrclb'>1,564,773</td><td align="right" headers="Total Reads" class='awrc'>1,031,832</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="Total CPU(s)" class='awrc'>127.21</td><td align="right" headers="Total IOWait(s)" class='awrc'>397.47</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>113.40</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>1,564,773.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,031,832.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>127.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>397.47</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>113.40</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>17.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>46.76</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>51.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>47.98</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>54.66</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Gets" class='awrnclb'>543,691</td><td align="right" headers="Total Reads" class='awrnc'>324,702</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>637.51</td><td align="right" headers="Total CPU(s)" class='awrnc'>125.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>461.40</td><td align="right" headers="Total Rows" class='awrnc'>470,799</td><td align="right" headers="Total Cluster(s)" class='awrnc'>119.92</td><td align="right" headers="Total Execs" class='awrnc'>7,473</td><td align="right" headers="PerExecution Gets" class='awrnclb'>72.75</td><td align="right" headers="PerExecution Reads" class='awrnc'>43.45</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.09</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrnc'>63.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>5.96</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>55.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>50.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>55.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>57.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>13.76</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total Gets" class='awrclb'>264,188</td><td align="right" headers="Total Reads" class='awrc'>38</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.70</td><td align="right" headers="Total CPU(s)" class='awrc'>0.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.12</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution Gets" class='awrclb'>132,094.00</td><td align="right" headers="PerExecution Reads" class='awrc'>19.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td><td align="right" headers="Total Gets" class='awrnclb'>263,542</td><td align="right" headers="Total Reads" class='awrnc'>2</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.69</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.67</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>263,542.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.69</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.67</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.27</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total Gets" class='awrclb'>19,346</td><td align="right" headers="Total Reads" class='awrc'>113</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="Total CPU(s)" class='awrc'>0.84</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.08</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.65</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>19,346.00</td><td align="right" headers="PerExecution Reads" class='awrc'>113.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.65</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>0.21</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bjck50zs3nc95">bjck50zs3nc95</a></td><td align="right" headers="Total Gets" class='awrnclb'>10,075</td><td align="right" headers="Total Reads" class='awrnc'>20</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.08</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="Total Rows" class='awrnc'>4,072</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Gets" class='awrnclb'>5,037.50</td><td align="right" headers="PerExecution Reads" class='awrnc'>10.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.05</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.04</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>2,036.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>0.11</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>insert into WRH$_SYSSTAT (dbid...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6ajkhukk78nsr">6ajkhukk78nsr</a></td><td align="right" headers="Total Gets" class='awrclb'>4,689</td><td align="right" headers="Total Reads" class='awrc'>1</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.31</td><td align="right" headers="Total CPU(s)" class='awrc'>0.18</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.13</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>4,689.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.31</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.13</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.07</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.06</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>begin prvt_hdm.auto_execute( :...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td><td align="right" headers="Total Gets" class='awrnclb'>4,676</td><td align="right" headers="Total Reads" class='awrnc'>59</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.55</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.43</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Gets" class='awrnclb'>2,338.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>29.50</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.17</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12063"></a>
<h3 class="awr">SQL ordered by Reads (Global)</h3>
<ul>
<li class="awr">Total Disk Reads:	2,206,439</li>
<li class="awr">Captured SQL account for   99.9% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Reads (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Reads" class='awrclb'>1,878,864</td><td align="right" headers="Total Gets" class='awrc'>2,804,817</td><td align="right" headers="Total Elapsed(s)" class='awrc'>491.71</td><td align="right" headers="Total CPU(s)" class='awrc'>113.27</td><td align="right" headers="Total IOWait(s)" class='awrc'>361.93</td><td align="right" headers="Total Rows" class='awrc'>42,416</td><td align="right" headers="Total Cluster(s)" class='awrc'>84.48</td><td align="right" headers="Total Execs" class='awrc'>42,415</td><td align="right" headers="PerExecution Reads" class='awrclb'>44.30</td><td align="right" headers="PerExecution Gets" class='awrc'>66.13</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>85.15</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>30.73</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>42.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>45.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>43.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>40.72</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>78.11</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total Reads" class='awrnclb'>1,172,802</td><td align="right" headers="Total Gets" class='awrnc'>1,792,446</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.95</td><td align="right" headers="Total CPU(s)" class='awrnc'>118.82</td><td align="right" headers="Total IOWait(s)" class='awrnc'>426.51</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>1,172,802.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>1,792,446.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.95</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>118.82</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>426.51</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>91.23</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>53.15</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>19.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>49.73</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>47.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>51.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>43.98</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total Reads" class='awrclb'>1,031,832</td><td align="right" headers="Total Gets" class='awrc'>1,564,773</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="Total CPU(s)" class='awrc'>127.21</td><td align="right" headers="Total IOWait(s)" class='awrc'>397.47</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>113.40</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>1,031,832.00</td><td align="right" headers="PerExecution Gets" class='awrc'>1,564,773.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.94</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>127.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>397.47</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>113.40</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>46.76</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>17.14</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>51.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>47.98</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>54.66</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Reads" class='awrnclb'>324,702</td><td align="right" headers="Total Gets" class='awrnc'>543,691</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>637.51</td><td align="right" headers="Total CPU(s)" class='awrnc'>125.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>461.40</td><td align="right" headers="Total Rows" class='awrnc'>470,799</td><td align="right" headers="Total Cluster(s)" class='awrnc'>119.92</td><td align="right" headers="Total Execs" class='awrnc'>7,473</td><td align="right" headers="PerExecution Reads" class='awrnclb'>43.45</td><td align="right" headers="PerExecution Gets" class='awrnc'>72.75</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.09</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrnc'>63.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>14.72</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>5.96</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>55.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>50.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>55.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>57.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>13.76</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total Reads" class='awrclb'>113</td><td align="right" headers="Total Gets" class='awrc'>19,346</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="Total CPU(s)" class='awrc'>0.84</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.08</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.65</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>113.00</td><td align="right" headers="PerExecution Gets" class='awrc'>19,346.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.65</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.21</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td><td align="right" headers="Total Reads" class='awrnclb'>59</td><td align="right" headers="Total Gets" class='awrnc'>4,676</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.55</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.43</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Reads" class='awrnclb'>29.50</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,338.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.17</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td><td align="right" headers="Total Reads" class='awrclb'>53</td><td align="right" headers="Total Gets" class='awrc'>4,342</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.48</td><td align="right" headers="Total CPU(s)" class='awrc'>0.38</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.06</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution Reads" class='awrclb'>26.50</td><td align="right" headers="PerExecution Gets" class='awrc'>2,171.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.24</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.15</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td><td align="right" headers="Total Reads" class='awrnclb'>53</td><td align="right" headers="Total Gets" class='awrnc'>4,224</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.45</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.35</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Reads" class='awrnclb'>26.50</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,112.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.23</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.14</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total Reads" class='awrclb'>38</td><td align="right" headers="Total Gets" class='awrc'>264,188</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.70</td><td align="right" headers="Total CPU(s)" class='awrc'>0.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.12</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution Reads" class='awrclb'>19.00</td><td align="right" headers="PerExecution Gets" class='awrc'>132,094.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#c9059z5ksrf1x">c9059z5ksrf1x</a></td><td align="right" headers="Total Reads" class='awrnclb'>32</td><td align="right" headers="Total Gets" class='awrnc'>3,721</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.02</td><td align="right" headers="Total Rows" class='awrnc'>1,966</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.06</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Reads" class='awrnclb'>16.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>1,860.50</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.06</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>983.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>insert into wrh$_latch (dbid, ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12081"></a>
<h3 class="awr">SQL ordered by UnOptimized Read Requests (Global)</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    2,206,397</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       2,206,397</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by UnOptimized Read Requests (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 9" id="Total">Total</th>
<th class="awrbg" colspan=" 8" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 8" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>1,172,802</td><td align="right" headers="Total Requests" class='awrc'>1,172,802</td><td align="right" headers="Total Reads" class='awrc'>1,172,802</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.95</td><td align="right" headers="Total CPU(s)" class='awrc'>118.82</td><td align="right" headers="Total IOWait(s)" class='awrc'>426.51</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>91.23</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>1,172,802.00</td><td align="right" headers="PerExecution Requests" class='awrc'>1,172,802.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,172,802.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.95</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>118.82</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>426.51</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>91.23</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>53.15</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>53.15</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>53.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.73</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>47.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>51.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>43.98</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>1,031,832</td><td align="right" headers="Total Requests" class='awrnc'>1,031,832</td><td align="right" headers="Total Reads" class='awrnc'>1,031,832</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.94</td><td align="right" headers="Total CPU(s)" class='awrnc'>127.21</td><td align="right" headers="Total IOWait(s)" class='awrnc'>397.47</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>113.40</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>1,031,832.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>1,031,832.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>1,031,832.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.94</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>127.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>397.47</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>113.40</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>46.77</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>46.77</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>46.76</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>49.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>51.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>47.98</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>54.66</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>249</td><td align="right" headers="Total Requests" class='awrc'>249</td><td align="right" headers="Total Reads" class='awrc'>113</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="Total CPU(s)" class='awrc'>0.84</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.08</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.65</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>249.00</td><td align="right" headers="PerExecution Requests" class='awrc'>249.00</td><td align="right" headers="PerExecution Reads" class='awrc'>113.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.65</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#88v8xahbcrsjp">88v8xahbcrsjp</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>49</td><td align="right" headers="Total Requests" class='awrnc'>49</td><td align="right" headers="Total Reads" class='awrnc'>5</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Rows" class='awrnc'>13</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>49.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>49.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>5.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>13.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>insert into WRH$_IOSTAT_FILETY...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj6mtazkhmdd">5pj6mtazkhmdd</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>38</td><td align="right" headers="Total Requests" class='awrc'>38</td><td align="right" headers="Total Reads" class='awrc'>38</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.70</td><td align="right" headers="Total CPU(s)" class='awrc'>0.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.12</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>19.00</td><td align="right" headers="PerExecution Requests" class='awrc'>19.00</td><td align="right" headers="PerExecution Reads" class='awrc'>19.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.06</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN /* KSXM:FLUSH DML_MON */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>26</td><td align="right" headers="Total Requests" class='awrnc'>26</td><td align="right" headers="Total Reads" class='awrnc'>59</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.55</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.43</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>13.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>13.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>29.50</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.17</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0w26sk6t6gq98">0w26sk6t6gq98</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>20</td><td align="right" headers="Total Requests" class='awrc'>20</td><td align="right" headers="Total Reads" class='awrc'>53</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.48</td><td align="right" headers="Total CPU(s)" class='awrc'>0.38</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.06</td><td align="right" headers="Total Rows" class='awrc'>2</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>10.00</td><td align="right" headers="PerExecution Requests" class='awrc'>10.00</td><td align="right" headers="PerExecution Reads" class='awrc'>26.50</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.24</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.15</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>SELECT XMLTYPE(DBMS_REPORT.GET...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>19</td><td align="right" headers="Total Requests" class='awrnc'>19</td><td align="right" headers="Total Reads" class='awrnc'>19</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.13</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.10</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="Total Rows" class='awrnc'>781</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.03</td><td align="right" headers="Total Execs" class='awrnc'>786</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>0.02</td><td align="right" headers="PerExecution Requests" class='awrnc'>0.02</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.99</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>1.45</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#c9059z5ksrf1x">c9059z5ksrf1x</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>17</td><td align="right" headers="Total Requests" class='awrc'>17</td><td align="right" headers="Total Reads" class='awrc'>32</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.12</td><td align="right" headers="Total CPU(s)" class='awrc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.02</td><td align="right" headers="Total Rows" class='awrc'>1,966</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.06</td><td align="right" headers="Total Execs" class='awrc'>2</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>8.50</td><td align="right" headers="PerExecution Requests" class='awrc'>8.50</td><td align="right" headers="PerExecution Reads" class='awrc'>16.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>983.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>insert into wrh$_latch (dbid, ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#a1xgxtssv5rrp">a1xgxtssv5rrp</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>16</td><td align="right" headers="Total Requests" class='awrnc'>16</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.05</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.03</td><td align="right" headers="Total Rows" class='awrnc'>2</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>8.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>8.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>select sum(used_blocks), ts.ts...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12065"></a>
<h3 class="awr">SQL ordered by Executions (Global)</h3>
<ul>
<li class="awr">Total Executions:	   54,303</li>
<li class="awr">Captured SQL account for   96.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Executions (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Execs" class='awrclb'>42,415</td><td align="right" headers="Total Elapsed(s)" class='awrc'>491.71</td><td align="right" headers="Total CPU(s)" class='awrc'>113.27</td><td align="right" headers="Total IOWait(s)" class='awrc'>361.93</td><td align="right" headers="Total Gets" class='awrc'>2,804,817</td><td align="right" headers="Total Reads" class='awrc'>1,878,864</td><td align="right" headers="Total Rows" class='awrc'>42,416</td><td align="right" headers="Total Cluster(s)" class='awrc'>84.48</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>66.13</td><td align="right" headers="PerExecution Reads" class='awrc'>44.30</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>78.11</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>42.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>45.66</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>43.69</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>30.73</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>85.15</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>40.72</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Execs" class='awrnclb'>7,473</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>637.51</td><td align="right" headers="Total CPU(s)" class='awrnc'>125.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>461.40</td><td align="right" headers="Total Gets" class='awrnc'>543,691</td><td align="right" headers="Total Reads" class='awrnc'>324,702</td><td align="right" headers="Total Rows" class='awrnc'>470,799</td><td align="right" headers="Total Cluster(s)" class='awrnc'>119.92</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.09</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="PerExecution Gets" class='awrnc'>72.75</td><td align="right" headers="PerExecution Reads" class='awrnc'>43.45</td><td align="right" headers="PerExecution Rows" class='awrnc'>63.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>13.76</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>55.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>50.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>55.70</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>5.96</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.72</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>57.81</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td><td align="right" headers="Total Execs" class='awrclb'>786</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.13</td><td align="right" headers="Total CPU(s)" class='awrc'>0.10</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Gets" class='awrc'>2,615</td><td align="right" headers="Total Reads" class='awrc'>19</td><td align="right" headers="Total Rows" class='awrc'>781</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>3.33</td><td align="right" headers="PerExecution Reads" class='awrc'>0.02</td><td align="right" headers="PerExecution Rows" class='awrc'>0.99</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>1.45</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.01</td>
<td class='awrc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td><td align="right" headers="Total Execs" class='awrnclb'>399</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.03</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>808</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>390</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>2.03</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.98</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.73</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>update svcobj_access$ set acce...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td><td align="right" headers="Total Execs" class='awrclb'>305</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.13</td><td align="right" headers="Total CPU(s)" class='awrc'>0.10</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Gets" class='awrc'>2,223</td><td align="right" headers="Total Reads" class='awrc'>6</td><td align="right" headers="Total Rows" class='awrc'>305</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>7.29</td><td align="right" headers="PerExecution Reads" class='awrc'>0.02</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.56</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.01</td>
<td class='awrc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Execs" class='awrnclb'>181</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.57</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="Total Gets" class='awrnc'>802</td><td align="right" headers="Total Reads" class='awrnc'>13</td><td align="right" headers="Total Rows" class='awrnc'>181</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.53</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>4.43</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.26</td>
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#fdsrx9wqyqtmu">fdsrx9wqyqtmu</a></td><td align="right" headers="Total Execs" class='awrclb'>144</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.04</td><td align="right" headers="Total CPU(s)" class='awrc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>525</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>144</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>3.65</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.27</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.01</td>
<td class='awrc'>INSERT INTO wri$_adv_parameter...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2p9fv35c7zxtg">2p9fv35c7zxtg</a></td><td align="right" headers="Total Execs" class='awrnclb'>65</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.02</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>355</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>30</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>5.46</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.46</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.12</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select /* KSXM:LOAD_DML_INF */...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td><td align="right" headers="Total Execs" class='awrclb'>63</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.00</td><td align="right" headers="Total CPU(s)" class='awrc'>0.00</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>147</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>21</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>2.33</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>0.33</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.12</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2sxqgx5hx76qr">2sxqgx5hx76qr</a></td><td align="right" headers="Total Execs" class='awrnclb'>52</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.03</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.02</td><td align="right" headers="Total Gets" class='awrnc'>169</td><td align="right" headers="Total Reads" class='awrnc'>6</td><td align="right" headers="Total Rows" class='awrnc'>836</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>3.25</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.12</td><td align="right" headers="PerExecution Rows" class='awrnc'>16.08</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.10</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select /*+ rule */ bucket, end...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12064"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time (Global)</h3>
<ul>
<li class="awr">Total Cluster Wait Time (s):		 207</li>
<li class="awr">Captured SQL account for   99.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Cluster Wait Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>119.92</td><td align="right" headers="Total Elapsed(s)" class='awrc'>637.51</td><td align="right" headers="Total CPU(s)" class='awrc'>125.12</td><td align="right" headers="Total IOWait(s)" class='awrc'>461.40</td><td align="right" headers="Total Gets" class='awrc'>543,691</td><td align="right" headers="Total Reads" class='awrc'>324,702</td><td align="right" headers="Total Rows" class='awrc'>470,799</td><td align="right" headers="Total Execs" class='awrc'>7,473</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.09</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.06</td><td align="right" headers="PerExecution Gets" class='awrc'>72.75</td><td align="right" headers="PerExecution Reads" class='awrc'>43.45</td><td align="right" headers="PerExecution Rows" class='awrc'>63.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>57.81</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>55.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>50.44</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>55.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>5.96</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>14.72</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>13.76</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0sy7x6xzjg2yy">0sy7x6xzjg2yy</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>113.40</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.94</td><td align="right" headers="Total CPU(s)" class='awrnc'>127.21</td><td align="right" headers="Total IOWait(s)" class='awrnc'>397.47</td><td align="right" headers="Total Gets" class='awrnc'>1,564,773</td><td align="right" headers="Total Reads" class='awrnc'>1,031,832</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>113.40</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.94</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>127.21</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>397.47</td><td align="right" headers="PerExecution Gets" class='awrnc'>1,564,773.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>1,031,832.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>54.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>49.72</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>51.28</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>47.98</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>17.14</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>46.76</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#078ab5pdvxx3c">078ab5pdvxx3c</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>91.23</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.95</td><td align="right" headers="Total CPU(s)" class='awrc'>118.82</td><td align="right" headers="Total IOWait(s)" class='awrc'>426.51</td><td align="right" headers="Total Gets" class='awrc'>1,792,446</td><td align="right" headers="Total Reads" class='awrc'>1,172,802</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>91.23</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.95</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>118.82</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>426.51</td><td align="right" headers="PerExecution Gets" class='awrc'>1,792,446.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1,172,802.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>43.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>49.73</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>47.90</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>51.48</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>19.64</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>53.15</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>84.48</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>491.71</td><td align="right" headers="Total CPU(s)" class='awrnc'>113.27</td><td align="right" headers="Total IOWait(s)" class='awrnc'>361.93</td><td align="right" headers="Total Gets" class='awrnc'>2,804,817</td><td align="right" headers="Total Reads" class='awrnc'>1,878,864</td><td align="right" headers="Total Rows" class='awrnc'>42,416</td><td align="right" headers="Total Execs" class='awrnc'>42,415</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>66.13</td><td align="right" headers="PerExecution Reads" class='awrnc'>44.30</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>40.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>42.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>45.66</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>43.69</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>30.73</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>85.15</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>78.11</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>0.65</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="Total CPU(s)" class='awrc'>0.84</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.08</td><td align="right" headers="Total Gets" class='awrc'>19,346</td><td align="right" headers="Total Reads" class='awrc'>113</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.65</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>1.89</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.08</td><td align="right" headers="PerExecution Gets" class='awrc'>19,346.00</td><td align="right" headers="PerExecution Reads" class='awrc'>113.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>0.31</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.17</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.34</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.21</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>0.53</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.57</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="Total Gets" class='awrnc'>802</td><td align="right" headers="Total Reads" class='awrnc'>13</td><td align="right" headers="Total Rows" class='awrnc'>181</td><td align="right" headers="Total Execs" class='awrnc'>181</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>4.43</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>0.26</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.33</td>
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6ajkhukk78nsr">6ajkhukk78nsr</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>0.13</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.31</td><td align="right" headers="Total CPU(s)" class='awrc'>0.18</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>4,689</td><td align="right" headers="Total Reads" class='awrc'>1</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.13</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.31</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4,689.00</td><td align="right" headers="PerExecution Reads" class='awrc'>1.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>0.06</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.07</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>begin prvt_hdm.auto_execute( :...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>0.09</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.17</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.08</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="Total Gets" class='awrnc'>2,087</td><td align="right" headers="Total Reads" class='awrnc'>10</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.17</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.08</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>2,087.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>10.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>0.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>0.09</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.17</td><td align="right" headers="Total CPU(s)" class='awrc'>0.07</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Gets" class='awrc'>2,077</td><td align="right" headers="Total Reads" class='awrc'>10</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.17</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.07</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>2,077.00</td><td align="right" headers="PerExecution Reads" class='awrc'>10.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>0.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#c9059z5ksrf1x">c9059z5ksrf1x</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>0.06</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.02</td><td align="right" headers="Total Gets" class='awrnc'>3,721</td><td align="right" headers="Total Reads" class='awrnc'>32</td><td align="right" headers="Total Rows" class='awrnc'>1,966</td><td align="right" headers="Total Execs" class='awrnc'>2</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.06</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>1,860.50</td><td align="right" headers="PerExecution Reads" class='awrnc'>16.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>983.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>insert into wrh$_latch (dbid, ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="623"></a>
<h2 class="awr">
Global Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12071">System Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12072">Global Messaging Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12073">System Statistics (Absolute Values)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12071"></a>
<h3 class="awr">System Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>953</td><td align="right" class='awrnc'>1.58</td><td align="right" class='awrnc'>0.13</td><td align="right" headers="perSecond Average" class='awrnclb'>0.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.79</td><td align="right" headers="perSecond Max" class='awrncrb'>0.80</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>286</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.25</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>725</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>0.10</td><td align="right" headers="perSecond Average" class='awrnclb'>0.60</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.58</td><td align="right" headers="perSecond Max" class='awrncrb'>0.62</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>235</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.17</td><td align="right" headers="perSecond Max" class='awrncrb'>0.22</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>669</td><td align="right" class='awrc'>1.11</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>0.56</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.55</td><td align="right" headers="perSecond Max" class='awrcrb'>0.56</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>500</td><td align="right" class='awrnc'>0.83</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>0.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.41</td><td align="right" headers="perSecond Max" class='awrncrb'>0.42</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>169</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>543</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>0.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.38</td><td align="right" headers="perSecond Max" class='awrncrb'>0.52</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>1,861,092</td><td align="right" class='awrnc'>3,089.51</td><td align="right" class='awrnc'>245.56</td><td align="right" headers="perSecond Average" class='awrnclb'>1,544.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,184.61</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>3,089.50</td></tr>
<tr><td scope="row" class='awrc'>Batched IO double miss count</td><td align="right" class='awrc'>40,398</td><td align="right" class='awrc'>67.06</td><td align="right" class='awrc'>5.33</td><td align="right" headers="perSecond Average" class='awrclb'>67.06</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>67.06</td><td align="right" headers="perSecond Max" class='awrcrb'>67.06</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO same unit count</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO single block count</td><td align="right" class='awrc'>355</td><td align="right" class='awrc'>0.59</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>0.29</td><td align="right" headers="perSecond StdDev" class='awrc'>0.41</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.59</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>1,860,800</td><td align="right" class='awrnc'>3,089.02</td><td align="right" class='awrnc'>245.52</td><td align="right" headers="perSecond Average" class='awrnclb'>3,089.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>3,089.02</td><td align="right" headers="perSecond Max" class='awrncrb'>3,089.02</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>39,872</td><td align="right" class='awrc'>66.19</td><td align="right" class='awrc'>5.26</td><td align="right" headers="perSecond Average" class='awrclb'>66.19</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>66.19</td><td align="right" headers="perSecond Max" class='awrcrb'>66.19</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>48,279</td><td align="right" class='awrnc'>80.15</td><td align="right" class='awrnc'>6.37</td><td align="right" headers="perSecond Average" class='awrnclb'>40.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>16.61</td><td align="right" headers="perSecond Min" class='awrnc'>28.33</td><td align="right" headers="perSecond Max" class='awrncrb'>51.82</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>25,823</td><td align="right" class='awrc'>42.87</td><td align="right" class='awrc'>3.41</td><td align="right" headers="perSecond Average" class='awrclb'>21.43</td><td align="right" headers="perSecond StdDev" class='awrc'>30.08</td><td align="right" headers="perSecond Min" class='awrc'>0.16</td><td align="right" headers="perSecond Max" class='awrcrb'>42.70</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>6,798</td><td align="right" class='awrnc'>11.29</td><td align="right" class='awrnc'>0.90</td><td align="right" headers="perSecond Average" class='awrnclb'>5.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.94</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>11.26</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>1,229,605</td><td align="right" class='awrc'>2,041.21</td><td align="right" class='awrc'>162.24</td><td align="right" headers="perSecond Average" class='awrclb'>2,041.21</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>2,041.21</td><td align="right" headers="perSecond Max" class='awrcrb'>2,041.21</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>68,435</td><td align="right" class='awrnc'>113.61</td><td align="right" class='awrnc'>9.03</td><td align="right" headers="perSecond Average" class='awrnclb'>56.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>73.52</td><td align="right" headers="perSecond Min" class='awrnc'>4.81</td><td align="right" headers="perSecond Max" class='awrncrb'>108.79</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>6,635</td><td align="right" class='awrc'>11.01</td><td align="right" class='awrc'>0.88</td><td align="right" headers="perSecond Average" class='awrclb'>5.51</td><td align="right" headers="perSecond StdDev" class='awrc'>2.01</td><td align="right" headers="perSecond Min" class='awrc'>4.09</td><td align="right" headers="perSecond Max" class='awrcrb'>6.93</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>10,202</td><td align="right" class='awrnc'>16.94</td><td align="right" class='awrnc'>1.35</td><td align="right" headers="perSecond Average" class='awrnclb'>8.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.71</td><td align="right" headers="perSecond Min" class='awrnc'>3.72</td><td align="right" headers="perSecond Max" class='awrncrb'>13.21</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>36,114</td><td align="right" class='awrc'>59.95</td><td align="right" class='awrc'>4.77</td><td align="right" headers="perSecond Average" class='awrclb'>29.98</td><td align="right" headers="perSecond StdDev" class='awrc'>31.88</td><td align="right" headers="perSecond Min" class='awrc'>7.43</td><td align="right" headers="perSecond Max" class='awrcrb'>52.52</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>17,340</td><td align="right" class='awrnc'>28.79</td><td align="right" class='awrnc'>2.29</td><td align="right" headers="perSecond Average" class='awrnclb'>14.39</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.30</td><td align="right" headers="perSecond Min" class='awrnc'>8.52</td><td align="right" headers="perSecond Max" class='awrncrb'>20.26</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>120,341</td><td align="right" class='awrc'>199.77</td><td align="right" class='awrc'>15.88</td><td align="right" headers="perSecond Average" class='awrclb'>99.89</td><td align="right" headers="perSecond StdDev" class='awrc'>140.65</td><td align="right" headers="perSecond Min" class='awrc'>0.43</td><td align="right" headers="perSecond Max" class='awrcrb'>199.34</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>67,628</td><td align="right" class='awrnc'>112.27</td><td align="right" class='awrnc'>8.92</td><td align="right" headers="perSecond Average" class='awrnclb'>56.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>76.95</td><td align="right" headers="perSecond Min" class='awrnc'>1.72</td><td align="right" headers="perSecond Max" class='awrncrb'>110.55</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>114</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.15</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.23</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>0.73</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>0.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.11</td><td align="right" headers="perSecond Min" class='awrnc'>0.29</td><td align="right" headers="perSecond Max" class='awrncrb'>0.44</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>19,578</td><td align="right" class='awrc'>32.50</td><td align="right" class='awrc'>2.58</td><td align="right" headers="perSecond Average" class='awrclb'>16.25</td><td align="right" headers="perSecond StdDev" class='awrc'>22.00</td><td align="right" headers="perSecond Min" class='awrc'>0.69</td><td align="right" headers="perSecond Max" class='awrcrb'>31.81</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>474,227</td><td align="right" class='awrc'>787.24</td><td align="right" class='awrc'>62.57</td><td align="right" headers="perSecond Average" class='awrclb'>393.62</td><td align="right" headers="perSecond StdDev" class='awrc'>553.69</td><td align="right" headers="perSecond Min" class='awrc'>2.10</td><td align="right" headers="perSecond Max" class='awrcrb'>785.14</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>348</td><td align="right" class='awrnc'>0.58</td><td align="right" class='awrnc'>0.05</td><td align="right" headers="perSecond Average" class='awrnclb'>0.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.28</td><td align="right" headers="perSecond Max" class='awrncrb'>0.30</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.10</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>16,580,608</td><td align="right" class='awrc'>27,524.67</td><td align="right" class='awrc'>2,187.70</td><td align="right" headers="perSecond Average" class='awrclb'>13,762.34</td><td align="right" headers="perSecond StdDev" class='awrc'>17,616.58</td><td align="right" headers="perSecond Min" class='awrc'>1,305.53</td><td align="right" headers="perSecond Max" class='awrcrb'>26,219.14</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>30,863</td><td align="right" class='awrnc'>51.23</td><td align="right" class='awrnc'>4.07</td><td align="right" headers="perSecond Average" class='awrnclb'>25.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.15</td><td align="right" headers="perSecond Min" class='awrnc'>24.10</td><td align="right" headers="perSecond Max" class='awrncrb'>27.14</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>114</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.08</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>4,558</td><td align="right" class='awrnc'>7.57</td><td align="right" class='awrnc'>0.60</td><td align="right" headers="perSecond Average" class='awrnclb'>3.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.58</td><td align="right" headers="perSecond Min" class='awrnc'>1.96</td><td align="right" headers="perSecond Max" class='awrncrb'>5.60</td></tr>
<tr><td scope="row" class='awrc'>KTFB free req</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free space (block)</td><td align="right" class='awrnc'>1,384</td><td align="right" class='awrnc'>2.30</td><td align="right" class='awrnc'>0.18</td><td align="right" headers="perSecond Average" class='awrnclb'>1.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.40</td><td align="right" headers="perSecond Max" class='awrncrb'>1.90</td></tr>
<tr><td scope="row" class='awrc'>KTFB free time (ms)</td><td align="right" class='awrc'>265</td><td align="right" class='awrc'>0.44</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrc'>0.11</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.30</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>72</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>72</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>94</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>137</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.13</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>135</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.13</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>443</td><td align="right" class='awrnc'>0.74</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>0.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.35</td><td align="right" headers="perSecond Max" class='awrncrb'>0.39</td></tr>
<tr><td scope="row" class='awrc'>application wait time</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>10,711</td><td align="right" class='awrnc'>17.78</td><td align="right" class='awrnc'>1.41</td><td align="right" headers="perSecond Average" class='awrnclb'>8.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>8.89</td><td align="right" headers="perSecond Max" class='awrncrb'>8.89</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>311,982</td><td align="right" class='awrc'>517.91</td><td align="right" class='awrc'>41.16</td><td align="right" headers="perSecond Average" class='awrclb'>258.95</td><td align="right" headers="perSecond StdDev" class='awrc'>365.77</td><td align="right" headers="perSecond Min" class='awrc'>0.32</td><td align="right" headers="perSecond Max" class='awrcrb'>517.59</td></tr>
<tr><td scope="row" class='awrnc'>branch node splits</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>7,024,860</td><td align="right" class='awrc'>11,661.64</td><td align="right" class='awrc'>926.88</td><td align="right" headers="perSecond Average" class='awrclb'>5,830.82</td><td align="right" headers="perSecond StdDev" class='awrc'>6,998.25</td><td align="right" headers="perSecond Min" class='awrc'>882.31</td><td align="right" headers="perSecond Max" class='awrcrb'>10,779.33</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>3,109,576</td><td align="right" class='awrnc'>5,162.06</td><td align="right" class='awrnc'>410.29</td><td align="right" headers="perSecond Average" class='awrnclb'>2,581.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,642.24</td><td align="right" headers="perSecond Min" class='awrnc'>5.57</td><td align="right" headers="perSecond Max" class='awrncrb'>5,156.48</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>382,978</td><td align="right" class='awrc'>635.76</td><td align="right" class='awrc'>50.53</td><td align="right" headers="perSecond Average" class='awrclb'>317.88</td><td align="right" headers="perSecond StdDev" class='awrc'>441.66</td><td align="right" headers="perSecond Min" class='awrc'>5.58</td><td align="right" headers="perSecond Max" class='awrcrb'>630.18</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>26,203</td><td align="right" class='awrnc'>43.50</td><td align="right" class='awrnc'>3.46</td><td align="right" headers="perSecond Average" class='awrnclb'>21.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.01</td><td align="right" headers="perSecond Min" class='awrnc'>7.60</td><td align="right" headers="perSecond Max" class='awrncrb'>35.90</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>65,365</td><td align="right" class='awrc'>108.51</td><td align="right" class='awrc'>8.62</td><td align="right" headers="perSecond Average" class='awrclb'>54.25</td><td align="right" headers="perSecond StdDev" class='awrc'>70.75</td><td align="right" headers="perSecond Min" class='awrc'>4.23</td><td align="right" headers="perSecond Max" class='awrcrb'>104.28</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>21,772</td><td align="right" class='awrnc'>36.14</td><td align="right" class='awrnc'>2.87</td><td align="right" headers="perSecond Average" class='awrnclb'>18.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>14.79</td><td align="right" headers="perSecond Min" class='awrnc'>7.62</td><td align="right" headers="perSecond Max" class='awrncrb'>28.53</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>5,351</td><td align="right" class='awrc'>8.88</td><td align="right" class='awrc'>0.71</td><td align="right" headers="perSecond Average" class='awrclb'>4.44</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>4.42</td><td align="right" headers="perSecond Max" class='awrcrb'>4.46</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>26,471,282,176</td><td align="right" class='awrnc'>43,943,702.12</td><td align="right" class='awrnc'>3,492,714.37</td><td align="right" headers="perSecond Average" class='awrnclb'>21,971,851.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>29,072,632.78</td><td align="right" headers="perSecond Min" class='awrnc'>1,414,395.27</td><td align="right" headers="perSecond Max" class='awrncrb'>42,529,306.85</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>625</td><td align="right" class='awrc'>1.04</td><td align="right" class='awrc'>0.08</td><td align="right" headers="perSecond Average" class='awrclb'>0.52</td><td align="right" headers="perSecond StdDev" class='awrc'>0.72</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>1.03</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>7,306</td><td align="right" class='awrnc'>12.13</td><td align="right" class='awrnc'>0.96</td><td align="right" headers="perSecond Average" class='awrnclb'>6.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.39</td><td align="right" headers="perSecond Max" class='awrncrb'>11.74</td></tr>
<tr><td scope="row" class='awrc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts only - consistent read gets</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>cluster key scan block gets</td><td align="right" class='awrc'>435</td><td align="right" class='awrc'>0.72</td><td align="right" class='awrc'>0.06</td><td align="right" headers="perSecond Average" class='awrclb'>0.36</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.28</td><td align="right" headers="perSecond Max" class='awrcrb'>0.44</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scans</td><td align="right" class='awrnc'>311</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.22</td><td align="right" headers="perSecond Max" class='awrncrb'>0.30</td></tr>
<tr><td scope="row" class='awrc'>cluster wait time</td><td align="right" class='awrc'>20,734</td><td align="right" class='awrc'>34.42</td><td align="right" class='awrc'>2.74</td><td align="right" headers="perSecond Average" class='awrclb'>17.21</td><td align="right" headers="perSecond StdDev" class='awrc'>24.01</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>34.19</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate performed</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate requested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: block lost</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: buffer being written</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: callback failure</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: cannot pin</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>473,623</td><td align="right" class='awrnc'>786.24</td><td align="right" class='awrnc'>62.49</td><td align="right" headers="perSecond Average" class='awrnclb'>393.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>553.72</td><td align="right" headers="perSecond Min" class='awrnc'>1.58</td><td align="right" headers="perSecond Max" class='awrncrb'>784.66</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>473,562</td><td align="right" class='awrc'>786.14</td><td align="right" class='awrc'>62.48</td><td align="right" headers="perSecond Average" class='awrclb'>393.07</td><td align="right" headers="perSecond StdDev" class='awrc'>553.73</td><td align="right" headers="perSecond Min" class='awrc'>1.52</td><td align="right" headers="perSecond Max" class='awrcrb'>784.61</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>222</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.18</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>concurrency wait time</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>5,429,631</td><td align="right" class='awrnc'>9,013.56</td><td align="right" class='awrnc'>716.40</td><td align="right" headers="perSecond Average" class='awrnclb'>4,506.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>6,370.00</td><td align="right" headers="perSecond Min" class='awrnc'>2.51</td><td align="right" headers="perSecond Max" class='awrncrb'>9,011.05</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>8,566,031</td><td align="right" class='awrc'>14,220.15</td><td align="right" class='awrc'>1,130.23</td><td align="right" headers="perSecond Average" class='awrclb'>7,110.07</td><td align="right" headers="perSecond StdDev" class='awrc'>3,380.73</td><td align="right" headers="perSecond Min" class='awrc'>4,719.53</td><td align="right" headers="perSecond Max" class='awrcrb'>9,500.61</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>5,797,552</td><td align="right" class='awrnc'>9,624.33</td><td align="right" class='awrnc'>764.95</td><td align="right" headers="perSecond Average" class='awrnclb'>4,812.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>6,563.28</td><td align="right" headers="perSecond Min" class='awrnc'>171.23</td><td align="right" headers="perSecond Max" class='awrncrb'>9,453.10</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>5,685,440</td><td align="right" class='awrc'>9,438.21</td><td align="right" class='awrc'>750.16</td><td align="right" headers="perSecond Average" class='awrclb'>4,719.11</td><td align="right" headers="perSecond StdDev" class='awrc'>6,432.20</td><td align="right" headers="perSecond Min" class='awrc'>170.86</td><td align="right" headers="perSecond Max" class='awrcrb'>9,267.36</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>8,566,031</td><td align="right" class='awrnc'>14,220.15</td><td align="right" class='awrnc'>1,130.23</td><td align="right" headers="perSecond Average" class='awrnclb'>7,110.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,380.73</td><td align="right" headers="perSecond Min" class='awrnc'>4,719.53</td><td align="right" headers="perSecond Max" class='awrncrb'>9,500.61</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>2,768,479</td><td align="right" class='awrc'>4,595.82</td><td align="right" class='awrc'>365.28</td><td align="right" headers="perSecond Average" class='awrclb'>2,297.91</td><td align="right" headers="perSecond StdDev" class='awrc'>3,182.55</td><td align="right" headers="perSecond Min" class='awrc'>47.51</td><td align="right" headers="perSecond Max" class='awrcrb'>4,548.31</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>2,647,573</td><td align="right" class='awrnc'>4,395.11</td><td align="right" class='awrnc'>349.33</td><td align="right" headers="perSecond Average" class='awrnclb'>2,197.55</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,060.46</td><td align="right" headers="perSecond Min" class='awrnc'>33.48</td><td align="right" headers="perSecond Max" class='awrncrb'>4,361.63</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>123</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.16</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>1,006,538</td><td align="right" class='awrc'>1,670.90</td><td align="right" class='awrc'>132.81</td><td align="right" headers="perSecond Average" class='awrclb'>835.45</td><td align="right" headers="perSecond StdDev" class='awrc'>1,150.04</td><td align="right" headers="perSecond Min" class='awrc'>22.25</td><td align="right" headers="perSecond Max" class='awrcrb'>1,648.65</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>561,990</td><td align="right" class='awrnc'>932.93</td><td align="right" class='awrnc'>74.15</td><td align="right" headers="perSecond Average" class='awrnclb'>466.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>623.45</td><td align="right" headers="perSecond Min" class='awrnc'>25.62</td><td align="right" headers="perSecond Max" class='awrncrb'>907.31</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>561,947</td><td align="right" class='awrnc'>932.86</td><td align="right" class='awrnc'>74.15</td><td align="right" headers="perSecond Average" class='awrnclb'>466.43</td><td align="right" headers="perSecond StdDev" class='awrnc'>623.40</td><td align="right" headers="perSecond Min" class='awrnc'>25.62</td><td align="right" headers="perSecond Max" class='awrncrb'>907.24</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>91,756</td><td align="right" class='awrc'>152.32</td><td align="right" class='awrc'>12.11</td><td align="right" headers="perSecond Average" class='awrclb'>76.16</td><td align="right" headers="perSecond StdDev" class='awrc'>81.87</td><td align="right" headers="perSecond Min" class='awrc'>18.27</td><td align="right" headers="perSecond Max" class='awrcrb'>134.05</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>316,236</td><td align="right" class='awrnc'>524.97</td><td align="right" class='awrnc'>41.73</td><td align="right" headers="perSecond Average" class='awrnclb'>262.48</td><td align="right" headers="perSecond StdDev" class='awrnc'>370.18</td><td align="right" headers="perSecond Min" class='awrnc'>0.73</td><td align="right" headers="perSecond Max" class='awrncrb'>524.24</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>244,925</td><td align="right" class='awrc'>406.59</td><td align="right" class='awrc'>32.32</td><td align="right" headers="perSecond Average" class='awrclb'>406.59</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>406.59</td><td align="right" headers="perSecond Max" class='awrcrb'>406.59</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>891</td><td align="right" class='awrnc'>1.48</td><td align="right" class='awrnc'>0.12</td><td align="right" headers="perSecond Average" class='awrnclb'>0.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.30</td><td align="right" headers="perSecond Min" class='awrnc'>0.53</td><td align="right" headers="perSecond Max" class='awrncrb'>0.95</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>34,069</td><td align="right" class='awrc'>56.56</td><td align="right" class='awrc'>4.50</td><td align="right" headers="perSecond Average" class='awrclb'>28.28</td><td align="right" headers="perSecond StdDev" class='awrc'>18.01</td><td align="right" headers="perSecond Min" class='awrc'>15.54</td><td align="right" headers="perSecond Max" class='awrcrb'>41.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>34,077</td><td align="right" class='awrnc'>56.57</td><td align="right" class='awrnc'>4.50</td><td align="right" headers="perSecond Average" class='awrnclb'>28.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>18.02</td><td align="right" headers="perSecond Min" class='awrnc'>15.54</td><td align="right" headers="perSecond Max" class='awrncrb'>41.03</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>420</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.32</td><td align="right" headers="perSecond Max" class='awrncrb'>0.38</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>54,303</td><td align="right" class='awrnc'>90.15</td><td align="right" class='awrnc'>7.16</td><td align="right" headers="perSecond Average" class='awrnclb'>45.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>58.63</td><td align="right" headers="perSecond Min" class='awrnc'>3.62</td><td align="right" headers="perSecond Max" class='awrncrb'>86.53</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>40,113,164</td><td align="right" class='awrc'>66,589.91</td><td align="right" class='awrc'>5,292.67</td><td align="right" headers="perSecond Average" class='awrclb'>33,294.96</td><td align="right" headers="perSecond StdDev" class='awrc'>47,082.87</td><td align="right" headers="perSecond Min" class='awrc'>2.34</td><td align="right" headers="perSecond Max" class='awrcrb'>66,587.58</td></tr>
<tr><td scope="row" class='awrnc'>file io wait time</td><td align="right" class='awrnc'>6,095,209,076</td><td align="right" class='awrnc'>10,118,360.25</td><td align="right" class='awrnc'>804,223.39</td><td align="right" headers="perSecond Average" class='awrnclb'>5,059,180.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>7,137,750.55</td><td align="right" headers="perSecond Min" class='awrnc'>12,028.31</td><td align="right" headers="perSecond Max" class='awrncrb'>10,106,331.94</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>2,350,558</td><td align="right" class='awrc'>3,902.05</td><td align="right" class='awrc'>310.14</td><td align="right" headers="perSecond Average" class='awrclb'>1,951.02</td><td align="right" headers="perSecond StdDev" class='awrc'>2,754.54</td><td align="right" headers="perSecond Min" class='awrc'>3.27</td><td align="right" headers="perSecond Max" class='awrcrb'>3,898.78</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>2,302,111</td><td align="right" class='awrnc'>3,821.62</td><td align="right" class='awrnc'>303.75</td><td align="right" headers="perSecond Average" class='awrnclb'>1,910.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,680.80</td><td align="right" headers="perSecond Min" class='awrnc'>15.20</td><td align="right" headers="perSecond Max" class='awrncrb'>3,806.43</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>67,619</td><td align="right" class='awrc'>112.25</td><td align="right" class='awrc'>8.92</td><td align="right" headers="perSecond Average" class='awrclb'>56.13</td><td align="right" headers="perSecond StdDev" class='awrc'>75.56</td><td align="right" headers="perSecond Min" class='awrc'>2.70</td><td align="right" headers="perSecond Max" class='awrcrb'>109.55</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>71</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks shrunk</td><td align="right" class='awrnc'>3,186</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>0.42</td><td align="right" headers="perSecond Average" class='awrnclb'>2.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.72</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>5.28</td></tr>
<tr><td scope="row" class='awrc'>gc cr block build time</td><td align="right" class='awrc'>959</td><td align="right" class='awrc'>1.59</td><td align="right" class='awrc'>0.13</td><td align="right" headers="perSecond Average" class='awrclb'>0.80</td><td align="right" headers="perSecond StdDev" class='awrc'>1.12</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>1.59</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block flush time</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>2,712</td><td align="right" class='awrc'>4.50</td><td align="right" class='awrc'>0.36</td><td align="right" headers="perSecond Average" class='awrclb'>2.25</td><td align="right" headers="perSecond StdDev" class='awrc'>3.01</td><td align="right" headers="perSecond Min" class='awrc'>0.12</td><td align="right" headers="perSecond Max" class='awrcrb'>4.38</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks built</td><td align="right" class='awrnc'>11,498</td><td align="right" class='awrnc'>19.09</td><td align="right" class='awrnc'>1.52</td><td align="right" headers="perSecond Average" class='awrnclb'>9.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>13.32</td><td align="right" headers="perSecond Min" class='awrnc'>0.13</td><td align="right" headers="perSecond Max" class='awrncrb'>18.96</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks flushed</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>12,893</td><td align="right" class='awrnc'>21.40</td><td align="right" class='awrnc'>1.70</td><td align="right" headers="perSecond Average" class='awrnclb'>10.70</td><td align="right" headers="perSecond StdDev" class='awrnc'>11.73</td><td align="right" headers="perSecond Min" class='awrnc'>2.41</td><td align="right" headers="perSecond Max" class='awrncrb'>19.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks served</td><td align="right" class='awrc'>12,911</td><td align="right" class='awrc'>21.43</td><td align="right" class='awrc'>1.70</td><td align="right" headers="perSecond Average" class='awrclb'>10.72</td><td align="right" headers="perSecond StdDev" class='awrc'>11.76</td><td align="right" headers="perSecond Min" class='awrc'>2.40</td><td align="right" headers="perSecond Max" class='awrcrb'>19.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grant time</td><td align="right" class='awrnc'>150,936</td><td align="right" class='awrnc'>250.56</td><td align="right" class='awrnc'>19.92</td><td align="right" headers="perSecond Average" class='awrnclb'>125.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>177.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>250.56</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>1,810,197</td><td align="right" class='awrc'>3,005.02</td><td align="right" class='awrc'>238.84</td><td align="right" headers="perSecond Average" class='awrclb'>1,502.51</td><td align="right" headers="perSecond StdDev" class='awrc'>2,124.85</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>3,005.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>5,051</td><td align="right" class='awrc'>8.38</td><td align="right" class='awrc'>0.67</td><td align="right" headers="perSecond Average" class='awrclb'>4.19</td><td align="right" headers="perSecond StdDev" class='awrc'>5.83</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>8.32</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>55,271</td><td align="right" class='awrnc'>91.75</td><td align="right" class='awrnc'>7.29</td><td align="right" headers="perSecond Average" class='awrnclb'>45.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>64.24</td><td align="right" headers="perSecond Min" class='awrnc'>0.45</td><td align="right" headers="perSecond Max" class='awrncrb'>91.30</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>55,293</td><td align="right" class='awrc'>91.79</td><td align="right" class='awrc'>7.30</td><td align="right" headers="perSecond Average" class='awrclb'>45.90</td><td align="right" headers="perSecond StdDev" class='awrc'>64.31</td><td align="right" headers="perSecond Min" class='awrc'>0.42</td><td align="right" headers="perSecond Max" class='awrcrb'>91.37</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>135</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.11</td><td align="right" headers="perSecond Max" class='awrncrb'>0.11</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes saved</td><td align="right" class='awrc'>292,664</td><td align="right" class='awrc'>485.84</td><td align="right" class='awrc'>38.62</td><td align="right" headers="perSecond Average" class='awrclb'>242.92</td><td align="right" headers="perSecond StdDev" class='awrc'>322.03</td><td align="right" headers="perSecond Min" class='awrc'>15.21</td><td align="right" headers="perSecond Max" class='awrcrb'>470.63</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes sent</td><td align="right" class='awrnc'>252,968</td><td align="right" class='awrnc'>419.94</td><td align="right" class='awrnc'>33.38</td><td align="right" headers="perSecond Average" class='awrnclb'>209.97</td><td align="right" headers="perSecond StdDev" class='awrnc'>286.55</td><td align="right" headers="perSecond Min" class='awrnc'>7.35</td><td align="right" headers="perSecond Max" class='awrncrb'>412.59</td></tr>
<tr><td scope="row" class='awrc'>gc local grants</td><td align="right" class='awrc'>822,893</td><td align="right" class='awrc'>1,366.04</td><td align="right" class='awrc'>108.58</td><td align="right" headers="perSecond Average" class='awrclb'>683.02</td><td align="right" headers="perSecond StdDev" class='awrc'>964.82</td><td align="right" headers="perSecond Min" class='awrc'>0.79</td><td align="right" headers="perSecond Max" class='awrcrb'>1,365.25</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>601</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>0.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.64</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.95</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>1,504,860</td><td align="right" class='awrnc'>2,498.14</td><td align="right" class='awrnc'>198.56</td><td align="right" headers="perSecond Average" class='awrnclb'>1,249.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,765.74</td><td align="right" headers="perSecond Min" class='awrnc'>0.51</td><td align="right" headers="perSecond Max" class='awrncrb'>2,497.64</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>297,629</td><td align="right" class='awrc'>494.08</td><td align="right" class='awrc'>39.27</td><td align="right" headers="perSecond Average" class='awrclb'>247.04</td><td align="right" headers="perSecond StdDev" class='awrc'>348.92</td><td align="right" headers="perSecond Min" class='awrc'>0.32</td><td align="right" headers="perSecond Max" class='awrcrb'>493.76</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>297,676</td><td align="right" class='awrnc'>494.16</td><td align="right" class='awrnc'>39.28</td><td align="right" headers="perSecond Average" class='awrnclb'>247.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>348.98</td><td align="right" headers="perSecond Min" class='awrnc'>0.32</td><td align="right" headers="perSecond Max" class='awrncrb'>493.85</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>20,305</td><td align="right" class='awrc'>33.71</td><td align="right" class='awrc'>2.68</td><td align="right" headers="perSecond Average" class='awrclb'>16.85</td><td align="right" headers="perSecond StdDev" class='awrc'>23.24</td><td align="right" headers="perSecond Min" class='awrc'>0.42</td><td align="right" headers="perSecond Max" class='awrcrb'>33.29</td></tr>
<tr><td scope="row" class='awrnc'>gcs data block access records</td><td align="right" class='awrnc'>2,345,624</td><td align="right" class='awrnc'>3,893.86</td><td align="right" class='awrnc'>309.49</td><td align="right" headers="perSecond Average" class='awrnclb'>1,946.93</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,652.54</td><td align="right" headers="perSecond Min" class='awrnc'>71.30</td><td align="right" headers="perSecond Max" class='awrncrb'>3,822.56</td></tr>
<tr><td scope="row" class='awrc'>gcs messages sent</td><td align="right" class='awrc'>4,388,757</td><td align="right" class='awrc'>7,285.58</td><td align="right" class='awrc'>579.07</td><td align="right" headers="perSecond Average" class='awrclb'>3,642.79</td><td align="right" headers="perSecond StdDev" class='awrc'>2,267.29</td><td align="right" headers="perSecond Min" class='awrc'>2,039.57</td><td align="right" headers="perSecond Max" class='awrcrb'>5,246.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs stats management (SCM) process posts</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ges messages sent</td><td align="right" class='awrc'>326,274</td><td align="right" class='awrc'>541.63</td><td align="right" class='awrc'>43.05</td><td align="right" headers="perSecond Average" class='awrclb'>270.82</td><td align="right" headers="perSecond StdDev" class='awrc'>259.19</td><td align="right" headers="perSecond Min" class='awrc'>87.54</td><td align="right" headers="perSecond Max" class='awrcrb'>454.09</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue get time</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>global enqueue gets sync</td><td align="right" class='awrc'>29,089</td><td align="right" class='awrc'>48.29</td><td align="right" class='awrc'>3.84</td><td align="right" headers="perSecond Average" class='awrclb'>24.14</td><td align="right" headers="perSecond StdDev" class='awrc'>10.85</td><td align="right" headers="perSecond Min" class='awrc'>16.47</td><td align="right" headers="perSecond Max" class='awrcrb'>31.81</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue releases</td><td align="right" class='awrnc'>27,768</td><td align="right" class='awrnc'>46.10</td><td align="right" class='awrnc'>3.66</td><td align="right" headers="perSecond Average" class='awrnclb'>23.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.71</td><td align="right" headers="perSecond Min" class='awrnc'>15.48</td><td align="right" headers="perSecond Max" class='awrncrb'>30.62</td></tr>
<tr><td scope="row" class='awrc'>heap block compress</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>hot buffers moved to head of LRU</td><td align="right" class='awrnc'>535,539</td><td align="right" class='awrnc'>889.02</td><td align="right" class='awrnc'>70.66</td><td align="right" headers="perSecond Average" class='awrnclb'>444.51</td><td align="right" headers="perSecond StdDev" class='awrnc'>628.60</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>889.00</td></tr>
<tr><td scope="row" class='awrc'>immediate (CR) block cleanout applications</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>450</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>0.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.36</td><td align="right" headers="perSecond Max" class='awrncrb'>0.39</td></tr>
<tr><td scope="row" class='awrc'>in call idle wait time</td><td align="right" class='awrc'>9,977,691</td><td align="right" class='awrc'>16,563.56</td><td align="right" class='awrc'>1,316.49</td><td align="right" headers="perSecond Average" class='awrclb'>8,281.78</td><td align="right" headers="perSecond StdDev" class='awrc'>78.20</td><td align="right" headers="perSecond Min" class='awrc'>8,226.49</td><td align="right" headers="perSecond Max" class='awrcrb'>8,337.08</td></tr>
<tr><td scope="row" class='awrnc'>index crx upgrade (positioned)</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.10</td><td align="right" headers="perSecond Max" class='awrncrb'>0.10</td></tr>
<tr><td scope="row" class='awrc'>index fast full scans (full)</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index fetch by key</td><td align="right" class='awrnc'>266,414</td><td align="right" class='awrnc'>442.27</td><td align="right" class='awrnc'>35.15</td><td align="right" headers="perSecond Average" class='awrnclb'>221.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>309.27</td><td align="right" headers="perSecond Min" class='awrnc'>2.45</td><td align="right" headers="perSecond Max" class='awrncrb'>439.82</td></tr>
<tr><td scope="row" class='awrc'>index range scans</td><td align="right" class='awrc'>314,014</td><td align="right" class='awrc'>521.28</td><td align="right" class='awrc'>41.43</td><td align="right" headers="perSecond Average" class='awrclb'>260.64</td><td align="right" headers="perSecond StdDev" class='awrc'>250.02</td><td align="right" headers="perSecond Min" class='awrc'>83.85</td><td align="right" headers="perSecond Max" class='awrcrb'>437.43</td></tr>
<tr><td scope="row" class='awrnc'>leaf node 90-10 splits</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>leaf node splits</td><td align="right" class='awrc'>157</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>lob reads</td><td align="right" class='awrnc'>99</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.15</td></tr>
<tr><td scope="row" class='awrc'>lob writes</td><td align="right" class='awrc'>1,286</td><td align="right" class='awrc'>2.13</td><td align="right" class='awrc'>0.17</td><td align="right" headers="perSecond Average" class='awrclb'>1.07</td><td align="right" headers="perSecond StdDev" class='awrc'>1.46</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>2.10</td></tr>
<tr><td scope="row" class='awrnc'>lob writes unaligned</td><td align="right" class='awrnc'>1,286</td><td align="right" class='awrnc'>2.13</td><td align="right" class='awrnc'>0.17</td><td align="right" headers="perSecond Average" class='awrnclb'>1.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.46</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>2.10</td></tr>
<tr><td scope="row" class='awrc'>logical read bytes from cache</td><td align="right" class='awrc'>74,776,395,776</td><td align="right" class='awrc'>124,133,434.94</td><td align="right" class='awrc'>9,866,261.48</td><td align="right" headers="perSecond Average" class='awrclb'>62,066,717.47</td><td align="right" headers="perSecond StdDev" class='awrc'>22,588,061.54</td><td align="right" headers="perSecond Min" class='awrc'>46,094,545.98</td><td align="right" headers="perSecond Max" class='awrcrb'>78,038,888.96</td></tr>
<tr><td scope="row" class='awrnc'>logons cumulative</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>max cf enq hold time</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>39,112</td><td align="right" class='awrnc'>64.93</td><td align="right" class='awrnc'>5.16</td><td align="right" headers="perSecond Average" class='awrnclb'>32.46</td><td align="right" headers="perSecond StdDev" class='awrnc'>43.55</td><td align="right" headers="perSecond Min" class='awrnc'>1.67</td><td align="right" headers="perSecond Max" class='awrncrb'>63.26</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>39,112</td><td align="right" class='awrc'>64.93</td><td align="right" class='awrc'>5.16</td><td align="right" headers="perSecond Average" class='awrclb'>32.46</td><td align="right" headers="perSecond StdDev" class='awrc'>43.55</td><td align="right" headers="perSecond Min" class='awrc'>1.67</td><td align="right" headers="perSecond Max" class='awrcrb'>63.26</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>2,745,580</td><td align="right" class='awrnc'>4,557.80</td><td align="right" class='awrnc'>362.26</td><td align="right" headers="perSecond Average" class='awrnclb'>2,278.90</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,198.48</td><td align="right" headers="perSecond Min" class='awrnc'>17.23</td><td align="right" headers="perSecond Max" class='awrncrb'>4,540.57</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>1,375,452</td><td align="right" class='awrc'>2,283.32</td><td align="right" class='awrc'>181.48</td><td align="right" headers="perSecond Average" class='awrclb'>1,141.66</td><td align="right" headers="perSecond StdDev" class='awrc'>1,485.32</td><td align="right" headers="perSecond Min" class='awrc'>91.38</td><td align="right" headers="perSecond Max" class='awrcrb'>2,191.94</td></tr>
<tr><td scope="row" class='awrnc'>non-idle wait time</td><td align="right" class='awrnc'>114,484</td><td align="right" class='awrnc'>190.05</td><td align="right" class='awrnc'>15.11</td><td align="right" headers="perSecond Average" class='awrnclb'>95.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>131.40</td><td align="right" headers="perSecond Min" class='awrnc'>2.11</td><td align="right" headers="perSecond Max" class='awrncrb'>187.94</td></tr>
<tr><td scope="row" class='awrc'>opened cursors cumulative</td><td align="right" class='awrc'>61,491</td><td align="right" class='awrc'>102.08</td><td align="right" class='awrc'>8.11</td><td align="right" headers="perSecond Average" class='awrclb'>51.04</td><td align="right" headers="perSecond StdDev" class='awrc'>67.32</td><td align="right" headers="perSecond Min" class='awrc'>3.44</td><td align="right" headers="perSecond Max" class='awrcrb'>98.64</td></tr>
<tr><td scope="row" class='awrnc'>parse count (hard)</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>2,877</td><td align="right" class='awrc'>4.78</td><td align="right" class='awrc'>0.38</td><td align="right" headers="perSecond Average" class='awrclb'>2.39</td><td align="right" headers="perSecond StdDev" class='awrc'>0.32</td><td align="right" headers="perSecond Min" class='awrc'>2.16</td><td align="right" headers="perSecond Max" class='awrcrb'>2.61</td></tr>
<tr><td scope="row" class='awrnc'>parse time cpu</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>parse time elapsed</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical read IO requests</td><td align="right" class='awrnc'>2,206,397</td><td align="right" class='awrnc'>3,662.73</td><td align="right" class='awrnc'>291.12</td><td align="right" headers="perSecond Average" class='awrnclb'>1,831.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,589.38</td><td align="right" headers="perSecond Min" class='awrnc'>0.40</td><td align="right" headers="perSecond Max" class='awrncrb'>3,662.34</td></tr>
<tr><td scope="row" class='awrc'>physical read bytes</td><td align="right" class='awrc'>18,075,148,288</td><td align="right" class='awrc'>30,005,674.57</td><td align="right" class='awrc'>2,384,898.84</td><td align="right" headers="perSecond Average" class='awrclb'>15,002,837.28</td><td align="right" headers="perSecond StdDev" class='awrc'>21,212,504.05</td><td align="right" headers="perSecond Min" class='awrc'>3,331.82</td><td align="right" headers="perSecond Max" class='awrcrb'>30,002,342.74</td></tr>
<tr><td scope="row" class='awrnc'>physical read total IO requests</td><td align="right" class='awrnc'>2,212,876</td><td align="right" class='awrnc'>3,673.49</td><td align="right" class='awrnc'>291.97</td><td align="right" headers="perSecond Average" class='awrnclb'>1,836.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,587.81</td><td align="right" headers="perSecond Min" class='awrnc'>6.89</td><td align="right" headers="perSecond Max" class='awrncrb'>3,666.60</td></tr>
<tr><td scope="row" class='awrc'>physical read total bytes</td><td align="right" class='awrc'>18,907,655,680</td><td align="right" class='awrc'>31,387,692.66</td><td align="right" class='awrc'>2,494,742.80</td><td align="right" headers="perSecond Average" class='awrclb'>15,693,846.33</td><td align="right" headers="perSecond StdDev" class='awrc'>20,335,199.62</td><td align="right" headers="perSecond Min" class='awrc'>1,314,688.78</td><td align="right" headers="perSecond Max" class='awrcrb'>30,073,003.88</td></tr>
<tr><td scope="row" class='awrnc'>physical read total multi block requests</td><td align="right" class='awrnc'>721</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>0.10</td><td align="right" headers="perSecond Average" class='awrnclb'>1.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1.20</td><td align="right" headers="perSecond Max" class='awrncrb'>1.20</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>2,206,439</td><td align="right" class='awrc'>3,662.80</td><td align="right" class='awrc'>291.13</td><td align="right" headers="perSecond Average" class='awrclb'>1,831.40</td><td align="right" headers="perSecond StdDev" class='awrc'>2,589.42</td><td align="right" headers="perSecond Min" class='awrc'>0.41</td><td align="right" headers="perSecond Max" class='awrcrb'>3,662.40</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache</td><td align="right" class='awrnc'>2,206,439</td><td align="right" class='awrnc'>3,662.80</td><td align="right" class='awrnc'>291.13</td><td align="right" headers="perSecond Average" class='awrnclb'>1,831.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,589.42</td><td align="right" headers="perSecond Min" class='awrnc'>0.41</td><td align="right" headers="perSecond Max" class='awrncrb'>3,662.40</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache prefetch</td><td align="right" class='awrc'>1,771,268</td><td align="right" class='awrc'>2,940.40</td><td align="right" class='awrc'>233.71</td><td align="right" headers="perSecond Average" class='awrclb'>1,470.20</td><td align="right" headers="perSecond StdDev" class='awrc'>2,079.16</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>2,940.38</td></tr>
<tr><td scope="row" class='awrnc'>physical write IO requests</td><td align="right" class='awrnc'>303,888</td><td align="right" class='awrnc'>504.47</td><td align="right" class='awrnc'>40.10</td><td align="right" headers="perSecond Average" class='awrnclb'>252.23</td><td align="right" headers="perSecond StdDev" class='awrnc'>354.89</td><td align="right" headers="perSecond Min" class='awrnc'>1.29</td><td align="right" headers="perSecond Max" class='awrncrb'>503.18</td></tr>
<tr><td scope="row" class='awrc'>physical write bytes</td><td align="right" class='awrc'>2,915,123,200</td><td align="right" class='awrc'>4,839,254.39</td><td align="right" class='awrc'>384,631.64</td><td align="right" headers="perSecond Average" class='awrclb'>2,419,627.19</td><td align="right" headers="perSecond StdDev" class='awrc'>3,400,867.94</td><td align="right" headers="perSecond Min" class='awrc'>14,850.41</td><td align="right" headers="perSecond Max" class='awrcrb'>4,824,403.98</td></tr>
<tr><td scope="row" class='awrnc'>physical write total IO requests</td><td align="right" class='awrnc'>324,224</td><td align="right" class='awrnc'>538.23</td><td align="right" class='awrnc'>42.78</td><td align="right" headers="perSecond Average" class='awrnclb'>269.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>376.58</td><td align="right" headers="perSecond Min" class='awrnc'>2.83</td><td align="right" headers="perSecond Max" class='awrncrb'>535.40</td></tr>
<tr><td scope="row" class='awrc'>physical write total bytes</td><td align="right" class='awrc'>3,773,096,960</td><td align="right" class='awrc'>6,263,535.18</td><td align="right" class='awrc'>497,835.73</td><td align="right" headers="perSecond Average" class='awrclb'>3,131,767.59</td><td align="right" headers="perSecond StdDev" class='awrc'>4,368,178.13</td><td align="right" headers="perSecond Min" class='awrc'>42,999.21</td><td align="right" headers="perSecond Max" class='awrcrb'>6,220,535.96</td></tr>
<tr><td scope="row" class='awrnc'>physical write total multi block requests</td><td align="right" class='awrnc'>1,152</td><td align="right" class='awrnc'>1.91</td><td align="right" class='awrnc'>0.15</td><td align="right" headers="perSecond Average" class='awrnclb'>0.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.29</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>1.87</td></tr>
<tr><td scope="row" class='awrc'>physical writes</td><td align="right" class='awrc'>355,850</td><td align="right" class='awrc'>590.73</td><td align="right" class='awrc'>46.95</td><td align="right" headers="perSecond Average" class='awrclb'>295.36</td><td align="right" headers="perSecond StdDev" class='awrc'>415.15</td><td align="right" headers="perSecond Min" class='awrc'>1.81</td><td align="right" headers="perSecond Max" class='awrcrb'>588.92</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct (lob)</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct temporary tablespace</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>physical writes from cache</td><td align="right" class='awrc'>355,798</td><td align="right" class='awrc'>590.64</td><td align="right" class='awrc'>46.95</td><td align="right" headers="perSecond Average" class='awrclb'>295.32</td><td align="right" headers="perSecond StdDev" class='awrc'>415.09</td><td align="right" headers="perSecond Min" class='awrc'>1.81</td><td align="right" headers="perSecond Max" class='awrcrb'>588.84</td></tr>
<tr><td scope="row" class='awrnc'>physical writes non checkpoint</td><td align="right" class='awrnc'>352,209</td><td align="right" class='awrnc'>584.69</td><td align="right" class='awrnc'>46.47</td><td align="right" headers="perSecond Average" class='awrnclb'>292.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>412.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.93</td><td align="right" headers="perSecond Max" class='awrncrb'>583.76</td></tr>
<tr><td scope="row" class='awrc'>pinned buffers inspected</td><td align="right" class='awrc'>656</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>0.54</td><td align="right" headers="perSecond StdDev" class='awrc'>0.26</td><td align="right" headers="perSecond Min" class='awrc'>0.36</td><td align="right" headers="perSecond Max" class='awrcrb'>0.73</td></tr>
<tr><td scope="row" class='awrnc'>pinned cursors current</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>1,203</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>0.16</td><td align="right" headers="perSecond Average" class='awrclb'>1.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>1.00</td><td align="right" headers="perSecond Max" class='awrcrb'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>recursive calls</td><td align="right" class='awrnc'>95,034</td><td align="right" class='awrnc'>157.76</td><td align="right" class='awrnc'>12.54</td><td align="right" headers="perSecond Average" class='awrnclb'>78.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>64.71</td><td align="right" headers="perSecond Min" class='awrnc'>33.12</td><td align="right" headers="perSecond Max" class='awrncrb'>124.64</td></tr>
<tr><td scope="row" class='awrc'>recursive cpu usage</td><td align="right" class='awrc'>40,901</td><td align="right" class='awrc'>67.90</td><td align="right" class='awrc'>5.40</td><td align="right" headers="perSecond Average" class='awrclb'>33.95</td><td align="right" headers="perSecond StdDev" class='awrc'>10.68</td><td align="right" headers="perSecond Min" class='awrc'>26.40</td><td align="right" headers="perSecond Max" class='awrcrb'>41.50</td></tr>
<tr><td scope="row" class='awrnc'>redo KB read</td><td align="right" class='awrnc'>423,871</td><td align="right" class='awrnc'>703.65</td><td align="right" class='awrnc'>55.93</td><td align="right" headers="perSecond Average" class='awrnclb'>703.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>703.65</td><td align="right" headers="perSecond Max" class='awrncrb'>703.65</td></tr>
<tr><td scope="row" class='awrc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrc'>316,692</td><td align="right" class='awrc'>525.73</td><td align="right" class='awrc'>41.79</td><td align="right" headers="perSecond Average" class='awrclb'>262.86</td><td align="right" headers="perSecond StdDev" class='awrc'>361.92</td><td align="right" headers="perSecond Min" class='awrc'>6.95</td><td align="right" headers="perSecond Max" class='awrcrb'>518.78</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written</td><td align="right" class='awrnc'>820,841</td><td align="right" class='awrnc'>1,362.64</td><td align="right" class='awrnc'>108.30</td><td align="right" headers="perSecond Average" class='awrnclb'>681.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>943.59</td><td align="right" headers="perSecond Min" class='awrnc'>14.10</td><td align="right" headers="perSecond Max" class='awrncrb'>1,348.54</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 0)</td><td align="right" class='awrc'>7,649</td><td align="right" class='awrc'>12.70</td><td align="right" class='awrc'>1.01</td><td align="right" headers="perSecond Average" class='awrclb'>12.70</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>12.70</td><td align="right" headers="perSecond Max" class='awrcrb'>12.70</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 1)</td><td align="right" class='awrnc'>846</td><td align="right" class='awrnc'>1.40</td><td align="right" class='awrnc'>0.11</td><td align="right" headers="perSecond Average" class='awrnclb'>1.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1.40</td><td align="right" headers="perSecond Max" class='awrncrb'>1.40</td></tr>
<tr><td scope="row" class='awrc'>redo entries</td><td align="right" class='awrc'>522,092</td><td align="right" class='awrc'>866.70</td><td align="right" class='awrc'>68.89</td><td align="right" headers="perSecond Average" class='awrclb'>433.35</td><td align="right" headers="perSecond StdDev" class='awrc'>596.02</td><td align="right" headers="perSecond Min" class='awrc'>11.90</td><td align="right" headers="perSecond Max" class='awrcrb'>854.80</td></tr>
<tr><td scope="row" class='awrnc'>redo size</td><td align="right" class='awrnc'>404,664,548</td><td align="right" class='awrnc'>671,764.00</td><td align="right" class='awrnc'>53,392.87</td><td align="right" headers="perSecond Average" class='awrnclb'>335,882.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>465,252.28</td><td align="right" headers="perSecond Min" class='awrnc'>6,898.96</td><td align="right" headers="perSecond Max" class='awrncrb'>664,865.05</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>170</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>15,447</td><td align="right" class='awrc'>25.64</td><td align="right" class='awrc'>2.04</td><td align="right" headers="perSecond Average" class='awrclb'>12.82</td><td align="right" headers="perSecond StdDev" class='awrc'>18.10</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>25.62</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>282</td><td align="right" class='awrnc'>0.47</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>0.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.47</td><td align="right" headers="perSecond Max" class='awrncrb'>0.47</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>2,294,992</td><td align="right" class='awrc'>3,809.81</td><td align="right" class='awrc'>302.81</td><td align="right" headers="perSecond Average" class='awrclb'>1,904.90</td><td align="right" headers="perSecond StdDev" class='awrc'>2,560.71</td><td align="right" headers="perSecond Min" class='awrc'>94.21</td><td align="right" headers="perSecond Max" class='awrcrb'>3,715.60</td></tr>
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>9,595</td><td align="right" class='awrnc'>15.93</td><td align="right" class='awrnc'>1.27</td><td align="right" headers="perSecond Average" class='awrnclb'>7.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.77</td><td align="right" headers="perSecond Min" class='awrnc'>0.35</td><td align="right" headers="perSecond Max" class='awrncrb'>15.58</td></tr>
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>59,804,808</td><td align="right" class='awrc'>99,279.08</td><td align="right" class='awrc'>7,890.86</td><td align="right" headers="perSecond Average" class='awrclb'>49,639.54</td><td align="right" headers="perSecond StdDev" class='awrc'>66,201.08</td><td align="right" headers="perSecond Min" class='awrc'>2,828.31</td><td align="right" headers="perSecond Max" class='awrcrb'>96,450.78</td></tr>
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>786,321</td><td align="right" class='awrnc'>1,305.33</td><td align="right" class='awrnc'>103.75</td><td align="right" headers="perSecond Average" class='awrnclb'>652.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>748.88</td><td align="right" headers="perSecond Min" class='awrnc'>123.13</td><td align="right" headers="perSecond Max" class='awrncrb'>1,182.21</td></tr>
<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>891,130</td><td align="right" class='awrnc'>1,479.32</td><td align="right" class='awrnc'>117.58</td><td align="right" headers="perSecond Average" class='awrnclb'>739.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>866.26</td><td align="right" headers="perSecond Min" class='awrnc'>127.12</td><td align="right" headers="perSecond Max" class='awrncrb'>1,352.20</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>342</td><td align="right" class='awrc'>0.57</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>0.28</td><td align="right" headers="perSecond StdDev" class='awrc'>0.08</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.34</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>254</td><td align="right" class='awrnc'>0.42</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.25</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.39</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>480</td><td align="right" class='awrc'>0.80</td><td align="right" class='awrc'>0.06</td><td align="right" headers="perSecond Average" class='awrclb'>0.40</td><td align="right" headers="perSecond StdDev" class='awrc'>0.50</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.76</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>731</td><td align="right" class='awrnc'>1.21</td><td align="right" class='awrnc'>0.10</td><td align="right" headers="perSecond Average" class='awrnclb'>0.61</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.84</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>1.20</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>6,085</td><td align="right" class='awrc'>10.10</td><td align="right" class='awrc'>0.80</td><td align="right" headers="perSecond Average" class='awrclb'>5.05</td><td align="right" headers="perSecond StdDev" class='awrc'>7.12</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>10.08</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>5,986</td><td align="right" class='awrc'>9.94</td><td align="right" class='awrc'>0.79</td><td align="right" headers="perSecond Average" class='awrclb'>4.97</td><td align="right" headers="perSecond StdDev" class='awrc'>6.63</td><td align="right" headers="perSecond Min" class='awrc'>0.28</td><td align="right" headers="perSecond Max" class='awrcrb'>9.65</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>59,861,558</td><td align="right" class='awrnc'>99,373.29</td><td align="right" class='awrnc'>7,898.35</td><td align="right" headers="perSecond Average" class='awrnclb'>49,686.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>66,250.02</td><td align="right" headers="perSecond Min" class='awrnc'>2,840.81</td><td align="right" headers="perSecond Max" class='awrncrb'>96,532.48</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>60,154,920</td><td align="right" class='awrc'>99,860.29</td><td align="right" class='awrc'>7,937.05</td><td align="right" headers="perSecond Average" class='awrclb'>49,930.14</td><td align="right" headers="perSecond StdDev" class='awrc'>66,445.47</td><td align="right" headers="perSecond Min" class='awrc'>2,946.10</td><td align="right" headers="perSecond Max" class='awrcrb'>96,914.18</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>57,663</td><td align="right" class='awrnc'>95.72</td><td align="right" class='awrnc'>7.61</td><td align="right" headers="perSecond Average" class='awrnclb'>95.72</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>95.72</td><td align="right" headers="perSecond Max" class='awrncrb'>95.72</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>212</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.35</td><td align="right" headers="perSecond Max" class='awrcrb'>0.35</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>7,911</td><td align="right" class='awrnc'>13.13</td><td align="right" class='awrnc'>1.04</td><td align="right" headers="perSecond Average" class='awrnclb'>6.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.79</td><td align="right" headers="perSecond Min" class='awrnc'>0.35</td><td align="right" headers="perSecond Max" class='awrncrb'>12.78</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.27</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.27</td><td align="right" headers="perSecond Max" class='awrcrb'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>7,911</td><td align="right" class='awrc'>13.13</td><td align="right" class='awrc'>1.04</td><td align="right" headers="perSecond Average" class='awrclb'>6.57</td><td align="right" headers="perSecond StdDev" class='awrc'>8.79</td><td align="right" headers="perSecond Min" class='awrc'>0.35</td><td align="right" headers="perSecond Max" class='awrcrb'>12.78</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>212</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.35</td><td align="right" headers="perSecond Max" class='awrncrb'>0.35</td></tr>
<tr><td scope="row" class='awrc'>rollback changes - undo records applied</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>rollbacks only - consistent read gets</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>264,429</td><td align="right" class='awrc'>438.97</td><td align="right" class='awrc'>34.89</td><td align="right" headers="perSecond Average" class='awrclb'>219.49</td><td align="right" headers="perSecond StdDev" class='awrc'>308.86</td><td align="right" headers="perSecond Min" class='awrc'>1.09</td><td align="right" headers="perSecond Max" class='awrcrb'>437.88</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>73,728</td><td align="right" class='awrnc'>122.39</td><td align="right" class='awrnc'>9.73</td><td align="right" headers="perSecond Average" class='awrnclb'>61.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>28.85</td><td align="right" headers="perSecond Min" class='awrnc'>40.80</td><td align="right" headers="perSecond Max" class='awrncrb'>81.59</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>66,717</td><td align="right" class='awrnc'>110.75</td><td align="right" class='awrnc'>8.80</td><td align="right" headers="perSecond Average" class='awrnclb'>55.38</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.08</td><td align="right" headers="perSecond Min" class='awrnc'>51.08</td><td align="right" headers="perSecond Max" class='awrncrb'>59.67</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>73,728</td><td align="right" class='awrc'>122.39</td><td align="right" class='awrc'>9.73</td><td align="right" headers="perSecond Average" class='awrclb'>61.20</td><td align="right" headers="perSecond StdDev" class='awrc'>28.85</td><td align="right" headers="perSecond Min" class='awrc'>40.80</td><td align="right" headers="perSecond Max" class='awrcrb'>81.59</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>segment chunks allocation from dispenser</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser allocations</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc ops</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>0.17</td><td align="right" headers="perSecond StdDev" class='awrc'>0.13</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>0.26</td></tr>
<tr><td scope="row" class='awrnc'>session connect time</td><td align="right" class='awrnc'>603</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>1.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1.00</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>60,429</td><td align="right" class='awrc'>100.32</td><td align="right" class='awrc'>7.97</td><td align="right" headers="perSecond Average" class='awrclb'>50.16</td><td align="right" headers="perSecond StdDev" class='awrc'>67.09</td><td align="right" headers="perSecond Min" class='awrc'>2.72</td><td align="right" headers="perSecond Max" class='awrcrb'>97.60</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>9,128,021</td><td align="right" class='awrnc'>15,153.08</td><td align="right" class='awrnc'>1,204.38</td><td align="right" headers="perSecond Average" class='awrnclb'>7,576.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,757.28</td><td align="right" headers="perSecond Min" class='awrnc'>5,626.85</td><td align="right" headers="perSecond Max" class='awrncrb'>9,526.23</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>432,863</td><td align="right" class='awrc'>718.57</td><td align="right" class='awrc'>57.11</td><td align="right" headers="perSecond Average" class='awrclb'>359.29</td><td align="right" headers="perSecond StdDev" class='awrc'>488.00</td><td align="right" headers="perSecond Min" class='awrc'>14.22</td><td align="right" headers="perSecond Max" class='awrcrb'>704.35</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>461</td><td align="right" class='awrnc'>0.77</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>0.38</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.28</td><td align="right" headers="perSecond Max" class='awrncrb'>0.48</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>69,309</td><td align="right" class='awrc'>115.06</td><td align="right" class='awrc'>9.14</td><td align="right" headers="perSecond Average" class='awrclb'>57.53</td><td align="right" headers="perSecond StdDev" class='awrc'>24.06</td><td align="right" headers="perSecond Min" class='awrc'>40.52</td><td align="right" headers="perSecond Max" class='awrcrb'>74.54</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>1,430,130</td><td align="right" class='awrnc'>2,374.09</td><td align="right" class='awrnc'>188.70</td><td align="right" headers="perSecond Average" class='awrnclb'>2,374.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>2,374.09</td><td align="right" headers="perSecond Max" class='awrncrb'>2,374.09</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>104</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>4,801,613</td><td align="right" class='awrc'>7,970.93</td><td align="right" class='awrc'>633.54</td><td align="right" headers="perSecond Average" class='awrclb'>3,985.46</td><td align="right" headers="perSecond StdDev" class='awrc'>5,014.36</td><td align="right" headers="perSecond Min" class='awrc'>439.77</td><td align="right" headers="perSecond Max" class='awrcrb'>7,531.16</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>4,928</td><td align="right" class='awrc'>8.18</td><td align="right" class='awrc'>0.65</td><td align="right" headers="perSecond Average" class='awrclb'>4.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.20</td><td align="right" headers="perSecond Min" class='awrc'>3.95</td><td align="right" headers="perSecond Max" class='awrcrb'>4.23</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>212,562</td><td align="right" class='awrnc'>352.87</td><td align="right" class='awrnc'>28.05</td><td align="right" headers="perSecond Average" class='awrnclb'>176.43</td><td align="right" headers="perSecond StdDev" class='awrnc'>22.80</td><td align="right" headers="perSecond Min" class='awrnc'>160.31</td><td align="right" headers="perSecond Max" class='awrncrb'>192.55</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>212,562</td><td align="right" class='awrc'>352.87</td><td align="right" class='awrc'>28.05</td><td align="right" headers="perSecond Average" class='awrclb'>176.43</td><td align="right" headers="perSecond StdDev" class='awrc'>22.80</td><td align="right" headers="perSecond Min" class='awrc'>160.31</td><td align="right" headers="perSecond Max" class='awrcrb'>192.55</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>548</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>0.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.43</td><td align="right" headers="perSecond Max" class='awrncrb'>0.48</td></tr>
<tr><td scope="row" class='awrc'>total cf enq hold time</td><td align="right" class='awrc'>1,488</td><td align="right" class='awrc'>2.47</td><td align="right" class='awrc'>0.20</td><td align="right" headers="perSecond Average" class='awrclb'>1.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.74</td><td align="right" headers="perSecond Min" class='awrc'>0.71</td><td align="right" headers="perSecond Max" class='awrcrb'>1.76</td></tr>
<tr><td scope="row" class='awrnc'>total number of cf enq holders</td><td align="right" class='awrnc'>245</td><td align="right" class='awrnc'>0.41</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.15</td><td align="right" headers="perSecond Max" class='awrncrb'>0.25</td></tr>
<tr><td scope="row" class='awrc'>total number of times SMON posted</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>transaction rollbacks</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrc'>5,427,957</td><td align="right" class='awrc'>9,010.78</td><td align="right" class='awrc'>716.18</td><td align="right" headers="perSecond Average" class='awrclb'>9,010.78</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>9,010.78</td><td align="right" headers="perSecond Max" class='awrcrb'>9,010.78</td></tr>
<tr><td scope="row" class='awrnc'>undo change vector size</td><td align="right" class='awrnc'>166,101,232</td><td align="right" class='awrnc'>275,736.60</td><td align="right" class='awrnc'>21,915.98</td><td align="right" headers="perSecond Average" class='awrnclb'>137,868.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>191,522.55</td><td align="right" headers="perSecond Min" class='awrnc'>2,441.41</td><td align="right" headers="perSecond Max" class='awrncrb'>273,295.19</td></tr>
<tr><td scope="row" class='awrc'>user I/O wait time</td><td align="right" class='awrc'>82,798</td><td align="right" class='awrc'>137.45</td><td align="right" class='awrc'>10.92</td><td align="right" headers="perSecond Average" class='awrclb'>68.72</td><td align="right" headers="perSecond StdDev" class='awrc'>97.08</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>137.37</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>229</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>0.29</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>7,579</td><td align="right" class='awrc'>12.58</td><td align="right" class='awrc'>1.00</td><td align="right" headers="perSecond Average" class='awrclb'>6.29</td><td align="right" headers="perSecond StdDev" class='awrc'>8.77</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>12.49</td></tr>
<tr><td scope="row" class='awrnc'>user logons cumulative</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user logouts cumulative</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>509</td><td align="right" class='awrnc'>0.84</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>0.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.34</td><td align="right" headers="perSecond Max" class='awrncrb'>0.50</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12072"></a>
<h3 class="awr">Global Messaging Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>15,615</td><td align="right" class='awrnc'>25.92</td><td align="right" class='awrnc'>2.06</td><td align="right" headers="perSecond Average" class='awrnclb'>12.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.05</td><td align="right" headers="perSecond Min" class='awrnc'>12.22</td><td align="right" headers="perSecond Max" class='awrncrb'>13.70</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>6,946</td><td align="right" class='awrnc'>11.53</td><td align="right" class='awrnc'>0.92</td><td align="right" headers="perSecond Average" class='awrnclb'>5.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.91</td><td align="right" headers="perSecond Min" class='awrnc'>0.17</td><td align="right" headers="perSecond Max" class='awrncrb'>11.36</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>7,320</td><td align="right" class='awrc'>12.15</td><td align="right" class='awrc'>0.97</td><td align="right" headers="perSecond Average" class='awrclb'>6.08</td><td align="right" headers="perSecond StdDev" class='awrc'>8.27</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>11.92</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>7,320</td><td align="right" class='awrnc'>12.15</td><td align="right" class='awrnc'>0.97</td><td align="right" headers="perSecond Average" class='awrnclb'>6.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.26</td><td align="right" headers="perSecond Min" class='awrnc'>0.23</td><td align="right" headers="perSecond Max" class='awrncrb'>11.92</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>7,905</td><td align="right" class='awrc'>13.12</td><td align="right" class='awrc'>1.04</td><td align="right" headers="perSecond Average" class='awrclb'>6.56</td><td align="right" headers="perSecond StdDev" class='awrc'>8.80</td><td align="right" headers="perSecond Min" class='awrc'>0.34</td><td align="right" headers="perSecond Max" class='awrcrb'>12.78</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>305</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>0.25</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.25</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.43</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs assume no cvt</td><td align="right" class='awrc'>42,538</td><td align="right" class='awrc'>70.62</td><td align="right" class='awrc'>5.61</td><td align="right" headers="perSecond Average" class='awrclb'>35.31</td><td align="right" headers="perSecond StdDev" class='awrc'>49.59</td><td align="right" headers="perSecond Min" class='awrc'>0.24</td><td align="right" headers="perSecond Max" class='awrcrb'>70.37</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast to fg</td><td align="right" class='awrnc'>297,513</td><td align="right" class='awrnc'>493.89</td><td align="right" class='awrnc'>39.25</td><td align="right" headers="perSecond Average" class='awrnclb'>246.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>349.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.14</td><td align="right" headers="perSecond Max" class='awrncrb'>493.75</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>27,583</td><td align="right" class='awrc'>45.79</td><td align="right" class='awrc'>3.64</td><td align="right" headers="perSecond Average" class='awrclb'>45.79</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>45.79</td><td align="right" headers="perSecond Max" class='awrcrb'>45.79</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>17,354</td><td align="right" class='awrnc'>28.81</td><td align="right" class='awrnc'>2.29</td><td align="right" headers="perSecond Average" class='awrnclb'>14.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>11.58</td><td align="right" headers="perSecond Min" class='awrnc'>6.22</td><td align="right" headers="perSecond Max" class='awrncrb'>22.59</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>12,910</td><td align="right" class='awrc'>21.43</td><td align="right" class='awrc'>1.70</td><td align="right" headers="perSecond Average" class='awrclb'>10.72</td><td align="right" headers="perSecond StdDev" class='awrc'>4.14</td><td align="right" headers="perSecond Min" class='awrc'>7.79</td><td align="right" headers="perSecond Max" class='awrcrb'>13.64</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>41,349</td><td align="right" class='awrnc'>68.64</td><td align="right" class='awrnc'>5.46</td><td align="right" headers="perSecond Average" class='awrnclb'>34.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>25.81</td><td align="right" headers="perSecond Min" class='awrnc'>16.07</td><td align="right" headers="perSecond Max" class='awrncrb'>52.57</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr flush pi msgs</td><td align="right" class='awrc'>230,786</td><td align="right" class='awrc'>383.12</td><td align="right" class='awrc'>30.45</td><td align="right" headers="perSecond Average" class='awrclb'>191.56</td><td align="right" headers="perSecond StdDev" class='awrc'>270.32</td><td align="right" headers="perSecond Min" class='awrc'>0.42</td><td align="right" headers="perSecond Max" class='awrcrb'>382.70</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr write request msgs</td><td align="right" class='awrnc'>143</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.22</td></tr>
<tr><td scope="row" class='awrc'>gcs grant ast</td><td align="right" class='awrc'>325,096</td><td align="right" class='awrc'>539.68</td><td align="right" class='awrc'>42.89</td><td align="right" headers="perSecond Average" class='awrclb'>269.84</td><td align="right" headers="perSecond StdDev" class='awrc'>381.42</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>539.54</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>97,559</td><td align="right" class='awrnc'>161.95</td><td align="right" class='awrnc'>12.87</td><td align="right" headers="perSecond Average" class='awrnclb'>80.98</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.77</td><td align="right" headers="perSecond Min" class='awrnc'>54.98</td><td align="right" headers="perSecond Max" class='awrncrb'>106.98</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>325,934</td><td align="right" class='awrc'>541.07</td><td align="right" class='awrc'>43.00</td><td align="right" headers="perSecond Average" class='awrclb'>270.54</td><td align="right" headers="perSecond StdDev" class='awrc'>112.96</td><td align="right" headers="perSecond Min" class='awrc'>190.66</td><td align="right" headers="perSecond Max" class='awrcrb'>350.41</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>23,915</td><td align="right" class='awrnc'>39.70</td><td align="right" class='awrnc'>3.16</td><td align="right" headers="perSecond Average" class='awrnclb'>19.85</td><td align="right" headers="perSecond StdDev" class='awrnc'>18.34</td><td align="right" headers="perSecond Min" class='awrnc'>6.88</td><td align="right" headers="perSecond Max" class='awrncrb'>32.82</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>1,856,477</td><td align="right" class='awrc'>3,081.87</td><td align="right" class='awrc'>244.95</td><td align="right" headers="perSecond Average" class='awrclb'>1,540.93</td><td align="right" headers="perSecond StdDev" class='awrc'>653.95</td><td align="right" headers="perSecond Min" class='awrc'>1,078.52</td><td align="right" headers="perSecond Max" class='awrcrb'>2,003.35</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms write request msgs</td><td align="right" class='awrnc'>104</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.16</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs process time(ms)</td><td align="right" class='awrc'>82,287</td><td align="right" class='awrc'>136.60</td><td align="right" class='awrc'>10.86</td><td align="right" headers="perSecond Average" class='awrclb'>68.30</td><td align="right" headers="perSecond StdDev" class='awrc'>52.47</td><td align="right" headers="perSecond Min" class='awrc'>31.20</td><td align="right" headers="perSecond Max" class='awrcrb'>105.41</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs received</td><td align="right" class='awrnc'>4,710,606</td><td align="right" class='awrnc'>7,819.90</td><td align="right" class='awrnc'>621.53</td><td align="right" headers="perSecond Average" class='awrnclb'>3,909.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,526.04</td><td align="right" headers="perSecond Min" class='awrnc'>2,123.77</td><td align="right" headers="perSecond Max" class='awrncrb'>5,696.13</td></tr>
<tr><td scope="row" class='awrc'>gcs new served by master</td><td align="right" class='awrc'>193</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.16</td><td align="right" headers="perSecond Max" class='awrcrb'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>gcs out-of-order msgs</td><td align="right" class='awrnc'>72</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gcs pings refused</td><td align="right" class='awrc'>10,850</td><td align="right" class='awrc'>18.01</td><td align="right" class='awrc'>1.43</td><td align="right" headers="perSecond Average" class='awrclb'>9.01</td><td align="right" headers="perSecond StdDev" class='awrc'>12.46</td><td align="right" headers="perSecond Min" class='awrc'>0.20</td><td align="right" headers="perSecond Max" class='awrcrb'>17.81</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant immediate</td><td align="right" class='awrnc'>601</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>0.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.64</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.95</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs actual</td><td align="right" class='awrc'>4,404</td><td align="right" class='awrc'>7.31</td><td align="right" class='awrc'>0.58</td><td align="right" headers="perSecond Average" class='awrclb'>3.66</td><td align="right" headers="perSecond StdDev" class='awrc'>5.07</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>7.24</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs logical</td><td align="right" class='awrnc'>366,015</td><td align="right" class='awrnc'>607.60</td><td align="right" class='awrnc'>48.29</td><td align="right" headers="perSecond Average" class='awrnclb'>303.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>425.15</td><td align="right" headers="perSecond Min" class='awrnc'>3.18</td><td align="right" headers="perSecond Max" class='awrncrb'>604.43</td></tr>
<tr><td scope="row" class='awrc'>gcs stale cr</td><td align="right" class='awrc'>135</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>gcs undo cr</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs process time(ms)</td><td align="right" class='awrc'>98</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs received</td><td align="right" class='awrnc'>4,427</td><td align="right" class='awrnc'>7.35</td><td align="right" class='awrnc'>0.58</td><td align="right" headers="perSecond Average" class='awrnclb'>3.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.09</td><td align="right" headers="perSecond Min" class='awrnc'>2.90</td><td align="right" headers="perSecond Max" class='awrncrb'>4.45</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock allocation</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>16,560</td><td align="right" class='awrnc'>27.49</td><td align="right" class='awrnc'>2.18</td><td align="right" headers="perSecond Average" class='awrnclb'>13.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>19.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.25</td><td align="right" headers="perSecond Max" class='awrncrb'>27.24</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>16,566</td><td align="right" class='awrc'>27.50</td><td align="right" class='awrc'>2.19</td><td align="right" headers="perSecond Average" class='awrclb'>13.75</td><td align="right" headers="perSecond StdDev" class='awrc'>19.09</td><td align="right" headers="perSecond Min" class='awrc'>0.25</td><td align="right" headers="perSecond Max" class='awrcrb'>27.25</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>4,398</td><td align="right" class='awrnc'>7.30</td><td align="right" class='awrnc'>0.58</td><td align="right" headers="perSecond Average" class='awrnclb'>3.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>7.21</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>212,085</td><td align="right" class='awrc'>352.07</td><td align="right" class='awrc'>27.98</td><td align="right" headers="perSecond Average" class='awrclb'>176.04</td><td align="right" headers="perSecond StdDev" class='awrc'>65.96</td><td align="right" headers="perSecond Min" class='awrc'>129.39</td><td align="right" headers="perSecond Max" class='awrcrb'>222.68</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>284,930</td><td align="right" class='awrnc'>473.00</td><td align="right" class='awrnc'>37.59</td><td align="right" headers="perSecond Average" class='awrnclb'>236.50</td><td align="right" headers="perSecond StdDev" class='awrnc'>331.06</td><td align="right" headers="perSecond Min" class='awrnc'>2.40</td><td align="right" headers="perSecond Max" class='awrncrb'>470.60</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>671,498</td><td align="right" class='awrc'>1,114.73</td><td align="right" class='awrc'>88.60</td><td align="right" headers="perSecond Average" class='awrclb'>557.36</td><td align="right" headers="perSecond StdDev" class='awrc'>454.76</td><td align="right" headers="perSecond Min" class='awrc'>235.80</td><td align="right" headers="perSecond Max" class='awrcrb'>878.93</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>4,715,033</td><td align="right" class='awrnc'>7,827.25</td><td align="right" class='awrnc'>622.12</td><td align="right" headers="perSecond Average" class='awrnclb'>3,913.63</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,527.13</td><td align="right" headers="perSecond Min" class='awrnc'>2,126.67</td><td align="right" headers="perSecond Max" class='awrncrb'>5,700.58</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>355,593</td><td align="right" class='awrc'>590.30</td><td align="right" class='awrc'>46.92</td><td align="right" headers="perSecond Average" class='awrclb'>295.15</td><td align="right" headers="perSecond StdDev" class='awrc'>400.14</td><td align="right" headers="perSecond Min" class='awrc'>12.21</td><td align="right" headers="perSecond Max" class='awrcrb'>578.09</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>1,912,172</td><td align="right" class='awrnc'>3,174.30</td><td align="right" class='awrnc'>252.30</td><td align="right" headers="perSecond Average" class='awrnclb'>1,587.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,105.50</td><td align="right" headers="perSecond Min" class='awrnc'>98.34</td><td align="right" headers="perSecond Max" class='awrncrb'>3,075.96</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>7,344</td><td align="right" class='awrc'>12.19</td><td align="right" class='awrc'>0.97</td><td align="right" headers="perSecond Average" class='awrclb'>6.10</td><td align="right" headers="perSecond StdDev" class='awrc'>8.48</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>12.09</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>4,119,248</td><td align="right" class='awrnc'>6,838.18</td><td align="right" class='awrnc'>543.51</td><td align="right" headers="perSecond Average" class='awrnclb'>3,419.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,853.14</td><td align="right" headers="perSecond Min" class='awrnc'>2,108.73</td><td align="right" headers="perSecond Max" class='awrncrb'>4,729.46</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>47,030,412,358</td><td align="right" class='awrc'>78,073,551.66</td><td align="right" class='awrc'>6,205,358.54</td><td align="right" headers="perSecond Average" class='awrclb'>39,036,775.83</td><td align="right" headers="perSecond StdDev" class='awrc'>37,306,272.13</td><td align="right" headers="perSecond Min" class='awrc'>12,657,257.82</td><td align="right" headers="perSecond Max" class='awrcrb'>65,416,293.83</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>30,936</td><td align="right" class='awrnc'>51.36</td><td align="right" class='awrnc'>4.08</td><td align="right" headers="perSecond Average" class='awrnclb'>25.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>25.45</td><td align="right" headers="perSecond Min" class='awrnc'>7.68</td><td align="right" headers="perSecond Max" class='awrncrb'>43.67</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>4,715,033</td><td align="right" class='awrc'>7,827.25</td><td align="right" class='awrc'>622.12</td><td align="right" headers="perSecond Average" class='awrclb'>3,913.63</td><td align="right" headers="perSecond StdDev" class='awrc'>2,527.13</td><td align="right" headers="perSecond Min" class='awrc'>2,126.67</td><td align="right" headers="perSecond Max" class='awrcrb'>5,700.58</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>2,462,939</td><td align="right" class='awrnc'>4,088.61</td><td align="right" class='awrnc'>324.97</td><td align="right" headers="perSecond Average" class='awrnclb'>2,044.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,878.96</td><td align="right" headers="perSecond Min" class='awrnc'>8.57</td><td align="right" headers="perSecond Max" class='awrncrb'>4,080.04</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>1,188,734</td><td align="right" class='awrc'>1,973.36</td><td align="right" class='awrc'>156.85</td><td align="right" headers="perSecond Average" class='awrclb'>986.68</td><td align="right" headers="perSecond StdDev" class='awrc'>1,002.58</td><td align="right" headers="perSecond Min" class='awrc'>277.75</td><td align="right" headers="perSecond Max" class='awrcrb'>1,695.61</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>431,158</td><td align="right" class='awrnc'>715.75</td><td align="right" class='awrnc'>56.89</td><td align="right" headers="perSecond Average" class='awrnclb'>357.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>190.57</td><td align="right" headers="perSecond Min" class='awrnc'>223.12</td><td align="right" headers="perSecond Max" class='awrncrb'>492.63</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>671,479</td><td align="right" class='awrc'>1,114.69</td><td align="right" class='awrc'>88.60</td><td align="right" headers="perSecond Average" class='awrclb'>557.35</td><td align="right" headers="perSecond StdDev" class='awrc'>454.51</td><td align="right" headers="perSecond Min" class='awrc'>235.96</td><td align="right" headers="perSecond Max" class='awrcrb'>878.73</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages received</td><td align="right" class='awrnc'>290,494</td><td align="right" class='awrnc'>482.24</td><td align="right" class='awrnc'>38.33</td><td align="right" headers="perSecond Average" class='awrnclb'>241.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>33.09</td><td align="right" headers="perSecond Min" class='awrnc'>217.72</td><td align="right" headers="perSecond Max" class='awrncrb'>264.52</td></tr>
<tr><td scope="row" class='awrc'>process batch messages sent</td><td align="right" class='awrc'>295,058</td><td align="right" class='awrc'>489.81</td><td align="right" class='awrc'>38.93</td><td align="right" headers="perSecond Average" class='awrclb'>244.91</td><td align="right" headers="perSecond StdDev" class='awrc'>37.92</td><td align="right" headers="perSecond Min" class='awrc'>218.10</td><td align="right" headers="perSecond Max" class='awrcrb'>271.72</td></tr>
<tr><td scope="row" class='awrnc'>receiver cycle time</td><td align="right" class='awrnc'>232,230</td><td align="right" class='awrnc'>385.52</td><td align="right" class='awrnc'>30.64</td><td align="right" headers="perSecond Average" class='awrnclb'>192.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>131.79</td><td align="right" headers="perSecond Min" class='awrnc'>99.57</td><td align="right" headers="perSecond Max" class='awrncrb'>285.95</td></tr>
<tr><td scope="row" class='awrc'>receiver loop count</td><td align="right" class='awrc'>856,091</td><td align="right" class='awrc'>1,421.17</td><td align="right" class='awrc'>112.96</td><td align="right" headers="perSecond Average" class='awrclb'>710.58</td><td align="right" headers="perSecond StdDev" class='awrc'>478.14</td><td align="right" headers="perSecond Min" class='awrc'>372.49</td><td align="right" headers="perSecond Max" class='awrcrb'>1,048.68</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12073"></a>
<h3 class="awr">System Statistics (Absolute Values)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Absolute Values)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Sessions">Sessions</th>
<th class="awrbg" colspan=" 2" id="OpenCursors">Open Cursors</th>
<th class="awrbg" colspan=" 2" id="SessionCachedCursors">Session Cached Cursors</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sessions Begin" class='awrclb'>90</td><td align="right" headers="Sessions End" class='awrc'>90</td><td align="right" headers="OpenCursors Begin" class='awrclb'>120</td><td align="right" headers="OpenCursors End" class='awrc'>120</td><td align="right" headers="SessionCachedCursors Begin" class='awrclb'>8,428</td><td align="right" headers="SessionCachedCursors End" class='awrcrb'>8,390</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sessions Begin" class='awrnclb'>91</td><td align="right" headers="Sessions End" class='awrnc'>89</td><td align="right" headers="OpenCursors Begin" class='awrnclb'>105</td><td align="right" headers="OpenCursors End" class='awrnc'>97</td><td align="right" headers="SessionCachedCursors Begin" class='awrnclb'>7,295</td><td align="right" headers="SessionCachedCursors End" class='awrncrb'>7,304</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>181</td><td align="right" class='awrct'>179</td><td align="right" class='awrclbt'>225</td><td align="right" class='awrct'>217</td><td align="right" class='awrclbt'>15,723</td><td align="right" class='awrcrbt'>15,694</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>91</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnclb'>113</td><td align="right" class='awrnc'>109</td><td align="right" class='awrnclb'>7,862</td><td align="right" class='awrncrb'>7,847</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrclb'>11</td><td align="right" class='awrc'>16</td><td align="right" class='awrclb'>801</td><td align="right" class='awrcrb'>768</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="630"></a>
<h2 class="awr">
I/O Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12097">IO Profile (Global)</a></li>
<li class="awr"><a class="awr" href="#12076">IOStat by Function</a></li>
<li class="awr"><a class="awr" href="#12077">IOStat by File Type</a></li>
<li class="awr"><a class="awr" href="#12070">Segment Statistics (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12097"></a>
<h3 class="awr">IO Profile (Global)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IO Profile (Global)"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Read+Write/s</th><th class="awrbg" scope="col">Reads/s</th><th class="awrbg" scope="col">Writes/s</th></tr>
<tr><td class='awrc'>Total Requests</td><td align="right" class='awrc'>4,211.64</td><td align="right" class='awrc'>3,673.42</td><td align="right" class='awrc'>538.22</td></tr>
<tr><td class='awrnc'>Database Requests</td><td align="right" class='awrnc'>4,167.13</td><td align="right" class='awrnc'>3,662.67</td><td align="right" class='awrnc'>504.46</td></tr>
<tr><td class='awrc'>Optimized Requests</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo Requests</td><td align="right" class='awrnc'>13.13</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>13.13</td></tr>
<tr><td class='awrc'>Total (MB)</td><td align="right" class='awrc'>35.91</td><td align="right" class='awrc'>29.93</td><td align="right" class='awrc'>5.97</td></tr>
<tr><td class='awrnc'>Database (MB)</td><td align="right" class='awrnc'>33.23</td><td align="right" class='awrnc'>28.62</td><td align="right" class='awrnc'>4.61</td></tr>
<tr><td class='awrc'>Optimized Total (MB)</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo (MB)</td><td align="right" class='awrnc'>0.64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.64</td></tr>
<tr><td class='awrc'>Database (blocks)</td><td align="right" class='awrc'>4,253.45</td><td align="right" class='awrc'>3,662.74</td><td align="right" class='awrc'>590.72</td></tr>
<tr><td class='awrnc'>Via Buffer Cache (blocks)</td><td align="right" class='awrnc'>4,253.37</td><td align="right" class='awrnc'>3,662.74</td><td align="right" class='awrnc'>590.63</td></tr>
<tr><td class='awrc'>Direct (blocks)</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.09</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12076"></a>
<h3 class="awr">IOStat by Function</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<td>&#160;</td><td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>2,535,533</td><td align="right" headers="Requests IOs/s" class='awrc'>4,209.04</td><td align="right" headers="Requests Reads/s" class='awrc'>3,670.81</td><td align="right" headers="Requests Writes/s" class='awrc'>538.23</td><td align="right" headers="MB Total" class='awrclb'>21,617</td><td align="right" headers="MB IOMB/s" class='awrc'>35.88</td><td align="right" headers="MB ReadMB/s" class='awrc'>29.91</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>5.97</td><td align="right" class='awrc'>447.1K</td><td align="right" class='awrc'>2.00ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>2,204,764</td><td align="right" headers="Requests IOs/s" class='awrnc'>3,659.95</td><td align="right" headers="Requests Reads/s" class='awrnc'>3,659.95</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>17,225</td><td align="right" headers="MB IOMB/s" class='awrnc'>28.59</td><td align="right" headers="MB ReadMB/s" class='awrnc'>28.59</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>434.6K</td><td align="right" class='awrnc'>1.91ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>303,921</td><td align="right" headers="Requests IOs/s" class='awrc'>504.52</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>504.52</td><td align="right" headers="MB Total" class='awrclb'>2,781</td><td align="right" headers="MB IOMB/s" class='awrc'>4.62</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>4.62</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>7,619</td><td align="right" headers="Requests IOs/s" class='awrnc'>12.65</td><td align="right" headers="Requests Reads/s" class='awrnc'>10.85</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.80</td><td align="right" headers="MB Total" class='awrnclb'>810</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.34</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.32</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.03</td><td align="right" class='awrnc'>4659</td><td align="right" class='awrnc'>949.85us</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>19,228</td><td align="right" headers="Requests IOs/s" class='awrc'>31.92</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>31.92</td><td align="right" headers="MB Total" class='awrclb'>801</td><td align="right" headers="MB IOMB/s" class='awrc'>1.33</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>1.33</td><td align="right" class='awrc'>7900</td><td align="right" class='awrc'>7.43ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>1</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>1</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>5,880</td><td align="right" headers="Requests IOs/s" class='awrct'>9.76</td><td align="right" headers="Requests Reads/s" class='awrct'>6.96</td><td align="right" headers="Requests Writes/s" class='awrct'>2.80</td><td align="right" headers="MB Total" class='awrclbt'>779</td><td align="right" headers="MB IOMB/s" class='awrct'>1.29</td><td align="right" headers="MB ReadMB/s" class='awrct'>1.25</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>0.04</td><td align="right" class='awrct'>3085</td><td align="right" class='awrct'>1.13ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>4,417</td><td align="right" headers="Requests IOs/s" class='awrnc'>7.33</td><td align="right" headers="Requests Reads/s" class='awrnc'>6.49</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.84</td><td align="right" headers="MB Total" class='awrnclb'>760</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.26</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.25</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.01</td><td align="right" class='awrnc'>2601</td><td align="right" class='awrnc'>676.14us</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>775</td><td align="right" headers="Requests IOs/s" class='awrc'>1.29</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>1.29</td><td align="right" headers="MB Total" class='awrclb'>9</td><td align="right" headers="MB IOMB/s" class='awrc'>0.01</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.01</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>406</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.67</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.67</td><td align="right" headers="MB Total" class='awrnclb'>8</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.01</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.01</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>7.86ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>282</td><td align="right" headers="Requests IOs/s" class='awrc'>0.47</td><td align="right" headers="Requests Reads/s" class='awrc'>0.47</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>282</td><td align="right" class='awrc'>505.78us</td></tr>
<tr><td align="right" scope="row" class='awrnct'>2</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,529,653</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,199.28</td><td align="right" headers="Requests Reads/s" class='awrnct'>3,663.85</td><td align="right" headers="Requests Writes/s" class='awrnct'>535.43</td><td align="right" headers="MB Total" class='awrnclbt'>20,838</td><td align="right" headers="MB IOMB/s" class='awrnct'>34.59</td><td align="right" headers="MB ReadMB/s" class='awrnct'>28.66</td><td align="right" headers="MB WriteMB/s" class='awrncrbt'>5.93</td><td align="right" class='awrnct'>444K</td><td align="right" class='awrnct'>2.01ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>2,204,482</td><td align="right" headers="Requests IOs/s" class='awrc'>3,659.49</td><td align="right" headers="Requests Reads/s" class='awrc'>3,659.49</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>17,223</td><td align="right" headers="MB IOMB/s" class='awrc'>28.59</td><td align="right" headers="MB ReadMB/s" class='awrc'>28.59</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>434.3K</td><td align="right" class='awrc'>1.92ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>DBWR</td><td align="right" headers="Requests Total" class='awrnclb'>303,146</td><td align="right" headers="Requests IOs/s" class='awrnc'>503.23</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>503.23</td><td align="right" headers="MB Total" class='awrnclb'>2,772</td><td align="right" headers="MB IOMB/s" class='awrnc'>4.60</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>4.60</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>18,822</td><td align="right" headers="Requests IOs/s" class='awrc'>31.24</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>31.24</td><td align="right" headers="MB Total" class='awrclb'>793</td><td align="right" headers="MB IOMB/s" class='awrc'>1.32</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>1.32</td><td align="right" class='awrc'>7698</td><td align="right" class='awrc'>7.42ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>3,202</td><td align="right" headers="Requests IOs/s" class='awrnc'>5.32</td><td align="right" headers="Requests Reads/s" class='awrnc'>4.36</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.95</td><td align="right" headers="MB Total" class='awrnclb'>50</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.08</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.07</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.01</td><td align="right" class='awrnc'>2058</td><td align="right" class='awrnc'>1.30ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrclb'>1</td><td align="right" headers="Requests IOs/s" class='awrc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12077"></a>
<h3 class="awr">IOStat by File Type</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by File Type"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<th class="awrbg" colspan=" 2" id="ServiceTime">Service Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col" id="Small|Read">Small Read</th><th class="awrbg" scope="col" id="Large|Read">Large Read</th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>2,535,460</td><td align="right" headers="Requests IOs/s" class='awrc'>4,208.92</td><td align="right" headers="Requests Reads/s" class='awrc'>3,670.69</td><td align="right" headers="Requests Writes/s" class='awrc'>538.23</td><td align="right" headers="MB Total" class='awrclb'>21,615</td><td align="right" headers="MB IOMB/s" class='awrc'>35.88</td><td align="right" headers="MB ReadMB/s" class='awrc'>29.91</td><td align="right" headers="MB WriteMB/s" class='awrc'>5.97</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>181.26us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1383.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>2,508,590</td><td align="right" headers="Requests IOs/s" class='awrnc'>4,164.31</td><td align="right" headers="Requests Reads/s" class='awrnc'>3,659.81</td><td align="right" headers="Requests Writes/s" class='awrnc'>504.50</td><td align="right" headers="MB Total" class='awrnclb'>20,004</td><td align="right" headers="MB IOMB/s" class='awrnc'>33.21</td><td align="right" headers="MB ReadMB/s" class='awrnc'>28.59</td><td align="right" headers="MB WriteMB/s" class='awrnc'>4.61</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>181.72us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>20,105</td><td align="right" headers="Requests IOs/s" class='awrc'>33.37</td><td align="right" headers="Requests Reads/s" class='awrc'>1.46</td><td align="right" headers="Requests Writes/s" class='awrc'>31.92</td><td align="right" headers="MB Total" class='awrclb'>1,505</td><td align="right" headers="MB IOMB/s" class='awrc'>2.50</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.17</td><td align="right" headers="MB WriteMB/s" class='awrc'>1.33</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>19.23us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1383.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>6,716</td><td align="right" headers="Requests IOs/s" class='awrnc'>11.15</td><td align="right" headers="Requests Reads/s" class='awrnc'>9.38</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.77</td><td align="right" headers="MB Total" class='awrnclb'>105</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.17</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.15</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.03</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>8.49us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>49</td><td align="right" headers="Requests IOs/s" class='awrc'>0.08</td><td align="right" headers="Requests Reads/s" class='awrc'>0.03</td><td align="right" headers="Requests Writes/s" class='awrc'>0.05</td><td align="right" headers="MB Total" class='awrclb'>1</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>1</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>5,872</td><td align="right" headers="Requests IOs/s" class='awrnct'>9.75</td><td align="right" headers="Requests Reads/s" class='awrnct'>6.95</td><td align="right" headers="Requests Writes/s" class='awrnct'>2.80</td><td align="right" headers="MB Total" class='awrnclbt'>779</td><td align="right" headers="MB IOMB/s" class='awrnct'>1.29</td><td align="right" headers="MB ReadMB/s" class='awrnct'>1.25</td><td align="right" headers="MB WriteMB/s" class='awrnct'>0.04</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>8.08us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>1383.96ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>1,281</td><td align="right" headers="Requests IOs/s" class='awrc'>2.13</td><td align="right" headers="Requests Reads/s" class='awrc'>1.46</td><td align="right" headers="Requests Writes/s" class='awrc'>0.67</td><td align="right" headers="MB Total" class='awrclb'>713</td><td align="right" headers="MB IOMB/s" class='awrc'>1.18</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.17</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>19.23us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1383.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>3,529</td><td align="right" headers="Requests IOs/s" class='awrnc'>5.86</td><td align="right" headers="Requests Reads/s" class='awrnc'>5.02</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.84</td><td align="right" headers="MB Total" class='awrnclb'>55</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.09</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.08</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>2.98us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>1,062</td><td align="right" headers="Requests IOs/s" class='awrc'>1.76</td><td align="right" headers="Requests Reads/s" class='awrc'>0.47</td><td align="right" headers="Requests Writes/s" class='awrc'>1.29</td><td align="right" headers="MB Total" class='awrclb'>11</td><td align="right" headers="MB IOMB/s" class='awrc'>0.02</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>56.34us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>2</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,529,588</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,199.17</td><td align="right" headers="Requests Reads/s" class='awrnct'>3,663.74</td><td align="right" headers="Requests Writes/s" class='awrnct'>535.43</td><td align="right" headers="MB Total" class='awrnclbt'>20,836</td><td align="right" headers="MB IOMB/s" class='awrnct'>34.59</td><td align="right" headers="MB ReadMB/s" class='awrnct'>28.66</td><td align="right" headers="MB WriteMB/s" class='awrnct'>5.93</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>181.53us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>2,507,528</td><td align="right" headers="Requests IOs/s" class='awrc'>4,162.55</td><td align="right" headers="Requests Reads/s" class='awrc'>3,659.34</td><td align="right" headers="Requests Writes/s" class='awrc'>503.21</td><td align="right" headers="MB Total" class='awrclb'>19,993</td><td align="right" headers="MB IOMB/s" class='awrc'>33.19</td><td align="right" headers="MB ReadMB/s" class='awrc'>28.59</td><td align="right" headers="MB WriteMB/s" class='awrc'>4.60</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>181.73us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Log File</td><td align="right" headers="Requests Total" class='awrnclb'>18,824</td><td align="right" headers="Requests IOs/s" class='awrnc'>31.25</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>31.25</td><td align="right" headers="MB Total" class='awrnclb'>792</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.31</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>1.31</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>&#160;</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Control File</td><td align="right" headers="Requests Total" class='awrclb'>3,187</td><td align="right" headers="Requests IOs/s" class='awrc'>5.29</td><td align="right" headers="Requests Reads/s" class='awrc'>4.36</td><td align="right" headers="Requests Writes/s" class='awrc'>0.93</td><td align="right" headers="MB Total" class='awrclb'>50</td><td align="right" headers="MB IOMB/s" class='awrc'>0.08</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.07</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>14.85us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Temp File</td><td align="right" headers="Requests Total" class='awrnclb'>49</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.08</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.03</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.05</td><td align="right" headers="MB Total" class='awrnclb'>1</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12070"></a>
<h3 class="awr">Segment Statistics (Global)</h3>
<ul>
<li class="awr"> % Total shows % of statistic for each segment compared to the global cluster-wide total     (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants) </li>
<li class="awr"> % Capture shows % of statistic for each segment compared to the  total captured     by AWR for all segments during the snapshot interval</li>
<li class="awr">Captured Segments account for	39.6% of Total Logical Reads:	    9,128,021</li>
<li class="awr">Captured Segments account for  102.2% of Total Physical Reads:	     2,206,439</li>
<li class="awr">Captured Segments account for  102.2% of Total Physical Read Requests:	     2,206,397</li>
<li class="awr">Captured Segments account for  102.2% of Total UnOptimized Read Requests:	2,206,397</li>
<li class="awr">Captured Segments account for	 0.0% of Total Optimized  Read Requests:	       1</li>
<li class="awr">Captured Segments account for	 0.0% of Total Direct Physical Reads:		    1</li>
<li class="awr">Captured Segments account for	94.2% of Total Physical Writes: 	355,850</li>
<li class="awr">Captured Segments account for	99.2% of Total Physical Write Requests: 	303,888</li>
<li class="awr">Captured Segments account for	17.3% of Total Direct Physical Writes:		    52</li>
<li class="awr">Captured Segments account for  100.0% of Total Table Scans:		  3</li>
<li class="awr">Captured Segments account for	88.8% of Total CR Blocks Received:	    12,893</li>
<li class="awr">Captured Segments account for	98.8% of Total Current Blocks Received: 	 55,271</li>
<li class="awr">Captured Segments account for	88.7% of Total CR Blocks Served:	  12,911</li>
<li class="awr">Captured Segments account for	98.7% of Total Current Blocks Served:	       55,293</li>
<li class="awr">Captured Segments account for	99.9% of Total Global Cache Remote Grants:	 1,504,860</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="Segment Statistics (Global). . % Total shows % of statistic for each segment compared to the global cluster-wide total (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants). % Capture shows % of statistic for each segment compared to the total captured by AWR for all segments during the snapshot interval"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%Capture</th></tr>
<tr><td class='awrc'>buffer busy waits</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRI$_ADV_PARAMETERS_PK</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>8697</td><td align="right" class='awrc'>8697</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>db block changes</td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>251,600</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>52.72</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>219,888</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>46.08</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SYSSTAT_PK</td><td class='awrnc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73783</td><td align="right" class='awrnc'>73783</td><td align="right" class='awrnc'>3,152</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.66</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>SYS</td><td class='awrc'>TEMP</td><td class='awrc'>SYS_TEMP_0FD9DFEE4_3B0369</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>4254990052</td><td align="right" class='awrc'>5156992</td><td align="right" class='awrc'>1,408</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0.30</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_LATCH_PK</td><td class='awrnc'>WRH$_LATCH_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73763</td><td align="right" class='awrnc'>73763</td><td align="right" class='awrnc'>1,168</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.24</td></tr>
<tr><td class='awrc'>gc buffer busy</td><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td><td class='awrc'>SEG$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>gc cr blocks received</td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>9,482</td><td align="right" class='awrnc'>73.54</td><td align="right" class='awrnc'>83.76</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,764</td><td align="right" class='awrc'>13.68</td><td align="right" class='awrc'>15.58</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SQL_PLAN</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>11147</td><td align="right" class='awrnc'>11147</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.28</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_PARAMETER_PK</td><td class='awrc'>WRH$_PARAMETER_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73787</td><td align="right" class='awrc'>73787</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.19</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SEG_STAT_OBJ</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>11339</td><td align="right" class='awrnc'>11339</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td class='awrc'>gc cr blocks served</td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>9,482</td><td align="right" class='awrc'>73.44</td><td align="right" class='awrc'>83.76</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>1,764</td><td align="right" class='awrnc'>13.66</td><td align="right" class='awrnc'>15.58</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SQL_PLAN</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>11147</td><td align="right" class='awrc'>11147</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>0.28</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_PARAMETER_PK</td><td class='awrnc'>WRH$_PARAMETER_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73787</td><td align="right" class='awrnc'>73787</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.19</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SEG_STAT_OBJ</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>11339</td><td align="right" class='awrc'>11339</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.18</td></tr>
<tr><td class='awrnc'>gc cu blocks received</td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>48,733</td><td align="right" class='awrnc'>88.17</td><td align="right" class='awrnc'>89.72</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>5,262</td><td align="right" class='awrc'>9.52</td><td align="right" class='awrc'>9.69</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000011139C00004$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>109</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.20</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011147C00038$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SQLSTAT_INDEX</td><td class='awrnc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRM$_SNAPSHOT_DETAILS_INDEX</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>11582</td><td align="right" class='awrc'>11582</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td class='awrnc'>gc cu blocks served</td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>48,733</td><td align="right" class='awrnc'>88.14</td><td align="right" class='awrnc'>89.72</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>5,262</td><td align="right" class='awrc'>9.52</td><td align="right" class='awrc'>9.69</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000011139C00004$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>109</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.20</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011147C00038$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SQLSTAT_INDEX</td><td class='awrnc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRM$_SNAPSHOT_DETAILS_INDEX</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>11582</td><td align="right" class='awrc'>11582</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td class='awrnc'>gc remote grants</td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>889,246</td><td align="right" class='awrnc'>59.09</td><td align="right" class='awrnc'>59.15</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>614,084</td><td align="right" class='awrc'>40.81</td><td align="right" class='awrc'>40.85</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrnc'>WRH$_EVENT_HISTOGRAM_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73834</td><td align="right" class='awrnc'>73834</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SEG_STAT</td><td class='awrc'>WRH$_SEG_STAT_3393773525_33</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>73789</td><td align="right" class='awrc'>73789</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>logical reads</td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>1,681,248</td><td align="right" class='awrnc'>18.42</td><td align="right" class='awrnc'>47.05</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>1,474,368</td><td align="right" class='awrc'>16.15</td><td align="right" class='awrc'>41.26</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td><td class='awrnc'>USER$</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>263,168</td><td align="right" class='awrnc'>2.88</td><td align="right" class='awrnc'>7.36</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>73408</td><td align="right" class='awrc'>81,968</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>2.29</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73422</td><td align="right" class='awrnc'>73422</td><td align="right" class='awrnc'>72,800</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>2.04</td></tr>
<tr><td class='awrc'>physical reads</td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,177,720</td><td align="right" class='awrc'>53.38</td><td align="right" class='awrc'>52.26</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,075,845</td><td align="right" class='awrnc'>48.76</td><td align="right" class='awrnc'>47.74</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SMON_SCN_TIME</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>425</td><td align="right" class='awrnc'>423</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>physical read requests</td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>1,177,720</td><td align="right" class='awrc'>53.38</td><td align="right" class='awrc'>52.26</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>1,075,845</td><td align="right" class='awrnc'>48.76</td><td align="right" class='awrnc'>47.74</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SYSSTAT_PK</td><td class='awrnc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73783</td><td align="right" class='awrnc'>73783</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>physical writes</td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>173,151</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>51.73</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>161,450</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>48.23</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SQLSTAT_INDEX</td><td class='awrnc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>73749</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SYSSTAT_PK</td><td class='awrc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>73783</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td class='awrnc'>physical writes direct</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>55.56</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes direct</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>22.22</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes direct</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000007451C00009$$</td><td class='awrnc'>SYS_LOB_P256</td><td class='awrnc'>LOB PARTITION</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>22.22</td></tr>
<tr><td class='awrc'>physical write requests</td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>154,234</td><td align="right" class='awrc'>50.75</td><td align="right" class='awrc'>51.22</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>146,786</td><td align="right" class='awrnc'>48.30</td><td align="right" class='awrnc'>48.75</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>73834</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SYSSTAT_PK</td><td class='awrnc'>WRH$_SYSSTAT_3393773525_33</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>73783</td><td align="right" class='awrnc'>73783</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SQLSTAT_INDEX</td><td class='awrc'>WRH$_SQLSTAT_3393773525_33</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>73749</td><td align="right" class='awrc'>73749</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td class='awrnc'>table scans</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td><td class='awrnc'>I_OBJ5</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>100.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12083"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> Summarized for all instances in the report </li>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="Library Cache Activity. . Summarized for all instances in the report. &quot;Pct Misses&quot; should be very low "><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>182</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>173</td><td align="right" class='awrc'>173</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>DBLINK</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>EDITION</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>HINTSET OBJECT</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>16.67</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>16.67</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>INDEX</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>50.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>QUEUE</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>944</td><td align="right" class='awrc'>1.27</td><td align="right" class='awrc'>56,394</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>71.43</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>57.14</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>57.14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>165</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,412</td><td align="right" class='awrnc'>3.47</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>401</td><td align="right" class='awrnc'>1,198</td><td align="right" class='awrnc'>1,198</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="633"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12074">PGA Aggregate Target Statistics</a></li>
<li class="awr"><a class="awr" href="#12075">Process Memory Summary</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12074"></a>
<h3 class="awr">PGA Aggregate Target Statistics</h3>
<ul>
<li class="awr"> all stats are reported in MegaBytes</li>
</ul>
<table border="0" class="tdiff" summary="PGA Aggregate Target Statistics. . all stats are reported in MegaBytes"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="PGAAggrTarget">PGA Aggr Target</th>
<th class="awrbg" colspan=" 2" id="AutoPGATarget">Auto PGA Target</th>
<th class="awrbg" colspan=" 2" id="PGAMemAlloc">PGA Mem Alloc</th>
<th class="awrbg" colspan=" 2" id="AutoWorkareas">Auto Workareas</th>
<th class="awrbg" colspan=" 2" id="ManualWorkarea">Manual Workarea</th>
<th class="awrbg" colspan=" 2" id="GlobalMemBound">Global Mem Bound</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="PGAAggrTarget Begin" class='awrclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrclb'>2,149.82</td><td align="right" headers="AutoPGATarget End" class='awrc'>2,155.58</td><td align="right" headers="PGAMemAlloc Begin" class='awrclb'>1,093.20</td><td align="right" headers="PGAMemAlloc End" class='awrc'>1,092.95</td><td align="right" headers="AutoWorkareas Begin" class='awrclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrcrb'>321.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="PGAAggrTarget Begin" class='awrnclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrnc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrnclb'>1,951.27</td><td align="right" headers="AutoPGATarget End" class='awrnc'>1,969.53</td><td align="right" headers="PGAMemAlloc Begin" class='awrnclb'>1,292.17</td><td align="right" headers="PGAMemAlloc End" class='awrnc'>1,280.36</td><td align="right" headers="AutoWorkareas Begin" class='awrnclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrnc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrnclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrnc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrnclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrncrb'>321.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12075"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap I#: Instance number  </li>
<li class="awr"> Max Alloc is Maximum PGA allocation size at snapshot time </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by instance, Begin/End snapshot, Alloc (MB) </li>
</ul>
<table border="0" class="tdiff" summary="Process Memory Summary. . B: Begin Snap E: End Snap I#: Instance number . Max Alloc is Maximum PGA allocation size at snapshot time. Hist Max Alloc is the Historical Max Allocation for still-connected processes. ordered by instance, Begin/End snapshot, Alloc (MB) "><tr><th class="awrbg" scope="col">I#</th><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>207.25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.10</td><td align="right" class='awrc'>10.46</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>34</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>617.98</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.67</td><td align="right" class='awrnc'>8.55</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>109</td><td align="right" class='awrnc'>109</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>7.50</td><td align="right" class='awrc'>6.36</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>91</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>4.52</td><td align="right" class='awrnc'>2.79</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>35</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>837.25</td><td align="right" class='awrc'>9.15</td><td align="right" class='awrc'>11.95</td><td align="right" class='awrc'>19.52</td><td align="right" class='awrc'>86</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>277</td><td align="right" class='awrc'>269</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>212.75</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>6.26</td><td align="right" class='awrnc'>10.49</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>34</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>613.42</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.63</td><td align="right" class='awrc'>8.48</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>7.50</td><td align="right" class='awrnc'>6.36</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>91</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>3.33</td><td align="right" class='awrc'>2.35</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>31</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>837.00</td><td align="right" class='awrnc'>8.70</td><td align="right" class='awrnc'>12.04</td><td align="right" class='awrnc'>19.47</td><td align="right" class='awrnc'>86</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>277</td><td align="right" class='awrnc'>265</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>192.75</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>10.56</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>32</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>573.53</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.21</td><td align="right" class='awrnc'>8.01</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>110</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>10.74</td><td align="right" class='awrc'>9.75</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>92</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>3.19</td><td align="right" class='awrnc'>1.93</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>34</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>780.21</td><td align="right" class='awrc'>11.68</td><td align="right" class='awrc'>11.43</td><td align="right" class='awrc'>19.13</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>277</td><td align="right" class='awrc'>268</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>189.38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.74</td><td align="right" class='awrnc'>10.22</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>565.97</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>8.19</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>108</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>10.17</td><td align="right" class='awrnc'>9.16</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>90</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>2.90</td><td align="right" class='awrc'>1.92</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>32</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>768.41</td><td align="right" class='awrnc'>11.08</td><td align="right" class='awrnc'>11.16</td><td align="right" class='awrnc'>19.01</td><td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>272</td><td align="right" class='awrnc'>263</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="638"></a>
<h2 class="awr">
Supplemental Information
</h2>
<ul>
<li class="awr"><a class="awr" href="#12080">init.ora Parameters</a></li>
<li class="awr"><a class="awr" href="#12084">init.ora Multi-valued Parameters</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12080"></a>
<h3 class="awr">init.ora Parameters</h3>
<ul>
<li class="awr"> '*' indicates same value across all instances</li>
</ul>
<table border="0" class="tdiff" summary="This table displays values for init.ora parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>*</td><td class='awrc'>TRUE</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>*</td><td class='awrc'>DB</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>*</td><td class='awrnc'>TRUE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>*</td><td class='awrc'>19.0.0</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>*</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>*</td><td class='awrc'>8192</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>+DATA</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>*</td><td class='awrc'>example.com</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>*</td><td class='awrnc'>p30db</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>*</td><td class='awrc'>+FRA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>*</td><td class='awrnc'>274877906944</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>*</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>*</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>1</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">instance_number</div></td><td class='awrnc'>2</td><td class='awrnc'>2</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>listener_networks</td><td class='awrc'>*</td><td class='awrc'></td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>local_listener</td><td class='awrnc'>1</td><td class='awrnc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">local_listener</div></td><td class='awrc'>2</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>*</td><td class='awrnc'>AMERICAN</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>*</td><td class='awrc'>AMERICA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>*</td><td class='awrnc'>300</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>*</td><td class='awrc'>3371171840</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>*</td><td class='awrnc'>640</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>*</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>*</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>*</td><td class='awrc'>10133438464</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">thread</div></td><td class='awrc'>2</td><td class='awrc'>2</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>undo_tablespace</td><td class='awrnc'>1</td><td class='awrnc'>UNDOTBS1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">undo_tablespace</div></td><td class='awrc'>2</td><td class='awrc'>UNDOTBS2</td><td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12084"></a>
<h3 class="awr">init.ora Multi-valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more one value </li>
<li class="awr"> '*' indicates same value across all instances </li>
<li class="awr"> '(NULL)' indicates that the  parameter value was not set </li>
<li class="awr"> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="init.ora Multi-valued Parameters. . This section only displays parameters that have more one value. '*' indicates same value across all instances. '(NULL)' indicates that the parameter value was not set. A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td class='awrc'>control_files</td><td class='awrc'>*</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'></td></tr>
<tr><td class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>*</td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="078ab5pdvxx3c"></a>078ab5pdvxx3c</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '64' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0sy7x6xzjg2yy"></a>0sy7x6xzjg2yy</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '64' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0w26sk6t6gq98"></a>0w26sk6t6gq98</td><td class='awrc'><pre_sqltext class="awr">SELECT XMLTYPE(DBMS_REPORT.GET_REPORT_WITH_SUMMARY(:B1 )) FROM DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrnc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="2p9fv35c7zxtg"></a>2p9fv35c7zxtg</td><td class='awrc'><pre_sqltext class="awr">select /* KSXM:LOAD_DML_INF *//*+ leading(o) index(m) use_nl(m) */ 	   nvl(m.inserts,  0) ins,  nvl(m.updates,  0) upd,  nvl(m.deletes,  0) del,	       nvl(m.drop_segments,  0) dropseg,  nvl(m.flags,	0) flags,			 nvl(rowcnt,  0) rowcnt,  o.pobjn pobjn 					 from									       (select :objn objn,  0 pobjn,  rowcnt						from tab$ t								      where t.obj# = :objn							    union all									  select :objn objn,  tp.bo# pobjn,  rowcnt					  from tabpart$ tp
	where tp.obj# = :objn							      union all 								    select :objn objn,	tcp.bo# pobjn,	rowcnt					    from tabcompart$ tcp							  where tcp.obj# = :objn							union all								      select :objn objn,  tsp.pobj# pobjn,  rowcnt				      from tabsubpart$ tsp							    where tsp.obj# = :objn) o,	sys.mon_mods_all$ m				  where o.objn = m.obj#(+) and rownum &lt; 2</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="2sxqgx5hx76qr"></a>2sxqgx5hx76qr</td><td class='awrnc'><pre_sqltext class="awr">select /*+ rule */ bucket,  endpoint,  col#,  epvalue,  epvalue_raw,  ep_repeat_count,  endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrnc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m 		  using dual								     on (m.obj# = :objn and							    (:pobjn = 0 or								m.obj# = :pobjn or							   m.obj# in (select obj#								 from tabpart$								    where bo# = :pobjn and obj# = :objn 				       union all								  select obj#								     from tabcompart$								where bo# = :pobjn and o
bj# = :objn					   union all								      select tsp.obj#								 from tabsubpart$ tsp,	tabcompart$ tcp 				     where tsp.pobj# = tcp.obj# 						  and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				     and tsp.obj# = :objn)))				      when matched then 							   update								      set inserts = decode(:reset,  1,	0,  inserts) + :ins,				 updates = decode(:reset,  1,  0,  updates) + :upd,				deletes = decode(:reset,  1,  0,  deletes) + :del,			       flags =	decode(:reset,	1,  0,	flags - bitand(flags,  :flag)) + :flag,        drop_segments = decode(:reset,  1,  0,  d
rop_segments) + :dropseg,	      timestamp = :time 						   when NOT matched then							insert (obj#,  inserts,  updates,  deletes,					       timestamp,  flags,  drop_segments)				    values (:objn,  :ins,  :upd,  :del,  :time,  :flag,  :dropseg)		     where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3kqrku32p6sfn"></a>3kqrku32p6sfn</td><td class='awrc'><pre_sqltext class="awr">MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#,  SYSTIMESTAMP CHGTIME,  ROUND(MAX(S.DELTA_READ_IO_BYTES/S.DELTA_TIME),  3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S,  GV$SQL_PLAN P,  OBJ$ O,  USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQL_ID AND S.SQL_PLAN_HASH_VALUE = P.PLAN_HASH_VALUE AND S.SQL_PLAN_LINE_ID = P.ID AND P.OBJECT_NAME = O.NAME AND (:B4 IS NULL OR O.OBJ# = :B4 ) AND O.OWNER# = U.USER# AND P.OBJECT_OWNER = U.NAME AND O.TYPE# = 2 AND S.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND P.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND S.SQL_PLAN_OPERATION = 'TABLE ACCESS' AND P.OPERATION = 'TABLE ACCESS' AND S.DELTA_TIME &gt; 0 AND S.DELTA_READ_IO_BYTES &gt; 0 AND FROM_TZ(S.SAMPLE_TIME,  :B3 ) &gt; :B2 AND (:B1 = 'ON' OR (:B1 = 'HADOOP_ONLY' AND EXISTS ( SELEC
T NULL FROM SYS.EXTERNAL_TAB$ ET WHERE ET.OBJ# = O.OBJ# AND TYPE$ IN ('ORACLE_HIVE',  'ORACLE_HDFS',  'ORACLE_BIGDATA')))) GROUP BY O.OBJ#) C WHERE NOT EXISTS (SELECT NULL FROM OPTSTAT_USER_PREFS$ PR WHERE PNAME = 'SCAN_RATE' AND C.OBJ# = PR.OBJ# AND (PR.SPARE1 IS NULL OR C.SCANRATE &lt;= TO_NUMBER(PR.VALCHAR))) ) SRC ON (D.OBJ#=SRC.OBJ# AND D.PNAME = 'SCAN_RATE') WHEN MATCHED THEN UPDATE SET D.VALCHAR= TO_CHAR(SRC.SCANRATE),  D.CHGTIME=SRC.CHGTIME,  D.SPARE1=1 WHEN NOT MATCHED THEN INSERT (OBJ#,  PNAME,  VALCHAR,  CHGTIME,  SPARE1) VALUES(SRC.OBJ#,  'SCAN_RATE',  TO_CHAR(SRC.SCANRATE),  SRC.CHGTIME,  1)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="491wcfyfd6wc1"></a>491wcfyfd6wc1</td><td class='awrnc'><pre_sqltext class="awr">BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;
</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5pj6mtazkhmdd"></a>5pj6mtazkhmdd</td><td class='awrc'><pre_sqltext class="awr">BEGIN /* KSXM:FLUSH DML_MON */    dbms_stats_internal.gather_scan_rate_by_mmon;  END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6ajkhukk78nsr"></a>6ajkhukk78nsr</td><td class='awrnc'><pre_sqltext class="awr">begin prvt_hdm.auto_execute( :dbid,  :inst_num ,  :end_snap_id ); end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6hnhqahphpk8n"></a>6hnhqahphpk8n</td><td class='awrc'><pre_sqltext class="awr">select free_mb from v$asm_diskgroup_stat where name=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrnc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="88v8xahbcrsjp"></a>88v8xahbcrsjp</td><td class='awrc'><pre_sqltext class="awr">insert into  WRH$_IOSTAT_FILETYPE	(dbid,	per_pdb,  con_dbid,  snap_id,  instance_number,      filetype_id,      small_read_megabytes,  small_write_megabytes,	  large_read_megabytes,  large_write_megabytes,      small_read_reqs,  small_write_reqs,  small_sync_read_reqs,      large_read_reqs,  large_write_reqs,      small_read_servicetime,  small_write_servicetime,      small_sync_read_latency,	   large_read_servicetime,  large_write_servicetime,	  retries_on_error )   select  :dbid,  0 per_pdb,   :srcdbid  con_dbid,   :snap_id,  :instance_number,	     filetype_id,	sum(small_read_megabytes) small_read_megabytes,       sum(small_write_megabytes) small_write_megabytes,       sum(large_read_megabytes) large_read_megabytes,	    sum(large_write_megabytes) large_write_megabytes,	    sum(small_read_reqs) small_read_reqs,	sum(small_write_
reqs) small_write_reqs,       sum(small_sync_read_reqs) small_sync_read_reqs,	    sum(large_read_reqs) large_read_reqs,	sum(large_write_reqs) large_write_reqs,       sum(small_read_servicetime) small_read_servicetime,	sum(small_write_servicetime) small_write_servicetime,	    sum(small_sync_read_latency) small_sync_read_latency,	sum(large_read_servicetime) large_read_servicetime,	  sum(large_write_servicetime) large_write_servicetime,       sum(retries_on_error) retries_on_error  FROM   v$iostat_file   if  WHERE (1 = 1) GROUP BY   filetype_id </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9yv5dwv8k0awg"></a>9yv5dwv8k0awg</td><td class='awrnc'><pre_sqltext class="awr">WITH MONITOR_DATA AS (SELECT INST_ID,  KEY,  NVL2(PX_QCSID,  NULL,  STATUS) STATUS,  FIRST_REFRESH_TIME,  LAST_REFRESH_TIME,  REFRESH_COUNT,  PROCESS_NAME,  SID,  SQL_ID,  SQL_EXEC_START,  SQL_EXEC_ID,  DBOP_NAME,  DBOP_EXEC_ID,  SQL_PLAN_HASH_VALUE,  SQL_FULL_PLAN_HASH_VALUE,  SESSION_SERIAL#,	SQL_TEXT,  PX_SERVER#,	PX_SERVER_GROUP,  PX_SERVER_SET,  PX_QCINST_ID,  PX_QCSID,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) ELSE ELAPSED_TIME END ELAPSED_TIME,  QUEUING_TIME,  CPU_TIME,  APPLICATION_WAIT_TIME,  CONCURRENCY_WAIT_TIME,  CLUSTER_WAIT_TIME,  USER_IO_WAIT_TIME,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIM
E+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN 0 ELSE ELAPSED_TIME - (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) END OTHER_WAIT_TIME,  PLSQL_EXEC_TIME,  JAVA_EXEC_TIME,	FETCHES,  BUFFER_GETS,	IO_INTERCONNECT_BYTES IO_INTER_BYTES,  PHYSICAL_READ_REQUESTS READ_REQS,  PHYSICAL_READ_BYTES READ_BYTES,  PHYSICAL_WRITE_REQUESTS WRITE_REQS,	PHYSICAL_WRITE_BYTES WRITE_BYTES,  NVL(PHYSICAL_READ_BYTES,  0) + NVL(PHYSICAL_WRITE_BYTES,  0) IO_BYTES,  NVL(PHYSICAL_READ_REQUESTS,	0) + NVL(PHYSICAL_WRITE_REQUESTS,  0) IO_REQS,	IO_CELL_UNCOMPRESSED_BYTES IO_UNC_BYTES,  IO_CELL_OFFLOAD_ELIGIBLE_BYTES IO_ELIG_BYTES,  IO_CELL_OFFLOAD_RETURNED_BYTES IO_RET_BYTES,  USER# USERID,  USERNAME,  MODULE,  ACTION,  SERVICE_NAME,  CLIENT_IDENTIFIER,  CLIENT_INFO,  PROGRAM,  PLSQL_OBJECT_ID PL_OID,  PLSQL_SUBPROGRAM_ID PL_PROGID,  PLSQL_ENTRY_OBJECT_ID PL_ENTRY_OID,  PLSQL_ENTRY_SUBPROGRAM_ID PL_ENTRY_PROGID,	PX_MAXDOP MAX_DOP,  PX_I
S_CROSS_INSTANCE,  PX_MAXDOP_INSTANCES MAX_DOP_INSTANCES,  PX_SERVERS_REQUESTED SERVERS_REQUESTED,  PX_SERVERS_ALLOCATED SERVERS_ALLOCATED,  ERROR_NUMBER,  ERROR_FACILITY,  ERROR_MESSAGE,  NVL2(OTHER_XML,  'Y',  NULL) HAS_OTHER_XML,  NVL2(BINDS_XML,  'Y',  NULL) HAS_BINDS_XML,  NVL2(RM_CONSUMER_GROUP,	NVL2(RM_LAST_ACTION_TIME,  TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ),  '00/00/0000 00:00:01') || XMLELEMENT( &quot;rminfo&quot;,  XMLATTRIBUTES( RM_LAST_ACTION AS &quot;rmlastact&quot;,  RM_LAST_ACTION_REASON AS &quot;rmlastreason&quot;,  TO_CHAR(RM_LAST_ACTION_TIME,	:B12 ) AS &quot;rmlasttime&quot;,  RM_CONSUMER_GROUP AS &quot;rmcg&quot;)).GETSTRINGVAL(),  '00/00/0000 00:00:00') RM_INFO,  CON_NAME,	CON_ID FROM GV$ALL_SQL_MONITOR MO1 WHERE MO1.INST_ID BETWEEN :B11 AND :B10 AND MO1.SQL_ID = NVL(:B9 ,  MO1.SQL_ID) AND MO1.SQL_EXEC_START = NVL(:B8 ,  MO1.SQL_EXEC_START) AND MO1.SQL_EXEC_ID = NVL(:B7 ,  MO1.SQL_EXEC_ID) OR (MO1.DBOP_NAME = NVL(:B6 ,  MO1.DBOP_NAME) AND MO1.DBOP_EXEC_ID = NVL(:B
5 ,  MO1.DBOP_EXEC_ID)) AND ((:B4 = 1 AND MO1.PX_QCSID IS NULL) OR (MO1.PX_SERVER_GROUP = NVL(:B3 ,  MO1.PX_SERVER_GROUP) AND MO1.PX_SERVER_SET = NVL(:B2 ,  MO1.PX_SERVER_SET) AND MO1.PX_SERVER# = NVL(:B1 ,	MO1.PX_SERVER#)))),  MONITOR_AGG AS (SELECT MAX_PX_QCSID,  MAX_KEY,  MAX_INST_ID,  MAX_SESSION_ID,  MAX_SESSION_SERIAL,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,	SUM_SERVERS_REQUESTED,	SUM_SERVERS_ALLOCATED,	DIST_INST_COUNT,  DIST_PX_GROUP_COUNT,	DIST_PX_SET_COUNT,  MAX_PLAN_HASH_VALUE,  MAX_FULL_PLAN_HASH_VALUE,  MAX_USERID,  MAX_PROGRAM,	MAX_USERNAME,  MAX_MODULE,  MAX_ACTION,  MAX_SERVICE_NAME,  MAX_CLIENT_ID,  MAX_CLIENT_INFO,  MAX_ERROR_NUMBER,  MAX_ERROR_FACILITY,  MAX_ERROR_MESSAGE,  QC_HAS_OTHER_XML,  QC_HAS_BINDS_XML,	MAX_PL_OID,  MAX_PL_PROGID,  MAX_PL_ENTRY_OID,	MAX_PL_ENTRY_PROGID,  MAX_SQL_ID,  MAX_SQL_EXEC_START,	MAX_SQL_EXEC_ID,  MAX_LAST_REFRESH_TIME,  MAX_DBOP_NAME,  MAX_DBOP_EXEC_ID,  CASE WHEN MAX_PL_OID IS NOT NULL THEN NVL((SELECT P
.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',	'.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_OID AND P.SUBPROGRAM_ID = MAX_PL_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_NAME,  CASE WHEN MAX_PL_ENTRY_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_ENTRY_OID AND P.SUBPROGRAM_ID = MAX_PL_ENTRY_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_ENTRY_NAME,  MAX_STATUS,  SUM_REFRESH_COUNT,  MIN_FIRST_REFRESH_TIME,  SQLMON_TEXT,  SUM_ELAPSED_TIME,	MAX_ELAPSED_TIME,  MAX_QUEUING_TIME,  SUM_CPU_TIME,  SUM_USER_IO_WAIT_TIME,  SUM_APPLICATION_WAIT_TIME,  SUM_CONCURRENCY_WAIT_TIME,  SUM_CLUSTER_WAIT_TIME,  SUM_PLSQL_EXEC_TIME,  SUM_JAVA_EXEC_TIME,	SUM_OTHER_WAIT_TIME,  SUM_FETCHES,  SUM_BUFFER_GETS,  SUM_READ_REQS,  SUM_READ_BYTES,  SUM_WRITE_REQS,	SUM_WRITE_BYTES,  SUM_IO_BYTES,  SUM_IO_INTER_BYTES,  SU
M_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES,  SUM_IO_RET_BYTES,	DECODE(:B14 ,  1,  'db_name',  SYS_CONTEXT('userenv',  'db_unique_name')) DB_UNIQUE_NAME,  DECODE(:B14 ,  1,  'platform_name',	SYS.DBMS_UTILITY.PORT_STRING) PLATFORM_NAME,  DECODE(:B14 ,  1,  'host_name',  SYS_CONTEXT('userenv',  'server_host')) HOST_NAME,  AGG_RM_INFO MAX_RM_INFO,  MAX_CON_NAME,  DECODE(MAX_CON_ID,	0,  NULL,  MAX_CON_ID) MAX_CON_ID FROM (SELECT MAX(PX_QCSID) MAX_PX_QCSID,  MAX(CASE WHEN PX_QCSID IS NULL THEN KEY ELSE NULL END) MAX_KEY,  MAX(CASE WHEN PX_QCSID IS NULL THEN INST_ID ELSE NULL END) MAX_INST_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SID ELSE NULL END) MAX_SESSION_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SESSION_SERIAL# ELSE NULL END) MAX_SESSION_SERIAL,  MAX(MAX_DOP) MAX_PX_DOP,	MAX(MAX_DOP_INSTANCES) MAX_PX_DOP_INSTANCES,  MAX(PX_IS_CROSS_INSTANCE) MAX_PX_IS_CROSS_INSTANCE,  SUM(SERVERS_REQUESTED) SUM_SERVERS_REQUESTED,  SUM(SERVERS_ALLOCATED) SUM_SERVERS_ALLOCATED,  COUNT(DISTINCT INST_ID) DIST_IN
ST_COUNT,  COUNT(DISTINCT PX_SERVER_GROUP) DIST_PX_GROUP_COUNT,  COUNT(DISTINCT PX_SERVER_SET) DIST_PX_SET_COUNT,  MAX(SQL_PLAN_HASH_VALUE) MAX_PLAN_HASH_VALUE,  MAX(SQL_FULL_PLAN_HASH_VALUE) MAX_FULL_PLAN_HASH_VALUE,  MAX(USERID) MAX_USERID,  MAX(PROGRAM) MAX_PROGRAM,  MAX(USERNAME) MAX_USERNAME,  MAX(MODULE) MAX_MODULE,  MAX(ACTION) MAX_ACTION,  MAX(SERVICE_NAME) MAX_SERVICE_NAME,  MAX(CLIENT_IDENTIFIER) MAX_CLIENT_ID,  MAX(CLIENT_INFO) MAX_CLIENT_INFO,  MAX(ERROR_NUMBER) MAX_ERROR_NUMBER,  MAX(ERROR_FACILITY) MAX_ERROR_FACILITY,  MAX(ERROR_MESSAGE) MAX_ERROR_MESSAGE,  MAX(NVL2(PX_QCSID,  HAS_OTHER_XML,  NULL)) QC_HAS_OTHER_XML,	MAX(HAS_BINDS_XML) QC_HAS_BINDS_XML,  MAX(PL_OID) MAX_PL_OID,  MAX(PL_PROGID) MAX_PL_PROGID,  MAX(PL_ENTRY_OID) MAX_PL_ENTRY_OID,  MAX(PL_ENTRY_PROGID) MAX_PL_ENTRY_PROGID,  MAX(SQL_ID) MAX_SQL_ID,  MAX(SQL_EXEC_START) MAX_SQL_EXEC_START,	MAX(SQL_EXEC_ID) MAX_SQL_EXEC_ID,  MAX(LAST_REFRESH_TIME) MAX_LAST_REFRESH_TIME,  MAX(STATUS) MAX_STATUS,  SUM(REFRESH_C
OUNT) SUM_REFRESH_COUNT,  MIN(FIRST_REFRESH_TIME) MIN_FIRST_REFRESH_TIME,  MAX(DBOP_NAME) MAX_DBOP_NAME,  MAX(DBOP_EXEC_ID) MAX_DBOP_EXEC_ID,  CASE WHEN :B13 = 0 THEN NULL ELSE MAX(SQL_TEXT) END SQLMON_TEXT,  SUM(ELAPSED_TIME) SUM_ELAPSED_TIME,  MAX(ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(QUEUING_TIME) MAX_QUEUING_TIME,	SUM(CPU_TIME) SUM_CPU_TIME,  SUM(USER_IO_WAIT_TIME) SUM_USER_IO_WAIT_TIME,  SUM(APPLICATION_WAIT_TIME) SUM_APPLICATION_WAIT_TIME,  SUM(CONCURRENCY_WAIT_TIME) SUM_CONCURRENCY_WAIT_TIME,  SUM(CLUSTER_WAIT_TIME) SUM_CLUSTER_WAIT_TIME,  SUM(PLSQL_EXEC_TIME) SUM_PLSQL_EXEC_TIME,  SUM(JAVA_EXEC_TIME) SUM_JAVA_EXEC_TIME,  SUM(OTHER_WAIT_TIME) SUM_OTHER_WAIT_TIME,	SUM(FETCHES) SUM_FETCHES,  SUM(BUFFER_GETS) SUM_BUFFER_GETS,  SUM(READ_REQS) SUM_READ_REQS,  SUM(READ_BYTES) SUM_READ_BYTES,  SUM(WRITE_REQS) SUM_WRITE_REQS,  SUM(WRITE_BYTES) SUM_WRITE_BYTES,  NVL(SUM(READ_BYTES),	0) + NVL(SUM(WRITE_BYTES),  0) SUM_IO_BYTES,  SUM(IO_INTER_BYTES) SUM_IO_INTER_BYTES,  SUM(IO_UNC_BYTES)
 SUM_IO_UNC_BYTES,  SUM(IO_ELIG_BYTES) SUM_IO_ELIG_BYTES,  SUM(IO_RET_BYTES) SUM_IO_RET_BYTES,	MAX(RM_INFO) AGG_RM_INFO,  MAX(CON_NAME) MAX_CON_NAME,	MAX(CON_ID) MAX_CON_ID FROM MONITOR_DATA) MD),	ASH_DATA AS (SELECT AD0.INST_ID,  AD0.SESSION_ID,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.ACTIVITY_BUCKET_NUM,	AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.SQL,  AD0.TOP_LEVEL_SQL_ID,	AD0.DBOP_NAME,	AD0.IS_MONITORED_SQL,  AD0.IS_PX_SLAVE,  AD0.BUCKET_ACTIVITY_START,  AD0.ACTIVITY_START,  AD0.BUCKET_ACTIVITY_END,  AD0.ACTIVITY_END,  AD0.ACTIVITY_COUNT,  AD0.ACTIVITY_TYPE,	AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.IMQ_COUNT,  AD0.WAIT_COUNT,	AD0.CPU_COUNT,	AD0.OTHER_SQL_COUNT,  AD0.PX_SERVER_SET,  AD0.PX_DFO_ACTIVITY_COUNT,  AD0.DFO_MOST_ACTIVE_IID,	AD0.DFO_MOST_ACTIVE_SID,  (CASE WHEN AD0.DFO_MOST_ACTIVE_IID = AD0.INST_ID AND AD0.DFO_MOST_ACTIVE_SID = AD0.SESSION_ID AND (((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &gt;= AD0.PX_DOP * 1.05) O
R ((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &lt;= AD0.PX_DOP *0.95)) AND (AD0.DFO_DURATION * 100) &gt; :B32 THEN AD0.ACTIVITY_COUNT ELSE NULL END) DFO_MOST_ACTIVE_COUNT,  AD0.BUCKET_DISTINCT_SAMPLES,	AD0.SQL_BUCKET_DISTINCT_SAMPLES,  CASE WHEN AD0.PX_SERVER_GROUP IS NULL AND AD0.IS_PX_SLAVE = 1 THEN 1 ELSE AD0.PX_SERVER_GROUP END PX_SERVER_GROUP,  AD0.PX_STEP_ID,  AD0.PX_DFO_PAIR_TYPE,  AD0.PX_DFO_PAIR_ID,  AD0.PX_STEP_ARG,  AD0.PX_DOP,  CASE WHEN AD0.PX_DOP IS NOT NULL AND AD0.PX_DOP &lt;&gt; AD0.PX_MIN_DOP AND AD0.PX_MIN_DOP != 0 THEN PX_MIN_DOP ELSE NULL END PX_MIN_DOP FROM (SELECT /*+ use_hash(ash) leading(mo) */ ASH.INST_ID,  ASH.IS_PX_SLAVE,  ASH.SESSION_ID,  ASH.PLAN_LINE_ID,  ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,  ASH.ACTIVITY_BUCKET_NUM,  ASH.PLAN_ACTIVITY_BUCKET_NUM,  ASH.SQL,	ASH.TOP_LEVEL_SQL_ID,  ASH.DBOP_NAME,  ASH.IS_MONITORED_SQL,  ASH.BUCKET_ACTIVITY_START,  ASH.ACTIVITY_START,  ASH.BUCKET_ACTIVITY_END,  ASH.ACTIVITY_END,  ASH.ACTIVITY_COUNT,
 ASH.ACTIVITY_TYPE,  ASH.OTHER_SQL_ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  MO.PX_SERVER_SET,  ASH.PX_DFO_ACTIVITY_COUNT,  TRUNC(ASH.MOST_ACTIVE_IN_DFO / 10000000000) DFO_MOST_ACTIVE_COUNT,  MOD(TRUNC(ASH.MOST_ACTIVE_IN_DFO / 1000000),  10000) DFO_MOST_ACTIVE_IID,  MOD(ASH.MOST_ACTIVE_IN_DFO,  1000000) DFO_MOST_ACTIVE_SID,  ASH.DFO_DURATION,	ASH.BUCKET_DISTINCT_SAMPLES,  ASH.SQL_BUCKET_DISTINCT_SAMPLES,	MO.PX_SERVER_GROUP,  ASH.PX_STEP_ID,  ASH.PX_DFO_PAIR_TYPE,  ASH.PX_DFO_PAIR_ID,  ASH.PX_STEP_ARG,  ASH.PX_DOP,  ASH.PX_MIN_DOP FROM (SELECT /*+ no_merge */ MD.INST_ID,  MD.SID,  MD.SESSION_SERIAL#,	MD.PX_SERVER_SET,  MD.PX_SERVER_GROUP FROM MONITOR_DATA MD WHERE MD.SID IS NOT NULL OR :B31 = 1) MO,  (SELECT /*+ no_merge */ GVTF.INST_ID,  GVTF.GLOBAL_SAMPLE_ID,  GVTF.IS_PX_SLAVE,	GVTF.SESSION_ID,  GVTF.PLAN_LINE_ID,  GVTF.PLSQL_OBJECT_ID,  GVTF.PLSQL_SUBPROGRAM_ID,	GVTF.ACTIVITY_BUCKET_NUM,  GVTF.PLAN_ACTIVITY_BUCKET_NUM
,  GVTF.SQL,  GVTF.TOP_LEVEL_SQL_ID,  GVTF.DBOP_NAME,  GVTF.IS_MONITORED_SQL,  GVTF.BUCKET_ACTIVITY_START,  GVTF.ACTIVITY_START,  GVTF.BUCKET_ACTIVITY_END,  GVTF.ACTIVITY_END,  GVTF.ACTIVITY_COUNT,  GVTF.ACTIVITY_TYPE,  GVTF.OTHER_SQL_ACTIVITY_TYPE,  GVTF.EVENT_NAME,  GVTF.IMQ_COUNT,  GVTF.WAIT_COUNT,	GVTF.CPU_COUNT,  GVTF.OTHER_SQL_COUNT,	MAX(GVTF.PER_SERVER_DFO_COUNT * 10000000000 + GVTF.INST_ID * 1000000 + GVTF.SESSION_ID) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID) MOST_ACTIVE_IN_DFO,  SUM(GVTF.ACTIVITY_COUNT) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID) PX_DFO_ACTIVITY_COUNT,  GVTF.DFO_DURATION,	GVTF.PX_STEP_ID,  GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID,	GVTF.PX_STEP_ARG,  GVTF.PX_DOP,  GVTF.PX_MIN_DOP,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.ACTIVITY_BUCKET_NUM) BUCKET_DISTINCT_SAMPLES,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.SQL,  GVTF.ACTIVITY_BUCKET_NUM) SQL_BUCKET_DISTINCT_SAMPLES FROM TAB
LE(SYS.GV$(CURSOR( (SELECT USERENV('INSTANCE') INST_ID,  ASH2.GLOBAL_SAMPLE_ID,  CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END ACTIVITY_BUCKET_NUM,	CASE WHEN :B29 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END PLAN_ACTIVITY_BUCKET_NUM,  ASH2.SQL,  ASH2.TOP_LEVEL_SQL_ID,  ASH2.DBOP_NAME,	ASH2.IS_MONITORED_SQL,	ASH2.PLAN_LINE_ID,  ASH2.PLSQL_OBJECT_ID,  ASH2.PLSQL_SUBPROGRAM_ID,  ASH2.ACTIVITY_TYPE,  ASH2.OTHER_SQL_ACTIVITY_TYPE,  ASH2.EVENT_NAME,  ASH2.IS_PX_SLAVE,  ASH2.SESSION_ID,  ASH2.PX_STEP_ID,  ASH2.PX_DFO_PAIR_TYPE,  ASH2.PX_DFO_PAIR_ID,  ASH2.PX_STEP_ARG,  CASE WHEN ASH2.PX_DFO_PAIR_ID IS NOT NULL THEN DECODE(ASH2.PX_DOP,	0,  :B28 ,  ASH2.PX_DOP) ELSE NULL END PX_DOP,	ASH2.PX_MIN_DOP,  :B20 + NUMTODSINTERVAL(:B26 * (ASH2.BUCKET_NUM-1),  'SECOND') BUCKET_ACTIVITY_START,	:B20 + NUMTODSINTERVAL( :B26 * ASH2.BUCKET_NUM - 1,  'SECOND') BUCKET_ACTIVITY_END,  ASH2.ACTIVITY_START,  ASH2.ACTIVITY_END,  ASH2.ACTIVITY_COUNT,  ASH2.IMQ_COUNT,  ASH2.WAIT_COUNT,
ASH2.CPU_COUNT,  ASH2.OTHER_SQL_COUNT,	SUM(ASH2.ACTIVITY_COUNT) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE,  DECODE(ASH2.PX_DFO_PAIR_ID,  NULL,  NULL,  ASH2.SESSION_ID)) PER_SERVER_DFO_COUNT,  CEIL((MAX(ASH2.MAX_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE) - MIN(ASH2.MIN_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,	ASH2.PX_DFO_PAIR_TYPE)) * 3600 * 24) DFO_DURATION FROM (SELECT ASH1.BUCKET_NUM,  ASH1.GLOBAL_SAMPLE_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.SESSION_ID,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG,  MAX(ASH1.SQL) SQL,	MAX(ASH1.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(ASH1.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(ASH1.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MIN(SAMPLE_DATE) MIN_SAMPLE_DATE,  MAX(SAMPLE_DATE) MAX_SAMPLE_DATE,  MAX(ASH1.IS_PX_SLAVE) IS_PX_SLAVE,	MAX(ASH1.PX_DOP) PX_DOP,  MIN(ASH1.PX_DOP) PX_MIN_DOP,	MIN(ASH1
.SAMPLE_DATE) ACTIVITY_START,  MAX(ASH1.SAMPLE_DATE) ACTIVITY_END,  COUNT(ASH1.SQL) ACTIVITY_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME = 'in memory' THEN 1 ELSE NULL END) IMQ_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE != 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' AND ASH1.ACTIVITY_TYPE != 'Cpu' THEN 1 ELSE NULL END) WAIT_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME IS NULL THEN 1 ELSE NULL END) CPU_COUNT,	COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' THEN 1 ELSE NULL END) OTHER_SQL_COUNT,  MAX(ASH1.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(ASH1.DBOP_NAME) DBOP_NAME FROM ( SELECT (CASE WHEN :B27 &gt; 1 THEN (TRUNC(DELTA_TIME_SECONDS/ :B26 ) + 1) ELSE 1 END) BUCKET_NUM,  ASH00.SQL,  ASH00.SAMPLE_DATE,  NVL2(DUP.C2,  TRUNC(DELTA_TIME_SECONDS/ (:B25 )) + 1,  NULL) GLOBAL_SAMPLE_ID,  NVL2(DUP.C2,  NULL,  ASH00.IS_MONITORED_SQL) IS_MONITORED_SQL,  NVL2(DUP.C2,  NULL,  ASH00.
IN_INMEMORY_QUERY) IN_INMEMORY_QUERY,  NVL2(DUP.C2,  NULL,  ASH00.WAIT_CLASS) WAIT_CLASS,  NVL2(DUP.C2,  NULL,	ASH00.ACTIVITY_TYPE) ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,  ASH00.OTHER_SQL_ACTIVITY_TYPE) OTHER_SQL_ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.EVENT_NAME) EVENT_NAME,  NVL2(DUP.C2,  NULL,  ASH00.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  NVL2(DUP.C2,  NULL,  ASH00.DBOP_NAME) DBOP_NAME,  NVL2(DUP.C2,  NULL,  ASH00.IS_PX_SLAVE) IS_PX_SLAVE,  NVL2(DUP.C2,  NULL,  ASH00.SESSION_ID) SESSION_ID,  NVL2(DUP.C2,  NULL,	ASH00.PLSQL_OBJECT_ID) PLSQL_OBJECT_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_SUBPROGRAM_ID) PLSQL_SUBPROGRAM_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLAN_LINE_ID) PLAN_LINE_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ID) PX_STEP_ID,  NVL2(DUP.C2,  NULL,	ASH00.PX_STEP_ARG) PX_STEP_ARG,  NVL2(DUP.C2,  NULL,  ASH00.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  NVL2(DUP.C2,  NULL,  ASH00.PX_DOP) PX_DOP FROM (SELECT 1 C1,  NULL C2 FROM V$DUAL U
NION ALL SELECT 1 C1,  1 C2 FROM V$DUAL) DUP,  (SELECT /*+ no_merge */ 1 C1,  ASH000.SAMPLE_DATE,  ASH000.IS_MONITORED_SQL,  ((EXTRACT(SECOND FROM(DELTA_TIME)) + EXTRACT(MINUTE FROM(DELTA_TIME)) * 60 + EXTRACT(HOUR FROM(DELTA_TIME)) * 3600 + EXTRACT(DAY FROM(DELTA_TIME)) * 86400)) DELTA_TIME_SECONDS,  ASH000.IN_INMEMORY_QUERY,  ASH000.WAIT_CLASS,  DECODE(ASH000.IS_MONITORED_SQL,  1,  NVL(ASH000.WAIT_CLASS,  'Cpu'),  DECODE(SQL_ID,  NULL,  'Non SQL',  'Other SQL Execution')) ACTIVITY_TYPE,  NVL(ASH000.WAIT_CLASS,  'Cpu') OTHER_SQL_ACTIVITY_TYPE,	DECODE(:B24 ,  1,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 THEN NVL(ASH000.EVENT,  DECODE(ASH000.IN_INMEMORY_QUERY,  'Y',  'in memory',  ASH000.EVENT)) WHEN ASH000.SQL_ID IS NOT NULL THEN 'sql_id: ' || ASH000.SQL_ID WHEN ASH000.CALL_NAME IS NOT NULL THEN 'call: ' || ASH000.CALL_NAME ELSE 'anonymous: '|| ASH000.EVENT END,  NULL) EVENT_NAME,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 AND (NVL(ASH000.SQL_ID,  :B9 ) = :B9 OR NVL(ASH000.DBOP_NAME,  :B6 )
= :B6 ) THEN 'this' WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.SQL_ID IS NOT NULL AND ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID THEN ASH000.TOP_LEVEL_SQL_ID WHEN ASH000.SQL_ID IS NOT NULL THEN ASH000.SQL_ID ELSE NVL(CALL_NAME,  'anonymous') END SQL,  CASE WHEN ASH000.IS_PX_SLAVE = 0 AND (ASH000.SQL_ID IS NULL OR ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID) THEN ASH000.TOP_LEVEL_SQL_ID END TOP_LEVEL_SQL_ID,  ASH000.DBOP_NAME,  ASH000.IS_PX_SLAVE,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL != 1 THEN 65536 ELSE ASH000.SESSION_ID END SESSION_ID,	DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_OBJECT_ID,  NULL) PLSQL_OBJECT_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_SUBPROGRAM_ID,	NULL) PLSQL_SUBPROGRAM_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.SQL_PLAN_LINE_ID,  NULL) PLAN_LINE_ID,	DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ID,  NULL) PX_STEP_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL = 1 AND ASH000.PX_STEP_ID IN (1,  2,  3
) THEN ASH000.PX_STEP_ARG ELSE NULL END PX_DFO_PAIR_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 0 OR ASH000.IS_MONITORED_SQL != 1 THEN NULL WHEN ASH000.PX_STEP_ID = 1 THEN 1 WHEN ASH000.PX_STEP_ID IN (2,  3) THEN 0 ELSE NULL END PX_DFO_PAIR_TYPE,	DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ARG,  NULL) PX_STEP_ARG,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_DOP,  NULL) PX_DOP FROM (SELECT ASH0.*,  CASE WHEN ASH0.IS_TARGET_SQL = 1 OR (ASH0.IS_PX_SLAVE = 1 AND ((NVL(ASH0.TOP_LEVEL_SQL_ID,  ASH0.SQL_ID) IS NOT NULL AND NVL(ASH0.TOP_LEVEL_SQL_ID,  ASH0.SQL_ID) = :B9 ) OR (SQL_ID IS NULL AND :B23 = 'Y'))) THEN 1 ELSE 0 END IS_MONITORED_SQL FROM (SELECT (CASE WHEN (ASH.SQL_ID = :B9 AND ASH.SQL_EXEC_ID = :B7 AND ASH.SQL_EXEC_START = :B8 ) THEN 1 ELSE 0 END) IS_TARGET_SQL,  ASH.SQL_ID,  ASH.SQL_PLAN_LINE_ID,  ASH.PLSQL_OBJECT_ID,	ASH.PLSQL_SUBPROGRAM_ID,  ASH.TOP_LEVEL_SQL_ID,  DECODE(ASH.SQL_ID,  NULL,  ASH.TOP_LEVEL_CALL_NAME,  NULL) CALL_NAME,	ASH.EVENT,  ASH.IN_INMEMORY_QUERY,  ASH.
WAIT_CLASS,  ASH.SQL_EXEC_ID,  ASH.SQL_EXEC_START,  ASH.DBOP_NAME,  ASH.DBOP_EXEC_ID,  ASH.SESSION_ID,	ASH.SESSION_SERIAL#,  CASE WHEN QC_INSTANCE_ID IS NOT NULL AND (ASH.SESSION_ID != ASH.QC_SESSION_ID OR ASH.SESSION_SERIAL# != ASH.QC_SESSION_SERIAL# OR USERENV('instance') != ASH.QC_INSTANCE_ID) THEN 1 ELSE 0 END IS_PX_SLAVE,  SAMPLE_TIME - CAST(:B20 AS TIMESTAMP) DELTA_TIME,  CAST(FROM_TZ(ASH.SAMPLE_TIME,  DBTIMEZONE) AS DATE) SAMPLE_DATE,	TRUNC(MOD(PX_FLAGS/65536,  32)) PX_STEP_ID,  MOD(PX_FLAGS,  65536) PX_STEP_ARG,  TRUNC(PX_FLAGS/2097152) PX_DOP FROM V$ALL_ACTIVE_SESSION_HISTORY ASH WHERE ((ASH.SESSION_ID = :B19 AND ASH.SESSION_SERIAL# = :B18 AND USERENV('INSTANCE') = :B17 ) OR (ASH.QC_SESSION_ID IS NOT NULL AND ASH.QC_SESSION_ID = :B19 AND ASH.QC_SESSION_SERIAL# = :B18 AND ASH.QC_INSTANCE_ID = :B17 )) AND SAMPLE_TIME BETWEEN :B16 AND :B15 ) ASH0 WHERE (ASH0.SAMPLE_DATE BETWEEN :B20 + 1/24/3600 AND :B22 - 1/24/3600 OR (ASH0.SQL_ID = :B9 AND ASH0.SQL_EXEC_START = :B8 AND ASH0.SQ
L_EXEC_ID = :B7 ) OR (ASH0.DBOP_NAME = :B6 AND ASH0.DBOP_EXEC_ID = :B5 )) AND (:B21 IS NULL OR ASH0.SQL_PLAN_LINE_ID = :B21 ) AND (ASH0.IS_PX_SLAVE = 0 OR ASH0.SQL_ID IS NOT NULL)) ASH000 ) ASH00 WHERE ASH00.C1 = DUP.C1) ASH1 WHERE ASH1.BUCKET_NUM &gt; 0 AND ASH1.BUCKET_NUM &lt;= :B27 GROUP BY USERENV('INSTANCE'),  ASH1.GLOBAL_SAMPLE_ID,  ASH1.BUCKET_NUM,  ASH1.SESSION_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG) ASH2)))) GVTF WHERE GVTF.INST_ID BETWEEN :B11 AND :B10 ) ASH WHERE ASH.GLOBAL_SAMPLE_ID IS NULL AND ASH.SESSION_ID = MO.SID(+) AND ASH.INST_ID = MO.INST_ID(+)) AD0),	RESPONSE_TIME_DATA AS (SELECT ADH.BUCKET_NUM,  ADH.SQL_ROWNUM,	ADH.SQL,  ADH.TOP_LEVEL_SQL_ID,  ADH.DBOP_NAME,  ADH.PX_ID,  DECODE( ADH.PX_STEP_ID,  NULL,  NULL,  0,	NULL,  1,  'PX Server(s) - Executing Parent DFO',  2,  'PX Server(s) - Executing Child DFO',  3,  'PX Server(s)
- Sampling Child DFO',	4,  'PX Server(s) - Joining Group',  5,  'QC - Scheduling Child DFO',  6,  'QC - Scheduling Parent DFO',  7,  'QC - Initializing Objects',  8,	'QC - Flushing Objects',  9,  'QC - Allocating Slaves',  10,  'QC - Initializing Granules',  11,  'PX Server(s) - Parsing Cursor',  12,  'PX Server(s) - Executing Cursor',  13,  'PX Server(s) - Preparing Transaction',  14,	'PX Server(s) - Joining Transaction',  15,  'PX Server(s) - Load Commit',  16,	'PX Server(s) - Aborting Transaction',	17,  'QC - Executing Child DFO',  18,  'QC - Executing Parent DFO',  'PX Step - ' || PX_STEP_ID) PX_STEP_ID,  ADH.PX_STEP_ARG,	ADH.PX_DFO_PAIR_ID,  ADH.PX_DOP,  ADH.PX_MIN_DOP,  ADH.DFO_MOST_ACTIVE_IID,  ADH.DFO_MOST_ACTIVE_SID,  ADH.DFO_MOST_ACTIVE_COUNT,  ADH.ACTIVITY_START,	ADH.ACTIVITY_END,  ADH.ACTIVITY_TYPE,  ADH.OTHER_SQL_ACTIVITY_TYPE,  ADH.EVENT_NAME,  ADH.PLAN_LINE_ID,  ADH.PLSQL_OBJECT_ID,  ADH.PLSQL_SUBPROGRAM_ID,  CASE WHEN PLSQL_ROWNUM = 1 AND ADH.PLSQL_OBJECT_ID IS N
OT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = ADH.PLSQL_OBJECT_ID AND P.SUBPROGRAM_ID = ADH.PLSQL_SUBPROGRAM_ID),  'Unavailable') ELSE NULL END PLSQL_NAME,  ADH.ACTIVITY_COUNT,  ADH.BUCKET_ACTIVE_SECONDS,  ADH.BUCKET_IDLE_SECONDS,  (CASE WHEN ADH.IS_MONITORED_SQL = 0 THEN ADH.ACTIVE_SECONDS WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_CPU_HEIGHT &gt;= :B34 THEN DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  (ADH.DFO_PAIR_ACTIVITY_HEIGHT / ADH.DFO_PAIR_CPU_HEIGHT) * ADH.DFO_PAIR_TOTAL_SECONDS,  0) WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  (ADH.DFO_PAIR_ACTIVITY_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT))) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_AC
TIVITY_HEIGHT) / ADH.PX_DOP ELSE ADH.ACTIVE_SECONDS END) RESP_TIME,  (CASE WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * (ADH.DFO_PAIR_IDLE_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT)) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_IDLE_HEIGHT) / ADH.PX_DOP ELSE 0 END) DFO_PAIR_IDLE_RESP_TIME,  ADH.DFO_PAIR_ACTIVITY_HEIGHT,	ADH.DFO_PAIR_CPU_HEIGHT,  ADH.DFO_PAIR_IDLE_HEIGHT,  ADH.DFO_PAIR_TOTAL_HEIGHT,  ADH.DFO_PAIR_CPU_ACTIVITY,  ADH.DFO_PAIR_TOTAL_SECONDS FROM (SELECT ADH_1.*,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.PLSQL_OBJECT_ID,  ADH_1.PLSQL_SUBPROGRAM_ID ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) PLSQL_ROWNUM,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.SQL ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) SQL_ROWNUM,
 (CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP - ADH_1.DFO_PAIR_TOTAL_HEIGHT ELSE 0 END) DFO_PAIR_IDLE_HEIGHT,  (CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP ELSE ADH_1.DFO_PAIR_TOTAL_HEIGHT END) DFO_PAIR_TOTAL_HEIGHT_ADJ FROM (SELECT ADH_0.*,  (CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_TOTAL_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_TOTAL_HEIGHT,  (CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_CPU_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_CPU_HEIGHT,  (CASE WHEN ADH_0.PX_DFO_PAIR_ID IS NOT NULL AND ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.ACTIVITY_COUNT * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_ACTIVITY_HEIGHT FROM (SELECT AD3.*,  (SUM(DECOD
E(AD3.PX_DFO_PAIR_ID,  NULL,  0,  AD3.ACTIVE_SECONDS)) OVER(PARTITION BY DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.BUCKET_NUM),  DECODE(AD3.PX_DFO_PAIR_ID,  NULL,	NULL,  AD3.PX_STEP_ARG))) DFO_PAIR_TOTAL_SECONDS FROM (SELECT AD2.*,  CASE WHEN AD2.IS_MONITORED_SQL = 0 THEN SQL_BUCKET_DISTINCT_SAMPLES * :B25 WHEN AD2.PX_ID IS NULL THEN AD2.ACTIVITY_COUNT * :B25 WHEN AD2.BUCKET_PARALLEL_MON_ACTIVITY &gt; 0 THEN (AD2.ACTIVITY_COUNT * AD2.BUCKET_PARALLEL_MON_SECONDS) / AD2.BUCKET_PARALLEL_MON_ACTIVITY ELSE 0 END ACTIVE_SECONDS,  CASE WHEN AD2.BUCKET_INTERVAL &gt; BUCKET_ACTIVE_SECONDS THEN AD2.BUCKET_INTERVAL - BUCKET_ACTIVE_SECONDS ELSE 0 END BUCKET_IDLE_SECONDS FROM (SELECT AD1.*,  (AD1.BUCKET_SERIAL_MON_ACTIVITY * :B25 ) BUCKET_SERIAL_MON_SECONDS,  (AD1.BUCKET_TOTAL_MON_ACTIVITY - AD1.BUCKET_SERIAL_MON_ACTIVITY) BUCKET_PARALLEL_MON_ACTIVITY,  (AD1.BUCKET_ACTIVE_SECONDS - (AD1.BUCKET_OTHER_ACTIVITY + AD1.BUCKET_SERIAL_MON_ACTIVITY) * :B25 ) BUCKET_PARALLEL_MON_SECONDS,  (AD1.BUCKET_O
THER_ACTIVITY * :B25 ) BUCKET_OTHER_SECONDS,  DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,	SUM(AD1.ACTIVITY_COUNT) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_TOTAL_ACTIVITY,  DECODE(AD1.PX_DFO_PAIR_ID,  NULL,	NULL,  SUM(DECODE(AD1.ACTIVITY_TYPE,  'Cpu',  AD1.ACTIVITY_COUNT,  0)) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_CPU_ACTIVITY FROM (SELECT AD01.*,  NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  1,  AD01.ACTIVITY_COUNT,	NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0) BUCKET_TOTAL_MON_ACTIVITY,  (NVL(SUM(CASE WHEN AD01.IS_MONITORED_SQL = 1 AND AD01.PX_ID IS NULL THEN AD01.ACTIVITY_COUNT ELSE NULL END) OVER(PARTITION BY AD01.BUCKET_NUM),  0)) BUCKET_SERIAL_MON_ACTIVITY,  (NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  0,  AD01.SQL_BUCKET_DISTINCT_SAMPLES,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0)) BUCKET_OTHER_ACTIVITY,  (NVL(AD01.BUCKET_DISTINCT_SAMPLES,  0) *
:B25 ) BUCKET_ACTIVE_SECONDS,  DECODE(AD01.BUCKET_NUM,	:B27 ,	MOD(:B32 ,  :B26 ),  :B26 ) BUCKET_INTERVAL FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.PX_ID,  AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.PLAN_LINE_ID,	AD0.PX_STEP_ID,  AD0.PX_STEP_ARG,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  MAX(AD0.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(AD0.SQL) SQL,  MAX(AD0.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(AD0.DBOP_NAME) DBOP_NAME,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,  NULL,  NULL,  AD0.DFO_MOST_ACTIVE_IID)) DFO_MOST_ACTIVE_IID,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,  NULL,  NULL,	AD0.DFO_MOST_ACTIVE_SID)) DFO_MOST_ACTIVE_SID,	SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT,  MAX(PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,	MAX(PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MAX(AD0.PX_DOP) PX_DOP,  MIN(AD0.PX_MIN_DOP) PX_MIN_DOP,  MAX(AD0.B
UCKET_DISTINCT_SAMPLES) BUCKET_DISTINCT_SAMPLES,  MAX(AD0.SQL_BUCKET_DISTINCT_SAMPLES) SQL_BUCKET_DISTINCT_SAMPLES FROM (SELECT AD00.*,  (CASE WHEN AD00.IS_MONITORED_SQL = 1 AND (AD00.SESSION_ID != :B19 OR AD00.INST_ID != :B17 ) THEN AD00.PX_SERVER_GROUP END) PX_ID FROM ASH_DATA AD00 WHERE :B33 = 1 ) AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.PX_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.PX_STEP_ID,	AD0.PX_STEP_ARG ) AD01) AD1) AD2) AD3) ADH_0) ADH_1) ADH) SELECT /*+ no_monitor no_xml_query_rewrite
		 opt_param('_gby_hash_aggregation_enabled',  'false') */ XMLELEMENT( &quot;sql_monitor_report&quot;,  XMLATTRIBUTES(:B59 AS &quot;version&quot;,  TO_CHAR(:B58 ,  :B12 ) AS &quot;sysdate&quot;),  XMLELEMENT( &quot;report_parameters&quot;,  NULL,  CASE WHEN :B57 IS NOT NULL THEN XMLFOREST( :B57 AS &quot;dbop_name&quot;,  :B56 AS &quot;dbop_exec_id&quot;) ELSE XMLFOREST( :B55 AS
 &quot;sql_id&quot;,  :B54 AS &quot;sql_exec_id&quot;) END,  XMLFOREST( :B53 AS &quot;session_id&quot;,  :B52 AS &quot;session_serial&quot;,  TO_CHAR(:B51 ,  :B12 ) AS &quot;sql_exec_start&quot;,  :B27 AS &quot;bucket_count&quot;,	TO_CHAR(:B50 ,	:B12 ) AS &quot;interval_start&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;interval_end&quot;,  DECODE(:B49 ,  'Y',  :B48 ,  NULL) AS &quot;auto_refresh&quot;,  :B47 AS &quot;base_path&quot;),  CASE WHEN :B23 = 'Y' AND :B46 IS NOT NULL AND NOT (:B4 = 1 AND :B3 IS NULL AND :B2 IS NULL AND :B1 IS NULL) THEN XMLELEMENT( &quot;parallel_filter&quot;,  NULL,	XMLFOREST( DECODE(:B4 ,  1,  'yes',  'no') AS &quot;qc&quot;,  :B3 AS &quot;server_group&quot;,  :B2 AS &quot;server_set&quot;,  :B1 AS &quot;server_number&quot;)) ELSE NULL END),  CASE WHEN :B14 = 1 THEN XMLELEMENT( &quot;derived_parameters_testing&quot;,  NULL,  XMLFOREST(:B11 AS &quot;instance_id_low&quot;,  :B10 AS &quot;instance_id_high&quot;,	:B26 AS &quot;bucket_interval_sec&quot;,  :B32 A
S &quot;interval_second&quot;,	:B27 AS &quot;bucket_calc_count&quot;,	:B45 AS &quot;bucket_calc_max_count&quot;,  :B13 AS &quot;sel_sqltext&quot;)) ELSE NULL END,  (SELECT XMLCONCAT( CASE WHEN :B46 IS NULL AND :B67 IS NULL THEN XMLELEMENT( &quot;target&quot;,  XMLATTRIBUTES(:B17 AS &quot;instance_id&quot;,  :B19 AS &quot;session_id&quot;,	:B18 AS &quot;session_serial&quot;,  NVL2(:B6 ,  NULL,	:B9 ) AS &quot;sql_id&quot;,  NVL2(:B6 ,  NULL,  TO_CHAR(:B8 ,	:B12 )) AS &quot;sql_exec_start&quot;,	NVL2(:B6 ,  NULL,  :B7 ) AS &quot;sql_exec_id&quot;,  NVL2(:B6 ,  :B6 ,  NULL) AS &quot;dbop_name&quot;,  NVL2(:B6 ,  :B5 ,  NULL) AS &quot;dbop_exec_id&quot;,  NVL2(:B6 ,  TO_CHAR(:B8 ,  :B12 ),  NULL) AS &quot;dbop_exec_start&quot;,  NVL2(:B6 ,	NULL,  MAX_PLAN_HASH_VALUE) AS &quot;sql_plan_hash&quot;,  NVL2(:B6 ,  NULL,  MAX_FULL_PLAN_HASH_VALUE) AS &quot;sql_full_plan_hash&quot;,  MAGG.DB_UNIQUE_NAME AS &quot;db_unique_name&quot;,	MAGG.PLATFORM_NAME AS &quot;db_platform_name&quot;,  MAG
G.HOST_NAME AS &quot;report_host_name&quot;),  NVL2(SUM_SERVERS_REQUESTED,  XMLELEMENT( &quot;servers_requested&quot;,	NULL,  SUM_SERVERS_REQUESTED),	NULL),	NVL2(SUM_SERVERS_ALLOCATED,  XMLELEMENT( &quot;servers_allocated&quot;,  NULL,	SUM_SERVERS_ALLOCATED),  NULL),  NVL2(MAX_USERID,  XMLELEMENT( &quot;user_id&quot;,  NULL,  MAX_USERID),  NULL),  NVL2(MAX_USERNAME,  XMLELEMENT( &quot;user&quot;,  NULL,  MAX_USERNAME),  NULL),  NVL2(MAX_CON_ID,  XMLELEMENT( &quot;con_id&quot;,  NULL,  MAX_CON_ID),  NULL),  NVL2(MAX_CON_NAME,	XMLELEMENT( &quot;con_name&quot;,  NULL,  MAX_CON_NAME),  NULL),  NVL2(MAX_PROGRAM,  XMLELEMENT( &quot;program&quot;,  NULL,  MAX_PROGRAM),  NULL),  NVL2(MAX_MODULE,  XMLELEMENT( &quot;module&quot;,	NULL,  MAX_MODULE),  NULL),  NVL2(MAX_ACTION,  XMLELEMENT( &quot;action&quot;,	NULL,  MAX_ACTION),  NULL),  NVL2(MAX_SERVICE_NAME,  XMLELEMENT( &quot;service&quot;,  NULL,  MAX_SERVICE_NAME),  NULL),  NVL2(MAX_CLIENT_ID,  XMLELEMENT( &quot;client_id&quot;,  NULL,
  MAX_CLIENT_ID),  NULL),  NVL2(MAX_CLIENT_INFO,  XMLELEMENT( &quot;client_info&quot;,	NULL,  MAX_CLIENT_INFO),  NULL),  NVL2(MAX_PL_ENTRY_OID,  XMLELEMENT( &quot;plsql_entry_object_id&quot;,  NULL,  MAX_PL_ENTRY_OID),  NULL),  NVL2(MAX_PL_ENTRY_PROGID,	XMLELEMENT( &quot;plsql_entry_subprogram_id&quot;,  NULL,  MAX_PL_ENTRY_PROGID),  NULL),  NVL2(MAX_PL_ENTRY_NAME,  XMLELEMENT( &quot;plsql_entry_name&quot;,  NULL,  MAX_PL_ENTRY_NAME),  NULL),  NVL2(MAX_PL_OID,  XMLELEMENT( &quot;plsql_object_id&quot;,  NULL,  MAX_PL_OID),  NULL),  NVL2(MAX_PL_PROGID,	XMLELEMENT( &quot;plsql_subprogram_id&quot;,  NULL,  MAX_PL_PROGID),  NULL),  NVL2(MAX_PL_NAME,  XMLELEMENT( &quot;plsql_name&quot;,  NULL,  MAX_PL_NAME),  NULL),  CASE WHEN (:B13 = 0 OR :B6 IS NOT NULL) THEN NULL ELSE XMLELEMENT( &quot;sql_fulltext&quot;,  XMLATTRIBUTES( NVL2(:B65 ,  'Y',  :B66 ) AS &quot;is_full&quot;),  NVL2(:B65 ,  :B65 ,  SQLMON_TEXT)) END,  XMLELEMENT( &quot;status&quot;,  NULL,  MAX_STATUS),  XMLELEMENT( &quot;re
fresh_count&quot;,  NULL,  SUM_REFRESH_COUNT),	XMLELEMENT( &quot;first_refresh_time&quot;,  NULL,  TO_CHAR(MIN_FIRST_REFRESH_TIME,  :B12 )),  XMLELEMENT( &quot;last_refresh_time&quot;,  NULL,  TO_CHAR(:B58 ,  :B12 )),  XMLELEMENT( &quot;duration&quot;,  NULL,  GREATEST(:B64 ,  LEAST(MAX_ELAPSED_TIME/1000000,	1),  CEIL(MAX_QUEUING_TIME/1000000))),	DECODE(MAX_RM_INFO,  '00/00/0000 00:00:00',  NULL,  XMLTYPE(SUBSTR(MAX_RM_INFO,  20))),  CASE WHEN (:B62 = 'Y') THEN XMLELEMENT( &quot;adaptive_plan&quot;,  XMLATTRIBUTES(:B63 AS &quot;is_final&quot;),  :B62 ) ELSE NULL END ) END,	XMLELEMENT( &quot;stats&quot;,	XMLATTRIBUTES('monitor' AS &quot;type&quot;),  DECODE(NVL(SUM_ELAPSED_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),	SUM_ELAPSED_TIME)),  DECODE(NVL(MAX_QUEUING_TIME,  0),	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX_QUEUING_TIME)),  DECODE(NVL(SUM_CPU_TIME,  0),  0,  NU
LL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  SUM_CPU_TIME)),  DECODE(NVL(SUM_USER_IO_WAIT_TIME,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),	SUM_USER_IO_WAIT_TIME)),  DECODE(NVL(SUM_APPLICATION_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  SUM_APPLICATION_WAIT_TIME)),  DECODE(NVL(SUM_CONCURRENCY_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  SUM_CONCURRENCY_WAIT_TIME)),  DECODE(NVL(SUM_CLUSTER_WAIT_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  SUM_CLUSTER_WAIT_TIME)),  DECODE(NVL(SUM_PLSQL_EXEC_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),	SUM_PLSQL_EXEC_TIME)),	DECODE(NVL(SUM_JAVA_EXEC_TIME,	0),  0,  NULL,	XMLELEME
NT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  SUM_JAVA_EXEC_TIME)),  DECODE(NVL(SUM_OTHER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  SUM_OTHER_WAIT_TIME)),  DECODE(NVL(SUM_FETCHES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  SUM_FETCHES)),  DECODE(NVL(SUM_BUFFER_GETS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  SUM_BUFFER_GETS)),  DECODE(NVL(SUM_READ_REQS,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_WRITE_REQS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  SUM_WRITE_REQS)),  DECODE(NVL(SUM_READ_REQS,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_READ_
BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  SUM_READ_BYTES)),  DECODE(NVL(SUM_WRITE_REQS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  SUM_WRITE_REQS)),  DECODE(NVL(SUM_WRITE_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  SUM_WRITE_BYTES)),  DECODE(NVL(SUM_IO_UNC_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  SUM_IO_UNC_BYTES)),  DECODE(NVL(SUM_IO_ELIG_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  SUM_IO_ELIG_BYTES)),	DECODE(NVL(SUM_IO_RET_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  SUM_IO_RET_BYTES)),  CASE WHEN SUM_IO_INTER_BYTES IS NULL OR SUM_IO_BYTES = 0 OR SUM_IO_INTER_BYTES = SUM_IO_BYTES OR NVL(SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELS
E XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),	ROUND(SUM_IO_BYTES / DECODE(SUM_IO_INTER_BYTES,  0,  1,  SUM_IO_INTER_BYTES),  2)) END,  CASE WHEN NVL(SUM_IO_ELIG_BYTES,  0) = 0 OR SUM_IO_BYTES = 0 OR SUM_IO_UNC_BYTES = SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,	ROUND(100* (GREATEST(SUM_IO_UNC_BYTES,	SUM_IO_ELIG_BYTES) - SUM_IO_RET_BYTES) / SUM_IO_ELIG_BYTES,  2))) END),  CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN SUM(ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLAGG( XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),	AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME)) ELSE NULL END FROM (SELECT AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,	AD0.EVEN
T_NAME) AD1) ELSE NULL END,  NVL2(MAX_ERROR_NUMBER,  XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MAX_ERROR_NUMBER AS &quot;number&quot;,  MAX_ERROR_FACILITY AS &quot;facility&quot;),  MAX_ERROR_MESSAGE),  NULL),  CASE WHEN :B61 = 1 AND MAGG.QC_HAS_BINDS_XML = 'Y' THEN (SELECT XMLTYPE(BINDS_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = :B17 AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END,	CASE WHEN :B60 = 1 AND MAGG.QC_HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = MAGG.MAX_INST_ID AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) FROM MONITOR_AGG MAGG),  CASE WHEN :B44 = 1 THEN (SELECT CASE WHEN AT.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,	XMLATTRIBUTES( :B41 AS
&quot;ash_missing_seconds&quot;,  TO_CHAR(AT.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,	TO_CHAR(AT.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AT.ACTIVITY_END - AT.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  AT.ACTIVITY_COUNT AS &quot;count&quot;,  AT.IMQ_COUNT AS &quot;imq_count&quot;,  AT.WAIT_COUNT AS &quot;wait_count&quot;,  AT.CPU_COUNT AS &quot;cpu_count&quot;,  DECODE(AT.OTHER_SQL_COUNT,  0,  NULL,  AT.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AT.ACTIVITY_TOTAL,	AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,
  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,	SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,	SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) AT,  (SELECT CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22
,  :B12 ) AS &quot;end_time&quot;,  ROUND(( :B22 - :B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  SUM(ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(IMQ_COUNT) IMQ_COUNT,  SUM(WAIT_COUNT) WAIT_COUNT,  SUM(CPU_COUNT) CPU_COUNT,  SUM(OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),	AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.A
CTIVITY_TYPE,  AD0.EVENT_NAME,	MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,	MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN AH.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  :B41 AS &quot;ash_missing_seconds&quot;,  TO_CHAR(AH.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(AH.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AH.ACTIVITY_END - AH.ACTIVITY_START) * 3600 * 2
4) + 1 AS &quot;duration&quot;,  :B25 AS &quot;sample_interval&quot;,  :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,	ROUND((:B22 - :B20 ) *3600*24) + 1 AS &quot;bucket_duration&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B34 AS &quot;total_cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD2.ACTIVITY_START) ACTIVITY_START,	MAX(AD2.ACTIVITY_END) ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET_XML) ORDER BY AD2.BUCKET_NUM) GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  MAX(AD1.BUCKET_IDLE_SECONDS) BUCKET
_IDLE_SECONDS,	XMLAGG( XMLCONCAT( CASE WHEN AD1.DFO_PAIR_IDLE_RESP_TIME != 0 AND DFO_PAIR_ROWNUM = 1 THEN XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( 'Parallel Skew' AS &quot;class&quot;,  AD1.PX_STEP_ARG AS &quot;line&quot;,  AD1.PX_ID AS &quot;px&quot;,	ROUND(AD1.DFO_PAIR_IDLE_RESP_TIME,  2) AS &quot;rt&quot;),  0) ELSE NULL END,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( NVL(AD1.OTHER_SQL,  AD1.RPI) AS &quot;sql&quot;,  AD1.NON_SQL AS &quot;non_sql&quot;,	AD1.CLASS AS &quot;class&quot;,  AD1.OTHER_SQL_CLASS AS &quot;other_sql_class&quot;,  AD1.EVENT AS &quot;event&quot;,  AD1.PLAN_LINE_ID AS &quot;line&quot;,  NVL2(AD1.PLSQL_OBJECT_ID,  AD1.PLSQL_OBJECT_ID||'.'|| AD1.PLSQL_SUBPROGRAM_ID,  NULL) AS &quot;plsql_id&quot;,  AD1.PLSQL_NAME AS &quot;plsql_name&quot;,  CASE WHEN AD1.SQL_ROWNUM = 1 THEN AD1.TOP_LEVEL_SQL_ID END AS &quot;top_sql_id&quot;,	CASE WHEN AD1.DBOP_NAME IS NOT NULL THEN AD1.DBOP_NAME END AS &quot;dbop_name&quot;,  CASE WHEN AD1.DFO_MOST_ACTIVE_IID
IS NOT NULL AND :B68 = 'Y' THEN AD1.DFO_MOST_ACTIVE_IID END AS &quot;skew_iid&quot;,  DECODE(AD1.DFO_MOST_ACTIVE_COUNT,  NULL, NULL,  AD1.DFO_MOST_ACTIVE_SID) AS &quot;skew_sid&quot;,  AD1.DFO_MOST_ACTIVE_COUNT AS &quot;skew_count&quot;,  DECODE(AD1.PX_DOP,  :B28 ,  NULL,  AD1.PX_DOP) AS &quot;dop&quot;,  DECODE(AD1.PX_DOP,  AD1.PX_MIN_DOP,	NULL,  AD1.PX_MIN_DOP) AS &quot;min_dop&quot;,	AD1.PX_ID AS &quot;px&quot;,  AD1.PX_STEP_ID AS &quot;step&quot;,  AD1.PX_STEP_ARG AS &quot;arg&quot;,	DECODE(AD1.ACTIVITY_COUNT,  AD1.RESP_TIME,  NULL,  ROUND(AD1.RESP_TIME,  2)) AS &quot;rt&quot;),  AD1.ACTIVITY_COUNT)) ORDER BY AD1.PX_STEP_ID,  AD1.PX_STEP_ARG,  AD1.DFO_PAIR_ROWNUM) ACTIVITY_BUCKET_XML FROM (SELECT AD01.*,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.ACTIVITY_TYPE END CLASS,	CASE WHEN (AD01.ACTIVITY_TYPE = 'Other SQL Execution' OR AD01.ACTIVITY_TYPE = 'Non SQL') THEN AD01.OTHER_SQL_ACTIVITY_TYPE END OTHER_SQL_CLASS,  CASE WH
EN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.EVENT_NAME END EVENT,  CASE WHEN AD01.SQL IN ('this',  'anonymous') THEN NULL ELSE AD01.SQL END RPI,  DECODE(AD01.ACTIVITY_TYPE,  'Other SQL Execution',  SUBSTR(AD01.EVENT_NAME,	9),  NULL) OTHER_SQL,  DECODE(AD01.ACTIVITY_TYPE,  'Non SQL',  AD01.EVENT_NAME,  NULL) NON_SQL,  ROW_NUMBER() OVER(PARTITION BY AD01.BUCKET_NUM,  AD01.PX_DFO_PAIR_ID ORDER BY AD01.ACTIVITY_TYPE,  AD01.EVENT_NAME,  AD01.PLAN_LINE_ID) DFO_PAIR_ROWNUM FROM RESPONSE_TIME_DATA AD01) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,  CASE WHEN :B23 = 'Y' THEN (SELECT XMLELEMENT( &quot;parallel_info&quot;,  XMLATTRIBUTES( :B17 AS &quot;qc_instance_id&quot;,  MAX_PX_QCSID AS &quot;qc_session_id&quot;,  MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MAX_PX_DOP AS &quot;dop&quot;,  MAX_PX_DOP_INSTANCES AS &quot;max_dop_instances&quot;,  DIST_INST_COUNT AS &quot;inst_count&quot;,  DIST_PX_GROUP_COUNT AS &quot;serv
er_group_count&quot;,  DIST_PX_SET_COUNT AS &quot;server_set_count&quot;),  CASE WHEN :B70 = 1 THEN PX_SESSIONS ELSE NULL END,	CASE WHEN :B68 = 'Y' THEN DECODE(:B69 ,  1,  PX_INSTANCES,  NULL) ELSE NULL END) FROM (SELECT MAX_PX_QCSID,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,  DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,	(SELECT XMLELEMENT( &quot;sessions&quot;,  XMLATTRIBUTES(MAX(PX_SESSION.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_SESSION.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_SESSION.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_SESSION.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_SESSION.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,  MAX(PX_SESSION.MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_SESSION.MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PX_SESSION.MAX_BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_SESSION.MAX_ELAPSED_TIME) AS &quot;max
_elapsed_time&quot;),  XMLAGG(PX_SESSION.PX_SESSION_XML ORDER BY PX_SERVER_GROUP NULLS FIRST,  PX_SERVER_SET,  PX_SERVER#)) FROM (SELECT PX_SERVER_GROUP,  PX_SERVER_SET,  PX_SERVER#,	MAX(PI.MAX_ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(PI.MAX_IO_REQS) MAX_IO_REQS,  MAX(PI.MAX_IO_BYTES) MAX_IO_BYTES,  MAX(PI.MAX_BUFFER_GETS) MAX_BUFFER_GETS,  SUM(PI.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,  SUM(PI.WAIT_COUNT) WAIT_COUNT,  SUM(PI.CPU_COUNT) CPU_COUNT,	SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  XMLELEMENT( &quot;session&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;,  PROCESS_NAME AS &quot;process_name&quot;,  SID AS &quot;session_id&quot;,  SESSION_SERIAL# AS &quot;session_serial&quot;,  PX_SERVER_GROUP AS &quot;server_group&quot;,  PX_SERVER_SET AS &quot;server_set&quot;,  PX_SERVER# AS &quot;server_num&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('el
apsed_time' AS &quot;name&quot;),  MAX(ELAPSED_TIME)),	NULL),	NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MAX(APPLICATION_WAIT_TIME)),  NULL),  NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),	MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),  XMLELEMENT(
&quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),  MAX(OTHER_WAIT_TIME)),  NULL),  NVL2(MAX(FETCHES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_req
s' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MAX(WRITE_BYTES)),	NULL),	NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),	MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),  0) = 0 THEN
NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),	ROUND(MAX(IO_BYTES) / DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,	ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES), 0),  NVL(MAX(IO_ELIG_BYTES), 0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN SUM(PI.ACTIVITY_COUNT) &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;i
mq_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.OTHER_SQL_COUNT)AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),	XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,  PI.EVENT_NAME)) ELSE NULL END,  CASE WHEN :B60 = 1 AND PI.HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = PI.INST_ID AND MON.KEY = PI.KEY AND MON.SID = PI.SID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) PX_SESSION_XML FROM (SELECT MO.HAS_OTHER_XML,  MO.KEY,  MO.INST_ID,  DECODE(MO.PROCESS_NAME,  'ora',  'PX Coordinator',	MO.PROCESS_NAME) PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  AS
H0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  MAX(MO.IO_REQS) MAX_IO_REQS,  MAX(MO.IO_BYTES) MAX_IO_BYTES,  MAX(MO.BUFFER_GETS) MAX_BUFFER_GETS,  MAX(MO.ELAPSED_TIME) MAX_ELAPSED_TIME,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.ACTIVITY_COUNT)) ACTIVITY_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.IMQ_COUNT)) IMQ_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.WAIT_COUNT)) WAIT_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.CPU_COUNT)) CPU_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.OTHER_SQL_COUNT)) OTHER_SQL_COUNT,	MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END,	MAX(DECODE(MO.ELAPSED_TIME,  0,  NULL,	MO.ELAPSED_TIME)) ELAPSED_TIME,  MAX(DECODE(MO.QUEUING_TIME,  0,  NULL,  MO.QUEUING_TIME)) QUEUING_TIME,  MAX(DECODE(MO.CPU_TIME,  0,  NULL,  CPU_TIME)) CPU_TIME,  MAX(DECODE(MO.FETCHES,  0,	NULL,  FETCHES)) FETCHES,  MAX(DECODE(MO.BUFFER_GETS,  0,  NULL,  MO.BUFFER_GETS)) BUFFER_GETS,  MAX(DECODE(MO.I
O_INTER_BYTES,	0,  NULL,  MO.IO_INTER_BYTES)) IO_INTER_BYTES,	MAX(DECODE(MO.READ_REQS,  0,  NULL,  MO.READ_REQS)) READ_REQS,	MAX(DECODE(MO.READ_BYTES,  0,  NULL,  MO.READ_BYTES)) READ_BYTES,  MAX(DECODE(MO.WRITE_REQS,  0,  NULL,  MO.WRITE_REQS)) WRITE_REQS,  MAX(DECODE(MO.WRITE_BYTES,  0,  NULL,  MO.WRITE_BYTES)) WRITE_BYTES,  MAX(DECODE(MO.IO_BYTES,  0,  NULL,	MO.IO_BYTES)) IO_BYTES,  MAX(DECODE(MO.IO_UNC_BYTES,  0,  NULL,  MO.IO_UNC_BYTES)) IO_UNC_BYTES,  MAX(DECODE(MO.IO_ELIG_BYTES,	0,  NULL,  MO.IO_ELIG_BYTES)) IO_ELIG_BYTES,  MAX(DECODE(MO.IO_RET_BYTES,  0,  NULL,  MO.IO_RET_BYTES)) IO_RET_BYTES,  MAX(DECODE(MO.APPLICATION_WAIT_TIME,  0,  NULL,	MO.APPLICATION_WAIT_TIME)) APPLICATION_WAIT_TIME,  MAX(DECODE(MO.CONCURRENCY_WAIT_TIME,  0,  NULL,  MO.CONCURRENCY_WAIT_TIME)) CONCURRENCY_WAIT_TIME,  MAX(DECODE(MO.CLUSTER_WAIT_TIME,  0,  NULL,  MO.CLUSTER_WAIT_TIME)) CLUSTER_WAIT_TIME,  MAX(DECODE(MO.USER_IO_WAIT_TIME,  0,  NULL,  MO.USER_IO_WAIT_TIME)) USER_IO_WAIT_TIME,  MAX(DECOD
E(PLSQL_EXEC_TIME,  0,	NULL,  PLSQL_EXEC_TIME)) PLSQL_EXEC_TIME,  MAX(DECODE(MO.JAVA_EXEC_TIME,  0,  NULL,  MO.JAVA_EXEC_TIME)) JAVA_EXEC_TIME,  MAX(DECODE(MO.OTHER_WAIT_TIME,  0,  NULL,  MO.OTHER_WAIT_TIME)) OTHER_WAIT_TIME FROM MONITOR_DATA MO,  (SELECT ASH1.INST_ID,	ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  SUM(ASH1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH1.IMQ_COUNT) IMQ_COUNT,  SUM(ASH1.WAIT_COUNT) WAIT_COUNT,  SUM(ASH1.CPU_COUNT) CPU_COUNT,  SUM(ASH1.OTHER_SQL_COUNT)OTHER_SQL_COUNT,	MIN(ASH1.ACTIVITY_START) ACTIVITY_START,  MAX(ASH1.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH1 GROUP BY ASH1.INST_ID,  ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,	ASH1.EVENT_NAME) ASH0 WHERE MO.INST_ID = ASH0.INST_ID(+) AND MO.SID = ASH0.SESSION_ID(+) AND (:B70 = 1 OR :B69 = 1) GROUP BY MO.INST_ID,  MO.KEY,  MO.HAS_OTHER_XML,  MO.PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) PI WHERE (:B70 = 1)
GROUP BY PI.INST_ID,  PI.KEY,  PI.HAS_OTHER_XML,  PI.SID,  PI.PROCESS_NAME,  PI.SESSION_SERIAL#,  PI.PX_SERVER_GROUP,  PI.PX_SERVER_SET,  PI.PX_SERVER#) PX_SESSION) PX_SESSIONS,  (SELECT XMLELEMENT( &quot;instances&quot;,  XMLATTRIBUTES( MAX(PX_INSTANCE.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_INSTANCE.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_INSTANCE.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_INSTANCE.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_INSTANCE.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,	MAX(PX_INSTANCE.ELAPSED_TIME) AS &quot;max_elapsed_time&quot;,	MAX(PX_INSTANCE.BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_INSTANCE.IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_INSTANCE.IO_BYTES) AS &quot;max_io_bytes&quot;),  XMLAGG(PX_INSTANCE.PX_INSTANCES_XML ORDER BY INST_ID)) FROM (SELECT PI.INST_ID,  MAX(PI.ELAPSED_TIME) ELAPSED_TIME,  MAX(PI.IO_REQS) IO_REQS,  MAX(PI.IO_BYTES) IO_BYTES,	MAX(PI.BUFFER_GETS) BUFFER_GETS,  SUM(PI
.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,	SUM(PI.WAIT_COUNT) WAIT_COUNT,	SUM(PI.CPU_COUNT) CPU_COUNT,  SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	XMLELEMENT( &quot;instance&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),	MAX(ELAPSED_TIME)),  NULL),  NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name
&quot;),  MAX(APPLICATION_WAIT_TIME)),	NULL),	NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),	MAX(OTHER_WAIT_TIME)),	NULL),	NVL2(MAX(FETCHES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(
'buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),	MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),	NULL),	NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),	NULL),	NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),	MAX(WRITE_BYTES)),  NULL),  NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_EL
IG_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),	0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MAX(IO_BYTES)/ DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),	0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES),  0),  NVL(MAX(IO_ELIG_BYTES),  0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN :B33 = 1 AND SUM(PI
.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,	XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;end_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,	PI.EVENT_NAME)) ELSE NULL END) PX_INSTANCES_XML FROM (SELECT MO.INST_ID,  ASH.ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.ACTIVITY_COUNT,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH
.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  ASH.ACTIVITY_START,	ASH.ACTIVITY_END,  MO.ELAPSED_TIME,  MO.QUEUING_TIME,  MO.CPU_TIME,  MO.APPLICATION_WAIT_TIME,	MO.CONCURRENCY_WAIT_TIME,  MO.CLUSTER_WAIT_TIME,  MO.USER_IO_WAIT_TIME,  MO.PLSQL_EXEC_TIME,  MO.JAVA_EXEC_TIME,  MO.OTHER_WAIT_TIME,  MO.FETCHES,  MO.BUFFER_GETS,  MO.IO_INTER_BYTES,  MO.IO_BYTES,  MO.READ_REQS,  MO.READ_BYTES,  MO.WRITE_REQS,  MO.WRITE_BYTES,  MO.IO_REQS,  MO.IO_UNC_BYTES,  MO.IO_ELIG_BYTES,  MO.IO_RET_BYTES FROM (SELECT MO0.INST_ID,  SUM(MO0.ELAPSED_TIME) ELAPSED_TIME,  SUM(MO0.QUEUING_TIME) QUEUING_TIME,  SUM(MO0.CPU_TIME) CPU_TIME,  SUM(MO0.FETCHES) FETCHES,  SUM(MO0.BUFFER_GETS) BUFFER_GETS,  SUM(MO0.IO_INTER_BYTES) IO_INTER_BYTES,  SUM(MO0.IO_BYTES) IO_BYTES,  SUM(MO0.READ_REQS) READ_REQS,  SUM(MO0.READ_BYTES) READ_BYTES,  SUM(MO0.WRITE_REQS) WRITE_REQS,	SUM(MO0.WRITE_BYTES) WRITE_BYTES,  SUM(MO0.IO_REQS) IO_REQS,  SUM(MO0.IO_UNC_BYTES) IO_UNC_BYTES,  SUM(MO0.IO_ELIG_BYTES) IO_ELIG_BYTES,  SUM(MO0.IO_RET_BYTES)
IO_RET_BYTES,  SUM(MO0.APPLICATION_WAIT_TIME) APPLICATION_WAIT_TIME,  SUM(MO0.CONCURRENCY_WAIT_TIME) CONCURRENCY_WAIT_TIME,  SUM(MO0.CLUSTER_WAIT_TIME) CLUSTER_WAIT_TIME,  SUM(MO0.USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,  SUM(MO0.PLSQL_EXEC_TIME) PLSQL_EXEC_TIME,  SUM(MO0.JAVA_EXEC_TIME) JAVA_EXEC_TIME,  SUM(MO0.OTHER_WAIT_TIME) OTHER_WAIT_TIME FROM MONITOR_DATA MO0 GROUP BY MO0.INST_ID) MO,  (SELECT ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  SUM(ASH0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH0.IMQ_COUNT) IMQ_COUNT,  SUM(ASH0.WAIT_COUNT) WAIT_COUNT,  SUM(ASH0.CPU_COUNT) CPU_COUNT,  SUM(ASH0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH0 GROUP BY ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) ASH,  MONITOR_AGG WHERE MO.INST_ID = ASH.INST_ID(+) AND MONITOR_AGG.DIST_INST_COUNT &gt; 0 ) PI GROUP BY PI.INST_ID)PX_INSTANCE) PX_INSTANCES FROM MONITOR_AGG)) ELSE NULL END,  XPLAN_XML,  CASE WHEN :B4
3 = 1 THEN (SELECT XMLELEMENT( &quot;plan_monitor&quot;,  XMLATTRIBUTES(MAX(PLI.MAX_LINE_ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PLI.OVERALL_MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PLI.OVERALL_MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PLI.MAX_LINE_IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PLI.MAX_LINE_CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PLI.MAX_LINE_WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PLI.MAX_LINE_OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;),  XMLAGG( XMLELEMENT( &quot;operation&quot;,  XMLATTRIBUTES( PLI.PLAN_LINE_ID AS &quot;id&quot;,  PLI.PARENT_ID AS &quot;parent_id&quot;,  PLI.OPERATION AS &quot;name&quot;,  PLI.OPTIONS AS &quot;options&quot;,	PLI.DEPTH AS &quot;depth&quot;,  PLI.POSITION AS &quot;position&quot;,	PLI.INACTIVE AS &quot;skp&quot;,  PLI.PX_TYPE AS &quot;px_type&quot;),	NVL2(PLI.OBJECT_NAME,  XMLELEMENT( &quot;object&quot;,	XMLATTRIBUTES(PLI.OBJECT_TYPE AS &quot;type&quot;),  XMLFOREST(PLI.OBJECT_OWNER
AS &quot;owner&quot;),	XMLFOREST(PLI.OBJECT_NAME AS &quot;name&quot;)),  NULL),  XMLFOREST(PLI.PARTITION_START AS &quot;partition_start&quot;,  PLI.PARTITION_STOP AS &quot;partition_stop&quot;),  CASE WHEN PLI.CARDINALITY IS NULL AND PLI.BYTES IS NULL AND PLI.COST IS NULL AND PLI.TEMP_SPACE IS NULL AND PLI.TIME IS NULL THEN NULL ELSE XMLELEMENT( &quot;optimizer&quot;,  NULL,  NVL2(PLI.CARDINALITY,  XMLFOREST(PLI.CARDINALITY AS &quot;cardinality&quot;),  NULL),  NVL2(PLI.BYTES,  XMLFOREST(PLI.BYTES AS &quot;bytes&quot;),	NULL),	NVL2(PLI.COST,	XMLFOREST(PLI.COST AS &quot;cost&quot;),  NULL),  NVL2(PLI.CPU_COST,  XMLFOREST(PLI.CPU_COST AS &quot;cpu_cost&quot;),	NULL),	NVL2(PLI.IO_COST,  XMLFOREST(PLI.IO_COST AS &quot;io_cost&quot;),  NULL),  NVL2(PLI.TEMP_SPACE,  XMLFOREST(PLI.TEMP_SPACE AS &quot;temp&quot;),  NULL),  NVL2(PLI.TIME,  XMLFOREST(PLI.TIME AS &quot;time&quot;),  NULL)) END,	XMLELEMENT( &quot;stats&quot;,	XMLATTRIBUTES('plan_monitor' AS &quot;type&quot;),  NVL2(PLI.FIR
ST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_active' AS &quot;name&quot;),  TO_CHAR(FIRST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN PLI.FIRST_MOVE_TIME != PLI.FIRST_CHANGE_TIME THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_row' AS &quot;name&quot;),  TO_CHAR(FIRST_CHANGE_TIME,  :B12 )) ELSE NULL END,  NVL2(PLI.LAST_MOVE_TIME,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('last_active' AS &quot;name&quot;),  TO_CHAR(LAST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN (PLI.FIRST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  ROUND((LAST_MOVE_TIME - FIRST_MOVE_TIME) * 3600 * 24)+1) END,	CASE WHEN (PLI.OVERALL_LAST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('from_most_recent' AS &quot;name&quot;),  ROUND((PLI.OVERALL_LAST_MOVE_TIME - PLI.LAST_MOVE_TIME) * 3600 * 24)) END,  NVL2(PLI.LAST_MOVE_TIME,  XMLELEM
ENT( &quot;stat&quot;,	XMLATTRIBUTES( 'from_sql_exec_start' AS &quot;name&quot;),  ROUND( (FIRST_MOVE_TIME - :B8 ) * 3600*24)),  NULL),  NVL2(PLI.PERCENT_COMPLETE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('percent_complete' AS &quot;name&quot;),  PLI.PERCENT_COMPLETE),  NULL),  NVL2(PLI.TIME_REMAINING,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('time_left' AS &quot;name&quot;),  PLI.TIME_REMAINING),  NULL),  CASE WHEN PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('starts' AS &quot;name&quot;),  PLI.STARTS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_starts' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_STARTS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(MAX_STARTS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_STARTS/10000000000)) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('dop' AS
&quot;name&quot;),  PLI.DOP) ELSE NULL END,  CASE WHEN NEED_ROWS IS NOT NULL AND PLI.FIRST_MOVE_TIME IS NOT NULL THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cardinality' AS &quot;name&quot;),	PLI.OUTPUT_ROWS) ELSE NULL END,  CASE WHEN PLI.NEED_ROWS IS NOT NULL AND PLI.DOP &gt; 0 AND PLI.MAX_OUTPUT_ROWS IS NOT NULL AND (PLI.FIRST_MOVE_TIME IS NOT NULL) THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_card' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_OUTPUT_ROWS/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_OUTPUT_ROWS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_OUTPUT_ROWS/10000000000)) ELSE NULL END,  CASE WHEN PLI.MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('memory' AS &quot;name&quot;),  PLI.MEM) ELSE NULL END,  CASE WHEN PLI.MAX_MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_memory' AS &quot;name&quot;),	PLI.MAX_MEM) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MIN_MAX_MEM IS NOT NULL AND PLI.MAX_MEM
&gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'min_max_mem' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MIN_MAX_MEM/1000000),  10000),  NULL) AS &quot;iid&quot;,	MOD(MIN_MAX_MEM,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MIN_MAX_MEM/10000000000)) ELSE NULL END,  CASE WHEN PLI.TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('temp' AS &quot;name&quot;),  PLI.TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_temp' AS &quot;name&quot;),  PLI.MAX_TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('spill_count' AS &quot;name&quot;),  PLI.SPILL_COUNT) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_MAX_TEMP IS NOT NULL AND PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_max_temp' AS &quot;name&quot;,  DECODE(:B68 ,	'Y',  MOD(TRUNC(MAX_MAX_TEMP/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_MAX_TEMP,  1000000)
AS &quot;sid&quot;),  TRUNC(PLI.MAX_MAX_TEMP/10000000000)) ELSE NULL END,  CASE WHEN PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  PLI.READ_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_REQS IS NOT NULL AND PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_read_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',	MOD(TRUNC(PLI.MAX_READ_REQS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_REQS/10000000000)) ELSE NULL END,	CASE WHEN PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  PLI.READ_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_BYTES IS NOT NULL AND PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_read_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_READ_BYTES/1000000),  10000),  NULL
) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_BYTES,	1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  PLI.WRITE_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_REQS IS NOT NULL AND PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_REQS/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_REQS/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  PLI.WRITE_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_BYTES IS NOT NULL AND PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_bytes' AS &quot;name&quot;,
DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_BYTES,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('io_inter_bytes' AS &quot;name&quot;),  PLI.IO_INTER_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_io_inter_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_IO_INTER_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_IO_INTER_BYTES, 1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_IO_INTER_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;
stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(PLI.IO_BYTES / DECODE(PLI.IO_INTER_BYTES,  0,  1,  PLI.IO_INTER_BYTES),  2)) ELSE NULL END),	NVL2(STAT_GID,	XMLELEMENT( &quot;rwsstats&quot;,  XMLATTRIBUTES( PLI.STAT_GID AS &quot;group_id&quot;),  DECODE(GID_ROWNUM,  1,  (SELECT XMLELEMENT( &quot;metadata&quot;,  NULL,  XMLAGG( XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( ROWNUM AS &quot;id&quot;,  NAME AS &quot;name&quot;,	DESCRIPTION AS &quot;desc&quot;,  TYPE AS &quot;type&quot;,  DECODE(FLAGS,  0,	NULL,  FLAGS) AS &quot;flags&quot;),  NULL) ORDER BY ID)) FROM V$SQL_MONITOR_STATNAME WHERE GROUP_ID = PLI.STAT_GID),  NULL),  NVL2(STAT1_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(1 AS &quot;id&quot;),  STAT1_VALUE),  NULL),  NVL2(STAT2_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(2 AS &quot;id&quot;),  STAT2_VALUE),  NULL),  NVL2(STAT3_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(3 AS &quot;id&quot;),  STAT3_VALUE),  NULL),
 NVL2(STAT4_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(4 AS &quot;id&quot;),	STAT4_VALUE),  NULL),  NVL2(STAT5_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(5 AS &quot;id&quot;),  STAT5_VALUE),  NULL),  NVL2(STAT6_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(6 AS &quot;id&quot;),  STAT6_VALUE),  NULL),  NVL2(STAT7_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(7 AS &quot;id&quot;),  STAT7_VALUE),  NULL),  NVL2(STAT8_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(8 AS &quot;id&quot;),	STAT8_VALUE),  NULL),  NVL2(STAT9_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(9 AS &quot;id&quot;),  STAT9_VALUE),  NULL),  NVL2(STAT10_VALUE,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES(10 AS &quot;id&quot;),  STAT10_VALUE),  NULL)),  NULL),  CASE WHEN PLI.LINE_ACTIVITY_COUNT &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(PLI.LINE_ACTIVITY_START,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR(PLI.LINE_ACTIVITY_END,
 :B12 ) AS &quot;end_time&quot;,  ROUND((PLI.LINE_ACTIVITY_END - PLI.LINE_ACTIVITY_START) * 3600*24) + 1 AS &quot;duration&quot;,  PLI.LINE_ACTIVITY_COUNT AS &quot;count&quot;,  PLI.LINE_IMQ_COUNT AS &quot;imq_count&quot;,	PLI.LINE_WAIT_COUNT AS &quot;wait_count&quot;,	PLI.LINE_CPU_COUNT AS &quot;cpu_count&quot;,  PLI.LINE_OTHER_SQL_COUNT AS &quot;other_sql_count&quot;,	:B40 AS &quot;cpu_cores&quot;,	:B39 AS &quot;hyperthread&quot;),  PLI.ACTIVITY_TOTAL,	PLI.PLAN_ACTIVITY_HISTO) ELSE NULL END) ORDER BY PLI.PLAN_LINE_ID) ) FROM (SELECT AT.MAX_LINE_ACTIVITY_COUNT,  PM.OVERALL_MAX_IO_REQS,	PM.OVERALL_MAX_IO_BYTES,  AT.MAX_LINE_IMQ_COUNT,  AT.MAX_LINE_CPU_COUNT,  AT.MAX_LINE_WAIT_COUNT,  AT.LINE_OTHER_SQL_COUNT,  AT.MAX_LINE_OTHER_SQL_COUNT,  PM.PLAN_LINE_ID,  PM.PARENT_ID,  PM.OPERATION,  PM.OPTIONS,	PM.DEPTH,  PM.POSITION,  PM.INACTIVE,  CASE WHEN PM.OPERATION = 'PX COORDINATOR' AND :B23 = 'Y' AND (PM.PX_SERVER_SET IS NOT NULL OR AH.PX_SERVER_SET IS NOT NULL) THEN 'QC' WHEN PM.PX_
SERVER_SET IS NOT NULL THEN TO_CHAR(PM.PX_SERVER_SET) WHEN AH.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(AH.PX_SERVER_SET) WHEN (:B23 = 'N' OR (PM.LAST_CHANGE_TIME IS NULL AND AT.LINE_ACTIVITY_END IS NULL)) THEN NULL ELSE 'QC' END PX_TYPE,  PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START,  PM.LAST_CHANGE_TIME,  PM.OVERALL_LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END,	AT.OVERALL_LINE_ACTIVITY_END,  LEAST(NVL(AT.LINE_ACTIVITY_START,  PM.FIRST_CHANGE_TIME),  NVL(PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START)) FIRST_MOVE_TIME,	GREATEST(NVL(AT.LINE_ACTIVITY_END,  PM.LAST_CHANGE_TIME),  NVL(PM.LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END)) LAST_MOVE_TIME,  GREATEST(NVL(AT.OVERALL_LINE_ACTIVITY_END,  PM.OVERALL_LAST_CHANGE_TIME),	NVL(PM.OVERALL_LAST_CHANGE_TIME,  AT.OVERALL_LINE_ACTIVITY_END)) OVERALL_LAST_MOVE_TIME,  CASE WHEN PM.STARTS IS NOT NULL AND PM.STARTS &gt; 0 THEN 1 ELSE 0 END HAS_EXECUTED,	PM.OBJECT_NAME,  PM.OBJECT_TYPE,  PM.OBJECT_OWNER,  PM.PARTITION_START,  PM.PARTITION_STOP,  PM.CARDINAL
ITY,  PM.BYTES,  PM.COST,  PM.TEMP_SPACE,  PM.TIME,  PM.CPU_COST,  PM.IO_COST,	LO.PERCENT_COMPLETE,  LO.TIME_REMAINING,  PM.STARTS,  PM.DOP,  PM.MAX_STARTS,  PM.OUTPUT_ROWS,	PM.NEED_ROWS,  PM.MAX_OUTPUT_ROWS,  PM.MEM,  PM.MAX_MEM,  PM.MIN_MAX_MEM,  PM.TEMP,  PM.MAX_TEMP,  PM.SPILL_COUNT,  PM.MAX_MAX_TEMP,  PM.READ_REQS,  PM.MAX_READ_REQS,	PM.READ_BYTES,	PM.MAX_READ_BYTES,  PM.WRITE_REQS,  PM.MAX_WRITE_REQS,	PM.WRITE_BYTES,  PM.MAX_WRITE_BYTES,  PM.IO_INTER_BYTES,  PM.IO_BYTES,	PM.MAX_IO_INTER_BYTES,	AT.LINE_ACTIVITY_COUNT,  AT.LINE_IMQ_COUNT,  AT.LINE_WAIT_COUNT,  AT.LINE_CPU_COUNT,  AT.ACTIVITY_TOTAL,  AH.PLAN_ACTIVITY_HISTO,  PM.STAT_GID,  PM.GID_ROWNUM,  PM.STAT1_VALUE,  PM.STAT2_VALUE,  PM.STAT3_VALUE,  PM.STAT4_VALUE,  PM.STAT5_VALUE,  PM.STAT6_VALUE,  PM.STAT7_VALUE,	PM.STAT8_VALUE,  PM.STAT9_VALUE,  PM.STAT10_VALUE FROM (SELECT AT0.*,  MAX(LINE_ACTIVITY_END) OVER() OVERALL_LINE_ACTIVITY_END,  MAX(LINE_ACTIVITY_COUNT) OVER() MAX_LINE_ACTIVITY_COUNT,  MAX(LINE_IMQ_COUNT) O
VER() MAX_LINE_IMQ_COUNT,  MAX(LINE_CPU_COUNT) OVER() MAX_LINE_CPU_COUNT,  MAX(LINE_WAIT_COUNT) OVER() MAX_LINE_WAIT_COUNT,  MAX(LINE_OTHER_SQL_COUNT) OVER() MAX_LINE_OTHER_SQL_COUNT FROM (SELECT AD1.PLAN_LINE_ID,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) LINE_ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) LINE_IMQ_COUNT,  SUM(AD1.WAIT_COUNT) LINE_WAIT_COUNT,  SUM(AD1.OTHER_SQL_COUNT) LINE_OTHER_SQL_COUNT,  SUM(AD1.CPU_COUNT) LINE_CPU_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTI
VITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MAX(AD0.DFO_MOST_ACTIVE_IID) DFO_MOST_ACTIVE_IID,  MAX(AD0.DFO_MOST_ACTIVE_SID) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT FROM ASH_DATA AD0 WHERE AD0.PLAN_LINE_ID IS NOT NULL GROUP BY AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID) AT0) AT,	(SELECT AD2.PLAN_LINE_ID,  MIN(AD2.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD2.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD2.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD2.IMQ_COUNT) IMQ_COUNT,  SUM(AD2.WAIT_COUNT) WAIT_COUNT,  SUM(AD2.CPU_COUNT) CPU_COUNT,  SUM(AD2.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  CASE WHEN :B29 = 1 AND SUM(AD2.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  T
O_CHAR( :B20 ,	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND((:B22 -:B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG(XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),	AD2.ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END PLAN_ACTIVITY_HISTO FROM (SELECT AD1.PLAN_LINE_ID,  AD1.BUCKET_NUM,  MIN(AD1.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(NVL2(AD1.ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;cl
ass&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT),  NULL) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(NVL2(AD0.ACTIVITY_START,  AD0.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID,	AD1.BUCKET_NUM) AD2 GROUP BY AD2.PLAN_LINE_ID) AH,  (SELECT LO.SQL_PLAN_LINE_ID PLAN_LINE_ID,  DECODE(SUM(LO.TOTALWORK),  0,  NULL,  ROUND(SUM(LO.SOFAR)*100/SUM
(LO.TOTALWORK))) PERCENT_COMPLETE,  MAX(LO.TIME_REMAINING) TIME_REMAINING FROM GV$SESSION_LONGOPS LO,  MONITOR_DATA MO WHERE (:B49 = 'Y' OR :B71 = 'DONE (ERROR)') AND LO.SQL_ID = :B9 AND LO.SQL_EXEC_START = :B8 AND LO.SQL_EXEC_ID = :B7 AND LO.INST_ID = MO.INST_ID AND LO.SID = MO.SID GROUP BY LO.SQL_PLAN_LINE_ID) LO,  (SELECT PM0.*,  CASE WHEN PM0.STARTS IS NULL OR PM0.STARTS = 0 OR PM0.OUTPUT_ROWS IS NULL THEN NULL ELSE 1 END NEED_ROWS,  ROW_NUMBER() OVER(PARTITION BY PM0.STAT_GID ORDER BY PM0.PLAN_LINE_ID ) GID_ROWNUM,  MAX(LAST_CHANGE_TIME) OVER() OVERALL_LAST_CHANGE_TIME,  MAX(MAX_IO_REQS) OVER() OVERALL_MAX_IO_REQS,  MAX(MAX_IO_BYTES) OVER() OVERALL_MAX_IO_BYTES FROM (SELECT /*+ leading(mo) use_hash(plm) */ PLM.PLAN_LINE_ID PLAN_LINE_ID,  PLM.PLAN_OPERATION OPERATION,	PLM.PLAN_OPTIONS OPTIONS,  MAX(PLM.PLAN_PARENT_ID) PARENT_ID,  MAX(PLM.PLAN_DEPTH) DEPTH,  MAX(PLM.PLAN_POSITION) POSITION,  MAX(PLM.PLAN_OPERATION_INACTIVE) INACTIVE,  MAX(PLM.PLAN_OBJECT_OWNER) OBJECT_OWNER,  MAX(P
LM.PLAN_OBJECT_NAME) OBJECT_NAME,  MAX(PLM.PLAN_OBJECT_TYPE) OBJECT_TYPE,  MAX(PLM.PLAN_COST) COST,  MAX(PLM.PLAN_CARDINALITY) CARDINALITY,  MAX(PLM.PLAN_BYTES) BYTES,  MAX(PLM.PLAN_CPU_COST) CPU_COST,  MAX(PLM.PLAN_IO_COST) IO_COST,  MAX(PLM.PLAN_TEMP_SPACE) TEMP_SPACE,  MAX(PLM.PLAN_TIME) TIME,  MAX(PLM.PLAN_PARTITION_START) PARTITION_START,  MAX(PLM.PLAN_PARTITION_STOP) PARTITION_STOP,  MIN(PLM.FIRST_CHANGE_TIME) FIRST_CHANGE_TIME,	MAX(PLM.LAST_CHANGE_TIME) LAST_CHANGE_TIME,  MIN(PLM.LAST_CHANGE_TIME) MIN_LAST_CHANGE_TIME,  MIN(NVL2(PLM.FIRST_CHANGE_TIME,  MO.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  COUNT(CASE WHEN PLM.PAR IS NOT NULL AND PLM.STARTS IS NOT NULL AND PLM.STARTS &gt; 0 AND PLM.PLAN_LINE_ID != 0 AND PLM.PLAN_OPERATION != 'PX COORDINATOR' THEN 1 ELSE NULL END) DOP,  SUM(PLM.STARTS) STARTS,	MAX(NVL2(PAR,  PLM.STARTS * 10000000000 + PLM.ES,  NULL)) MAX_STARTS,  SUM(PLM.OUTPUT_ROWS) OUTPUT_ROWS,  MAX(NVL2(PAR,  PLM.OUTPUT_ROWS * 10000000000 +PLM.ES,  NULL)) MAX_OUTPUT_ROWS,
  SUM(PLM.WORKAREA_MEM) MEM,  SUM(PLM.WORKAREA_MAX_MEM) MAX_MEM,  MIN(NVL2(PAR,  PLM.WORKAREA_MAX_MEM * 10000000000 + PLM.ES,  NULL)) MIN_MAX_MEM,  SUM(PLM.WORKAREA_TEMPSEG) TEMP,  SUM(PLM.WORKAREA_MAX_TEMPSEG) MAX_TEMP,  MAX(NVL2(PAR,  PLM.WORKAREA_MAX_TEMPSEG * 10000000000 + PLM.ES,  NULL)) MAX_MAX_TEMP,  COUNT(PLM.WORKAREA_MAX_TEMPSEG) SPILL_COUNT,  SUM(PLM.PHYSICAL_READ_REQUESTS) READ_REQS,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_READ_REQS,  SUM(PLM.PHYSICAL_READ_BYTES) READ_BYTES,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_READ_BYTES,  SUM(PLM.PHYSICAL_WRITE_REQUESTS) WRITE_REQS,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_REQS,  SUM(PLM.PHYSICAL_WRITE_BYTES) WRITE_BYTES,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_BYTES,  NVL(SUM(PLM.PHYSICAL_READ_BYTES),  0) + NVL(SUM(PLM.PHYSICAL_WRITE_BYTES),  0) IO_BYTES,  SUM(NVL(PLM.PHYSICA
L_READ_REQUESTS,  0) + NVL(PLM.PHYSICAL_WRITE_REQUESTS,  0)) MAX_IO_REQS,  SUM(NVL(PLM.PHYSICAL_READ_BYTES,  0) + NVL(PLM.PHYSICAL_WRITE_BYTES,  0)) MAX_IO_BYTES,  SUM(PLM.IO_INTERCONNECT_BYTES) IO_INTER_BYTES,  MAX(NVL2(PAR,  PLM.IO_INTERCONNECT_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_IO_INTER_BYTES,  MAX(OTHERSTAT_GROUP_ID) STAT_GID,  NVL(DECODE(MAX(OTHERSTAT_1_TYPE),	3,  MAX(OTHERSTAT_1_VALUE),  4,  MAX(OTHERSTAT_1_VALUE),  6,  MIN(OTHERSTAT_1_VALUE),  7,  MIN(OTHERSTAT_1_VALUE),  NULL),  SUM(DECODE(OTHERSTAT_1_TYPE,  1,  OTHERSTAT_1_VALUE,  2,  OTHERSTAT_1_VALUE,  NULL))) STAT1_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_2_TYPE),	3,  MAX(OTHERSTAT_2_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),	4,  MAX(RMAX1 + OTHERSTAT_2_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_2_VALUE),  NULL),  6,  MIN(OTHERSTAT_2_VALUE),  NULL)),	10000000000000000),  SUM(DECODE(OTHERSTAT_2_TYPE,  1,  OTHERSTAT_2_VALUE,  2,  OTHERSTAT_2_VALUE,  NULL))) STAT2_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_3_TYPE),  3,  MAX(OTHERST
AT_3_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_3_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_3_VALUE),  NULL),  6,  MIN(OTHERSTAT_3_VALUE),	NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_3_TYPE,  1,	OTHERSTAT_3_VALUE,  2,	OTHERSTAT_3_VALUE,  NULL))) STAT3_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_4_TYPE),  3,  MAX(OTHERSTAT_4_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_4_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_4_VALUE),  NULL),  6,	MIN(OTHERSTAT_4_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_4_TYPE,  1,  OTHERSTAT_4_VALUE,  2,  OTHERSTAT_4_VALUE,  NULL))) STAT4_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_5_TYPE),  3,  MAX(OTHERSTAT_5_VALUE),	5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_5_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_5_VALUE),  NULL),  6,  MIN(OTHERSTAT_5_VALUE),  NULL)),  10000000000000000),	SUM(DECODE(OTHERSTAT_5_TYPE,  1,  OTHERSTAT_5_VALUE,  2,  OTHERSTAT_5_VALUE,  NULL))) STAT5_VALUE,  NVL(MOD((DECODE(MAX(
OTHERSTAT_6_TYPE),  3,	MAX(OTHERSTAT_6_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,	MAX(RMAX1 + OTHERSTAT_6_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_6_VALUE),  NULL),  6,  MIN(OTHERSTAT_6_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_6_TYPE,  1,  OTHERSTAT_6_VALUE,  2,  OTHERSTAT_6_VALUE,  NULL))) STAT6_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_7_TYPE),  3,  MAX(OTHERSTAT_7_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_7_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_7_VALUE),  NULL),  6,  MIN(OTHERSTAT_7_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_7_TYPE,	1,  OTHERSTAT_7_VALUE,	2,  OTHERSTAT_7_VALUE,	NULL))) STAT7_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_8_TYPE),  3,  MAX(OTHERSTAT_8_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_8_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_8_VALUE),	NULL),	6,  MIN(OTHERSTAT_8_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_8_TYPE,  1,  OTHERSTAT_8_VALUE,  2,  OTHERSTAT_8_VALUE,  NULL)))
 STAT8_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_9_TYPE),  3,  MAX(OTHERSTAT_9_VALUE),  5,	DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_9_VALUE),  7,	MIN(RMAX1 + OTHERSTAT_9_VALUE),  NULL),  6,  MIN(OTHERSTAT_9_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_9_TYPE,  1,  OTHERSTAT_9_VALUE,  2,  OTHERSTAT_9_VALUE,  NULL))) STAT9_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_10_TYPE),  3,  MAX(OTHERSTAT_10_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_10_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_10_VALUE),  NULL),  6,  MIN(OTHERSTAT_10_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_10_TYPE,  1,  OTHERSTAT_10_VALUE,  2,  OTHERSTAT_10_VALUE,  NULL))) STAT10_VALUE FROM (SELECT A.*,  OTHERSTAT_1_VALUE * 10000000000000000 RMAX1,  A.INST_ID * 1000000 + A.SID ES,  DECODE(A.PROCESS_NAME,  'ora',  NULL,  1) PAR FROM GV$ALL_SQL_PLAN_MONITOR A) PLM,  MONITOR_DATA MO WHERE PLM.SQL_ID = :B9 AND PLM.SQL_EXEC_START = :B8 AND PLM.SQL_EXEC_ID = :B7 AND PLM.INST
_ID = MO.INST_ID AND PLM.INST_ID BETWEEN :B11 AND :B10 AND PLM.KEY = MO.KEY GROUP BY PLM.PLAN_LINE_ID,	PLM.PLAN_OPERATION,  PLM.PLAN_OPTIONS) PM0) PM WHERE AH.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND AT.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND LO.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND (:B21 IS NULL OR PM.PLAN_LINE_ID = :B21 )) PLI) ELSE NULL END,	CASE WHEN :B42 = 1 THEN DBMS_SQLTUNE.BUILD_STASH_XML( SESSION_ID=&gt;:B19 ,  SESSION_SERIAL=&gt;:B18 ,	SESSION_INST_ID=&gt;:B17 ,  PX_MODE=&gt;'yes',	START_TIME=&gt;:B20 ,  END_TIME=&gt;:B22 ,  MISSING_SECONDS=&gt; :B41 ,  INSTANCE_LOW_FILTER=&gt;:B11 ,  INSTANCE_HIGH_FILTER=&gt;:B10 ,  BUCKET_MAX_COUNT=&gt;NULL,  BUCKET_INTERVAL=&gt;:B26 ,  REPORT_LEVEL=&gt;'typical',  CPU_CORES=&gt;:B40 ,  IS_HYPER=&gt;:B39 ) ELSE NULL END),  (CASE WHEN :B38 = 1 THEN (SELECT XMLELEMENT( &quot;skewed_sessions&quot;,  XMLATTRIBUTES( DECODE(MIN(INST_ID),  NULL,  :B17 ,  MIN(INST_ID)) AS &quot;min_iid&quot;,	DECODE(MAX(INST_ID),  NULL,  :B17 ,  MAX(INST_ID)) AS
&quot;max_iid&quot;),  XMLAGG( XMLELEMENT( &quot;s&quot;,  XMLATTRIBUTES( INST_ID AS &quot;i&quot;),  SESSION_ID) ORDER BY INST_ID,  SESSION_ID)) FROM (SELECT SESS.* FROM (SELECT DECODE(AD.DFO_MOST_ACTIVE_IID,  :B17 ,  NULL,  AD.DFO_MOST_ACTIVE_IID) INST_ID,  AD.DFO_MOST_ACTIVE_SID SESSION_ID FROM ASH_DATA AD WHERE AD.DFO_MOST_ACTIVE_COUNT IS NOT NULL GROUP BY AD.DFO_MOST_ACTIVE_IID,  AD.DFO_MOST_ACTIVE_SID ORDER BY MAX(AD.DFO_MOST_ACTIVE_COUNT) DESC) SESS WHERE ROWNUM &lt;= 100)) ELSE NULL END),  (CASE WHEN :B37 = 1 THEN (SELECT XMLELEMENT( &quot;report_repository_summary&quot;,  CASE WHEN MA.MAX_DBOP_NAME IS NOT NULL THEN XMLELEMENT( &quot;dbop&quot;,  XMLATTRIBUTES('F' AS &quot;detail&quot;,  MA.MAX_DBOP_NAME AS &quot;dbop_name&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,  :B12 ) AS &quot;dbop_exec_start&quot;,  MA.MAX_DBOP_EXEC_ID AS &quot;dbop_exec_id&quot;),  XMLFOREST( MA.MAX_STATUS AS &quot;status&quot;,  TO_CHAR(NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME),  :B12 )AS
&quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 )AS &quot;last_refresh_time&quot;,  MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,  MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,	MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,	MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,  MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,
MA.MAX_PX_DOP AS &quot;dop&quot;,  MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;),  CASE WHEN MA.MAX_ERROR_NUMBER IS NULL THEN NULL ELSE XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MA.MAX_ERROR_NUMBER AS &quot;number&quot;,  MA.MAX_ERROR_FACILITY AS &quot;facility&quot;),  MA.MAX_ERROR_MESSAGE) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME))*86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;s
tat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java
_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRI
BUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,  0,  1,  MA.SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,  2))) END) ) ELSE XMLELEMENT( &quot;sql&quot;,  XMLATTRIBUTES( MA.MAX_SQL_ID AS &quot;sql_id&quot;,  TO_CHAR(MA.MAX_SQL_EXEC_START,  :B12 ) AS &quot;sql_exec_start&quot;,	MA.MAX_SQL_EXEC_ID AS &quot;sql_exec_id&quot;),  XMLFOREST(MA.MA
X_STATUS AS &quot;status&quot;,  SUBSTR(MA.SQLMON_TEXT,  1,  100) AS &quot;sql_text&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,	:B12 ) AS &quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 ) AS &quot;last_refresh_time&quot;,	MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,	MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,  MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,  MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PLAN_HASH_VALUE AS &quot;plan_hash&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_ent
ry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,	MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MA.MAX_PX_DOP AS &quot;dop&quot;,	MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;,  MA.SUM_SERVERS_REQUESTED AS &quot;px_servers_requested&quot;,  MA.SUM_SERVERS_ALLOCATED AS &quot;px_servers_allocated&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('duration' AS &quot;name&quot;),	GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- MA.MAX_SQL_EXEC_START) * 86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_
TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME
,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_
WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  DECODE(MA.SUM_IO_UNC_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MA.SUM_IO_UNC_BYTES)),  DECODE(MA.SUM_IO_ELIG_BYTES,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MA.SUM_IO_ELIG_BYTES)),  DECODE(MA.SUM_IO_RET_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MA.SUM_IO_RET_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,	0,  1,	MA.SUM_IO_INTER_BYTES),  2)) END,  CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,	0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_B
YTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,	2))) END) ) END) FROM MONITOR_AGG MA) ELSE NULL END) FROM (SELECT CASE WHEN V1.XPLAN_XML IS NULL OR V1.XPLAN_XML.EXISTSNODE('/error') &gt; 0 THEN NULL ELSE V1.XPLAN_XML END XPLAN_XML FROM (SELECT CASE WHEN :B36 = 1 THEN DBMS_XPLAN.BUILD_PLAN_XML( TABLE_NAME=&gt;'gv$all_sql_plan',  PLAN_TAG=&gt;'plan',	FILTER_PREDS=&gt;:B35 ,  FORMAT=&gt;'-PROJECTION +ALIAS +ADAPTIVE') ELSE NULL END XPLAN_XML FROM DUAL) V1) CONST_VIEW</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="a1xgxtssv5rrp"></a>a1xgxtssv5rrp</td><td class='awrc'><pre_sqltext class="awr">select sum(used_blocks),  ts.ts#	from GV$SORT_SEGMENT gv,  ts$ ts   where gv.tablespace_name = ts.name and   ts.bitmapped  &lt;&gt; 0   group by ts.ts#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="a95n8p4vpxmps"></a>a95n8p4vpxmps</td><td class='awrnc'><pre_sqltext class="awr">begin prvt_hdm.execute_slave_actions; end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bjck50zs3nc95"></a>bjck50zs3nc95</td><td class='awrnc'><pre_sqltext class="awr">insert into  WRH$_SYSSTAT  (dbid,  per_pdb,  con_dbid,  snap_id,  instance_number,  stat_id,  value)  select /*+ use_hash(v$sysstat) */	:dbid,	0 per_pdb,   :srcdbid  con_dbid,   :snap_id,  :instance_number,  stat_id,  value FROM	v$sysstat    sysstat  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="c9059z5ksrf1x"></a>c9059z5ksrf1x</td><td class='awrc'><pre_sqltext class="awr">insert into  wrh$_latch  (dbid,  per_pdb,	con_dbid,  snap_id,  instance_number,  latch_hash,  level#,  gets,  misses,	sleeps,  immediate_gets,  immediate_misses,  spin_gets,  sleep1,     sleep2,  sleep3,  sleep4,	wait_time)  select  :dbid,  0 per_pdb,	 :srcdbid  con_dbid,   :snap_id,  :instance_number,   hash,  level#,  gets,	misses,  sleeps,  immediate_gets,  immediate_misses,  spin_gets,     sleep1,  sleep2,  sleep3,	sleep4,  wait_time FROM   v$latch    ltch  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="drktaf71uygnb"></a>drktaf71uygnb</td><td class='awrnc'><pre_sqltext class="awr">BEGIN
	  sys.prvt_hdm.auto_execute(
	    db_id =&gt; :bind_dbid,
	    inst_id =&gt; :bind_inst,
	    end_snap =&gt; :bind_snap,
	    time_left_in_secs =&gt; :bind_time);
	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		     equality_preds    = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds	 + decode(bitand(:flag, 2), 0, 0, 1),	 nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),    range_preds	 = range_preds	     + decode(bitand(:flag, 8), 0, 0, 1),    like_preds        = like_preds	   + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	      = null_preds	  + decode(bitand(:flag, 32), 0, 0, 1),    flags	     = flags + :flag - bitand(flags, :flag),	 timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrnc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)	values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fdsrx9wqyqtmu"></a>fdsrx9wqyqtmu</td><td class='awrc'><pre_sqltext class="awr">INSERT INTO wri$_adv_parameters(task_id, name, datatype, value, flags, description)
       VALUES
	(:task_id_num,	:name,	:datatype,  :value,  :flags,  :description)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fhf8upax5cxsz"></a>fhf8upax5cxsz</td><td class='awrnc'><pre_sqltext class="awr">BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref,  :snap_id,	:pr_class,						 :rep_id,  :suc); END;</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="43"></a>
<h2 class="awr">
Active Session History(ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9981">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9980">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9984">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9983">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9982">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9979">Top Events</a></li>
<li class="awr"><a class="awr" href="#9985">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9978">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9977">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9981"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>44.76</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>31.47</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>31.47</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrnc'><div class="hidden">203653710</div></td><td align="right" class='awrnc'><div class="hidden">64</div></td><td align="right" class='awrnc'><div class="hidden">44.75524475524475524475524475524475524476</div></td>
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>8.39</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>7.69</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">64</div></td><td align="right" class='awrc'><div class="hidden">44.75524475524475524475524475524475524476</div></td>
<td class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>4.90</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>4.90</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrnc'>1497866750</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>36.36</td>
<td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>18.18</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>18.18</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">52</div></td><td align="right" class='awrc'><div class="hidden">36.36363636363636363636363636363636363636</div></td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>6.29</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>6.29</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">52</div></td><td align="right" class='awrnc'><div class="hidden">36.36363636363636363636363636363636363636</div></td>
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>5.59</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>2.80</td>
<td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9980"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>44.76</td>
<td class='awrc'>UPDATE</td><td align="right" class='awrc'>44.06</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>31.47</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrnc'>1497866750</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>36.36</td>
<td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>33.57</td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>18.18</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">52</div></td><td align="right" class='awrc'><div class="hidden">36.36363636363636363636363636363636363636</div></td>
<td class='awrc'>SELECT STATEMENT</td><td align="right" class='awrc'>2.10</td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.10</td>
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9984"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>759,23810</td><td align="right" class='awrc'>40.56</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>18.88</td>
<td class='awrc'>USER2</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>27/60 [ 45%]</td><td align="right" class='awrc'>24</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">759,23810</div></td><td align="right" class='awrnc'><div class="hidden">40.55944055944055944055944055944055944056</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>6.99</td>
<td class='awrnc'><div class="hidden">USER2</div></td><td class='awrnc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrnc'>10/60 [ 17%]</td><td align="right" class='awrnc'>4</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">759,23810</div></td><td align="right" class='awrc'><div class="hidden">40.55944055944055944055944055944055944056</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>6.99</td>
<td class='awrc'><div class="hidden">USER2</div></td><td class='awrc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrc'>10/60 [ 17%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>882,61001</td><td align="right" class='awrnc'>40.56</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>18.88</td>
<td class='awrnc'>USER1</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>27/60 [ 45%]</td><td align="right" class='awrnc'>21</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">882,61001</div></td><td align="right" class='awrc'><div class="hidden">40.55944055944055944055944055944055944056</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>11.19</td>
<td class='awrc'><div class="hidden">USER1</div></td><td class='awrc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrc'>16/60 [ 27%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">882,61001</div></td><td align="right" class='awrnc'><div class="hidden">40.55944055944055944055944055944055944056</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>6.99</td>
<td class='awrnc'><div class="hidden">USER1</div></td><td class='awrnc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrnc'>10/60 [ 17%]</td><td align="right" class='awrnc'>8</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,59906</td><td align="right" class='awrc'>6.29</td><td class='awrc'>db file parallel write</td><td align="right" class='awrc'>4.20</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (DBW0)</td><td align="right" class='awrc'>6/60 [ 10%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">4,59906</div></td><td align="right" class='awrnc'><div class="hidden">6.29370629370629370629370629370629370629</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>2.10</td>
<td class='awrnc'><div class="hidden">SYS</div></td><td class='awrnc'><div class="hidden">oracle@mcracpo...le.com (DBW0)</div></td><td align="right" class='awrnc'>3/60 [  5%]</td><td align="right" class='awrnc'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>127,34074</td><td align="right" class='awrc'>2.80</td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>2.80</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (LGWR)</td><td align="right" class='awrc'>4/60 [  7%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,26754</td><td align="right" class='awrnc'>2.10</td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>2.10</td>
<td class='awrnc'>SYS</td><td class='awrnc'>oracle@mcracpo...le.com (LMS0)</td><td align="right" class='awrnc'>3/60 [  5%]</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9983"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9982"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>44.76</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>44.76</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9979"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>37.76</td><td align="right" class='awrc'>0.90</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td class='awrnc'>User I/O</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>18.18</td><td align="right" class='awrnc'>0.43</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>13.99</td><td align="right" class='awrc'>0.33</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>10.49</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block request</td><td class='awrc'>Cluster</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>5.59</td><td align="right" class='awrc'>0.13</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9985"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>37.76</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24913683&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.70</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>18.18</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;61&quot;,&quot;61&quot;</td><td align="right" class='awrnc'>4.20</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">db file parallel read</div></td><td align="right" class='awrc'><div class="hidden">18.18181818181818181818181818181818181818</div></td><td align="right" class='awrc'>&quot;1&quot;,&quot;58&quot;,&quot;58&quot;</td><td align="right" class='awrc'>2.10</td>
<td class='awrc'><div class="hidden">files</div></td><td class='awrc'><div class="hidden">blocks</div></td><td class='awrc'><div class="hidden">requests</div></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">db file parallel read</div></td><td align="right" class='awrnc'><div class="hidden">18.18181818181818181818181818181818181818</div></td><td align="right" class='awrnc'>&quot;1&quot;,&quot;29&quot;,&quot;29&quot;</td><td align="right" class='awrnc'>1.40</td>
<td class='awrnc'><div class="hidden">files</div></td><td class='awrnc'><div class="hidden">blocks</div></td><td class='awrnc'><div class="hidden">requests</div></td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>5.59</td><td align="right" class='awrc'>&quot;2&quot;,&quot;26425986&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.70</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>class#</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>4.20</td><td align="right" class='awrnc'>&quot;2&quot;,&quot;0&quot;,&quot;2147483647&quot;</td><td align="right" class='awrnc'>0.70</td>
<td class='awrnc'>requests</td><td class='awrnc'>interrupt</td><td class='awrnc'>timeout</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>2.80</td><td align="right" class='awrc'>&quot;2&quot;,&quot;32&quot;,&quot;2&quot;</td><td align="right" class='awrc'>0.70</td>
<td class='awrc'>files</td><td class='awrc'>blocks</td><td class='awrc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9978"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73402</td><td align="right" class='awrc'>33.57</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>18.88</td>
<td class='awrc'>USER1.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73402</div></td><td align="right" class='awrnc'><div class="hidden">33.56643356643356643356643356643356643357</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>11.19</td>
<td class='awrnc'><div class="hidden">USER1.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">73402</div></td><td align="right" class='awrc'><div class="hidden">33.56643356643356643356643356643356643357</div></td><td class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>2.80</td>
<td class='awrc'><div class="hidden">USER1.CF1 (TABLE)</div></td><td class='awrc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrnc'>73409</td><td align="right" class='awrnc'>33.57</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>18.88</td>
<td class='awrnc'>USER2.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">73409</div></td><td align="right" class='awrc'><div class="hidden">33.56643356643356643356643356643356643357</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>6.99</td>
<td class='awrc'><div class="hidden">USER2.CF1 (TABLE)</div></td><td class='awrc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73409</div></td><td align="right" class='awrnc'><div class="hidden">33.56643356643356643356643356643356643357</div></td><td class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>4.20</td>
<td class='awrnc'><div class="hidden">USER2.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9977"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>09:33:49   (1.2 min)</td><td align="right" class='awrc'>16</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>6.99</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">09:33:49   (1.2 min)</div></td><td align="right" class='awrnc'><div class="hidden">16</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>2.10</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">09:33:49   (1.2 min)</div></td><td align="right" class='awrc'><div class="hidden">16</div></td><td class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1.40</td></tr>
<tr><td align="right" class='awrnc'>09:35:00   (5.0 min)</td><td align="right" class='awrnc'>75</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>17.48</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">09:35:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">75</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>13.29</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">09:35:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">75</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>11.19</td></tr>
<tr><td align="right" class='awrc'>09:40:00   (3.9 min)</td><td align="right" class='awrc'>52</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>13.29</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">09:40:00   (3.9 min)</div></td><td align="right" class='awrnc'><div class="hidden">52</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>9.09</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">09:40:00   (3.9 min)</div></td><td align="right" class='awrc'><div class="hidden">52</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>6.29</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99994"></a>
<h2>ADDM Task ADDM:3393773525_63</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_63&apos;
	  -----------------------------------------

Analysis Period
---------------
AWR snapshot range from 62 to 63.
Time period starts at 08-FEB-20 09.33.49 AM
Time period ends at 08-FEB-20 09.43.52 AM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 1144 seconds.
The average number of active sessions was 1.9.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     1.9 | 100		  2
2  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  1.71 | 90.11	      2
3  Undersized SGA			     1.52 | 79.88	  1
4  Global Cache Messaging		     .34 | 17.95	  1
5  Global Cache Congestion		     .04 | 2.16 	  2


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 1.9 active sessions, 100% of total activity.
------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: SQL Tuning
   Estimated benefit is 1.05 active sessions, 55.17% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 7473 times and
      had an average elapsed time of 0.085 seconds.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER2.CF1&quot; with object ID 73409 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER1.CF1&quot; with object ID 73402 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      &quot;0sy7x6xzjg2yy&quot; are responsible for 53% of the database time spent on
      the UPDATE statement with SQL_ID &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 0sy7x6xzjg2yy.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := &apos;2&apos;;
	 v_update_pct PLS_INTEGER := &apos;15&apos;;
	 v_max_loop_iterations PLS_INTEGER := &apos;0&apos;;
	 v_seconds_to_run PLS_INTEGER := &apos;600&apos;;
	 v_scale PLS_INTEGER := &apos;1048576&apos;;
	 v_work_unit PLS_INTEGER := &apos;64&apos; ;
	 v_redo_stress	VARCHAR2(12) := &apos;LITE&apos;;
	 v_hot_schema_modulus PLS_INTEGER := &apos;0&apos;;
	 v_do_hotspot	VARCHAR(7) := &apos;FALSE&apos;;
	 v_hotspot_mb  NUMBER := &apos;8&apos;;
	 v_hotspot_offset_mb NUMBER := &apos;16&apos;;
	 v_hotspot_modulus  PLS_INTEGER := &apos;3&apos;;
	 v_sleep_modulus PLS_INTEGER := &apos;0&apos;;
	 v_sleep_min NUMBER := &apos;.1&apos;;
	 v_sleep_max NUMBER := &apos;.5&apos;;
	 v_scan_query_pct PLS_INTEGER := &apos;0&apos;;
	 v_obfuscate VARCHAR(5)  := &apos;FALSE&apos;;
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := &apos;ALTER SESSION SET CURRENT_SCHEMA = user&apos; ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations &gt; 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context(&apos;userenv&apos;,&apos;sid&apos;) from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,&apos;YYYYDDMMHH24MISSFFFF&apos;);
	 -- DBMS_RANDOM.seed (val =&gt; v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( &apos;step 1 &apos; || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE &apos;ALTER SESSION SET CURRENT_SCHEMA = user1&apos;;
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = &apos;TRUE&apos; ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( &apos;v_loop_cnt &apos; || v_loop_cnt || &apos; base &apos; ||
	 (v_hotspot_base  + v_work_unit + 1)  || &apos; zone &apos; || v_hotspot_blocks
	 ||  &apos;  Random block &apos; || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt;
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt &gt;= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) &gt;=	100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) &gt;=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we&apos;ve hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || &apos;|&apos; || v_total_time || &apos;|&apos; ||
	 v_total_cpu_tm || &apos;|&apos; || v_cpu_pct ;
	 END;

   Recommendation 2: SQL Tuning
   Estimated benefit is .85 active sessions, 44.83% of total activity.
   -------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 42415 times and
      had an average elapsed time of 0.011 seconds.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER1.CF1&quot; with object ID 73402 consumed
      53% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER2.CF1&quot; with object ID 73409 consumed
      46% of the database time spent on this SQL statement.
   Rationale
      Top level calls to execute the PL/SQL statement with SQL_ID
      &quot;078ab5pdvxx3c&quot; are responsible for 53% of the database time spent on
      the SELECT statement with SQL_ID &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID 078ab5pdvxx3c.
	 DECLARE
	 v_default_schema_number PLS_INTEGER := &apos;1&apos;;
	 v_update_pct PLS_INTEGER := &apos;15&apos;;
	 v_max_loop_iterations PLS_INTEGER := &apos;0&apos;;
	 v_seconds_to_run PLS_INTEGER := &apos;600&apos;;
	 v_scale PLS_INTEGER := &apos;1048576&apos;;
	 v_work_unit PLS_INTEGER := &apos;64&apos; ;
	 v_redo_stress	VARCHAR2(12) := &apos;LITE&apos;;
	 v_hot_schema_modulus PLS_INTEGER := &apos;0&apos;;
	 v_do_hotspot	VARCHAR(7) := &apos;FALSE&apos;;
	 v_hotspot_mb  NUMBER := &apos;8&apos;;
	 v_hotspot_offset_mb NUMBER := &apos;16&apos;;
	 v_hotspot_modulus  PLS_INTEGER := &apos;3&apos;;
	 v_sleep_modulus PLS_INTEGER := &apos;0&apos;;
	 v_sleep_min NUMBER := &apos;.1&apos;;
	 v_sleep_max NUMBER := &apos;.5&apos;;
	 v_scan_query_pct PLS_INTEGER := &apos;0&apos;;
	 v_obfuscate VARCHAR(5)  := &apos;FALSE&apos;;
	 v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) /
	 8192 ;
	 v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192
	 ;
	 v_num_tmp NUMBER := 0;
	 v_loop_cnt PLS_INTEGER := 0;
	 v_rowcnt PLS_INTEGER := 0;
	 v_updates_cnt PLS_INTEGER := 0;
	 v_selects_cnt PLS_INTEGER := 0;
	 v_random_access_queries_cnt PLS_INTEGER := 0;
	 v_scan_queries_cnt PLS_INTEGER := 0;
	 v_do_scan_query BOOLEAN :=FALSE;
	 v_scan_query_quota  BOOLEAN := FALSE;
	 v_scan_workload_only BOOLEAN := FALSE;
	 v_random_workload_only BOOLEAN := FALSE;
	 v_random_block PLS_INTEGER := 1;
	 v_tmp PLS_INTEGER;
	 v_now PLS_INTEGER;
	 v_brick_wall PLS_INTEGER;
	 v_begin_time PLS_INTEGER;
	 v_end_time PLS_INTEGER;
	 v_total_time PLS_INTEGER;
	 v_begin_cpu_tm PLS_INTEGER;
	 v_end_cpu_tm PLS_INTEGER;
	 v_total_cpu_tm PLS_INTEGER;
	 v_do_sleeps BOOLEAN := FALSE;
	 v_loop_control BOOLEAN := FALSE;
	 v_update_quota BOOLEAN := FALSE;
	 v_select_only_workload BOOLEAN := FALSE;
	 v_update_only_workload BOOLEAN := FALSE;
	 v_do_update BOOLEAN := FALSE;
	 v_do_hot_schema BOOLEAN := FALSE;
	 v_stop_immediate BOOLEAN := FALSE;
	 v_sharing_schema BOOLEAN := FALSE;
	 v_seed VARCHAR2(128);
	 v_home_schema_str VARCHAR2(80);
	 v_scratch VARCHAR2(200) ;
	 v_cpu_pct NUMBER(6,3);
	 v_my_serial NUMBER(16);
	 BEGIN
	 v_home_schema_str := &apos;ALTER SESSION SET CURRENT_SCHEMA = user&apos; ||
	 v_default_schema_number ;
	 EXECUTE IMMEDIATE v_home_schema_str;
	 IF ( v_hot_schema_modulus != 0 ) THEN
	 v_do_hot_schema := TRUE;
	 END IF;
	 IF ( v_sleep_modulus != 0 )	   THEN
	 v_do_sleeps := TRUE;
	 END IF;
	 IF ( v_max_loop_iterations &gt; 0 )  THEN
	 v_loop_control := TRUE ;
	 END IF;
	 IF ( v_update_pct = 0 )	   THEN
	 v_select_only_workload := TRUE;
	 END IF;
	 IF ( v_update_pct = 100 )	   THEN
	 v_update_only_workload := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 0 )
	 THEN
	 v_random_workload_only := TRUE;
	 END IF;
	 IF ( v_scan_query_pct = 100 )
	 THEN
	 v_scan_workload_only := TRUE;
	 END IF;
	 v_seconds_to_run := v_seconds_to_run * 100 ;
	 SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO
	 v_my_serial from v$session WHERE sid = ( select
	 sys_context(&apos;userenv&apos;,&apos;sid&apos;) from dual);
	 -- v_seed := TO_CHAR(v_my_serial) ||
	 TO_CHAR(SYSTIMESTAMP,&apos;YYYYDDMMHH24MISSFFFF&apos;);
	 -- DBMS_RANDOM.seed (val =&gt; v_seed);
	 v_begin_time := DBMS_UTILITY.GET_TIME();
	 v_now := v_begin_time ;
	 v_brick_wall := v_now + v_seconds_to_run ;
	 v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following WHILE loop is the master work loop control
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )  LOOP
	 IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
	 IF ( MOD( v_random_block, v_sleep_modulus ) = 0 ) THEN
	 v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min, v_sleep_max) , 2
	 );
	 -- dbms_output.put_line( &apos;step 1 &apos; || v_num_tmp  );
	 DBMS_LOCK.SLEEP(v_num_tmp);
	 END IF;
	 END IF;
	 IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot
	 Schema
	 IF ( MOD(v_loop_cnt, v_hot_schema_modulus) = 0 ) THEN
	 EXECUTE IMMEDIATE &apos;ALTER SESSION SET CURRENT_SCHEMA = user1&apos;;
	 v_sharing_schema := TRUE ;
	 ELSE
	 IF ( v_sharing_schema = TRUE ) THEN
	 EXECUTE IMMEDIATE v_home_schema_str;
	 v_sharing_schema := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 -- Choose the random block. The v_do_hotspot handler that follows can
	 override.
	 v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1, v_scale -
	 v_work_unit);
	 IF ( v_do_hotspot = &apos;TRUE&apos; ) AND ( MOD(v_loop_cnt, v_hotspot_modulus
	 ) = 0 ) THEN -- This section deals with Hot Spot
	 -- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base  + v_work_unit
	 + 1, v_hotspot_base + v_hotspot_blocks) ;
	 v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,
	 v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
	 -- dbms_output.put_line( &apos;v_loop_cnt &apos; || v_loop_cnt || &apos; base &apos; ||
	 (v_hotspot_base  + v_work_unit + 1)  || &apos; zone &apos; || v_hotspot_blocks
	 ||  &apos;  Random block &apos; || v_random_block  );
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The following section governs what the SQL execution will be
	 (UPDATE or SELECT)
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF  ( v_select_only_workload = TRUE ) THEN
	 -- handle case where user specified zero pct updates (a SELECT-only
	 workload)
	 v_do_update := FALSE;
	 v_update_quota := TRUE ;
	 ELSE
	 IF ( v_update_only_workload = TRUE ) THEN
	 -- handle case where user specified 100% updates
	 v_do_update := TRUE;
	 v_update_quota := FALSE;
	 ELSE
	 -- In this section we know we are not 100% SELECT, nor 100% UPDATES
	 -- Work out whether this loop iteration is a SELECT or UPDATE here:
	 IF ( v_update_quota = FALSE ) THEN
	 -- Handle case where user has set UPDATE_PCT to a valid value
	 --
	 -- We are doing updates during this run and quota has not been met
	 yet
	 -- We still vacillate until update quota has been met
	 IF ( MOD(v_random_block, 2) = 0 ) THEN
	 v_do_update := TRUE;
	 ELSE
	 v_do_update := FALSE;
	 END IF;
	 ELSE
	 -- UPDATE quota has been filled, force drain some SELECTs
	 v_do_update := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 -- The type of SQL is now determined...execute it in the following
	 section
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_do_update != TRUE ) THEN
	 --
	 -- Do a SELECT statement
	 -- Work out scan or random
	 IF  ( v_random_workload_only = TRUE ) THEN
	 -- handle case where user specified zero pct scan workload (SCAN_PCT
	 = 0)
	 v_do_scan_query := FALSE;
	 v_scan_query_quota := TRUE ;
	 ELSE
	 IF ( v_scan_workload_only = TRUE ) THEN
	 -- handle case where user specified 100% scan workload (SCAN_PCT =
	 100)
	 v_do_scan_query := TRUE;
	 v_scan_query_quota := FALSE;
	 ELSE
	 IF ( v_scan_query_quota = FALSE ) THEN
	 -- Handle case where user specified valid, non-zero, SCAN_PCT
	 -- IF ( MOD(v_random_block, 2) = 0 ) THEN
	 IF ( MOD(v_loop_cnt, 2) = 0 ) THEN
	 v_do_scan_query := TRUE;
	 ELSE
	 v_do_scan_query := FALSE;
	 END IF;
	 ELSE
	 -- Scan quota has been filled, force drain some random access SELECTS
	 v_do_scan_query := FALSE;
	 END IF;
	 END IF;
	 END IF;
	 IF ( v_do_scan_query != TRUE ) THEN
	 SELECT COUNT(c2) INTO v_rowcnt
	 FROM cf1
	 WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt;
	 v_random_block);
	 v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
	 ELSE
	 SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
	 v_scan_queries_cnt := v_scan_queries_cnt + 1;
	 IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
	 v_scan_query_quota := TRUE;
	 END IF;
	 END IF;
	 v_selects_cnt := v_selects_cnt + 1;   --increment the number of total
	 selects
	 ELSE
	 --
	 -- Do an UPDATE statement
	 --
	 v_my_serial := v_my_serial + v_loop_cnt ;
	 user1.slobupdate( v_random_block, v_work_unit, v_redo_stress,
	 v_my_serial, v_obfuscate);
	 --
	 -- Increment count of UPDATES and set UPDATE quota flag if needed
	 --
	 v_updates_cnt := v_updates_cnt + 1;
	 IF ( v_updates_cnt &gt;= v_update_pct ) THEN
	 v_update_quota := TRUE;
	 END IF;
	 END IF ;
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 --  At this point SQL has been executed. Finish this loop iteration
	 with some housekeeping.
	 ---------------------------------------------------------------------
	 -------------------------------------------------
	 IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt +
	 v_selects_cnt ) &gt;=	100 ) THEN
	 --
	 -- Not a SELECT-only workload, and the global quota (UPDATES to
	 SELECTS) is filled,
	 -- so reset flags and counters before continuing
	 --
	 v_update_quota := FALSE;
	 v_updates_cnt := 0;
	 v_selects_cnt := 0;
	 END IF;
	 IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt +
	 v_random_access_queries_cnt ) &gt;=  100 ) THEN
	 -- Not a random-only workload and global quota (RANDOM vs SCAN) is
	 filled,
	 -- so reset flags and counters
	 v_scan_query_quota := FALSE;
	 v_scan_queries_cnt := 0;
	 v_random_access_queries_cnt := 0;
	 END IF;
	 v_loop_cnt := v_loop_cnt + 1 ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;=
	 v_max_loop_iterations ) THEN
	 -- If this is a fixed-iteration count test cycle and we&apos;ve hit the
	 number of
	 -- iterations then set exit flag
	 v_stop_immediate := TRUE ;
	 END IF;
	 END LOOP;
	 v_end_time := v_now ;
	 v_now := DBMS_UTILITY.GET_TIME();
	 v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
	 v_total_time := v_end_time - v_begin_time ;
	 v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	 v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
	 v_scratch := v_default_schema_number || &apos;|&apos; || v_total_time || &apos;|&apos; ||
	 v_total_cpu_tm || &apos;|&apos; || v_cpu_pct ;
	 END;


Finding 2: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 1.71 active sessions, 90.11% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Segment Tuning
   Estimated benefit is .85 active sessions, 45.06% of total activity.
   -------------------------------------------------------------------
   Action
      Run &quot;Segment Advisor&quot; on TABLE &quot;USER1.CF1&quot; with object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Investigate application logic involving I/O on TABLE &quot;USER1.CF1&quot; with
      object ID 73402.
      Related Object
	 Database object with ID 73402.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 57% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1177720 physical reads, 173151 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .85 active sessions, 45.06% of total activity.
   -------------------------------------------------------------------
   Action
      Run &quot;Segment Advisor&quot; on TABLE &quot;USER2.CF1&quot; with object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Investigate application logic involving I/O on TABLE &quot;USER2.CF1&quot; with
      object ID 73409.
      Related Object
	 Database object with ID 73409.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 65% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans,
      1075845 physical reads, 161450 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 1.37 active sessions, 72.15% of total activity.


Finding 3: Undersized SGA
Impact is 1.52 active sessions, 79.88% of total activity.
---------------------------------------------------------
The SGA was inadequately sized in some instances, causing additional I/O or
hard parses.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Examine instance ADDM
   Estimated benefit is 1.52 active sessions, 79.88% of total activity.
   --------------------------------------------------------------------
   Action
      Increase the size of the SGA on affected instances. Check the ADDM
      analysis of affected instances for more details.


Finding 4: Global Cache Messaging
Impact is .34 active sessions, 17.95% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Application Analysis
   Estimated benefit is .34 active sessions, 17.95% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 43% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is .34 active sessions, 17.96% of total activity.


Finding 5: Global Cache Congestion
Impact is .04 active sessions, 2.16% of total activity.
-------------------------------------------------------
Global Cache Service Processes (LMSn) were not processing requests fast
enough.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_63

   Recommendation 1: Database Configuration
   Estimated benefit is .04 active sessions, 2.16% of total activity.
   ------------------------------------------------------------------
   Action
      Increase throughput of the Global Cache Service (LMSn) processes.
      Increase the number of Global Cache Service processes by increasing the
      value of the parameter &quot;gcs_server_processes&quot;. Alternatively, if the
      host is CPU bound consider increasing the OS priority of the Global
      Cache Service processes.
   Rationale
      The value of parameter &quot;gcs_server_processes&quot; was &quot;2&quot; during the
      analysis period.

   Recommendation 2: Database Configuration
   Estimated benefit is .04 active sessions, 2.16% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate cause of congestion on blocks received from remote instance
      &quot;p30db1&quot;.
   Rationale
      This problem is often related to CPU bottleneck, virtual memory paging
      or inappropriate LMSn process priority in the remote instance.

   Symptoms That Led to the Finding:
   ---------------------------------
      Inter-instance messaging was consuming significant database time.
      Impact is .34 active sessions, 17.95% of total activity.
	 Wait class &quot;Cluster&quot; was consuming significant database time.
	 Impact is .34 active sessions, 17.96% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    2	    p30db2  mcracpoc2.example.com  1.9		    99.82
    1	    p30db1  mcracpoc1.example.com  0		    .18

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

The database&apos;s maintenance windows were active during 100% of the analysis
period.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr_rac.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
NOTIFY  : 2020.02.08-09:44:03 : Compressing file: "awr.html".
NOTIFY  : 2020.02.08-09:44:03 : Compressing file: "awr_rac.html".
